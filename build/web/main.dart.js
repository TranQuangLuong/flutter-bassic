// Generated by dart2js (fast startup emitter, strong, trust primitives, omit checks, lax runtime type), the Dart to JavaScript compiler version: 2.13.4.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key))
        to[key] = from[key];
    }
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function setFunctionNamesIfNecessary(holders) {
    function t() {
    }
    ;
    if (typeof t.name == "string")
      return;
    for (var i = 0; i < holders.length; i++) {
      var holder = holders[i];
      var keys = Object.keys(holder);
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        var f = holder[key];
        if (typeof f == "function")
          f.name = key;
      }
    }
  }
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixin(cls, mixin) {
    mixinProperties(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        H.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel)
        holder[name] = initializer();
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel)
          H.throwLateInitializationError(name);
        holder[name] = value;
      }
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {
    return isIntercepted ? new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "(receiver) {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);" + "return new c(this, funcs[0], receiver, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null) : new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "() {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);" + "return new c(this, funcs[0], null, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null);
  }
  function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {
    var cache = null;
    return isStatic ? function() {
      if (cache === null)
        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;
      return cache;
    } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);
  }
  var typesOffset = 0;
  function installTearOff(container, getterName, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var funs = [];
    for (var i = 0; i < funsOrNames.length; i++) {
      var fun = funsOrNames[i];
      if (typeof fun == "string")
        fun = container[fun];
      fun.$callName = callNames[i];
      funs.push(fun);
    }
    var fun = funs[0];
    fun.$requiredArgCount = requiredParameterCount;
    fun.$defaultValues = optionalParameterDefaultValues;
    var reflectionInfo = funType;
    if (typeof reflectionInfo == "number")
      reflectionInfo += typesOffset;
    var name = funsOrNames[0];
    fun.$stubName = name;
    var getterFunction = tearOff(funs, applyIndex || 0, reflectionInfo, isStatic, name, isIntercepted);
    container[getterName] = getterFunction;
    if (isStatic)
      fun.$tearOff = getterFunction;
  }
  function installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixin, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, setFunctionNamesIfNecessary: setFunctionNamesIfNecessary, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  function getGlobalFromName(name) {
    for (var i = 0; i < holders.length; i++) {
      if (holders[i] == C)
        continue;
      if (holders[i][name])
        return holders[i][name];
    }
  }
  var C = {},
  H = {
    initializeEngine: function() {
      var t1 = {};
      if ($._engineInitialized)
        return;
      H._addUrlStrategyListener();
      P.registerExtension("ext.flutter.disassemble", new H.initializeEngine_closure());
      $._engineInitialized = true;
      $.$get$domRenderer();
      if ($.WebExperiments_instance == null)
        $.WebExperiments_instance = H.WebExperiments$_();
      t1.waitingForAnimation = false;
      $.scheduleFrameCallback = new H.initializeEngine_closure0(t1);
      if ($.Keyboard__instance == null)
        $.Keyboard__instance = H.Keyboard$_();
      if ($.MouseCursor__instance == null)
        $.MouseCursor__instance = new H.MouseCursor();
    },
    _addUrlStrategyListener: function() {
      self._flutter_web_set_location_strategy = P.allowInterop(new H._addUrlStrategyListener_closure());
      $._hotRestartListeners.push(new H._addUrlStrategyListener_closure0());
    },
    toMatrix32: function(matrix64) {
      var matrix32 = new Float32Array(16);
      matrix32[15] = matrix64[15];
      matrix32[14] = matrix64[14];
      matrix32[13] = matrix64[13];
      matrix32[12] = matrix64[12];
      matrix32[11] = matrix64[11];
      matrix32[10] = matrix64[10];
      matrix32[9] = matrix64[9];
      matrix32[8] = matrix64[8];
      matrix32[7] = matrix64[7];
      matrix32[6] = matrix64[6];
      matrix32[5] = matrix64[5];
      matrix32[4] = matrix64[4];
      matrix32[3] = matrix64[3];
      matrix32[2] = matrix64[2];
      matrix32[1] = matrix64[1];
      matrix32[0] = matrix64[0];
      return matrix32;
    },
    BitmapCanvas$: function(_bounds, renderStrategy, density) {
      var t1 = W._ElementFactoryProvider_createElement_tag("flt-canvas", null),
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_Element),
        t3 = H.EnginePlatformDispatcher_browserDevicePixelRatio(),
        t4 = _bounds.left,
        t5 = _bounds.right - t4,
        t6 = H.BitmapCanvas__widthToPhysical(t5),
        t7 = _bounds.top,
        t8 = _bounds.bottom - t7,
        t9 = H.BitmapCanvas__heightToPhysical(t8);
      t8 = new H._CanvasPool(H.BitmapCanvas__widthToPhysical(t5), H.BitmapCanvas__heightToPhysical(t8), density, H.setRuntimeTypeInfo([], type$.JSArray__SaveStackEntry), H.Matrix4$identity());
      t3 = new H.BitmapCanvas(_bounds, t1, t8, t2, t6, t9, t3, density, renderStrategy);
      t9 = t1.style;
      t9.position = "absolute";
      t3._canvasPositionX = C.JSNumber_methods.floor$0(t4) - 1;
      t3._canvasPositionY = C.JSNumber_methods.floor$0(t7) - 1;
      t3._updateRootElementTransform$0();
      t8._rootElement = type$.HtmlElement._as(t1);
      t3._setupInitialTransform$0();
      return t3;
    },
    BitmapCanvas__widthToPhysical: function(width) {
      return C.JSNumber_methods.ceil$0((width + 1) * H.EnginePlatformDispatcher_browserDevicePixelRatio()) + 2;
    },
    BitmapCanvas__heightToPhysical: function(height) {
      return C.JSNumber_methods.ceil$0((height + 1) * H.EnginePlatformDispatcher_browserDevicePixelRatio()) + 2;
    },
    _stringForBlendMode: function(blendMode) {
      if (blendMode == null)
        return null;
      switch (blendMode) {
        case C.BlendMode_3:
          return "source-over";
        case C.BlendMode_5:
          return "source-in";
        case C.BlendMode_7:
          return "source-out";
        case C.BlendMode_9:
          return "source-atop";
        case C.BlendMode_4:
          return "destination-over";
        case C.BlendMode_6:
          return "destination-in";
        case C.BlendMode_8:
          return "destination-out";
        case C.BlendMode_10:
          return "destination-atop";
        case C.BlendMode_12:
          return "lighten";
        case C.BlendMode_1:
          return "copy";
        case C.BlendMode_11:
          return "xor";
        case C.BlendMode_24:
        case C.BlendMode_13:
          return "multiply";
        case C.BlendMode_14:
          return "screen";
        case C.BlendMode_15:
          return "overlay";
        case C.BlendMode_16:
          return "darken";
        case C.BlendMode_17:
          return "lighten";
        case C.BlendMode_18:
          return "color-dodge";
        case C.BlendMode_19:
          return "color-burn";
        case C.BlendMode_20:
          return "hard-light";
        case C.BlendMode_21:
          return "soft-light";
        case C.BlendMode_22:
          return "difference";
        case C.BlendMode_23:
          return "exclusion";
        case C.BlendMode_25:
          return "hue";
        case C.BlendMode_26:
          return "saturation";
        case C.BlendMode_27:
          return "color";
        case C.BlendMode_28:
          return "luminosity";
        default:
          throw H.wrapException(P.UnimplementedError$("Flutter Web does not support the blend mode: " + blendMode.toString$0(0)));
      }
    },
    _stringForStrokeCap: function(strokeCap) {
      switch (strokeCap) {
        case C.StrokeCap_0:
          return "butt";
        case C.StrokeCap_1:
          return "round";
        case C.StrokeCap_2:
        default:
          return "square";
      }
    },
    _stringForStrokeJoin: function(strokeJoin) {
      switch (strokeJoin) {
        case C.StrokeJoin_1:
          return "round";
        case C.StrokeJoin_2:
          return "bevel";
        case C.StrokeJoin_0:
        default:
          return "miter";
      }
    },
    _clipContent: function(clipStack, $content, offset, currentTransform) {
      var root, curElement, clipIndex, entry, t2, newElement, t3, rect, newClipTransform, transformKind, clipOffsetX, clipOffsetY, newClipTransform0, t4, t5, value, borderRadius, t6, reverseTransformDiv,
        _s8_ = "absolute",
        _s16_ = "transform-origin",
        _s9_ = "transform",
        _s15_ = "transform-style",
        t1 = type$.JSArray_Element,
        clipDefs = H.setRuntimeTypeInfo([], t1),
        len = clipStack.length;
      for (root = null, curElement = null, clipIndex = 0; clipIndex < len; ++clipIndex, curElement = reverseTransformDiv) {
        entry = clipStack[clipIndex];
        t2 = document;
        newElement = t2.createElement("div");
        t3 = newElement.style;
        t3.position = _s8_;
        t3 = $.___browserEngine;
        if (t3 == null) {
          t3 = H.detectBrowserEngineByVendorAgent(window.navigator.vendor, window.navigator.userAgent.toLowerCase());
          if ($.___browserEngine == null)
            $.___browserEngine = t3;
          else
            t3 = H.throwExpression(H.LateError$fieldADI("_browserEngine"));
        }
        if (t3 === C.BrowserEngine_1) {
          t3 = newElement.style;
          t3.zIndex = "0";
        }
        if (root == null)
          root = newElement;
        else {
          $.$get$domRenderer();
          curElement.appendChild(newElement);
        }
        rect = entry.rect;
        newClipTransform = entry.currentTransform;
        t3 = newClipTransform.__engine$_m4storage;
        transformKind = H.transformKindOf(t3);
        if (rect != null) {
          clipOffsetX = rect.left;
          clipOffsetY = rect.top;
          t3 = new Float32Array(16);
          newClipTransform0 = new H.Matrix40(t3);
          newClipTransform0.setFrom$1(newClipTransform);
          newClipTransform0.translate$2(0, clipOffsetX, clipOffsetY);
          t4 = newElement.style;
          t4.overflow = "hidden";
          t5 = H.S(rect.right - clipOffsetX) + "px";
          t4.width = t5;
          t5 = H.S(rect.bottom - clipOffsetY) + "px";
          t4.height = t5;
          t4 = newElement.style;
          t5 = C.CssStyleDeclaration_methods._browserPropertyName$1(t4, _s16_);
          t4.setProperty(t5, "0 0 0", "");
          value = H.float64ListToCssTransform(t3);
          t3 = C.CssStyleDeclaration_methods._browserPropertyName$1(t4, _s9_);
          t4.setProperty(t3, value, "");
          newClipTransform = newClipTransform0;
        } else {
          t4 = entry.rrect;
          if (t4 != null) {
            borderRadius = H.S(t4.tlRadiusX) + "px " + H.S(t4.trRadiusX) + "px " + H.S(t4.brRadiusX) + "px " + H.S(t4.blRadiusX) + "px";
            clipOffsetX = t4.left;
            clipOffsetY = t4.top;
            t3 = new Float32Array(16);
            newClipTransform0 = new H.Matrix40(t3);
            newClipTransform0.setFrom$1(newClipTransform);
            newClipTransform0.translate$2(0, clipOffsetX, clipOffsetY);
            t5 = newElement.style;
            t6 = C.CssStyleDeclaration_methods._browserPropertyName$1(t5, "border-radius");
            t5.setProperty(t6, borderRadius, "");
            t5.overflow = "hidden";
            t6 = H.S(t4.right - clipOffsetX) + "px";
            t5.width = t6;
            t4 = H.S(t4.bottom - clipOffsetY) + "px";
            t5.height = t4;
            t4 = newElement.style;
            t5 = C.CssStyleDeclaration_methods._browserPropertyName$1(t4, _s16_);
            t4.setProperty(t5, "0 0 0", "");
            value = H.float64ListToCssTransform(t3);
            t3 = C.CssStyleDeclaration_methods._browserPropertyName$1(t4, _s9_);
            t4.setProperty(t3, value, "");
            newClipTransform = newClipTransform0;
          } else {
            t4 = entry.path;
            if (t4 != null) {
              t5 = newElement.style;
              value = H.float64ListToCssTransform(t3);
              t3 = C.CssStyleDeclaration_methods._browserPropertyName$1(t5, _s9_);
              t5.setProperty(t3, value, "");
              t3 = C.CssStyleDeclaration_methods._browserPropertyName$1(t5, _s16_);
              t5.setProperty(t3, "0 0 0", "");
              clipDefs.push(W.Element_Element$html(H.createSvgClipDef(newElement, t4), new H._NullTreeSanitizer(), null));
            }
          }
        }
        reverseTransformDiv = t2.createElement("div");
        t2 = reverseTransformDiv.style;
        t2.position = _s8_;
        t2 = new Float32Array(16);
        t3 = new H.Matrix40(t2);
        t3.setFrom$1(newClipTransform);
        t3.copyInverse$1(t3);
        t3 = reverseTransformDiv.style;
        t4 = C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s16_);
        t3.setProperty(t4, "0 0 0", "");
        value = H.float64ListToCssTransform(t2);
        t2 = C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s9_);
        t3.setProperty(t2, value, "");
        if (transformKind === C.TransformKind_2) {
          t2 = newElement.style;
          t3 = C.CssStyleDeclaration_methods._browserPropertyName$1(t2, _s15_);
          t2.setProperty(t3, "preserve-3d", "");
          t2 = reverseTransformDiv.style;
          t3 = C.CssStyleDeclaration_methods._browserPropertyName$1(t2, _s15_);
          t2.setProperty(t3, "preserve-3d", "");
        }
        newElement.appendChild(reverseTransformDiv);
      }
      t2 = root.style;
      t2.position = _s8_;
      $.$get$domRenderer();
      curElement.appendChild($content);
      H.setElementTransform($content, H.transformWithOffset(currentTransform, offset).__engine$_m4storage);
      t1 = H.setRuntimeTypeInfo([root], t1);
      C.JSArray_methods.addAll$1(t1, clipDefs);
      return t1;
    },
    _maskFilterToCanvasFilter: function(maskFilter) {
      var t1, t2;
      if (maskFilter != null) {
        t1 = maskFilter._sigma;
        t2 = $.$get$window()._debugDevicePixelRatio;
        return "blur(" + H.S(t1 * (t2 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t2)) + "px)";
      } else
        return "none";
    },
    _browserEngine: function() {
      var t1 = $.___browserEngine;
      if (t1 == null) {
        t1 = H.detectBrowserEngineByVendorAgent(window.navigator.vendor, window.navigator.userAgent.toLowerCase());
        if ($.___browserEngine == null)
          $.___browserEngine = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("_browserEngine"));
      }
      return t1;
    },
    detectBrowserEngineByVendorAgent: function(vendor, agent) {
      var exp;
      if (vendor === "Google Inc.") {
        exp = P.RegExp_RegExp("SAMSUNG|SGH-[I|N|T]|GT-[I|N]|SM-[A|N|P|T|Z]|SHV-E|SCH-[I|J|R|S]|SPH-L", true);
        if (exp._nativeRegExp.test(agent.toUpperCase()))
          return C.BrowserEngine_5;
        return C.BrowserEngine_0;
      } else if (vendor === "Apple Computer, Inc.")
        return C.BrowserEngine_1;
      else if (C.JSString_methods.contains$1(agent, "edge/"))
        return C.BrowserEngine_3;
      else if (C.JSString_methods.contains$1(agent, "Edg/"))
        return C.BrowserEngine_0;
      else if (C.JSString_methods.contains$1(agent, "trident/7.0"))
        return C.BrowserEngine_4;
      else if (vendor === "" && C.JSString_methods.contains$1(agent, "firefox"))
        return C.BrowserEngine_2;
      P.print("WARNING: failed to detect current browser engine.");
      return C.BrowserEngine_6;
    },
    _operatingSystem: function() {
      var t1 = $.___operatingSystem;
      if (t1 == null) {
        t1 = H._detectOperatingSystem();
        if ($.___operatingSystem == null)
          $.___operatingSystem = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("_operatingSystem"));
      }
      return t1;
    },
    _detectOperatingSystem: function() {
      var userAgent,
        t1 = window.navigator.platform;
      t1.toString;
      userAgent = window.navigator.userAgent;
      if (C.JSString_methods.startsWith$1(t1, "Mac"))
        return C.OperatingSystem_4;
      else if (C.JSString_methods.contains$1(t1.toLowerCase(), "iphone") || C.JSString_methods.contains$1(t1.toLowerCase(), "ipad") || C.JSString_methods.contains$1(t1.toLowerCase(), "ipod"))
        return C.OperatingSystem_0;
      else if (C.JSString_methods.contains$1(userAgent, "Android"))
        return C.OperatingSystem_1;
      else if (C.JSString_methods.startsWith$1(t1, "Linux"))
        return C.OperatingSystem_2;
      else if (C.JSString_methods.startsWith$1(t1, "Win"))
        return C.OperatingSystem_3;
      else
        return C.OperatingSystem_5;
    },
    _detectWebGLVersion: function() {
      var canvas = W.CanvasElement_CanvasElement(1, 1);
      if (C.CanvasElement_methods.getContext$1(canvas, "webgl2") != null)
        return 2;
      if (C.CanvasElement_methods.getContext$1(canvas, "webgl") != null)
        return 1;
      return -1;
    },
    canvasKit: function() {
      var t1 = $.__canvasKit;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t1;
    },
    toSkMatrixFromFloat32: function(matrix4) {
      var i, matrix4Index,
        skMatrix = new Float32Array(9);
      for (i = 0; i < 9; ++i) {
        matrix4Index = C.List_yXZ[i];
        if (matrix4Index < 16)
          skMatrix[i] = matrix4[matrix4Index];
        else
          skMatrix[i] = 0;
      }
      return skMatrix;
    },
    toSkPoint: function(offset) {
      var point = new Float32Array(2);
      point[0] = offset._dx;
      point[1] = offset._dy;
      return point;
    },
    toSkColorStops: function(colorStops) {
      var t1 = $.$get$_kDefaultSkColorStops();
      return t1;
    },
    toSkRect: function(rect) {
      var skRect = new Float32Array(4);
      skRect[0] = rect.left;
      skRect[1] = rect.top;
      skRect[2] = rect.right;
      skRect[3] = rect.bottom;
      return skRect;
    },
    fromSkRect: function(skRect) {
      return new P.Rect(skRect[0], skRect[1], skRect[2], skRect[3]);
    },
    toSkRRect: function(rrect) {
      var skRRect = new Float32Array(12);
      skRRect[0] = rrect.left;
      skRRect[1] = rrect.top;
      skRRect[2] = rrect.right;
      skRRect[3] = rrect.bottom;
      skRRect[4] = rrect.tlRadiusX;
      skRRect[5] = rrect.tlRadiusY;
      skRRect[6] = rrect.trRadiusX;
      skRRect[7] = rrect.trRadiusY;
      skRRect[8] = rrect.brRadiusX;
      skRRect[9] = rrect.brRadiusY;
      skRRect[10] = rrect.blRadiusX;
      skRRect[11] = rrect.blRadiusY;
      return skRRect;
    },
    toFlatColors: function(colors) {
      var i,
        result = new Uint32Array(2);
      for (i = 0; i < 2; ++i)
        result[i] = colors[i].value;
      return result;
    },
    SkParagraphStyleProperties$: function(receiver) {
      return new H.SkParagraphStyleProperties();
    },
    SkTextStyleProperties$: function(receiver) {
      return new H.SkTextStyleProperties();
    },
    SkStrutStyleProperties$: function(receiver) {
      return new H.SkStrutStyleProperties();
    },
    SkFontStyle$: function(receiver) {
      return new H.SkFontStyle();
    },
    ProductionCollector$: function() {
      var t1 = new H.ProductionCollector(H.setRuntimeTypeInfo([], type$.JSArray_SkDeletable));
      t1.ProductionCollector$0();
      return t1;
    },
    Mutator$transform: function(matrix) {
      var _null = null;
      return new H.Mutator(C.MutatorType_3, _null, _null, _null, matrix, _null);
    },
    FontFallbackData_createNotoFontTree: function() {
      var t2, _i, font, t3, t4, _i0, range,
        t1 = type$.NotoFont,
        ranges = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_CodeunitRange);
      for (t2 = $.$get$_notoFonts(), _i = 0; _i < 25; ++_i) {
        font = t2[_i];
        font._decodingCompleter = font.resolvedFont = null;
        for (t3 = font.approximateUnicodeRanges, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0) {
          range = t3[_i0];
          J.add$1$ax(ranges.putIfAbsent$2(0, font, new H.FontFallbackData_createNotoFontTree_closure()), range);
        }
      }
      return H.IntervalTree_IntervalTree$createFromRanges(ranges, t1);
    },
    findFontsForMissingCodeunits: function(codeUnits) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, fonts, t2, coveredCodeUnits, missingCodeUnits, t3, t4, t5, _i, codeUnit, results, unmatchedCodeUnits, resolvedFonts, t6, t7, t1;
      var $async$findFontsForMissingCodeunits = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$FontFallbackData__instance();
              if (C.JSArray_methods.every$1(codeUnits, new H.findFontsForMissingCodeunits_closure(t1))) {
                // goto return
                $async$goto = 1;
                break;
              }
              fonts = P.LinkedHashSet_LinkedHashSet$_empty(type$.NotoFont);
              t2 = type$.int;
              coveredCodeUnits = P.LinkedHashSet_LinkedHashSet$_empty(t2);
              missingCodeUnits = P.LinkedHashSet_LinkedHashSet$_empty(t2);
              for (t3 = codeUnits.length, t4 = t1.notoTree, t5 = t4.$ti._eval$1("JSArray<1>"), t4 = t4.root, _i = 0; _i < codeUnits.length; codeUnits.length === t3 || (0, H.throwConcurrentModificationError)(codeUnits), ++_i) {
                codeUnit = codeUnits[_i];
                results = H.setRuntimeTypeInfo([], t5);
                t4.searchForPoint$2(codeUnit, results);
                fonts.addAll$1(0, results);
                if (results.length !== 0)
                  coveredCodeUnits.add$1(0, codeUnit);
                else
                  missingCodeUnits.add$1(0, codeUnit);
              }
              t3 = P._LinkedHashSetIterator$(fonts, fonts._collection$_modifications), t4 = H._instanceType(t3)._precomputed1;
            case 3:
              // for condition
              if (!t3.moveNext$0()) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return P._asyncAwait(t4._as(t3._collection$_current).ensureResolved$0(), $async$findFontsForMissingCodeunits);
            case 5:
              // returning from await.
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              unmatchedCodeUnits = P.LinkedHashSet_LinkedHashSet$from(coveredCodeUnits, t2);
              fonts = H.findMinimumFontsForCodeUnits(unmatchedCodeUnits, fonts);
              resolvedFonts = P.LinkedHashSet_LinkedHashSet$_empty(type$._ResolvedNotoSubset);
              for (t2 = P._LinkedHashSetIterator$(coveredCodeUnits, coveredCodeUnits._collection$_modifications), t3 = H._instanceType(t2)._precomputed1; t2.moveNext$0();) {
                t4 = t3._as(t2._collection$_current);
                for (t5 = new P._LinkedHashSetIterator(fonts, fonts._collection$_modifications), t5._collection$_cell = fonts._collection$_first, t6 = H._instanceType(t5)._precomputed1; t5.moveNext$0();) {
                  t7 = t6._as(t5._collection$_current).resolvedFont;
                  if (t7 == null)
                    continue;
                  t7 = t7.tree;
                  results = H.setRuntimeTypeInfo([], t7.$ti._eval$1("JSArray<1>"));
                  t7.root.searchForPoint$2(t4, results);
                  resolvedFonts.addAll$1(0, results);
                }
              }
              for (t2 = P._LinkedHashSetIterator$(resolvedFonts, resolvedFonts._collection$_modifications), t3 = H._instanceType(t2)._precomputed1; t2.moveNext$0();) {
                t4 = t3._as(t2._collection$_current);
                $.$get$notoDownloadQueue().add$1(0, t4);
              }
              if (missingCodeUnits._collection$_length !== 0 || unmatchedCodeUnits._collection$_length !== 0)
                if (!t1.registeredSymbolsAndEmoji)
                  H._registerSymbolsAndEmoji();
                else {
                  t2 = $.$get$notoDownloadQueue();
                  t3 = t2.pendingSubsets;
                  if (!(t3.get$isNotEmpty(t3) || t2._fontsLoading != null)) {
                    $.$get$printWarning().call$1("Could not find a set of Noto fonts to display all missing characters. Please add a font asset for the missing characters. See: https://flutter.dev/docs/cookbook/design/fonts");
                    t1.codeUnitsWithNoKnownFont.addAll$1(0, missingCodeUnits);
                  }
                }
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$findFontsForMissingCodeunits, $async$completer);
    },
    _makeResolvedNotoFontFromCss: function(css, $name) {
      var t1, t2, fontFaceUnicodeRanges, fontFaceUrl, resolvingFontFace, t3, urlStart, rawRanges, _i, startEnd, rangeValue, startRange, endRange, rangesMap, subset, t4, _i0, range, _null = null,
        _s34_ = "Unable to parse Google Fonts CSS: ",
        subsets = H.setRuntimeTypeInfo([], type$.JSArray__ResolvedNotoSubset);
      for (t1 = new P._SyncStarIterator(P.LineSplitter_split(css)._outerHelper()), t2 = type$.JSArray_CodeunitRange, fontFaceUnicodeRanges = _null, fontFaceUrl = fontFaceUnicodeRanges, resolvingFontFace = false; t1.moveNext$0();) {
        t3 = t1.get$current(t1);
        if (!resolvingFontFace) {
          if (t3 !== "@font-face {")
            continue;
          resolvingFontFace = true;
        } else if (C.JSString_methods.startsWith$1(t3, "  src:")) {
          urlStart = C.JSString_methods.indexOf$1(t3, "url(");
          if (urlStart === -1) {
            $.$get$printWarning().call$1("Unable to resolve Noto font URL: " + t3);
            return _null;
          }
          fontFaceUrl = C.JSString_methods.substring$2(t3, urlStart + 4, C.JSString_methods.indexOf$1(t3, ")"));
          resolvingFontFace = true;
        } else if (C.JSString_methods.startsWith$1(t3, "  unicode-range:")) {
          fontFaceUnicodeRanges = H.setRuntimeTypeInfo([], t2);
          rawRanges = C.JSString_methods.substring$2(t3, 17, t3.length - 1).split(", ");
          for (t3 = rawRanges.length, _i = 0; _i < t3; ++_i) {
            startEnd = J.split$1$s(rawRanges[_i], "-");
            if (startEnd.length === 1) {
              rangeValue = P.int_parse(C.JSString_methods.substring$1(C.JSArray_methods.get$single(startEnd), 2), 16);
              fontFaceUnicodeRanges.push(new H.CodeunitRange(rangeValue, rangeValue));
            } else {
              startRange = startEnd[0];
              endRange = startEnd[1];
              fontFaceUnicodeRanges.push(new H.CodeunitRange(P.int_parse(C.JSString_methods.substring$1(startRange, 2), 16), P.int_parse(endRange, 16)));
            }
          }
          resolvingFontFace = true;
        } else {
          if (t3 === "}") {
            if (fontFaceUrl == null || fontFaceUnicodeRanges == null) {
              $.$get$printWarning().call$1(_s34_ + css);
              return _null;
            }
            subsets.push(new H._ResolvedNotoSubset(fontFaceUrl, $name, fontFaceUnicodeRanges));
          } else
            continue;
          resolvingFontFace = false;
        }
      }
      if (resolvingFontFace) {
        $.$get$printWarning().call$1(_s34_ + css);
        return _null;
      }
      t1 = type$._ResolvedNotoSubset;
      rangesMap = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_CodeunitRange);
      for (t2 = subsets.length, _i = 0; _i < subsets.length; subsets.length === t2 || (0, H.throwConcurrentModificationError)(subsets), ++_i) {
        subset = subsets[_i];
        for (t3 = subset.ranges, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0) {
          range = t3[_i0];
          J.add$1$ax(rangesMap.putIfAbsent$2(0, subset, new H._makeResolvedNotoFontFromCss_closure()), range);
        }
      }
      if (rangesMap.get$isEmpty(rangesMap)) {
        $.$get$printWarning().call$1("Parsed Google Fonts CSS was empty: " + css);
        return _null;
      }
      return new H._ResolvedNotoFont($name, H.IntervalTree_IntervalTree$createFromRanges(rangesMap, t1));
    },
    _registerSymbolsAndEmoji: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, symbolsCss, emojiCss, symbolsFontUrl, emojiFontUrl, t1;
      var $async$_registerSymbolsAndEmoji = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$FontFallbackData__instance();
              if (t1.registeredSymbolsAndEmoji) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1.registeredSymbolsAndEmoji = true;
              $async$goto = 3;
              return P._asyncAwait($.$get$notoDownloadQueue().downloader.downloadAsString$1("https://fonts.googleapis.com/css2?family=Noto+Sans+Symbols"), $async$_registerSymbolsAndEmoji);
            case 3:
              // returning from await.
              symbolsCss = $async$result;
              $async$goto = 4;
              return P._asyncAwait($.$get$notoDownloadQueue().downloader.downloadAsString$1("https://fonts.googleapis.com/css2?family=Noto+Color+Emoji+Compat"), $async$_registerSymbolsAndEmoji);
            case 4:
              // returning from await.
              emojiCss = $async$result;
              t1 = new H._registerSymbolsAndEmoji_extractUrlFromCss();
              symbolsFontUrl = t1.call$1(symbolsCss);
              emojiFontUrl = t1.call$1(emojiCss);
              if (symbolsFontUrl != null)
                $.$get$notoDownloadQueue().add$1(0, new H._ResolvedNotoSubset(symbolsFontUrl, "Noto Sans Symbols", C.List_empty2));
              else
                $.$get$printWarning().call$1("Error parsing CSS for Noto Symbols font.");
              if (emojiFontUrl != null)
                $.$get$notoDownloadQueue().add$1(0, new H._ResolvedNotoSubset(emojiFontUrl, "Noto Color Emoji Compat", C.List_empty2));
              else
                $.$get$printWarning().call$1("Error parsing CSS for Noto Emoji font.");
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_registerSymbolsAndEmoji, $async$completer);
    },
    findMinimumFontsForCodeUnits: function(codeUnits, fonts) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _box_0, t10, t11, maxCodeUnitsCovered, t12, t13, t14, codeUnitsCovered, t15, t16,
        minimumFonts = P.LinkedHashSet_LinkedHashSet$_empty(type$.NotoFont),
        bestFonts = H.setRuntimeTypeInfo([], type$.JSArray_NotoFont),
        t1 = window.navigator,
        language = t1.language || t1.userLanguage;
      for (t1 = language === "ja", t2 = language === "zh-HK", t3 = language !== "zh-Hant", t4 = language !== "zh-Hans", t5 = language !== "zh-CN", t6 = language !== "zh-SG", t7 = language === "zh-MY", t8 = language !== "zh-TW", t9 = language === "zh-MO"; codeUnits._collection$_length !== 0;) {
        _box_0 = {};
        C.JSArray_methods.set$length(bestFonts, 0);
        for (t10 = new P._LinkedHashSetIterator(fonts, fonts._collection$_modifications), t10._collection$_cell = fonts._collection$_first, t11 = H._instanceType(t10)._precomputed1, maxCodeUnitsCovered = 0; t10.moveNext$0();) {
          t12 = t11._as(t10._collection$_current);
          for (t13 = new P._LinkedHashSetIterator(codeUnits, codeUnits._collection$_modifications), t13._collection$_cell = codeUnits._collection$_first, t14 = H._instanceType(t13)._precomputed1, codeUnitsCovered = 0; t13.moveNext$0();) {
            t15 = t14._as(t13._collection$_current);
            t16 = t12.resolvedFont;
            if ((t16 == null ? null : t16.tree.root.containsDeep$1(t15)) === true)
              ++codeUnitsCovered;
          }
          if (codeUnitsCovered > maxCodeUnitsCovered) {
            C.JSArray_methods.set$length(bestFonts, 0);
            bestFonts.push(t12);
            maxCodeUnitsCovered = codeUnitsCovered;
          } else if (codeUnitsCovered === maxCodeUnitsCovered)
            bestFonts.push(t12);
        }
        if (maxCodeUnitsCovered === 0)
          break;
        _box_0.bestFont = C.JSArray_methods.get$first(bestFonts);
        if (bestFonts.length > 1)
          if (C.JSArray_methods.every$1(bestFonts, new H.findMinimumFontsForCodeUnits_closure()))
            if (!t4 || !t5 || !t6 || t7) {
              if (C.JSArray_methods.contains$1(bestFonts, $.$get$_notoSansSC()))
                _box_0.bestFont = $.$get$_notoSansSC();
            } else if (!t3 || !t8 || t9) {
              if (C.JSArray_methods.contains$1(bestFonts, $.$get$_notoSansTC()))
                _box_0.bestFont = $.$get$_notoSansTC();
            } else if (t2) {
              if (C.JSArray_methods.contains$1(bestFonts, $.$get$_notoSansHK()))
                _box_0.bestFont = $.$get$_notoSansHK();
            } else if (t1)
              if (C.JSArray_methods.contains$1(bestFonts, $.$get$_notoSansJP()))
                _box_0.bestFont = $.$get$_notoSansJP();
        codeUnits._filterWhere$2(new H.findMinimumFontsForCodeUnits_closure0(_box_0), true);
        minimumFonts.addAll$1(0, bestFonts);
      }
      return minimumFonts;
    },
    NotoFont$: function($name, approximateUnicodeRanges) {
      return new H.NotoFont($name, approximateUnicodeRanges);
    },
    CodeunitRange$: function(start, end) {
      return new H.CodeunitRange(start, end);
    },
    _RegisteredFont$: function(bytes, family, typeface) {
      J.getGlyphBounds$3$x(new self.window.flutterCanvasKit.Font(typeface), H.setRuntimeTypeInfo([0], type$.JSArray_int), null, null);
      return new H._RegisteredFont(family, bytes, typeface);
    },
    _detectRenderer: function() {
      if (self.window.flutterWebRenderer != null) {
        var t1 = self.window.flutterWebRenderer;
        t1.toString;
        return J.$eq$(t1, "canvaskit");
      }
      t1 = H._operatingSystem();
      return J.containsKey$1$x(C.Set_m536._collection$_map, t1);
    },
    initializeCanvasKit: function() {
      var t3, t4, t1 = {},
        t2 = new P._Future($.Zone__current, type$._Future_void);
      t1._loadSubscription = null;
      t3 = $.$get$domRenderer();
      t4 = t3._canvasKitScript;
      t4.toString;
      new H.initializeCanvasKit__loadSubscription_set(t1).call$1(W._EventStreamSubscription$(t4, "load", new H.initializeCanvasKit_closure(new H.initializeCanvasKit__loadSubscription_get(t1), new P._AsyncCompleter(t2, type$._AsyncCompleter_void)), false, type$._ElementEventStreamImpl_Event._precomputed1));
      t1 = W._ElementFactoryProvider_createElement_tag("flt-scene", null);
      $.skiaSceneHost = t1;
      t3.renderScene$1(t1);
      return t2;
    },
    IntervalTree_IntervalTree$createFromRanges: function(rangesMap, $T) {
      var t1,
        intervals = H.setRuntimeTypeInfo([], $T._eval$1("JSArray<IntervalTreeNode<0>>"));
      rangesMap.forEach$1(0, new H.IntervalTree_IntervalTree$createFromRanges_closure(intervals, $T));
      C.JSArray_methods.sort$1(intervals, new H.IntervalTree_IntervalTree$createFromRanges_closure0($T));
      t1 = new H.IntervalTree_IntervalTree$createFromRanges__makeBalancedTree($T).call$1(intervals);
      t1.toString;
      new H.IntervalTree_IntervalTree$createFromRanges__computeHigh($T).call$1(t1);
      return new H.IntervalTree(t1, $T._eval$1("IntervalTree<0>"));
    },
    CkPaint$: function() {
      var t1 = new H.CkPaint(C.BlendMode_3, C.PaintingStyle_0, C.Color_4278190080);
      t1.ManagedSkiaObject$1(null, type$.SkPaint);
      return t1;
    },
    CkPath$_fromSkPath: function(skPath, _fillType) {
      var t2, t3,
        t1 = new H.CkPath(_fillType);
      t1.ManagedSkiaObject$1(skPath, type$.SkPath);
      t2 = t1.get$skiaObject();
      t3 = t1._fillType;
      J.setFillType$1$x(t2, $.$get$_skFillTypes()[t3.index]);
      return t1;
    },
    SkiaObjects_registerCleanupCallback: function() {
      if ($.SkiaObjects__addedCleanupCallback)
        return;
      $.$get$EnginePlatformDispatcher__instance().get$rasterizer()._postFrameCallbacks.push(H._engine_SkiaObjects_postFrameCleanUp$closure());
      $.SkiaObjects__addedCleanupCallback = true;
    },
    SkiaObjects_markCacheForResize: function(cache) {
      H.SkiaObjects_registerCleanupCallback();
      if (C.JSArray_methods.contains$1($.SkiaObjects_cachesToResize, cache))
        return;
      $.SkiaObjects_cachesToResize.push(cache);
    },
    SkiaObjects_postFrameCleanUp: function() {
      var i, object;
      if ($.SkiaObjects_resurrectableObjects.length === 0 && $.SkiaObjects_cachesToResize.length === 0)
        return;
      for (i = 0; i < $.SkiaObjects_resurrectableObjects.length; ++i) {
        object = $.SkiaObjects_resurrectableObjects[i];
        object.delete$0(0);
        object.rawSkiaObject = null;
      }
      C.JSArray_methods.set$length($.SkiaObjects_resurrectableObjects, 0);
      for (i = 0; i < $.SkiaObjects_cachesToResize.length; ++i)
        $.SkiaObjects_cachesToResize[i].resize$0(0);
      C.JSArray_methods.set$length($.SkiaObjects_cachesToResize, 0);
    },
    CkTextStyle_CkTextStyle: function(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      return new H.CkTextStyle(color, decoration, decorationColor, decorationStyle, decorationThickness, fontWeight, fontStyle, textBaseline, fontFamily, fontFamilyFallback, fontSize, letterSpacing, wordSpacing, height, locale, background, foreground, shadows, fontFeatures);
    },
    toSkFontStyle: function(fontWeight, fontStyle) {
      var style = H.SkFontStyle$(null);
      if (fontWeight != null)
        style.weight = $.$get$_skFontWeights()[fontWeight.index];
      return style;
    },
    CkParagraphBuilder$: function(style) {
      var t2, t3, t4, _null = null,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray__ParagraphCommand);
      type$.CkParagraphStyle._as(style);
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_double);
      t3 = H.setRuntimeTypeInfo([], type$.JSArray_CkTextStyle);
      t4 = $.__canvasKit;
      t4 = J.MakeFromFontProvider$2$x(J.get$ParagraphBuilder$x(t4 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t4), style.skParagraphStyle, $._skiaFontCollection.fontProvider);
      t3.push(H.CkTextStyle_CkTextStyle(_null, _null, _null, _null, _null, _null, style._fontFamily, _null, _null, style._fontSize, style._fontStyle, style._fontWeight, _null, _null, _null, _null, _null, _null, _null));
      return new H.CkParagraphBuilder(t4, style, t1, t2, t3);
    },
    _getEffectiveFontFamilies: function(fontFamily, fontFamilyFallback) {
      var fontFamilies = H.setRuntimeTypeInfo([], type$.JSArray_String);
      if (fontFamily != null)
        fontFamilies.push(fontFamily);
      if (fontFamilyFallback != null && !C.JSArray_methods.every$1(fontFamilyFallback, new H._getEffectiveFontFamilies_closure(fontFamily)))
        C.JSArray_methods.addAll$1(fontFamilies, fontFamilyFallback);
      C.JSArray_methods.addAll$1(fontFamilies, $.$get$FontFallbackData__instance().globalFontFallbacks);
      return fontFamilies;
    },
    CanvasKitError$: function(message) {
      return new H.CanvasKitError(message);
    },
    makeFreshSkColor: function(color) {
      var result = new Float32Array(4);
      result[0] = (color.get$value(color) >>> 16 & 255) / 255;
      result[1] = (color.get$value(color) >>> 8 & 255) / 255;
      result[2] = (color.get$value(color) & 255) / 255;
      result[3] = (color.get$value(color) >>> 24 & 255) / 255;
      return result;
    },
    computeSkShadowBounds: function(path, elevation, devicePixelRatio, matrix) {
      var isComplex, ambientBlur, spotBlur, t1, spotOffsetX, spotOffsetY, shadowBounds, inverse,
        pathBounds = H.fromSkRect(J.getBounds$0$x(path.get$skiaObject()));
      if (elevation === 0)
        return pathBounds;
      isComplex = !matrix.isIdentityOrTranslation$0();
      if (isComplex)
        pathBounds = H.transformRect(matrix, pathBounds);
      ambientBlur = Math.min(elevation * 0.0078125 * 64, 150);
      spotBlur = 1.1 * elevation;
      t1 = -elevation;
      spotOffsetX = t1 * 0;
      spotOffsetY = t1 * -0.75;
      shadowBounds = new P.Rect(pathBounds.left - 1 + (spotOffsetX - ambientBlur - spotBlur) * devicePixelRatio, pathBounds.top - 1 + (spotOffsetY - ambientBlur - spotBlur) * devicePixelRatio, pathBounds.right + 1 + (spotOffsetX + ambientBlur + spotBlur) * devicePixelRatio, pathBounds.bottom + 1 + (spotOffsetY + ambientBlur + spotBlur) * devicePixelRatio);
      if (isComplex) {
        inverse = new H.Matrix40(new Float32Array(16));
        if (inverse.copyInverse$1(matrix) !== 0)
          return H.transformRect(inverse, shadowBounds);
        else
          return shadowBounds;
      } else
        return shadowBounds;
    },
    drawSkShadow: function(skCanvas, path, color, elevation, transparentOccluder, devicePixelRatio) {
      var t2, t3, t4,
        flags = transparentOccluder ? 5 : 4,
        inAmbient = P.Color$fromARGB(C.JSNumber_methods.round$0((color.get$value(color) >>> 24 & 255) * 0.039), color.get$value(color) >>> 16 & 255, color.get$value(color) >>> 8 & 255, color.get$value(color) & 255),
        inSpot = P.Color$fromARGB(C.JSNumber_methods.round$0((color.get$value(color) >>> 24 & 255) * 0.25), color.get$value(color) >>> 16 & 255, color.get$value(color) >>> 8 & 255, color.get$value(color) & 255),
        inTonalColors = {ambient: H.makeFreshSkColor(inAmbient), spot: H.makeFreshSkColor(inSpot)},
        t1 = $.__canvasKit,
        tonalColors = J.computeTonalColors$1$x(t1 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t1, inTonalColors);
      t1 = path.get$skiaObject();
      t2 = new Float32Array(3);
      t2[2] = devicePixelRatio * elevation;
      t3 = new Float32Array(3);
      t3[0] = 0;
      t3[1] = -450;
      t3[2] = devicePixelRatio * 600;
      t4 = J.getInterceptor$x(tonalColors);
      J.drawShadow$7$x(skCanvas, t1, t2, t3, devicePixelRatio * 1.1, t4.get$ambient(tonalColors), t4.get$spot(tonalColors), flags);
    },
    PasteFromClipboardStrategy_PasteFromClipboardStrategy: function() {
      var t1 = H._browserEngine();
      return t1 === C.BrowserEngine_2 || window.navigator.clipboard == null ? new H.ExecCommandPasteStrategy() : new H.ClipboardAPIPasteStrategy();
    },
    _buildDrawRectElement: function(rect, paint, tagName, transform) {
      var t1, t2, left, right, $top, bottom, effectiveTransform, translated, style, cssColor, sigma,
        rectangle = type$.HtmlElement._as($.$get$domRenderer().createElement$1(0, tagName)),
        isStroke = paint.style === C.PaintingStyle_1,
        strokeWidth = paint.strokeWidth;
      if (strokeWidth == null)
        strokeWidth = 0;
      t1 = rect.left;
      t2 = rect.right;
      left = Math.min(t1, t2);
      right = Math.max(t1, t2);
      t2 = rect.top;
      t1 = rect.bottom;
      $top = Math.min(t2, t1);
      bottom = Math.max(t2, t1);
      if (transform.isIdentity$0(0))
        if (isStroke) {
          t1 = strokeWidth / 2;
          effectiveTransform = "translate(" + H.S(left - t1) + "px, " + H.S($top - t1) + "px)";
        } else
          effectiveTransform = "translate(" + H.S(left) + "px, " + H.S($top) + "px)";
      else {
        t1 = new Float32Array(16);
        translated = new H.Matrix40(t1);
        translated.setFrom$1(transform);
        if (isStroke) {
          t2 = strokeWidth / 2;
          translated.translate$2(0, left - t2, $top - t2);
        } else
          translated.translate$2(0, left, $top);
        effectiveTransform = H.float64ListToCssTransform(t1);
      }
      style = rectangle.style;
      style.position = "absolute";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "transform-origin"), "0 0 0", "");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "transform"), effectiveTransform, "");
      t1 = paint.color;
      if (t1 == null)
        cssColor = "#000000";
      else {
        t1 = H.colorToCssString(t1);
        t1.toString;
        cssColor = t1;
      }
      t1 = paint.maskFilter;
      if (t1 != null) {
        sigma = t1._sigma;
        t1 = H._browserEngine();
        if (t1 === C.BrowserEngine_1 && !isStroke) {
          t1 = "0px 0px " + H.S(sigma * 2) + "px " + cssColor;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "box-shadow"), t1, "");
          t1 = paint.color;
          if (t1 == null)
            t1 = C.Color_4278190080;
          t1 = H.colorToCssString(new P.Color(((C.JSNumber_methods.round$0((1 - Math.min(Math.sqrt(sigma) / 6.283185307179586, 1)) * (t1.get$value(t1) >>> 24 & 255)) & 255) << 24 | t1.get$value(t1) & 16777215) >>> 0));
          t1.toString;
          cssColor = t1;
        } else {
          t1 = "blur(" + H.S(sigma) + "px)";
          C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "filter"), t1, "");
        }
      }
      t1 = right - left;
      if (isStroke) {
        t1 = H.S(t1 - strokeWidth) + "px";
        style.width = t1;
        t1 = H.S(bottom - $top - strokeWidth) + "px";
        style.height = t1;
        t1 = H._borderStrokeToCssUnit(strokeWidth) + " solid " + cssColor;
        style.border = t1;
      } else {
        t1 = H.S(t1) + "px";
        style.width = t1;
        t1 = H.S(bottom - $top) + "px";
        style.height = t1;
        style.backgroundColor = cssColor;
      }
      return rectangle;
    },
    _applyRRectBorderRadius: function(style, rrect) {
      var t3, t4,
        t1 = rrect.tlRadiusX,
        t2 = rrect.trRadiusX;
      if (t1 === t2) {
        t3 = rrect.blRadiusX;
        if (t1 === t3) {
          t4 = rrect.brRadiusX;
          t3 = t1 === t4 && t1 === rrect.tlRadiusY && t2 === rrect.trRadiusY && t3 === rrect.blRadiusY && t4 === rrect.brRadiusY;
        } else
          t3 = false;
      } else
        t3 = false;
      if (t3) {
        t1 = H._borderStrokeToCssUnit(rrect.blRadiusX);
        C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "border-radius"), t1, "");
        return;
      }
      t1 = H._borderStrokeToCssUnit(t1) + " " + H._borderStrokeToCssUnit(rrect.tlRadiusY);
      C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "border-top-left-radius"), t1, "");
      t2 = H._borderStrokeToCssUnit(t2) + " " + H._borderStrokeToCssUnit(rrect.trRadiusY);
      C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "border-top-right-radius"), t2, "");
      t2 = H._borderStrokeToCssUnit(rrect.blRadiusX) + " " + H._borderStrokeToCssUnit(rrect.blRadiusY);
      C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "border-bottom-left-radius"), t2, "");
      t2 = H._borderStrokeToCssUnit(rrect.brRadiusX) + " " + H._borderStrokeToCssUnit(rrect.brRadiusY);
      C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "border-bottom-right-radius"), t2, "");
    },
    _borderStrokeToCssUnit: function(value) {
      return C.JSNumber_methods.toStringAsFixed$1(value === 0 ? 1 : value, 3) + "px";
    },
    _pathToSvgElement: function(path, paint, width, height) {
      var color, t2, t3,
        sb = new P.StringBuffer(""),
        t1 = "" + ('<svg viewBox="0 0 ' + width + " " + height + '" width="' + width + 'px" height="' + height + 'px">');
      sb._contents = t1;
      t1 = sb._contents = t1 + "<path ";
      color = paint.color;
      t2 = color == null;
      if (t2)
        color = C.Color_4278190080;
      t3 = paint.style;
      if (t3 !== C.PaintingStyle_1)
        if (t3 !== C.PaintingStyle_0) {
          t3 = paint.strokeWidth;
          t3 = t3 !== 0 && t3 != null;
        } else
          t3 = false;
      else
        t3 = true;
      if (t3) {
        t1 += 'stroke="' + H.S(H.colorToCssString(color)) + '" ';
        sb._contents = t1;
        t2 = paint.strokeWidth;
        t1 += 'stroke-width="' + H.S(t2 == null ? 1 : t2) + '" ';
        sb._contents = t1;
        t1 += 'fill="none" ';
        sb._contents = t1;
      } else if (!t2) {
        t1 += 'fill="' + H.S(H.colorToCssString(color)) + '" ';
        sb._contents = t1;
      } else {
        t1 += 'fill="#000000" ';
        sb._contents = t1;
      }
      sb._contents = (path._fillType === C.PathFillType_1 ? sb._contents = t1 + 'fill-rule="evenodd" ' : t1) + 'd="';
      H.pathToSvg(path, sb, 0, 0);
      t1 = sb._contents += '"></path>';
      t1 = sb._contents = t1 + "</svg>";
      return W.Element_Element$html(t1.charCodeAt(0) == 0 ? t1 : t1, new H._NullTreeSanitizer(), null);
    },
    DomRenderer$: function() {
      var t2,
        t1 = document.body;
      t1.toString;
      t1 = new H.DomRenderer(t1);
      t1.reset$0(0);
      t2 = $.TextMeasurementService_rulerManager;
      if (t2 != null)
        J.remove$0$ax(t2._rulerHost);
      $.TextMeasurementService_rulerManager = null;
      t2 = new H.RulerManager(10, P.LinkedHashMap_LinkedHashMap$_empty(type$.ParagraphGeometricStyle, type$.ParagraphRuler), W._ElementFactoryProvider_createElement_tag("flt-ruler-host", null));
      t2.RulerHost$0();
      $.TextMeasurementService_rulerManager = t2;
      return t1;
    },
    DomRenderer_setElementStyle: function(element, $name, value) {
      var t1;
      if (value == null)
        element.style.removeProperty($name);
      else {
        t1 = element.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, $name), value, null);
      }
    },
    DomRenderer_setClipPath: function(element, value) {
      var t1 = H._browserEngine();
      if (t1 === C.BrowserEngine_1) {
        t1 = element.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "-webkit-clip-path"), value, null);
      }
      t1 = element.style;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "clip-path"), value, null);
    },
    DomRenderer_ellipse: function(context, centerX, centerY, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {
      var t1 = $.DomRenderer__ellipseFeatureDetected;
      if (t1 == null ? $.DomRenderer__ellipseFeatureDetected = context.ellipse != null : t1)
        context.ellipse(centerX, centerY, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise);
      else {
        context.save();
        context.translate(centerX, centerY);
        context.rotate(rotation);
        context.scale(radiusX, radiusY);
        context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);
        context.restore();
      }
    },
    DomRenderer__deviceOrientationToLockType: function(deviceOrientation) {
      switch (deviceOrientation) {
        case "DeviceOrientation.portraitUp":
          return "portrait-primary";
        case "DeviceOrientation.landscapeLeft":
          return "portrait-secondary";
        case "DeviceOrientation.portraitDown":
          return "landscape-primary";
        case "DeviceOrientation.landscapeRight":
          return "landscape-secondary";
        default:
          return null;
      }
    },
    transformWithOffset: function(transform, offset) {
      var effectiveTransform;
      if (offset.$eq(0, C.Offset_0_0))
        return transform;
      effectiveTransform = new H.Matrix40(new Float32Array(16));
      effectiveTransform.setFrom$1(transform);
      effectiveTransform.translate$3(0, offset._dx, offset._dy, 0);
      return effectiveTransform;
    },
    _drawParagraphElement: function(paragraph, offset, transform) {
      var paragraphElement = paragraph.toDomElement$0();
      if (transform != null)
        H.setElementTransform(paragraphElement, H.transformWithOffset(transform, offset).__engine$_m4storage);
      return paragraphElement;
    },
    createSvgClipDef: function(element, clipPath) {
      var t3,
        pathBounds = clipPath.getBounds$0(0),
        t1 = pathBounds.right,
        t2 = pathBounds.bottom,
        svgClipPath = H._pathToSvgClipPath(clipPath, 0, 0, 1 / t1, 1 / t2);
      H.DomRenderer_setClipPath(element, "url(#svgClip" + $._clipIdCounter + ")");
      t3 = element.style;
      t1 = H.S(t1) + "px";
      t3.width = t1;
      t1 = H.S(t2) + "px";
      t3.height = t1;
      return svgClipPath;
    },
    Conic__subdivide: function(src, level, pointList) {
      var dst, t1, t2, startY, endY, midY, t3;
      if (0 === level) {
        pointList.push(new P.Offset(src.p1x, src.p1y));
        pointList.push(new P.Offset(src.p2x, src.p2y));
        return;
      }
      dst = new H._ConicPair();
      src._chop$1(dst);
      t1 = dst.first;
      t1.toString;
      t2 = dst.second;
      t2.toString;
      startY = src.p0y;
      endY = src.p2y;
      if (H.SPath_between(startY, src.p1y, endY)) {
        midY = t1.p2y;
        if (!H.SPath_between(startY, midY, endY))
          t3 = t1.p2y = t2.p0y = Math.abs(midY - startY) < Math.abs(midY - endY) ? startY : endY;
        else
          t3 = midY;
        if (!H.SPath_between(startY, t1.p1y, t3))
          t1.p1y = startY;
        if (!H.SPath_between(t2.p0y, t2.p1y, endY))
          t2.p1y = endY;
      }
      --level;
      H.Conic__subdivide(t1, level, pointList);
      H.Conic__subdivide(t2, level, pointList);
    },
    _conicEvalNumerator: function(p0, p1, p2, w, t) {
      var src2w = p1 * w;
      return ((p2 - 2 * src2w + p0) * t + 2 * (src2w - p0)) * t + p0;
    },
    _conicEvalDenominator: function(w, t) {
      var $B = 2 * (w - 1);
      return (-$B * t + $B) * t + 1;
    },
    _chopCubicAtYExtrema: function(points, dest) {
      var t1, roots, t2, t3, rootCount,
        y0 = points[1],
        y1 = points[3],
        y2 = points[5],
        _quadRoots = new H._QuadRoots();
      _quadRoots.findRoots$3(points[7] - y0 + 3 * (y1 - y2), 2 * (y0 - y1 - y1 + y2), y1 - y0);
      t1 = _quadRoots.root0;
      if (t1 == null)
        roots = H.setRuntimeTypeInfo([], type$.JSArray_double);
      else {
        t2 = _quadRoots.root1;
        t3 = type$.JSArray_double;
        roots = t2 == null ? H.setRuntimeTypeInfo([t1], t3) : H.setRuntimeTypeInfo([t1, t2], t3);
      }
      if (roots.length === 0)
        return 0;
      H._chopCubicAt(roots, points, dest);
      rootCount = roots.length;
      if (rootCount > 0) {
        t1 = dest[7];
        dest[9] = t1;
        dest[5] = t1;
        if (rootCount === 2) {
          t1 = dest[13];
          dest[15] = t1;
          dest[11] = t1;
        }
      }
      return rootCount;
    },
    _chopCubicAt: function(tValues, points, outPts) {
      var i, t, t1, bufferPos, p3y, p0x, t2, p0y, p1x, p1y, p2x, p2y, bufferPos0, p3x, t3, ab1x, ab1y, bc1x, bc1y, cd1x, cd1y, abc1x, abc1y, bcd1x, bcd1y, outIndex, outIndex0, i0,
        rootCount = tValues.length;
      if (0 === rootCount)
        for (i = 0; i < 8; ++i)
          outPts[i] = points[i];
      else {
        t = tValues[0];
        for (t1 = rootCount - 1, bufferPos = 0, i = 0; i < rootCount; i = i0, bufferPos = bufferPos0) {
          p3y = points[bufferPos + 7];
          p0x = points[bufferPos];
          t2 = bufferPos + 1;
          p0y = points[t2];
          p1x = points[bufferPos + 2];
          p1y = points[bufferPos + 3];
          p2x = points[bufferPos + 4];
          p2y = points[bufferPos + 5];
          bufferPos0 = bufferPos + 6;
          p3x = points[bufferPos0];
          t3 = 1 - t;
          ab1x = p0x * t3 + p1x * t;
          ab1y = p0y * t3 + p1y * t;
          bc1x = p1x * t3 + p2x * t;
          bc1y = p1y * t3 + p2y * t;
          cd1x = p2x * t3 + p3x * t;
          cd1y = p2y * t3 + p3y * t;
          abc1x = ab1x * t3 + bc1x * t;
          abc1y = ab1y * t3 + bc1y * t;
          bcd1x = bc1x * t3 + cd1x * t;
          bcd1y = bc1y * t3 + cd1y * t;
          outPts[bufferPos] = p0x;
          outIndex = t2 + 1;
          outPts[t2] = p0y;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = ab1x;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = ab1y;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = abc1x;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = abc1y;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = abc1x * t3 + bcd1x * t;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = abc1y * t3 + bcd1y * t;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = bcd1x;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = bcd1y;
          outIndex0 = outIndex + 1;
          outPts[outIndex] = cd1x;
          outIndex = outIndex0 + 1;
          outPts[outIndex0] = cd1y;
          outPts[outIndex] = p3x;
          outPts[outIndex + 1] = p3y;
          if (i === t1)
            break;
          i0 = i + 1;
          t2 = tValues[i0];
          t3 = tValues[i];
          t = H._validUnitDivide(t2 - t3, 1 - t3);
          if (t == null) {
            t1 = points[bufferPos0 + 3];
            outPts[bufferPos0 + 6] = t1;
            outPts[bufferPos0 + 5] = t1;
            outPts[bufferPos0 + 4] = t1;
            break;
          }
        }
      }
    },
    _chopMonoAtY: function(_buffer, bufferStartPos, y) {
      var tNeg, tPos, t1, t2, t3, tMid, y01, y12, y012, y0123,
        ycrv0 = _buffer[1 + bufferStartPos] - y,
        ycrv1 = _buffer[3 + bufferStartPos] - y,
        ycrv2 = _buffer[5 + bufferStartPos] - y,
        ycrv3 = _buffer[7 + bufferStartPos] - y;
      if (ycrv0 < 0) {
        if (ycrv3 < 0)
          return null;
        tNeg = 0;
        tPos = 1;
      } else {
        if (!(ycrv0 > 0))
          return 0;
        tNeg = 1;
        tPos = 0;
      }
      t1 = ycrv1 - ycrv0;
      t2 = ycrv2 - ycrv1;
      t3 = ycrv3 - ycrv2;
      do {
        tMid = (tPos + tNeg) / 2;
        y01 = ycrv0 + t1 * tMid;
        y12 = ycrv1 + t2 * tMid;
        y012 = y01 + (y12 - y01) * tMid;
        y0123 = y012 + (y12 + (ycrv2 + t3 * tMid - y12) * tMid - y012) * tMid;
        if (y0123 === 0)
          return tMid;
        if (y0123 < 0)
          tNeg = tMid;
        else
          tPos = tMid;
      } while (Math.abs(tPos - tNeg) > 0.0000152587890625);
      return (tNeg + tPos) / 2;
    },
    _evalCubicPts: function(c0, c1, c2, c3, t) {
      return (((c3 + 3 * (c1 - c2) - c0) * t + 3 * (c2 - c1 - c1 + c0)) * t + 3 * (c1 - c0)) * t + c0;
    },
    SurfacePath$: function() {
      var t1 = new H.SurfacePath(H.PathRef$(), C.PathFillType_0);
      t1._resetFields$0();
      return t1;
    },
    _computeMinScale: function(radius1, radius2, limit, scale) {
      var totalRadius = radius1 + radius2;
      if (totalRadius <= limit)
        return scale;
      return Math.min(limit / totalRadius, scale);
    },
    _SkQuadCoefficients$: function(x0, y0, x1, y1, x2, y2) {
      return new H._SkQuadCoefficients(x2 - 2 * x1 + x0, y2 - 2 * y1 + y0, 2 * (x1 - x0), 2 * (y1 - y0), x0, y0);
    },
    PathRef$: function() {
      var t1 = new Float32Array(16);
      t1 = new H.PathRef(t1, new Uint8Array(8));
      t1._fVerbsCapacity = t1._fPointsCapacity = 8;
      t1.fRRectOrOvalStartIdx = 172;
      return t1;
    },
    PathRef__fPointsFromSource: function(source, offsetX, offsetY) {
      var len, i, t1,
        sourceLength = source._fPointsLength,
        sourceCapacity = source._fPointsCapacity,
        dest = new Float32Array(sourceCapacity * 2),
        sourcePoints = source._fPoints;
      for (len = sourceLength * 2, i = 0; i < len; i += 2) {
        dest[i] = sourcePoints[i] + offsetX;
        t1 = i + 1;
        dest[t1] = sourcePoints[t1] + offsetY;
      }
      return dest;
    },
    pathToSvg: function(path, sb, offsetX, offsetY) {
      var outPts, verb, w, points, len, i, t2, t3,
        t1 = path.pathRef,
        iter = new H.PathRefIterator(t1);
      iter.PathRefIterator$1(t1);
      outPts = new Float32Array(8);
      for (; verb = iter.next$1(0, outPts), verb !== 6;)
        switch (verb) {
          case 0:
            sb._contents += "M " + H.S(outPts[0] + offsetX) + " " + H.S(outPts[1] + offsetY);
            break;
          case 1:
            sb._contents += "L " + H.S(outPts[2] + offsetX) + " " + H.S(outPts[3] + offsetY);
            break;
          case 4:
            sb._contents += "C " + H.S(outPts[2] + offsetX) + " " + H.S(outPts[3] + offsetY) + " " + H.S(outPts[4] + offsetX) + " " + H.S(outPts[5] + offsetY) + " " + H.S(outPts[6] + offsetX) + " " + H.S(outPts[7] + offsetY);
            break;
          case 2:
            sb._contents += "Q " + H.S(outPts[2] + offsetX) + " " + H.S(outPts[3] + offsetY) + " " + H.S(outPts[4] + offsetX) + " " + H.S(outPts[5] + offsetY);
            break;
          case 3:
            w = t1._conicWeights[iter._conicWeightIndex];
            points = new H.Conic(outPts[0], outPts[1], outPts[2], outPts[3], outPts[4], outPts[5], w).toQuads$0();
            len = points.length;
            for (i = 1; i < len; i += 2) {
              t2 = points[i];
              t3 = points[i + 1];
              sb._contents += "Q " + H.S(t2._dx + offsetX) + " " + H.S(t2._dy + offsetY) + " " + H.S(t3._dx + offsetX) + " " + H.S(t3._dy + offsetY);
            }
            break;
          case 5:
            sb._contents += "Z";
            break;
          default:
            throw H.wrapException(P.UnimplementedError$("Unknown path verb " + verb));
        }
    },
    SPath_between: function(a, b, c) {
      return (a - b) * (c - b) <= 0;
    },
    SPath_scalarSignedAsInt: function(x) {
      var t1;
      if (x < 0)
        t1 = -1;
      else
        t1 = x > 0 ? 1 : 0;
      return t1;
    },
    _validUnitDivide: function(numer, denom) {
      var r;
      if (numer < 0) {
        numer = -numer;
        denom = -denom;
      }
      if (denom === 0 || numer === 0 || numer >= denom)
        return null;
      r = numer / denom;
      if (isNaN(r))
        return null;
      if (r === 0)
        return null;
      return r;
    },
    _isRRectOval: function(rrect) {
      var t3, t4,
        t1 = rrect.tlRadiusX,
        t2 = rrect.trRadiusX;
      if (t1 + t2 !== rrect.right - rrect.left)
        return false;
      t3 = rrect.tlRadiusY;
      t4 = rrect.trRadiusY;
      if (t3 + t4 !== rrect.bottom - rrect.top)
        return false;
      if (t1 !== rrect.blRadiusX || t2 !== rrect.brRadiusX || t3 !== rrect.blRadiusY || t4 !== rrect.brRadiusY)
        return false;
      return true;
    },
    PathWinding__checkOnCurve: function(x, y, startX, startY, endX, endY) {
      if (startY === endY)
        return H.SPath_between(startX, x, endX) && x !== endX;
      else
        return x === startX && y === startY;
    },
    PathWinding__chopQuadAtExtrema: function(buffer) {
      var p01x, p01y, p12x, p12y,
        x0 = buffer[0],
        y0 = buffer[1],
        x1 = buffer[2],
        y1 = buffer[3],
        x2 = buffer[4],
        y2 = buffer[5],
        t1 = y0 - y1,
        tValueAtExtrema = H._validUnitDivide(t1, t1 - y1 + y2);
      if (tValueAtExtrema != null) {
        p01x = x0 + tValueAtExtrema * (x1 - x0);
        p01y = y0 + tValueAtExtrema * (y1 - y0);
        p12x = x1 + tValueAtExtrema * (x2 - x1);
        p12y = y1 + tValueAtExtrema * (y2 - y1);
        buffer[2] = p01x;
        buffer[3] = p01y;
        buffer[4] = p01x + tValueAtExtrema * (p12x - p01x);
        buffer[5] = p01y + tValueAtExtrema * (p12y - p01y);
        buffer[6] = p12x;
        buffer[7] = p12y;
        buffer[8] = x2;
        buffer[9] = y2;
        return 1;
      }
      buffer[3] = Math.abs(t1) < Math.abs(y1 - y2) ? y0 : y2;
      return 0;
    },
    PathWinding__isQuadMonotonic: function(quad) {
      var y0 = quad[1],
        y1 = quad[3],
        y2 = quad[5];
      if (y0 === y1)
        return true;
      if (y0 < y1)
        return y1 <= y2;
      else
        return y1 >= y2;
    },
    PathIterator$: function(pathRef, forceClose) {
      var t1 = new H.PathIterator(pathRef, true, pathRef._fVerbsLength);
      if (pathRef.fBoundsIsDirty)
        pathRef._computeBounds$0();
      if (!pathRef.fIsFinite)
        t1._verbIndex = pathRef._fVerbsLength;
      return t1;
    },
    tangentLine: function(pts, x, y, tangents) {
      var x0, x1, dx, dy,
        y0 = pts[1],
        y1 = pts[3];
      if (!H.SPath_between(y0, y, y1))
        return;
      x0 = pts[0];
      x1 = pts[2];
      if (!H.SPath_between(x0, x, x1))
        return;
      dx = x1 - x0;
      dy = y1 - y0;
      if (!(Math.abs((x - x0) * dy - dx * (y - y0)) < 0.000244140625))
        return;
      tangents.push(new P.Offset(dx, dy));
    },
    tangentQuad: function(pts, x, y, tangents) {
      var x0, x1, x2, roots, n, $A, $B, index, t1, t,
        y0 = pts[1],
        y1 = pts[3],
        y2 = pts[5];
      if (!H.SPath_between(y0, y, y1) && !H.SPath_between(y1, y, y2))
        return;
      x0 = pts[0];
      x1 = pts[2];
      x2 = pts[4];
      if (!H.SPath_between(x0, x, x1) && !H.SPath_between(x1, x, x2))
        return;
      roots = new H._QuadRoots();
      n = roots.findRoots$3(y0 - 2 * y1 + y2, 2 * (y1 - y0), y0 - y);
      for ($A = x2 - 2 * x1 + x0, $B = 2 * (x1 - x0), index = 0; index < n; ++index) {
        if (index === 0) {
          t1 = roots.root0;
          t1.toString;
          t = t1;
        } else {
          t1 = roots.root1;
          t1.toString;
          t = t1;
        }
        if (!(Math.abs(x - (($A * t + $B) * t + x0)) < 0.000244140625))
          continue;
        tangents.push(H._evalQuadTangentAt(x0, y0, x1, y1, x2, y2, t));
      }
    },
    _evalQuadTangentAt: function(x0, y0, x1, y1, x2, y2, t) {
      var t1, bx, by;
      if (!(t === 0 && x0 === x1 && y0 === y1))
        t1 = t === 1 && x1 === x2 && y1 === y2;
      else
        t1 = true;
      if (t1)
        return new P.Offset(x2 - x0, y2 - y0);
      bx = x1 - x0;
      by = y1 - y0;
      return new P.Offset(((x2 - x1 - bx) * t + bx) * 2, ((y2 - y1 - by) * t + by) * 2);
    },
    tangentConic: function(pts, x, y, weight, tangents) {
      var x0, x1, x2, $B, quadRoots, n, src2w, $A, B0, A0, index, t1, t,
        y0 = pts[1],
        y1 = pts[3],
        y2 = pts[5];
      if (!H.SPath_between(y0, y, y1) && !H.SPath_between(y1, y, y2))
        return;
      x0 = pts[0];
      x1 = pts[2];
      x2 = pts[4];
      if (!H.SPath_between(x0, x, x1) && !H.SPath_between(x1, x, x2))
        return;
      $B = y1 * weight - y * weight + y;
      quadRoots = new H._QuadRoots();
      n = quadRoots.findRoots$3(y2 + (y0 - 2 * $B), 2 * ($B - y0), y0 - y);
      for (src2w = x1 * weight, $A = x2 - 2 * src2w + x0, $B = 2 * (src2w - x0), B0 = 2 * (weight - 1), A0 = -B0, index = 0; index < n; ++index) {
        if (index === 0) {
          t1 = quadRoots.root0;
          t1.toString;
          t = t1;
        } else {
          t1 = quadRoots.root1;
          t1.toString;
          t = t1;
        }
        if (!(Math.abs(x - (($A * t + $B) * t + x0) / ((A0 * t + B0) * t + 1)) < 0.000244140625))
          continue;
        tangents.push(new H.Conic(x0, y0, x1, y1, x2, y2, weight).evalTangentAt$1(t));
      }
    },
    tangentCubic: function(pts, x, y, tangents) {
      var x0, x1, x2, x3, dst, n, i, bufferPos, t,
        y3 = pts[7],
        y0 = pts[1],
        y1 = pts[3],
        y2 = pts[5];
      if (!H.SPath_between(y0, y, y1) && !H.SPath_between(y1, y, y2) && !H.SPath_between(y2, y, y3))
        return;
      x0 = pts[0];
      x1 = pts[2];
      x2 = pts[4];
      x3 = pts[6];
      if (!H.SPath_between(x0, x, x1) && !H.SPath_between(x1, x, x2) && !H.SPath_between(x2, x, x3))
        return;
      dst = new Float32Array(20);
      n = H._chopCubicAtYExtrema(pts, dst);
      for (i = 0; i <= n; ++i) {
        bufferPos = i * 6;
        t = H._chopMonoAtY(dst, bufferPos, y);
        if (t == null)
          continue;
        if (!(Math.abs(x - H._evalCubicPts(dst[bufferPos], dst[bufferPos + 2], dst[bufferPos + 4], dst[bufferPos + 6], t)) < 0.000244140625))
          continue;
        tangents.push(H._evalCubicTangentAt(dst, bufferPos, t));
      }
    },
    _evalCubicTangentAt: function(points, bufferPos, t) {
      var t2, dx, dy, coeff,
        y3 = points[7 + bufferPos],
        y0 = points[1 + bufferPos],
        y1 = points[3 + bufferPos],
        y2 = points[5 + bufferPos],
        x0 = points[bufferPos],
        x1 = points[2 + bufferPos],
        x2 = points[4 + bufferPos],
        x3 = points[6 + bufferPos],
        t1 = t === 0;
      if (!(t1 && x0 === x1 && y0 === y1))
        t2 = t === 1 && x2 === x3 && y2 === y3;
      else
        t2 = true;
      if (t2) {
        if (t1) {
          dx = x2 - x0;
          dy = y2 - y0;
        } else {
          dx = x3 - x1;
          dy = y3 - y1;
        }
        if (dx === 0 && dy === 0) {
          dx = x3 - x0;
          dy = y3 - y0;
        }
        return new P.Offset(dx, dy);
      } else {
        coeff = H._SkQuadCoefficients$(x3 + 3 * (x1 - x2) - x0, y3 + 3 * (y1 - y2) - y0, 2 * (x2 - 2 * x1 + x0), 2 * (y2 - 2 * y1 + y0), x1 - x0, y1 - y0);
        return new P.Offset(coeff.evalX$1(t), coeff.evalY$1(t));
      }
    },
    _reduceCanvasMemoryUsage: function() {
      var i, t1, t2,
        canvasCount = $._recycledCanvases.length;
      for (i = 0; i < canvasCount; ++i) {
        t1 = $._recycledCanvases[i]._canvasPool;
        t2 = $.___browserEngine;
        if (t2 == null) {
          t2 = H.detectBrowserEngineByVendorAgent(window.navigator.vendor, window.navigator.userAgent.toLowerCase());
          if ($.___browserEngine == null)
            $.___browserEngine = t2;
          else
            t2 = H.throwExpression(H.LateError$fieldADI("_browserEngine"));
        }
        if (t2 === C.BrowserEngine_1 && t1.__engine$_canvas != null) {
          t2 = t1.__engine$_canvas;
          t2.height = 0;
          t2.width = 0;
        }
        t1._clearActiveCanvasList$0();
      }
      C.JSArray_methods.set$length($._recycledCanvases, 0);
    },
    _recycleCanvas: function(canvas) {
      if (canvas != null && C.JSArray_methods.contains$1($._recycledCanvases, canvas))
        return;
      if (canvas instanceof H.BitmapCanvas) {
        canvas._elementCache = null;
        if (canvas._devicePixelRatio === H.EnginePlatformDispatcher_browserDevicePixelRatio()) {
          $._recycledCanvases.push(canvas);
          if ($._recycledCanvases.length > 30)
            C.JSArray_methods.removeAt$1($._recycledCanvases, 0)._canvasPool.dispose$0(0);
        } else
          canvas._canvasPool.dispose$0(0);
      }
    },
    PersistedPicture__predictTrend: function(delta, extent) {
      if (delta <= 0)
        return extent * 0.1;
      else
        return Math.min(Math.max(extent * 0.5, delta * 10), extent);
    },
    _computePixelDensity: function(transform, width, height) {
      var m, t1, t2, minX, t3, minY, t4, t5, t6, t7, wp, t8, t9, t10, t11, xp, t12, t13, t14, t15, yp, minX0, maxX, minY0, maxY, scale;
      if (transform == null || transform.isIdentityOrTranslation$0())
        return 1;
      m = transform.__engine$_m4storage;
      t1 = m[12];
      t2 = m[15];
      minX = t1 * t2;
      t3 = m[13];
      minY = t3 * t2;
      t4 = m[3];
      t5 = t4 * width;
      t6 = m[7];
      t7 = t6 * height;
      wp = 1 / (t5 + t7 + t2);
      t8 = m[0];
      t9 = t8 * width;
      t10 = m[4];
      t11 = t10 * height;
      xp = (t9 + t11 + t1) * wp;
      t12 = m[1];
      t13 = t12 * width;
      t14 = m[5];
      t15 = t14 * height;
      yp = (t13 + t15 + t3) * wp;
      minX0 = Math.min(minX, xp);
      maxX = Math.max(minX, xp);
      minY0 = Math.min(minY, yp);
      maxY = Math.max(minY, yp);
      wp = 1 / (t4 * 0 + t7 + t2);
      xp = (t8 * 0 + t11 + t1) * wp;
      yp = (t12 * 0 + t15 + t3) * wp;
      minX = Math.min(minX0, xp);
      maxX = Math.max(maxX, xp);
      minY = Math.min(minY0, yp);
      maxY = Math.max(maxY, yp);
      wp = 1 / (t5 + t6 * 0 + t2);
      xp = (t9 + t10 * 0 + t1) * wp;
      yp = (t13 + t14 * 0 + t3) * wp;
      minX = Math.min(minX, xp);
      maxX = Math.max(maxX, xp);
      minY = Math.min(minY, yp);
      scale = Math.min((maxX - minX) / width, (Math.max(maxY, yp) - minY) / height);
      if (scale < 1e-9 || scale === 1)
        return 1;
      if (scale > 1) {
        scale = Math.min(4, C.JSNumber_methods.ceil$0(scale / 2) * 2);
        t1 = width * height;
        if (t1 * scale * scale > 4194304 && scale > 2)
          scale = 3355443.2 / t1;
      } else
        scale = Math.max(2 / C.JSNumber_methods.floor$0(2 / scale), 0.0001);
      return scale;
    },
    _measureBorderRadius: function(x, y) {
      var clampedX = x < 0 ? 0 : x,
        clampedY = y < 0 ? 0 : y;
      return clampedX * clampedX + clampedY * clampedY;
    },
    _getPaintSpread: function(paint) {
      var t2,
        t1 = paint._paintData,
        maskFilter = t1.maskFilter,
        spread = maskFilter != null ? 0 + maskFilter._sigma * 2 : 0;
      t1 = t1.strokeWidth;
      t2 = t1 == null;
      if ((t2 ? 0 : t1) !== 0)
        spread += (t2 ? 0 : t1) * 0.70710678118;
      return spread;
    },
    _GlContext__programCache: function() {
      var t1 = $._GlContext____programCache;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_programCache")) : t1;
    },
    NormalizedGradient_NormalizedGradient: function(colors, stops) {
      var t2, thresholds, targetIndex, _i, targetIndex0, thresholdIndex, thresholdIndex0, lastColorIndex, i, t, colorIndex,
        addLast = C.JSArray_methods.get$last(C.List_0_1) !== 1,
        normalizedCount = addLast ? 3 : 2,
        t1 = normalizedCount * 4,
        bias = new Float32Array(t1),
        scale = new Float32Array(t1);
      t1 = normalizedCount - 1;
      t2 = C.JSInt_methods._tdivFast$1(t1, 4);
      thresholds = new Float32Array(4 * (t2 + 1));
      for (targetIndex = 0, _i = 0; _i < 2; ++_i) {
        targetIndex0 = targetIndex + 1;
        t2 = colors[_i].value;
        bias[targetIndex] = (t2 >>> 16 & 255) / 255;
        targetIndex = targetIndex0 + 1;
        bias[targetIndex0] = (t2 >>> 8 & 255) / 255;
        targetIndex0 = targetIndex + 1;
        bias[targetIndex] = (t2 & 255) / 255;
        targetIndex = targetIndex0 + 1;
        bias[targetIndex0] = (t2 >>> 24 & 255) / 255;
      }
      for (thresholdIndex = 0, _i = 0; _i < 2; ++_i, thresholdIndex = thresholdIndex0) {
        thresholdIndex0 = thresholdIndex + 1;
        thresholds[thresholdIndex] = C.List_0_1[_i];
      }
      if (addLast) {
        targetIndex0 = targetIndex + 1;
        t2 = C.JSArray_methods.get$last(colors).value;
        bias[targetIndex] = (t2 >>> 16 & 255) / 255;
        targetIndex = targetIndex0 + 1;
        bias[targetIndex0] = (t2 >>> 8 & 255) / 255;
        bias[targetIndex] = (t2 & 255) / 255;
        bias[targetIndex + 1] = (t2 >>> 24 & 255) / 255;
        thresholds[thresholdIndex] = 1;
      }
      lastColorIndex = 4 * t1;
      for (i = 0; i < lastColorIndex; ++i) {
        thresholdIndex = i >>> 2;
        scale[i] = (bias[i + 4] - bias[i]) / (thresholds[thresholdIndex + 1] - thresholds[thresholdIndex]);
      }
      scale[lastColorIndex] = 0;
      scale[lastColorIndex + 1] = 0;
      scale[lastColorIndex + 2] = 0;
      scale[lastColorIndex + 3] = 0;
      for (i = 0; i < normalizedCount; ++i) {
        t = thresholds[i];
        colorIndex = i * 4;
        bias[colorIndex] = bias[colorIndex] - t * scale[colorIndex];
        t1 = colorIndex + 1;
        bias[t1] = bias[t1] - t * scale[t1];
        t1 = colorIndex + 2;
        bias[t1] = bias[t1] - t * scale[t1];
        t1 = colorIndex + 3;
        bias[t1] = bias[t1] - t * scale[t1];
      }
      return new H.NormalizedGradient(thresholds, bias, scale, normalizedCount);
    },
    _writeUnrolledBinarySearch: function(method, start, end, biasName, probe, scaleName, sourcePrefix) {
      var biasSource, scaleSource, mid, t1, thresholdAtMid;
      if (start === end) {
        biasSource = biasName + "_" + start;
        method.addStatement$1(biasName + " = " + biasSource + ";");
        scaleSource = scaleName + "_" + start;
        method.addStatement$1(scaleName + " = " + scaleSource + ";");
      } else {
        mid = C.JSInt_methods._tdivFast$1(start + end, 2);
        t1 = mid + 1;
        thresholdAtMid = sourcePrefix + "_" + C.JSInt_methods._tdivFast$1(t1, 4) + ("." + "xyzw"[C.JSInt_methods.$mod(t1, 4)]);
        method.addStatement$1("if (" + probe + " < " + thresholdAtMid + ") {");
        ++method._indentLevel;
        H._writeUnrolledBinarySearch(method, start, mid, biasName, probe, scaleName, sourcePrefix);
        --method._indentLevel;
        method.addStatement$1("} else {");
        ++method._indentLevel;
        H._writeUnrolledBinarySearch(method, t1, end, biasName, probe, scaleName, sourcePrefix);
        --method._indentLevel;
        method.addStatement$1("}");
      }
    },
    _addColorStopsToCanvasGradient: function(gradient, colors, colorStops, isDecal) {
      var offset, t1,
        _s9_ = "#00000000";
      if (isDecal) {
        gradient.addColorStop(0, _s9_);
        offset = 0.0005000000000000004;
      } else
        offset = 0;
      t1 = H.colorToCssString(colors[0]);
      t1.toString;
      gradient.addColorStop(offset, t1);
      t1 = H.colorToCssString(colors[1]);
      t1.toString;
      gradient.addColorStop(1 - offset, t1);
      if (isDecal)
        gradient.addColorStop(1, _s9_);
    },
    _writeSharedGradientShader: function(builder, method, gradient, tileMode) {
      var t1, t2, t3, i, probeName,
        _s8_ = "tiled_st";
      method.addStatement$1("vec4 bias;");
      method.addStatement$1("vec4 scale;");
      for (t1 = gradient.thresholdCount, t2 = t1 - 1, t3 = C.JSInt_methods._tdivFast$1(t2, 4) + 1, i = 0; i < t3; ++i)
        builder.addUniform$2$name(11, "threshold_" + i);
      for (i = 0; i < t1; ++i) {
        builder.addUniform$2$name(11, "bias_" + i);
        builder.addUniform$2$name(11, "scale_" + i);
      }
      switch (tileMode) {
        case C.TileMode_0:
          method.addStatement$1("float tiled_st = clamp(st, 0.0, 1.0);");
          probeName = _s8_;
          break;
        case C.TileMode_3:
          probeName = "st";
          break;
        case C.TileMode_1:
          method.addStatement$1("float tiled_st = fract(st);");
          probeName = _s8_;
          break;
        case C.TileMode_2:
          method.addStatement$1("float t_1 = (st - 1.0);");
          method.addStatement$1("float tiled_st = abs((t_1 - 2.0 * floor(t_1 * 0.5)) - 1.0);");
          probeName = _s8_;
          break;
        default:
          probeName = "st";
      }
      H._writeUnrolledBinarySearch(method, 0, t2, "bias", probeName, "scale", "threshold");
      return probeName;
    },
    ShaderBuilder_typeToString: function(dataType) {
      switch (dataType) {
        case 0:
          return "bool";
        case 1:
          return "int";
        case 2:
          return "float";
        case 3:
          return "bvec2";
        case 4:
          return "bvec3";
        case 5:
          return "bvec4";
        case 6:
          return "ivec2";
        case 7:
          return "ivec3";
        case 8:
          return "ivec4";
        case 9:
          return "vec2";
        case 10:
          return "vec3";
        case 11:
          return "vec4";
        case 12:
          return "mat2";
        case 13:
          return "mat3";
        case 14:
          return "mat4";
        case 15:
          return "sampler1D";
        case 16:
          return "sampler2D";
        case 17:
          return "sampler3D";
        case 18:
          return "void";
      }
      throw H.wrapException(P.ArgumentError$(null));
    },
    commitScene: function(scene) {
      var request, _i, i,
        t1 = $._paintQueue,
        t2 = t1.length;
      if (t2 !== 0)
        try {
          if (t2 > 1)
            C.JSArray_methods.sort$1(t1, new H.commitScene_closure());
          for (t1 = $._paintQueue, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
            request = t1[_i];
            request.paintCallback$0();
          }
        } finally {
          $._paintQueue = H.setRuntimeTypeInfo([], type$.JSArray__PaintRequest);
        }
      t1 = $._retainedSurfaces;
      t2 = t1.length;
      if (t2 !== 0) {
        for (i = 0; i < t2; ++i)
          t1[i].__engine$_state = C.PersistedSurfaceState_1;
        $._retainedSurfaces = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      }
      for (t1 = $._frameReferences, i = 0; i < t1.length; ++i)
        t1[i].value = null;
      $._frameReferences = H.setRuntimeTypeInfo([], type$.JSArray_FrameReference_dynamic);
    },
    PersistedContainerSurface__discardActiveChildren: function(surface) {
      var i, child,
        t1 = surface.__engine$_children,
        $length = t1.length;
      for (i = 0; i < $length; ++i) {
        child = t1[i];
        if (child.__engine$_state === C.PersistedSurfaceState_1)
          child.discard$0();
      }
    },
    Keyboard$_: function() {
      var t1 = new H.Keyboard(P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Timer));
      t1.Keyboard$_$0();
      return t1;
    },
    _noopCallback: function(data) {
    },
    EnginePlatformDispatcher_browserDevicePixelRatio: function() {
      var ratio = window.devicePixelRatio;
      return ratio === 0 ? 1 : ratio;
    },
    EnginePlatformDispatcher__zonedPlatformMessageResponseCallback: function(callback) {
      return new H.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure($.Zone__current, callback);
    },
    EnginePlatformDispatcher_parseBrowserLanguages: function() {
      var locales, t1, t2, parts,
        languages = window.navigator.languages;
      if (languages == null || J.get$isEmpty$asx(languages))
        return C.List_Locale_en_US;
      locales = H.setRuntimeTypeInfo([], type$.JSArray_Locale);
      for (t1 = J.get$iterator$ax(languages); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        parts = t2.split("-");
        if (parts.length > 1)
          locales.push(new P.Locale(C.JSArray_methods.get$first(parts), C.JSArray_methods.get$last(parts)));
        else
          locales.push(new P.Locale(t2, null));
      }
      return locales;
    },
    _handleWebTestEnd2EndMessage: function(codec, data) {
      var decoded = codec.decodeMethodCall$1(data),
        ratio = P.double_parse(decoded.$arguments);
      switch (decoded.method) {
        case "setDevicePixelRatio":
          $.$get$window()._debugDevicePixelRatio = ratio;
          $.$get$EnginePlatformDispatcher__instance()._onMetricsChanged.call$0();
          return true;
      }
      return false;
    },
    invoke: function(callback, zone) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$0();
      else
        zone.runGuarded$1(callback);
    },
    invoke1: function(callback, zone, arg) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$1(arg);
      else
        zone.runUnaryGuarded$2(callback, arg);
    },
    invoke3: function(callback, zone, arg1, arg2, arg3) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$3(arg1, arg2, arg3);
      else
        zone.runGuarded$1(new H.invoke3_closure(callback, arg1, arg2, arg3));
    },
    convertButtonToButtons: function(button) {
      switch (button) {
        case 0:
          return 1;
        case 1:
          return 4;
        case 2:
          return 2;
        default:
          return C.JSInt_methods.$shl(1, button);
      }
    },
    _BaseAdapter__eventTimeStampToDuration: function(milliseconds) {
      var ms = C.JSNumber_methods.toInt$0(milliseconds);
      return P.Duration$(C.JSNumber_methods.toInt$0((milliseconds - ms) * 1000), ms);
    },
    timeAction: function($name, action) {
      var t1 = action.call$0();
      return t1;
    },
    _frameTimingsOnVsync: function() {
      if ($.$get$EnginePlatformDispatcher__instance()._onReportTimings == null)
        return;
      $._vsyncStartMicros = C.JSNumber_methods.toInt$0(window.performance.now() * 1000);
    },
    _frameTimingsOnBuildStart: function() {
      if ($.$get$EnginePlatformDispatcher__instance()._onReportTimings == null)
        return;
      $._buildStartMicros = C.JSNumber_methods.toInt$0(window.performance.now() * 1000);
    },
    _frameTimingsOnBuildFinish: function() {
      if ($.$get$EnginePlatformDispatcher__instance()._onReportTimings == null)
        return;
      $._buildFinishMicros = C.JSNumber_methods.toInt$0(window.performance.now() * 1000);
    },
    _frameTimingsOnRasterStart: function() {
      if ($.$get$EnginePlatformDispatcher__instance()._onReportTimings == null)
        return;
      $._rasterStartMicros = C.JSNumber_methods.toInt$0(window.performance.now() * 1000);
    },
    _frameTimingsOnRasterFinish: function() {
      var now, t2,
        t1 = $.$get$EnginePlatformDispatcher__instance();
      if (t1._onReportTimings == null)
        return;
      now = $._rasterFinishMicros = C.JSNumber_methods.toInt$0(window.performance.now() * 1000);
      $._frameTimings.push(new P.FrameTiming(H.setRuntimeTypeInfo([$._vsyncStartMicros, $._buildStartMicros, $._buildFinishMicros, $._rasterStartMicros, now], type$.JSArray_int)));
      $._rasterFinishMicros = $._rasterStartMicros = $._buildFinishMicros = $._buildStartMicros = $._vsyncStartMicros = -1;
      if (now - $.$get$_frameTimingsLastSubmitTime() > 100000) {
        $._frameTimingsLastSubmitTime = now;
        t2 = $._frameTimings;
        H.invoke1(t1._onReportTimings, t1._onReportTimingsZone, t2);
        $._frameTimings = H.setRuntimeTypeInfo([], type$.JSArray_FrameTiming);
      }
    },
    _nowMicros: function() {
      return C.JSNumber_methods.toInt$0(window.performance.now() * 1000);
    },
    AccessibilityAnnouncements$_: function() {
      var t1 = new H.AccessibilityAnnouncements();
      t1.AccessibilityAnnouncements$_$0();
      return t1;
    },
    _checkableKindFromSemanticsFlag: function(semanticsObject) {
      var t1 = semanticsObject.__engine$_flags;
      if ((t1 & 256) !== 0)
        return C._CheckableKind_1;
      else if ((t1 & 65536) !== 0)
        return C._CheckableKind_2;
      else
        return C._CheckableKind_0;
    },
    Incrementable$: function(semanticsObject) {
      var t1 = new H.Incrementable(W.InputElement_InputElement(), semanticsObject);
      t1.Incrementable$1(semanticsObject);
      return t1;
    },
    SemanticsObject__clearSemanticElementTransform: function(element) {
      var t1 = element.style;
      t1.removeProperty("transform-origin");
      t1.removeProperty("transform");
      t1 = H._operatingSystem();
      if (t1 !== C.OperatingSystem_0) {
        t1 = H._operatingSystem();
        t1 = t1 === C.OperatingSystem_4;
      } else
        t1 = true;
      if (t1) {
        t1 = element.style;
        t1.top = "0px";
        t1.left = "0px";
      } else {
        t1 = element.style;
        t1.removeProperty("top");
        t1.removeProperty("left");
      }
    },
    EngineSemanticsOwner$_: function() {
      var t1 = type$.SemanticsObject,
        t2 = H.setRuntimeTypeInfo([], type$.JSArray_nullable_SemanticsObject),
        t3 = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function),
        t4 = H._operatingSystem();
      t4 = J.containsKey$1$x(C.Set_m536._collection$_map, t4) ? new H.DesktopSemanticsEnabler() : new H.MobileSemanticsEnabler();
      t4 = new H.EngineSemanticsOwner(P.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1), P.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_int, t1), t2, t3, new H.EngineSemanticsOwner__now_closure(), new H.SemanticsHelper(t4), C.GestureMode_1, H.setRuntimeTypeInfo([], type$.JSArray_of_nullable_void_Function_GestureMode));
      t4.EngineSemanticsOwner$_$0();
      return t4;
    },
    longestIncreasingSubsequence: function(list) {
      var longest, i, elem, hi, lo, mid, seq, k,
        len = list.length,
        t1 = type$.JSArray_int,
        predecessors = H.setRuntimeTypeInfo([], t1),
        mins = H.setRuntimeTypeInfo([0], t1);
      for (longest = 0, i = 0; i < len; ++i) {
        elem = list[i];
        for (hi = longest, lo = 1; lo <= hi;) {
          mid = C.JSInt_methods._tdivFast$1(lo + hi, 2);
          if (list[mins[mid]] < elem)
            lo = mid + 1;
          else
            hi = mid - 1;
        }
        predecessors.push(mins[lo - 1]);
        if (lo >= mins.length)
          mins.push(i);
        else
          mins[lo] = i;
        if (lo > longest)
          longest = lo;
      }
      seq = P.List_List$filled(longest, 0, false, type$.int);
      k = mins[longest];
      for (i = longest - 1; i >= 0; --i) {
        seq[i] = k;
        k = predecessors[k];
      }
      return seq;
    },
    SemanticsTextEditingStrategy_ensureInitialized: function(owner) {
      var t1 = $.SemanticsTextEditingStrategy__instance;
      if (t1 != null && t1.owner === owner) {
        t1.toString;
        return t1;
      }
      return $.SemanticsTextEditingStrategy__instance = new H.SemanticsTextEditingStrategy(owner, H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event));
    },
    WriteBuffer_WriteBuffer: function() {
      var t1 = new Uint8Array(0),
        eightBytes = new DataView(new ArrayBuffer(8));
      return new H.WriteBuffer0(new H.Uint8Buffer0(t1, 0), eightBytes, H.NativeUint8List_NativeUint8List$view(eightBytes.buffer, 0, null));
    },
    computeShadowOffset: function(elevation) {
      if (elevation === 0)
        return C.Offset_0_0;
      return new P.Offset(200 * elevation / 600, 400 * elevation / 600);
    },
    computePenumbraBounds: function(shape, elevation) {
      var t1, t2, t3, t4, dx, dy;
      if (elevation === 0)
        return shape;
      t1 = shape.right;
      t2 = shape.left;
      t3 = shape.bottom;
      t4 = shape.top;
      dx = elevation * ((800 + (t1 - t2) * 0.5) / 600);
      dy = elevation * ((800 + (t3 - t4) * 0.5) / 600);
      return new P.Rect(t2 - dx, t4 - dy, t1 + dx, t3 + dy).shift$1(H.computeShadowOffset(elevation));
    },
    computeShadow: function(shape, elevation) {
      if (elevation === 0)
        return null;
      return new H.SurfaceShadowData(Math.min(elevation * ((800 + (shape.right - shape.left) * 0.5) / 600), elevation * ((800 + (shape.bottom - shape.top) * 0.5) / 600)), H.computeShadowOffset(elevation));
    },
    applyCssShadow: function(element, shape, elevation, color) {
      var t1, t2, t3,
        _s10_ = "box-shadow",
        shadow = H.computeShadow(shape, elevation);
      if (shadow == null) {
        t1 = element.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_), "none", "");
      } else {
        color = H.toShadowColor(color);
        t1 = element.style;
        t2 = shadow.offset;
        t3 = color.value;
        t3 = H.S(t2._dx) + "px " + H.S(t2._dy) + "px " + H.S(shadow.blurWidth) + "px 0px rgba(" + (t3 >>> 16 & 255) + ", " + (t3 >>> 8 & 255) + ", " + (t3 & 255) + ", " + H.S((t3 >>> 24 & 255) / 255) + ")";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_), t3, "");
      }
    },
    toShadowColor: function(color) {
      var t1 = color.value;
      return new P.Color(((C.JSNumber_methods.round$0(0.3 * (t1 >>> 24 & 255)) & 255) << 24 | t1 & 16777215) >>> 0);
    },
    FontManager_FontManager: function() {
      var t1 = type$.JSArray_Future_void;
      if ($.$get$supportsFontLoadingApi())
        return new H.FontManager(H.setRuntimeTypeInfo([], t1));
      else
        return new H._PolyfillFontManager(H.setRuntimeTypeInfo([], t1));
    },
    LineBuilder$_: function(paragraph, spanometer, accumulatedHeight, lineNumber, maxWidth, start) {
      return new H.LineBuilder(H.setRuntimeTypeInfo([], type$.JSArray_LineSegment), H.setRuntimeTypeInfo([], type$.JSArray_RangeBox), maxWidth, paragraph, spanometer, start, lineNumber, accumulatedHeight, start);
    },
    nextLineBreak: function(text, index, maxEnd) {
      var t1, lastNonNewlineIndex, lastNonSpaceIndex, prev1, regionalIndicatorCount, t2, t3, t4, curr0, isCurrZWJ0, t5, t6, t7,
        codePoint = H.getCodePoint(text, index),
        curr = $.$get$lineLookup().findForChar$1(codePoint),
        baseOfSpaceSequence = curr === C.LineCharProperty_5 ? C.LineCharProperty_29 : null,
        isCurrZWJ = curr === C.LineCharProperty_26;
      if (curr === C.LineCharProperty_0 || isCurrZWJ)
        curr = C.LineCharProperty_8;
      for (t1 = text.length, lastNonNewlineIndex = index, lastNonSpaceIndex = lastNonNewlineIndex, prev1 = null, regionalIndicatorCount = 0; index < t1; isCurrZWJ = isCurrZWJ0, prev1 = curr, curr = curr0) {
        if (index === maxEnd)
          return new H.LineBreakResult(index, lastNonNewlineIndex, lastNonSpaceIndex, C.LineBreakType_1);
        t2 = curr === C.LineCharProperty_35;
        regionalIndicatorCount = t2 ? regionalIndicatorCount + 1 : 0;
        index = (codePoint != null && codePoint > 65535 ? index + 1 : index) + 1;
        t3 = curr === C.LineCharProperty_5;
        t4 = !t3;
        if (t4)
          baseOfSpaceSequence = null;
        codePoint = H.getCodePoint(text, index);
        curr0 = $.$get$lineLookup().findForChar$1(codePoint);
        isCurrZWJ0 = curr0 === C.LineCharProperty_26;
        if (curr === C.LineCharProperty_2 || curr === C.LineCharProperty_3)
          return new H.LineBreakResult(index, lastNonNewlineIndex, lastNonSpaceIndex, C.LineBreakType_2);
        if (curr === C.LineCharProperty_4)
          if (curr0 === C.LineCharProperty_2)
            continue;
          else
            return new H.LineBreakResult(index, lastNonNewlineIndex, lastNonSpaceIndex, C.LineBreakType_2);
        if (t4)
          lastNonSpaceIndex = index;
        if (curr0 === C.LineCharProperty_2 || curr0 === C.LineCharProperty_3 || curr0 === C.LineCharProperty_4) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (index >= t1)
          return new H.LineBreakResult(t1, index, lastNonSpaceIndex, C.LineBreakType_3);
        if (curr0 === C.LineCharProperty_5) {
          baseOfSpaceSequence = t3 ? baseOfSpaceSequence : curr;
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr0 === C.LineCharProperty_25) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr === C.LineCharProperty_25 || baseOfSpaceSequence === C.LineCharProperty_25)
          return new H.LineBreakResult(index, index, lastNonSpaceIndex, C.LineBreakType_0);
        if (curr0 === C.LineCharProperty_0 || isCurrZWJ0) {
          if (!t3) {
            if (t2)
              --regionalIndicatorCount;
            lastNonNewlineIndex = index;
            curr0 = curr;
            continue;
          }
          curr0 = C.LineCharProperty_8;
        }
        if (isCurrZWJ) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr0 === C.LineCharProperty_29 || curr === C.LineCharProperty_29) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr === C.LineCharProperty_18) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (!(!t4 || curr === C.LineCharProperty_1 || curr === C.LineCharProperty_14) && curr0 === C.LineCharProperty_18) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr0 === C.LineCharProperty_17 || curr0 === C.LineCharProperty_12 || curr0 === C.LineCharProperty_6 || curr0 === C.LineCharProperty_13 || curr0 === C.LineCharProperty_15) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr === C.LineCharProperty_11 || baseOfSpaceSequence === C.LineCharProperty_11) {
          lastNonNewlineIndex = index;
          continue;
        }
        t2 = curr !== C.LineCharProperty_7;
        if ((!t2 || baseOfSpaceSequence === C.LineCharProperty_7) && curr0 === C.LineCharProperty_11) {
          lastNonNewlineIndex = index;
          continue;
        }
        t4 = curr !== C.LineCharProperty_17;
        if ((!t4 || baseOfSpaceSequence === C.LineCharProperty_17 || curr === C.LineCharProperty_12 || baseOfSpaceSequence === C.LineCharProperty_12) && curr0 === C.LineCharProperty_24) {
          lastNonNewlineIndex = index;
          continue;
        }
        if ((curr === C.LineCharProperty_27 || baseOfSpaceSequence === C.LineCharProperty_27) && curr0 === C.LineCharProperty_27) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (t3)
          return new H.LineBreakResult(index, index, lastNonSpaceIndex, C.LineBreakType_0);
        if (!t2 || curr0 === C.LineCharProperty_7) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr === C.LineCharProperty_34 || curr0 === C.LineCharProperty_34)
          return new H.LineBreakResult(index, index, lastNonSpaceIndex, C.LineBreakType_0);
        if (curr0 === C.LineCharProperty_1 || curr0 === C.LineCharProperty_14 || curr0 === C.LineCharProperty_24 || curr === C.LineCharProperty_19) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (prev1 === C.LineCharProperty_20)
          t2 = curr === C.LineCharProperty_14 || curr === C.LineCharProperty_1;
        else
          t2 = false;
        if (t2) {
          lastNonNewlineIndex = index;
          continue;
        }
        t2 = curr === C.LineCharProperty_15;
        if (t2 && curr0 === C.LineCharProperty_20) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr0 === C.LineCharProperty_28) {
          lastNonNewlineIndex = index;
          continue;
        }
        t3 = curr !== C.LineCharProperty_8;
        if (!((!t3 || curr === C.LineCharProperty_20) && curr0 === C.LineCharProperty_16))
          if (curr === C.LineCharProperty_16)
            t5 = curr0 === C.LineCharProperty_8 || curr0 === C.LineCharProperty_20;
          else
            t5 = false;
        else
          t5 = true;
        if (t5) {
          lastNonNewlineIndex = index;
          continue;
        }
        t5 = curr === C.LineCharProperty_9;
        if (t5)
          t6 = curr0 === C.LineCharProperty_30 || curr0 === C.LineCharProperty_31 || curr0 === C.LineCharProperty_36;
        else
          t6 = false;
        if (t6) {
          lastNonNewlineIndex = index;
          continue;
        }
        if ((curr === C.LineCharProperty_30 || curr === C.LineCharProperty_31 || curr === C.LineCharProperty_36) && curr0 === C.LineCharProperty_10) {
          lastNonNewlineIndex = index;
          continue;
        }
        t6 = !t5;
        if (!t6 || curr === C.LineCharProperty_10)
          t7 = curr0 === C.LineCharProperty_8 || curr0 === C.LineCharProperty_20;
        else
          t7 = false;
        if (t7) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (!t3 || curr === C.LineCharProperty_20)
          t7 = curr0 === C.LineCharProperty_9 || curr0 === C.LineCharProperty_10;
        else
          t7 = false;
        if (t7) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (!t4 || curr === C.LineCharProperty_12 || curr === C.LineCharProperty_16)
          t4 = curr0 === C.LineCharProperty_10 || curr0 === C.LineCharProperty_9;
        else
          t4 = false;
        if (t4) {
          lastNonNewlineIndex = index;
          continue;
        }
        t4 = curr !== C.LineCharProperty_10;
        if ((!t4 || t5) && curr0 === C.LineCharProperty_11) {
          lastNonNewlineIndex = index;
          continue;
        }
        if ((!t4 || !t6 || curr === C.LineCharProperty_14 || curr === C.LineCharProperty_13 || curr === C.LineCharProperty_16 || t2) && curr0 === C.LineCharProperty_16) {
          lastNonNewlineIndex = index;
          continue;
        }
        t2 = curr === C.LineCharProperty_21;
        if (t2)
          t4 = curr0 === C.LineCharProperty_21 || curr0 === C.LineCharProperty_22 || curr0 === C.LineCharProperty_32 || curr0 === C.LineCharProperty_33;
        else
          t4 = false;
        if (t4) {
          lastNonNewlineIndex = index;
          continue;
        }
        t4 = curr !== C.LineCharProperty_22;
        if (!t4 || curr === C.LineCharProperty_32)
          t6 = curr0 === C.LineCharProperty_22 || curr0 === C.LineCharProperty_23;
        else
          t6 = false;
        if (t6) {
          lastNonNewlineIndex = index;
          continue;
        }
        t6 = curr !== C.LineCharProperty_23;
        if ((!t6 || curr === C.LineCharProperty_33) && curr0 === C.LineCharProperty_23) {
          lastNonNewlineIndex = index;
          continue;
        }
        if ((t2 || !t4 || !t6 || curr === C.LineCharProperty_32 || curr === C.LineCharProperty_33) && curr0 === C.LineCharProperty_10) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (t5)
          t2 = curr0 === C.LineCharProperty_21 || curr0 === C.LineCharProperty_22 || curr0 === C.LineCharProperty_23 || curr0 === C.LineCharProperty_32 || curr0 === C.LineCharProperty_33;
        else
          t2 = false;
        if (t2) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (!t3 || curr === C.LineCharProperty_20)
          t2 = curr0 === C.LineCharProperty_8 || curr0 === C.LineCharProperty_20;
        else
          t2 = false;
        if (t2) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr === C.LineCharProperty_13)
          t2 = curr0 === C.LineCharProperty_8 || curr0 === C.LineCharProperty_20;
        else
          t2 = false;
        if (t2) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (!t3 || curr === C.LineCharProperty_20 || curr === C.LineCharProperty_16)
          if (curr0 === C.LineCharProperty_11) {
            t2 = C.JSString_methods.codeUnitAt$1(text, index);
            if (t2 !== 9001)
              if (!(t2 >= 12296 && t2 <= 12317))
                t2 = t2 >= 65047 && t2 <= 65378;
              else
                t2 = true;
            else
              t2 = true;
            t2 = !t2;
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr === C.LineCharProperty_12) {
          t2 = C.JSString_methods.codeUnitAt$1(text, index - 1);
          if (t2 !== 9001)
            if (!(t2 >= 12296 && t2 <= 12317))
              t2 = t2 >= 65047 && t2 <= 65378;
            else
              t2 = true;
          else
            t2 = true;
          if (!t2)
            t2 = curr0 === C.LineCharProperty_8 || curr0 === C.LineCharProperty_20 || curr0 === C.LineCharProperty_16;
          else
            t2 = false;
        } else
          t2 = false;
        if (t2) {
          lastNonNewlineIndex = index;
          continue;
        }
        if (curr0 === C.LineCharProperty_35)
          if ((regionalIndicatorCount & 1) === 1) {
            lastNonNewlineIndex = index;
            continue;
          } else
            return new H.LineBreakResult(index, index, lastNonSpaceIndex, C.LineBreakType_0);
        if (curr === C.LineCharProperty_31 && curr0 === C.LineCharProperty_36) {
          lastNonNewlineIndex = index;
          continue;
        }
        return new H.LineBreakResult(index, index, lastNonSpaceIndex, C.LineBreakType_0);
      }
      return new H.LineBreakResult(t1, lastNonNewlineIndex, lastNonSpaceIndex, C.LineBreakType_3);
    },
    _newlinePredicate: function(char) {
      var prop = $.$get$lineLookup().findForChar$1(char);
      return prop === C.LineCharProperty_3 || prop === C.LineCharProperty_2 || prop === C.LineCharProperty_4;
    },
    RulerHost$: function() {
      var t1 = new H.RulerHost(W._ElementFactoryProvider_createElement_tag("flt-ruler-host", null));
      t1.RulerHost$0();
      return t1;
    },
    TextMeasurementService_forParagraph: function(paragraph) {
      var style,
        t1 = $.$get$window().get$physicalSize();
      if (!t1.get$isEmpty(t1))
        if ($.WebExperiments_instance._useCanvasText) {
          style = paragraph._geometricStyle;
          t1 = paragraph._plainText != null && style.decoration == null && style.wordSpacing == null;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1) {
        t1 = $.CanvasTextMeasurementService__instance;
        return t1 == null ? $.CanvasTextMeasurementService__instance = new H.CanvasTextMeasurementService(W.CanvasElement_CanvasElement(null, null).getContext("2d")) : t1;
      }
      t1 = $.DomTextMeasurementService__instance;
      return t1 == null ? $.DomTextMeasurementService__instance = new H.DomTextMeasurementService() : t1;
    },
    DomTextMeasurementService__applySubPixelRoundingHack: function(minIntrinsicWidth, maxIntrinsicWidth) {
      if (minIntrinsicWidth <= maxIntrinsicWidth)
        return maxIntrinsicWidth;
      if (minIntrinsicWidth - maxIntrinsicWidth < 2)
        return minIntrinsicWidth;
      throw H.wrapException(P.Exception_Exception("minIntrinsicWidth (" + H.S(minIntrinsicWidth) + ") is greater than maxIntrinsicWidth (" + H.S(maxIntrinsicWidth) + ")."));
    },
    _measureSubstring: function(_canvasContext, text, start, end, letterSpacing) {
      var cssFont, width, t1;
      if (start === end)
        return 0;
      cssFont = _canvasContext.font;
      if (start === $._lastStart && end === $._lastEnd && text === $._lastText && cssFont === $._lastCssFont)
        width = $._lastWidth;
      else {
        t1 = _canvasContext.measureText(start === 0 && end === text.length ? text : C.JSString_methods.substring$2(text, start, end)).width;
        t1.toString;
        width = t1;
      }
      $._lastStart = start;
      $._lastEnd = end;
      $._lastText = text;
      $._lastCssFont = cssFont;
      $._lastWidth = width;
      if (letterSpacing == null)
        letterSpacing = 0;
      return C.JSNumber_methods.round$0((letterSpacing !== 0 ? width + letterSpacing * (end - start) : width) * 100) / 100;
    },
    _excludeTrailing: function(text, start, end, predicate) {
      while (true) {
        if (!(start < end && predicate.call$1(C.JSString_methods.codeUnitAt$1(text, end - 1))))
          break;
        --end;
      }
      return end;
    },
    _calculateAlignOffsetForLine: function(lineWidth, maxWidth, paragraph) {
      var emptySpace = maxWidth - lineWidth;
      switch (paragraph._textAlign) {
        case C.TextAlign_2:
          return emptySpace / 2;
        case C.TextAlign_1:
          return emptySpace;
        case C.TextAlign_4:
          return paragraph._textDirection === C.TextDirection_0 ? emptySpace : 0;
        case C.TextAlign_5:
          return paragraph._textDirection === C.TextDirection_0 ? 0 : emptySpace;
        default:
          return 0;
      }
    },
    EngineLineMetrics$withText: function(displayText, endIndex, endIndexWithoutNewlines, hardBreak, left, lineNumber, startIndex, width, widthWithTrailingSpaces) {
      return new H.EngineLineMetrics(displayText, null, startIndex, endIndex, endIndexWithoutNewlines, null, hardBreak, 1 / 0, 1 / 0, 1 / 0, width, widthWithTrailingSpaces, left, 1 / 0, lineNumber);
    },
    EngineTextStyle$only: function(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1 = fontFamily == null,
        t2 = t1 ? "" : fontFamily;
      return new H.EngineTextStyle(color, decoration, decorationColor, decorationStyle, decorationThickness, fontWeight, fontStyle, textBaseline, !t1, t2, fontFamilyFallback, fontFeatures, fontSize, letterSpacing, wordSpacing, height, locale, background, foreground, shadows);
    },
    fontWeightToCss: function(fontWeight) {
      if (fontWeight == null)
        return null;
      return H.fontWeightIndexToCss(fontWeight.index);
    },
    fontWeightIndexToCss: function(fontWeightIndex) {
      switch (fontWeightIndex) {
        case 0:
          return "100";
        case 1:
          return "200";
        case 2:
          return "300";
        case 3:
          return "normal";
        case 4:
          return "500";
        case 5:
          return "600";
        case 6:
          return "bold";
        case 7:
          return "800";
        case 8:
          return "900";
      }
      return "";
    },
    _applyTextStyleToElement: function(element, isSpan, style) {
      var t2, updateDecoration, textDecoration, decorationColor,
        cssStyle = element.style,
        t1 = style._foreground,
        color = t1 == null ? null : t1.get$color(t1);
      if (color == null)
        color = style._color;
      if (color != null) {
        t1 = H.colorToCssString(color);
        cssStyle.color = t1 == null ? "" : t1;
      }
      t1 = style.__engine$_height;
      if (t1 != null) {
        t1 = H.S(t1);
        cssStyle.lineHeight = t1;
      }
      t1 = style._fontSize;
      if (t1 != null) {
        t1 = "" + C.JSNumber_methods.floor$0(t1) + "px";
        cssStyle.fontSize = t1;
      }
      t1 = style._fontWeight;
      if (t1 != null) {
        t1 = H.fontWeightToCss(t1);
        cssStyle.fontWeight = t1 == null ? "" : t1;
      }
      if (isSpan && true) {
        t1 = H.canonicalizeFontFamily(style._fontFamily);
        cssStyle.fontFamily = t1 == null ? "" : t1;
      } else {
        t1 = H.canonicalizeFontFamily(style.get$_effectiveFontFamily());
        cssStyle.fontFamily = t1 == null ? "" : t1;
      }
      t1 = style._letterSpacing;
      if (t1 != null) {
        t1 = H.S(t1) + "px";
        cssStyle.letterSpacing = t1;
      }
      t1 = style._wordSpacing;
      if (t1 != null) {
        t1 = H.S(t1) + "px";
        cssStyle.wordSpacing = t1;
      }
      t1 = style._decoration;
      t2 = t1 != null;
      updateDecoration = t2 && true;
      if (updateDecoration)
        if (t2) {
          textDecoration = H._textDecorationToCssString(t1, style._decorationStyle);
          if (textDecoration != null) {
            t1 = H._browserEngine();
            if (t1 === C.BrowserEngine_1)
              H.DomRenderer_setElementStyle(element, "-webkit-text-decoration", textDecoration);
            else
              cssStyle.textDecoration = textDecoration;
            decorationColor = style._decorationColor;
            if (decorationColor != null) {
              t1 = H.colorToCssString(decorationColor);
              t1.toString;
              C.CssStyleDeclaration_methods._setPropertyHelper$3(cssStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(cssStyle, "text-decoration-color"), t1, "");
            }
          }
        }
    },
    _createPlaceholderElement: function(placeholder) {
      var style, t1,
        element = $.$get$domRenderer().createElement$1(0, "span");
      element.className = "paragraph-placeholder";
      style = element.style;
      style.display = "inline-block";
      t1 = H.S(placeholder.get$width(placeholder)) + "px";
      style.width = t1;
      t1 = H.S(placeholder.get$height(placeholder)) + "px";
      style.height = t1;
      t1 = H._placeholderAlignmentToCssVerticalAlign(placeholder);
      style.verticalAlign = t1 == null ? "" : t1;
      return element;
    },
    _placeholderAlignmentToCssVerticalAlign: function(placeholder) {
      switch (placeholder.get$alignment()) {
        case C.PlaceholderAlignment_3:
          return "top";
        case C.PlaceholderAlignment_5:
          return "middle";
        case C.PlaceholderAlignment_4:
          return "bottom";
        case C.PlaceholderAlignment_1:
          return "baseline";
        case C.PlaceholderAlignment_2:
          return "-" + H.S(placeholder.get$height(placeholder)) + "px";
        case C.PlaceholderAlignment_0:
          return H.S(placeholder.get$baselineOffset().$sub(0, placeholder.get$height(placeholder))) + "px";
      }
    },
    _applyTextBackgroundToElement: function(element, style) {
      var newBackground = style._background;
      if (newBackground != null)
        H.DomRenderer_setElementStyle(element, "background-color", H.colorToCssString(newBackground.get$color(newBackground)));
    },
    _textDecorationToCssString: function(decoration, decorationStyle) {
      var t1, t2;
      if (decoration != null) {
        t1 = decoration._mask;
        t2 = (t1 | 1) === t1 ? "" + "underline " : "";
        if ((t1 | 2) === t1)
          t2 += "overline ";
        t1 = (t1 | 4) === t1 ? t2 + "line-through " : t2;
      } else
        t1 = "";
      if (decorationStyle != null)
        t1 += H.S(H._decorationStyleToCssString(decorationStyle));
      return t1.length === 0 ? null : t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _decorationStyleToCssString: function(decorationStyle) {
      switch (decorationStyle) {
        case C.TextDecorationStyle_3:
          return "dashed";
        case C.TextDecorationStyle_2:
          return "dotted";
        case C.TextDecorationStyle_1:
          return "double";
        case C.TextDecorationStyle_0:
          return "solid";
        case C.TextDecorationStyle_4:
          return "wavy";
        default:
          return null;
      }
    },
    _textDirectionToCss: function(textDirection) {
      if (textDirection == null)
        return null;
      return H.textDirectionIndexToCss(textDirection.index);
    },
    textDirectionIndexToCss: function(textDirectionIndex) {
      switch (textDirectionIndex) {
        case 0:
          return "rtl";
        case 1:
          return null;
      }
      return null;
    },
    textAlignToCssValue: function(align, textDirection) {
      switch (align) {
        case C.TextAlign_0:
          return "left";
        case C.TextAlign_1:
          return "right";
        case C.TextAlign_2:
          return "center";
        case C.TextAlign_3:
          return "justify";
        case C.TextAlign_5:
          switch (textDirection) {
            case C.TextDirection_1:
              return "end";
            case C.TextDirection_0:
              return "left";
          }
          break;
        case C.TextAlign_4:
          switch (textDirection) {
            case C.TextDirection_1:
              return "";
            case C.TextDirection_0:
              return "right";
          }
          break;
        case null:
          return "";
      }
    },
    _listEquals: function(a, b) {
      var index;
      if (a == null)
        return b == null;
      if (b == null || a.length !== b.length)
        return false;
      for (index = 0; index < a.length; ++index)
        if (!J.$eq$(a[index], b[index]))
          return false;
      return true;
    },
    _buildCssFontString: function(fontFamily, fontSize, fontStyle, fontWeight) {
      var t1;
      "" + "normal";
      t1 = "" + "normal ";
      t1 = (fontWeight != null ? t1 + H.S(H.fontWeightToCss(fontWeight)) : t1 + "normal") + " ";
      t1 = (fontSize != null ? t1 + C.JSNumber_methods.floor$0(fontSize) : t1 + "14") + "px " + H.S(H.canonicalizeFontFamily(fontFamily));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    MeasurementResult$: function(constraintWidth, alphabeticBaseline, height, ideographicBaseline, isSingleLine, lineHeight, lines, maxIntrinsicWidth, minIntrinsicWidth, naturalHeight, placeholderBoxes, textAlign, textDirection, width) {
      return new H.MeasurementResult(constraintWidth, isSingleLine, width, height, naturalHeight, lineHeight, minIntrinsicWidth, maxIntrinsicWidth, alphabeticBaseline, ideographicBaseline, lines, placeholderBoxes, textAlign, textDirection);
    },
    getCodePoint: function(text, index) {
      var char;
      if (index < 0 || index >= text.length)
        return null;
      char = C.JSString_methods.codeUnitAt$1(text, index);
      if ((char & 63488) === 55296 && index < text.length - 1)
        return (char >>> 6 & 31) + 1 << 16 | (char & 63) << 10 | C.JSString_methods.codeUnitAt$1(text, index + 1) & 1023;
      return char;
    },
    _unpackProperties: function(packedData, singleRangesCount, propertyEnumValues, $P) {
      var t1, i, rangeStart, rangeEnd, i0,
        ranges = H.setRuntimeTypeInfo([], $P._eval$1("JSArray<UnicodeRange<0>>")),
        dataLength = packedData.length;
      for (t1 = $P._eval$1("UnicodeRange<0>"), i = 0; i < dataLength; i = i0) {
        rangeStart = H._consumeInt(packedData, i);
        i += 4;
        if (C.JSString_methods._codeUnitAt$1(packedData, i) === 33) {
          ++i;
          rangeEnd = rangeStart;
        } else {
          rangeEnd = H._consumeInt(packedData, i);
          i += 4;
        }
        i0 = i + 1;
        ranges.push(new H.UnicodeRange(rangeStart, rangeEnd, propertyEnumValues[H._getEnumIndexFromPackedValue(C.JSString_methods._codeUnitAt$1(packedData, i))], t1));
      }
      return ranges;
    },
    _getEnumIndexFromPackedValue: function(charCode) {
      if (charCode <= 90)
        return charCode - 65;
      return 26 + charCode - 97;
    },
    _consumeInt: function(packedData, index) {
      return H._getIntFromCharCode(C.JSString_methods._codeUnitAt$1(packedData, index + 3)) + H._getIntFromCharCode(C.JSString_methods._codeUnitAt$1(packedData, index + 2)) * 36 + H._getIntFromCharCode(C.JSString_methods._codeUnitAt$1(packedData, index + 1)) * 36 * 36 + H._getIntFromCharCode(C.JSString_methods._codeUnitAt$1(packedData, index)) * 36 * 36 * 36;
    },
    _getIntFromCharCode: function(charCode) {
      if (charCode <= 57)
        return charCode - 48;
      return charCode - 97 + 10;
    },
    EngineInputType_fromName: function($name, isDecimal) {
      switch ($name) {
        case "TextInputType.number":
          return isDecimal ? C.C_DecimalInputType : C.C_NumberInputType;
        case "TextInputType.phone":
          return C.C_PhoneInputType;
        case "TextInputType.emailAddress":
          return C.C_EmailInputType;
        case "TextInputType.url":
          return C.C_UrlInputType;
        case "TextInputType.multiline":
          return C.C_MultilineInputType;
        case "TextInputType.text":
        default:
          return C.C_TextInputType;
      }
    },
    TextCapitalizationConfig$fromInputConfiguration: function(inputConfiguration) {
      var t1;
      if (inputConfiguration === "TextCapitalization.words")
        t1 = C.TextCapitalization_0;
      else if (inputConfiguration === "TextCapitalization.characters")
        t1 = C.TextCapitalization_2;
      else
        t1 = inputConfiguration === "TextCapitalization.sentences" ? C.TextCapitalization_1 : C.TextCapitalization_3;
      return new H.TextCapitalizationConfig(t1);
    },
    _emptyCallback: function(_) {
    },
    _hideAutofillElements: function(domElement, isOffScreen) {
      var t1,
        _s11_ = "transparent",
        _s4_ = "none",
        elementStyle = domElement.style;
      elementStyle.whiteSpace = "pre-wrap";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "align-content"), "center", "");
      elementStyle.padding = "0";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "opacity"), "1", "");
      elementStyle.color = _s11_;
      elementStyle.backgroundColor = _s11_;
      elementStyle.background = _s11_;
      elementStyle.outline = _s4_;
      elementStyle.border = _s4_;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "resize"), _s4_, "");
      elementStyle.width = "0";
      elementStyle.height = "0";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "text-shadow"), _s11_, "");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "transform-origin"), "0 0 0", "");
      if (isOffScreen) {
        elementStyle.top = "-9999px";
        elementStyle.left = "-9999px";
      }
      t1 = H._browserEngine();
      if (t1 !== C.BrowserEngine_0) {
        t1 = H._browserEngine();
        if (t1 !== C.BrowserEngine_5) {
          t1 = H._browserEngine();
          t1 = t1 === C.BrowserEngine_1;
        } else
          t1 = true;
      } else
        t1 = true;
      if (t1)
        domElement.classList.add("transparentTextEditing");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "caret-color"), _s11_, null);
    },
    EngineAutofillForm_fromFrameworkMessage: function(focusedElementAutofill, fields) {
      var t1, elements, items, formElement, ids, focusedElement, t2, t3, t4, t5, autofillInfo, t6, autofill, htmlElement, _i, id, formIdentifier, form, submitButton;
      if (focusedElementAutofill == null)
        return null;
      t1 = type$.String;
      elements = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.HtmlElement);
      items = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.AutofillInfo);
      formElement = document.createElement("form");
      formElement.noValidate = true;
      formElement.method = "post";
      formElement.action = "#";
      C.FormElement_methods.addEventListener$2(formElement, "submit", new H.EngineAutofillForm_fromFrameworkMessage_closure());
      H._hideAutofillElements(formElement, false);
      ids = J.JSArray_JSArray$growable(0, t1);
      focusedElement = H.AutofillInfo_AutofillInfo$fromFrameworkMessage(focusedElementAutofill, C.TextCapitalizationConfig_TextCapitalization_3);
      if (fields != null)
        for (t1 = J.cast$1$0$ax(fields, type$.Map_String_dynamic), t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = focusedElement.uniqueIdentifier, t3 = H._instanceType(t1)._precomputed1; t1.moveNext$0();) {
          t4 = t3._as(t1._current);
          t5 = J.getInterceptor$asx(t4);
          autofillInfo = t5.$index(t4, "autofill");
          t6 = t5.$index(t4, "textCapitalization");
          if (t6 === "TextCapitalization.words")
            t6 = C.TextCapitalization_0;
          else if (t6 === "TextCapitalization.characters")
            t6 = C.TextCapitalization_2;
          else
            t6 = t6 === "TextCapitalization.sentences" ? C.TextCapitalization_1 : C.TextCapitalization_3;
          autofill = H.AutofillInfo_AutofillInfo$fromFrameworkMessage(autofillInfo, new H.TextCapitalizationConfig(t6));
          t6 = autofill.uniqueIdentifier;
          ids.push(t6);
          if (t6 !== t2) {
            htmlElement = H.EngineInputType_fromName(J.$index$asx(t5.$index(t4, "inputType"), "name"), false).createDomElement$0();
            autofill.editingState.applyToDomElement$1(htmlElement);
            autofill.applyToDomElement$1(htmlElement);
            H._hideAutofillElements(htmlElement, false);
            items.$indexSet(0, t6, autofill);
            elements.$indexSet(0, t6, htmlElement);
            formElement.appendChild(htmlElement);
          }
        }
      else
        ids.push(focusedElement.uniqueIdentifier);
      C.JSArray_methods.sort$0(ids);
      for (t1 = ids.length, _i = 0, t2 = ""; _i < t1; ++_i) {
        id = ids[_i];
        t2 = (t2.length > 0 ? t2 + "*" : t2) + id;
      }
      formIdentifier = t2.charCodeAt(0) == 0 ? t2 : t2;
      form = $.$get$formsOnTheDom().$index(0, formIdentifier);
      if (form != null)
        C.FormElement_methods.remove$0(form);
      submitButton = W.InputElement_InputElement();
      H._hideAutofillElements(submitButton, true);
      submitButton.className = "submitBtn";
      submitButton.type = "submit";
      formElement.appendChild(submitButton);
      return new H.EngineAutofillForm(formElement, elements, items, formIdentifier);
    },
    AutofillInfo_AutofillInfo$fromFrameworkMessage: function(autofill, textCapitalization) {
      var hintsList, editingState, t3,
        t1 = J.getInterceptor$asx(autofill),
        t2 = t1.$index(autofill, "uniqueIdentifier");
      t2.toString;
      hintsList = t1.$index(autofill, "hints");
      editingState = H.EditingState_EditingState$fromFrameworkMessage(t1.$index(autofill, "editingValue"));
      t1 = $.$get$BrowserAutofillHints__singletonInstance();
      t3 = J.$index$asx(hintsList, 0);
      t1 = t1._flutterToEngineMap.$index(0, t3);
      return new H.AutofillInfo(editingState, t2, textCapitalization, t1 == null ? t3 : t1);
    },
    EditingState$: function(baseOffset, extentOffset, text) {
      var t1 = baseOffset == null,
        t2 = t1 ? 0 : baseOffset,
        t3 = extentOffset == null,
        t4 = t3 ? 0 : extentOffset;
      t4 = Math.max(0, Math.min(t2, t4));
      t1 = t1 ? 0 : baseOffset;
      t2 = t3 ? 0 : extentOffset;
      return new H.EditingState(text, t4, Math.max(0, Math.max(t1, t2)));
    },
    EditingState_EditingState$fromFrameworkMessage: function(flutterEditingState) {
      var t1 = J.getInterceptor$asx(flutterEditingState);
      return H.EditingState$(t1.$index(flutterEditingState, "selectionBase"), t1.$index(flutterEditingState, "selectionExtent"), t1.$index(flutterEditingState, "text"));
    },
    EditingState_EditingState$fromDomElement: function(domElement, textCapitalization) {
      var t1;
      if (type$.InputElement._is(domElement)) {
        t1 = domElement.value;
        return H.EditingState$(domElement.selectionStart, domElement.selectionEnd, t1);
      } else if (type$.TextAreaElement._is(domElement)) {
        t1 = domElement.value;
        return H.EditingState$(domElement.selectionStart, domElement.selectionEnd, t1);
      } else
        throw H.wrapException(P.UnsupportedError$("Initialized with unsupported input type"));
    },
    InputConfiguration$fromFrameworkMessage: function(flutterInputConfiguration) {
      var t4, t5, t6, t7, t8,
        _s9_ = "inputType",
        _s8_ = "autofill",
        t1 = J.getInterceptor$asx(flutterInputConfiguration),
        t2 = J.$index$asx(t1.$index(flutterInputConfiguration, _s9_), "name"),
        t3 = J.$index$asx(t1.$index(flutterInputConfiguration, _s9_), "decimal");
      t2 = H.EngineInputType_fromName(t2, t3 == null ? false : t3);
      t3 = t1.$index(flutterInputConfiguration, "inputAction");
      if (t3 == null)
        t3 = "TextInputAction.done";
      t4 = t1.$index(flutterInputConfiguration, "obscureText");
      if (t4 == null)
        t4 = false;
      t5 = t1.$index(flutterInputConfiguration, "readOnly");
      if (t5 == null)
        t5 = false;
      t6 = t1.$index(flutterInputConfiguration, "autocorrect");
      if (t6 == null)
        t6 = true;
      t7 = H.TextCapitalizationConfig$fromInputConfiguration(t1.$index(flutterInputConfiguration, "textCapitalization"));
      t8 = t1.containsKey$1(flutterInputConfiguration, _s8_) ? H.AutofillInfo_AutofillInfo$fromFrameworkMessage(t1.$index(flutterInputConfiguration, _s8_), C.TextCapitalizationConfig_TextCapitalization_3) : null;
      return new H.InputConfiguration(t2, t3, t5, t4, t6, t8, H.EngineAutofillForm_fromFrameworkMessage(t1.$index(flutterInputConfiguration, _s8_), t1.$index(flutterInputConfiguration, "fields")), t7);
    },
    saveForms: function() {
      $.$get$formsOnTheDom().forEach$1(0, new H.saveForms_closure());
    },
    cleanForms: function() {
      var t1, t2, t3;
      for (t1 = $.$get$formsOnTheDom(), t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        t3 = t2.parentNode;
        if (t3 != null)
          t3.removeChild(t2);
      }
      $.$get$formsOnTheDom().clear$0(0);
    },
    setElementTransform: function(element, matrix4) {
      var t2,
        t1 = element.style;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform-origin"), "0 0 0", "");
      t2 = H.float64ListToCssTransform(matrix4);
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    float64ListToCssTransform: function(matrix) {
      var transformKind = H.transformKindOf(matrix);
      if (transformKind === C.TransformKind_1)
        return "matrix(" + H.S(matrix[0]) + "," + H.S(matrix[1]) + "," + H.S(matrix[4]) + "," + H.S(matrix[5]) + "," + H.S(matrix[12]) + "," + H.S(matrix[13]) + ")";
      else if (transformKind === C.TransformKind_2)
        return H.float64ListToCssTransform3d(matrix);
      else
        return "none";
    },
    transformKindOf: function(matrix) {
      if (!(matrix[15] === 1 && matrix[14] === 0 && matrix[11] === 0 && matrix[10] === 1 && matrix[9] === 0 && matrix[8] === 0 && matrix[7] === 0 && matrix[6] === 0 && matrix[3] === 0 && matrix[2] === 0))
        return C.TransformKind_2;
      if (matrix[0] === 1 && matrix[1] === 0 && matrix[4] === 0 && matrix[5] === 1 && matrix[12] === 0 && matrix[13] === 0)
        return C.TransformKind_0;
      else
        return C.TransformKind_1;
    },
    float64ListToCssTransform3d: function(matrix) {
      var tx, ty,
        t1 = matrix[0];
      if (t1 === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 0 && matrix[4] === 0 && matrix[5] === 1 && matrix[6] === 0 && matrix[7] === 0 && matrix[8] === 0 && matrix[9] === 0 && matrix[10] === 1 && matrix[11] === 0 && matrix[14] === 0 && matrix[15] === 1) {
        tx = matrix[12];
        ty = matrix[13];
        return "translate3d(" + H.S(tx) + "px, " + H.S(ty) + "px, 0px)";
      } else
        return "matrix3d(" + H.S(t1) + "," + H.S(matrix[1]) + "," + H.S(matrix[2]) + "," + H.S(matrix[3]) + "," + H.S(matrix[4]) + "," + H.S(matrix[5]) + "," + H.S(matrix[6]) + "," + H.S(matrix[7]) + "," + H.S(matrix[8]) + "," + H.S(matrix[9]) + "," + H.S(matrix[10]) + "," + H.S(matrix[11]) + "," + H.S(matrix[12]) + "," + H.S(matrix[13]) + "," + H.S(matrix[14]) + "," + H.S(matrix[15]) + ")";
    },
    transformRect: function(transform, rect) {
      var t1 = $.$get$_tempRectData();
      t1[0] = rect.left;
      t1[1] = rect.top;
      t1[2] = rect.right;
      t1[3] = rect.bottom;
      H.transformLTRB(transform, t1);
      return new P.Rect(t1[0], t1[1], t1[2], t1[3]);
    },
    transformLTRB: function(transform, ltrb) {
      var t2, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33, argStorage, w,
        t1 = $.$get$_tempPointData();
      t1[0] = ltrb[0];
      t1[4] = ltrb[1];
      t1[8] = 0;
      t1[12] = 1;
      t1[1] = ltrb[2];
      t1[5] = ltrb[1];
      t1[9] = 0;
      t1[13] = 1;
      t1[2] = ltrb[0];
      t1[6] = ltrb[3];
      t1[10] = 0;
      t1[14] = 1;
      t1[3] = ltrb[2];
      t1[7] = ltrb[3];
      t1[11] = 0;
      t1[15] = 1;
      t2 = $.$get$_tempPointMatrix().__engine$_m4storage;
      m00 = t2[0];
      m01 = t2[4];
      m02 = t2[8];
      m03 = t2[12];
      m10 = t2[1];
      m11 = t2[5];
      m12 = t2[9];
      m13 = t2[13];
      m20 = t2[2];
      m21 = t2[6];
      m22 = t2[10];
      m23 = t2[14];
      m30 = t2[3];
      m31 = t2[7];
      m32 = t2[11];
      m33 = t2[15];
      argStorage = transform.__engine$_m4storage;
      t2[0] = m00 * argStorage[0] + m01 * argStorage[4] + m02 * argStorage[8] + m03 * argStorage[12];
      t2[4] = m00 * argStorage[1] + m01 * argStorage[5] + m02 * argStorage[9] + m03 * argStorage[13];
      t2[8] = m00 * argStorage[2] + m01 * argStorage[6] + m02 * argStorage[10] + m03 * argStorage[14];
      t2[12] = m00 * argStorage[3] + m01 * argStorage[7] + m02 * argStorage[11] + m03 * argStorage[15];
      t2[1] = m10 * argStorage[0] + m11 * argStorage[4] + m12 * argStorage[8] + m13 * argStorage[12];
      t2[5] = m10 * argStorage[1] + m11 * argStorage[5] + m12 * argStorage[9] + m13 * argStorage[13];
      t2[9] = m10 * argStorage[2] + m11 * argStorage[6] + m12 * argStorage[10] + m13 * argStorage[14];
      t2[13] = m10 * argStorage[3] + m11 * argStorage[7] + m12 * argStorage[11] + m13 * argStorage[15];
      t2[2] = m20 * argStorage[0] + m21 * argStorage[4] + m22 * argStorage[8] + m23 * argStorage[12];
      t2[6] = m20 * argStorage[1] + m21 * argStorage[5] + m22 * argStorage[9] + m23 * argStorage[13];
      t2[10] = m20 * argStorage[2] + m21 * argStorage[6] + m22 * argStorage[10] + m23 * argStorage[14];
      t2[14] = m20 * argStorage[3] + m21 * argStorage[7] + m22 * argStorage[11] + m23 * argStorage[15];
      t2[3] = m30 * argStorage[0] + m31 * argStorage[4] + m32 * argStorage[8] + m33 * argStorage[12];
      t2[7] = m30 * argStorage[1] + m31 * argStorage[5] + m32 * argStorage[9] + m33 * argStorage[13];
      t2[11] = m30 * argStorage[2] + m31 * argStorage[6] + m32 * argStorage[10] + m33 * argStorage[14];
      t2[15] = m30 * argStorage[3] + m31 * argStorage[7] + m32 * argStorage[11] + m33 * argStorage[15];
      w = argStorage[15];
      if (w === 0)
        w = 1;
      ltrb[0] = Math.min(Math.min(Math.min(t1[0], t1[1]), t1[2]), t1[3]) / w;
      ltrb[1] = Math.min(Math.min(Math.min(t1[4], t1[5]), t1[6]), t1[7]) / w;
      ltrb[2] = Math.max(Math.max(Math.max(t1[0], t1[1]), t1[2]), t1[3]) / w;
      ltrb[3] = Math.max(Math.max(Math.max(t1[4], t1[5]), t1[6]), t1[7]) / w;
    },
    rectContainsOther: function(rect, other) {
      return rect.left <= other.left && rect.top <= other.top && rect.right >= other.right && rect.bottom >= other.bottom;
    },
    _pathToSvgClipPath: function(path, offsetX, offsetY, scaleX, scaleY) {
      var sb, t2, clipId,
        t1 = $._clipIdCounter + 1;
      $._clipIdCounter = t1;
      sb = new P.StringBuffer("");
      t2 = "" + '<svg width="0" height="0" style="position:absolute">';
      sb._contents = t2;
      t2 = sb._contents = t2 + "<defs>";
      clipId = "svgClip" + t1;
      t1 = H._browserEngine();
      if (t1 === C.BrowserEngine_2) {
        t1 = t2 + ("<clipPath id=" + clipId + ">");
        sb._contents = t1;
        sb._contents = t1 + '<path fill="#FFFFFF" d="';
      } else {
        t1 = t2 + ("<clipPath id=" + clipId + ' clipPathUnits="objectBoundingBox">');
        sb._contents = t1;
        sb._contents = t1 + ('<path transform="scale(' + H.S(scaleX) + ", " + H.S(scaleY) + ')" fill="#FFFFFF" d="');
      }
      H.pathToSvg(type$.SurfacePath._as(path), sb, offsetX, offsetY);
      t1 = sb._contents += '"></path></clipPath></defs></svg';
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    colorToCssString: function(color) {
      var value, hexValue, t1;
      if (color == null)
        return null;
      value = color.get$value(color);
      if ((value & 4278190080) >>> 0 === 4278190080) {
        hexValue = C.JSInt_methods.toRadixString$1(value & 16777215, 16);
        switch (hexValue.length) {
          case 1:
            return "#00000" + hexValue;
          case 2:
            return "#0000" + hexValue;
          case 3:
            return "#000" + hexValue;
          case 4:
            return "#00" + hexValue;
          case 5:
            return "#0" + hexValue;
          default:
            return "#" + hexValue;
        }
      } else {
        t1 = "" + "rgba(" + C.JSInt_methods.toString$0(value >>> 16 & 255) + "," + C.JSInt_methods.toString$0(value >>> 8 & 255) + "," + C.JSInt_methods.toString$0(value & 255) + "," + C.JSNumber_methods.toString$0((value >>> 24 & 255) / 255) + ")";
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    colorComponentsToCssString: function(r, g, b, a) {
      if (a === 255)
        return "rgb(" + r + "," + g + "," + b + ")";
      else
        return "rgba(" + r + "," + g + "," + b + "," + C.JSNumber_methods.toStringAsFixed$1(a / 255, 2) + ")";
    },
    isMacOrIOS: function() {
      var t1 = H._operatingSystem();
      if (t1 !== C.OperatingSystem_0) {
        t1 = H._operatingSystem();
        t1 = t1 === C.OperatingSystem_4;
      } else
        t1 = true;
      return t1;
    },
    canonicalizeFontFamily: function(fontFamily) {
      var t1;
      if (J.containsKey$1$x(C.Set_wIvsi._collection$_map, fontFamily))
        return fontFamily;
      t1 = H._operatingSystem();
      if (t1 !== C.OperatingSystem_0) {
        t1 = H._operatingSystem();
        t1 = t1 === C.OperatingSystem_4;
      } else
        t1 = true;
      if (t1)
        if (fontFamily === ".SF Pro Text" || fontFamily === ".SF Pro Display" || fontFamily === ".SF UI Text" || fontFamily === ".SF UI Display")
          return $.$get$_fallbackFontFamily();
      return '"' + H.S(fontFamily) + '", ' + $.$get$_fallbackFontFamily() + ", sans-serif";
    },
    sendFontChangeMessage: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic);
      var $async$sendFontChangeMessage = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!$._fontChangeScheduled) {
                $._fontChangeScheduled = true;
                C.Window_methods.requestAnimationFrame$1(window, new H.sendFontChangeMessage_closure());
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$sendFontChangeMessage, $async$completer);
    },
    clampInt: function(value, min, max) {
      if (value < min)
        return min;
      else if (value > max)
        return max;
      else
        return value;
    },
    Matrix4_tryInvert0: function(other) {
      var r = new H.Matrix40(new Float32Array(16));
      if (r.copyInverse$1(other) === 0)
        return null;
      return r;
    },
    Matrix4$identity: function() {
      var t1 = new Float32Array(16);
      t1[15] = 1;
      t1[0] = 1;
      t1[5] = 1;
      t1[10] = 1;
      return new H.Matrix40(t1);
    },
    Matrix4$fromFloat32List: function(_m4storage) {
      return new H.Matrix40(_m4storage);
    },
    WebExperiments$_: function() {
      var t1 = new H.WebExperiments();
      t1.WebExperiments$_$0();
      return t1;
    },
    EngineSingletonFlutterWindow$: function(windowId, platformDispatcher) {
      var t1 = new H.EngineSingletonFlutterWindow(windowId, platformDispatcher, C.WindowPadding_0_0_0_0);
      t1.EngineFlutterWindow$2(windowId, platformDispatcher);
      return t1;
    },
    initializeEngine_closure: function initializeEngine_closure() {
    },
    initializeEngine_closure0: function initializeEngine_closure0(t0) {
      this._box_0 = t0;
    },
    initializeEngine__closure: function initializeEngine__closure(t0) {
      this._box_0 = t0;
    },
    _addUrlStrategyListener_closure: function _addUrlStrategyListener_closure() {
    },
    _addUrlStrategyListener_closure0: function _addUrlStrategyListener_closure0() {
    },
    _NullTreeSanitizer: function _NullTreeSanitizer() {
    },
    AlarmClock: function AlarmClock(t0) {
      var _ = this;
      _._timestampFunction = t0;
      _.__AlarmClock_callback = _._datetime = _._timer = null;
    },
    AssetManager: function AssetManager() {
    },
    AssetManager__baseUrl_closure: function AssetManager__baseUrl_closure() {
    },
    AssetManager__baseUrl_closure0: function AssetManager__baseUrl_closure0() {
    },
    AssetManagerException: function AssetManagerException(t0, t1) {
      this.url = t0;
      this.httpStatus = t1;
    },
    BitmapCanvas: function BitmapCanvas(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._bounds = t0;
      _._elementCache = null;
      _.rootElement = t1;
      _._canvasPool = t2;
      _._cachedLastCssFont = null;
      _.__engine$_children = t3;
      _._widthInBitmapPixels = t4;
      _._heightInBitmapPixels = t5;
      _._saveCount = 0;
      _._devicePixelRatio = t6;
      _._canvasPositionY = _._canvasPositionX = null;
      _._preserveImageData = _._contains3dTransform = _._childOverdraw = false;
      _._density = t7;
      _._renderStrategy = t8;
    },
    BrowserEngine: function BrowserEngine(t0) {
      this.__engine$_name = t0;
    },
    OperatingSystem: function OperatingSystem(t0) {
      this.__engine$_name = t0;
    },
    _CanvasPool: function _CanvasPool(t0, t1, t2, t3, t4) {
      var _ = this;
      _._contextHandle = _.__engine$_context = null;
      _._widthInBitmapPixels = t0;
      _._heightInBitmapPixels = t1;
      _._rootElement = _.__engine$_canvas = _._reusablePool = _._activeCanvasList = null;
      _._saveContextCount = 0;
      _._density = t2;
      _._saveStack = t3;
      _._clipStack = null;
      _._currentTransform = t4;
    },
    ContextStateHandle: function ContextStateHandle(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.context = t0;
      _._canvasPool = t1;
      _.density = t2;
      _._currentBlendMode = t3;
      _._currentStrokeCap = t4;
      _._currentStrokeJoin = t5;
      _._currentStrokeStyle = _._currentFillStyle = null;
      _._currentLineWidth = 1;
      _._shaderBounds = _._lastUsedPaint = _._currentFilter = null;
      _._debugIsPaintSetUp = false;
    },
    _SaveStackTracking: function _SaveStackTracking() {
    },
    CkCanvas: function CkCanvas(t0) {
      this.skCanvas = t0;
    },
    RecordingCkCanvas: function RecordingCkCanvas(t0, t1) {
      this.pictureSnapshot = t0;
      this.skCanvas = t1;
    },
    CkPictureSnapshot: function CkPictureSnapshot(t0, t1) {
      this._bounds = t0;
      this._commands = t1;
    },
    CkPaintCommand: function CkPaintCommand() {
    },
    CkSaveCommand: function CkSaveCommand() {
    },
    CkRestoreCommand: function CkRestoreCommand() {
    },
    CkRestoreToCountCommand: function CkRestoreToCountCommand(t0) {
      this.count = t0;
    },
    CkTranslateCommand: function CkTranslateCommand(t0, t1) {
      this.dx = t0;
      this.dy = t1;
    },
    CkTransformCommand: function CkTransformCommand(t0) {
      this.matrix4 = t0;
    },
    CkClipRectCommand: function CkClipRectCommand(t0, t1, t2) {
      this.rect = t0;
      this.clipOp = t1;
      this.doAntiAlias = t2;
    },
    CkClipRRectCommand: function CkClipRRectCommand(t0, t1) {
      this.rrect = t0;
      this.doAntiAlias = t1;
    },
    CkClipPathCommand: function CkClipPathCommand(t0, t1) {
      this.path = t0;
      this.doAntiAlias = t1;
    },
    CkDrawPaintCommand: function CkDrawPaintCommand(t0) {
      this.paint = t0;
    },
    CkDrawRectCommand: function CkDrawRectCommand(t0, t1) {
      this.rect = t0;
      this.paint = t1;
    },
    CkDrawRRectCommand: function CkDrawRRectCommand(t0, t1) {
      this.rrect = t0;
      this.paint = t1;
    },
    CkDrawDRRectCommand: function CkDrawDRRectCommand(t0, t1, t2) {
      this.outer = t0;
      this.inner = t1;
      this.paint = t2;
    },
    CkDrawCircleCommand: function CkDrawCircleCommand(t0, t1, t2) {
      this.c = t0;
      this.radius = t1;
      this.paint = t2;
    },
    CkDrawPathCommand: function CkDrawPathCommand(t0, t1) {
      this.path = t0;
      this.paint = t1;
    },
    CkDrawShadowCommand: function CkDrawShadowCommand(t0, t1, t2, t3) {
      var _ = this;
      _.path = t0;
      _.color = t1;
      _.elevation = t2;
      _.transparentOccluder = t3;
    },
    CkDrawParagraphCommand: function CkDrawParagraphCommand(t0, t1) {
      this.paragraph = t0;
      this.offset = t1;
    },
    CkDrawPictureCommand: function CkDrawPictureCommand(t0) {
      this.picture = t0;
    },
    CkSaveLayerCommand: function CkSaveLayerCommand(t0, t1) {
      this.bounds = t0;
      this.paint = t1;
    },
    CanvasKit: function CanvasKit() {
    },
    CanvasKitInitOptions: function CanvasKitInitOptions() {
    },
    CanvasKitInitPromise: function CanvasKitInitPromise() {
    },
    ColorSpace: function ColorSpace() {
    },
    SkWebGLContextOptions: function SkWebGLContextOptions() {
    },
    SkSurface: function SkSurface() {
    },
    SkGrContext: function SkGrContext() {
    },
    SkFontSlantEnum: function SkFontSlantEnum() {
    },
    SkFontSlant: function SkFontSlant() {
    },
    SkFontWeightEnum: function SkFontWeightEnum() {
    },
    SkFontWeight: function SkFontWeight() {
    },
    SkAffinityEnum: function SkAffinityEnum() {
    },
    SkAffinity: function SkAffinity() {
    },
    SkTextDirectionEnum: function SkTextDirectionEnum() {
    },
    SkTextDirection: function SkTextDirection() {
    },
    SkTextAlignEnum: function SkTextAlignEnum() {
    },
    SkTextAlign: function SkTextAlign() {
    },
    SkRectHeightStyleEnum: function SkRectHeightStyleEnum() {
    },
    SkRectHeightStyle: function SkRectHeightStyle() {
    },
    SkRectWidthStyleEnum: function SkRectWidthStyleEnum() {
    },
    SkRectWidthStyle: function SkRectWidthStyle() {
    },
    SkVertexModeEnum: function SkVertexModeEnum() {
    },
    SkVertexMode: function SkVertexMode() {
    },
    SkPointModeEnum: function SkPointModeEnum() {
    },
    SkPointMode: function SkPointMode() {
    },
    SkClipOpEnum: function SkClipOpEnum() {
    },
    SkClipOp: function SkClipOp() {
    },
    SkFillTypeEnum: function SkFillTypeEnum() {
    },
    SkFillType: function SkFillType() {
    },
    SkPathOpEnum: function SkPathOpEnum() {
    },
    SkPathOp: function SkPathOp() {
    },
    SkBlurStyleEnum: function SkBlurStyleEnum() {
    },
    SkBlurStyle: function SkBlurStyle() {
    },
    SkStrokeCapEnum: function SkStrokeCapEnum() {
    },
    SkStrokeCap: function SkStrokeCap() {
    },
    SkPaintStyleEnum: function SkPaintStyleEnum() {
    },
    SkPaintStyle: function SkPaintStyle() {
    },
    SkBlendModeEnum: function SkBlendModeEnum() {
    },
    SkBlendMode: function SkBlendMode() {
    },
    SkStrokeJoinEnum: function SkStrokeJoinEnum() {
    },
    SkStrokeJoin: function SkStrokeJoin() {
    },
    SkFilterQualityEnum: function SkFilterQualityEnum() {
    },
    SkFilterQuality: function SkFilterQuality() {
    },
    SkTileModeEnum: function SkTileModeEnum() {
    },
    SkTileMode: function SkTileMode() {
    },
    SkFilterModeEnum: function SkFilterModeEnum() {
    },
    SkFilterMode: function SkFilterMode() {
    },
    SkMipmapModeEnum: function SkMipmapModeEnum() {
    },
    SkMipmapMode: function SkMipmapMode() {
    },
    SkAlphaTypeEnum: function SkAlphaTypeEnum() {
    },
    SkAlphaType: function SkAlphaType() {
    },
    SkColorTypeEnum: function SkColorTypeEnum() {
    },
    SkColorType: function SkColorType() {
    },
    SkAnimatedImage: function SkAnimatedImage() {
    },
    SkImage: function SkImage() {
    },
    SkShaderNamespace: function SkShaderNamespace() {
    },
    SkShader: function SkShader() {
    },
    SkMaskFilterNamespace: function SkMaskFilterNamespace() {
    },
    SkPaint: function SkPaint() {
    },
    SkMaskFilter: function SkMaskFilter() {
    },
    SkColorFilterNamespace: function SkColorFilterNamespace() {
    },
    SkColorFilter: function SkColorFilter() {
    },
    SkImageFilterNamespace: function SkImageFilterNamespace() {
    },
    SkImageFilter: function SkImageFilter() {
    },
    SkPathNamespace: function SkPathNamespace() {
    },
    _NativeFloat32ArrayType: function _NativeFloat32ArrayType() {
    },
    SkFloat32List: function SkFloat32List() {
    },
    SkPath: function SkPath() {
    },
    SkContourMeasureIter: function SkContourMeasureIter() {
    },
    SkContourMeasure: function SkContourMeasure() {
    },
    SkPictureRecorder: function SkPictureRecorder() {
    },
    SkCanvas: function SkCanvas() {
    },
    SkPicture: function SkPicture() {
    },
    SkParagraphBuilderNamespace: function SkParagraphBuilderNamespace() {
    },
    SkParagraphBuilder: function SkParagraphBuilder() {
    },
    SkParagraphStyle: function SkParagraphStyle() {
    },
    SkParagraphStyleProperties: function SkParagraphStyleProperties() {
    },
    SkTextStyle: function SkTextStyle() {
    },
    SkTextDecorationStyleEnum: function SkTextDecorationStyleEnum() {
    },
    SkTextDecorationStyle: function SkTextDecorationStyle() {
    },
    SkTextBaselineEnum: function SkTextBaselineEnum() {
    },
    SkTextBaseline: function SkTextBaseline() {
    },
    SkPlaceholderAlignmentEnum: function SkPlaceholderAlignmentEnum() {
    },
    SkPlaceholderAlignment: function SkPlaceholderAlignment() {
    },
    SkTextStyleProperties: function SkTextStyleProperties() {
    },
    SkStrutStyleProperties: function SkStrutStyleProperties() {
    },
    SkFontStyle: function SkFontStyle() {
    },
    SkTextShadow: function SkTextShadow() {
    },
    SkFontFeature: function SkFontFeature() {
    },
    SkTypeface: function SkTypeface() {
    },
    SkFont: function SkFont() {
    },
    SkFontMgr: function SkFontMgr() {
    },
    TypefaceFontProvider: function TypefaceFontProvider() {
    },
    SkLineMetrics: function SkLineMetrics() {
    },
    SkParagraph: function SkParagraph() {
    },
    SkTextPosition: function SkTextPosition() {
    },
    SkTextRange: function SkTextRange() {
    },
    SkVertices: function SkVertices() {
    },
    SkTonalColors: function SkTonalColors() {
    },
    SkFontMgrNamespace: function SkFontMgrNamespace() {
    },
    TypefaceFontProviderNamespace: function TypefaceFontProviderNamespace() {
    },
    ProductionCollector: function ProductionCollector(t0) {
      this.__ProductionCollector__skObjectFinalizationRegistry = null;
      this._skiaObjectCollectionQueue = t0;
      this._skiaObjectCollectionTimer = null;
    },
    ProductionCollector_closure: function ProductionCollector_closure(t0) {
      this.$this = t0;
    },
    ProductionCollector_collect_closure: function ProductionCollector_collect_closure(t0) {
      this.$this = t0;
    },
    SkiaObjectCollectionError: function SkiaObjectCollectionError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    SkDeletable: function SkDeletable() {
    },
    JsConstructor: function JsConstructor() {
    },
    SkObjectFinalizationRegistry: function SkObjectFinalizationRegistry() {
    },
    SkData: function SkData() {
    },
    SkImageInfo: function SkImageInfo() {
    },
    CanvasKitCanvas: function CanvasKitCanvas(t0) {
      this.__engine$_canvas = t0;
    },
    HtmlViewEmbedder: function HtmlViewEmbedder(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._pictureRecorders = t0;
      _._currentCompositionParams = t1;
      _._views = t2;
      _._rootViews = t3;
      _._overlays = t4;
      _._viewsToRecomposite = t5;
      _._viewsToDispose = t6;
      _._compositionOrder = t7;
      _._activeCompositionOrder = t8;
      _._clipCount = t9;
      _._frameSize = t10;
      _._svgClipDefs = t11;
    },
    OverlayCache: function OverlayCache(t0, t1) {
      this.maximumSize = t0;
      this.__engine$_cache = t1;
    },
    MutatorType: function MutatorType(t0) {
      this.__engine$_name = t0;
    },
    Mutator: function Mutator(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.type = t0;
      _.rect = t1;
      _.rrect = t2;
      _.path = t3;
      _.matrix = t4;
      _.alpha = t5;
    },
    MutatorsStack: function MutatorsStack(t0) {
      this._mutators = t0;
    },
    FontFallbackData: function FontFallbackData(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.registeredSymbolsAndEmoji = false;
      _.codeUnitsWithNoKnownFont = t0;
      _.knownCoveredCodeUnits = t1;
      _.notoTree = t2;
      _.registeredFallbackFonts = t3;
      _.globalFontFallbacks = t4;
      _.fontFallbackCounts = t5;
    },
    FontFallbackData_createNotoFontTree_closure: function FontFallbackData_createNotoFontTree_closure() {
    },
    FontFallbackData_registerFallbackFont_closure: function FontFallbackData_registerFallbackFont_closure() {
    },
    findFontsForMissingCodeunits_closure: function findFontsForMissingCodeunits_closure(t0) {
      this.data = t0;
    },
    _makeResolvedNotoFontFromCss_closure: function _makeResolvedNotoFontFromCss_closure() {
    },
    _registerSymbolsAndEmoji_extractUrlFromCss: function _registerSymbolsAndEmoji_extractUrlFromCss() {
    },
    findMinimumFontsForCodeUnits_closure: function findMinimumFontsForCodeUnits_closure() {
    },
    findMinimumFontsForCodeUnits_closure0: function findMinimumFontsForCodeUnits_closure0(t0) {
      this._box_0 = t0;
    },
    NotoFont: function NotoFont(t0, t1) {
      var _ = this;
      _.name = t0;
      _.approximateUnicodeRanges = t1;
      _.resolvedFont = _._decodingCompleter = null;
    },
    CodeunitRange: function CodeunitRange(t0, t1) {
      this.start = t0;
      this.end = t1;
    },
    _ResolvedNotoFont: function _ResolvedNotoFont(t0, t1) {
      this.name = t0;
      this.tree = t1;
    },
    _ResolvedNotoSubset: function _ResolvedNotoSubset(t0, t1, t2) {
      this.url = t0;
      this.family = t1;
      this.ranges = t2;
    },
    FallbackFontDownloadQueue: function FallbackFontDownloadQueue(t0, t1, t2) {
      var _ = this;
      _.downloader = t0;
      _.downloadedSubsets = t1;
      _.pendingSubsets = t2;
      _._fontsLoading = null;
    },
    FallbackFontDownloadQueue_startDownloads_closure: function FallbackFontDownloadQueue_startDownloads_closure(t0, t1, t2) {
      this.$this = t0;
      this.subset = t1;
      this.downloadedData = t2;
    },
    NotoDownloader: function NotoDownloader() {
      this._debugActiveDownloadCount = 0;
    },
    NotoDownloader_downloadAsBytes_closure: function NotoDownloader_downloadAsBytes_closure() {
    },
    NotoDownloader_downloadAsBytes__closure: function NotoDownloader_downloadAsBytes__closure() {
    },
    NotoDownloader_downloadAsString_closure: function NotoDownloader_downloadAsString_closure() {
    },
    NotoDownloader_downloadAsString__closure: function NotoDownloader_downloadAsString__closure() {
    },
    SkiaFontCollection: function SkiaFontCollection(t0, t1, t2) {
      var _ = this;
      _._unloadedFonts = t0;
      _._registeredFonts = t1;
      _.familyToTypefaceMap = t2;
      _.fontProvider = null;
    },
    SkiaFontCollection_ensureFontsLoaded_closure: function SkiaFontCollection_ensureFontsLoaded_closure() {
    },
    SkiaFontCollection_ensureFontsLoaded_closure0: function SkiaFontCollection_ensureFontsLoaded_closure0() {
    },
    SkiaFontCollection__getArrayBuffer_closure: function SkiaFontCollection__getArrayBuffer_closure() {
    },
    _RegisteredFont: function _RegisteredFont(t0, t1, t2) {
      this.family = t0;
      this.bytes = t1;
      this.typeface = t2;
    },
    initializeCanvasKit__loadSubscription_set: function initializeCanvasKit__loadSubscription_set(t0) {
      this._box_0 = t0;
    },
    initializeCanvasKit__loadSubscription_get: function initializeCanvasKit__loadSubscription_get(t0) {
      this._box_0 = t0;
    },
    initializeCanvasKit_closure: function initializeCanvasKit_closure(t0, t1) {
      this._loadSubscription_get = t0;
      this.canvasKitCompleter = t1;
    },
    initializeCanvasKit__closure: function initializeCanvasKit__closure() {
    },
    initializeCanvasKit__closure0: function initializeCanvasKit__closure0(t0) {
      this.canvasKitCompleter = t0;
    },
    IntervalTree: function IntervalTree(t0, t1) {
      this.root = t0;
      this.$ti = t1;
    },
    IntervalTree_IntervalTree$createFromRanges_closure: function IntervalTree_IntervalTree$createFromRanges_closure(t0, t1) {
      this.intervals = t0;
      this.T = t1;
    },
    IntervalTree_IntervalTree$createFromRanges_closure0: function IntervalTree_IntervalTree$createFromRanges_closure0(t0) {
      this.T = t0;
    },
    IntervalTree_IntervalTree$createFromRanges__makeBalancedTree: function IntervalTree_IntervalTree$createFromRanges__makeBalancedTree(t0) {
      this.T = t0;
    },
    IntervalTree_IntervalTree$createFromRanges__computeHigh: function IntervalTree_IntervalTree$createFromRanges__computeHigh(t0) {
      this.T = t0;
    },
    IntervalTreeNode: function IntervalTreeNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.value = t0;
      _.low = t1;
      _.high = t2;
      _.computedHigh = t3;
      _.right = _.left = null;
      _.$ti = t4;
    },
    Layer: function Layer() {
    },
    PrerollContext: function PrerollContext(t0) {
      this.mutatorsStack = t0;
    },
    PaintContext: function PaintContext(t0, t1) {
      this.internalNodesCanvas = t0;
      this.leafNodesCanvas = t1;
    },
    ContainerLayer: function ContainerLayer() {
    },
    RootLayer: function RootLayer(t0, t1) {
      this._layers = t0;
      this.parent = null;
      this.paintBounds = t1;
    },
    ClipPathEngineLayer: function ClipPathEngineLayer(t0, t1, t2, t3) {
      var _ = this;
      _.__engine$_clipPath = t0;
      _.__engine$_clipBehavior = t1;
      _._layers = t2;
      _.parent = null;
      _.paintBounds = t3;
    },
    ClipRectEngineLayer: function ClipRectEngineLayer(t0, t1, t2, t3) {
      var _ = this;
      _._clipRect = t0;
      _.__engine$_clipBehavior = t1;
      _._layers = t2;
      _.parent = null;
      _.paintBounds = t3;
    },
    OpacityEngineLayer: function OpacityEngineLayer(t0, t1, t2, t3) {
      var _ = this;
      _.__engine$_alpha = t0;
      _.__engine$_offset = t1;
      _._layers = t2;
      _.parent = null;
      _.paintBounds = t3;
    },
    TransformEngineLayer: function TransformEngineLayer(t0, t1, t2) {
      var _ = this;
      _.__engine$_transform = t0;
      _._layers = t1;
      _.parent = null;
      _.paintBounds = t2;
    },
    OffsetEngineLayer: function OffsetEngineLayer(t0, t1, t2) {
      var _ = this;
      _.__engine$_transform = t0;
      _._layers = t1;
      _.parent = null;
      _.paintBounds = t2;
    },
    PictureLayer0: function PictureLayer0(t0, t1, t2) {
      var _ = this;
      _.picture = t0;
      _.offset = t1;
      _.parent = null;
      _.paintBounds = t2;
    },
    PhysicalShapeEngineLayer: function PhysicalShapeEngineLayer(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.__engine$_elevation = t0;
      _._color = t1;
      _.__engine$_shadowColor = t2;
      _.__engine$_path = t3;
      _.__engine$_clipBehavior = t4;
      _._layers = t5;
      _.parent = null;
      _.paintBounds = t6;
    },
    LayerScene: function LayerScene(t0) {
      this.layerTree = t0;
    },
    LayerSceneBuilder: function LayerSceneBuilder(t0) {
      this.rootLayer = t0;
      this.__LayerSceneBuilder_currentLayer = null;
    },
    LayerTree: function LayerTree(t0, t1) {
      this.rootLayer = t0;
      this.frameSize = t1;
    },
    Frame: function Frame(t0, t1, t2) {
      this.canvas = t0;
      this.rasterCache = t1;
      this.viewEmbedder = t2;
    },
    Frame_raster_closure: function Frame_raster_closure(t0, t1, t2) {
      this.$this = t0;
      this.layerTree = t1;
      this.ignoreRasterCache = t2;
    },
    Frame_raster_closure0: function Frame_raster_closure0(t0, t1, t2) {
      this.$this = t0;
      this.layerTree = t1;
      this.ignoreRasterCache = t2;
    },
    CompositorContext: function CompositorContext() {
    },
    CkNWayCanvas: function CkNWayCanvas(t0) {
      this._canvases = t0;
    },
    CkPaint: function CkPaint(t0, t1, t2) {
      var _ = this;
      _._blendMode = t0;
      _._style = t1;
      _._strokeWidth = 0;
      _._isAntiAlias = true;
      _._color = t2;
      _.rawSkiaObject = _._ckMaskFilter = _._maskFilter = _._shader = null;
    },
    CkPath: function CkPath(t0) {
      this._fillType = t0;
      this.rawSkiaObject = this._cachedCommands = null;
    },
    CkPicture: function CkPicture(t0, t1) {
      this.cullRect = t0;
      this._snapshot = t1;
      this.rawSkiaObject = null;
    },
    CkPictureRecorder: function CkPictureRecorder() {
      this._recordingCanvas = this._skRecorder = this._cullRect = null;
    },
    Rasterizer: function Rasterizer(t0, t1, t2) {
      this.surface = t0;
      this.context = t1;
      this._postFrameCallbacks = t2;
    },
    CkShader: function CkShader() {
    },
    CkGradientLinear: function CkGradientLinear(t0, t1, t2, t3, t4) {
      var _ = this;
      _.from = t0;
      _.to = t1;
      _.colors = t2;
      _.colorStops = t3;
      _.tileMode = t4;
      _.rawSkiaObject = null;
    },
    SkiaObjectCache: function SkiaObjectCache(t0, t1, t2) {
      this.maximumSize = t0;
      this._itemQueue = t1;
      this._itemMap = t2;
    },
    SkiaObject: function SkiaObject() {
    },
    ManagedSkiaObject: function ManagedSkiaObject() {
    },
    SurfaceFrame: function SurfaceFrame(t0, t1) {
      this.skiaSurface = t0;
      this.submitCallback = t1;
    },
    Surface: function Surface(t0, t1) {
      var _ = this;
      _._surface = null;
      _._forceNewContext = true;
      _._skiaCacheBytes = _._grContext = null;
      _.htmlElement = t0;
      _.htmlCanvas = null;
      _._pixelHeight = _._pixelWidth = -1;
      _._addedToScene = false;
      _.viewEmbedder = t1;
      _._currentSize = null;
      _._currentDevicePixelRatio = -1;
    },
    Surface_acquireFrame_closure: function Surface_acquireFrame_closure(t0) {
      this.$this = t0;
    },
    Surface__createNewSurface_closure: function Surface__createNewSurface_closure(t0) {
      this.$this = t0;
    },
    CkSurface: function CkSurface(t0, t1, t2) {
      var _ = this;
      _._surface = t0;
      _._grContext = t1;
      _._glContext = t2;
      _._isDisposed = false;
    },
    CkParagraphStyle: function CkParagraphStyle(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.skParagraphStyle = t0;
      _._textDirection = t1;
      _._fontFamily = t2;
      _._fontSize = t3;
      _._fontWeight = t4;
      _._fontStyle = t5;
    },
    CkTextStyle: function CkTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18) {
      var _ = this;
      _.color = t0;
      _.decoration = t1;
      _.decorationColor = t2;
      _.decorationStyle = t3;
      _.decorationThickness = t4;
      _.fontWeight = t5;
      _.fontStyle = t6;
      _.textBaseline = t7;
      _.fontFamily = t8;
      _.fontFamilyFallback = t9;
      _.fontSize = t10;
      _.letterSpacing = t11;
      _.wordSpacing = t12;
      _.height = t13;
      _.locale = t14;
      _.background = t15;
      _.foreground = t16;
      _.shadows = t17;
      _.fontFeatures = t18;
      _.__CkTextStyle_skTextStyle = _.__CkTextStyle_effectiveFontFamilies = null;
    },
    CkTextStyle_skTextStyle_closure: function CkTextStyle_skTextStyle_closure(t0) {
      this.$this = t0;
    },
    CkParagraph: function CkParagraph(t0, t1, t2) {
      var _ = this;
      _._initialParagraph = t0;
      _._paragraphStyle = t1;
      _._paragraphCommands = t2;
      _.rawSkiaObject = _._lastLayoutConstraints = null;
    },
    CkParagraphBuilder: function CkParagraphBuilder(t0, t1, t2, t3, t4) {
      var _ = this;
      _._paragraphBuilder = t0;
      _._style = t1;
      _._commands = t2;
      _._placeholderScales = t3;
      _._styleStack = t4;
    },
    CkParagraphBuilder__ensureFontsSupportText_closure: function CkParagraphBuilder__ensureFontsSupportText_closure() {
    },
    CkParagraphBuilder__checkIfGlobalFallbacksSupport_closure: function CkParagraphBuilder__checkIfGlobalFallbacksSupport_closure(t0) {
      this.fallbackData = t0;
    },
    CkParagraphBuilder__checkIfNoFallbackFontSupports_closure: function CkParagraphBuilder__checkIfNoFallbackFontSupports_closure(t0) {
      this.fallbackData = t0;
    },
    _ParagraphCommand: function _ParagraphCommand(t0, t1, t2, t3) {
      var _ = this;
      _.type = t0;
      _.text = t1;
      _.style = t2;
      _.placeholderStyle = t3;
    },
    _ParagraphCommandType: function _ParagraphCommandType(t0) {
      this.__engine$_name = t0;
    },
    _getEffectiveFontFamilies_closure: function _getEffectiveFontFamilies_closure(t0) {
      this.fontFamily = t0;
    },
    CanvasKitError: function CanvasKitError(t0) {
      this.message = t0;
    },
    ClipboardMessageHandler: function ClipboardMessageHandler(t0, t1) {
      this._copyToClipboardStrategy = t0;
      this._pasteFromClipboardStrategy = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure: function ClipboardMessageHandler_setDataMethodCall_closure(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure0: function ClipboardMessageHandler_setDataMethodCall_closure0(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_getDataMethodCall_closure: function ClipboardMessageHandler_getDataMethodCall_closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_getDataMethodCall_closure0: function ClipboardMessageHandler_getDataMethodCall_closure0(t0) {
      this.callback = t0;
    },
    ClipboardAPICopyStrategy: function ClipboardAPICopyStrategy() {
    },
    ClipboardAPIPasteStrategy: function ClipboardAPIPasteStrategy() {
    },
    ExecCommandCopyStrategy: function ExecCommandCopyStrategy() {
    },
    ExecCommandPasteStrategy: function ExecCommandPasteStrategy() {
    },
    DomCanvas: function DomCanvas(t0, t1, t2, t3) {
      var _ = this;
      _.rootElement = t0;
      _.SaveElementStackTracking__saveStack = t1;
      _.SaveElementStackTracking__elementStack = t2;
      _.SaveElementStackTracking__currentTransform = t3;
    },
    DomRenderer: function DomRenderer(t0) {
      var _ = this;
      _._glassPaneElement = _._staleHotRestartState = _._sceneElement = _._semanticsHostElement = _._sceneHostElement = _._canvasKitScript = _._viewportMeta = _._styleElement = _._localeSubscription = _._resizeSubscription = null;
      _.rootElement = t0;
      _._debugFrameStatistics = null;
    },
    DomRenderer_reset_closure: function DomRenderer_reset_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.initialInnerWidth = t2;
    },
    DomRenderer_reset_closure0: function DomRenderer_reset_closure0(t0, t1) {
      this.$this = t0;
      this.objectConstructor = t1;
    },
    DomRenderer_reset_closure1: function DomRenderer_reset_closure1() {
    },
    DomRenderer_reset_closure2: function DomRenderer_reset_closure2(t0, t1) {
      this.$this = t0;
      this.objectConstructor = t1;
    },
    DomRenderer_reset_closure3: function DomRenderer_reset_closure3() {
    },
    DomRenderer_setPreferredOrientation_closure: function DomRenderer_setPreferredOrientation_closure(t0) {
      this.completer = t0;
    },
    DomRenderer_setPreferredOrientation_closure0: function DomRenderer_setPreferredOrientation_closure0(t0) {
      this.completer = t0;
    },
    EngineCanvas: function EngineCanvas() {
    },
    _SaveStackEntry: function _SaveStackEntry(t0, t1) {
      this.transform = t0;
      this.clipStack = t1;
    },
    _SaveClipEntry: function _SaveClipEntry(t0, t1, t2, t3) {
      var _ = this;
      _.rect = t0;
      _.rrect = t1;
      _.path = t2;
      _.currentTransform = t3;
    },
    _SaveElementStackEntry: function _SaveElementStackEntry(t0, t1) {
      this.savedElement = t0;
      this.transform = t1;
    },
    SaveElementStackTracking: function SaveElementStackTracking() {
    },
    FrameReference: function FrameReference(t0) {
      this.value = t0;
    },
    CrossFrameCache: function CrossFrameCache() {
      this._reusablePool = this.__engine$_cache = null;
    },
    SurfaceCanvas: function SurfaceCanvas(t0) {
      this.__engine$_canvas = t0;
    },
    _DomClip: function _DomClip() {
    },
    PersistedClipRect: function PersistedClipRect(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.clipBehavior = t0;
      _.rect = t1;
      _._DomClip__childContainer = t2;
      _.__engine$_children = t3;
      _._oldLayer = t4;
      _.__engine$_index = -1;
      _.__engine$_state = t5;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedPhysicalShape: function PersistedPhysicalShape(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.path = t0;
      _.pathBounds = t1;
      _.elevation = t2;
      _.color = t3;
      _.shadowColor = t4;
      _.clipBehavior = t5;
      _._svgElement = _._clipElement = null;
      _._DomClip__childContainer = t6;
      _.__engine$_children = t7;
      _._oldLayer = t8;
      _.__engine$_index = -1;
      _.__engine$_state = t9;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedClipPath: function PersistedClipPath(t0, t1, t2, t3, t4) {
      var _ = this;
      _.clipPath = t0;
      _.clipBehavior = t1;
      _._clipElement = null;
      _.__engine$_children = t2;
      _._oldLayer = t3;
      _.__engine$_index = -1;
      _.__engine$_state = t4;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedOffset: function PersistedOffset(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dx = t0;
      _.dy = t1;
      _.__engine$_children = t2;
      _._oldLayer = t3;
      _.__engine$_index = -1;
      _.__engine$_state = t4;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedOpacity: function PersistedOpacity(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alpha = t0;
      _.offset = t1;
      _.__engine$_children = t2;
      _._oldLayer = t3;
      _.__engine$_index = -1;
      _.__engine$_state = t4;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    SurfacePaint: function SurfacePaint(t0) {
      this._paintData = t0;
      this._frozen = false;
    },
    SurfacePaintData: function SurfacePaintData() {
      var _ = this;
      _.strokeJoin = _.strokeCap = _.strokeWidth = _.style = _.blendMode = null;
      _.isAntiAlias = true;
      _.colorFilter = _.filterQuality = _.maskFilter = _.shader = _.color = null;
    },
    Conic: function Conic(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.p0x = t0;
      _.p0y = t1;
      _.p1x = t2;
      _.p1y = t3;
      _.p2x = t4;
      _.p2y = t5;
      _.fW = t6;
    },
    _QuadBounds: function _QuadBounds() {
      var _ = this;
      _.maxY = _.maxX = _.minY = _.minX = 0;
    },
    _ConicBounds: function _ConicBounds() {
      var _ = this;
      _.maxY = _.maxX = _.minY = _.minX = 0;
    },
    _ConicPair: function _ConicPair() {
      this.second = this.first = null;
    },
    _CubicBounds: function _CubicBounds() {
      var _ = this;
      _.maxY = _.minY = _.maxX = _.minX = 0;
    },
    SurfacePath: function SurfacePath(t0, t1) {
      var _ = this;
      _.pathRef = t0;
      _._fillType = t1;
      _.fLastMoveToIndex = 0;
      _._firstDirection = _._convexityType = -1;
    },
    _SkQuadCoefficients: function _SkQuadCoefficients(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.ax = t0;
      _.ay = t1;
      _.bx = t2;
      _.by = t3;
      _.cx = t4;
      _.cy = t5;
    },
    PathRef: function PathRef(t0, t1) {
      var _ = this;
      _.cachedBounds = _.fBounds = null;
      _._fVerbsCapacity = _._fPointsLength = _._fPointsCapacity = 0;
      _._fPoints = t0;
      _._fVerbs = t1;
      _._conicWeightsCapacity = _._fVerbsLength = 0;
      _._conicWeights = null;
      _._conicWeightsLength = 0;
      _.fIsFinite = _.fBoundsIsDirty = true;
      _.fRRectOrOvalIsCCW = _.fIsRect = _.fIsRRect = _.fIsOval = false;
      _.fRRectOrOvalStartIdx = -1;
      _.fSegmentMask = 0;
    },
    PathRefIterator: function PathRefIterator(t0) {
      var _ = this;
      _.pathRef = t0;
      _._conicWeightIndex = -1;
      _.iterIndex = _._pointIndex = _._verbIndex = 0;
    },
    _QuadRoots: function _QuadRoots() {
      this.root1 = this.root0 = null;
    },
    PathWinding: function PathWinding(t0, t1, t2, t3) {
      var _ = this;
      _.pathRef = t0;
      _.x = t1;
      _.y = t2;
      _._onCurveCount = _._w = 0;
      _.__engine$_buffer = t3;
    },
    PathIterator: function PathIterator(t0, t1, t2) {
      var _ = this;
      _.pathRef = t0;
      _._forceClose = t1;
      _._verbCount = t2;
      _._needClose = false;
      _._segmentState = 0;
      _._conicWeightIndex = -1;
      _._pointIndex = _._verbIndex = _._moveToY = _._moveToX = _._lastPointY = _._lastPointX = 0;
    },
    _PaintRequest: function _PaintRequest(t0, t1) {
      this.canvasSize = t0;
      this.paintCallback = t1;
    },
    PersistedPicture: function PersistedPicture(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.__engine$_canvas = null;
      _.dx = t0;
      _.dy = t1;
      _.picture = t2;
      _.localPaintBounds = t3;
      _._density = 1;
      _._requiresRepaint = false;
      _._elementCache = t4;
      _._exactLocalCullRect = _._exactGlobalCullRect = _._optimalLocalCullRect = null;
      _._oldLayer = t5;
      _.__engine$_index = -1;
      _.__engine$_state = t6;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    PersistedPicture__applyBitmapPaint_closure: function PersistedPicture__applyBitmapPaint_closure(t0) {
      this.$this = t0;
    },
    RecordingCanvas: function RecordingCanvas(t0, t1, t2) {
      var _ = this;
      _._paintBounds = t0;
      _._pictureBounds = null;
      _._commands = t1;
      _.renderStrategy = t2;
      _._recordingEnded = _._didDraw = false;
      _._saveCount = 1;
    },
    PaintCommand: function PaintCommand() {
    },
    DrawCommand: function DrawCommand() {
    },
    PaintSave: function PaintSave() {
    },
    PaintRestore: function PaintRestore() {
    },
    PaintTranslate: function PaintTranslate(t0, t1) {
      this.dx = t0;
      this.dy = t1;
    },
    PaintTransform: function PaintTransform(t0) {
      this.matrix4 = t0;
    },
    PaintClipRect: function PaintClipRect(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.rect = t0;
      _.clipOp = t1;
      _.isClippedOut = false;
      _.leftBound = t2;
      _.topBound = t3;
      _.rightBound = t4;
      _.bottomBound = t5;
    },
    PaintClipRRect: function PaintClipRRect(t0, t1, t2, t3, t4) {
      var _ = this;
      _.rrect = t0;
      _.isClippedOut = false;
      _.leftBound = t1;
      _.topBound = t2;
      _.rightBound = t3;
      _.bottomBound = t4;
    },
    PaintClipPath: function PaintClipPath(t0, t1, t2, t3, t4) {
      var _ = this;
      _.path = t0;
      _.isClippedOut = false;
      _.leftBound = t1;
      _.topBound = t2;
      _.rightBound = t3;
      _.bottomBound = t4;
    },
    PaintDrawRect: function PaintDrawRect(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.rect = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.leftBound = t2;
      _.topBound = t3;
      _.rightBound = t4;
      _.bottomBound = t5;
    },
    PaintDrawRRect: function PaintDrawRRect(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.rrect = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.leftBound = t2;
      _.topBound = t3;
      _.rightBound = t4;
      _.bottomBound = t5;
    },
    PaintDrawDRRect: function PaintDrawDRRect(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.outer = t0;
      _.inner = t1;
      _.paint = t2;
      _.path = null;
      _.isClippedOut = false;
      _.leftBound = t3;
      _.topBound = t4;
      _.rightBound = t5;
      _.bottomBound = t6;
    },
    PaintDrawCircle: function PaintDrawCircle(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.c = t0;
      _.radius = t1;
      _.paint = t2;
      _.isClippedOut = false;
      _.leftBound = t3;
      _.topBound = t4;
      _.rightBound = t5;
      _.bottomBound = t6;
    },
    PaintDrawPath: function PaintDrawPath(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.path = t0;
      _.paint = t1;
      _.isClippedOut = false;
      _.leftBound = t2;
      _.topBound = t3;
      _.rightBound = t4;
      _.bottomBound = t5;
    },
    PaintDrawShadow: function PaintDrawShadow(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.path = t0;
      _.color = t1;
      _.elevation = t2;
      _.transparentOccluder = t3;
      _.isClippedOut = false;
      _.leftBound = t4;
      _.topBound = t5;
      _.rightBound = t6;
      _.bottomBound = t7;
    },
    PaintDrawParagraph: function PaintDrawParagraph(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.paragraph = t0;
      _.offset = t1;
      _.isClippedOut = false;
      _.leftBound = t2;
      _.topBound = t3;
      _.rightBound = t4;
      _.bottomBound = t5;
    },
    _PaintBounds: function _PaintBounds(t0, t1, t2, t3) {
      var _ = this;
      _.maxPaintBounds = t0;
      _._didPaintInsideClipArea = false;
      _.__engine$_top = _.__engine$_left = 17976931348623157e292;
      _.__engine$_bottom = _.__engine$_right = -17976931348623157e292;
      _.__engine$_transforms = t1;
      _._clipStack = t2;
      _._currentMatrixIsIdentity = true;
      _._currentMatrix = t3;
      _._clipRectInitialized = false;
      _._currentClipBottom = _._currentClipRight = _._currentClipTop = _._currentClipLeft = 0;
    },
    RenderStrategy: function RenderStrategy() {
      this.isInsideShaderMask = this.hasArbitraryPaint = this.hasParagraphs = false;
    },
    _WebGlRenderer: function _WebGlRenderer() {
    },
    _GlProgram: function _GlProgram(t0) {
      this.program = t0;
    },
    _GlContext: function _GlContext(t0) {
      var _ = this;
      _.glContext = t0;
      _._heightInPixels = _._widthInPixels = _.__engine$_canvas = _._kUnsignedShort = _._kUnsignedByte = _._kLinkStatus = _._kTriangles = _._kColorBufferBit = _._kFloat = _._kStaticDraw = _._kElementArrayBuffer = _._kArrayBuffer = _._kCompileStatus = null;
    },
    _OffScreenCanvas: function _OffScreenCanvas(t0, t1) {
      var _ = this;
      _._glCanvas = _.__engine$_canvas = null;
      _.width = t0;
      _.height = t1;
    },
    SurfaceScene: function SurfaceScene(t0) {
      this.webOnlyRootElement = t0;
    },
    PersistedScene: function PersistedScene(t0, t1, t2) {
      var _ = this;
      _.__engine$_children = t0;
      _._oldLayer = t1;
      _.__engine$_index = -1;
      _.__engine$_state = t2;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    SurfaceSceneBuilder: function SurfaceSceneBuilder(t0) {
      this._surfaceStack = t0;
    },
    SurfaceSceneBuilder_build_closure: function SurfaceSceneBuilder_build_closure(t0) {
      this.$this = t0;
    },
    SurfaceSceneBuilder_build_closure0: function SurfaceSceneBuilder_build_closure0(t0) {
      this.$this = t0;
    },
    NormalizedGradient: function NormalizedGradient(t0, t1, t2, t3) {
      var _ = this;
      _._thresholds = t0;
      _._bias = t1;
      _._scale = t2;
      _.thresholdCount = t3;
    },
    EngineGradient: function EngineGradient() {
    },
    GradientLinear: function GradientLinear(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.from = t0;
      _.to = t1;
      _.colors = t2;
      _.colorStops = t3;
      _.tileMode = t4;
      _.matrix4 = t5;
    },
    ShaderBuilder: function ShaderBuilder(t0, t1, t2, t3, t4) {
      var _ = this;
      _.declarations = t0;
      _._methods = t1;
      _.floatPrecision = null;
      _._uniformCounter = _._varyingCounter = _._attribCounter = 0;
      _.isWebGl2 = t2;
      _._isFragmentShader = t3;
      _._fragmentColorDeclaration = null;
      _.__engine$_buffer = t4;
    },
    ShaderMethod: function ShaderMethod(t0, t1) {
      this.name = t0;
      this._statements = t1;
      this._indentLevel = 1;
    },
    ShaderDeclaration: function ShaderDeclaration(t0, t1, t2) {
      this.name = t0;
      this.dataType = t1;
      this.storage = t2;
    },
    commitScene_closure: function commitScene_closure() {
    },
    PersistedSurfaceState: function PersistedSurfaceState(t0) {
      this.__engine$_name = t0;
    },
    PersistedSurface: function PersistedSurface() {
    },
    PersistedLeafSurface: function PersistedLeafSurface() {
    },
    PersistedContainerSurface: function PersistedContainerSurface() {
    },
    PersistedContainerSurface__matchChildren_closure: function PersistedContainerSurface__matchChildren_closure() {
    },
    _PersistedSurfaceMatch: function _PersistedSurfaceMatch(t0, t1, t2) {
      this.newChild = t0;
      this.oldChildIndex = t1;
      this.matchQuality = t2;
    },
    PersistedTransform: function PersistedTransform(t0, t1, t2, t3) {
      var _ = this;
      _.matrix4 = t0;
      _.__engine$_children = t1;
      _._oldLayer = t2;
      _.__engine$_index = -1;
      _.__engine$_state = t3;
      _._localTransformInverse = _._localClipBounds = _._projectedClip = _.__engine$_transform = _.parent = _.rootElement = null;
    },
    Keyboard: function Keyboard(t0) {
      var _ = this;
      _._keydownTimers = t0;
      _._keyupListener = _._keydownListener = null;
      _._lastMetaState = 0;
    },
    Keyboard$__closure: function Keyboard$__closure(t0) {
      this.$this = t0;
    },
    Keyboard$__closure0: function Keyboard$__closure0(t0) {
      this.$this = t0;
    },
    Keyboard$__closure1: function Keyboard$__closure1(t0) {
      this.$this = t0;
    },
    Keyboard__handleHtmlEvent_closure: function Keyboard__handleHtmlEvent_closure(t0, t1, t2) {
      this.$this = t0;
      this.timerKey = t1;
      this.event = t2;
    },
    Keyboard__handleHtmlEvent_closure0: function Keyboard__handleHtmlEvent_closure0(t0) {
      this.event = t0;
    },
    _kLogicalKeyToModifierGetter_closure: function _kLogicalKeyToModifierGetter_closure() {
    },
    _kLogicalKeyToModifierGetter_closure0: function _kLogicalKeyToModifierGetter_closure0() {
    },
    _kLogicalKeyToModifierGetter_closure1: function _kLogicalKeyToModifierGetter_closure1() {
    },
    _kLogicalKeyToModifierGetter_closure2: function _kLogicalKeyToModifierGetter_closure2() {
    },
    _kLogicalKeyToModifierGetter_closure3: function _kLogicalKeyToModifierGetter_closure3() {
    },
    _kLogicalKeyToModifierGetter_closure4: function _kLogicalKeyToModifierGetter_closure4() {
    },
    _kLogicalKeyToModifierGetter_closure5: function _kLogicalKeyToModifierGetter_closure5() {
    },
    _kLogicalKeyToModifierGetter_closure6: function _kLogicalKeyToModifierGetter_closure6() {
    },
    KeyboardBinding: function KeyboardBinding(t0) {
      this.__KeyboardBinding__converter = null;
      this._listeners = t0;
    },
    KeyboardBinding__addEventListener_closure: function KeyboardBinding__addEventListener_closure(t0) {
      this.handler = t0;
    },
    KeyboardBinding__onKeyData_closure: function KeyboardBinding__onKeyData_closure(t0) {
      this._box_0 = t0;
    },
    KeyboardBinding__setup_closure: function KeyboardBinding__setup_closure(t0) {
      this.$this = t0;
    },
    KeyboardBinding__setup_closure0: function KeyboardBinding__setup_closure0(t0) {
      this.$this = t0;
    },
    FlutterHtmlKeyboardEvent: function FlutterHtmlKeyboardEvent(t0) {
      this._event = t0;
    },
    KeyboardConverter: function KeyboardConverter(t0, t1, t2, t3) {
      var _ = this;
      _.dispatchKeyData = t0;
      _.onMacOs = t1;
      _._disposed = false;
      _._pressingRecords = t2;
      _._keyGuards = t3;
    },
    KeyboardConverter__scheduleAsyncEvent_closure: function KeyboardConverter__scheduleAsyncEvent_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.callback = t2;
      _.getData = t3;
    },
    KeyboardConverter__scheduleAsyncEvent_closure0: function KeyboardConverter__scheduleAsyncEvent_closure0(t0) {
      this._box_0 = t0;
    },
    KeyboardConverter__startGuardingKey_closure: function KeyboardConverter__startGuardingKey_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.currentTimeStamp = t1;
      _.physicalKey = t2;
      _.logicalKey = t3;
    },
    KeyboardConverter__startGuardingKey_closure0: function KeyboardConverter__startGuardingKey_closure0(t0, t1) {
      this.$this = t0;
      this.physicalKey = t1;
    },
    KeyboardConverter_handleEvent_closure: function KeyboardConverter_handleEvent_closure(t0, t1, t2, t3) {
      var _ = this;
      _.event = t0;
      _.character = t1;
      _.eventKey = t2;
      _.physicalKey = t3;
    },
    KeyboardConverter_handleEvent_closure0: function KeyboardConverter_handleEvent_closure0(t0, t1, t2) {
      this.timeStamp = t0;
      this.physicalKey = t1;
      this.logicalKey = t2;
    },
    KeyboardConverter_handleEvent_closure1: function KeyboardConverter_handleEvent_closure1(t0, t1) {
      this.$this = t0;
      this.physicalKey = t1;
    },
    KeyboardConverter_handleEvent_closure2: function KeyboardConverter_handleEvent_closure2(t0, t1, t2) {
      this.$this = t0;
      this.event = t1;
      this.timeStamp = t2;
    },
    KeyboardConverter_handleEvent__closure: function KeyboardConverter_handleEvent__closure(t0, t1, t2) {
      this.$this = t0;
      this.logicalKey = t1;
      this.timeStamp = t2;
    },
    MouseCursor: function MouseCursor() {
    },
    BrowserHistory: function BrowserHistory() {
    },
    MultiEntriesBrowserHistory: function MultiEntriesBrowserHistory(t0) {
      var _ = this;
      _.urlStrategy = t0;
      _.__BrowserHistory__unsubscribe = _.__MultiEntriesBrowserHistory__lastSeenSerialCount = null;
      _._isDisposed = false;
    },
    MultiEntriesBrowserHistory_onPopState_closure: function MultiEntriesBrowserHistory_onPopState_closure() {
    },
    SingleEntryBrowserHistory: function SingleEntryBrowserHistory(t0, t1) {
      var _ = this;
      _.urlStrategy = t0;
      _._flutterState = t1;
      _.__BrowserHistory__unsubscribe = _._userProvidedRouteName = null;
      _._isDisposed = false;
    },
    SingleEntryBrowserHistory_onPopState_closure: function SingleEntryBrowserHistory_onPopState_closure() {
    },
    SingleEntryBrowserHistory_onPopState_closure0: function SingleEntryBrowserHistory_onPopState_closure0() {
    },
    JsUrlStrategy: function JsUrlStrategy() {
    },
    UrlStrategy: function UrlStrategy() {
    },
    HashUrlStrategy: function HashUrlStrategy() {
    },
    HashUrlStrategy_addPopStateListener_closure: function HashUrlStrategy_addPopStateListener_closure(t0, t1) {
      this.$this = t0;
      this.fn = t1;
    },
    HashUrlStrategy__waitForPopState__unsubscribe_set: function HashUrlStrategy__waitForPopState__unsubscribe_set(t0) {
      this._box_0 = t0;
    },
    HashUrlStrategy__waitForPopState__unsubscribe_get: function HashUrlStrategy__waitForPopState__unsubscribe_get(t0) {
      this._box_0 = t0;
    },
    HashUrlStrategy__waitForPopState_closure: function HashUrlStrategy__waitForPopState_closure(t0, t1) {
      this._unsubscribe_get = t0;
      this.completer = t1;
    },
    CustomUrlStrategy: function CustomUrlStrategy(t0) {
      this.delegate = t0;
    },
    PlatformLocation: function PlatformLocation() {
    },
    BrowserPlatformLocation: function BrowserPlatformLocation() {
    },
    EnginePictureRecorder: function EnginePictureRecorder() {
      this.__EnginePictureRecorder_cullRect = this.__engine$_canvas = null;
      this._isRecording = false;
    },
    EnginePicture: function EnginePicture(t0) {
      this.recordingCanvas = t0;
    },
    EnginePlatformDispatcher: function EnginePlatformDispatcher(t0, t1, t2, t3) {
      var _ = this;
      _._configuration = t0;
      _._windows = t1;
      _._windowConfigurations = t2;
      _._onLocaleChanged = _._onPlatformMessageZone = _._onPlatformMessage = _._onReportTimingsZone = _._onReportTimings = _._onPointerDataPacketZone = _._onPointerDataPacket = _._onDrawFrameZone = _._onDrawFrame = _._onBeginFrameZone = _._onBeginFrame = _._onMetricsChangedZone = _._onMetricsChanged = null;
      _._brightnessMediaQuery = t3;
      _._defaultRouteName = _._onSemanticsActionZone = _._onSemanticsAction = _._onSemanticsEnabledChangedZone = _._onSemanticsEnabledChanged = _._onPlatformBrightnessChangedZone = _._onPlatformBrightnessChanged = _._brightnessMediaQueryListener = null;
      _.__EnginePlatformDispatcher_rasterizer = $;
    },
    EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure: function EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure(t0, t1) {
      this.registrationZone = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure: function EnginePlatformDispatcher__sendPlatformMessage_closure(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure0: function EnginePlatformDispatcher__sendPlatformMessage_closure0(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure1: function EnginePlatformDispatcher__sendPlatformMessage_closure1(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure2: function EnginePlatformDispatcher__sendPlatformMessage_closure2(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure3: function EnginePlatformDispatcher__sendPlatformMessage_closure3(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure: function EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure0: function EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure0(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__replyToPlatformMessage_closure: function EnginePlatformDispatcher__replyToPlatformMessage_closure(t0, t1) {
      this.callback = t0;
      this.data = t1;
    },
    invoke3_closure: function invoke3_closure(t0, t1, t2, t3) {
      var _ = this;
      _.callback = t0;
      _.arg1 = t1;
      _.arg2 = t2;
      _.arg3 = t3;
    },
    PointerBinding: function PointerBinding(t0, t1) {
      this.glassPaneElement = t0;
      this._pointerDataConverter = t1;
      this.__PointerBinding__adapter = null;
    },
    PointerSupportDetector: function PointerSupportDetector() {
    },
    _BaseAdapter: function _BaseAdapter() {
    },
    _BaseAdapter_addEventListener_closure: function _BaseAdapter_addEventListener_closure(t0, t1, t2) {
      this.$this = t0;
      this.acceptOutsideGlasspane = t1;
      this.handler = t2;
    },
    _WheelEventListenerMixin: function _WheelEventListenerMixin() {
    },
    _WheelEventListenerMixin__addWheelEventListener_closure: function _WheelEventListenerMixin__addWheelEventListener_closure(t0) {
      this.handler = t0;
    },
    _SanitizedDetails: function _SanitizedDetails(t0, t1) {
      this.change = t0;
      this.buttons = t1;
    },
    _ButtonSanitizer: function _ButtonSanitizer() {
      this._pressedButtons = 0;
    },
    _PointerAdapter: function _PointerAdapter(t0, t1, t2, t3) {
      var _ = this;
      _._sanitizers = t0;
      _.glassPaneElement = t1;
      _.__engine$_callback = t2;
      _._pointerDataConverter = t3;
    },
    _PointerAdapter__ensureSanitizer_closure: function _PointerAdapter__ensureSanitizer_closure() {
    },
    _PointerAdapter__addPointerEventListener_closure: function _PointerAdapter__addPointerEventListener_closure(t0) {
      this.handler = t0;
    },
    _PointerAdapter_setup_closure: function _PointerAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure0: function _PointerAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure1: function _PointerAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure2: function _PointerAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure3: function _PointerAdapter_setup_closure3(t0) {
      this.$this = t0;
    },
    _TouchAdapter: function _TouchAdapter(t0, t1, t2, t3) {
      var _ = this;
      _._pressedTouches = t0;
      _.glassPaneElement = t1;
      _.__engine$_callback = t2;
      _._pointerDataConverter = t3;
    },
    _TouchAdapter__addTouchEventListener_closure: function _TouchAdapter__addTouchEventListener_closure(t0) {
      this.handler = t0;
    },
    _TouchAdapter_setup_closure: function _TouchAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _TouchAdapter_setup_closure0: function _TouchAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _TouchAdapter_setup_closure1: function _TouchAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _TouchAdapter_setup_closure2: function _TouchAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _MouseAdapter: function _MouseAdapter(t0, t1, t2, t3) {
      var _ = this;
      _._sanitizer = t0;
      _.glassPaneElement = t1;
      _.__engine$_callback = t2;
      _._pointerDataConverter = t3;
    },
    _MouseAdapter__addMouseEventListener_closure: function _MouseAdapter__addMouseEventListener_closure(t0) {
      this.handler = t0;
    },
    _MouseAdapter_setup_closure: function _MouseAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure0: function _MouseAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure1: function _MouseAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure2: function _MouseAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _PointerState: function _PointerState(t0, t1) {
      this._pointer = null;
      this.x = t0;
      this.y = t1;
    },
    PointerDataConverter: function PointerDataConverter(t0) {
      this._pointers = t0;
      this._activeButtons = 0;
    },
    PointerDataConverter__ensureStateForPointer_closure: function PointerDataConverter__ensureStateForPointer_closure(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    Profiler: function Profiler() {
    },
    Instrumentation: function Instrumentation(t0) {
      this._counters = t0;
      this._printTimer = null;
    },
    AccessibilityAnnouncements: function AccessibilityAnnouncements() {
      this._element = this._removeElementTimer = null;
    },
    AccessibilityAnnouncements$__closure: function AccessibilityAnnouncements$__closure(t0) {
      this.$this = t0;
    },
    AccessibilityAnnouncements_handleMessage_closure: function AccessibilityAnnouncements_handleMessage_closure(t0) {
      this.$this = t0;
    },
    _CheckableKind: function _CheckableKind(t0) {
      this.__engine$_name = t0;
    },
    Checkable: function Checkable(t0, t1) {
      this.__engine$_kind = t0;
      this.semanticsObject = t1;
    },
    ImageRoleManager: function ImageRoleManager(t0) {
      this._auxiliaryImageElement = null;
      this.semanticsObject = t0;
    },
    Incrementable: function Incrementable(t0, t1) {
      var _ = this;
      _._element = t0;
      _._currentSurrogateValue = 1;
      _._gestureModeListener = null;
      _._pendingResync = false;
      _.semanticsObject = t1;
    },
    Incrementable_closure: function Incrementable_closure(t0, t1) {
      this.$this = t0;
      this.semanticsObject = t1;
    },
    Incrementable_closure0: function Incrementable_closure0(t0) {
      this.$this = t0;
    },
    LabelAndValue: function LabelAndValue(t0) {
      this._auxiliaryValueElement = null;
      this.semanticsObject = t0;
    },
    LiveRegion: function LiveRegion(t0) {
      this.semanticsObject = t0;
    },
    Scrollable: function Scrollable(t0) {
      var _ = this;
      _._scrollListener = _._gestureModeListener = null;
      _._effectiveNeutralScrollPosition = 0;
      _.semanticsObject = t0;
    },
    Scrollable_update_closure: function Scrollable_update_closure(t0) {
      this.$this = t0;
    },
    Scrollable_update_closure0: function Scrollable_update_closure0(t0) {
      this.$this = t0;
    },
    Scrollable_update_closure1: function Scrollable_update_closure1(t0) {
      this.$this = t0;
    },
    SemanticsUpdate: function SemanticsUpdate(t0) {
      this.__engine$_nodeUpdates = t0;
    },
    SemanticsNodeUpdate: function SemanticsNodeUpdate(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _.id = t0;
      _.flags = t1;
      _.actions = t2;
      _.textSelectionBase = t3;
      _.textSelectionExtent = t4;
      _.scrollChildren = t5;
      _.scrollIndex = t6;
      _.scrollPosition = t7;
      _.scrollExtentMax = t8;
      _.scrollExtentMin = t9;
      _.rect = t10;
      _.label = t11;
      _.hint = t12;
      _.value = t13;
      _.increasedValue = t14;
      _.decreasedValue = t15;
      _.textDirection = t16;
      _.transform = t17;
      _.childrenInTraversalOrder = t18;
      _.childrenInHitTestOrder = t19;
      _.additionalActions = t20;
    },
    Role: function Role(t0) {
      this.__engine$_name = t0;
    },
    _roleFactories_closure: function _roleFactories_closure() {
    },
    _roleFactories_closure0: function _roleFactories_closure0() {
    },
    _roleFactories_closure1: function _roleFactories_closure1() {
    },
    _roleFactories_closure2: function _roleFactories_closure2() {
    },
    _roleFactories_closure3: function _roleFactories_closure3() {
    },
    _roleFactories_closure4: function _roleFactories_closure4() {
    },
    _roleFactories_closure5: function _roleFactories_closure5() {
    },
    _roleFactories_closure6: function _roleFactories_closure6() {
    },
    RoleManager: function RoleManager() {
    },
    SemanticsObject: function SemanticsObject(t0, t1, t2, t3) {
      var _ = this;
      _.__engine$_flags = 0;
      _._additionalActions = _._childrenInHitTestOrder = _.__engine$_childrenInTraversalOrder = _.__engine$_transform = _._textDirection = _.__engine$_decreasedValue = _.__engine$_increasedValue = _.__engine$_value = _.__engine$_hint = _.__engine$_label = _.__engine$_rect = _.__engine$_scrollExtentMin = _.__engine$_scrollExtentMax = _.__engine$_scrollPosition = _.__engine$_scrollIndex = _._scrollChildren = _._textSelectionExtent = _._textSelectionBase = _.__engine$_actions = null;
      _.id = t0;
      _.owner = t1;
      _.element = t2;
      _._dirtyFields = -1;
      _.__engine$_parent = _._childContainerElement = null;
      _._roleManagers = t3;
      _.horizontalContainerAdjustment = _.verticalContainerAdjustment = 0;
      _._previousChildrenInTraversalOrder = null;
    },
    SemanticsObject_recomputePositionAndSize__effectiveTransform_set: function SemanticsObject_recomputePositionAndSize__effectiveTransform_set(t0) {
      this._box_0 = t0;
    },
    SemanticsObject_recomputePositionAndSize__effectiveTransform_get: function SemanticsObject_recomputePositionAndSize__effectiveTransform_get(t0) {
      this._box_0 = t0;
    },
    AccessibilityMode: function AccessibilityMode(t0) {
      this.__engine$_name = t0;
    },
    GestureMode: function GestureMode(t0) {
      this.__engine$_name = t0;
    },
    EngineSemanticsOwner: function EngineSemanticsOwner(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._semanticsTree = t0;
      _._attachments = t1;
      _._detachments = t2;
      _._oneTimePostUpdateCallbacks = t3;
      _._rootSemanticsElement = null;
      _._now = t4;
      _.semanticsHelper = t5;
      _._semanticsEnabled = false;
      _._gestureMode = t6;
      _._gestureModeClock = null;
      _._gestureModeListeners = t7;
    },
    EngineSemanticsOwner$__closure: function EngineSemanticsOwner$__closure(t0) {
      this.$this = t0;
    },
    EngineSemanticsOwner__now_closure: function EngineSemanticsOwner__now_closure() {
    },
    EngineSemanticsOwner__getGestureModeClock_closure: function EngineSemanticsOwner__getGestureModeClock_closure(t0) {
      this.$this = t0;
    },
    EnabledState: function EnabledState(t0) {
      this.__engine$_name = t0;
    },
    SemanticsHelper: function SemanticsHelper(t0) {
      this._semanticsEnabler = t0;
    },
    SemanticsEnabler: function SemanticsEnabler() {
    },
    DesktopSemanticsEnabler: function DesktopSemanticsEnabler() {
      var _ = this;
      _._semanticsPlaceholder = _.semanticsActivationTimer = null;
      _.semanticsActivationAttempts = 0;
      _._schedulePlaceholderRemoval = false;
    },
    DesktopSemanticsEnabler_tryEnableSemantics_closure: function DesktopSemanticsEnabler_tryEnableSemantics_closure(t0) {
      this.$this = t0;
    },
    DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler: function MobileSemanticsEnabler() {
      var _ = this;
      _._semanticsPlaceholder = _.semanticsActivationTimer = null;
      _.semanticsActivationAttempts = 0;
      _._schedulePlaceholderRemoval = false;
    },
    MobileSemanticsEnabler_tryEnableSemantics_closure: function MobileSemanticsEnabler_tryEnableSemantics_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    Tappable: function Tappable(t0) {
      this._clickListener = null;
      this.semanticsObject = t0;
    },
    Tappable_update_closure: function Tappable_update_closure(t0) {
      this.$this = t0;
    },
    SemanticsTextEditingStrategy: function SemanticsTextEditingStrategy(t0, t1) {
      var _ = this;
      _._queuedStyle = _.onAction = _.onChange = _.inputConfig = _.activeTextField = null;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _.__DefaultTextEditingStrategy__inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
      _._appendedToForm = false;
    },
    TextField: function TextField(t0) {
      this.__TextField_editableElement = null;
      this._hasFocused = false;
      this.semanticsObject = t0;
    },
    TextField__initializeForBlink_closure: function TextField__initializeForBlink_closure(t0) {
      this.$this = t0;
    },
    TextField__initializeForWebkit_closure: function TextField__initializeForWebkit_closure(t0) {
      this._box_0 = t0;
    },
    TextField__initializeForWebkit_closure0: function TextField__initializeForWebkit_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    TextField_update_closure: function TextField_update_closure(t0) {
      this.$this = t0;
    },
    _TypedDataBuffer: function _TypedDataBuffer() {
    },
    _IntBuffer: function _IntBuffer() {
    },
    Uint8Buffer0: function Uint8Buffer0(t0, t1) {
      this.__engine$_buffer = t0;
      this.__engine$_length = t1;
    },
    MethodCall0: function MethodCall0(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    JSONMessageCodec: function JSONMessageCodec() {
    },
    JSONMethodCodec: function JSONMethodCodec() {
    },
    StandardMessageCodec: function StandardMessageCodec() {
    },
    StandardMessageCodec_writeValue_closure0: function StandardMessageCodec_writeValue_closure0(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec: function StandardMethodCodec() {
    },
    WriteBuffer0: function WriteBuffer0(t0, t1, t2) {
      var _ = this;
      _._debugFinalized = false;
      _.__engine$_buffer = t0;
      _.__engine$_eightBytes = t1;
      _.__engine$_eightBytesAsList = t2;
    },
    ReadBuffer0: function ReadBuffer0(t0) {
      this.data = t0;
      this.__engine$_position = 0;
    },
    SurfaceShadowData: function SurfaceShadowData(t0, t1) {
      this.blurWidth = t0;
      this.offset = t1;
    },
    CanvasParagraph: function CanvasParagraph(t0, t1, t2, t3) {
      var _ = this;
      _.spans = t0;
      _.paragraphStyle = t1;
      _.plainText = t2;
      _.drawOnCanvas = t3;
      _.isLaidOut = false;
      _._cachedDomElement = _.__CanvasParagraph__paintService = _.__CanvasParagraph__layoutService = _._lastUsedConstraints = null;
    },
    CanvasParagraph__createDomElement__element_set: function CanvasParagraph__createDomElement__element_set(t0) {
      this._box_0 = t0;
    },
    CanvasParagraph__createDomElement__element_get: function CanvasParagraph__createDomElement__element_get(t0) {
      this._box_0 = t0;
    },
    FlatTextSpan: function FlatTextSpan(t0, t1, t2) {
      this.style = t0;
      this.start = t1;
      this.end = t2;
    },
    StyleNode: function StyleNode() {
    },
    ChildStyleNode: function ChildStyleNode(t0, t1) {
      this.parent = t0;
      this.style = t1;
      this._cachedStyle = null;
    },
    RootStyleNode: function RootStyleNode(t0) {
      this.paragraphStyle = t0;
      this._cachedStyle = null;
    },
    CanvasParagraphBuilder: function CanvasParagraphBuilder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._plainTextBuffer = t0;
      _._paragraphStyle = t1;
      _._spans = t2;
      _._styleStack = t3;
      _._rootStyleNode = t4;
      _._placeholderScales = t5;
      _._drawOnCanvas = true;
    },
    FontCollection: function FontCollection() {
      this._testFontManager = this._assetFontManager = null;
    },
    FontManager: function FontManager(t0) {
      this._fontLoadingFutures = t0;
    },
    FontManager__loadFontFace_closure: function FontManager__loadFontFace_closure(t0) {
      this.fontFace = t0;
    },
    FontManager__loadFontFace_closure0: function FontManager__loadFontFace_closure0(t0) {
      this.family = t0;
    },
    _PolyfillFontManager: function _PolyfillFontManager(t0) {
      this._fontLoadingFutures = t0;
    },
    _PolyfillFontManager_registerAsset___fontLoadStart_set: function _PolyfillFontManager_registerAsset___fontLoadStart_set(t0) {
      this._box_0 = t0;
    },
    _PolyfillFontManager_registerAsset___fontLoadStart_get: function _PolyfillFontManager_registerAsset___fontLoadStart_get(t0) {
      this._box_0 = t0;
    },
    _PolyfillFontManager_registerAsset__watchWidth: function _PolyfillFontManager_registerAsset__watchWidth(t0, t1, t2, t3, t4) {
      var _ = this;
      _.paragraph = t0;
      _.sansSerifWidth = t1;
      _.completer = t2;
      _.__fontLoadStart_get = t3;
      _.family = t4;
    },
    _PolyfillFontManager_registerAsset_closure: function _PolyfillFontManager_registerAsset_closure(t0) {
      this.fontStyleMap = t0;
    },
    TextLayoutService: function TextLayoutService(t0, t1, t2) {
      var _ = this;
      _.paragraph = t0;
      _.context = t1;
      _.width = -1;
      _.height = 0;
      _.longestLine = null;
      _.maxIntrinsicWidth = _.minIntrinsicWidth = 0;
      _.ideographicBaseline = _.alphabeticBaseline = -1;
      _.didExceedMaxLines = false;
      _.lines = t2;
    },
    RangeBox: function RangeBox() {
    },
    PlaceholderBox: function PlaceholderBox() {
    },
    SpanBox: function SpanBox(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.spanometer = t0;
      _.span = t1;
      _.start = t2;
      _.end = t3;
      _.left = t4;
      _.width = t5;
      _.height = t6;
      _.baseline = t7;
      _.direction = t8;
    },
    LineSegment: function LineSegment(t0, t1, t2, t3, t4) {
      var _ = this;
      _.span = t0;
      _.start = t1;
      _.end = t2;
      _.width = t3;
      _.widthIncludingSpace = t4;
    },
    LineBuilder: function LineBuilder(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._segments = t0;
      _._boxes = t1;
      _.maxWidth = t2;
      _.paragraph = t3;
      _.spanometer = t4;
      _.start = t5;
      _.lineNumber = t6;
      _.accumulatedHeight = t7;
      _.end = t8;
      _.descent = _.ascent = _.widthIncludingSpace = _.width = 0;
    },
    Spanometer: function Spanometer(t0, t1) {
      var _ = this;
      _.paragraph = t0;
      _.context = t1;
      _._cssFontString = "";
      _._currentSpan = _._currentRuler = null;
    },
    LineCharProperty: function LineCharProperty(t0) {
      this.__engine$_name = t0;
    },
    LineBreakType: function LineBreakType(t0) {
      this.__engine$_name = t0;
    },
    LineBreakResult: function LineBreakResult(t0, t1, t2, t3) {
      var _ = this;
      _.index = t0;
      _.indexWithoutTrailingNewlines = t1;
      _.indexWithoutTrailingSpaces = t2;
      _.type = t3;
    },
    RulerHost: function RulerHost(t0) {
      this._rulerHost = t0;
    },
    RulerManager: function RulerManager(t0, t1, t2) {
      var _ = this;
      _.rulerCacheCapacity = t0;
      _._rulers = t1;
      _._rulerCacheCleanupScheduled = false;
      _._rulerHost = t2;
    },
    RulerManager__scheduleRulerCacheCleanup_closure: function RulerManager__scheduleRulerCacheCleanup_closure(t0) {
      this.$this = t0;
    },
    RulerManager__evictAllRulers_closure: function RulerManager__evictAllRulers_closure() {
    },
    RulerManager_cleanUpRulerCache_closure: function RulerManager_cleanUpRulerCache_closure() {
    },
    TextMeasurementService: function TextMeasurementService() {
    },
    DomTextMeasurementService: function DomTextMeasurementService() {
    },
    CanvasTextMeasurementService: function CanvasTextMeasurementService(t0) {
      this._canvasContext = t0;
    },
    LinesCalculator: function LinesCalculator(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._canvasContext = t0;
      _.__engine$_paragraph = t1;
      _.__engine$_maxWidth = t2;
      _.lines = t3;
      _._lastBreak = t4;
      _._lastTakenBreak = t5;
      _._reachedMaxLines = false;
      _._cachedEllipsisWidth = null;
    },
    MaxIntrinsicCalculator: function MaxIntrinsicCalculator(t0, t1, t2) {
      var _ = this;
      _._canvasContext = t0;
      _.__engine$_text = t1;
      _._style = t2;
      _._lastHardLineEnd = _.value = 0;
    },
    TextPaintService: function TextPaintService(t0) {
      this.paragraph = t0;
    },
    EngineLineMetrics: function EngineLineMetrics(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.displayText = t0;
      _.ellipsis = t1;
      _.startIndex = t2;
      _.endIndex = t3;
      _.endIndexWithoutNewlines = t4;
      _.boxes = t5;
      _.hardBreak = t6;
      _.ascent = t7;
      _.descent = t8;
      _.height = t9;
      _.width = t10;
      _.widthWithTrailingSpaces = t11;
      _.left = t12;
      _.baseline = t13;
      _.lineNumber = t14;
    },
    DomParagraph: function DomParagraph(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._paragraphElement = t0;
      _._geometricStyle = t1;
      _._plainText = t2;
      _._paint = t3;
      _._textAlign = t4;
      _._textDirection = t5;
      _._background = t6;
      _.placeholderCount = t7;
      _._measurementResult = null;
      _._didExceedMaxLines = false;
      _._lastUsedConstraints = null;
      _._alignOffset = 0;
    },
    EngineParagraphStyle: function EngineParagraphStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._textAlign = t0;
      _._textDirection = t1;
      _._fontWeight = t2;
      _._fontStyle = t3;
      _._maxLines = t4;
      _._fontFamily = t5;
      _._fontSize = t6;
      _.__engine$_height = t7;
      _._textHeightBehavior = t8;
      _._strutStyle = t9;
      _._ellipsis = t10;
      _._locale = t11;
    },
    EngineTextStyle: function EngineTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _._color = t0;
      _._decoration = t1;
      _._decorationColor = t2;
      _._decorationStyle = t3;
      _._decorationThickness = t4;
      _._fontWeight = t5;
      _._fontStyle = t6;
      _._textBaseline = t7;
      _._isFontFamilyProvided = t8;
      _._fontFamily = t9;
      _._fontFamilyFallback = t10;
      _._fontFeatures = t11;
      _._fontSize = t12;
      _._letterSpacing = t13;
      _._wordSpacing = t14;
      _.__engine$_height = t15;
      _._locale = t16;
      _._background = t17;
      _._foreground = t18;
      _._shadows = t19;
      _.__EngineTextStyle_heightStyle = _._cssFontString = null;
    },
    DomParagraphBuilder: function DomParagraphBuilder(t0, t1, t2, t3) {
      var _ = this;
      _._paragraphElement = t0;
      _._paragraphStyle = t1;
      _._ops = t2;
      _._placeholderScales = t3;
    },
    DomParagraphBuilder__buildRichText_currentElement: function DomParagraphBuilder__buildRichText_currentElement(t0, t1) {
      this.$this = t0;
      this.elementStack = t1;
    },
    ParagraphGeometricStyle: function ParagraphGeometricStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.textDirection = t0;
      _.textAlign = t1;
      _.fontWeight = t2;
      _.fontStyle = t3;
      _.fontFamily = t4;
      _.fontSize = t5;
      _.lineHeight = t6;
      _.maxLines = t7;
      _.letterSpacing = t8;
      _.wordSpacing = t9;
      _.decoration = t10;
      _.ellipsis = t11;
      _.shadows = t12;
      _._cachedHeightStyle = _._cssFontString = _._cachedHashCode = null;
    },
    TextHeightStyle: function TextHeightStyle(t0, t1, t2, t3) {
      var _ = this;
      _.fontFamily = t0;
      _.fontSize = t1;
      _.height = t2;
      _.fontFeatures = t3;
      _.__TextHeightStyle_hashCode = null;
    },
    TextDimensions: function TextDimensions(t0) {
      this._element = t0;
      this._cachedBoundingClientRect = null;
    },
    TextHeightRuler: function TextHeightRuler(t0, t1, t2) {
      var _ = this;
      _.textHeightStyle = t0;
      _.rulerHost = t1;
      _.__TextHeightRuler__host = _.__TextHeightRuler__probe = null;
      _._dimensions = t2;
      _.__TextHeightRuler_height = _.__TextHeightRuler_alphabeticBaseline = null;
    },
    ParagraphRuler: function ParagraphRuler(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.style = t0;
      _.rulerManager = t1;
      _._singleLineHost = t2;
      _.singleLineDimensions = t3;
      _._minIntrinsicHost = t4;
      _.minIntrinsicDimensions = t5;
      _._constrainedHost = t6;
      _.constrainedDimensions = t7;
      _.__ParagraphRuler__textHeightRuler = null;
      _._hitCount = 0;
      _._debugIsDisposed = false;
      _.__engine$_paragraph = null;
      _._measurementCache = t8;
      _._mruList = t9;
    },
    MeasurementResult: function MeasurementResult(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.constraintWidth = t0;
      _.isSingleLine = t1;
      _.width = t2;
      _.height = t3;
      _.naturalHeight = t4;
      _.lineHeight = t5;
      _.minIntrinsicWidth = t6;
      _.maxIntrinsicWidth = t7;
      _.alphabeticBaseline = t8;
      _.ideographicBaseline = t9;
      _.lines = t10;
      _.placeholderBoxes = t11;
      _.textAlign = t12;
      _.textDirection = t13;
    },
    _ComparisonResult: function _ComparisonResult(t0) {
      this.__engine$_name = t0;
    },
    UnicodeRange: function UnicodeRange(t0, t1, t2, t3) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _.property = t2;
      _.$ti = t3;
    },
    UnicodePropertyLookup: function UnicodePropertyLookup(t0, t1, t2, t3) {
      var _ = this;
      _.ranges = t0;
      _.defaultProperty = t1;
      _.__engine$_cache = t2;
      _.$ti = t3;
    },
    BrowserAutofillHints: function BrowserAutofillHints(t0) {
      this._flutterToEngineMap = t0;
    },
    EngineInputType: function EngineInputType() {
    },
    TextInputType: function TextInputType() {
    },
    NumberInputType: function NumberInputType() {
    },
    DecimalInputType: function DecimalInputType() {
    },
    PhoneInputType: function PhoneInputType() {
    },
    EmailInputType: function EmailInputType() {
    },
    UrlInputType: function UrlInputType() {
    },
    MultilineInputType: function MultilineInputType() {
    },
    TextCapitalization: function TextCapitalization(t0) {
      this.__engine$_name = t0;
    },
    TextCapitalizationConfig: function TextCapitalizationConfig(t0) {
      this.textCapitalization = t0;
    },
    EngineAutofillForm: function EngineAutofillForm(t0, t1, t2, t3) {
      var _ = this;
      _.formElement = t0;
      _.elements = t1;
      _.items = t2;
      _.formIdentifier = t3;
    },
    EngineAutofillForm_fromFrameworkMessage_closure: function EngineAutofillForm_fromFrameworkMessage_closure() {
    },
    EngineAutofillForm_addInputEventListeners_closure: function EngineAutofillForm_addInputEventListeners_closure(t0, t1) {
      this.$this = t0;
      this.subscriptions = t1;
    },
    EngineAutofillForm_addInputEventListeners__closure: function EngineAutofillForm_addInputEventListeners__closure(t0, t1, t2) {
      this.$this = t0;
      this.key = t1;
      this.element = t2;
    },
    AutofillInfo: function AutofillInfo(t0, t1, t2, t3) {
      var _ = this;
      _.editingState = t0;
      _.uniqueIdentifier = t1;
      _.textCapitalization = t2;
      _.hint = t3;
    },
    EditingState: function EditingState(t0, t1, t2) {
      this.text = t0;
      this.baseOffset = t1;
      this.extentOffset = t2;
    },
    InputConfiguration: function InputConfiguration(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.inputType = t0;
      _.inputAction = t1;
      _.readOnly = t2;
      _.obscureText = t3;
      _.autocorrect = t4;
      _.autofill = t5;
      _.autofillGroup = t6;
      _.textCapitalization = t7;
    },
    GloballyPositionedTextEditingStrategy: function GloballyPositionedTextEditingStrategy(t0, t1) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _.__DefaultTextEditingStrategy__inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
      _._appendedToForm = false;
    },
    SafariDesktopTextEditingStrategy: function SafariDesktopTextEditingStrategy(t0, t1) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _.__DefaultTextEditingStrategy__inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
      _._appendedToForm = false;
    },
    DefaultTextEditingStrategy: function DefaultTextEditingStrategy() {
    },
    DefaultTextEditingStrategy_addEventHandlers_closure: function DefaultTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1() {
    },
    IOSTextEditingStrategy: function IOSTextEditingStrategy(t0, t1) {
      var _ = this;
      _._positionInputElementTimer = null;
      _._canPosition = true;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _.__DefaultTextEditingStrategy__inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
      _._appendedToForm = false;
    },
    IOSTextEditingStrategy_addEventHandlers_closure: function IOSTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy_addEventHandlers_closure0: function IOSTextEditingStrategy_addEventHandlers_closure0(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy__addTapListener_closure: function IOSTextEditingStrategy__addTapListener_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy__schedulePlacement_closure: function IOSTextEditingStrategy__schedulePlacement_closure(t0) {
      this.$this = t0;
    },
    AndroidTextEditingStrategy: function AndroidTextEditingStrategy(t0, t1) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _.__DefaultTextEditingStrategy__inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
      _._appendedToForm = false;
    },
    AndroidTextEditingStrategy_addEventHandlers_closure: function AndroidTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    FirefoxTextEditingStrategy: function FirefoxTextEditingStrategy(t0, t1) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _._onAction = _._onChange = _._geometry = _._style = _._lastEditingState = _.__DefaultTextEditingStrategy__inputConfiguration = _.domElement = null;
      _._subscriptions = t1;
      _._appendedToForm = false;
    },
    FirefoxTextEditingStrategy_addEventHandlers_closure: function FirefoxTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    FirefoxTextEditingStrategy_addEventHandlers_closure0: function FirefoxTextEditingStrategy_addEventHandlers_closure0(t0) {
      this.$this = t0;
    },
    FirefoxTextEditingStrategy__postponeFocus_closure: function FirefoxTextEditingStrategy__postponeFocus_closure(t0) {
      this.$this = t0;
    },
    TextInputCommand: function TextInputCommand() {
    },
    TextInputSetClient: function TextInputSetClient(t0, t1) {
      this.clientId = t0;
      this.configuration = t1;
    },
    TextInputUpdateConfig: function TextInputUpdateConfig() {
    },
    TextInputSetEditingState: function TextInputSetEditingState(t0) {
      this.state = t0;
    },
    TextInputShow: function TextInputShow() {
    },
    TextInputSetEditableSizeAndTransform: function TextInputSetEditableSizeAndTransform(t0) {
      this.geometry = t0;
    },
    TextInputSetStyle: function TextInputSetStyle(t0) {
      this.style = t0;
    },
    TextInputClearClient: function TextInputClearClient() {
    },
    TextInputHide: function TextInputHide() {
    },
    TextInputSetMarkedTextRect: function TextInputSetMarkedTextRect() {
    },
    TextInputSetCaretRect: function TextInputSetCaretRect() {
    },
    TextInputFinishAutofillContext: function TextInputFinishAutofillContext(t0) {
      this.saveForm = t0;
    },
    saveForms_closure: function saveForms_closure() {
    },
    TextEditingChannel: function TextEditingChannel(t0) {
      this.implementation = t0;
    },
    TextEditingChannel_handleTextInput__command_set: function TextEditingChannel_handleTextInput__command_set(t0) {
      this._box_0 = t0;
    },
    TextEditingChannel_handleTextInput__command_get: function TextEditingChannel_handleTextInput__command_get(t0) {
      this._box_0 = t0;
    },
    TextEditingChannel_handleTextInput_closure: function TextEditingChannel_handleTextInput_closure(t0) {
      this.callback = t0;
    },
    HybridTextEditing: function HybridTextEditing() {
      var _ = this;
      _._clientId = _.__HybridTextEditing_channel = null;
      _.isEditing = false;
      _.__HybridTextEditing_strategy = _.configuration = null;
    },
    HybridTextEditing__startEditing_closure0: function HybridTextEditing__startEditing_closure0(t0) {
      this.$this = t0;
    },
    HybridTextEditing__startEditing_closure: function HybridTextEditing__startEditing_closure(t0) {
      this.$this = t0;
    },
    EditableTextStyle: function EditableTextStyle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.fontSize = t0;
      _.fontWeight = t1;
      _.fontFamily = t2;
      _.textAlign = t3;
      _.textDirection = t4;
    },
    EditableTextGeometry: function EditableTextGeometry(t0, t1, t2) {
      this.width = t0;
      this.height = t1;
      this.globalTransform = t2;
    },
    TransformKind: function TransformKind(t0) {
      this.__engine$_name = t0;
    },
    sendFontChangeMessage_closure: function sendFontChangeMessage_closure() {
    },
    sendFontChangeMessage__closure: function sendFontChangeMessage__closure() {
    },
    Matrix40: function Matrix40(t0) {
      this.__engine$_m4storage = t0;
    },
    WebExperiments: function WebExperiments() {
      this._useCanvasRichText = this._useCanvasText = true;
    },
    WebExperiments$__closure: function WebExperiments$__closure() {
    },
    EngineFlutterWindow: function EngineFlutterWindow() {
    },
    EngineFlutterWindow_closure: function EngineFlutterWindow_closure() {
    },
    EngineSingletonFlutterWindow: function EngineSingletonFlutterWindow(t0, t1, t2) {
      var _ = this;
      _._debugDevicePixelRatio = null;
      _._windowId = t0;
      _.platformDispatcher = t1;
      _._browserHistory = null;
      _._usingRouter = false;
      _._viewInsets = t2;
      _._physicalSize = null;
    },
    WindowPadding: function WindowPadding(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    _DomCanvas_EngineCanvas_SaveElementStackTracking: function _DomCanvas_EngineCanvas_SaveElementStackTracking() {
    },
    _PersistedClipRect_PersistedContainerSurface__DomClip: function _PersistedClipRect_PersistedContainerSurface__DomClip() {
    },
    _PersistedPhysicalShape_PersistedContainerSurface__DomClip: function _PersistedPhysicalShape_PersistedContainerSurface__DomClip() {
    },
    __MouseAdapter__BaseAdapter__WheelEventListenerMixin: function __MouseAdapter__BaseAdapter__WheelEventListenerMixin() {
    },
    __PointerAdapter__BaseAdapter__WheelEventListenerMixin: function __PointerAdapter__BaseAdapter__WheelEventListenerMixin() {
    },
    JS_CONST: function JS_CONST() {
    },
    CastIterable_CastIterable: function(source, $S, $T) {
      if ($S._eval$1("EfficientLengthIterable<0>")._is(source))
        return new H._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new H.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldADI: function(fieldName) {
      return new H.LateError("Field '" + fieldName + "' has been assigned during initialization.");
    },
    LateError$fieldNI: function(fieldName) {
      return new H.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    LateError$localNI: function(localName) {
      return new H.LateError("Local '" + localName + "' has not been initialized.");
    },
    LateError$fieldAI: function(fieldName) {
      return new H.LateError("Field '" + fieldName + "' has already been initialized.");
    },
    LateError$localAI: function(localName) {
      return new H.LateError("Local '" + localName + "' has already been initialized.");
    },
    hexDigitValue: function(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    parseHexByte: function(source, index) {
      var digit1 = H.hexDigitValue(C.JSString_methods.codeUnitAt$1(source, index)),
        digit2 = H.hexDigitValue(C.JSString_methods.codeUnitAt$1(source, index + 1));
      return digit1 * 16 + digit2 - (digit2 & 256);
    },
    SystemHash_combine: function(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish: function(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    checkNotNullable: function(value, $name, $T) {
      return value;
    },
    SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
      P.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        P.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          H.throwExpression(P.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new H.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new H.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new H.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable: function(iterable, takeCount, $E) {
      P.RangeError_checkNotNegative(takeCount, "takeCount");
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new H.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new H.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable: function(iterable, count, $E) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        P.RangeError_checkNotNegative(count, "count");
        return new H.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      P.RangeError_checkNotNegative(count, "count");
      return new H.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    FollowedByIterable_FollowedByIterable$firstEfficient: function(first, second, $E) {
      return new H.FollowedByIterable(first, second, $E._eval$1("FollowedByIterable<0>"));
    },
    IterableElementError_noElement: function() {
      return new P.StateError("No element");
    },
    IterableElementError_tooMany: function() {
      return new P.StateError("Too many elements");
    },
    IterableElementError_tooFew: function() {
      return new P.StateError("Too few elements");
    },
    Sort_sort: function(a, compare) {
      H.Sort__doSort(a, 0, J.get$length$asx(a) - 1, compare);
    },
    Sort__doSort: function(a, left, right, compare) {
      if (right - left <= 32)
        H.Sort__insertionSort(a, left, right, compare);
      else
        H.Sort__dualPivotQuicksort(a, left, right, compare);
    },
    Sort__insertionSort: function(a, left, right, compare) {
      var i, t1, el, j, j0;
      for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          if (!(j > left && compare.call$2(t1.$index(a, j - 1), el) > 0))
            break;
          j0 = j - 1;
          t1.$indexSet(a, j, t1.$index(a, j0));
          j = j0;
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort: function(a, left, right, compare) {
      var t0, less, great, k, ak, comp, great0, less0, pivots_are_equal, t2,
        sixth = C.JSInt_methods._tdivFast$1(right - left + 1, 6),
        index1 = left + sixth,
        index5 = right - sixth,
        index3 = C.JSInt_methods._tdivFast$1(left + right, 2),
        index2 = index3 - sixth,
        index4 = index3 + sixth,
        t1 = J.getInterceptor$asx(a),
        el1 = t1.$index(a, index1),
        el2 = t1.$index(a, index2),
        el3 = t1.$index(a, index3),
        el4 = t1.$index(a, index4),
        el5 = t1.$index(a, index5);
      if (compare.call$2(el1, el2) > 0) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      if (compare.call$2(el4, el5) > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if (compare.call$2(el1, el3) > 0) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if (compare.call$2(el2, el3) > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (compare.call$2(el1, el4) > 0) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      if (compare.call$2(el3, el4) > 0) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      if (compare.call$2(el2, el5) > 0) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      if (compare.call$2(el2, el3) > 0) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (compare.call$2(el4, el5) > 0) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t1.$indexSet(a, index1, el1);
      t1.$indexSet(a, index3, el3);
      t1.$indexSet(a, index5, el5);
      t1.$indexSet(a, index2, t1.$index(a, left));
      t1.$indexSet(a, index4, t1.$index(a, right));
      less = left + 1;
      great = right - 1;
      if (J.$eq$(compare.call$2(el2, el4), 0)) {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          comp = compare.call$2(ak, el2);
          if (comp === 0)
            continue;
          if (comp < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else
            for (; true;) {
              comp = compare.call$2(t1.$index(a, great), el2);
              if (comp > 0) {
                --great;
                continue;
              } else {
                great0 = great - 1;
                if (comp < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) < 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) > 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) > 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        pivots_are_equal = false;
      }
      t2 = less - 1;
      t1.$indexSet(a, left, t1.$index(a, t2));
      t1.$indexSet(a, t2, el2);
      t2 = great + 1;
      t1.$indexSet(a, right, t1.$index(a, t2));
      t1.$indexSet(a, t2, el4);
      H.Sort__doSort(a, left, less - 2, compare);
      H.Sort__doSort(a, great + 2, right, compare);
      if (pivots_are_equal)
        return;
      if (less < index1 && great > index5) {
        for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
          ++less;
        for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = t1.$index(a, k);
          if (compare.call$2(ak, el2) === 0) {
            if (k !== less) {
              t1.$indexSet(a, k, t1.$index(a, less));
              t1.$indexSet(a, less, ak);
            }
            ++less;
          } else if (compare.call$2(ak, el4) === 0)
            for (; true;)
              if (compare.call$2(t1.$index(a, great), el4) === 0) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                great0 = great - 1;
                if (compare.call$2(t1.$index(a, great), el2) < 0) {
                  t1.$indexSet(a, k, t1.$index(a, less));
                  less0 = less + 1;
                  t1.$indexSet(a, less, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                  less = less0;
                } else {
                  t1.$indexSet(a, k, t1.$index(a, great));
                  t1.$indexSet(a, great, ak);
                }
                great = great0;
                break;
              }
        }
        H.Sort__doSort(a, less, great, compare);
      } else
        H.Sort__doSort(a, less, great, compare);
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap: function CastMap(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap_putIfAbsent_closure: function CastMap_putIfAbsent_closure(t0, t1) {
      this.$this = t0;
      this.ifAbsent = t1;
    },
    CastMap_forEach_closure: function CastMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CastMap_entries_closure: function CastMap_entries_closure(t0) {
      this.$this = t0;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _._iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1) {
      this._current = null;
      this._iterator = t0;
      this._f = t1;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1) {
      this._iterator = t0;
      this._f = t1;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _._current = null;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this._iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this._iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1) {
      this._iterator = t0;
      this._remaining = t1;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this._iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this._iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1) {
      this._iterator = t0;
      this._skipCount = t1;
    },
    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {
      this._iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipWhileIterator: function SkipWhileIterator(t0, t1) {
      this._iterator = t0;
      this._f = t1;
      this._hasSkipped = false;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator() {
    },
    FollowedByIterable: function FollowedByIterable(t0, t1, t2) {
      this.__internal$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    FollowedByIterator: function FollowedByIterator(t0, t1) {
      this._currentIterator = t0;
      this._nextIterable = t1;
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    Symbol: function Symbol(t0) {
      this.__internal$_name = t0;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    ConstantMap__throwUnmodifiable: function() {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S: function(value) {
      var res;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      return res;
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives_parseInt: function(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((C.JSString_methods._codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_parseDouble: function(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = C.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName: function(object) {
      return H.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti: function(object) {
      var dispatchName, t1, $constructor, constructorName;
      if (object instanceof P.Object)
        return H._rtiToString(H.instanceType(object), null);
      if (J.getInterceptor$(object) === C.Interceptor_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = C.C_JS_CONST(object);
        t1 = dispatchName !== "Object" && dispatchName !== "";
        if (t1)
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string")
            t1 = constructorName !== "Object" && constructorName !== "";
          else
            t1 = false;
          if (t1)
            return constructorName;
        }
      }
      return H._rtiToString(H.instanceType(object), null);
    },
    Primitives_dateNow: function() {
      return Date.now();
    },
    Primitives_initTicker: function() {
      var $window, performance;
      if ($.Primitives_timerFrequency !== 0)
        return;
      $.Primitives_timerFrequency = 1000;
      if (typeof window == "undefined")
        return;
      $window = window;
      if ($window == null)
        return;
      performance = $window.performance;
      if (performance == null)
        return;
      if (typeof performance.now != "function")
        return;
      $.Primitives_timerFrequency = 1000000;
      $.Primitives_timerTicks = new H.Primitives_initTicker_closure(performance);
    },
    Primitives__fromCharCodeApply: function(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints: function(codePoints) {
      var t1, _i, i,
        a = H.setRuntimeTypeInfo([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, H.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!H._isInt(i))
          throw H.wrapException(H.argumentErrorValue(i));
        if (i <= 65535)
          a.push(i);
        else if (i <= 1114111) {
          a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          a.push(56320 + (i & 1023));
        } else
          throw H.wrapException(H.argumentErrorValue(i));
      }
      return H.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes: function(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!H._isInt(i))
          throw H.wrapException(H.argumentErrorValue(i));
        if (i < 0)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i > 65535)
          return H.Primitives_stringFromCodePoints(charCodes);
      }
      return H.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List: function(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode: function(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((C.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate: function(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._core$_value);
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_getProperty: function(object, key) {
      var t1 = H._isBool(object) || typeof object == "number" || typeof object == "string";
      if (t1)
        throw H.wrapException(H.argumentErrorValue(object));
      return object[key];
    },
    Primitives_setProperty: function(object, key, value) {
      var t1 = H._isBool(object) || typeof object == "number" || typeof object == "string";
      if (t1)
        throw H.wrapException(H.argumentErrorValue(object));
      object[key] = value;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var $arguments, namedArgumentList, t1 = {};
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      t1.argumentCount = positionalArguments.length;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
      t1.names = "";
      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      "" + t1.argumentCount;
      return J.noSuchMethod$1$($function, new H.JSInvocationMirror(C.Symbol_call, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunction: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, argumentCount, jsStub;
      if (positionalArguments instanceof Array)
        t1 = namedArguments == null || namedArguments.get$isEmpty(namedArguments);
      else
        t1 = false;
      if (t1) {
        $arguments = positionalArguments;
        argumentCount = $arguments.length;
        if (argumentCount === 0) {
          if (!!$function.call$0)
            return $function.call$0();
        } else if (argumentCount === 1) {
          if (!!$function.call$1)
            return $function.call$1($arguments[0]);
        } else if (argumentCount === 2) {
          if (!!$function.call$2)
            return $function.call$2($arguments[0], $arguments[1]);
        } else if (argumentCount === 3) {
          if (!!$function.call$3)
            return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
        } else if (argumentCount === 4) {
          if (!!$function.call$4)
            return $function.call$4($arguments[0], $arguments[1], $arguments[2], $arguments[3]);
        } else if (argumentCount === 5)
          if (!!$function.call$5)
            return $function.call$5($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4]);
        jsStub = $function["call" + "$" + argumentCount];
        if (jsStub != null)
          return jsStub.apply($function, $arguments);
      }
      return H.Primitives__genericApplyFunction2($function, positionalArguments, namedArguments);
    },
    Primitives__genericApplyFunction2: function($function, positionalArguments, namedArguments) {
      var defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, keys, _i, defaultValue, used, t2,
        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, type$.dynamic),
        argumentCount = $arguments.length,
        requiredParameterCount = $function.$requiredArgCount;
      if (argumentCount < requiredParameterCount)
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      defaultValuesClosure = $function.$defaultValues;
      t1 = defaultValuesClosure == null;
      defaultValues = !t1 ? defaultValuesClosure() : null;
      interceptor = J.getInterceptor$($function);
      jsFunction = interceptor["call*"];
      if (typeof jsFunction == "string")
        jsFunction = interceptor[jsFunction];
      if (t1) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount === requiredParameterCount)
          return jsFunction.apply($function, $arguments);
        return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      if (defaultValues instanceof Array) {
        if (namedArguments != null && namedArguments.get$isNotEmpty(namedArguments))
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount > requiredParameterCount + defaultValues.length)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        C.JSArray_methods.addAll$1($arguments, defaultValues.slice(argumentCount - requiredParameterCount));
        return jsFunction.apply($function, $arguments);
      } else {
        if (argumentCount > requiredParameterCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        keys = Object.keys(defaultValues);
        if (namedArguments == null)
          for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
            defaultValue = defaultValues[keys[_i]];
            if (C.C__Required === defaultValue)
              return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
            C.JSArray_methods.add$1($arguments, defaultValue);
          }
        else {
          for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
            t2 = keys[_i];
            if (namedArguments.containsKey$1(0, t2)) {
              ++used;
              C.JSArray_methods.add$1($arguments, namedArguments.$index(0, t2));
            } else {
              defaultValue = defaultValues[t2];
              if (C.C__Required === defaultValue)
                return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
              C.JSArray_methods.add$1($arguments, defaultValue);
            }
          }
          if (used !== namedArguments.get$length(namedArguments))
            return H.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        }
        return jsFunction.apply($function, $arguments);
      }
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, _s5_ = "index";
      if (!H._isInt(index))
        return new P.ArgumentError(true, index, _s5_, null);
      $length = J.get$length$asx(indexable);
      if (index < 0 || index >= $length)
        return P.IndexError$(index, indexable, _s5_, null, $length);
      return P.RangeError$value(index, _s5_);
    },
    diagnoseRangeError: function(start, end, $length) {
      if (start > $length)
        return P.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return P.RangeError$range(end, start, $length, "end", null);
      return new P.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    checkNum: function(value) {
      return value;
    },
    wrapException: function(ex) {
      var wrapper, t1;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      t1 = H.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper: function() {
      return J.toString$0$(this.dartException);
    },
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(P.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern: function(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = H.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = H.setRuntimeTypeInfo([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new H.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn: function(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$: function(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException: function(ex) {
      if (ex == null)
        return new H.NullThrownFromJavaScriptException(ex);
      if (ex instanceof H.ExceptionAndStackTrace)
        return H.saveStackTrace(ex, ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return H.saveStackTrace(ex, ex.dartException);
      return H._unwrapNonDartException(ex);
    },
    saveStackTrace: function(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException: function(ex) {
      var message, number, ieErrorCode, t1, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, _null = null;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return H.saveStackTrace(ex, H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              t1 = H.S(message) + " (Error " + ieErrorCode + ")";
              return H.saveStackTrace(ex, new H.NullError(t1, _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return H.saveStackTrace(ex, H.JsNoSuchMethodError$(message, match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return H.saveStackTrace(ex, H.JsNoSuchMethodError$(message, match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t1 = match != null;
                        } else
                          t1 = true;
                      } else
                        t1 = true;
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
            if (t1)
              return H.saveStackTrace(ex, new H.NullError(message, match == null ? _null : match.method));
          }
        }
        return H.saveStackTrace(ex, new H.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return H.saveStackTrace(ex, new P.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    getTraceFromException: function(exception) {
      var trace;
      if (exception instanceof H.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new H._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new H._StackTrace(exception);
    },
    objectHashCode: function(object) {
      if (object == null || typeof object != "object")
        return J.get$hashCode$(object);
      else
        return H.Primitives_objectHashCode(object);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    fillLiteralSet: function(values, result) {
      var index,
        $length = values.length;
      for (index = 0; index < $length; ++index)
        result.add$1(0, values[index]);
      return result;
    },
    invokeClosure: function(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      switch (numberOfArguments) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {
      var $constructor, t1, trampoline, applyTrampoline, i, stub, stubCallName,
        $function = functions[0],
        callName = $function.$callName,
        $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, "").constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else {
        t1 = $.Closure_functionCounter;
        $.Closure_functionCounter = t1 + 1;
        t1 = new Function("a,b,c,d" + t1, "this.$initialize(a,b,c,d" + t1 + ")");
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      if (!isStatic) {
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
      }
      $prototype.$signature = H.Closure__computeSignatureFunctionNewRti(reflectionInfo, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < functions.length; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex) {
          stub.$reflectionInfo = reflectionInfo;
          applyTrampoline = stub;
        }
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti: function(functionType, isStatic, isIntercepted) {
      var typeEvalMethod;
      if (typeof functionType == "number")
        return function(getType, t) {
          return function() {
            return getType(t);
          };
        }(H.getTypeFromTypesTable, functionType);
      if (typeof functionType == "string") {
        if (isStatic)
          throw H.wrapException("Cannot compute signature for static tearoff.");
        typeEvalMethod = isIntercepted ? H.BoundClosure_evalRecipeIntercepted : H.BoundClosure_evalRecipe;
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, typeEvalMethod);
      }
      throw H.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, t2, selfName, $arguments;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 27;
      if (t2)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.Closure_functionCounter;
        $.Closure_functionCounter = t1 + 1;
        selfName = "self" + H.S(t1);
        t1 = "return function(){var " + selfName + " = this.";
        t2 = $.BoundClosure_selfFieldNameCache;
        return new Function(t1 + (t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + ";return " + selfName + "." + H.S(stubName) + "();}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = t1 + 1;
      $arguments += H.S(t1);
      t1 = "return function(" + $arguments + "){return this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      return new Function(t1 + (t2 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t2) + "." + H.S(stubName) + "(" + $arguments + ");}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf = H.BoundClosure_selfOf,
        getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(new H.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var receiverField, stubName, arity, lookedUpFunction, t1, t2, $arguments,
        selfField = $.BoundClosure_selfFieldNameCache;
      if (selfField == null)
        selfField = $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self");
      receiverField = $.BoundClosure_receiverFieldNameCache;
      if (receiverField == null)
        receiverField = $.BoundClosure_receiverFieldNameCache = H.BoundClosure_computeFieldNamed("receiver");
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 28;
      if (t2)
        return H.Closure_cspForwardInterceptedCall(arity, !t1, stubName, $function);
      if (arity === 1) {
        t1 = "return function(){return this." + selfField + "." + H.S(stubName) + "(this." + receiverField + ");";
        t2 = $.Closure_functionCounter;
        $.Closure_functionCounter = t2 + 1;
        return new Function(t1 + H.S(t2) + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + selfField + "." + H.S(stubName) + "(this." + receiverField + ", " + $arguments + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = t2 + 1;
      return new Function(t1 + H.S(t2) + "}")();
    },
    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {
      return H.Closure_fromTearOff(receiver, functions, applyTrampolineIndex, reflectionInfo, !!isStatic, !!isIntercepted, $name);
    },
    BoundClosure_evalRecipe: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._self), recipe);
    },
    BoundClosure_evalRecipeIntercepted: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._receiver), recipe);
    },
    BoundClosure_selfOf: function(closure) {
      return closure._self;
    },
    BoundClosure_receiverOf: function(closure) {
      return closure._receiver;
    },
    BoundClosure_computeFieldNamed: function(fieldName) {
      var t1, i, $name,
        template = new H.BoundClosure("self", "target", "receiver", "name"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw H.wrapException(P.ArgumentError$("Field name " + fieldName + " not found."));
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    throwLateInitializationError: function($name) {
      return H.throwExpression(new H.LateError($name));
    },
    JsLinkedHashMap_JsLinkedHashMap$es6: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor: function(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = $.getTagFunction.call$1(obj),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = $.alternateTagFunction.call$2(obj, tag);
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(P.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return H.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = C.C_JS_CONST0();
      hooks = H.applyHooksTransformer(C.C_JS_CONST1, H.applyHooksTransformer(C.C_JS_CONST2, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST4, H.applyHooksTransformer(C.C_JS_CONST5, H.applyHooksTransformer(C.C_JS_CONST6(C.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw H.wrapException(P.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked: function(receiver, other, startIndex) {
      var t1 = receiver.indexOf(other, startIndex);
      return t1 >= 0;
    },
    escapeReplacement: function(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    quoteStringForRegExp: function(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked: function(receiver, pattern, replacement) {
      var t1 = H.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      return t1;
    },
    stringReplaceAllUncheckedString: function(receiver, pattern, replacement) {
      var $length, t1, i, index;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      index = receiver.indexOf(pattern, 0);
      if (index < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(H.quoteStringForRegExp(pattern), 'g'), H.escapeReplacement(replacement));
    },
    stringReplaceFirstUnchecked: function(receiver, pattern, replacement, startIndex) {
      var index = receiver.indexOf(pattern, startIndex);
      if (index < 0)
        return receiver;
      return H.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
    },
    stringReplaceRangeUnchecked: function(receiver, start, end, replacement) {
      var prefix = receiver.substring(0, start),
        suffix = receiver.substring(end);
      return prefix + replacement + suffix;
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantMap_map_closure: function ConstantMap_map_closure(t0, t1, t2) {
      this.$this = t0;
      this.transform = t1;
      this.result = t2;
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_length = t0;
      _._jsObject = t1;
      _._keys = t2;
      _.$ti = t3;
    },
    ConstantStringMap_values_closure: function ConstantStringMap_values_closure(t0) {
      this.$this = t0;
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    GeneralConstantMap: function GeneralConstantMap(t0, t1) {
      this._jsData = t0;
      this.$ti = t1;
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__js_helper$_memberName = t0;
      _.__js_helper$_kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
    },
    Primitives_initTicker_closure: function Primitives_initTicker_closure(t0) {
      this.performance = t0;
    },
    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.namedArgumentList = t1;
      this.$arguments = t2;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1, t2, t3) {
      var _ = this;
      _._self = t0;
      _._target = t1;
      _._receiver = t2;
      _.__js_helper$_name = t3;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _Required: function _Required() {
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    JsLinkedHashMap_containsValue_closure: function JsLinkedHashMap_containsValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    _checkViewArguments: function(buffer, offsetInBytes, $length) {
    },
    _ensureNativeList: function(list) {
      var t1, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = P.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
      for (i = 0; i < t1.get$length(list); ++i)
        result[i] = t1.$index(list, i);
      return result;
    },
    NativeByteData_NativeByteData$view: function(buffer, offsetInBytes, $length) {
      H._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new DataView(buffer, offsetInBytes) : new DataView(buffer, offsetInBytes, $length);
    },
    NativeFloat32List_NativeFloat32List: function($length) {
      return new Float32Array($length);
    },
    NativeFloat64List_NativeFloat64List$view: function(buffer, offsetInBytes, $length) {
      H._checkViewArguments(buffer, offsetInBytes, $length);
      return new Float64Array(buffer, offsetInBytes, $length);
    },
    NativeInt32List_NativeInt32List: function($length) {
      return new Int32Array($length);
    },
    NativeInt32List_NativeInt32List$view: function(buffer, offsetInBytes, $length) {
      H._checkViewArguments(buffer, offsetInBytes, $length);
      return new Int32Array(buffer, offsetInBytes, $length);
    },
    NativeInt8List__create1: function(arg) {
      return new Int8Array(arg);
    },
    NativeUint16List_NativeUint16List$fromList: function(list) {
      return new Uint16Array(H._ensureNativeList(list));
    },
    NativeUint8List_NativeUint8List$view: function(buffer, offsetInBytes, $length) {
      H._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex: function(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw H.wrapException(H.diagnoseIndexError(list, index));
    },
    _checkValidRange: function(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        if (end == null)
          t1 = start > $length;
        else
          t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw H.wrapException(H.diagnoseRangeError(start, end, $length));
      if (end == null)
        return $length;
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar: function(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = H._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr: function(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = H._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType: function(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return H.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe: function(rti) {
      return rti._canonicalRecipe;
    },
    findType: function(recipe) {
      return H._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute: function(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = H._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return H._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = H._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return H._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = H._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = H._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return H._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw H.wrapException(P.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray: function(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(substitutedRti);
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed: function(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(t1);
        result.push(t2);
        result.push(substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters: function(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = H._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = H._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = H._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new H._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    setRuntimeTypeInfo: function(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType: function(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return H.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType: function(object, testRti) {
      var rti;
      if (H.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof H.Closure) {
          rti = H.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return H.instanceType(object);
    },
    instanceType: function(object) {
      var rti;
      if (object instanceof P.Object) {
        rti = object.$ti;
        return rti != null ? rti : H._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return H._arrayInstanceType(object);
      return H._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType: function(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType: function(object) {
      var rti = object.$ti;
      return rti != null ? rti : H._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor: function(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return H._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss: function(instance, $constructor) {
      var effectiveConstructor = instance instanceof H.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = H._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable: function(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = H._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeType: function(object) {
      var rti = object instanceof H.Closure ? H.closureFunctionType(object) : null;
      return H.createRuntimeType(rti == null ? H.instanceType(object) : rti);
    },
    createRuntimeType: function(rti) {
      var recipe, starErasedRecipe, starErasedRti,
        type = rti._cachedRuntimeType;
      if (type != null)
        return type;
      recipe = rti._canonicalRecipe;
      starErasedRecipe = recipe.replace(/\*/g, "");
      if (starErasedRecipe === recipe)
        return rti._cachedRuntimeType = new H._Type(rti);
      starErasedRti = H._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      type = starErasedRti._cachedRuntimeType;
      return rti._cachedRuntimeType = type == null ? starErasedRti._cachedRuntimeType = new H._Type(starErasedRti) : type;
    },
    typeLiteral: function(recipe) {
      return H.createRuntimeType(H._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest: function(object) {
      var t1, unstarred, isFn, testRti = this;
      if (testRti === type$.Object)
        return H._finishIsFn(testRti, object, H._isObject);
      if (!H.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return H._finishIsFn(testRti, object, H._isTop);
      t1 = testRti._kind;
      unstarred = t1 === 6 ? testRti._primary : testRti;
      if (unstarred === type$.int)
        isFn = H._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = H._isNum;
      else if (unstarred === type$.String)
        isFn = H._isString;
      else
        isFn = unstarred === type$.bool ? H._isBool : null;
      if (isFn != null)
        return H._finishIsFn(testRti, object, isFn);
      if (unstarred._kind === 9) {
        t1 = unstarred._primary;
        if (unstarred._rest.every(H.isTopType)) {
          testRti._specializedTestResource = "$is" + t1;
          return H._finishIsFn(testRti, object, H._isTestViaProperty);
        }
      } else if (t1 === 7)
        return H._finishIsFn(testRti, object, H._generalNullableIsTestImplementation);
      return H._finishIsFn(testRti, object, H._generalIsTestImplementation);
    },
    _finishIsFn: function(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck: function(object) {
      var t1, testRti = this,
        asFn = H._generalAsCheckImplementation;
      if (!H.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = H._asTop;
      else if (testRti === type$.Object)
        asFn = H._asObject;
      else {
        t1 = H.isNullable(testRti);
        if (t1)
          asFn = H._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs: function(testRti) {
      var t1,
        kind = testRti._kind;
      if (!H.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              t1 = kind === 8 && H._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation: function(object) {
      var testRti = this;
      if (object == null)
        return H._nullIs(testRti);
      return H._isSubtype(init.typeUniverse, H.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _generalNullableIsTestImplementation: function(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty: function(object) {
      var tag, testRti = this;
      if (object == null)
        return H._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof P.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation: function(object) {
      var t1, testRti = this;
      if (object == null) {
        t1 = H.isNullable(testRti);
        if (t1)
          return object;
      } else if (testRti._is(object))
        return object;
      H._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation: function(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      H._failedAsCheck(object, testRti);
    },
    _failedAsCheck: function(object, testRti) {
      throw H.wrapException(H._TypeError$fromMessage(H._Error_compose(object, H.instanceOrFunctionType(object, testRti), H._rtiToString(testRti, null))));
    },
    _Error_compose: function(object, objectRti, checkedTypeDescription) {
      var objectDescription = P.Error_safeToString(object),
        objectTypeDescription = H._rtiToString(objectRti == null ? H.instanceType(object) : objectRti, null);
      return objectDescription + ": type '" + objectTypeDescription + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage: function(message) {
      return new H._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType: function(object, type) {
      return new H._TypeError("TypeError: " + H._Error_compose(object, null, type));
    },
    _isObject: function(object) {
      return object != null;
    },
    _asObject: function(object) {
      if (object != null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop: function(object) {
      return true;
    },
    _asTop: function(object) {
      return object;
    },
    _isBool: function(object) {
      return true === object || false === object;
    },
    _asBool: function(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS: function(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ: function(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble: function(object) {
      if (typeof object == "number")
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt: function(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum: function(object) {
      return typeof object == "number";
    },
    _asNum: function(object) {
      if (typeof object == "number")
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num?"));
    },
    _isString: function(object) {
      return typeof object == "string";
    },
    _asString: function(object) {
      if (typeof object == "string")
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS: function(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ: function(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString: function(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + H._rtiToString(array[i], genericContext);
      return s;
    },
    _functionRtiToString: function(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, boundRti, kind, t3, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = H.setRuntimeTypeInfo([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          genericContext.push("T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          typeParametersText = C.JSString_methods.$add(typeParametersText + typeSep, genericContext[genericContext.length - 1 - i]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + H._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = H._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + H._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + H._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += H._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString: function(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = H._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = H._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 11 || argumentKind === 12 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + H._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = H._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length !== 0 ? $name + ("<" + H._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return H._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return H._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        return genericContext[genericContext.length - 1 - t1];
      }
      return "?";
    },
    _unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule: function(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType: function(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return H._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = H._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = [];
        for (i = 0; i < $length; ++i)
          $arguments.push(erased);
        $interface = H._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules: function(universe, rules) {
      return H._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes: function(universe, types) {
      return H._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval: function(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Parser_parse(H._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment: function(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Parser_parse(H._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind: function(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = H._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests: function(universe, rti) {
      rti._as = H._installSpecializedAsCheck;
      rti._is = H._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti: function(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti: function(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!H.isStrongTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new H.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti: function(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!H.isStrongTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && H.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && H.isNullable(starArgument._primary))
            return starArgument;
          else
            return H.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti: function(universe, baseType, key, normalize) {
      var t1, t2, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (!H.isStrongTopType(baseType))
          if (!(baseType === type$.legacy_Object))
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2 || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return H._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new H.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti: function(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin: function($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed: function($arguments) {
      var s, sep, i, t1, nameSep, s0,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s0 = $arguments[i + 2]._canonicalRecipe;
        s += sep + t1 + nameSep + s0;
      }
      return s;
    },
    _Universe__lookupInterfaceRti: function(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length !== 0)
        s += "<" + H._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti: function(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + H._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti: function(universe, returnType, parameters) {
      var sep, t1, key, probe, rti,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + H._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        t1 = H._Universe__canonicalRecipeJoin(optionalPositional);
        recipe += sep + "[" + t1 + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        t1 = H._Universe__canonicalRecipeJoinNamed(named);
        recipe += sep + "{" + t1 + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti: function(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + H._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti: function(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = new Array($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = H._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, 0);
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Parser_create: function(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse: function(parser) {
      var t2, i, ch, t3, array, head, base, parameters, optionalPositional, named, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = H._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)
          i = H._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = H._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(H._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(H._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(H._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(H._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(H._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              t3 = parser.u;
              array = t1.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              head = t1.pop();
              if (typeof head == "string")
                t1.push(H._Universe__lookupInterfaceRti(t3, head, array));
              else {
                base = H._Parser_toType(t3, parser.e, head);
                switch (base._kind) {
                  case 11:
                    t1.push(H._Universe__lookupGenericFunctionRti(t3, base, array, parser.n));
                    break;
                  default:
                    t1.push(H._Universe__lookupBindingRti(t3, base, array));
                    break;
                }
              }
              break;
            case 38:
              H._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(H._Universe__lookupStarRti(t3, H._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(H._Universe__lookupQuestionRti(t3, H._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(H._Universe__lookupFutureOrRti(t3, H._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              t3 = parser.u;
              parameters = new H._FunctionParameters();
              optionalPositional = t3.sEA;
              named = t3.sEA;
              head = t1.pop();
              if (typeof head == "number")
                switch (head) {
                  case -1:
                    optionalPositional = t1.pop();
                    break;
                  case -2:
                    named = t1.pop();
                    break;
                  default:
                    t1.push(head);
                    break;
                }
              else
                t1.push(head);
              array = t1.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              parameters._requiredPositional = array;
              parameters._optionalPositional = optionalPositional;
              parameters._named = named;
              t1.push(H._Universe__lookupFunctionRti(t3, H._Parser_toType(t3, parser.e, t1.pop()), parameters));
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              H._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return H._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit: function(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier: function(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = H._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          H.throwExpression('No "' + string + '" in "' + H.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(H._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleExtendedOperations: function(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw H.wrapException(P.AssertionError$("Unexpected extended operation " + H.S($top)));
    },
    _Parser_toType: function(universe, environment, item) {
      if (typeof item == "string")
        return H._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number")
        return H._Parser_indexToType(universe, environment, item);
      else
        return item;
    },
    _Parser_toTypes: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType: function(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw H.wrapException(P.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw H.wrapException(P.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype: function(universe, s, sEnv, t, tEnv) {
      var t1, sKind, leftTypeVariable, tKind, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!H.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (H.isStrongTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (H._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return H._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return H._isSubtype(universe, s._primary, sEnv, t, tEnv);
        if (sKind === 6)
          return H._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 7;
      }
      if (sKind === 6)
        return H._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = H.Rti__getQuestionFromStar(universe, t);
        return H._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!H._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return H._isSubtype(universe, H.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = H._isSubtype(universe, type$.Null, sEnv, t, tEnv);
        return t1 && H._isSubtype(universe, s._primary, sEnv, t, tEnv);
      }
      if (tKind === 8) {
        if (H._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return H._isSubtype(universe, s, sEnv, H.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = H._isSubtype(universe, s, sEnv, type$.Null, tEnv);
        return t1 || H._isSubtype(universe, s, sEnv, t._primary, tEnv);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!H._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !H._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return H._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return H._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return H._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      return false;
    },
    _isFunctionSubtype: function(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!H._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!H._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!H._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype: function(universe, s, sEnv, t, tEnv) {
      var sArgs, tArgs, $length, i, t1, t2, rule, supertypeArgs,
        sName = s._primary,
        tName = t._primary;
      if (sName === tName) {
        sArgs = s._rest;
        tArgs = t._rest;
        $length = sArgs.length;
        for (i = 0; i < $length; ++i) {
          t1 = sArgs[i];
          t2 = tArgs[i];
          if (!H._isSubtype(universe, t1, sEnv, t2, tEnv))
            return false;
        }
        return true;
      }
      if (t === type$.Object)
        return true;
      rule = H._Universe_findRule(universe, sName);
      if (rule == null)
        return false;
      supertypeArgs = rule[tName];
      if (supertypeArgs == null)
        return false;
      $length = supertypeArgs.length;
      tArgs = t._rest;
      for (i = 0; i < $length; ++i)
        if (!H._isSubtype(universe, H._Universe_evalInEnvironment(universe, s, supertypeArgs[i]), sEnv, tArgs[i], tEnv))
          return false;
      return true;
    },
    isNullable: function(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!H.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && H.isNullable(t._primary)))
              t1 = kind === 8 && H.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType: function(t) {
      var t1;
      if (!H.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isStrongTopType: function(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign: function(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    isBrowserObject: function(o) {
      return type$.Blob._is(o) || type$.Event._is(o) || type$.KeyRange._is(o) || type$.ImageData._is(o) || type$.Node._is(o) || type$.Window._is(o) || type$.WorkerGlobalScope._is(o);
    },
    unmangleGlobalNameIfPreservedAnyways: function($name) {
      return init.mangledGlobalNames[$name];
    },
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  },
  J = {
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return C.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return C.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: C.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return C.UnknownJavaScriptObject_methods;
      }
      return C.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed: function($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw H.wrapException(P.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable: function($length, $E) {
      if ($length < 0)
        throw H.wrapException(P.ArgumentError$("Length must be a non-negative integer: " + $length));
      return H.setRuntimeTypeInfo(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed: function(allocation, $E) {
      return J.JSArray_markFixedList(H.setRuntimeTypeInfo(allocation, $E._eval$1("JSArray<0>")));
    },
    JSArray_markFixedList: function(list) {
      list.fixed$length = Array;
      return list;
    },
    JSArray_markUnmodifiableList: function(list) {
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    JSArray__compareAny: function(a, b) {
      return J.compareTo$1$ns(a, b);
    },
    JSString__isWhitespace: function(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace: function(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = C.JSString_methods._codeUnitAt$1(string, index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace: function(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = C.JSString_methods.codeUnitAt$1(string, index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ansx: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax: function(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$in: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$n: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$ns: function(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x: function(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z: function(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof P.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$height$x: function(receiver, value) {
      return J.getInterceptor$x(receiver).set$height(receiver, value);
    },
    set$length$asx: function(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    set$width$x: function(receiver, value) {
      return J.getInterceptor$x(receiver).set$width(receiver, value);
    },
    get$Alphabetic$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Alphabetic(receiver);
    },
    get$Bevel$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Bevel(receiver);
    },
    get$BlendMode$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$BlendMode(receiver);
    },
    get$Bold$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Bold(receiver);
    },
    get$Butt$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Butt(receiver);
    },
    get$Center$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Center(receiver);
    },
    get$Clamp$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Clamp(receiver);
    },
    get$Clear$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Clear(receiver);
    },
    get$ClipOp$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$ClipOp(receiver);
    },
    get$Color$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Color(receiver);
    },
    get$ColorBurn$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$ColorBurn(receiver);
    },
    get$ColorDodge$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$ColorDodge(receiver);
    },
    get$Darken$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Darken(receiver);
    },
    get$Dashed$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Dashed(receiver);
    },
    get$Decal$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Decal(receiver);
    },
    get$DecorationStyle$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$DecorationStyle(receiver);
    },
    get$Difference$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Difference(receiver);
    },
    get$Dotted$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Dotted(receiver);
    },
    get$Double$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Double(receiver);
    },
    get$Dst$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Dst(receiver);
    },
    get$DstATop$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$DstATop(receiver);
    },
    get$DstIn$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$DstIn(receiver);
    },
    get$DstOut$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$DstOut(receiver);
    },
    get$DstOver$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$DstOver(receiver);
    },
    get$End$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$End(receiver);
    },
    get$EvenOdd$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$EvenOdd(receiver);
    },
    get$Exclusion$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Exclusion(receiver);
    },
    get$ExtraBlack$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$ExtraBlack(receiver);
    },
    get$ExtraBold$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$ExtraBold(receiver);
    },
    get$ExtraLight$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$ExtraLight(receiver);
    },
    get$Fill$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Fill(receiver);
    },
    get$FillType$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$FillType(receiver);
    },
    get$FilterQuality$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$FilterQuality(receiver);
    },
    get$FontMgr$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$FontMgr(receiver);
    },
    get$FontWeight$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$FontWeight(receiver);
    },
    get$HardLight$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$HardLight(receiver);
    },
    get$High$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$High(receiver);
    },
    get$Hue$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Hue(receiver);
    },
    get$Ideographic$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Ideographic(receiver);
    },
    get$Intersect$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Intersect(receiver);
    },
    get$Justify$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Justify(receiver);
    },
    get$LTR$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$LTR(receiver);
    },
    get$Left$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Left(receiver);
    },
    get$Light$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Light(receiver);
    },
    get$Lighten$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Lighten(receiver);
    },
    get$LineThroughDecoration$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$LineThroughDecoration(receiver);
    },
    get$Low$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Low(receiver);
    },
    get$Luminosity$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Luminosity(receiver);
    },
    get$Max$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Max(receiver);
    },
    get$Medium$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Medium(receiver);
    },
    get$Mirror$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Mirror(receiver);
    },
    get$Miter$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Miter(receiver);
    },
    get$Modulate$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Modulate(receiver);
    },
    get$Multiply$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Multiply(receiver);
    },
    get$NoDecoration$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$NoDecoration(receiver);
    },
    get$None$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$None(receiver);
    },
    get$Normal$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Normal(receiver);
    },
    get$Overlay$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Overlay(receiver);
    },
    get$OverlineDecoration$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$OverlineDecoration(receiver);
    },
    get$PaintStyle$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$PaintStyle(receiver);
    },
    get$ParagraphBuilder$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$ParagraphBuilder(receiver);
    },
    get$Path$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Path(receiver);
    },
    get$Plus$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Plus(receiver);
    },
    get$RTL$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$RTL(receiver);
    },
    get$RectHeightStyle$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$RectHeightStyle(receiver);
    },
    get$RectWidthStyle$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$RectWidthStyle(receiver);
    },
    get$Repeat$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Repeat(receiver);
    },
    get$Right$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Right(receiver);
    },
    get$Round$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Round(receiver);
    },
    get$Saturation$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Saturation(receiver);
    },
    get$Screen$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Screen(receiver);
    },
    get$SemiBold$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$SemiBold(receiver);
    },
    get$Shader$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Shader(receiver);
    },
    get$SoftLight$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$SoftLight(receiver);
    },
    get$Solid$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Solid(receiver);
    },
    get$Square$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Square(receiver);
    },
    get$Src$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Src(receiver);
    },
    get$SrcATop$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$SrcATop(receiver);
    },
    get$SrcIn$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$SrcIn(receiver);
    },
    get$SrcOut$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$SrcOut(receiver);
    },
    get$SrcOver$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$SrcOver(receiver);
    },
    get$Start$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Start(receiver);
    },
    get$Stroke$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Stroke(receiver);
    },
    get$StrokeCap$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$StrokeCap(receiver);
    },
    get$StrokeJoin$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$StrokeJoin(receiver);
    },
    get$TextAlign$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$TextAlign(receiver);
    },
    get$TextBaseline$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$TextBaseline(receiver);
    },
    get$TextDirection$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$TextDirection(receiver);
    },
    get$Thin$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Thin(receiver);
    },
    get$Tight$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Tight(receiver);
    },
    get$TileMode$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$TileMode(receiver);
    },
    get$TypefaceFontProvider$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$TypefaceFontProvider(receiver);
    },
    get$UnderlineDecoration$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$UnderlineDecoration(receiver);
    },
    get$Wavy$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Wavy(receiver);
    },
    get$Winding$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Winding(receiver);
    },
    get$Xor$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$Xor(receiver);
    },
    get$attributes$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$attributes(receiver);
    },
    get$children$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$children(receiver);
    },
    get$current$z: function(receiver) {
      return J.getInterceptor$z(receiver).get$current(receiver);
    },
    get$entries$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$entries(receiver);
    },
    get$first$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$: function(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$keys$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$keys(receiver);
    },
    get$last$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$last(receiver);
    },
    get$length$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$message$z: function(receiver) {
      return J.getInterceptor$z(receiver).get$message(receiver);
    },
    get$name$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$name(receiver);
    },
    get$offset$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$offset(receiver);
    },
    get$runtimeType$: function(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$sign$in: function(receiver) {
      if (typeof receiver === "number")
        return receiver > 0 ? 1 : receiver < 0 ? -1 : receiver;
      return J.getInterceptor$in(receiver).get$sign(receiver);
    },
    get$target$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$target(receiver);
    },
    get$top$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$top(receiver);
    },
    get$value$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$value(receiver);
    },
    get$values$x: function(receiver) {
      return J.getInterceptor$x(receiver).get$values(receiver);
    },
    $add$ansx: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver + a0;
      return J.getInterceptor$ansx(receiver).$add(receiver, a0);
    },
    $eq$: function(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx: function(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax: function(receiver, a0, a1) {
      if (typeof a0 === "number")
        if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
          return receiver[a0] = a1;
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    $mul$ns: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver * a0;
      return J.getInterceptor$ns(receiver).$mul(receiver, a0);
    },
    $sub$n: function(receiver, a0) {
      if (typeof receiver == "number" && typeof a0 == "number")
        return receiver - a0;
      return J.getInterceptor$n(receiver).$sub(receiver, a0);
    },
    GetWebGLContext$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).GetWebGLContext$2(receiver, a0, a1);
    },
    Make$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).Make$0(receiver);
    },
    MakeFromCmds$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).MakeFromCmds$1(receiver, a0);
    },
    MakeFromFontProvider$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).MakeFromFontProvider$2(receiver, a0, a1);
    },
    MakeGrContext$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).MakeGrContext$1(receiver, a0);
    },
    MakeLinearGradient$5$x: function(receiver, a0, a1, a2, a3, a4) {
      return J.getInterceptor$x(receiver).MakeLinearGradient$5(receiver, a0, a1, a2, a3, a4);
    },
    MakeOnScreenGLSurface$4$x: function(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$x(receiver).MakeOnScreenGLSurface$4(receiver, a0, a1, a2, a3);
    },
    MakeSWCanvasSurface$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).MakeSWCanvasSurface$1(receiver, a0);
    },
    MakeTypefaceFromData$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).MakeTypefaceFromData$1(receiver, a0);
    },
    ParagraphStyle$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).ParagraphStyle$1(receiver, a0);
    },
    RefDefault$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).RefDefault$0(receiver);
    },
    TextStyle$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).TextStyle$1(receiver, a0);
    },
    _replaceChild$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    add$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addEventListener$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).addEventListener$2(receiver, a0, a1);
    },
    addEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
    },
    addOval$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addOval$3(receiver, a0, a1, a2);
    },
    addPopStateListener$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).addPopStateListener$1(receiver, a0);
    },
    addRRect$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).addRRect$2(receiver, a0, a1);
    },
    addRect$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).addRect$1(receiver, a0);
    },
    addText$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).addText$1(receiver, a0);
    },
    arrayBuffer$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).arrayBuffer$0(receiver);
    },
    beginRecording$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).beginRecording$1(receiver, a0);
    },
    build$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).build$0(receiver);
    },
    cancel$0$z: function(receiver) {
      return J.getInterceptor$z(receiver).cancel$0(receiver);
    },
    cast$1$0$ax: function(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    cast$2$0$ax: function(receiver, $T1, $T2) {
      return J.getInterceptor$ax(receiver).cast$2$0(receiver, $T1, $T2);
    },
    clamp$2$n: function(receiver, a0, a1) {
      return J.getInterceptor$n(receiver).clamp$2(receiver, a0, a1);
    },
    clipPath$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).clipPath$3(receiver, a0, a1, a2);
    },
    clipRRect$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).clipRRect$3(receiver, a0, a1, a2);
    },
    clipRect$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).clipRect$3(receiver, a0, a1, a2);
    },
    close$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).close$0(receiver);
    },
    compareTo$1$ns: function(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    computeTonalColors$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).computeTonalColors$1(receiver, a0);
    },
    concat$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).concat$1(receiver, a0);
    },
    contains$1$asx: function(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    contains$2$asx: function(receiver, a0, a1) {
      return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
    },
    containsKey$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).containsKey$1(receiver, a0);
    },
    copy$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).copy$0(receiver);
    },
    delete$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).delete$0(receiver);
    },
    didExceedMaxLines$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).didExceedMaxLines$0(receiver);
    },
    dispose$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).dispose$0(receiver);
    },
    drawCircle$4$x: function(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$x(receiver).drawCircle$4(receiver, a0, a1, a2, a3);
    },
    drawDRRect$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).drawDRRect$3(receiver, a0, a1, a2);
    },
    drawPaint$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).drawPaint$1(receiver, a0);
    },
    drawParagraph$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).drawParagraph$3(receiver, a0, a1, a2);
    },
    drawPath$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).drawPath$2(receiver, a0, a1);
    },
    drawPicture$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).drawPicture$1(receiver, a0);
    },
    drawRRect$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).drawRRect$2(receiver, a0, a1);
    },
    drawRect$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).drawRect$2(receiver, a0, a1);
    },
    drawShadow$7$x: function(receiver, a0, a1, a2, a3, a4, a5, a6) {
      return J.getInterceptor$x(receiver).drawShadow$7(receiver, a0, a1, a2, a3, a4, a5, a6);
    },
    elementAt$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    flush$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).flush$0(receiver);
    },
    focus$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).focus$0(receiver);
    },
    forEach$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    getAlphabeticBaseline$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getAlphabeticBaseline$0(receiver);
    },
    getBounds$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getBounds$0(receiver);
    },
    getCanvas$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getCanvas$0(receiver);
    },
    getGlyphBounds$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).getGlyphBounds$3(receiver, a0, a1, a2);
    },
    getGlyphIDs$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).getGlyphIDs$1(receiver, a0);
    },
    getGlyphPositionAtCoordinate$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).getGlyphPositionAtCoordinate$2(receiver, a0, a1);
    },
    getHeight$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getHeight$0(receiver);
    },
    getIdeographicBaseline$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getIdeographicBaseline$0(receiver);
    },
    getLongestLine$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getLongestLine$0(receiver);
    },
    getMaxIntrinsicWidth$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getMaxIntrinsicWidth$0(receiver);
    },
    getMaxWidth$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getMaxWidth$0(receiver);
    },
    getPath$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getPath$0(receiver);
    },
    getRange$2$ax: function(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).getRange$2(receiver, a0, a1);
    },
    getRectsForPlaceholders$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getRectsForPlaceholders$0(receiver);
    },
    getRectsForRange$4$x: function(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$x(receiver).getRectsForRange$4(receiver, a0, a1, a2, a3);
    },
    getState$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).getState$0(receiver);
    },
    go$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).go$1(receiver, a0);
    },
    isDeleted$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).isDeleted$0(receiver);
    },
    isIdentity$0$z: function(receiver) {
      return J.getInterceptor$z(receiver).isIdentity$0(receiver);
    },
    join$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).join$1(receiver, a0);
    },
    layout$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).layout$1(receiver, a0);
    },
    lineTo$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).lineTo$2(receiver, a0, a1);
    },
    listener$0$z: function(receiver) {
      return J.getInterceptor$z(receiver).listener$0(receiver);
    },
    map$1$1$ax: function(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    map$2$1$ax: function(receiver, a0, $T1, $T2) {
      return J.getInterceptor$ax(receiver).map$2$1(receiver, a0, $T1, $T2);
    },
    moveTo$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).moveTo$2(receiver, a0, a1);
    },
    noSuchMethod$1$: function(receiver, a0) {
      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
    },
    pop$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).pop$0(receiver);
    },
    pushPaintStyle$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).pushPaintStyle$3(receiver, a0, a1, a2);
    },
    pushState$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).pushState$3(receiver, a0, a1, a2);
    },
    pushStyle$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).pushStyle$1(receiver, a0);
    },
    putIfAbsent$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).putIfAbsent$2(receiver, a0, a1);
    },
    quadTo$4$x: function(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$x(receiver).quadTo$4(receiver, a0, a1, a2, a3);
    },
    register$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).register$2(receiver, a0, a1);
    },
    registerFont$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).registerFont$2(receiver, a0, a1);
    },
    remove$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    remove$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
    },
    removeEventListener$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).removeEventListener$2(receiver, a0, a1);
    },
    removeEventListener$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
    },
    removeLast$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).removeLast$0(receiver);
    },
    replaceState$3$x: function(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).replaceState$3(receiver, a0, a1, a2);
    },
    replaceWith$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    restore$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).restore$0(receiver);
    },
    restoreToCount$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).restoreToCount$1(receiver, a0);
    },
    save$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).save$0(receiver);
    },
    saveLayer$4$x: function(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$x(receiver).saveLayer$4(receiver, a0, a1, a2, a3);
    },
    select$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).select$0(receiver);
    },
    setAntiAlias$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setAntiAlias$1(receiver, a0);
    },
    setBlendMode$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setBlendMode$1(receiver, a0);
    },
    setColorInt$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setColorInt$1(receiver, a0);
    },
    setCurrentContext$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setCurrentContext$1(receiver, a0);
    },
    setFillType$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setFillType$1(receiver, a0);
    },
    setRange$4$ax: function(receiver, a0, a1, a2, a3) {
      return J.getInterceptor$ax(receiver).setRange$4(receiver, a0, a1, a2, a3);
    },
    setResourceCacheLimitBytes$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setResourceCacheLimitBytes$1(receiver, a0);
    },
    setShader$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setShader$1(receiver, a0);
    },
    setStrokeWidth$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setStrokeWidth$1(receiver, a0);
    },
    setStyle$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).setStyle$1(receiver, a0);
    },
    skip$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    sort$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
    },
    split$1$s: function(receiver, a0) {
      return J.getInterceptor$s(receiver).split$1(receiver, a0);
    },
    submit$0$z: function(receiver) {
      return J.getInterceptor$z(receiver).submit$0(receiver);
    },
    take$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    text$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).text$0(receiver);
    },
    then$1$x: function(receiver, a0) {
      return J.getInterceptor$x(receiver).then$1(receiver, a0);
    },
    then$1$1$x: function(receiver, a0, $T1) {
      return J.getInterceptor$x(receiver).then$1$1(receiver, a0, $T1);
    },
    then$1$2$onError$x: function(receiver, a0, a1, $T1) {
      return J.getInterceptor$x(receiver).then$1$2$onError(receiver, a0, a1, $T1);
    },
    toCmds$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).toCmds$0(receiver);
    },
    toList$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toLowerCase$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
    },
    toSet$0$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).toSet$0(receiver);
    },
    toString$0$: function(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    transform$9$x: function(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8) {
      return J.getInterceptor$x(receiver).transform$9(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8);
    },
    translate$2$x: function(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).translate$2(receiver, a0, a1);
    },
    trimLeft$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).trimLeft$0(receiver);
    },
    trimRight$0$s: function(receiver) {
      return J.getInterceptor$s(receiver).trimRight$0(receiver);
    },
    unlock$0$x: function(receiver) {
      return J.getInterceptor$x(receiver).unlock$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1) {
      var _ = this;
      _.__interceptors$_iterable = t0;
      _.__interceptors$_length = t1;
      _.__interceptors$_index = 0;
      _.__interceptors$_current = null;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  P = {
    _AsyncRun__initializeScheduleImmediate: function() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: function(callback) {
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate: function(callback) {
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer: function(callback) {
      P.Timer__createTimer(C.Duration_0, callback);
    },
    Timer__createTimer: function(duration, callback) {
      var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    Timer__createPeriodicTimer: function(duration, callback) {
      var milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$: function(milliseconds, callback) {
      var t1 = new P._TimerImpl(true);
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _TimerImpl$periodic: function(milliseconds, callback) {
      var t1 = new P._TimerImpl(false);
      t1._TimerImpl$periodic$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter: function($T) {
      return new P._AsyncAwaitCompleter(new P._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync: function(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait: function(object, bodyFunction) {
      P._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn: function(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow: function(object, completer) {
      completer.completeError$2(H.unwrapException(object), H.getTraceFromException(object));
    },
    _awaitOnObject: function(object, bodyFunction) {
      var t1, future,
        thenCallback = new P._awaitOnObject_closure(bodyFunction),
        errorCallback = new P._awaitOnObject_closure0(bodyFunction);
      if (object instanceof P._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(0, thenCallback, errorCallback, t1);
        else {
          future = new P._Future($.Zone__current, type$._Future_dynamic);
          future._state = 4;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync: function($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$1(new P._wrapJsFunctionForAsync_closure($protected));
    },
    _asyncStarHelper: function(object, bodyFunctionOrErrorCode, controller) {
      var t1, stackTrace, t2, stream;
      if (bodyFunctionOrErrorCode === 0) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeWithValue$1(null);
        else
          controller.get$controller(controller).close$0(0);
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeError$2(H.unwrapException(object), H.getTraceFromException(object));
        else {
          t1 = H.unwrapException(object);
          stackTrace = H.getTraceFromException(object);
          t2 = controller.get$controller(controller);
          H.checkNotNullable(t1, "error", type$.Object);
          if (t2._state >= 4)
            H.throwExpression(t2._badEventState$0());
          t2._addError$2(t1, stackTrace);
          controller.get$controller(controller).close$0(0);
        }
        return;
      }
      if (object instanceof P._IterationMarker) {
        if (controller.cancelationFuture != null) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          t1 = object.value;
          controller.get$controller(controller).add$1(0, t1);
          P.scheduleMicrotask(new P._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));
          return;
        } else if (t1 === 1) {
          stream = object.value;
          controller.get$controller(controller).addStream$2$cancelOnError(0, stream, false).then$1(0, new P._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode));
          return;
        }
      }
      P._awaitOnObject(object, bodyFunctionOrErrorCode);
    },
    _streamOfController: function(controller) {
      var t1 = controller.get$controller(controller);
      return new P._ControllerStream(t1, H._instanceType(t1)._eval$1("_ControllerStream<1>"));
    },
    _AsyncStarStreamController$: function(body, $T) {
      var t1 = new P._AsyncStarStreamController($T._eval$1("_AsyncStarStreamController<0>"));
      t1._AsyncStarStreamController$1(body, $T);
      return t1;
    },
    _makeAsyncStarStreamController: function(body, $T) {
      return P._AsyncStarStreamController$(body, $T);
    },
    _IterationMarker_yieldStar: function(values) {
      return new P._IterationMarker(values, 1);
    },
    _IterationMarker_endOfIteration: function() {
      return C._IterationMarker_null_2;
    },
    _IterationMarker_yieldSingle: function(value) {
      return new P._IterationMarker(value, 0);
    },
    _IterationMarker_uncaughtError: function(error) {
      return new P._IterationMarker(error, 3);
    },
    _makeSyncStarIterable: function(body, $T) {
      return new P._SyncStarIterable(body, $T._eval$1("_SyncStarIterable<0>"));
    },
    AsyncError$: function(error, stackTrace) {
      var t1 = H.checkNotNullable(error, "error", type$.Object);
      return new P.AsyncError(t1, stackTrace == null ? P.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace: function(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return C.C__StringStackTrace;
    },
    Future_Future: function(computation, $T) {
      var result = new P._Future($.Zone__current, $T._eval$1("_Future<0>"));
      P.Timer_Timer(C.Duration_0, new P.Future_Future_closure(result, computation));
      return result;
    },
    Future_Future$value: function(value, $T) {
      var t1 = value == null ? $T._as(value) : value,
        t2 = new P._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t2._asyncComplete$1(t1);
      return t2;
    },
    Future_Future$error: function(error, stackTrace, $T) {
      var t1;
      H.checkNotNullable(error, "error", type$.Object);
      $.Zone__current !== C.C__RootZone;
      if (stackTrace == null)
        stackTrace = P.AsyncError_defaultStackTrace(error);
      t1 = new P._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._asyncCompleteError$2(error, stackTrace);
      return t1;
    },
    Future_Future$delayed: function(duration, $T) {
      var result,
        t1 = !$T._is(null);
      if (t1)
        throw H.wrapException(P.ArgumentError$value(null, "computation", "The type parameter is not nullable"));
      result = new P._Future($.Zone__current, $T._eval$1("_Future<0>"));
      P.Timer_Timer(duration, new P.Future_Future$delayed_closure(null, result, $T));
      return result;
    },
    Future_wait: function(futures, $T) {
      var _error_get, _error_set, _stackTrace_get, _stackTrace_set, handleError, future, pos, e, st, t1, t2, exception, _box_0 = {}, cleanUp = null,
        eagerError = false,
        _future = new P._Future($.Zone__current, $T._eval$1("_Future<List<0>>"));
      _box_0.values = null;
      _box_0.remaining = 0;
      _box_0._error = null;
      _error_get = new P.Future_wait__error_get(_box_0);
      _error_set = new P.Future_wait__error_set(_box_0);
      _box_0._stackTrace = null;
      _stackTrace_get = new P.Future_wait__stackTrace_get(_box_0);
      _stackTrace_set = new P.Future_wait__stackTrace_set(_box_0);
      handleError = new P.Future_wait_handleError(_box_0, cleanUp, eagerError, _future, _error_set, _stackTrace_set, _error_get, _stackTrace_get);
      try {
        for (t1 = J.get$iterator$ax(futures), t2 = type$.Null; t1.moveNext$0();) {
          future = t1.get$current(t1);
          pos = _box_0.remaining;
          J.then$1$2$onError$x(future, new P.Future_wait_closure(_box_0, pos, _future, cleanUp, eagerError, _error_get, _stackTrace_get, $T), handleError, t2);
          ++_box_0.remaining;
        }
        t1 = _box_0.remaining;
        if (t1 === 0) {
          t1 = _future;
          t1._completeWithValue$1(H.setRuntimeTypeInfo([], $T._eval$1("JSArray<0>")));
          return t1;
        }
        _box_0.values = P.List_List$filled(t1, null, false, $T._eval$1("0?"));
      } catch (exception) {
        e = H.unwrapException(exception);
        st = H.getTraceFromException(exception);
        if (_box_0.remaining === 0 || eagerError)
          return P.Future_Future$error(e, st, $T._eval$1("List<0>"));
        else {
          _error_set.call$1(e);
          _stackTrace_set.call$1(st);
        }
      }
      return _future;
    },
    Completer_Completer: function($T) {
      return new P._AsyncCompleter(new P._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncCompleter<0>"));
    },
    _completeWithErrorCallback: function(result, error, stackTrace) {
      if (stackTrace == null)
        stackTrace = P.AsyncError_defaultStackTrace(error);
      result._completeError$2(error, stackTrace);
    },
    _Future__chainCoreFuture: function(source, target) {
      var t1, listeners;
      for (; t1 = source._state, t1 === 2;)
        source = source._resultOrListeners;
      if (t1 >= 4) {
        listeners = target._removeListeners$0();
        target._state = source._state;
        target._resultOrListeners = source._resultOrListeners;
        P._Future__propagateToListeners(target, listeners);
      } else {
        listeners = target._resultOrListeners;
        target._state = 2;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners: function(source, listeners) {
      var t2, _box_0, hasError, nextListener, nextListener0, t3, sourceResult, t4, t5, zone, oldZone, result, current, _null = null, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.Future_dynamic; true;) {
        _box_0 = {};
        hasError = t1._state === 8;
        if (listeners == null) {
          if (hasError) {
            t2 = t1._resultOrListeners;
            P._rootHandleUncaughtError(_null, _null, t1._zone, t2.error, t2.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          P._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t3 = _box_1.source;
        sourceResult = t3._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        t4 = !hasError;
        if (t4) {
          t5 = t1.state;
          t5 = (t5 & 1) !== 0 || (t5 & 15) === 8;
        } else
          t5 = true;
        if (t5) {
          zone = t1.result._zone;
          if (hasError) {
            t5 = t3._zone === zone;
            t5 = !(t5 || t5);
          } else
            t5 = false;
          if (t5) {
            P._rootHandleUncaughtError(_null, _null, t3._zone, sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = _null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new P._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t4) {
            if ((t1 & 1) !== 0)
              new P._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new P._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t2._is(t1)) {
            t3 = _box_0.listener.$ti;
            t3 = t3._eval$1("Future<2>")._is(t1) || !t3._rest[1]._is(t1);
          } else
            t3 = false;
          if (t3) {
            result = _box_0.listener.result;
            if (t1 instanceof P._Future)
              if (t1._state >= 4) {
                current = result._resultOrListeners;
                result._resultOrListeners = null;
                listeners = result._reverseListeners$1(current);
                result._state = t1._state;
                result._resultOrListeners = t1._resultOrListeners;
                _box_1.source = t1;
                continue;
              } else
                P._Future__chainCoreFuture(t1, result);
            else
              result._chainForeignFuture$1(t1);
            return;
          }
        }
        result = _box_0.listener.result;
        current = result._resultOrListeners;
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t3 = _box_0.listenerValueOrError;
        if (!t1) {
          result._state = 4;
          result._resultOrListeners = t3;
        } else {
          result._state = 8;
          result._resultOrListeners = t3;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler: function(errorHandler, zone) {
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$1(errorHandler);
      if (type$.dynamic_Function_Object._is(errorHandler))
        return errorHandler;
      throw H.wrapException(P.ArgumentError$value(errorHandler, "onError", "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a valid result"));
    },
    _microtaskLoop: function() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop: function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback: function(callback) {
      var newEntry = new P._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback: function(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        P._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new P._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask: function(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(_null, _null, C.C__RootZone, callback);
        return;
      }
      P._rootScheduleMicrotask(_null, _null, currentZone, currentZone.bindCallbackGuarded$1(callback));
    },
    Stream_Stream$fromIterable: function(elements, $T) {
      return new P._GeneratedStreamImpl(new P.Stream_Stream$fromIterable_closure(elements, $T), $T._eval$1("_GeneratedStreamImpl<0>"));
    },
    StreamIterator_StreamIterator: function(stream) {
      H.checkNotNullable(stream, "stream", type$.Object);
      return new P._StreamIterator();
    },
    _runGuarded: function(notificationHandler) {
      var e, s, exception, t1;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = $.Zone__current;
        P._rootHandleUncaughtError(null, null, t1, e, s);
      }
    },
    _BufferingStreamSubscription$: function(onData, onError, onDone, cancelOnError, $T) {
      var t1 = $.Zone__current,
        t2 = cancelOnError ? 1 : 0,
        t3 = P._BufferingStreamSubscription__registerDataHandler(t1, onData),
        t4 = P._BufferingStreamSubscription__registerErrorHandler(t1, onError);
      return new P._BufferingStreamSubscription(t3, t4, onDone, t1, t2, $T._eval$1("_BufferingStreamSubscription<0>"));
    },
    _BufferingStreamSubscription__registerDataHandler: function(zone, handleData) {
      return handleData == null ? P.async___nullDataHandler$closure() : handleData;
    },
    _BufferingStreamSubscription__registerErrorHandler: function(zone, handleError) {
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$1(handleError);
      if (type$.void_Function_Object._is(handleError))
        return handleError;
      throw H.wrapException(P.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace."));
    },
    _nullDataHandler: function(value) {
    },
    Timer_Timer: function(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return P.Timer__createTimer(duration, callback);
      return P.Timer__createTimer(duration, t1.bindCallbackGuarded$1(callback));
    },
    Timer_Timer$periodic: function(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return P.Timer__createPeriodicTimer(duration, callback);
      return P.Timer__createPeriodicTimer(duration, t1.bindUnaryCallbackGuarded$1$1(callback, type$.Timer));
    },
    _rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
      P._schedulePriorityAsyncCallback(new P._rootHandleUncaughtError_closure(error, stackTrace));
    },
    _rootRun: function($self, $parent, zone, f) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary: function($self, $parent, zone, f, arg) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary: function($self, $parent, zone, f, arg1, arg2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask: function($self, $parent, zone, f) {
      if (C.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      P._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl(t0) {
      this._once = t0;
      this._handle = null;
      this._tick = 0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _TimerImpl$periodic_closure: function _TimerImpl$periodic_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.milliseconds = t1;
      _.start = t2;
      _.callback = t3;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _asyncStarHelper_closure: function _asyncStarHelper_closure(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _asyncStarHelper_closure0: function _asyncStarHelper_closure0(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _AsyncStarStreamController: function _AsyncStarStreamController(t0) {
      var _ = this;
      _.___AsyncStarStreamController_controller = null;
      _.isSuspended = false;
      _.cancelationFuture = null;
      _.$ti = t0;
    },
    _AsyncStarStreamController__resumeBody: function _AsyncStarStreamController__resumeBody(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController__resumeBody_closure: function _AsyncStarStreamController__resumeBody_closure(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController_closure: function _AsyncStarStreamController_closure(t0) {
      this._resumeBody = t0;
    },
    _AsyncStarStreamController_closure0: function _AsyncStarStreamController_closure0(t0, t1) {
      this.$this = t0;
      this._resumeBody = t1;
    },
    _AsyncStarStreamController_closure1: function _AsyncStarStreamController_closure1(t0, t1) {
      this.$this = t0;
      this.body = t1;
    },
    _AsyncStarStreamController__closure: function _AsyncStarStreamController__closure(t0) {
      this.body = t0;
    },
    _IterationMarker: function _IterationMarker(t0, t1) {
      this.value = t0;
      this.state = t1;
    },
    _SyncStarIterator: function _SyncStarIterator(t0) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._async$_current = null;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    Future_Future_closure: function Future_Future_closure(t0, t1) {
      this.result = t0;
      this.computation = t1;
    },
    Future_Future$delayed_closure: function Future_Future$delayed_closure(t0, t1, t2) {
      this.computation = t0;
      this.result = t1;
      this.T = t2;
    },
    Future_wait__error_set: function Future_wait__error_set(t0) {
      this._box_0 = t0;
    },
    Future_wait__stackTrace_set: function Future_wait__stackTrace_set(t0) {
      this._box_0 = t0;
    },
    Future_wait__error_get: function Future_wait__error_get(t0) {
      this._box_0 = t0;
    },
    Future_wait__stackTrace_get: function Future_wait__stackTrace_get(t0) {
      this._box_0 = t0;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _._future = t3;
      _._error_set = t4;
      _._stackTrace_set = t5;
      _._error_get = t6;
      _._stackTrace_get = t7;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _._future = t2;
      _.cleanUp = t3;
      _.eagerError = t4;
      _._error_get = t5;
      _._stackTrace_get = t6;
      _.T = t7;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_Stream$fromIterable_closure: function Stream_Stream$fromIterable_closure(t0, t1) {
      this.elements = t0;
      this.T = t1;
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    StreamSubscription: function StreamSubscription() {
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._async$_controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._async$_controller = t0;
      _._async$_onData = t1;
      _._onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _AddStreamState: function _AddStreamState() {
    },
    _AddStreamState_cancel_closure: function _AddStreamState_cancel_closure(t0) {
      this.$this = t0;
    },
    _StreamControllerAddStreamState: function _StreamControllerAddStreamState(t0, t1, t2) {
      this.varData = t0;
      this.addStreamFuture = t1;
      this.addSubscription = t2;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._async$_onData = t0;
      _._onError = t1;
      _._onDone = t2;
      _._zone = t3;
      _._state = t4;
      _._pending = _._cancelFuture = null;
      _.$ti = t5;
    },
    _BufferingStreamSubscription__sendError_sendError: function _BufferingStreamSubscription__sendError_sendError(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _GeneratedStreamImpl: function _GeneratedStreamImpl(t0, t1) {
      this._pending = t0;
      this._isUsed = false;
      this.$ti = t1;
    },
    _IterablePendingEvents: function _IterablePendingEvents(t0) {
      this._async$_iterator = t0;
      this._state = 0;
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0) {
      this.value = t0;
      this.next = null;
    },
    _DelayedError: function _DelayedError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _StreamImplEvents: function _StreamImplEvents() {
      this.lastPendingEvent = this.firstPendingEvent = null;
      this._state = 0;
    },
    _StreamIterator: function _StreamIterator() {
    },
    _Zone: function _Zone() {
    },
    _rootHandleUncaughtError_closure: function _rootHandleUncaughtError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    HashMap_HashMap: function($K, $V) {
      return new P._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
    },
    _HashMap__getTableEntry: function(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry: function(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable: function() {
      var table = Object.create(null);
      P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$_literal: function(keyValuePairs, $K, $V) {
      return H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>")));
    },
    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {
      return new H.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    _LinkedIdentityHashMap__LinkedIdentityHashMap$es6: function($K, $V) {
      return new P._LinkedIdentityHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedIdentityHashMap<1,2>"));
    },
    HashSet_HashSet: function($E) {
      return new P._HashSet($E._eval$1("_HashSet<0>"));
    },
    _HashSet__newHashTable: function() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashSet_LinkedHashSet: function($E) {
      return new P._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty: function($E) {
      return new P._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_literal: function(values, $E) {
      return H.fillLiteralSet(values, new P._LinkedHashSet($E._eval$1("_LinkedHashSet<0>")));
    },
    _LinkedHashSet__newHashTable: function() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$: function(_set, _modifications) {
      var t1 = new P._LinkedHashSetIterator(_set, _modifications);
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    HashMap_HashMap$from: function(other, $K, $V) {
      var result = P.HashMap_HashMap($K, $V);
      other.forEach$1(0, new P.HashMap_HashMap$from_closure(result, $K, $V));
      return result;
    },
    HashSet_HashSet$from: function(elements, $E) {
      var t1, t2,
        result = P.HashSet_HashSet($E);
      for (t1 = P._LinkedHashSetIterator$(elements, elements._collection$_modifications), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
        result.add$1(0, $E._as(t2._as(t1._collection$_current)));
      return result;
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = H.setRuntimeTypeInfo([], type$.JSArray_String);
      $._toStringVisiting.push(iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        $._toStringVisiting.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, parts, ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      $._toStringVisiting.push(iterable);
      try {
        t1 = buffer;
        t1._contents = P.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = H.S(it.get$current(it));
        parts.push(next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        ultimateString = parts.pop();
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current(it);
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            parts.push(H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current(it);
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current(it);
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                $length -= parts.pop().length + 2;
                --count;
              }
              parts.push("...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        parts.push(elision);
      parts.push(penultimateString);
      parts.push(ultimateString);
    },
    LinkedHashMap_LinkedHashMap$from: function(other, $K, $V) {
      var result = P.LinkedHashMap_LinkedHashMap($K, $V);
      J.forEach$1$ax(other, new P.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashSet_LinkedHashSet$from: function(elements, $E) {
      var t1,
        result = P.LinkedHashSet_LinkedHashSet($E);
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        result.add$1(0, $E._as(t1.get$current(t1)));
      return result;
    },
    LinkedHashSet_LinkedHashSet$of: function(elements, $E) {
      var t1 = P.LinkedHashSet_LinkedHashSet($E);
      t1.addAll$1(0, elements);
      return t1;
    },
    _LinkedListIterator$: function(list) {
      return new P._LinkedListIterator(list, list._modificationCount, list._collection$_first);
    },
    MapBase_mapToString: function(m) {
      var result, t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        $._toStringVisiting.push(m);
        result._contents += "{";
        t1.first = true;
        J.forEach$1$ax(m, new P.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListQueue$: function(initialCapacity, $E) {
      return new P.ListQueue(P.List_List$filled(P.ListQueue__calculateCapacity(initialCapacity), null, false, $E._eval$1("0?")), $E._eval$1("ListQueue<0>"));
    },
    ListQueue__calculateCapacity: function(initialCapacity) {
      if (initialCapacity == null || initialCapacity < 8)
        return 8;
      else if ((initialCapacity & initialCapacity - 1) >>> 0 !== 0)
        return P.ListQueue__nextPowerOf2(initialCapacity);
      return initialCapacity;
    },
    ListQueue__nextPowerOf2: function(number) {
      var nextNumber;
      number = (number << 1 >>> 0) - 1;
      for (; true; number = nextNumber) {
        nextNumber = (number & number - 1) >>> 0;
        if (nextNumber === 0)
          return number;
      }
    },
    _UnmodifiableSetMixin__throwUnmodifiable: function() {
      throw H.wrapException(P.UnsupportedError$("Cannot change an unmodifiable set"));
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMap_values_closure: function _HashMap_values_closure(t0) {
      this.$this = t0;
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1) {
      var _ = this;
      _._collection$_map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
    },
    _LinkedIdentityHashMap: function _LinkedIdentityHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    _HashSet: function _HashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._elements = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashSetIterator: function _HashSetIterator(t0, t1) {
      var _ = this;
      _._set = t0;
      _._elements = t1;
      _._offset = 0;
      _._collection$_current = null;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._collection$_element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
    },
    HashMap_HashMap$from_closure: function HashMap_HashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    IterableBase: function IterableBase() {
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    LinkedList: function LinkedList(t0) {
      var _ = this;
      _._collection$_length = _._modificationCount = 0;
      _._collection$_first = null;
      _.$ti = t0;
    },
    _LinkedListIterator: function _LinkedListIterator(t0, t1, t2) {
      var _ = this;
      _._list = t0;
      _._modificationCount = t1;
      _._collection$_current = null;
      _._collection$_next = t2;
      _._visitedFirst = false;
    },
    LinkedListEntry: function LinkedListEntry() {
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    MapMixin_entries_closure: function MapMixin_entries_closure(t0) {
      this.$this = t0;
    },
    _MapBaseValueIterable: function _MapBaseValueIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _MapBaseValueIterator: function _MapBaseValueIterator(t0, t1) {
      this._collection$_keys = t0;
      this._collection$_map = t1;
      this._collection$_current = null;
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _DoubleLink: function _DoubleLink() {
    },
    DoubleLinkedQueueEntry: function DoubleLinkedQueueEntry() {
    },
    _DoubleLinkedQueueEntry: function _DoubleLinkedQueueEntry() {
    },
    _DoubleLinkedQueueElement: function _DoubleLinkedQueueElement(t0, t1, t2) {
      var _ = this;
      _._queue = t0;
      _._collection$_element = t1;
      _._nextLink = _._previousLink = null;
      _.$ti = t2;
    },
    _DoubleLinkedQueueSentinel: function _DoubleLinkedQueueSentinel(t0, t1, t2) {
      var _ = this;
      _._queue = t0;
      _._collection$_element = t1;
      _._nextLink = _._previousLink = null;
      _.$ti = t2;
    },
    DoubleLinkedQueue: function DoubleLinkedQueue(t0) {
      this.__DoubleLinkedQueue__sentinel = null;
      this._elementCount = 0;
      this.$ti = t0;
    },
    _DoubleLinkedQueueIterator: function _DoubleLinkedQueueIterator(t0, t1, t2) {
      var _ = this;
      _._sentinel = t0;
      _._nextEntry = t1;
      _._collection$_current = null;
      _.$ti = t2;
    },
    ListQueue: function ListQueue(t0, t1) {
      var _ = this;
      _._table = t0;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t1;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3) {
      var _ = this;
      _._queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._position = t3;
      _._collection$_current = null;
    },
    SetMixin: function SetMixin() {
    },
    _SetBase: function _SetBase() {
    },
    _UnmodifiableSetMixin: function _UnmodifiableSetMixin() {
    },
    _UnmodifiableSet: function _UnmodifiableSet(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    __SetBase_Object_SetMixin: function __SetBase_Object_SetMixin() {
    },
    __UnmodifiableSet__SetBase__UnmodifiableSetMixin: function __UnmodifiableSet__SetBase__UnmodifiableSetMixin() {
    },
    _parseJson: function(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.FormatException$(String(e), null, null);
        throw H.wrapException(t1);
      }
      t1 = P._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy: function(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new P._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = P._convertJsonToDartLazy(object[i]);
      return object;
    },
    Utf8Decoder__convertIntercepted: function(allowMalformed, codeUnits, start, end) {
      var casted, result;
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        end = casted.length;
        if (end - start < 15)
          return null;
        result = P.Utf8Decoder__convertInterceptedUint8List(allowMalformed, casted, start, end);
        if (result != null && allowMalformed)
          if (result.indexOf("\ufffd") >= 0)
            return null;
        return result;
      }
      return null;
    },
    Utf8Decoder__convertInterceptedUint8List: function(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$Utf8Decoder__decoderNonfatal() : $.$get$Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return P.Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return P.Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, P.RangeError_checkValidRange(start, end, codeUnits.length)));
    },
    Utf8Decoder__useTextDecoder: function(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
      }
      return null;
    },
    Base64Codec__checkPadding: function(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (C.JSInt_methods.$mod($length, 4) !== 0)
        throw H.wrapException(P.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw H.wrapException(P.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw H.wrapException(P.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    JsonUnsupportedObjectError$: function(unsupportedObject, cause, partialResult) {
      return new P.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable: function(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$: function(_sink, _toEncodable) {
      var t1 = _toEncodable == null ? P.convert___defaultToEncodable$closure() : _toEncodable;
      return new P._JsonStringStringifier(_sink, [], t1);
    },
    _JsonStringStringifier_stringify: function(object, toEncodable, indent) {
      var t1,
        output = new P.StringBuffer(""),
        stringifier = P._JsonStringStringifier$(output, toEncodable);
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    LineSplitter_split: function($async$lines) {
      return P._makeSyncStarIterable(function() {
        var lines = $async$lines;
        var $async$goto = 0, $async$handler = 1, $async$currentError, sliceStart, char, i, char0, end;
        return function $async$LineSplitter_split($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                end = P.RangeError_checkValidRange(0, null, lines.length);
                sliceStart = 0, char = 0, i = 0;
              case 2:
                // for condition
                if (!(i < end)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                char0 = C.JSString_methods._codeUnitAt$1(lines, i);
                if (char0 !== 13) {
                  if (char0 !== 10) {
                    // goto for update
                    $async$goto = 3;
                    break;
                  }
                  if (char === 13) {
                    sliceStart = i + 1;
                    // goto for update
                    $async$goto = 3;
                    break;
                  }
                }
                $async$goto = 5;
                return C.JSString_methods.substring$2(lines, sliceStart, i);
              case 5:
                // after yield
                sliceStart = i + 1;
              case 3:
                // for update
                ++i, char = char0;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                $async$goto = sliceStart < end ? 6 : 7;
                break;
              case 6:
                // then
                $async$goto = 8;
                return C.JSString_methods.substring$2(lines, sliceStart, end);
              case 8:
                // after yield
              case 7:
                // join
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.String);
    },
    _Utf8Decoder_errorDescription: function(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _Utf8Decoder__makeUint8List: function(codeUnits, start, end) {
      var t1, i, b,
        $length = end - start,
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        bytes[i] = (b & 4294967040) >>> 0 !== 0 ? 255 : b;
      }
      return bytes;
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._data = null;
    },
    _JsonMap_values_closure: function _JsonMap_values_closure(t0) {
      this.$this = t0;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._parent = t0;
    },
    Utf8Decoder__decoder_closure: function Utf8Decoder__decoder_closure() {
    },
    Utf8Decoder__decoderNonfatal_closure: function Utf8Decoder__decoderNonfatal_closure() {
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = 0;
      this._buffer = t0;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    Function_apply: function($function, positionalArguments) {
      return H.Primitives_applyFunction($function, positionalArguments, null);
    },
    int_parse: function(source, radix) {
      var value = H.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw H.wrapException(P.FormatException$(source, null, null));
    },
    double_parse: function(source) {
      var value = H.Primitives_parseDouble(source);
      if (value != null)
        return value;
      throw H.wrapException(P.FormatException$("Invalid double", source, null));
    },
    Error__objectToString: function(object) {
      if (object instanceof H.Closure)
        return object.toString$0(0);
      return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
    },
    DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
      var t1;
      if (Math.abs(millisecondsSinceEpoch) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        H.throwExpression(P.ArgumentError$("DateTime is outside valid range: " + millisecondsSinceEpoch));
      H.checkNotNullable(isUtc, "isUtc", type$.bool);
      return new P.DateTime(millisecondsSinceEpoch, isUtc);
    },
    List_List$filled: function($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from: function(elements, growable, $E) {
      var t1,
        list = H.setRuntimeTypeInfo([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current(t1));
      if (growable)
        return list;
      return J.JSArray_markFixedList(list);
    },
    List_List$of: function(elements, growable, $E) {
      var t1;
      if (growable)
        return P.List_List$_of(elements, $E);
      t1 = J.JSArray_markFixedList(P.List_List$_of(elements, $E));
      return t1;
    },
    List_List$_of: function(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return H.setRuntimeTypeInfo(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = H.setRuntimeTypeInfo([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current(t1));
      return list;
    },
    List_List$unmodifiable: function(elements, $E) {
      return J.JSArray_markUnmodifiableList(P.List_List$from(elements, false, $E));
    },
    String_String$fromCharCodes: function(charCodes, start, end) {
      var array, len;
      if (Array.isArray(charCodes)) {
        array = charCodes;
        len = array.length;
        end = P.RangeError_checkValidRange(start, end, len);
        return H.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);
      }
      if (type$.NativeUint8List._is(charCodes))
        return H.Primitives_stringFromNativeUint8List(charCodes, start, P.RangeError_checkValidRange(start, end, charCodes.length));
      return P.String__stringFromIterable(charCodes, start, end);
    },
    String__stringFromIterable: function(charCodes, start, end) {
      var t1, it, i, list, _null = null;
      if (start < 0)
        throw H.wrapException(P.RangeError$range(start, 0, charCodes.length, _null, _null));
      t1 = end == null;
      if (!t1 && end < start)
        throw H.wrapException(P.RangeError$range(end, start, charCodes.length, _null, _null));
      it = J.get$iterator$ax(charCodes);
      for (i = 0; i < start; ++i)
        if (!it.moveNext$0())
          throw H.wrapException(P.RangeError$range(start, 0, i, _null, _null));
      list = [];
      if (t1)
        for (; it.moveNext$0();)
          list.push(it.get$current(it));
      else
        for (i = start; i < end; ++i) {
          if (!it.moveNext$0())
            throw H.wrapException(P.RangeError$range(end, start, i, _null, _null));
          list.push(it.get$current(it));
        }
      return H.Primitives_stringFromCharCodes(list);
    },
    RegExp_RegExp: function(source, caseSensitive) {
      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, false, caseSensitive, false, false, false));
    },
    StringBuffer__writeAll: function(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += H.S(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        string += H.S(iterator.get$current(iterator));
        for (; iterator.moveNext$0();)
          string = string + separator + H.S(iterator.get$current(iterator));
      }
      return string;
    },
    NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments) {
      return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments);
    },
    _Uri__uriEncode: function(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte,
        _s16_ = "0123456789ABCDEF";
      if (encoding === C.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding()._nativeRegExp;
        t1 = t1.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = encoding.get$encoder().convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128 && (canonicalTable[byte >>> 4] & 1 << (byte & 15)) !== 0)
          t2 += H.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    StackTrace_current: function() {
      var stackTrace, exception;
      if ($.$get$_hasErrorStackProperty())
        return H.getTraceFromException(new Error());
      try {
        throw H.wrapException("");
      } catch (exception) {
        H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        return stackTrace;
      }
    },
    DateTime$_withValue: function(_value, isUtc) {
      var t1;
      if (Math.abs(_value) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        H.throwExpression(P.ArgumentError$("DateTime is outside valid range: " + _value));
      H.checkNotNullable(isUtc, "isUtc", type$.bool);
      return new P.DateTime(_value, isUtc);
    },
    DateTime__fourDigits: function(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits: function(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$: function(microseconds, milliseconds) {
      return new P.Duration(1000 * milliseconds + microseconds);
    },
    Error_safeToString: function(object) {
      if (typeof object == "number" || H._isBool(object) || null == object)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    AssertionError$: function(message) {
      return new P.AssertionError(message);
    },
    ArgumentError$: function(message) {
      return new P.ArgumentError(false, null, null, message);
    },
    ArgumentError$value: function(value, $name, message) {
      return new P.ArgumentError(true, value, $name, message);
    },
    RangeError$: function(message) {
      var _null = null;
      return new P.RangeError(_null, _null, false, _null, _null, message);
    },
    RangeError$value: function(value, $name) {
      return new P.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
      return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval: function(value, minValue, maxValue, $name) {
      if (value < minValue || value > maxValue)
        throw H.wrapException(P.RangeError$range(value, minValue, maxValue, $name, null));
      return value;
    },
    RangeError_checkValidIndex: function(index, indexable, $name, $length) {
      if ($length == null)
        $length = indexable.get$length(indexable);
      if (0 > index || index >= $length)
        throw H.wrapException(P.IndexError$(index, indexable, $name == null ? "index" : $name, null, $length));
      return index;
    },
    RangeError_checkValidRange: function(start, end, $length) {
      if (0 > start || start > $length)
        throw H.wrapException(P.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw H.wrapException(P.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative: function(value, $name) {
      if (value < 0)
        throw H.wrapException(P.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$: function(invalidValue, indexable, $name, message, $length) {
      var t1 = $length == null ? J.get$length$asx(indexable) : $length;
      return new P.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$: function(message) {
      return new P.UnsupportedError(message);
    },
    UnimplementedError$: function(message) {
      return new P.UnimplementedError(message);
    },
    StateError$: function(message) {
      return new P.StateError(message);
    },
    ConcurrentModificationError$: function(modifiedObject) {
      return new P.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception: function(message) {
      return new P._Exception(message);
    },
    FormatException$: function(message, source, offset) {
      return new P.FormatException(message, source, offset);
    },
    Map_castFrom: function(source, $K, $V, K2, V2) {
      return new H.CastMap(source, $K._eval$1("@<0>")._bind$1($V)._bind$1(K2)._bind$1(V2)._eval$1("CastMap<1,2,3,4>"));
    },
    print: function(object) {
      H.printString(J.toString$0$(object));
    },
    Stopwatch$: function() {
      $.$get$Stopwatch__frequency();
      return new P.Stopwatch();
    },
    _combineSurrogatePair: function(start, end) {
      return 65536 + ((start & 1023) << 10) + (end & 1023);
    },
    Uri_parse: function(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, userInfoStart, userInfo, host, portNumber, port, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        delta = ((C.JSString_methods._codeUnitAt$1(uri, 4) ^ 58) * 3 | C.JSString_methods._codeUnitAt$1(uri, 0) ^ 100 | C.JSString_methods._codeUnitAt$1(uri, 1) ^ 97 | C.JSString_methods._codeUnitAt$1(uri, 2) ^ 116 | C.JSString_methods._codeUnitAt$1(uri, 3) ^ 97) >>> 0;
        if (delta === 0)
          return P.UriData__parse(end < end ? C.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return P.UriData__parse(C.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = P.List_List$filled(8, 0, false, type$.int);
      indices[0] = 0;
      indices[1] = -1;
      indices[2] = -1;
      indices[7] = -1;
      indices[3] = 0;
      indices[4] = 0;
      indices[5] = end;
      indices[6] = end;
      if (P._scan(uri, 0, end, 0, indices) >= 14)
        indices[7] = end;
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (P._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      if (isSimple)
        if (hostStart > schemeEnd + 3) {
          scheme = _null;
          isSimple = false;
        } else {
          t1 = portStart > 0;
          if (t1 && portStart + 1 === pathStart) {
            scheme = _null;
            isSimple = false;
          } else {
            if (!(queryStart < end && queryStart === pathStart + 2 && C.JSString_methods.startsWith$2(uri, "..", pathStart)))
              t2 = queryStart > pathStart + 2 && C.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
            else
              t2 = true;
            if (t2) {
              scheme = _null;
              isSimple = false;
            } else {
              if (schemeEnd === 4)
                if (C.JSString_methods.startsWith$2(uri, "file", 0)) {
                  if (hostStart <= 0) {
                    if (!C.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                      schemeAuth = "file:///";
                      delta = 3;
                    } else {
                      schemeAuth = "file://";
                      delta = 2;
                    }
                    uri = schemeAuth + C.JSString_methods.substring$2(uri, pathStart, end);
                    schemeEnd -= 0;
                    t1 = delta - 0;
                    queryStart += t1;
                    fragmentStart += t1;
                    end = uri.length;
                    hostStart = 7;
                    portStart = 7;
                    pathStart = 7;
                  } else if (pathStart === queryStart) {
                    ++fragmentStart;
                    queryStart0 = queryStart + 1;
                    uri = C.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                    ++end;
                    queryStart = queryStart0;
                  }
                  scheme = "file";
                } else if (C.JSString_methods.startsWith$2(uri, "http", 0)) {
                  if (t1 && portStart + 3 === pathStart && C.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                    fragmentStart -= 3;
                    pathStart0 = pathStart - 3;
                    queryStart -= 3;
                    uri = C.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "http";
                } else
                  scheme = _null;
              else if (schemeEnd === 5 && C.JSString_methods.startsWith$2(uri, "https", 0)) {
                if (t1 && portStart + 4 === pathStart && C.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                  fragmentStart -= 4;
                  pathStart0 = pathStart - 4;
                  queryStart -= 4;
                  uri = C.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                  end -= 3;
                  pathStart = pathStart0;
                }
                scheme = "https";
              } else
                scheme = _null;
              isSimple = true;
            }
          }
        }
      else
        scheme = _null;
      if (isSimple) {
        if (end < uri.length) {
          uri = C.JSString_methods.substring$2(uri, 0, end);
          schemeEnd -= 0;
          hostStart -= 0;
          portStart -= 0;
          pathStart -= 0;
          queryStart -= 0;
          fragmentStart -= 0;
        }
        return new P._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      }
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = P._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            P._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? P._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = P._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = H.Primitives_parseInt(C.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = P._Uri__makePort(portNumber == null ? H.throwExpression(P.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        } else
          port = _null;
      } else {
        port = _null;
        host = port;
        userInfo = "";
      }
      path = P._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? P._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return new P._Uri(scheme, userInfo, host, port, path, query, fragmentStart < end ? P._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent: function(encodedComponent) {
      return P._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, C.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address: function(host, start, end) {
      var i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new P.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = C.JSString_methods.codeUnitAt$1(host, i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = P.int_parse(C.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = P.int_parse(C.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address: function(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j,
        error = new P.Uri_parseIPv6Address_error(host),
        parseHex = new P.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$1("address is too short");
      parts = H.setRuntimeTypeInfo([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = C.JSString_methods.codeUnitAt$1(host, i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (C.JSString_methods.codeUnitAt$1(host, i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            parts.push(-1);
            wildcardSeen = true;
          } else
            parts.push(parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$1("too few parts");
      atEnd = partStart === end;
      t1 = C.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          parts.push(parseHex.call$2(partStart, end));
        else {
          last = P.Uri__parseIPv4Address(host, partStart, end);
          parts.push((last[0] << 8 | last[1]) >>> 0);
          parts.push((last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$1("an address with a wildcard must have less than 7 parts");
      } else if (parts.length !== 8)
        error.call$1("an address without a wildcard must contain exactly 8 parts");
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            bytes[index] = 0;
            bytes[index + 1] = 0;
            index += 2;
          }
        else {
          bytes[index] = C.JSInt_methods._shrOtherPositive$1(value, 8);
          bytes[index + 1] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri__defaultPort: function(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail: function(uri, index, message) {
      throw H.wrapException(P.FormatException$(message, uri, index));
    },
    _Uri__makePort: function(port, scheme) {
      if (port != null && port === P._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost: function(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      if (C.JSString_methods.codeUnitAt$1(host, start) === 91) {
        t1 = end - 1;
        if (C.JSString_methods.codeUnitAt$1(host, t1) !== 93)
          P._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t2 = start + 1;
        index = P._Uri__checkZoneID(host, t2, t1);
        if (index < t1) {
          zoneIDstart = index + 1;
          zoneID = P._Uri__normalizeZoneID(host, C.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t1, "%25");
        } else
          zoneID = "";
        P.Uri_parseIPv6Address(host, t2, index);
        return C.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i)
        if (C.JSString_methods.codeUnitAt$1(host, i) === 58) {
          index = C.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = P._Uri__normalizeZoneID(host, C.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          P.Uri_parseIPv6Address(host, start, index);
          return "[" + C.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      return P._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID: function(host, start, end) {
      var index = C.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID: function(host, start, end, prefix) {
      var index, sectionStart, isNormalized, char, replacement, t1, t2, tail, sourceLength, slice,
        buffer = prefix !== "" ? new P.StringBuffer(prefix) : null;
      for (index = start, sectionStart = index, isNormalized = true; index < end;) {
        char = C.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = P._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new P.StringBuffer("");
          t2 = buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);
          if (t1)
            replacement = C.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            P._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t2 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (C.List_nxB[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new P.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else {
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = C.JSString_methods.codeUnitAt$1(host, index + 1);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            } else
              sourceLength = 1;
          } else
            sourceLength = 1;
          slice = C.JSString_methods.substring$2(host, sectionStart, index);
          if (buffer == null) {
            buffer = new P.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t1._contents += P._Uri__escapeChar(char);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return C.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end)
        buffer._contents += C.JSString_methods.substring$2(host, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName: function(host, start, end) {
      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;
      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        char = C.JSString_methods.codeUnitAt$1(host, index);
        if (char === 37) {
          replacement = P._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new P.StringBuffer("");
          slice = C.JSString_methods.substring$2(host, sectionStart, index);
          t2 = buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          if (t1) {
            replacement = C.JSString_methods.substring$2(host, index, index + 3);
            sourceLength = 3;
          } else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          } else
            sourceLength = 3;
          buffer._contents = t2 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (C.List_qNA[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new P.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else if (char <= 93 && (C.List_2Vk[char >>> 4] & 1 << (char & 15)) !== 0)
          P._Uri__fail(host, index, "Invalid character");
        else {
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = C.JSString_methods.codeUnitAt$1(host, index + 1);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            } else
              sourceLength = 1;
          } else
            sourceLength = 1;
          slice = C.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          if (buffer == null) {
            buffer = new P.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t1._contents += P._Uri__escapeChar(char);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return C.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = C.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme: function(scheme, start, end) {
      var i, containsUpperCase, codeUnit;
      if (start === end)
        return "";
      if (!P._Uri__isAlphabeticCharacter(C.JSString_methods._codeUnitAt$1(scheme, start)))
        P._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        codeUnit = C.JSString_methods._codeUnitAt$1(scheme, i);
        if (!(codeUnit < 128 && (C.List_JYB[codeUnit >>> 4] & 1 << (codeUnit & 15)) !== 0))
          P._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = C.JSString_methods.substring$2(scheme, start, end);
      return P._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme: function(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo: function(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return P._Uri__normalizeOrSubstring(userInfo, start, end, C.List_gRj, false);
    },
    _Uri__makePath: function(path, start, end, pathSegments, scheme, hasAuthority) {
      var result,
        isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority;
      if (path == null)
        return isFile ? "/" : "";
      else
        result = P._Uri__normalizeOrSubstring(path, start, end, C.List_qg4, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !C.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return P._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath: function(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !C.JSString_methods.startsWith$1(path, "/"))
        return P._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return P._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery: function(query, start, end, queryParameters) {
      var result, t1 = {};
      if (query != null) {
        if (queryParameters != null)
          throw H.wrapException(P.ArgumentError$("Both query and queryParameters specified"));
        return P._Uri__normalizeOrSubstring(query, start, end, C.List_CVk, true);
      }
      if (queryParameters == null)
        return null;
      result = new P.StringBuffer("");
      t1.separator = "";
      queryParameters.forEach$1(0, new P._Uri__makeQuery_closure(new P._Uri__makeQuery_writeParameter(t1, result)));
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeFragment: function(fragment, start, end) {
      if (fragment == null)
        return null;
      return P._Uri__normalizeOrSubstring(fragment, start, end, C.List_CVk, true);
    },
    _Uri__normalizeEscape: function(source, index, lowerCase) {
      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2;
      if (t1 >= source.length)
        return "%";
      firstDigit = C.JSString_methods.codeUnitAt$1(source, index + 1);
      secondDigit = C.JSString_methods.codeUnitAt$1(source, t1);
      firstDigitValue = H.hexDigitValue(firstDigit);
      secondDigitValue = H.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127 && (C.List_nxB[C.JSInt_methods._shrOtherPositive$1(value, 4)] & 1 << (value & 15)) !== 0)
        return H.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return C.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar: function(char) {
      var codeUnits, flag, encodedBytes, index, byte,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        codeUnits[1] = C.JSString_methods._codeUnitAt$1(_s16_, char >>> 4);
        codeUnits[2] = C.JSString_methods._codeUnitAt$1(_s16_, char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        codeUnits = new Uint8Array(3 * encodedBytes);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = C.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          codeUnits[index] = 37;
          codeUnits[index + 1] = C.JSString_methods._codeUnitAt$1(_s16_, byte >>> 4);
          codeUnits[index + 2] = C.JSString_methods._codeUnitAt$1(_s16_, byte & 15);
          index += 3;
        }
      }
      return P.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring: function(component, start, end, charTable, escapeDelimiters) {
      var t1 = P._Uri__normalize(component, start, end, charTable, escapeDelimiters);
      return t1 == null ? C.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize: function(component, start, end, charTable, escapeDelimiters) {
      var t1, index, sectionStart, buffer, char, replacement, sourceLength, t2, tail, _null = null;
      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {
        char = C.JSString_methods.codeUnitAt$1(component, index);
        if (char < 127 && (charTable[char >>> 4] & 1 << (char & 15)) !== 0)
          ++index;
        else {
          if (char === 37) {
            replacement = P._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement) {
              replacement = "%25";
              sourceLength = 1;
            } else
              sourceLength = 3;
          } else if (t1 && char <= 93 && (C.List_2Vk[char >>> 4] & 1 << (char & 15)) !== 0) {
            P._Uri__fail(component, index, "Invalid character");
            sourceLength = _null;
            replacement = sourceLength;
          } else {
            if ((char & 64512) === 55296) {
              t2 = index + 1;
              if (t2 < end) {
                tail = C.JSString_methods.codeUnitAt$1(component, t2);
                if ((tail & 64512) === 56320) {
                  char = (char & 1023) << 10 | tail & 1023 | 65536;
                  sourceLength = 2;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
            } else
              sourceLength = 1;
            replacement = P._Uri__escapeChar(char);
          }
          if (buffer == null) {
            buffer = new P.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t2._contents += C.JSString_methods.substring$2(component, sectionStart, index);
          t2._contents += H.S(replacement);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end)
        buffer._contents += C.JSString_methods.substring$2(component, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments: function(path) {
      if (C.JSString_methods.startsWith$1(path, "."))
        return true;
      return C.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments: function(path) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!P._Uri__mayContainDotSegments(path))
        return path;
      output = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (J.$eq$(segment, "..")) {
          if (output.length !== 0) {
            output.pop();
            if (output.length === 0)
              output.push("");
          }
          appendSlash = true;
        } else if ("." === segment)
          appendSlash = true;
        else {
          output.push(segment);
          appendSlash = false;
        }
      }
      if (appendSlash)
        output.push("");
      return C.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath: function(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!P._Uri__mayContainDotSegments(path))
        return !allowScheme ? P._Uri__escapeScheme(path) : path;
      output = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment)
          if (output.length !== 0 && C.JSArray_methods.get$last(output) !== "..") {
            output.pop();
            appendSlash = true;
          } else {
            output.push("..");
            appendSlash = false;
          }
        else if ("." === segment)
          appendSlash = true;
        else {
          output.push(segment);
          appendSlash = false;
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        t1 = t1 === 1 && output[0].length === 0;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || C.JSArray_methods.get$last(output) === "..")
        output.push("");
      if (!allowScheme)
        output[0] = P._Uri__escapeScheme(output[0]);
      return C.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme: function(path) {
      var i, char,
        t1 = path.length;
      if (t1 >= 2 && P._Uri__isAlphabeticCharacter(C.JSString_methods._codeUnitAt$1(path, 0)))
        for (i = 1; i < t1; ++i) {
          char = C.JSString_methods._codeUnitAt$1(path, i);
          if (char === 58)
            return C.JSString_methods.substring$2(path, 0, i) + "%3A" + C.JSString_methods.substring$1(path, i + 1);
          if (char > 127 || (C.List_JYB[char >>> 4] & 1 << (char & 15)) === 0)
            break;
        }
      return path;
    },
    _Uri__hexCharPairToByte: function(s, pos) {
      var byte, i, charCode;
      for (byte = 0, i = 0; i < 2; ++i) {
        charCode = C.JSString_methods._codeUnitAt$1(s, pos + i);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw H.wrapException(P.ArgumentError$("Invalid URL encoding"));
        }
      }
      return byte;
    },
    _Uri__uriDecode: function(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t1, bytes,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        codeUnit = C.JSString_methods._codeUnitAt$1(text, i);
        if (codeUnit <= 127)
          if (codeUnit !== 37)
            t1 = false;
          else
            t1 = true;
        else
          t1 = true;
        if (t1) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple) {
        if (C.C_Utf8Codec !== encoding)
          t1 = false;
        else
          t1 = true;
        if (t1)
          return C.JSString_methods.substring$2(text, start, end);
        else
          bytes = new H.CodeUnits(C.JSString_methods.substring$2(text, start, end));
      } else {
        bytes = H.setRuntimeTypeInfo([], type$.JSArray_int);
        for (t1 = text.length, i = start; i < end; ++i) {
          codeUnit = C.JSString_methods._codeUnitAt$1(text, i);
          if (codeUnit > 127)
            throw H.wrapException(P.ArgumentError$("Illegal percent encoding in URI"));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw H.wrapException(P.ArgumentError$("Truncated URI"));
            bytes.push(P._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else
            bytes.push(codeUnit);
        }
      }
      return encoding.decode$1(0, bytes);
    },
    _Uri__isAlphabeticCharacter: function(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__parse: function(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = H.setRuntimeTypeInfo([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = C.JSString_methods._codeUnitAt$1(text, i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw H.wrapException(P.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw H.wrapException(P.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        indices.push(i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          char = C.JSString_methods._codeUnitAt$1(text, i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          indices.push(equalsIndex);
        else {
          lastSeparator = C.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !C.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw H.wrapException(P.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      indices.push(i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = C.C_Base64Codec.normalize$3(0, text, t2, t1);
      else {
        data = P._Uri__normalize(text, t2, t1, C.List_CVk, true);
        if (data != null)
          text = C.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new P.UriData(text, indices, sourceUri);
    },
    _createTables: function() {
      var _i, t1, t2, t3, b,
        _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "?", _s1_3 = "#",
        tables = H.setRuntimeTypeInfo(new Array(22), type$.JSArray_Uint8List);
      for (_i = 0; _i < 22; ++_i)
        tables[_i] = new Uint8Array(96);
      t1 = new P._createTables_build(tables);
      t2 = new P._createTables_setChars();
      t3 = new P._createTables_setRange();
      b = t1.call$2(0, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 14);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 3);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(14, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 15);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(15, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, "%", 225);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(1, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(2, 235);
      t2.call$3(b, _s77_, 139);
      t2.call$3(b, _s1_1, 131);
      t2.call$3(b, _s1_, 146);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(3, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 68);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(4, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "[", 232);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(5, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(6, 231);
      t3.call$3(b, "19", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(7, 231);
      t3.call$3(b, "09", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      t2.call$3(t1.call$2(8, 8), "]", 5);
      b = t1.call$2(9, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 16);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(16, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 17);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(17, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(10, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(18, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 19);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(19, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 234);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(11, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 172);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(12, 236);
      t2.call$3(b, _s77_, 12);
      t2.call$3(b, _s1_2, 12);
      t2.call$3(b, _s1_3, 205);
      b = t1.call$2(13, 237);
      t2.call$3(b, _s77_, 13);
      t2.call$3(b, _s1_2, 13);
      t3.call$3(t1.call$2(20, 245), "az", 21);
      b = t1.call$2(21, 245);
      t3.call$3(b, "az", 21);
      t3.call$3(b, "09", 21);
      t2.call$3(b, "+-.", 21);
      return tables;
    },
    _scan: function(uri, start, end, state, indices) {
      var i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (i = start; i < end; ++i) {
        table = tables[state];
        char = C.JSString_methods._codeUnitAt$1(uri, i) ^ 96;
        transition = table[char > 95 ? 31 : char];
        state = transition & 31;
        indices[transition >>> 5] = i;
      }
      return state;
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
      this._box_0 = t0;
      this.sb = t1;
    },
    Comparable: function Comparable() {
    },
    DateTime: function DateTime(t0, t1) {
      this._core$_value = t0;
      this.isUtc = t1;
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    Duration_toString_sixDigits: function Duration_toString_sixDigits() {
    },
    Duration_toString_twoDigits: function Duration_toString_twoDigits() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {
      var _ = this;
      _._core$_receiver = t0;
      _._memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Expando: function Expando(t0, t1) {
      this._jsWeakMapOrKey = t0;
      this.$ti = t1;
    },
    Iterable: function Iterable() {
    },
    Iterator: function Iterator() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    Stopwatch: function Stopwatch() {
      this._stop = this._core$_start = 0;
    },
    Runes: function Runes(t0) {
      this.string = t0;
    },
    RuneIterator: function RuneIterator(t0) {
      var _ = this;
      _.string = t0;
      _._nextPosition = _._core$_position = 0;
      _._currentCodePoint = -1;
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode = _.___Uri_pathSegments = _.___Uri__text = null;
    },
    _Uri__makeQuery_writeParameter: function _Uri__makeQuery_writeParameter(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _Uri__makeQuery_closure: function _Uri__makeQuery_closure(t0) {
      this.writeParameter = t0;
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode = _.___Uri_pathSegments = _.___Uri__text = null;
    },
    ServiceExtensionResponse$result: function(result) {
      return new P.ServiceExtensionResponse();
    },
    ServiceExtensionResponse__validateErrorCode: function(errorCode) {
      if (errorCode === -32602)
        return;
      if (errorCode >= -32016 && errorCode <= -32000)
        return;
      throw H.wrapException(P.ArgumentError$value(errorCode, "errorCode", "Out of range"));
    },
    registerExtension: function(method, handler) {
      if (!C.JSString_methods.startsWith$1(method, "ext."))
        throw H.wrapException(P.ArgumentError$value(method, "method", "Must begin with ext."));
      if ($._extensions.$index(0, method) != null)
        throw H.wrapException(P.ArgumentError$("Extension already registered: " + method));
      $._extensions.$indexSet(0, method, handler);
    },
    postEvent: function(eventKind, eventData) {
      C.C_JsonCodec.encode$1(eventData);
    },
    Timeline_startSync: function($name, $arguments, flow) {
      $.Timeline__stack.push(null);
      return;
    },
    Timeline_finishSync: function() {
      var block, t1;
      if ($.Timeline__stack.length === 0)
        throw H.wrapException(P.StateError$("Uneven calls to startSync and finishSync"));
      block = $.Timeline__stack.pop();
      if (block == null)
        return;
      P._argumentsAsJson(block._developer$_arguments);
      t1 = block._flow;
      if (t1 != null) {
        H.S(t1.id);
        block._flow.toString;
        P._argumentsAsJson(null);
      }
    },
    Timeline_instantSync: function($name, $arguments) {
      return;
    },
    Timeline_timeSync: function($name, $function, flow) {
      var t1;
      P.Timeline_startSync($name, null, flow);
      try {
        t1 = $function.call$0();
        return t1;
      } finally {
        P.Timeline_finishSync();
      }
    },
    _argumentsAsJson: function($arguments) {
      if ($arguments == null || $arguments.get$length($arguments) === 0)
        return "{}";
      return C.C_JsonCodec.encode$1($arguments);
    },
    ServiceExtensionResponse: function ServiceExtensionResponse() {
    },
    convertNativeToDart_Dictionary: function(object) {
      var dict, keys, t1, _i, key;
      if (object == null)
        return null;
      dict = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
        key = keys[_i];
        dict.$indexSet(0, key, object[key]);
      }
      return dict;
    },
    _convertDartToNative_Value: function(value) {
      var array;
      if (value == null)
        return value;
      if (typeof value == "string" || typeof value == "number" || H._isBool(value))
        return value;
      if (type$.Map_dynamic_dynamic._is(value))
        return P.convertDartToNative_Dictionary(value);
      if (type$.List_dynamic._is(value)) {
        array = [];
        J.forEach$1$ax(value, new P._convertDartToNative_Value_closure(array));
        value = array;
      }
      return value;
    },
    convertDartToNative_Dictionary: function(dict) {
      var object = {};
      J.forEach$1$ax(dict, new P.convertDartToNative_Dictionary_closure(object));
      return object;
    },
    Device_userAgent: function() {
      return window.navigator.userAgent;
    },
    _StructuredClone: function _StructuredClone() {
    },
    _StructuredClone_walk_closure: function _StructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _StructuredClone_walk_closure0: function _StructuredClone_walk_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    _AcceptStructuredClone_walk_closure: function _AcceptStructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _convertDartToNative_Value_closure: function _convertDartToNative_Value_closure(t0) {
      this.array = t0;
    },
    convertDartToNative_Dictionary_closure: function convertDartToNative_Dictionary_closure(t0) {
      this.object = t0;
    },
    _StructuredCloneDart2Js: function _StructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
      this.mustCopy = false;
    },
    FilteredElementList: function FilteredElementList(t0, t1) {
      this._html_common$_node = t0;
      this._childNodes = t1;
    },
    FilteredElementList__iterable_closure: function FilteredElementList__iterable_closure() {
    },
    FilteredElementList__iterable_closure0: function FilteredElementList__iterable_closure0() {
    },
    FilteredElementList_removeRange_closure: function FilteredElementList_removeRange_closure() {
    },
    Database: function Database() {
    },
    Index: function Index() {
    },
    KeyRange: function KeyRange() {
    },
    ObjectStore: function ObjectStore() {
    },
    VersionChangeEvent: function VersionChangeEvent() {
    },
    _callDartFunction: function(callback, captureThis, $self, $arguments) {
      var arguments0, t1;
      if (captureThis) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      t1 = type$.dynamic;
      return P._convertToJS(P.Function_apply(callback, P.List_List$from(J.map$1$1$ax($arguments, P.js___convertToDart$closure(), t1), true, t1)));
    },
    JsObject_JsObject: function($constructor) {
      var t1 = P._wrapToDart(new (P._convertToJS($constructor))());
      return t1;
    },
    JsObject_JsObject$jsify: function(object) {
      return P._wrapToDart(P.JsObject__convertDataTree(object));
    },
    JsObject__convertDataTree: function(data) {
      return new P.JsObject__convertDataTree__convert(new P._IdentityHashMap(type$._IdentityHashMap_dynamic_dynamic)).call$1(data);
    },
    JsArray__checkRange: function(start, end, $length) {
      var _null = null;
      if (start > $length)
        throw H.wrapException(P.RangeError$range(start, 0, $length, _null, _null));
      if (end < start || end > $length)
        throw H.wrapException(P.RangeError$range(end, start, $length, _null, _null));
    },
    _castToJsObject: function(o) {
      return o;
    },
    _defineProperty: function(o, $name, value) {
      var exception;
      try {
        if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name)) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
      return false;
    },
    _getOwnProperty: function(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return null;
    },
    _convertToJS: function(o) {
      if (o == null || typeof o == "string" || typeof o == "number" || H._isBool(o))
        return o;
      if (o instanceof P.JsObject)
        return o._js$_jsObject;
      if (H.isBrowserObject(o))
        return o;
      if (type$.TypedData._is(o))
        return o;
      if (o instanceof P.DateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (type$.Function._is(o))
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.$get$_dartProxyCtor()));
    },
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: function(o) {
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else if (o instanceof Object && H.isBrowserObject(o))
        return o;
      else if (o instanceof Object && type$.TypedData._is(o))
        return o;
      else if (o instanceof Date)
        return P.DateTime$fromMillisecondsSinceEpoch(o.getTime(), false);
      else if (o.constructor === $.$get$_dartProxyCtor())
        return o.o;
      else
        return P._wrapToDart(o);
    },
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    _convertDartFunctionFast: function(f) {
      var ret,
        existing = f.$dart_jsFunction;
      if (existing != null)
        return existing;
      ret = function(_call, f) {
        return function() {
          return _call(f, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunctionFast, f);
      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      f.$dart_jsFunction = ret;
      return ret;
    },
    _callDartFunctionFast: function(callback, $arguments) {
      return P.Function_apply(callback, $arguments);
    },
    allowInterop: function(f) {
      if (typeof f == "function")
        return f;
      else
        return P._convertDartFunctionFast(f);
    },
    JsObject__convertDataTree__convert: function JsObject__convertDataTree__convert(t0) {
      this._convertedObjects = t0;
    },
    _convertToJS_closure: function _convertToJS_closure() {
    },
    _convertToJS_closure0: function _convertToJS_closure0(t0) {
      this.ctor = t0;
    },
    _wrapToDart_closure: function _wrapToDart_closure() {
    },
    _wrapToDart_closure0: function _wrapToDart_closure0() {
    },
    _wrapToDart_closure1: function _wrapToDart_closure1() {
    },
    JsObject: function JsObject(t0) {
      this._js$_jsObject = t0;
    },
    JsFunction: function JsFunction(t0) {
      this._js$_jsObject = t0;
    },
    JsArray: function JsArray(t0, t1) {
      this._js$_jsObject = t0;
      this.$ti = t1;
    },
    _JsArray_JsObject_ListMixin: function _JsArray_JsObject_ListMixin() {
    },
    hasProperty: function(o, $name) {
      return $name in o;
    },
    callMethod: function(o, method, args) {
      return o[method].apply(o, args);
    },
    promiseToFuture: function(jsPromise, $T) {
      var t1 = new P._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new P._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(H.convertDartClosureToJS(new P.promiseToFuture_closure(completer), 1), H.convertDartClosureToJS(new P.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0) {
      this.completer = t0;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    Point: function Point(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.$ti = t2;
    },
    Length: function Length() {
    },
    LengthList: function LengthList() {
    },
    Number: function Number() {
    },
    NumberList: function NumberList() {
    },
    PointList: function PointList() {
    },
    Rect0: function Rect0() {
    },
    ScriptElement0: function ScriptElement0() {
    },
    StringList: function StringList() {
    },
    SvgElement: function SvgElement() {
    },
    Transform: function Transform() {
    },
    TransformList: function TransformList() {
    },
    _LengthList_Interceptor_ListMixin: function _LengthList_Interceptor_ListMixin() {
    },
    _LengthList_Interceptor_ListMixin_ImmutableListMixin: function _LengthList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NumberList_Interceptor_ListMixin: function _NumberList_Interceptor_ListMixin() {
    },
    _NumberList_Interceptor_ListMixin_ImmutableListMixin: function _NumberList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _StringList_Interceptor_ListMixin: function _StringList_Interceptor_ListMixin() {
    },
    _StringList_Interceptor_ListMixin_ImmutableListMixin: function _StringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TransformList_Interceptor_ListMixin: function _TransformList_Interceptor_ListMixin() {
    },
    _TransformList_Interceptor_ListMixin_ImmutableListMixin: function _TransformList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    Endian: function Endian() {
    },
    PictureRecorder_PictureRecorder: function() {
      var t1 = H._detectRenderer();
      if (t1)
        return new H.CkPictureRecorder();
      else
        return new H.EnginePictureRecorder();
    },
    Canvas_Canvas: function(recorder, cullRect) {
      var _s62_ = '"recorder" must not already be associated with another Canvas.',
        t1 = H._detectRenderer();
      if (t1) {
        if (recorder.get$isRecording())
          H.throwExpression(P.ArgumentError$(_s62_));
        if (cullRect == null)
          cullRect = C.Rect_aha;
        return new H.CanvasKitCanvas(type$.CkPictureRecorder._as(recorder).beginRecording$1(0, cullRect));
      } else {
        type$.EnginePictureRecorder._as(recorder);
        if (recorder._isRecording)
          H.throwExpression(P.ArgumentError$(_s62_));
        return new H.SurfaceCanvas(recorder.beginRecording$1(0, cullRect == null ? C.Rect_aha : cullRect));
      }
    },
    SceneBuilder_SceneBuilder: function() {
      var t2, t3,
        t1 = H._detectRenderer();
      if (t1) {
        t1 = new H.RootLayer(H.setRuntimeTypeInfo([], type$.JSArray_Layer), C.Rect_0_0_0_0);
        t2 = new H.LayerSceneBuilder(t1);
        t2.__LayerSceneBuilder_currentLayer = t1;
        return t2;
      } else {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedContainerSurface);
        t2 = $.SurfaceSceneBuilder__lastFrameScene;
        t3 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
        t2 = new H.FrameReference(t2 != null && t2.__engine$_state === C.PersistedSurfaceState_1 ? t2 : null);
        $._frameReferences.push(t2);
        t2 = new H.PersistedScene(t3, t2, C.PersistedSurfaceState_0);
        t2.__engine$_transform = H.Matrix4$identity();
        t1.push(t2);
        return new H.SurfaceSceneBuilder(t1);
      }
    },
    Offset_lerp: function(a, b, t) {
      if (b == null)
        if (a == null)
          return null;
        else
          return a.$mul(0, 1 - t);
      else if (a == null)
        return b.$mul(0, t);
      else
        return new P.Offset(P._lerpDouble(a._dx, b._dx, t), P._lerpDouble(a._dy, b._dy, t));
    },
    Size_lerp: function(a, b, t) {
      if (b == null)
        if (a == null)
          return null;
        else
          return a.$mul(0, 1 - t);
      else if (a == null)
        return b.$mul(0, t);
      else
        return new P.Size(P._lerpDouble(a._dx, b._dx, t), P._lerpDouble(a._dy, b._dy, t));
    },
    Rect$fromCircle: function(center, radius) {
      var t1 = center._dx,
        t2 = radius * 2 / 2,
        t3 = center._dy;
      return new P.Rect(t1 - t2, t3 - t2, t1 + t2, t3 + t2);
    },
    Rect$fromPoints: function(a, b) {
      var t1 = a._dx,
        t2 = b._dx,
        t3 = a._dy,
        t4 = b._dy;
      return new P.Rect(Math.min(t1, t2), Math.min(t3, t4), Math.max(t1, t2), Math.max(t3, t4));
    },
    Rect_lerp: function(a, b, t) {
      var k, t1, t2, t3, t4;
      if (b == null)
        if (a == null)
          return null;
        else {
          k = 1 - t;
          return new P.Rect(a.left * k, a.top * k, a.right * k, a.bottom * k);
        }
      else {
        t1 = b.left;
        t2 = b.top;
        t3 = b.right;
        t4 = b.bottom;
        if (a == null)
          return new P.Rect(t1 * t, t2 * t, t3 * t, t4 * t);
        else
          return new P.Rect(P._lerpDouble(a.left, t1, t), P._lerpDouble(a.top, t2, t), P._lerpDouble(a.right, t3, t), P._lerpDouble(a.bottom, t4, t));
      }
    },
    Radius_lerp: function(a, b, t) {
      var k, t1, t2;
      if (b == null)
        if (a == null)
          return null;
        else {
          k = 1 - t;
          return new P.Radius(a.x * k, a.y * k);
        }
      else {
        t1 = b.x;
        t2 = b.y;
        if (a == null)
          return new P.Radius(t1 * t, t2 * t);
        else
          return new P.Radius(P._lerpDouble(a.x, t1, t), P._lerpDouble(a.y, t2, t));
      }
    },
    RRect$fromRectAndCorners: function(rect, bottomLeft, bottomRight, topLeft, topRight) {
      var t1 = bottomLeft.x,
        t2 = bottomLeft.y,
        t3 = bottomRight.x,
        t4 = bottomRight.y,
        t5 = topLeft.x,
        t6 = topLeft.y,
        t7 = topRight.x,
        t8 = topRight.y,
        t9 = t5 === t6 && t5 === t7 && t5 === t8 && t5 === t1 && t5 === t2 && t5 === t3 && t5 === t4;
      return new P.RRect(rect.left, rect.top, rect.right, rect.bottom, t5, t6, t7, t8, t3, t4, t1, t2, t9);
    },
    _Jenkins_combine: function(hash, o) {
      hash = hash + J.get$hashCode$(o) & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    _Jenkins_finish: function(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    hashValues: function(arg01, arg02, arg03, arg04, arg05, arg06, arg07, arg08, arg09, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20) {
      var result = P._Jenkins_combine(P._Jenkins_combine(0, arg01), arg02);
      if (!J.$eq$(arg03, C.C__HashEnd)) {
        result = P._Jenkins_combine(result, arg03);
        if (!J.$eq$(arg04, C.C__HashEnd)) {
          result = P._Jenkins_combine(result, arg04);
          if (!J.$eq$(arg05, C.C__HashEnd)) {
            result = P._Jenkins_combine(result, arg05);
            if (!J.$eq$(arg06, C.C__HashEnd)) {
              result = P._Jenkins_combine(result, arg06);
              if (!J.$eq$(arg07, C.C__HashEnd)) {
                result = P._Jenkins_combine(result, arg07);
                if (!J.$eq$(arg08, C.C__HashEnd)) {
                  result = P._Jenkins_combine(result, arg08);
                  if (!J.$eq$(arg09, C.C__HashEnd)) {
                    result = P._Jenkins_combine(result, arg09);
                    if (!J.$eq$(arg10, C.C__HashEnd)) {
                      result = P._Jenkins_combine(result, arg10);
                      if (!J.$eq$(arg11, C.C__HashEnd)) {
                        result = P._Jenkins_combine(result, arg11);
                        if (!J.$eq$(arg12, C.C__HashEnd)) {
                          result = P._Jenkins_combine(result, arg12);
                          if (!J.$eq$(arg13, C.C__HashEnd)) {
                            result = P._Jenkins_combine(result, arg13);
                            if (!J.$eq$(arg14, C.C__HashEnd)) {
                              result = P._Jenkins_combine(result, arg14);
                              if (!J.$eq$(arg15, C.C__HashEnd)) {
                                result = P._Jenkins_combine(result, arg15);
                                if (!J.$eq$(arg16, C.C__HashEnd)) {
                                  result = P._Jenkins_combine(result, arg16);
                                  if (!J.$eq$(arg17, C.C__HashEnd)) {
                                    result = P._Jenkins_combine(result, arg17);
                                    if (arg18 !== C.C__HashEnd) {
                                      result = P._Jenkins_combine(result, arg18);
                                      if (arg19 !== C.C__HashEnd) {
                                        result = P._Jenkins_combine(result, arg19);
                                        if (!J.$eq$(arg20, C.C__HashEnd))
                                          result = P._Jenkins_combine(result, arg20);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      return P._Jenkins_finish(result);
    },
    hashList: function($arguments) {
      var t1, result, _i;
      if ($arguments != null)
        for (t1 = $arguments.length, result = 0, _i = 0; _i < $arguments.length; $arguments.length === t1 || (0, H.throwConcurrentModificationError)($arguments), ++_i)
          result = P._Jenkins_combine(result, $arguments[_i]);
      else
        result = 0;
      return P._Jenkins_finish(result);
    },
    webOnlyInitializePlatform: function() {
      var initializationFuture = P._initializePlatform(null);
      P.scheduleMicrotask(new P.webOnlyInitializePlatform_closure());
      return initializationFuture;
    },
    _initializePlatform: function(assetManager) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        t1;
      var $async$_initializePlatform = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              H.initializeEngine();
              t1 = H._detectRenderer();
              $async$goto = t1 ? 2 : 3;
              break;
            case 2:
              // then
              $async$goto = 4;
              return P._asyncAwait(H.initializeCanvasKit(), $async$_initializePlatform);
            case 4:
              // returning from await.
            case 3:
              // join
              $async$goto = 5;
              return P._asyncAwait(P.webOnlySetAssetManager(C.C_AssetManager), $async$_initializePlatform);
            case 5:
              // returning from await.
              t1 = H._detectRenderer();
              $async$goto = t1 ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return P._asyncAwait($._skiaFontCollection.ensureFontsLoaded$0(), $async$_initializePlatform);
            case 9:
              // returning from await.
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$goto = 10;
              return P._asyncAwait($._fontCollection.ensureFontsLoaded$0(), $async$_initializePlatform);
            case 10:
              // returning from await.
            case 7:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$_initializePlatform, $async$completer);
    },
    webOnlySetAssetManager: function(assetManager) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1, t2;
      var $async$webOnlySetAssetManager = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (assetManager === $._assetManager) {
                // goto return
                $async$goto = 1;
                break;
              }
              $._assetManager = assetManager;
              t1 = H._detectRenderer();
              if (t1) {
                if ($._skiaFontCollection == null)
                  $._skiaFontCollection = new H.SkiaFontCollection(H.setRuntimeTypeInfo([], type$.JSArray_Future_nullable__RegisteredFont), H.setRuntimeTypeInfo([], type$.JSArray__RegisteredFont), P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_SkTypeface));
              } else {
                t1 = $._fontCollection;
                if (t1 == null)
                  t1 = $._fontCollection = new H.FontCollection();
                t1._testFontManager = t1._assetFontManager = null;
                if ($.$get$supportsFontsClearApi())
                  document.fonts.clear();
              }
              $async$goto = $._assetManager != null ? 3 : 4;
              break;
            case 3:
              // then
              t1 = H._detectRenderer();
              t2 = $._assetManager;
              $async$goto = t1 ? 5 : 7;
              break;
            case 5:
              // then
              t1 = $._skiaFontCollection;
              t1.toString;
              t2.toString;
              $async$goto = 8;
              return P._asyncAwait(t1.registerFonts$1(t2), $async$webOnlySetAssetManager);
            case 8:
              // returning from await.
              // goto join
              $async$goto = 6;
              break;
            case 7:
              // else
              t1 = $._fontCollection;
              t1.toString;
              t2.toString;
              $async$goto = 9;
              return P._asyncAwait(t1.registerFonts$1(t2), $async$webOnlySetAssetManager);
            case 9:
              // returning from await.
            case 6:
              // join
            case 4:
              // join
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$webOnlySetAssetManager, $async$completer);
    },
    KeyData__typeToString: function(type) {
      switch (type) {
        case C.KeyEventType_1:
          return "up";
        case C.KeyEventType_0:
          return "down";
        case C.KeyEventType_2:
          return "repeat";
      }
    },
    lerpDouble: function(a, b, t) {
      var t1;
      if (a != b)
        if ((a == null ? null : isNaN(a)) === true)
          t1 = (b == null ? null : isNaN(b)) === true;
        else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return a == null ? null : a;
      if (a == null)
        a = 0;
      if (b == null)
        b = 0;
      return a * (1 - t) + b * t;
    },
    _lerpDouble: function(a, b, t) {
      return a * (1 - t) + b * t;
    },
    _lerpInt: function(a, b, t) {
      return a * (1 - t) + b * t;
    },
    _scaleAlpha: function(a, factor) {
      return P.Color$fromARGB(H.clampInt(C.JSNumber_methods.round$0((a.get$value(a) >>> 24 & 255) * factor), 0, 255), a.get$value(a) >>> 16 & 255, a.get$value(a) >>> 8 & 255, a.get$value(a) & 255);
    },
    Color$fromARGB: function(a, r, g, b) {
      return new P.Color(((a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255) >>> 0);
    },
    Color__linearizeColorComponent: function(component) {
      if (component <= 0.03928)
        return component / 12.92;
      return Math.pow((component + 0.055) / 1.055, 2.4);
    },
    Color_lerp: function(a, b, t) {
      if (b == null)
        if (a == null)
          return null;
        else
          return P._scaleAlpha(a, 1 - t);
      else if (a == null)
        return P._scaleAlpha(b, t);
      else
        return P.Color$fromARGB(H.clampInt(C.JSNumber_methods.toInt$0(P._lerpInt(a.get$value(a) >>> 24 & 255, b.get$value(b) >>> 24 & 255, t)), 0, 255), H.clampInt(C.JSNumber_methods.toInt$0(P._lerpInt(a.get$value(a) >>> 16 & 255, b.get$value(b) >>> 16 & 255, t)), 0, 255), H.clampInt(C.JSNumber_methods.toInt$0(P._lerpInt(a.get$value(a) >>> 8 & 255, b.get$value(b) >>> 8 & 255, t)), 0, 255), H.clampInt(C.JSNumber_methods.toInt$0(P._lerpInt(a.get$value(a) & 255, b.get$value(b) & 255, t)), 0, 255));
    },
    Gradient_Gradient$linear: function(from, to, colors, colorStops, tileMode) {
      var t1 = H._detectRenderer();
      if (t1) {
        t1 = new H.CkGradientLinear(from, to, colors, colorStops, tileMode);
        t1.ManagedSkiaObject$1(null, type$.SkShader);
      } else
        t1 = new H.GradientLinear(from, to, colors, colorStops, tileMode, null);
      return t1;
    },
    Path_Path: function() {
      var t1 = H._detectRenderer();
      if (t1) {
        t1 = new H.CkPath(C.PathFillType_0);
        t1.ManagedSkiaObject$1(null, type$.SkPath);
        return t1;
      } else
        return H.SurfacePath$();
    },
    PlatformConfiguration$: function(accessibilityFeatures, alwaysUse24HourFormat, defaultRouteName, locales, platformBrightness, semanticsEnabled, textScaleFactor) {
      return new P.PlatformConfiguration(accessibilityFeatures, false, semanticsEnabled, platformBrightness, textScaleFactor, locales, defaultRouteName);
    },
    ViewConfiguration$: function() {
      return new P.ViewConfiguration();
    },
    PointerData$: function(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalDeltaX, physicalDeltaY, physicalX, physicalY, platformData, pointerIdentifier, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, signalKind, size, synthesized, tilt, timeStamp) {
      return new P.PointerData(timeStamp, change, kind, signalKind, device, pointerIdentifier, physicalX, physicalY, physicalDeltaX, physicalDeltaY, buttons, false, synthesized, pressure, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, platformData, scrollDeltaX, scrollDeltaY);
    },
    FontWeight_lerp: function(a, b, t) {
      var t2,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      t1 = t1 ? null : a.index;
      if (t1 == null)
        t1 = 3;
      t2 = b == null ? null : b.index;
      t1 = P.lerpDouble(t1, t2 == null ? 3 : t2, t);
      t1.toString;
      return C.List_27p[H.clampInt(C.JSNumber_methods.round$0(t1), 0, 8)];
    },
    TextStyle_TextStyle: function(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1 = H._detectRenderer();
      if (t1) {
        t1 = type$.nullable_CkPaint;
        return H.CkTextStyle_CkTextStyle(t1._as(background), color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, t1._as(foreground), height, letterSpacing, locale, shadows, textBaseline, wordSpacing);
      } else
        return H.EngineTextStyle$only(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, letterSpacing, locale, shadows, textBaseline, wordSpacing);
    },
    ParagraphStyle_ParagraphStyle: function(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      var properties, skStrutStyle, skTextStyle, t2, _null = null,
        t1 = H._detectRenderer();
      if (t1) {
        properties = H.SkParagraphStyleProperties$(_null);
        if (textAlign != null)
          properties.textAlign = $.$get$_skTextAligns()[textAlign.index];
        t1 = textDirection == null;
        if (!t1)
          properties.textDirection = $.$get$_skTextDirections()[textDirection.index];
        if (maxLines != null)
          properties.maxLines = maxLines;
        if (height != null)
          properties.heightMultiplier = height;
        if (textHeightBehavior != null)
          properties.textHeightBehavior = textHeightBehavior.encode$0();
        if (ellipsis != null)
          properties.ellipsis = ellipsis;
        if (strutStyle != null) {
          skStrutStyle = H.SkStrutStyleProperties$(_null);
          skStrutStyle.fontFamilies = H._getEffectiveFontFamilies(strutStyle._fontFamily, strutStyle._fontFamilyFallback);
          skStrutStyle.heightMultiplier = strutStyle.__engine$_height;
          skStrutStyle.leading = strutStyle._leading;
          skStrutStyle.fontStyle = H.toSkFontStyle(strutStyle._fontWeight, strutStyle._fontStyle);
          skStrutStyle.forceStrutHeight = strutStyle._forceStrutHeight;
          skStrutStyle.strutEnabled = true;
          properties.strutStyle = skStrutStyle;
        }
        skTextStyle = H.SkTextStyleProperties$(_null);
        if (fontWeight != null || false)
          skTextStyle.fontStyle = H.toSkFontStyle(fontWeight, fontStyle);
        if (fontSize != null)
          skTextStyle.fontSize = fontSize;
        skTextStyle.fontFamilies = H._getEffectiveFontFamilies(fontFamily, _null);
        properties.textStyle = skTextStyle;
        t2 = $.__canvasKit;
        t2 = J.ParagraphStyle$1$x(t2 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t2, properties);
        return new H.CkParagraphStyle(t2, t1 ? C.TextDirection_1 : textDirection, fontFamily, fontSize, fontWeight, fontStyle);
      } else
        return new H.EngineParagraphStyle(textAlign, textDirection, fontWeight, fontStyle, maxLines, fontFamily, fontSize, height, textHeightBehavior, strutStyle, ellipsis, locale);
    },
    ParagraphBuilder_ParagraphBuilder: function(style) {
      var t2, t3, strutFontFamilies, cssStyle, t4,
        t1 = H._detectRenderer();
      if (t1)
        return H.CkParagraphBuilder$(style);
      else {
        t1 = type$.EngineParagraphStyle;
        t2 = type$.JSArray_double;
        if ($.WebExperiments_instance._useCanvasRichText) {
          t1._as(style);
          return new H.CanvasParagraphBuilder(new P.StringBuffer(""), style, H.setRuntimeTypeInfo([], type$.JSArray_ParagraphSpan), H.setRuntimeTypeInfo([], type$.JSArray_StyleNode), new H.RootStyleNode(style), H.setRuntimeTypeInfo([], t2));
        } else {
          t1._as(style);
          t1 = type$.HtmlElement._as($.$get$domRenderer().createElement$1(0, "p"));
          t2 = H.setRuntimeTypeInfo([], t2);
          t3 = style._strutStyle;
          if (t3 != null) {
            strutFontFamilies = H.setRuntimeTypeInfo([], type$.JSArray_nullable_String);
            strutFontFamilies.push(t3._fontFamily);
            C.JSArray_methods.addAll$1(strutFontFamilies, t3._fontFamilyFallback);
          }
          cssStyle = t1.style;
          t3 = style._textAlign;
          if (t3 != null) {
            t4 = style._textDirection;
            t3 = H.textAlignToCssValue(t3, t4 == null ? C.TextDirection_1 : t4);
            cssStyle.textAlign = t3 == null ? "" : t3;
          }
          if (style.get$_lineHeight(style) != null) {
            t3 = H.S(style.get$_lineHeight(style));
            cssStyle.lineHeight = t3;
          }
          t3 = style._textDirection;
          if (t3 != null) {
            t3 = H._textDirectionToCss(t3);
            cssStyle.direction = t3 == null ? "" : t3;
          }
          t3 = style._fontSize;
          if (t3 != null) {
            t3 = "" + C.JSNumber_methods.floor$0(t3) + "px";
            cssStyle.fontSize = t3;
          }
          t3 = style._fontWeight;
          if (t3 != null) {
            t3 = H.fontWeightToCss(t3);
            cssStyle.fontWeight = t3 == null ? "" : t3;
          }
          t3 = H.canonicalizeFontFamily(style.get$_effectiveFontFamily());
          cssStyle.fontFamily = t3 == null ? "" : t3;
          return new H.DomParagraphBuilder(t1, style, [], t2);
        }
      }
    },
    PluginUtilities_getCallbackHandle: function(callback) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    PluginUtilities_getCallbackFromHandle: function(handle) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    handlePlatformViewCall: function(data, callback) {
      var id, t1,
        decoded = C.C_StandardMethodCodec.decodeMethodCall$1(data);
      switch (decoded.method) {
        case "create":
          P._createPlatformView(decoded, callback);
          return;
        case "dispose":
          id = decoded.$arguments;
          t1 = $.$get$platformViewRegistry()._createdViews;
          t1.$index(0, id);
          t1.remove$1(0, id);
          callback.call$1(C.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
          return;
      }
      callback.call$1(null);
    },
    _createPlatformView: function(methodCall, callback) {
      var viewType,
        args = methodCall.$arguments,
        t1 = J.getInterceptor$asx(args);
      t1.$index(args, "id");
      viewType = t1.$index(args, "viewType");
      $.$get$platformViewRegistry().registeredFactories.$index(0, viewType);
      callback.call$1(C.C_StandardMethodCodec.encodeErrorEnvelope$2$code$message("Unregistered factory", "No factory registered for viewtype '" + viewType + "'"));
      return;
    },
    ClipOp: function ClipOp(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    PathFillType: function PathFillType(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    _StoredMessage: function _StoredMessage(t0, t1, t2) {
      this.data = t0;
      this._callback = t1;
      this._ui$_zone = t2;
    },
    _Channel: function _Channel(t0, t1) {
      this._ui$_queue = t0;
      this.debugEnableDiscardWarnings = true;
      this._capacity = t1;
    },
    ChannelBuffers: function ChannelBuffers(t0) {
      this._channels = t0;
    },
    ChannelBuffers_push_closure: function ChannelBuffers_push_closure() {
    },
    OffsetBase: function OffsetBase() {
    },
    Offset: function Offset(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Size: function Size(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Rect: function Rect(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    Radius: function Radius(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    RRect: function RRect(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.tlRadiusX = t4;
      _.tlRadiusY = t5;
      _.trRadiusX = t6;
      _.trRadiusY = t7;
      _.brRadiusX = t8;
      _.brRadiusY = t9;
      _.blRadiusX = t10;
      _.blRadiusY = t11;
      _.webOnlyUniformRadii = t12;
    },
    _HashEnd: function _HashEnd() {
    },
    webOnlyInitializePlatform_closure: function webOnlyInitializePlatform_closure() {
    },
    KeyEventType: function KeyEventType(t0) {
      this._ui$_name = t0;
    },
    KeyData: function KeyData(t0, t1, t2, t3) {
      var _ = this;
      _.type = t0;
      _.physical = t1;
      _.logical = t2;
      _.character = t3;
    },
    Color: function Color(t0) {
      this.value = t0;
    },
    StrokeCap: function StrokeCap(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    StrokeJoin: function StrokeJoin(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    PaintingStyle: function PaintingStyle(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    BlendMode: function BlendMode(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    Clip: function Clip(t0) {
      this._ui$_name = t0;
    },
    BlurStyle: function BlurStyle() {
    },
    MaskFilter: function MaskFilter(t0, t1) {
      this._ui$_style = t0;
      this._sigma = t1;
    },
    FilterQuality: function FilterQuality() {
    },
    PlatformDispatcher: function PlatformDispatcher() {
    },
    PlatformConfiguration: function PlatformConfiguration(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.accessibilityFeatures = t0;
      _.alwaysUse24HourFormat = t1;
      _.semanticsEnabled = t2;
      _.platformBrightness = t3;
      _.textScaleFactor = t4;
      _.locales = t5;
      _.defaultRouteName = t6;
    },
    ViewConfiguration: function ViewConfiguration() {
    },
    FrameTiming: function FrameTiming(t0) {
      this._timestamps = t0;
    },
    AppLifecycleState: function AppLifecycleState(t0) {
      this._ui$_name = t0;
    },
    Locale: function Locale(t0, t1) {
      this._languageCode = t0;
      this._countryCode = t1;
    },
    PointerChange: function PointerChange(t0) {
      this._ui$_name = t0;
    },
    PointerDeviceKind: function PointerDeviceKind(t0) {
      this._ui$_name = t0;
    },
    PointerSignalKind: function PointerSignalKind(t0) {
      this._ui$_name = t0;
    },
    PointerData: function PointerData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27) {
      var _ = this;
      _.timeStamp = t0;
      _.change = t1;
      _.kind = t2;
      _.signalKind = t3;
      _.device = t4;
      _.pointerIdentifier = t5;
      _.physicalX = t6;
      _.physicalY = t7;
      _.physicalDeltaX = t8;
      _.physicalDeltaY = t9;
      _.buttons = t10;
      _.obscured = t11;
      _.synthesized = t12;
      _.pressure = t13;
      _.pressureMin = t14;
      _.pressureMax = t15;
      _.distance = t16;
      _.distanceMax = t17;
      _.size = t18;
      _.radiusMajor = t19;
      _.radiusMinor = t20;
      _.radiusMin = t21;
      _.radiusMax = t22;
      _.orientation = t23;
      _.tilt = t24;
      _.platformData = t25;
      _.scrollDeltaX = t26;
      _.scrollDeltaY = t27;
    },
    PointerDataPacket: function PointerDataPacket(t0) {
      this.data = t0;
    },
    SemanticsAction: function SemanticsAction(t0) {
      this.index = t0;
    },
    SemanticsFlag: function SemanticsFlag(t0) {
      this.index = t0;
    },
    SemanticsUpdateBuilder: function SemanticsUpdateBuilder(t0) {
      this._nodeUpdates = t0;
    },
    PlaceholderAlignment: function PlaceholderAlignment(t0) {
      this._ui$_name = t0;
    },
    FontWeight: function FontWeight(t0) {
      this.index = t0;
    },
    TextAlign: function TextAlign(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    TextBaseline: function TextBaseline(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    TextDecoration: function TextDecoration(t0) {
      this._mask = t0;
    },
    TextDecorationStyle: function TextDecorationStyle(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    TextDirection: function TextDirection(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    TextBox: function TextBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.direction = t4;
    },
    TextAffinity: function TextAffinity(t0) {
      this._ui$_name = t0;
    },
    TextPosition: function TextPosition(t0, t1) {
      this.offset = t0;
      this.affinity = t1;
    },
    TextRange: function TextRange() {
    },
    ParagraphConstraints: function ParagraphConstraints(t0) {
      this.width = t0;
    },
    BoxHeightStyle: function BoxHeightStyle() {
    },
    BoxWidthStyle: function BoxWidthStyle() {
    },
    TileMode: function TileMode(t0, t1) {
      this.index = t0;
      this._ui$_name = t1;
    },
    FlutterView: function FlutterView() {
    },
    FlutterWindow: function FlutterWindow() {
    },
    SingletonFlutterWindow: function SingletonFlutterWindow() {
    },
    AccessibilityFeatures: function AccessibilityFeatures() {
    },
    Brightness: function Brightness(t0) {
      this._ui$_name = t0;
    },
    CallbackHandle: function CallbackHandle(t0) {
      this._ui$_handle = t0;
    },
    PlatformViewRegistry: function PlatformViewRegistry(t0, t1) {
      this.registeredFactories = t0;
      this._createdViews = t1;
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioParamMap: function AudioParamMap() {
    },
    AudioParamMap_keys_closure: function AudioParamMap_keys_closure(t0) {
      this.keys = t0;
    },
    AudioParamMap_values_closure: function AudioParamMap_values_closure(t0) {
      this.values = t0;
    },
    AudioTrackList: function AudioTrackList() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    _AudioParamMap_Interceptor_MapMixin: function _AudioParamMap_Interceptor_MapMixin() {
    },
    ActiveInfo: function ActiveInfo() {
    },
    SqlResultSetRowList: function SqlResultSetRowList() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin: function _SqlResultSetRowList_Interceptor_ListMixin() {
    },
    _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin: function _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  W = {
    window: function() {
      return window;
    },
    document: function() {
      return document;
    },
    CanvasElement_CanvasElement: function(height, width) {
      var e = document.createElement("canvas");
      if (width != null)
        e.width = width;
      if (height != null)
        e.height = height;
      return e;
    },
    _ChildrenElementList__remove: function(_element, object) {
      return false;
    },
    _ChildrenElementList__first: function(_element) {
      var result = _element.firstElementChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    },
    Element_Element$html: function(html, treeSanitizer, validator) {
      var t1 = document.body;
      t1.toString;
      t1 = new H.WhereIterable(new W._ChildNodeListLazy(C.BodyElement_methods.createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator)), new W.Element_Element$html_closure(), type$._ChildNodeListLazy._eval$1("WhereIterable<ListMixin.E>"));
      return type$.Element._as(t1.get$single(t1));
    },
    Element__safeTagName: function(element) {
      var t1, exception,
        result = "element tag unavailable";
      try {
        t1 = J.getInterceptor$x(element);
        t1.get$tagName(element);
        result = t1.get$tagName(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return result;
    },
    _ElementFactoryProvider_createElement_tag: function(tag, typeExtension) {
      return document.createElement(tag);
    },
    FontFace_FontFace: function(family, source, descriptors) {
      var t1 = new FontFace(family, source, P.convertDartToNative_Dictionary(descriptors));
      return t1;
    },
    HttpRequest_request: function(url, responseType) {
      var t2,
        t1 = new P._Future($.Zone__current, type$._Future_HttpRequest),
        completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_HttpRequest),
        xhr = new XMLHttpRequest();
      C.HttpRequest_methods.open$3$async(xhr, "GET", url, true);
      xhr.responseType = responseType;
      t2 = type$.ProgressEvent;
      W._EventStreamSubscription$(xhr, "load", new W.HttpRequest_request_closure(xhr, completer), false, t2);
      W._EventStreamSubscription$(xhr, "error", completer.get$completeError(), false, t2);
      xhr.send();
      return t1;
    },
    InputElement_InputElement: function() {
      var exception, type = null,
        t1 = document.createElement("input"),
        e = type$.InputElement._as(t1);
      if (type != null)
        try {
          e.type = type;
        } catch (exception) {
          H.unwrapException(exception);
        }
      return e;
    },
    _JenkinsSmiHash_combine: function(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_hash4: function(a, b, c, d) {
      var t1 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, a), b), c), d),
        hash = t1 + ((t1 & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    _EventStreamSubscription$: function(_target, _eventType, onData, _useCapture, $T) {
      var t1 = onData == null ? null : W._wrapZone(new W._EventStreamSubscription_closure(onData), type$.Event);
      t1 = new W._EventStreamSubscription(_target, _eventType, t1, false, $T._eval$1("_EventStreamSubscription<0>"));
      t1._tryResume$0();
      return t1;
    },
    _Html5NodeValidator$: function(uriPolicy) {
      var e = document.createElement("a"),
        t1 = new W._SameOriginUriPolicy(e, window.location);
      t1 = new W._Html5NodeValidator(t1);
      t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
      return t1;
    },
    _Html5NodeValidator__standardAttributeValidator: function(element, attributeName, value, context) {
      return true;
    },
    _Html5NodeValidator__uriAttributeValidator: function(element, attributeName, value, context) {
      var t3,
        t1 = context.uriPolicy,
        t2 = t1._hiddenAnchor;
      t2.href = value;
      t3 = t2.hostname;
      t1 = t1._loc;
      if (!(t3 == t1.hostname && t2.port === t1.port && t2.protocol === t1.protocol))
        if (t3 === "")
          if (t2.port === "") {
            t1 = t2.protocol;
            t1 = t1 === ":" || t1 === "";
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    _TemplatingNodeValidator$: function() {
      var t1 = type$.String,
        t2 = P.LinkedHashSet_LinkedHashSet$from(C.List_wSV, t1),
        t3 = H.setRuntimeTypeInfo(["TEMPLATE"], type$.JSArray_String);
      t1 = new W._TemplatingNodeValidator(t2, P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), P.LinkedHashSet_LinkedHashSet(t1), null);
      t1._SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(null, new H.MappedListIterable(C.List_wSV, new W._TemplatingNodeValidator_closure(), type$.MappedListIterable_String_String), t3, null);
      return t1;
    },
    _convertNativeToDart_EventTarget: function(e) {
      var $window;
      if ("postMessage" in e) {
        $window = W._DOMWindowCrossFrame__createSafe(e);
        return $window;
      } else
        return e;
    },
    _convertNativeToDart_XHR_Response: function(o) {
      if (type$.Document._is(o))
        return o;
      return new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(o, true);
    },
    _DOMWindowCrossFrame__createSafe: function(w) {
      if (w === window)
        return w;
      else
        return new W._DOMWindowCrossFrame(w);
    },
    _wrapZone: function(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    HtmlElement: function HtmlElement() {
    },
    AccessibleNodeList: function AccessibleNodeList() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    BaseElement: function BaseElement() {
    },
    Blob: function Blob() {
    },
    Body: function Body() {
    },
    BodyElement: function BodyElement() {
    },
    BroadcastChannel: function BroadcastChannel() {
    },
    ButtonElement: function ButtonElement() {
    },
    CanvasElement: function CanvasElement() {
    },
    CanvasRenderingContext2D: function CanvasRenderingContext2D() {
    },
    CharacterData: function CharacterData() {
    },
    Credential: function Credential() {
    },
    CredentialUserData: function CredentialUserData() {
    },
    CssKeyframesRule: function CssKeyframesRule() {
    },
    CssPerspective: function CssPerspective() {
    },
    CssRule: function CssRule() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    CssStyleSheet: function CssStyleSheet() {
    },
    CssStyleValue: function CssStyleValue() {
    },
    CssTransformComponent: function CssTransformComponent() {
    },
    CssTransformValue: function CssTransformValue() {
    },
    CssUnparsedValue: function CssUnparsedValue() {
    },
    DataTransferItemList: function DataTransferItemList() {
    },
    DivElement: function DivElement() {
    },
    Document: function Document() {
    },
    DomError: function DomError() {
    },
    DomException: function DomException() {
    },
    DomRectList: function DomRectList() {
    },
    DomRectReadOnly: function DomRectReadOnly() {
    },
    DomStringList: function DomStringList() {
    },
    DomTokenList: function DomTokenList() {
    },
    _ChildrenElementList: function _ChildrenElementList(t0, t1) {
      this._html$_element = t0;
      this._childElements = t1;
    },
    _FrozenElementList: function _FrozenElementList(t0, t1) {
      this._nodeList = t0;
      this.$ti = t1;
    },
    Element0: function Element0() {
    },
    Element_Element$html_closure: function Element_Element$html_closure() {
    },
    EmbedElement: function EmbedElement() {
    },
    Entry: function Entry() {
    },
    Entry_remove_closure: function Entry_remove_closure(t0) {
      this.completer = t0;
    },
    Entry_remove_closure0: function Entry_remove_closure0(t0) {
      this.completer = t0;
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    FederatedCredential: function FederatedCredential() {
    },
    FieldSetElement: function FieldSetElement() {
    },
    File: function File() {
    },
    FileList: function FileList() {
    },
    FileSystem: function FileSystem() {
    },
    FileWriter: function FileWriter() {
    },
    FontFace: function FontFace() {
    },
    FormElement: function FormElement() {
    },
    Gamepad: function Gamepad() {
    },
    History: function History() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    HttpRequest: function HttpRequest() {
    },
    HttpRequest_request_closure: function HttpRequest_request_closure(t0, t1) {
      this.xhr = t0;
      this.completer = t1;
    },
    HttpRequestEventTarget: function HttpRequestEventTarget() {
    },
    IFrameElement: function IFrameElement() {
    },
    ImageData: function ImageData() {
    },
    ImageElement: function ImageElement() {
    },
    InputElement: function InputElement() {
    },
    KeyboardEvent: function KeyboardEvent() {
    },
    LabelElement: function LabelElement() {
    },
    Location: function Location() {
    },
    MapElement: function MapElement() {
    },
    MediaElement: function MediaElement() {
    },
    MediaKeySession: function MediaKeySession() {
    },
    MediaList: function MediaList() {
    },
    MediaQueryList: function MediaQueryList() {
    },
    MediaQueryListEvent: function MediaQueryListEvent() {
    },
    MessagePort: function MessagePort() {
    },
    MetaElement: function MetaElement() {
    },
    MidiInputMap: function MidiInputMap() {
    },
    MidiInputMap_keys_closure: function MidiInputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiInputMap_values_closure: function MidiInputMap_values_closure(t0) {
      this.values = t0;
    },
    MidiOutputMap: function MidiOutputMap() {
    },
    MidiOutputMap_keys_closure: function MidiOutputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiOutputMap_values_closure: function MidiOutputMap_values_closure(t0) {
      this.values = t0;
    },
    MidiPort: function MidiPort() {
    },
    MimeType: function MimeType() {
    },
    MimeTypeArray: function MimeTypeArray() {
    },
    MouseEvent: function MouseEvent() {
    },
    NavigatorUserMediaError: function NavigatorUserMediaError() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    ObjectElement: function ObjectElement() {
    },
    OffscreenCanvas: function OffscreenCanvas() {
    },
    OutputElement: function OutputElement() {
    },
    OverconstrainedError: function OverconstrainedError() {
    },
    ParagraphElement: function ParagraphElement() {
    },
    ParamElement: function ParamElement() {
    },
    PasswordCredential: function PasswordCredential() {
    },
    PerformanceEntry: function PerformanceEntry() {
    },
    PerformanceServerTiming: function PerformanceServerTiming() {
    },
    Plugin: function Plugin() {
    },
    PluginArray: function PluginArray() {
    },
    PointerEvent: function PointerEvent() {
    },
    ProgressEvent: function ProgressEvent() {
    },
    PushMessageData: function PushMessageData() {
    },
    RtcStatsReport: function RtcStatsReport() {
    },
    RtcStatsReport_keys_closure: function RtcStatsReport_keys_closure(t0) {
      this.keys = t0;
    },
    RtcStatsReport_values_closure: function RtcStatsReport_values_closure(t0) {
      this.values = t0;
    },
    ScreenOrientation: function ScreenOrientation() {
    },
    ScriptElement: function ScriptElement() {
    },
    SelectElement: function SelectElement() {
    },
    SharedWorkerGlobalScope: function SharedWorkerGlobalScope() {
    },
    SlotElement: function SlotElement() {
    },
    SourceBuffer: function SourceBuffer() {
    },
    SourceBufferList: function SourceBufferList() {
    },
    SpanElement: function SpanElement() {
    },
    SpeechGrammar: function SpeechGrammar() {
    },
    SpeechGrammarList: function SpeechGrammarList() {
    },
    SpeechRecognitionResult: function SpeechRecognitionResult() {
    },
    SpeechSynthesisEvent: function SpeechSynthesisEvent() {
    },
    SpeechSynthesisUtterance: function SpeechSynthesisUtterance() {
    },
    SpeechSynthesisVoice: function SpeechSynthesisVoice() {
    },
    Storage: function Storage() {
    },
    Storage_keys_closure: function Storage_keys_closure(t0) {
      this.keys = t0;
    },
    Storage_values_closure: function Storage_values_closure(t0) {
      this.values = t0;
    },
    StyleElement: function StyleElement() {
    },
    StyleSheet: function StyleSheet() {
    },
    TableElement: function TableElement() {
    },
    TableRowElement: function TableRowElement() {
    },
    TableSectionElement: function TableSectionElement() {
    },
    TemplateElement: function TemplateElement() {
    },
    TextAreaElement: function TextAreaElement() {
    },
    TextTrack: function TextTrack() {
    },
    TextTrackCue: function TextTrackCue() {
    },
    TextTrackCueList: function TextTrackCueList() {
    },
    TextTrackList: function TextTrackList() {
    },
    TimeRanges: function TimeRanges() {
    },
    Touch: function Touch() {
    },
    TouchEvent: function TouchEvent() {
    },
    TouchList: function TouchList() {
    },
    TrackDefaultList: function TrackDefaultList() {
    },
    UIEvent: function UIEvent() {
    },
    Url: function Url() {
    },
    VideoElement: function VideoElement() {
    },
    VideoTrackList: function VideoTrackList() {
    },
    VttCue: function VttCue() {
    },
    VttRegion: function VttRegion() {
    },
    WheelEvent: function WheelEvent() {
    },
    Window: function Window() {
    },
    WorkerGlobalScope: function WorkerGlobalScope() {
    },
    _Attr: function _Attr() {
    },
    _CssRuleList: function _CssRuleList() {
    },
    _DomRect: function _DomRect() {
    },
    _GamepadList: function _GamepadList() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _SpeechRecognitionResultList: function _SpeechRecognitionResultList() {
    },
    _StyleSheetList: function _StyleSheetList() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._html$_element = t0;
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._html$_target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._pauseCount = 0;
      _._html$_target = t0;
      _._eventType = t1;
      _._onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _Html5NodeValidator: function _Html5NodeValidator(t0) {
      this.uriPolicy = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    NodeValidatorBuilder: function NodeValidatorBuilder(t0) {
      this._validators = t0;
    },
    NodeValidatorBuilder_allowsElement_closure: function NodeValidatorBuilder_allowsElement_closure(t0) {
      this.element = t0;
    },
    NodeValidatorBuilder_allowsAttribute_closure: function NodeValidatorBuilder_allowsAttribute_closure(t0, t1, t2) {
      this.element = t0;
      this.attributeName = t1;
      this.value = t2;
    },
    _SimpleNodeValidator: function _SimpleNodeValidator() {
    },
    _SimpleNodeValidator_closure: function _SimpleNodeValidator_closure() {
    },
    _SimpleNodeValidator_closure0: function _SimpleNodeValidator_closure0() {
    },
    _TemplatingNodeValidator: function _TemplatingNodeValidator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._templateAttrs = t0;
      _.allowedElements = t1;
      _.allowedAttributes = t2;
      _.allowedUriAttributes = t3;
      _.uriPolicy = t4;
    },
    _TemplatingNodeValidator_closure: function _TemplatingNodeValidator_closure() {
    },
    _SvgNodeValidator: function _SvgNodeValidator() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1) {
      var _ = this;
      _._array = t0;
      _._html$_length = t1;
      _._html$_position = -1;
      _._html$_current = null;
    },
    Console: function Console() {
    },
    _DOMWindowCrossFrame: function _DOMWindowCrossFrame(t0) {
      this._html$_window = t0;
    },
    _SameOriginUriPolicy: function _SameOriginUriPolicy(t0, t1) {
      this._hiddenAnchor = t0;
      this._loc = t1;
    },
    _ValidatingTreeSanitizer: function _ValidatingTreeSanitizer(t0) {
      this.validator = t0;
      this.numTreeModifications = 0;
    },
    _ValidatingTreeSanitizer_sanitizeTree_walk: function _ValidatingTreeSanitizer_sanitizeTree_walk(t0) {
      this.$this = t0;
    },
    _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase: function _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase() {
    },
    _DomRectList_Interceptor_ListMixin: function _DomRectList_Interceptor_ListMixin() {
    },
    _DomRectList_Interceptor_ListMixin_ImmutableListMixin: function _DomRectList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _DomStringList_Interceptor_ListMixin: function _DomStringList_Interceptor_ListMixin() {
    },
    _DomStringList_Interceptor_ListMixin_ImmutableListMixin: function _DomStringList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _FileList_Interceptor_ListMixin: function _FileList_Interceptor_ListMixin() {
    },
    _FileList_Interceptor_ListMixin_ImmutableListMixin: function _FileList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin: function _HtmlCollection_Interceptor_ListMixin() {
    },
    _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin: function _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _MidiInputMap_Interceptor_MapMixin: function _MidiInputMap_Interceptor_MapMixin() {
    },
    _MidiOutputMap_Interceptor_MapMixin: function _MidiOutputMap_Interceptor_MapMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin: function _MimeTypeArray_Interceptor_ListMixin() {
    },
    _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin: function _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _NodeList_Interceptor_ListMixin: function _NodeList_Interceptor_ListMixin() {
    },
    _NodeList_Interceptor_ListMixin_ImmutableListMixin: function _NodeList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _PluginArray_Interceptor_ListMixin: function _PluginArray_Interceptor_ListMixin() {
    },
    _PluginArray_Interceptor_ListMixin_ImmutableListMixin: function _PluginArray_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _RtcStatsReport_Interceptor_MapMixin: function _RtcStatsReport_Interceptor_MapMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin: function _SourceBufferList_EventTarget_ListMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: function _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin: function _SpeechGrammarList_Interceptor_ListMixin() {
    },
    _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin: function _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _Storage_Interceptor_MapMixin: function _Storage_Interceptor_MapMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin: function _TextTrackCueList_Interceptor_ListMixin() {
    },
    _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin: function _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin: function _TextTrackList_EventTarget_ListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: function _TextTrackList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _TouchList_Interceptor_ListMixin: function _TouchList_Interceptor_ListMixin() {
    },
    _TouchList_Interceptor_ListMixin_ImmutableListMixin: function _TouchList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin: function __CssRuleList_Interceptor_ListMixin() {
    },
    __CssRuleList_Interceptor_ListMixin_ImmutableListMixin: function __CssRuleList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __GamepadList_Interceptor_ListMixin: function __GamepadList_Interceptor_ListMixin() {
    },
    __GamepadList_Interceptor_ListMixin_ImmutableListMixin: function __GamepadList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin: function __NamedNodeMap_Interceptor_ListMixin() {
    },
    __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin: function __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin() {
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin: function __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin: function __StyleSheetList_Interceptor_ListMixin() {
    },
    __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin: function __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin() {
    }
  },
  Y = {HeapPriorityQueue: function HeapPriorityQueue(t0, t1, t2) {
      var _ = this;
      _.comparison = t0;
      _._priority_queue$_queue = t1;
      _._priority_queue$_modificationCount = _._priority_queue$_length = 0;
      _.$ti = t2;
    },
    TextTreeConfiguration$: function(addBlankLineIfNoChildren, afterDescriptionIfBody, afterName, afterProperties, beforeName, beforeProperties, bodyIndent, footer, isBlankLineBetweenPropertiesAndChildren, isNameOnOwnLine, lineBreak, lineBreakProperties, linkCharacter, mandatoryFooter, prefixLastChildLineOne, prefixLineOne, prefixOtherLines, prefixOtherLinesRootNode, propertyPrefixIfChildren, propertyPrefixNoChildren, propertySeparator, showChildren, suffixLineOne) {
      return new Y.TextTreeConfiguration(prefixLineOne, suffixLineOne, prefixOtherLines, prefixLastChildLineOne, prefixOtherLinesRootNode, propertyPrefixIfChildren, propertyPrefixNoChildren, linkCharacter, C.JSString_methods.$mul(" ", linkCharacter.length), lineBreak, lineBreakProperties, beforeName, afterName, afterDescriptionIfBody, beforeProperties, afterProperties, propertySeparator, bodyIndent, showChildren, addBlankLineIfNoChildren, isNameOnOwnLine, footer, mandatoryFooter, isBlankLineBetweenPropertiesAndChildren);
    },
    _PrefixedStringBuilder__wordWrapLine: function(message, wrapRanges, width, otherLineOffset, startOffset) {
      return Y._PrefixedStringBuilder__wordWrapLine$body(message, wrapRanges, width, otherLineOffset, startOffset);
    },
    _PrefixedStringBuilder__wordWrapLine$body: function($async$message, $async$wrapRanges, $async$width, $async$otherLineOffset, $async$startOffset) {
      return P._makeSyncStarIterable(function() {
        var message = $async$message,
          wrapRanges = $async$wrapRanges,
          width = $async$width,
          otherLineOffset = $async$otherLineOffset,
          startOffset = $async$startOffset;
        var $async$goto = 0, $async$handler = 2, $async$currentError, startForLengthCalculations, _lastWordStart_get, _lastWordStart_set, noWrap, addPrefix, index, mode, lastWordEnd, start, t2, _box_0, t1;
        return function $async$_PrefixedStringBuilder__wordWrapLine($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                _box_0 = {};
                t1 = message.length;
                $async$goto = t1 + startOffset < width ? 3 : 4;
                break;
              case 3:
                // then
                $async$goto = 5;
                return message;
              case 5:
                // after yield
                // goto return
                $async$goto = 1;
                break;
              case 4:
                // join
                startForLengthCalculations = -startOffset;
                _box_0._lastWordStart = null;
                _lastWordStart_get = new Y._PrefixedStringBuilder__wordWrapLine__lastWordStart_get(_box_0);
                _lastWordStart_set = new Y._PrefixedStringBuilder__wordWrapLine__lastWordStart_set(_box_0);
                _box_0.currentChunk = 0;
                noWrap = new Y._PrefixedStringBuilder__wordWrapLine_noWrap(_box_0, wrapRanges);
                addPrefix = false, index = 0, mode = C._WordWrapParseMode_0, lastWordEnd = null, start = 0;
              case 6:
                // for condition
                // trivial condition
              case 8:
                // switch
                switch (mode) {
                  case C._WordWrapParseMode_0:
                    // goto case
                    $async$goto = 10;
                    break;
                  case C._WordWrapParseMode_1:
                    // goto case
                    $async$goto = 11;
                    break;
                  case C._WordWrapParseMode_2:
                    // goto case
                    $async$goto = 12;
                    break;
                  default:
                    // goto after switch
                    $async$goto = 9;
                    break;
                }
                break;
              case 10:
                // case
                while (true) {
                  if (!(index < t1 && message[index] === " "))
                    break;
                  ++index;
                }
                _lastWordStart_set.call$1(index);
                mode = C._WordWrapParseMode_1;
                // goto after switch
                $async$goto = 9;
                break;
              case 11:
                // case
                while (true) {
                  if (index < t1)
                    t2 = message[index] !== " " || noWrap.call$1(index);
                  else
                    t2 = false;
                  if (!t2)
                    break;
                  ++index;
                }
                mode = C._WordWrapParseMode_2;
                // goto after switch
                $async$goto = 9;
                break;
              case 12:
                // case
                t2 = index - startForLengthCalculations;
                $async$goto = t2 > width || index === t1 ? 13 : 15;
                break;
              case 13:
                // then
                if (t2 <= width || lastWordEnd == null)
                  lastWordEnd = index;
                $async$goto = 16;
                return C.JSString_methods.substring$2(message, start, lastWordEnd);
              case 16:
                // after yield
                if (lastWordEnd >= t1) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (lastWordEnd === index) {
                  while (true) {
                    if (!(index < t1 && message[index] === " "))
                      break;
                    ++index;
                  }
                  start = index;
                  mode = C._WordWrapParseMode_1;
                } else {
                  start = _lastWordStart_get.call$0();
                  mode = C._WordWrapParseMode_2;
                }
                startForLengthCalculations = start - otherLineOffset;
                addPrefix = true;
                lastWordEnd = null;
                // goto join
                $async$goto = 14;
                break;
              case 15:
                // else
                lastWordEnd = index;
                mode = C._WordWrapParseMode_0;
              case 14:
                // join
                // goto after switch
                $async$goto = 9;
                break;
              case 9:
                // after switch
                // goto for condition
                $async$goto = 6;
                break;
              case 7:
                // after for
              case 1:
                // return
                return P._IterationMarker_endOfIteration();
              case 2:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.String);
    },
    DiagnosticsNode_DiagnosticsNode$message: function(message, allowWrap, style) {
      var _null = null;
      return Y.DiagnosticsProperty$("", _null, allowWrap, C.C__NoDefaultValue, message, false, _null, _null, C.DiagnosticLevel_3, _null, false, false, true, style, _null, type$.void);
    },
    DiagnosticsProperty$: function($name, value, allowWrap, defaultValue, description, expandableValue, ifEmpty, ifNull, level, linePrefix, missingIfNull, showName, showSeparator, style, tooltip, $T) {
      var t1;
      if (ifNull == null)
        t1 = missingIfNull ? "MISSING" : null;
      else
        t1 = ifNull;
      return new Y.DiagnosticsProperty(description, false, allowWrap, t1, ifEmpty, tooltip, missingIfNull, value, defaultValue, level, $name, showSeparator, showName, linePrefix, style, $T._eval$1("DiagnosticsProperty<0>"));
    },
    DiagnosticableTreeNode$: function($name, style, value) {
      return new Y.DiagnosticableTreeNode(value, $name, true, true, null, style);
    },
    shortHash: function(object) {
      return C.JSString_methods.padLeft$2(C.JSInt_methods.toRadixString$1(J.get$hashCode$(object) & 1048575, 16), 5, "0");
    },
    describeEnum: function(enumEntry) {
      var description = J.toString$0$(enumEntry);
      return C.JSString_methods.substring$1(description, C.JSString_methods.indexOf$1(description, ".") + 1);
    },
    DiagnosticLevel: function DiagnosticLevel(t0, t1) {
      this.index = t0;
      this._diagnostics$_name = t1;
    },
    DiagnosticsTreeStyle: function DiagnosticsTreeStyle(t0) {
      this._diagnostics$_name = t0;
    },
    TextTreeConfiguration: function TextTreeConfiguration(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.prefixLineOne = t0;
      _.suffixLineOne = t1;
      _.prefixOtherLines = t2;
      _.prefixLastChildLineOne = t3;
      _.prefixOtherLinesRootNode = t4;
      _.propertyPrefixIfChildren = t5;
      _.propertyPrefixNoChildren = t6;
      _.linkCharacter = t7;
      _.childLinkSpace = t8;
      _.lineBreak = t9;
      _.lineBreakProperties = t10;
      _.beforeName = t11;
      _.afterName = t12;
      _.afterDescriptionIfBody = t13;
      _.beforeProperties = t14;
      _.afterProperties = t15;
      _.propertySeparator = t16;
      _.bodyIndent = t17;
      _.showChildren = t18;
      _.addBlankLineIfNoChildren = t19;
      _.isNameOnOwnLine = t20;
      _.footer = t21;
      _.mandatoryFooter = t22;
      _.isBlankLineBetweenPropertiesAndChildren = t23;
    },
    _WordWrapParseMode: function _WordWrapParseMode(t0) {
      this._diagnostics$_name = t0;
    },
    _PrefixedStringBuilder: function _PrefixedStringBuilder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.prefixLineOne = t0;
      _._prefixOtherLines = t1;
      _._nextPrefixOtherLines = null;
      _.wrapWidth = t2;
      _._diagnostics$_buffer = t3;
      _._currentLine = t4;
      _._wrappableRanges = t5;
      _._numLines = 0;
    },
    _PrefixedStringBuilder__wordWrapLine__lastWordStart_set: function _PrefixedStringBuilder__wordWrapLine__lastWordStart_set(t0) {
      this._box_0 = t0;
    },
    _PrefixedStringBuilder__wordWrapLine__lastWordStart_get: function _PrefixedStringBuilder__wordWrapLine__lastWordStart_get(t0) {
      this._box_0 = t0;
    },
    _PrefixedStringBuilder__wordWrapLine_noWrap: function _PrefixedStringBuilder__wordWrapLine_noWrap(t0, t1) {
      this._box_0 = t0;
      this.wrapRanges = t1;
    },
    _NoDefaultValue: function _NoDefaultValue() {
    },
    TextTreeRenderer: function TextTreeRenderer(t0, t1, t2, t3) {
      var _ = this;
      _._wrapWidth = t0;
      _._wrapWidthProperties = t1;
      _._minLevel = t2;
      _._maxDescendentsTruncatableNode = t3;
    },
    TextTreeRenderer__debugRender_visitor: function TextTreeRenderer__debugRender_visitor(t0, t1) {
      this._box_0 = t0;
      this.descendants = t1;
    },
    TextTreeRenderer__debugRender_closure: function TextTreeRenderer__debugRender_closure(t0) {
      this.$this = t0;
    },
    DiagnosticsNode: function DiagnosticsNode() {
    },
    DiagnosticsProperty: function DiagnosticsProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
      _.$ti = t15;
    },
    DiagnosticableNode: function DiagnosticableNode() {
    },
    DiagnosticableTreeNode: function DiagnosticableTreeNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _._cachedBuilder = null;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    DiagnosticPropertiesBuilder: function DiagnosticPropertiesBuilder(t0, t1) {
      this.properties = t0;
      this.defaultDiagnosticsTreeStyle = t1;
      this.emptyBodyDescription = null;
    },
    Diagnosticable: function Diagnosticable() {
    },
    DiagnosticableTree: function DiagnosticableTree() {
    },
    DiagnosticableTreeMixin: function DiagnosticableTreeMixin() {
    },
    DiagnosticsBlock: function DiagnosticsBlock() {
    },
    _DiagnosticableTree_Object_Diagnosticable: function _DiagnosticableTree_Object_Diagnosticable() {
    },
    DialogTheme: function DialogTheme(t0, t1, t2, t3, t4) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.shape = t2;
      _.titleTextStyle = t3;
      _.contentTextStyle = t4;
    },
    _DialogTheme_Object_Diagnosticable: function _DialogTheme_Object_Diagnosticable() {
    },
    InkHighlight: function InkHighlight(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._ink_highlight$_shape = t0;
      _._ink_highlight$_radius = t1;
      _._ink_highlight$_borderRadius = t2;
      _._ink_highlight$_customBorder = t3;
      _._rectCallback = t4;
      _._ink_highlight$_textDirection = t5;
      _.__InkHighlight__alphaController = _.__InkHighlight__alpha = null;
      _._active = true;
      _._ink_well$_color = t6;
      _._material$_controller = t7;
      _.referenceBox = t8;
      _.onRemoved = t9;
      _._material$_debugDisposed = false;
    },
    BorderSide_lerp: function(a, b, t) {
      var t1, t2, t3, colorA, colorB;
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      t1 = P.lerpDouble(a.width, b.width, t);
      t1.toString;
      if (t1 < 0)
        return C.BorderSide_m7u;
      t2 = a.style;
      t3 = b.style;
      if (t2 === t3) {
        t3 = P.Color_lerp(a.color, b.color, t);
        t3.toString;
        return new Y.BorderSide(t3, t1, t2);
      }
      switch (t2) {
        case C.BorderStyle_1:
          colorA = a.color;
          break;
        case C.BorderStyle_0:
          t2 = a.color.value;
          colorA = P.Color$fromARGB(0, t2 >>> 16 & 255, t2 >>> 8 & 255, t2 & 255);
          break;
        default:
          colorA = null;
      }
      switch (t3) {
        case C.BorderStyle_1:
          colorB = b.color;
          break;
        case C.BorderStyle_0:
          t2 = b.color.value;
          colorB = P.Color$fromARGB(0, t2 >>> 16 & 255, t2 >>> 8 & 255, t2 & 255);
          break;
        default:
          colorB = null;
      }
      t2 = P.Color_lerp(colorA, colorB, t);
      t2.toString;
      return new Y.BorderSide(t2, t1, C.BorderStyle_1);
    },
    ShapeBorder_lerp: function(a, b, t) {
      var t1,
        result = b != null ? b.lerpFrom$2(a, t) : null;
      if (result == null && a != null)
        result = a.lerpTo$2(b, t);
      if (result == null)
        t1 = t < 0.5 ? a : b;
      else
        t1 = result;
      return t1;
    },
    _CompoundBorder_lerp: function(a, b, t) {
      var t1, index, localA, localB, t2, localResult,
        aList = a instanceof Y._CompoundBorder ? a.borders : H.setRuntimeTypeInfo([a], type$.JSArray_nullable_ShapeBorder),
        bList = b instanceof Y._CompoundBorder ? b.borders : H.setRuntimeTypeInfo([b], type$.JSArray_nullable_ShapeBorder),
        results = H.setRuntimeTypeInfo([], type$.JSArray_ShapeBorder),
        $length = Math.max(aList.length, bList.length);
      for (t1 = 1 - t, index = 0; index < $length; ++index) {
        localA = index < aList.length ? aList[index] : null;
        localB = index < bList.length ? bList[index] : null;
        t2 = localA != null;
        if (t2 && localB != null) {
          localResult = localA.lerpTo$2(localB, t);
          if (localResult == null)
            localResult = localB.lerpFrom$2(localA, t);
          if (localResult != null) {
            results.push(localResult);
            continue;
          }
        }
        if (localB != null)
          results.push(localB.scale$1(0, t));
        if (t2)
          results.push(localA.scale$1(0, t1));
      }
      return new Y._CompoundBorder(results);
    },
    BorderStyle: function BorderStyle(t0) {
      this._borders$_name = t0;
    },
    BorderSide: function BorderSide(t0, t1, t2) {
      this.color = t0;
      this.width = t1;
      this.style = t2;
    },
    ShapeBorder: function ShapeBorder() {
    },
    OutlinedBorder: function OutlinedBorder() {
    },
    _CompoundBorder: function _CompoundBorder(t0) {
      this.borders = t0;
    },
    _CompoundBorder_dimensions_closure: function _CompoundBorder_dimensions_closure() {
    },
    _CompoundBorder_scale_closure: function _CompoundBorder_scale_closure(t0) {
      this.t = t0;
    },
    _CompoundBorder_toString_closure: function _CompoundBorder_toString_closure() {
    },
    IconTheme$: function(child, data, key) {
      return new Y.IconTheme(data, child, key);
    },
    IconTheme_merge: function(child, data) {
      return new T.Builder(new Y.IconTheme_merge_closure(null, data, child), null);
    },
    IconTheme__getInheritedIconThemeData: function(context) {
      var iconTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.IconTheme),
        t1 = iconTheme == null ? null : iconTheme.data;
      return t1 == null ? C.IconThemeData_Color_4278190080_1_24 : t1;
    },
    IconTheme: function IconTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    IconTheme_merge_closure: function IconTheme_merge_closure(t0, t1, t2) {
      this.key = t0;
      this.data = t1;
      this.child = t2;
    },
    TextEditingAction: function TextEditingAction() {
    }
  },
  F = {MyApp: function MyApp(t0) {
      this.key = t0;
    }, LicenseEntry: function LicenseEntry() {
    }, LicenseEntryWithLineBreaks: function LicenseEntryWithLineBreaks(t0) {
      this.text = t0;
    },
    PointerEvent_transformPosition: function(transform, position) {
      var position3, t1;
      if (transform == null)
        return position;
      position3 = new E.Vector3(new Float64Array(3));
      position3.setValues$3(position._dx, position._dy, 0);
      t1 = transform.perspectiveTransform$1(position3)._v3storage;
      return new P.Offset(t1[0], t1[1]);
    },
    PointerEvent_transformDeltaViaPositions: function(transform, transformedEndPosition, untransformedDelta, untransformedEndPosition) {
      if (transform == null)
        return untransformedDelta;
      if (transformedEndPosition == null)
        transformedEndPosition = F.PointerEvent_transformPosition(transform, untransformedEndPosition);
      return transformedEndPosition.$sub(0, F.PointerEvent_transformPosition(transform, untransformedEndPosition.$sub(0, untransformedDelta)));
    },
    PointerEvent_removePerspectiveTransform: function(transform) {
      var t2, t3,
        t1 = new Float64Array(4),
        vector = new E.Vector4(t1);
      vector.setValues$4(0, 0, 1, 0);
      t2 = new Float64Array(16);
      t3 = new E.Matrix4(t2);
      t3.setFrom$1(transform);
      t2[11] = t1[3];
      t2[10] = t1[2];
      t2[9] = t1[1];
      t2[8] = t1[0];
      t3.setRow$2(2, vector);
      return t3;
    },
    PointerAddedEvent$: function(device, distance, distanceMax, embedderId, kind, obscured, orientation, position, pressureMax, pressureMin, radiusMax, radiusMin, tilt, timeStamp) {
      return new F.PointerAddedEvent(embedderId, timeStamp, 0, kind, device, position, C.Offset_0_0, 0, false, false, 0, pressureMin, pressureMax, distance, distanceMax, 0, 0, 0, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    PointerRemovedEvent$: function(device, distanceMax, embedderId, kind, obscured, position, pressureMax, pressureMin, radiusMax, radiusMin, timeStamp) {
      return new F.PointerRemovedEvent(embedderId, timeStamp, 0, kind, device, position, C.Offset_0_0, 0, false, false, 0, pressureMin, pressureMax, 0, distanceMax, 0, 0, 0, radiusMin, radiusMax, 0, 0, 0, false, null, null);
    },
    PointerHoverEvent$: function(buttons, delta, device, distance, distanceMax, embedderId, kind, obscured, orientation, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp) {
      return new F.PointerHoverEvent(embedderId, timeStamp, 0, kind, device, position, delta, buttons, false, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, synthesized, null, null);
    },
    PointerEnterEvent$: function(buttons, delta, device, distance, distanceMax, down, embedderId, kind, obscured, orientation, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp) {
      return new F.PointerEnterEvent(embedderId, timeStamp, pointer, kind, device, position, delta, buttons, down, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, synthesized, null, null);
    },
    PointerExitEvent$: function(buttons, delta, device, distance, distanceMax, down, embedderId, kind, obscured, orientation, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp) {
      return new F.PointerExitEvent(embedderId, timeStamp, pointer, kind, device, position, delta, buttons, down, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, synthesized, null, null);
    },
    PointerDownEvent$: function(buttons, device, distanceMax, embedderId, kind, obscured, orientation, pointer, position, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp) {
      return new F.PointerDownEvent(embedderId, timeStamp, pointer, kind, device, position, C.Offset_0_0, buttons, true, false, pressure, pressureMin, pressureMax, 0, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    PointerMoveEvent$: function(buttons, delta, device, distanceMax, embedderId, kind, obscured, orientation, platformData, pointer, position, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp) {
      return new F.PointerMoveEvent(embedderId, timeStamp, pointer, kind, device, position, delta, buttons, true, false, pressure, pressureMin, pressureMax, 0, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, platformData, synthesized, null, null);
    },
    PointerUpEvent$: function(buttons, device, distance, distanceMax, embedderId, kind, obscured, orientation, pointer, position, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp) {
      return new F.PointerUpEvent(embedderId, timeStamp, pointer, kind, device, position, C.Offset_0_0, buttons, false, false, pressure, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    PointerScrollEvent$: function(device, embedderId, kind, position, scrollDelta, timeStamp) {
      return new F.PointerScrollEvent(scrollDelta, embedderId, timeStamp, 0, kind, device, position, C.Offset_0_0, 0, false, false, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, null, null);
    },
    PointerCancelEvent$: function(buttons, device, distance, distanceMax, embedderId, kind, obscured, orientation, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp) {
      return new F.PointerCancelEvent(embedderId, timeStamp, pointer, kind, device, position, C.Offset_0_0, buttons, false, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    computeHitSlop: function(kind) {
      switch (kind) {
        case C.PointerDeviceKind_1:
          return 1;
        case C.PointerDeviceKind_2:
        case C.PointerDeviceKind_3:
        case C.PointerDeviceKind_4:
        case C.PointerDeviceKind_0:
          return 18;
      }
    },
    computePanSlop: function(kind) {
      switch (kind) {
        case C.PointerDeviceKind_1:
          return 2;
        case C.PointerDeviceKind_2:
        case C.PointerDeviceKind_3:
        case C.PointerDeviceKind_4:
        case C.PointerDeviceKind_0:
          return 36;
      }
    },
    PointerEvent0: function PointerEvent0() {
    },
    _PointerEventDescription: function _PointerEventDescription() {
    },
    _AbstractPointerEvent: function _AbstractPointerEvent() {
    },
    _TransformedPointerEvent: function _TransformedPointerEvent() {
    },
    _CopyPointerAddedEvent: function _CopyPointerAddedEvent() {
    },
    PointerAddedEvent: function PointerAddedEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerAddedEvent: function _TransformedPointerAddedEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    _CopyPointerRemovedEvent: function _CopyPointerRemovedEvent() {
    },
    PointerRemovedEvent: function PointerRemovedEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerRemovedEvent: function _TransformedPointerRemovedEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    _CopyPointerHoverEvent: function _CopyPointerHoverEvent() {
    },
    PointerHoverEvent: function PointerHoverEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerHoverEvent: function _TransformedPointerHoverEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    _CopyPointerEnterEvent: function _CopyPointerEnterEvent() {
    },
    PointerEnterEvent: function PointerEnterEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerEnterEvent: function _TransformedPointerEnterEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    _CopyPointerExitEvent: function _CopyPointerExitEvent() {
    },
    PointerExitEvent: function PointerExitEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerExitEvent: function _TransformedPointerExitEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    _CopyPointerDownEvent: function _CopyPointerDownEvent() {
    },
    PointerDownEvent: function PointerDownEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerDownEvent: function _TransformedPointerDownEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    _CopyPointerMoveEvent: function _CopyPointerMoveEvent() {
    },
    PointerMoveEvent: function PointerMoveEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerMoveEvent: function _TransformedPointerMoveEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    _CopyPointerUpEvent: function _CopyPointerUpEvent() {
    },
    PointerUpEvent: function PointerUpEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerUpEvent: function _TransformedPointerUpEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    PointerSignalEvent: function PointerSignalEvent() {
    },
    _CopyPointerScrollEvent: function _CopyPointerScrollEvent() {
    },
    PointerScrollEvent: function PointerScrollEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.scrollDelta = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerScrollEvent: function _TransformedPointerScrollEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    _CopyPointerCancelEvent: function _CopyPointerCancelEvent() {
    },
    PointerCancelEvent: function PointerCancelEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.embedderId = t0;
      _.timeStamp = t1;
      _.pointer = t2;
      _.kind = t3;
      _.device = t4;
      _.position = t5;
      _.delta = t6;
      _.buttons = t7;
      _.down = t8;
      _.obscured = t9;
      _.pressure = t10;
      _.pressureMin = t11;
      _.pressureMax = t12;
      _.distance = t13;
      _.distanceMax = t14;
      _.size = t15;
      _.radiusMajor = t16;
      _.radiusMinor = t17;
      _.radiusMin = t18;
      _.radiusMax = t19;
      _.orientation = t20;
      _.tilt = t21;
      _.platformData = t22;
      _.synthesized = t23;
      _.transform = t24;
      _.original = t25;
    },
    _TransformedPointerCancelEvent: function _TransformedPointerCancelEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta = _.___TransformedPointerEvent_localPosition = null;
    },
    _PointerAddedEvent_PointerEvent__PointerEventDescription: function _PointerAddedEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent: function _PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent() {
    },
    _PointerCancelEvent_PointerEvent__PointerEventDescription: function _PointerCancelEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent: function _PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent() {
    },
    _PointerDownEvent_PointerEvent__PointerEventDescription: function _PointerDownEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent: function _PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent() {
    },
    _PointerEnterEvent_PointerEvent__PointerEventDescription: function _PointerEnterEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent: function _PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent() {
    },
    _PointerEvent_Object_Diagnosticable: function _PointerEvent_Object_Diagnosticable() {
    },
    _PointerExitEvent_PointerEvent__PointerEventDescription: function _PointerExitEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent: function _PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent() {
    },
    _PointerHoverEvent_PointerEvent__PointerEventDescription: function _PointerHoverEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent: function _PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent() {
    },
    _PointerMoveEvent_PointerEvent__PointerEventDescription: function _PointerMoveEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent: function _PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent() {
    },
    _PointerRemovedEvent_PointerEvent__PointerEventDescription: function _PointerRemovedEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent: function _PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent() {
    },
    _PointerScrollEvent_PointerSignalEvent__PointerEventDescription: function _PointerScrollEvent_PointerSignalEvent__PointerEventDescription() {
    },
    _PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent: function _PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent() {
    },
    _PointerUpEvent_PointerEvent__PointerEventDescription: function _PointerUpEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent: function _PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent() {
    },
    __TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent: function __TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent() {
    },
    __TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent: function __TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent() {
    },
    __TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent: function __TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent() {
    },
    __TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent: function __TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent() {
    },
    __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable: function __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable() {
    },
    __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription: function __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription() {
    },
    __TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent: function __TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent() {
    },
    __TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent: function __TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent() {
    },
    __TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent: function __TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent() {
    },
    __TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent: function __TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent() {
    },
    __TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent: function __TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent() {
    },
    __TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent: function __TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent() {
    },
    _CountdownZoned: function _CountdownZoned() {
      this._timeout = false;
    },
    _TapTracker: function _TapTracker(t0, t1, t2, t3, t4) {
      var _ = this;
      _.pointer = t0;
      _.entry = t1;
      _._initialGlobalPosition = t2;
      _.initialButtons = t3;
      _._doubleTapMinTimeCountdown = t4;
      _._isTrackingPointer = false;
    },
    DoubleTapGestureRecognizer: function DoubleTapGestureRecognizer(t0, t1, t2, t3) {
      var _ = this;
      _._firstTap = _._doubleTapTimer = _.onDoubleTapCancel = _.onDoubleTap = _.onDoubleTapDown = null;
      _._trackers = t0;
      _.debugOwner = t1;
      _._kindFilter = t2;
      _._pointerToKind = t3;
    },
    CheckboxThemeData__lerpProperties: function(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return new F._LerpProperties1(a, b, t, lerpFunction, $T._eval$1("_LerpProperties1<0>"));
    },
    CheckboxThemeData__lerpSides: function(a, b, t) {
      if (a == null && b == null)
        return null;
      a.toString;
      b.toString;
      return Y.BorderSide_lerp(a, b, t);
    },
    CheckboxThemeData: function CheckboxThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.mouseCursor = t0;
      _.fillColor = t1;
      _.checkColor = t2;
      _.overlayColor = t3;
      _.splashRadius = t4;
      _.materialTapTargetSize = t5;
      _.visualDensity = t6;
      _.shape = t7;
      _.side = t8;
    },
    _LerpProperties1: function _LerpProperties1(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    _CheckboxThemeData_Object_Diagnosticable: function _CheckboxThemeData_Object_Diagnosticable() {
    },
    BoxShape: function BoxShape(t0) {
      this._box_border$_name = t0;
    },
    PlatformException$: function(code, details, message, stacktrace) {
      return new F.PlatformException(code, message, details, stacktrace);
    },
    MethodCall: function MethodCall(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    PlatformException: function PlatformException(t0, t1, t2, t3) {
      var _ = this;
      _.code = t0;
      _.message = t1;
      _.details = t2;
      _.stacktrace = t3;
    },
    MissingPluginException: function MissingPluginException(t0) {
      this.message = t0;
    },
    MediaQuery_maybeOf: function(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery);
      return t1 == null ? null : t1.data;
    },
    MediaQueryData: function MediaQueryData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.size = t0;
      _.devicePixelRatio = t1;
      _.textScaleFactor = t2;
      _.platformBrightness = t3;
      _.viewInsets = t4;
      _.padding = t5;
      _.viewPadding = t6;
      _.systemGestureInsets = t7;
      _.alwaysUse24HourFormat = t8;
      _.accessibleNavigation = t9;
      _.invertColors = t10;
      _.highContrast = t11;
      _.disableAnimations = t12;
      _.boldText = t13;
      _.navigationMode = t14;
    },
    MediaQuery: function MediaQuery(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    NavigationMode: function NavigationMode(t0) {
      this._media_query$_name = t0;
    },
    ScrollController: function ScrollController(t0, t1) {
      this._positions = t0;
      this.ChangeNotifier__listeners = t1;
    },
    Scrollable_of: function(context) {
      context.dependOnInheritedWidgetOfExactType$1$0(type$._ScrollableScope);
      return null;
    },
    Scrollable_ensureVisible: function(context, alignment, alignmentPolicy) {
      var t1, targetRenderObject, t2, t3,
        futures = H.setRuntimeTypeInfo([], type$.JSArray_Future_void),
        scrollable = F.Scrollable_of(context);
      for (t1 = type$._ScrollableScope, targetRenderObject = null; false; scrollable = null) {
        t2 = scrollable.get$position(scrollable);
        t3 = context.get$renderObject();
        t3.toString;
        futures.push(t2.ensureVisible$6$alignment$alignmentPolicy$curve$duration$targetRenderObject(t3, alignment, alignmentPolicy, C.Cubic_JUR, C.Duration_0, targetRenderObject));
        if (targetRenderObject == null)
          targetRenderObject = context.get$renderObject();
        context = scrollable.get$context(scrollable);
        context.dependOnInheritedWidgetOfExactType$1$0(t1);
      }
      t1 = futures.length;
      if (t1 !== 0)
        t2 = 0 === C.Duration_0._duration;
      else
        t2 = true;
      if (t2)
        return P.Future_Future$value(null, type$.void);
      if (t1 === 1)
        return C.JSArray_methods.get$single(futures);
      t1 = type$.void;
      return P.Future_wait(futures, t1).then$1$1(0, new F.Scrollable_ensureVisible_closure(), t1);
    },
    Scrollable_ensureVisible_closure: function Scrollable_ensureVisible_closure() {
    },
    ScrollIncrementType: function ScrollIncrementType(t0) {
      this._scrollable$_name = t0;
    },
    ScrollIncrementDetails: function ScrollIncrementDetails() {
    },
    ScrollIntent: function ScrollIntent(t0, t1) {
      this.direction = t0;
      this.type = t1;
    },
    ScrollAction: function ScrollAction(t0) {
      this._actions$_listeners = t0;
    },
    main: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        t1, t2, t3, t4, t5, t6;
      var $async$main = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(P.webOnlyInitializePlatform(), $async$main);
            case 2:
              // returning from await.
              if ($.WidgetsBinding__instance == null) {
                t1 = H.setRuntimeTypeInfo([], type$.JSArray_WidgetsBindingObserver);
                t2 = $.Zone__current;
                t3 = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_List_FrameTiming);
                t4 = P.List_List$filled(7, null, false, type$.nullable__TaskEntry_dynamic);
                t5 = type$.int;
                t6 = type$.JSArray_of_void_Function_Duration;
                new N.WidgetsFlutterBinding(null, t1, true, new P._AsyncCompleter(new P._Future(t2, type$._Future_void), type$._AsyncCompleter_void), false, null, false, false, null, null, null, false, 0, false, null, null, new N._SystemFontsNotifier(P.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function)), null, null, t3, null, N.binding__defaultSchedulingStrategy$closure(), new Y.HeapPriorityQueue(N.binding_SchedulerBinding__taskSorter$closure(), t4, type$.HeapPriorityQueue__TaskEntry_dynamic), false, 0, P.LinkedHashMap_LinkedHashMap$_empty(t5, type$._FrameCallbackEntry), P.HashSet_HashSet(t5), H.setRuntimeTypeInfo([], t6), H.setRuntimeTypeInfo([], t6), null, false, C.SchedulerPhase_0, true, false, null, C.Duration_0, C.Duration_0, null, 0, null, false, P.ListQueue$(null, type$.PointerEvent), new O.PointerRouter(P.LinkedHashMap_LinkedHashMap$_empty(t5, type$.Map_of_void_Function_PointerEvent_and_nullable_Matrix4), P.LinkedHashMap_LinkedHashMap$_empty(type$.void_Function_PointerEvent, type$.nullable_Matrix4)), new D.GestureArenaManager(P.LinkedHashMap_LinkedHashMap$_empty(t5, type$._GestureArena)), new G.PointerSignalResolver(), P.LinkedHashMap_LinkedHashMap$_empty(t5, type$.HitTestResult), null, false, C.Duration_m38000).BindingBase$0();
              }
              t1 = $.WidgetsBinding__instance;
              t1.scheduleAttachRootWidget$1(new F.MyApp(null));
              t1.scheduleWarmUpFrame$0();
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$main, $async$completer);
    }
  },
  X = {AnimationStatus: function AnimationStatus(t0) {
      this._animation$_name = t0;
    }, Animation0: function Animation0() {
    },
    BottomSheetThemeData_lerp: function(a, b, t) {
      var t6,
        t1 = P.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t2 = P.lerpDouble(a.elevation, b.elevation, t),
        t3 = P.Color_lerp(a.modalBackgroundColor, b.modalBackgroundColor, t),
        t4 = P.lerpDouble(a.modalElevation, b.modalElevation, t),
        t5 = Y.ShapeBorder_lerp(a.shape, b.shape, t);
      if (t < 0.5)
        t6 = a.clipBehavior;
      else
        t6 = b.clipBehavior;
      return new X.BottomSheetThemeData(t1, t2, t3, t4, t5, t6);
    },
    BottomSheetThemeData: function BottomSheetThemeData(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.modalBackgroundColor = t2;
      _.modalElevation = t3;
      _.shape = t4;
      _.clipBehavior = t5;
    },
    _BottomSheetThemeData_Object_Diagnosticable: function _BottomSheetThemeData_Object_Diagnosticable() {
    },
    ScrollbarThemeData__lerpProperties: function(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return new X._LerpProperties4(a, b, t, lerpFunction, $T._eval$1("_LerpProperties4<0>"));
    },
    ScrollbarThemeData: function ScrollbarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.thickness = t0;
      _.showTrackOnHover = t1;
      _.isAlwaysShown = t2;
      _.interactive = t3;
      _.radius = t4;
      _.thumbColor = t5;
      _.trackColor = t6;
      _.trackBorderColor = t7;
      _.crossAxisMargin = t8;
      _.mainAxisMargin = t9;
      _.minThumbLength = t10;
    },
    _LerpProperties4: function _LerpProperties4(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    _ScrollbarThemeData_Object_Diagnosticable: function _ScrollbarThemeData_Object_Diagnosticable() {
    },
    ThemeData_ThemeData: function(brightness, primarySwatch) {
      var _brightness, isDark, visualDensity, t1, primaryColor, primaryColorBrightness, primaryColorLight, primaryColorDark, primaryIsDark, toggleableActiveColor, accentColor, accentColorBrightness, accentIsDark, canvasColor, bottomAppBarColor, cardColor, dividerColor, primaryIsDark0, t2, t3, t4, t5, t6, t7, colorScheme, selectedRowColor, unselectedWidgetColor, secondaryHeaderColor, textSelectionColor, textSelectionHandleColor, backgroundColor, dialogBackgroundColor, indicatorColor, hintColor, errorColor, primaryIconTheme, accentIconTheme, iconTheme, platform, typography, defaultTextTheme, defaultPrimaryTextTheme, defaultAccentTextTheme, textTheme, primaryTextTheme, accentTextTheme, materialTapTargetSize, buttonColor, focusColor, hoverColor, disabledColor, highlightColor, splashColor, chipTheme, _null = null;
      if (brightness == null)
        _brightness = _null;
      else
        _brightness = brightness;
      if (_brightness == null)
        _brightness = C.Brightness_1;
      isDark = _brightness === C.Brightness_0;
      visualDensity = X.VisualDensity_adaptivePlatformDensity();
      if (primarySwatch == null)
        primarySwatch = C.MaterialColor_Map_JNwaj_4280391411;
      if (isDark) {
        t1 = C.Map_HFpTk.$index(0, 900);
        t1.toString;
        primaryColor = t1;
      } else
        primaryColor = primarySwatch;
      primaryColorBrightness = X.ThemeData_estimateBrightnessForColor(primaryColor);
      if (isDark) {
        t1 = C.Map_HFpTk.$index(0, 500);
        t1.toString;
        primaryColorLight = t1;
      } else {
        t1 = primarySwatch._swatch.$index(0, 100);
        t1.toString;
        primaryColorLight = t1;
      }
      if (isDark)
        primaryColorDark = C.Color_4278190080;
      else {
        t1 = primarySwatch._swatch.$index(0, 700);
        t1.toString;
        primaryColorDark = t1;
      }
      primaryIsDark = primaryColorBrightness === C.Brightness_0;
      if (isDark) {
        t1 = C.Map_iTYZn.$index(0, 200);
        t1.toString;
        toggleableActiveColor = t1;
      } else {
        t1 = primarySwatch._swatch.$index(0, 600);
        t1.toString;
        toggleableActiveColor = t1;
      }
      if (isDark) {
        t1 = C.Map_iTYZn.$index(0, 200);
        t1.toString;
        accentColor = t1;
      } else {
        t1 = primarySwatch._swatch.$index(0, 500);
        t1.toString;
        accentColor = t1;
      }
      accentColorBrightness = X.ThemeData_estimateBrightnessForColor(accentColor);
      accentIsDark = accentColorBrightness === C.Brightness_0;
      if (isDark) {
        t1 = C.Map_HFpTk.$index(0, 850);
        t1.toString;
        canvasColor = t1;
      } else {
        t1 = C.Map_HFpTk.$index(0, 50);
        t1.toString;
        canvasColor = t1;
      }
      if (isDark) {
        t1 = C.Map_HFpTk.$index(0, 800);
        t1.toString;
        bottomAppBarColor = t1;
      } else
        bottomAppBarColor = C.Color_4294967295;
      if (isDark) {
        t1 = C.Map_HFpTk.$index(0, 800);
        t1.toString;
        cardColor = t1;
      } else
        cardColor = C.Color_4294967295;
      dividerColor = isDark ? C.Color_536870911 : C.Color_520093696;
      primaryIsDark0 = X.ThemeData_estimateBrightnessForColor(primarySwatch) === C.Brightness_0;
      t1 = X.ThemeData_estimateBrightnessForColor(accentColor);
      if (isDark) {
        t2 = C.Map_iTYZn.$index(0, 700);
        t2.toString;
      } else {
        t2 = primarySwatch._swatch.$index(0, 700);
        t2.toString;
      }
      if (isDark) {
        t3 = C.Map_HFpTk.$index(0, 700);
        t3.toString;
      } else {
        t3 = primarySwatch._swatch.$index(0, 200);
        t3.toString;
      }
      t4 = C.Map_JNc9P.$index(0, 700);
      t4.toString;
      t5 = primaryIsDark0 ? C.Color_4294967295 : C.Color_4278190080;
      t1 = t1 === C.Brightness_0 ? C.Color_4294967295 : C.Color_4278190080;
      t6 = isDark ? C.Color_4294967295 : C.Color_4278190080;
      t7 = primaryIsDark0 ? C.Color_4294967295 : C.Color_4278190080;
      colorScheme = new A.ColorScheme(primarySwatch, primaryColorDark, accentColor, t2, cardColor, t3, t4, t5, t1, t6, t7, isDark ? C.Color_4278190080 : C.Color_4294967295, _brightness);
      t1 = C.Map_HFpTk.$index(0, 100);
      t1.toString;
      selectedRowColor = t1;
      unselectedWidgetColor = isDark ? C.Color_3019898879 : C.Color_2315255808;
      if (isDark) {
        t1 = C.Map_HFpTk.$index(0, 700);
        t1.toString;
        secondaryHeaderColor = t1;
      } else {
        t1 = primarySwatch._swatch.$index(0, 50);
        t1.toString;
        secondaryHeaderColor = t1;
      }
      if (isDark)
        textSelectionColor = accentColor;
      else {
        t1 = primarySwatch._swatch.$index(0, 200);
        t1.toString;
        textSelectionColor = t1;
      }
      if (isDark) {
        t1 = C.Map_iTYZn.$index(0, 400);
        t1.toString;
        textSelectionHandleColor = t1;
      } else {
        t1 = primarySwatch._swatch.$index(0, 300);
        t1.toString;
        textSelectionHandleColor = t1;
      }
      if (isDark) {
        t1 = C.Map_HFpTk.$index(0, 700);
        t1.toString;
        backgroundColor = t1;
      } else {
        t1 = primarySwatch._swatch.$index(0, 200);
        t1.toString;
        backgroundColor = t1;
      }
      if (isDark) {
        t1 = C.Map_HFpTk.$index(0, 800);
        t1.toString;
        dialogBackgroundColor = t1;
      } else
        dialogBackgroundColor = C.Color_4294967295;
      indicatorColor = accentColor.$eq(0, primaryColor) ? C.Color_4294967295 : accentColor;
      hintColor = isDark ? C.Color_2583691263 : P.Color$fromARGB(153, 0, 0, 0);
      t1 = C.Map_JNc9P.$index(0, 700);
      t1.toString;
      errorColor = t1;
      primaryIconTheme = primaryIsDark ? C.IconThemeData_Color_4294967295_null_null : C.IconThemeData_Color_4278190080_null_null;
      accentIconTheme = accentIsDark ? C.IconThemeData_Color_4294967295_null_null : C.IconThemeData_Color_4278190080_null_null;
      iconTheme = isDark ? C.IconThemeData_Color_4294967295_null_null : C.IconThemeData_Color_3707764736_null_null;
      platform = U.defaultTargetPlatform();
      platform = platform;
      typography = U.Typography_Typography$material2014(platform);
      defaultTextTheme = isDark ? typography.white : typography.black;
      defaultPrimaryTextTheme = primaryIsDark ? typography.white : typography.black;
      defaultAccentTextTheme = accentIsDark ? typography.white : typography.black;
      textTheme = defaultTextTheme.merge$1(_null);
      primaryTextTheme = defaultPrimaryTextTheme.merge$1(_null);
      accentTextTheme = defaultAccentTextTheme.merge$1(_null);
      switch (platform) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_2:
          materialTapTargetSize = C.MaterialTapTargetSize_0;
          break;
        case C.TargetPlatform_3:
        case C.TargetPlatform_4:
        case C.TargetPlatform_5:
          materialTapTargetSize = C.MaterialTapTargetSize_1;
          break;
        default:
          materialTapTargetSize = _null;
      }
      if (isDark) {
        t1 = primarySwatch._swatch.$index(0, 600);
        t1.toString;
        buttonColor = t1;
      } else {
        t1 = C.Map_HFpTk.$index(0, 300);
        t1.toString;
        buttonColor = t1;
      }
      focusColor = isDark ? P.Color$fromARGB(31, 255, 255, 255) : P.Color$fromARGB(31, 0, 0, 0);
      hoverColor = isDark ? P.Color$fromARGB(10, 255, 255, 255) : P.Color$fromARGB(10, 0, 0, 0);
      disabledColor = isDark ? C.Color_1660944383 : C.Color_1627389952;
      highlightColor = isDark ? C.Color_1087163596 : C.Color_1723645116;
      splashColor = isDark ? C.Color_1087163596 : C.Color_1724434632;
      if (isDark) {
        t1 = C.Map_iTYZn.$index(0, 200);
        t1.toString;
      } else
        t1 = primaryColor;
      t2 = textTheme.bodyText1;
      t2.toString;
      chipTheme = K.ChipThemeData_ChipThemeData$fromDefaults(colorScheme.brightness, t2, t1);
      return X.ThemeData$raw(accentColor, accentColorBrightness, accentIconTheme, accentTextTheme, C.AppBarTheme_IEl, false, backgroundColor, C.MaterialBannerThemeData_null_null_null_null, bottomAppBarColor, C.BottomAppBarTheme_null_null_null, C.BottomNavigationBarThemeData_gg4, C.BottomSheetThemeData_M2D, C.ButtonBarThemeData_A0t, buttonColor, new M.ButtonThemeData(buttonColor, _null, focusColor, hoverColor, _null, _null, colorScheme, materialTapTargetSize), canvasColor, cardColor, C.CardTheme_hKX, C.CheckboxThemeData_EkK, chipTheme, colorScheme, _null, C.Color_4282549748, C.DataTableThemeData_SL9, dialogBackgroundColor, C.DialogTheme_maI, disabledColor, dividerColor, C.DividerThemeData_Tnu, C.ElevatedButtonThemeData_null, errorColor, false, C.FloatingActionButtonThemeData_IWY, focusColor, highlightColor, hintColor, hoverColor, iconTheme, indicatorColor, C.C_InputDecorationTheme, materialTapTargetSize, C.NavigationRailThemeData_U06, C.OutlinedButtonThemeData_null, C.C_PageTransitionsTheme, platform, C.PopupMenuThemeData_XJe, primaryColor, primaryColorBrightness, primaryColorDark, primaryColorLight, primaryIconTheme, primaryTextTheme, C.RadioThemeData_gDe, canvasColor, C.ScrollbarThemeData_I7P, secondaryHeaderColor, selectedRowColor, C.Color_4278190080, C.SliderThemeData_Q5Z, C.SnackBarThemeData_gc6, splashColor, C.C__InkSplashFactory, C.SwitchThemeData_v9F, C.TabBarTheme_Srx, C.TextButtonThemeData_null, textSelectionColor, textSelectionHandleColor, C.TextSelectionThemeData_null_null_null, textTheme, C.TimePickerThemeData_10O, C.ToggleButtonsThemeData_UsI, toggleableActiveColor, C.TooltipThemeData_kSE, typography, unselectedWidgetColor, true, visualDensity);
    },
    ThemeData$raw: function(accentColor, accentColorBrightness, accentIconTheme, accentTextTheme, appBarTheme, applyElevationOverlayColor, backgroundColor, bannerTheme, bottomAppBarColor, bottomAppBarTheme, bottomNavigationBarTheme, bottomSheetTheme, buttonBarTheme, buttonColor, buttonTheme, canvasColor, cardColor, cardTheme, checkboxTheme, chipTheme, colorScheme, cupertinoOverrideTheme, cursorColor, dataTableTheme, dialogBackgroundColor, dialogTheme, disabledColor, dividerColor, dividerTheme, elevatedButtonTheme, errorColor, fixTextFieldOutlineLabel, floatingActionButtonTheme, focusColor, highlightColor, hintColor, hoverColor, iconTheme, indicatorColor, inputDecorationTheme, materialTapTargetSize, navigationRailTheme, outlinedButtonTheme, pageTransitionsTheme, platform, popupMenuTheme, primaryColor, primaryColorBrightness, primaryColorDark, primaryColorLight, primaryIconTheme, primaryTextTheme, radioTheme, scaffoldBackgroundColor, scrollbarTheme, secondaryHeaderColor, selectedRowColor, shadowColor, sliderTheme, snackBarTheme, splashColor, splashFactory, switchTheme, tabBarTheme, textButtonTheme, textSelectionColor, textSelectionHandleColor, textSelectionTheme, textTheme, timePickerTheme, toggleButtonsTheme, toggleableActiveColor, tooltipTheme, typography, unselectedWidgetColor, useTextSelectionTheme, visualDensity) {
      return new X.ThemeData(visualDensity, primaryColor, primaryColorBrightness, primaryColorLight, primaryColorDark, canvasColor, shadowColor, accentColor, accentColorBrightness, scaffoldBackgroundColor, bottomAppBarColor, cardColor, dividerColor, focusColor, hoverColor, highlightColor, splashColor, splashFactory, selectedRowColor, unselectedWidgetColor, disabledColor, buttonTheme, toggleButtonsTheme, buttonColor, secondaryHeaderColor, textSelectionColor, cursorColor, textSelectionHandleColor, backgroundColor, dialogBackgroundColor, indicatorColor, hintColor, errorColor, toggleableActiveColor, textTheme, primaryTextTheme, accentTextTheme, inputDecorationTheme, iconTheme, primaryIconTheme, accentIconTheme, sliderTheme, tabBarTheme, tooltipTheme, cardTheme, chipTheme, platform, materialTapTargetSize, false, pageTransitionsTheme, appBarTheme, scrollbarTheme, bottomAppBarTheme, colorScheme, snackBarTheme, dialogTheme, floatingActionButtonTheme, navigationRailTheme, typography, cupertinoOverrideTheme, bottomSheetTheme, popupMenuTheme, bannerTheme, dividerTheme, buttonBarTheme, bottomNavigationBarTheme, timePickerTheme, textButtonTheme, elevatedButtonTheme, outlinedButtonTheme, textSelectionTheme, dataTableTheme, checkboxTheme, radioTheme, switchTheme, false, true);
    },
    ThemeData_ThemeData$fallback: function() {
      return X.ThemeData_ThemeData(C.Brightness_1, null);
    },
    ThemeData_localize: function(baseTheme, localTextGeometry) {
      return $.$get$ThemeData__localizedThemeDataCache().putIfAbsent$2(0, new X._IdentityThemeDataCacheKey(baseTheme, localTextGeometry), new X.ThemeData_localize_closure(baseTheme, localTextGeometry));
    },
    ThemeData_estimateBrightnessForColor: function(color) {
      var t1 = 0.2126 * P.Color__linearizeColorComponent((color.get$value(color) >>> 16 & 255) / 255) + 0.7152 * P.Color__linearizeColorComponent((color.get$value(color) >>> 8 & 255) / 255) + 0.0722 * P.Color__linearizeColorComponent((color.get$value(color) & 255) / 255) + 0.05;
      if (t1 * t1 > 0.15)
        return C.Brightness_1;
      return C.Brightness_0;
    },
    VisualDensity_adaptivePlatformDensity: function() {
      switch (U.defaultTargetPlatform()) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_2:
        case C.TargetPlatform_1:
          break;
        case C.TargetPlatform_3:
        case C.TargetPlatform_4:
        case C.TargetPlatform_5:
          return C.VisualDensity_m2_m2;
      }
      return C.VisualDensity_0_0;
    },
    MaterialTapTargetSize: function MaterialTapTargetSize(t0) {
      this._theme_data$_name = t0;
    },
    ThemeData: function ThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76) {
      var _ = this;
      _.visualDensity = t0;
      _.primaryColor = t1;
      _.primaryColorBrightness = t2;
      _.primaryColorLight = t3;
      _.primaryColorDark = t4;
      _.canvasColor = t5;
      _.shadowColor = t6;
      _.accentColor = t7;
      _.accentColorBrightness = t8;
      _.scaffoldBackgroundColor = t9;
      _.bottomAppBarColor = t10;
      _.cardColor = t11;
      _.dividerColor = t12;
      _.focusColor = t13;
      _.hoverColor = t14;
      _.highlightColor = t15;
      _.splashColor = t16;
      _.splashFactory = t17;
      _.selectedRowColor = t18;
      _.unselectedWidgetColor = t19;
      _.disabledColor = t20;
      _.buttonTheme = t21;
      _.toggleButtonsTheme = t22;
      _.buttonColor = t23;
      _.secondaryHeaderColor = t24;
      _.textSelectionColor = t25;
      _.cursorColor = t26;
      _.textSelectionHandleColor = t27;
      _.backgroundColor = t28;
      _.dialogBackgroundColor = t29;
      _.indicatorColor = t30;
      _.hintColor = t31;
      _.errorColor = t32;
      _.toggleableActiveColor = t33;
      _.textTheme = t34;
      _.primaryTextTheme = t35;
      _.accentTextTheme = t36;
      _.inputDecorationTheme = t37;
      _.iconTheme = t38;
      _.primaryIconTheme = t39;
      _.accentIconTheme = t40;
      _.sliderTheme = t41;
      _.tabBarTheme = t42;
      _.tooltipTheme = t43;
      _.cardTheme = t44;
      _.chipTheme = t45;
      _.platform = t46;
      _.materialTapTargetSize = t47;
      _.applyElevationOverlayColor = t48;
      _.pageTransitionsTheme = t49;
      _.appBarTheme = t50;
      _.scrollbarTheme = t51;
      _.bottomAppBarTheme = t52;
      _.colorScheme = t53;
      _.snackBarTheme = t54;
      _.dialogTheme = t55;
      _.floatingActionButtonTheme = t56;
      _.navigationRailTheme = t57;
      _.typography = t58;
      _.cupertinoOverrideTheme = t59;
      _.bottomSheetTheme = t60;
      _.popupMenuTheme = t61;
      _.bannerTheme = t62;
      _.dividerTheme = t63;
      _.buttonBarTheme = t64;
      _.bottomNavigationBarTheme = t65;
      _.timePickerTheme = t66;
      _.textButtonTheme = t67;
      _.elevatedButtonTheme = t68;
      _.outlinedButtonTheme = t69;
      _.textSelectionTheme = t70;
      _.dataTableTheme = t71;
      _.checkboxTheme = t72;
      _.radioTheme = t73;
      _.switchTheme = t74;
      _.fixTextFieldOutlineLabel = t75;
      _.useTextSelectionTheme = t76;
    },
    ThemeData_localize_closure: function ThemeData_localize_closure(t0, t1) {
      this.baseTheme = t0;
      this.localTextGeometry = t1;
    },
    MaterialBasedCupertinoThemeData: function MaterialBasedCupertinoThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._materialTheme = t0;
      _._cupertinoOverrideTheme = t1;
      _._defaults = t2;
      _.brightness = t3;
      _.primaryColor = t4;
      _.primaryContrastingColor = t5;
      _.textTheme = t6;
      _.barBackgroundColor = t7;
      _.scaffoldBackgroundColor = t8;
    },
    _IdentityThemeDataCacheKey: function _IdentityThemeDataCacheKey(t0, t1) {
      this.baseTheme = t0;
      this.localTextGeometry = t1;
    },
    _FifoCache: function _FifoCache(t0, t1, t2) {
      this._cache = t0;
      this._maximumSize = t1;
      this.$ti = t2;
    },
    VisualDensity: function VisualDensity(t0, t1) {
      this.horizontal = t0;
      this.vertical = t1;
    },
    _ThemeData_Object_Diagnosticable: function _ThemeData_Object_Diagnosticable() {
    },
    _VisualDensity_Object_Diagnosticable: function _VisualDensity_Object_Diagnosticable() {
    },
    CircleBorder: function CircleBorder(t0) {
      this.side = t0;
    },
    RoundedRectangleBorder: function RoundedRectangleBorder(t0, t1) {
      this.borderRadius = t0;
      this.side = t1;
    },
    _RoundedRectangleToCircleBorder: function _RoundedRectangleToCircleBorder(t0, t1, t2) {
      this.borderRadius = t0;
      this.circleness = t1;
      this.side = t2;
    },
    SystemChrome_setApplicationSwitcherDescription: function(description) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemChrome_setApplicationSwitcherDescription = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(C.OptionalMethodChannel_cWd.invokeMethod$1$2(string$.System, P.LinkedHashMap_LinkedHashMap$_literal(["label", description.label, "primaryColor", description.primaryColor], type$.String, type$.dynamic), type$.void), $async$SystemChrome_setApplicationSwitcherDescription);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$SystemChrome_setApplicationSwitcherDescription, $async$completer);
    },
    ApplicationSwitcherDescription: function ApplicationSwitcherDescription(t0, t1) {
      this.label = t0;
      this.primaryColor = t1;
    },
    TextSelection$: function(baseOffset, extentOffset) {
      var t1 = baseOffset < extentOffset,
        t2 = t1 ? extentOffset : baseOffset;
      return new X.TextSelection(baseOffset, extentOffset, t1 ? baseOffset : extentOffset, t2);
    },
    TextSelection: function TextSelection(t0, t1, t2, t3) {
      var _ = this;
      _.baseOffset = t0;
      _.extentOffset = t1;
      _.start = t2;
      _.end = t3;
    },
    IconData: function IconData() {
    },
    ModalBarrier: function ModalBarrier(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.dismissible = t1;
      _.barrierSemanticsDismissible = t2;
      _.semanticsLabel = t3;
      _.key = t4;
    },
    ModalBarrier_build_handleDismiss: function ModalBarrier_build_handleDismiss(t0) {
      this.context = t0;
    },
    ModalBarrier_build_closure: function ModalBarrier_build_closure(t0, t1) {
      this.$this = t0;
      this.handleDismiss = t1;
    },
    _AnyTapGestureRecognizer: function _AnyTapGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onAnyTapUp = null;
      _._wonArenaForPrimaryPointer = _._sentTapDown = false;
      _._up = _._down = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _.state = t2;
      _.initialPosition = _.primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _._kindFilter = t6;
      _._pointerToKind = t7;
    },
    _ModalBarrierSemanticsDelegate: function _ModalBarrierSemanticsDelegate(t0) {
      this.onDismiss = t0;
    },
    _AnyTapGestureRecognizerFactory: function _AnyTapGestureRecognizerFactory(t0) {
      this.onAnyTapUp = t0;
    },
    _ModalBarrierGestureDetector: function _ModalBarrierGestureDetector(t0, t1, t2) {
      this.child = t0;
      this.onDismiss = t1;
      this.key = t2;
    },
    OverlayEntry$: function(builder, maintainState) {
      return new X.OverlayEntry(builder, maintainState, new N.LabeledGlobalKey(null, type$.LabeledGlobalKey__OverlayEntryWidgetState), new P.LinkedList(type$.LinkedList__ListenerEntry));
    },
    OverlayEntry: function OverlayEntry(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _._opaque = false;
      _._maintainState = t1;
      _._mounted = false;
      _._overlay = null;
      _._key = t2;
      _.ChangeNotifier__listeners = t3;
    },
    OverlayEntry_remove_closure: function OverlayEntry_remove_closure(t0) {
      this.overlay = t0;
    },
    _OverlayEntryWidget: function _OverlayEntryWidget(t0, t1, t2) {
      this.entry = t0;
      this.tickerEnabled = t1;
      this.key = t2;
    },
    _OverlayEntryWidgetState: function _OverlayEntryWidgetState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _OverlayEntryWidgetState__markNeedsBuild_closure: function _OverlayEntryWidgetState__markNeedsBuild_closure() {
    },
    Overlay: function Overlay(t0, t1) {
      this.initialEntries = t0;
      this.key = t1;
    },
    OverlayState: function OverlayState(t0, t1, t2) {
      var _ = this;
      _._entries = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    OverlayState_insert_closure: function OverlayState_insert_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entry = t3;
    },
    OverlayState_insertAll_closure: function OverlayState_insertAll_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entries = t3;
    },
    OverlayState_rearrange_closure: function OverlayState_rearrange_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.newEntriesList = t1;
      _.old = t2;
      _.below = t3;
      _.above = t4;
    },
    OverlayState__markDirty_closure: function OverlayState__markDirty_closure() {
    },
    OverlayState__didChangeEntryOpacity_closure: function OverlayState__didChangeEntryOpacity_closure() {
    },
    _Theatre: function _Theatre(t0, t1, t2, t3) {
      var _ = this;
      _.skipCount = t0;
      _.clipBehavior = t1;
      _.children = t2;
      _.key = t3;
    },
    _TheatreElement: function _TheatreElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__MultiChildRenderObjectElement__children = null;
      _._forgottenChildren = t0;
      _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _._cachedHash = t1;
      _.__Element__depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._lifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    _RenderTheatre: function _RenderTheatre(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._hasVisualOverflow = false;
      _._overlay$_resolvedAlignment = null;
      _._overlay$_textDirection = t0;
      _._overlay$_skipCount = t1;
      _._overlay$_clipBehavior = t2;
      _._clipRectLayer = null;
      _.ContainerRenderObjectMixin__childCount = t3;
      _.ContainerRenderObjectMixin__firstChild = t4;
      _.ContainerRenderObjectMixin__lastChild = t5;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderTheatre_hitTestChildren_closure: function _RenderTheatre_hitTestChildren_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.childParentData = t2;
    },
    _OverlayState_State_TickerProviderStateMixin: function _OverlayState_State_TickerProviderStateMixin() {
    },
    __RenderTheatre_RenderBox_ContainerRenderObjectMixin: function __RenderTheatre_RenderBox_ContainerRenderObjectMixin() {
    },
    KeySet__computeHashCode: function(keys) {
      var t1, h1, h2, sortedHashes,
        $length = keys._collection$_length,
        iterator = new P._HashSetIterator(keys, keys._computeElements$0());
      iterator.moveNext$0();
      t1 = H._instanceType(iterator)._precomputed1;
      h1 = J.get$hashCode$(t1._as(iterator._collection$_current));
      if ($length === 1)
        return h1;
      iterator.moveNext$0();
      h2 = J.get$hashCode$(t1._as(iterator._collection$_current));
      if ($length === 2)
        return h1 < h2 ? P.hashValues(h1, h2, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd) : P.hashValues(h2, h1, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
      sortedHashes = $length === 3 ? $.KeySet__tempHashStore3 : $.KeySet__tempHashStore4;
      sortedHashes[0] = h1;
      sortedHashes[1] = h2;
      iterator.moveNext$0();
      sortedHashes[2] = J.get$hashCode$(t1._as(iterator._collection$_current));
      if ($length === 4) {
        iterator.moveNext$0();
        sortedHashes[3] = J.get$hashCode$(t1._as(iterator._collection$_current));
      }
      C.JSArray_methods.sort$0(sortedHashes);
      return P.hashList(sortedHashes);
    },
    LogicalKeySet$: function(key1, key2, key3) {
      var t1 = type$.LogicalKeyboardKey,
        t2 = P.HashSet_HashSet(t1);
      t2.add$1(0, key1);
      t2 = new X.LogicalKeySet(t2);
      t2.KeySet$4(key1, key2, key3, null, {}, t1);
      return t2;
    },
    ShortcutManager$: function() {
      return new X.ShortcutManager(C.Map_empty4, new P.LinkedList(type$.LinkedList__ListenerEntry));
    },
    KeySet: function KeySet() {
    },
    LogicalKeySet: function LogicalKeySet(t0) {
      this._shortcuts$_keys = t0;
      this.__KeySet_hashCode = null;
    },
    ShortcutManager: function ShortcutManager(t0, t1) {
      this._shortcuts = t0;
      this.ChangeNotifier__listeners = t1;
    },
    Shortcuts: function Shortcuts(t0, t1, t2, t3) {
      var _ = this;
      _.shortcuts = t0;
      _.child = t1;
      _.debugLabel = t2;
      _.key = t3;
    },
    _ShortcutsState: function _ShortcutsState(t0) {
      var _ = this;
      _._widget = _._internalManager = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _ShortcutsMarker: function _ShortcutsMarker(t0, t1, t2) {
      this.notifier = t0;
      this.child = t1;
      this.key = t2;
    },
    _LogicalKeySet_KeySet_Diagnosticable: function _LogicalKeySet_KeySet_Diagnosticable() {
    },
    _ShortcutManager_ChangeNotifier_Diagnosticable: function _ShortcutManager_ChangeNotifier_Diagnosticable() {
    }
  },
  G = {
    AnimationController$: function(debugLabel, duration, reverseDuration, vsync) {
      var t1 = new G.AnimationController(debugLabel, duration, reverseDuration, C._AnimationDirection_0, C.AnimationStatus_0, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      t1._ticker = vsync.createTicker$1(t1.get$_animation_controller$_tick());
      t1._internalSetValue$1(0);
      return t1;
    },
    _AnimationDirection: function _AnimationDirection(t0) {
      this._animation_controller$_name = t0;
    },
    AnimationBehavior: function AnimationBehavior(t0) {
      this._animation_controller$_name = t0;
    },
    AnimationController: function AnimationController(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.debugLabel = t0;
      _.duration = t1;
      _.reverseDuration = t2;
      _.__AnimationController__value = _._simulation = _._ticker = null;
      _._direction = t3;
      _.__AnimationController__status = null;
      _._lastReportedStatus = t4;
      _.AnimationLocalStatusListenersMixin__statusListeners = t5;
      _.AnimationLocalListenersMixin__listeners = t6;
    },
    _InterpolationSimulation: function _InterpolationSimulation(t0, t1, t2, t3) {
      var _ = this;
      _._durationInSeconds = t0;
      _._begin = t1;
      _._animation_controller$_end = t2;
      _._curve = t3;
    },
    _AnimationController_Animation_AnimationEagerListenerMixin: function _AnimationController_Animation_AnimationEagerListenerMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    WriteBuffer$: function() {
      var t1 = new Uint8Array(0),
        t2 = new DataView(new ArrayBuffer(8));
      t1 = new G.WriteBuffer(new E.Uint8Buffer(t1, 0), t2);
      t1.__WriteBuffer__eightBytesAsList = H.NativeUint8List_NativeUint8List$view(t2.buffer, 0, null);
      return t1;
    },
    WriteBuffer: function WriteBuffer(t0, t1) {
      this._serialization$_buffer = t0;
      this._eightBytes = t1;
      this.__WriteBuffer__eightBytesAsList = null;
    },
    ReadBuffer: function ReadBuffer(t0) {
      this.data = t0;
      this._serialization$_position = 0;
    },
    PointerSignalResolver: function PointerSignalResolver() {
      this._currentEvent = this._firstRegisteredCallback = null;
    },
    DividerThemeData: function DividerThemeData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.space = t1;
      _.thickness = t2;
      _.indent = t3;
      _.endIndent = t4;
    },
    _DividerThemeData_Object_Diagnosticable: function _DividerThemeData_Object_Diagnosticable() {
    },
    RenderComparison: function RenderComparison(t0, t1) {
      this.index = t0;
      this._basic_types$_name = t1;
    },
    AxisDirection: function AxisDirection(t0) {
      this._basic_types$_name = t0;
    },
    combineSemanticsInfo: function(infoList) {
      var t1, workingLabel, workingText, _i, info, t2, t3, _null = null,
        combined = H.setRuntimeTypeInfo([], type$.JSArray_InlineSpanSemanticsInformation);
      for (t1 = infoList.length, workingLabel = _null, workingText = "", _i = 0; _i < infoList.length; infoList.length === t1 || (0, H.throwConcurrentModificationError)(infoList), ++_i) {
        info = infoList[_i];
        if (info.requiresOwnNode) {
          t2 = workingLabel == null ? workingText : workingLabel;
          combined.push(new G.InlineSpanSemanticsInformation(workingText, t2, _null, false));
          combined.push(info);
          workingLabel = _null;
          workingText = "";
        } else {
          t2 = info.text;
          workingText += t2;
          if (workingLabel == null)
            workingLabel = "";
          t3 = info.semanticsLabel;
          workingLabel = t3 != null ? workingLabel + t3 : workingLabel + t2;
        }
      }
      combined.push(new G.InlineSpanSemanticsInformation(workingText, workingLabel, _null, false));
      return combined;
    },
    Accumulator: function Accumulator() {
      this._inline_span$_value = 0;
    },
    InlineSpanSemanticsInformation: function InlineSpanSemanticsInformation(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.semanticsLabel = t1;
      _.recognizer = t2;
      _.requiresOwnNode = t3;
    },
    InlineSpan: function InlineSpan() {
    },
    InlineSpan_getSpanForPosition_closure: function InlineSpan_getSpanForPosition_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.offset = t2;
    },
    KeyboardKey: function KeyboardKey() {
    },
    LogicalKeyboardKey: function LogicalKeyboardKey(t0) {
      this.keyId = t0;
    },
    PhysicalKeyboardKey: function PhysicalKeyboardKey(t0) {
      this.usbHidUsage = t0;
    },
    _KeyboardKey_Object_Diagnosticable: function _KeyboardKey_Object_Diagnosticable() {
    },
    DecorationTween: function DecorationTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    BorderRadiusTween: function BorderRadiusTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    TextStyleTween: function TextStyleTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    ImplicitlyAnimatedWidget: function ImplicitlyAnimatedWidget() {
    },
    ImplicitlyAnimatedWidgetState: function ImplicitlyAnimatedWidgetState() {
    },
    ImplicitlyAnimatedWidgetState_initState_closure: function ImplicitlyAnimatedWidgetState_initState_closure(t0) {
      this.$this = t0;
    },
    ImplicitlyAnimatedWidgetState_didUpdateWidget_closure: function ImplicitlyAnimatedWidgetState_didUpdateWidget_closure(t0) {
      this.$this = t0;
    },
    ImplicitlyAnimatedWidgetState__constructTweens_closure: function ImplicitlyAnimatedWidgetState__constructTweens_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    AnimatedWidgetBaseState: function AnimatedWidgetBaseState() {
    },
    AnimatedWidgetBaseState__handleAnimationChanged_closure: function AnimatedWidgetBaseState__handleAnimationChanged_closure() {
    },
    AnimatedDefaultTextStyle: function AnimatedDefaultTextStyle(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.style = t1;
      _.curve = t2;
      _.duration = t3;
      _.onEnd = t4;
      _.key = t5;
    },
    _AnimatedDefaultTextStyleState: function _AnimatedDefaultTextStyleState(t0, t1) {
      var _ = this;
      _.__ImplicitlyAnimatedWidgetState__animation = _.__ImplicitlyAnimatedWidgetState__controller = _._implicit_animations$_style = null;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _AnimatedDefaultTextStyleState_forEachTween_closure: function _AnimatedDefaultTextStyleState_forEachTween_closure() {
    },
    AnimatedPhysicalModel: function AnimatedPhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.clipBehavior = t2;
      _.borderRadius = t3;
      _.elevation = t4;
      _.color = t5;
      _.animateColor = t6;
      _.shadowColor = t7;
      _.curve = t8;
      _.duration = t9;
      _.onEnd = t10;
      _.key = t11;
    },
    _AnimatedPhysicalModelState: function _AnimatedPhysicalModelState(t0, t1) {
      var _ = this;
      _.__ImplicitlyAnimatedWidgetState__animation = _.__ImplicitlyAnimatedWidgetState__controller = _._implicit_animations$_shadowColor = _._implicit_animations$_color = _._implicit_animations$_elevation = _._borderRadius = null;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _AnimatedPhysicalModelState_forEachTween_closure: function _AnimatedPhysicalModelState_forEachTween_closure() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure0: function _AnimatedPhysicalModelState_forEachTween_closure0() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure1: function _AnimatedPhysicalModelState_forEachTween_closure1() {
    },
    _AnimatedPhysicalModelState_forEachTween_closure2: function _AnimatedPhysicalModelState_forEachTween_closure2() {
    },
    _ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin: function _ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin() {
    },
    _synthesiseDownButtons: function(buttons, kind) {
      switch (kind) {
        case C.PointerDeviceKind_1:
          return buttons;
        case C.PointerDeviceKind_0:
        case C.PointerDeviceKind_2:
        case C.PointerDeviceKind_3:
          return (buttons | 1) >>> 0;
        case C.PointerDeviceKind_4:
          return buttons === 0 ? 1 : buttons;
      }
    },
    PointerEventConverter_expand: function($async$data, $async$devicePixelRatio) {
      return P._makeSyncStarIterable(function() {
        var data = $async$data,
          devicePixelRatio = $async$devicePixelRatio;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, _i, datum, position, delta, radiusMinor, radiusMajor, radiusMin, radiusMax, timeStamp, kind, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
        return function $async$PointerEventConverter_expand($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = data.length, _i = 0;
              case 2:
                // for condition
                if (!(_i < data.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                datum = data[_i];
                position = new P.Offset(datum.physicalX / devicePixelRatio, datum.physicalY / devicePixelRatio);
                delta = new P.Offset(datum.physicalDeltaX / devicePixelRatio, datum.physicalDeltaY / devicePixelRatio);
                radiusMinor = datum.radiusMinor / devicePixelRatio;
                radiusMajor = datum.radiusMajor / devicePixelRatio;
                radiusMin = datum.radiusMin / devicePixelRatio;
                radiusMax = datum.radiusMax / devicePixelRatio;
                timeStamp = datum.timeStamp;
                kind = datum.kind;
                t2 = datum.signalKind;
                $async$goto = t2 == null || t2 === C.PointerSignalKind_0 ? 5 : 7;
                break;
              case 5:
                // then
              case 8:
                // switch
                switch (datum.change) {
                  case C.PointerChange_1:
                    // goto case
                    $async$goto = 10;
                    break;
                  case C.PointerChange_3:
                    // goto case
                    $async$goto = 11;
                    break;
                  case C.PointerChange_4:
                    // goto case
                    $async$goto = 12;
                    break;
                  case C.PointerChange_5:
                    // goto case
                    $async$goto = 13;
                    break;
                  case C.PointerChange_6:
                    // goto case
                    $async$goto = 14;
                    break;
                  case C.PointerChange_0:
                    // goto case
                    $async$goto = 15;
                    break;
                  case C.PointerChange_2:
                    // goto case
                    $async$goto = 16;
                    break;
                  default:
                    // goto after switch
                    $async$goto = 9;
                    break;
                }
                break;
              case 10:
                // case
                t2 = datum.device;
                t3 = datum.pressureMin;
                t4 = datum.pressureMax;
                $async$goto = 17;
                return F.PointerAddedEvent$(t2, datum.distance, datum.distanceMax, 0, kind, false, datum.orientation, position, t4, t3, radiusMax, radiusMin, datum.tilt, timeStamp);
              case 17:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 11:
                // case
                t2 = datum.device;
                t3 = datum.buttons;
                t4 = datum.pressureMin;
                t5 = datum.pressureMax;
                t6 = datum.distance;
                t7 = datum.distanceMax;
                t8 = datum.size;
                t9 = datum.orientation;
                t10 = datum.tilt;
                $async$goto = 18;
                return F.PointerHoverEvent$(t3, delta, t2, t6, t7, 0, kind, false, t9, position, t5, t4, radiusMajor, radiusMax, radiusMin, radiusMinor, t8, datum.synthesized, t10, timeStamp);
              case 18:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 12:
                // case
                t2 = datum.pointerIdentifier;
                t3 = datum.device;
                t4 = G._synthesiseDownButtons(datum.buttons, kind);
                t5 = datum.pressure;
                t6 = datum.pressureMin;
                t7 = datum.pressureMax;
                t8 = datum.distanceMax;
                t9 = datum.size;
                $async$goto = 19;
                return F.PointerDownEvent$(t4, t3, t8, 0, kind, false, datum.orientation, t2, position, t5, t7, t6, radiusMajor, radiusMax, radiusMin, radiusMinor, t9, datum.tilt, timeStamp);
              case 19:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 13:
                // case
                t2 = datum.pointerIdentifier;
                t3 = datum.device;
                t4 = G._synthesiseDownButtons(datum.buttons, kind);
                t5 = datum.pressure;
                t6 = datum.pressureMin;
                t7 = datum.pressureMax;
                t8 = datum.distanceMax;
                t9 = datum.size;
                t10 = datum.orientation;
                t11 = datum.tilt;
                $async$goto = 20;
                return F.PointerMoveEvent$(t4, delta, t3, t8, 0, kind, false, t10, datum.platformData, t2, position, t5, t7, t6, radiusMajor, radiusMax, radiusMin, radiusMinor, t9, datum.synthesized, t11, timeStamp);
              case 20:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 14:
                // case
                t2 = datum.pointerIdentifier;
                t3 = datum.device;
                t4 = datum.buttons;
                t5 = datum.pressure;
                t6 = datum.pressureMin;
                t7 = datum.pressureMax;
                t8 = datum.distance;
                t9 = datum.distanceMax;
                t10 = datum.size;
                $async$goto = 21;
                return F.PointerUpEvent$(t4, t3, t8, t9, 0, kind, false, datum.orientation, t2, position, t5, t7, t6, radiusMajor, radiusMax, radiusMin, radiusMinor, t10, datum.tilt, timeStamp);
              case 21:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 15:
                // case
                t2 = datum.pointerIdentifier;
                t3 = datum.device;
                t4 = datum.buttons;
                t5 = datum.pressureMin;
                t6 = datum.pressureMax;
                t7 = datum.distance;
                t8 = datum.distanceMax;
                t9 = datum.size;
                $async$goto = 22;
                return F.PointerCancelEvent$(t4, t3, t7, t8, 0, kind, false, datum.orientation, t2, position, t6, t5, radiusMajor, radiusMax, radiusMin, radiusMinor, t9, datum.tilt, timeStamp);
              case 22:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 16:
                // case
                t2 = datum.device;
                t3 = datum.pressureMin;
                t4 = datum.pressureMax;
                $async$goto = 23;
                return F.PointerRemovedEvent$(t2, datum.distanceMax, 0, kind, false, position, t4, t3, radiusMax, radiusMin, timeStamp);
              case 23:
                // after yield
                // goto after switch
                $async$goto = 9;
                break;
              case 9:
                // after switch
                // goto join
                $async$goto = 6;
                break;
              case 7:
                // else
                t2.toString;
              case 24:
                // switch
                switch (t2) {
                  case C.PointerSignalKind_1:
                    // goto case
                    $async$goto = 26;
                    break;
                  case C.PointerSignalKind_0:
                    // goto case
                    $async$goto = 27;
                    break;
                  case C.PointerSignalKind_2:
                    // goto case
                    $async$goto = 28;
                    break;
                  default:
                    // goto after switch
                    $async$goto = 25;
                    break;
                }
                break;
              case 26:
                // case
                t2 = datum.scrollDeltaX;
                t3 = datum.scrollDeltaY;
                $async$goto = 29;
                return F.PointerScrollEvent$(datum.device, 0, kind, position, new P.Offset(t2 / devicePixelRatio, t3 / devicePixelRatio), timeStamp);
              case 29:
                // after yield
                // goto after switch
                $async$goto = 25;
                break;
              case 27:
                // case
                // goto after switch
                $async$goto = 25;
                break;
              case 28:
                // case
                // goto after switch
                $async$goto = 25;
                break;
              case 25:
                // after switch
              case 6:
                // join
              case 3:
                // for update
                data.length === t1 || (0, H.throwConcurrentModificationError)(data), ++_i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.PointerEvent);
    }
  },
  S = {
    ProxyAnimation$: function(animation) {
      var t1 = new S.ProxyAnimation(new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function), 0);
      t1._animations$_parent = animation;
      if (animation == null) {
        t1._status = C.AnimationStatus_0;
        t1._animations$_value = 0;
      }
      return t1;
    },
    CurvedAnimation$: function(curve, $parent, reverseCurve) {
      var t1 = new S.CurvedAnimation($parent, curve, reverseCurve);
      t1._updateCurveDirection$1($parent.get$status($parent));
      $parent.addStatusListener$1(t1.get$_updateCurveDirection());
      return t1;
    },
    _AlwaysCompleteAnimation: function _AlwaysCompleteAnimation() {
    },
    _AlwaysDismissedAnimation: function _AlwaysDismissedAnimation() {
    },
    AnimationWithParentMixin: function AnimationWithParentMixin() {
    },
    ProxyAnimation: function ProxyAnimation(t0, t1, t2) {
      var _ = this;
      _._animations$_parent = _._animations$_value = _._status = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t0;
      _.AnimationLocalListenersMixin__listeners = t1;
      _.AnimationLazyListenerMixin__listenerCounter = t2;
    },
    ReverseAnimation: function ReverseAnimation(t0, t1, t2) {
      this.parent = t0;
      this.AnimationLocalStatusListenersMixin__statusListeners = t1;
      this.AnimationLazyListenerMixin__listenerCounter = t2;
    },
    CurvedAnimation: function CurvedAnimation(t0, t1, t2) {
      var _ = this;
      _.parent = t0;
      _.curve = t1;
      _.reverseCurve = t2;
      _._curveDirection = null;
    },
    _TrainHoppingMode: function _TrainHoppingMode(t0) {
      this._animations$_name = t0;
    },
    TrainHoppingAnimation: function TrainHoppingAnimation(t0, t1, t2, t3, t4) {
      var _ = this;
      _._currentTrain = t0;
      _._nextTrain = t1;
      _._mode = null;
      _.onSwitchedTrain = t2;
      _._lastValue = _._lastStatus = null;
      _.AnimationLocalStatusListenersMixin__statusListeners = t3;
      _.AnimationLocalListenersMixin__listeners = t4;
    },
    _CurvedAnimation_Animation_AnimationWithParentMixin: function _CurvedAnimation_Animation_AnimationWithParentMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin() {
    },
    _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    _ReverseAnimation_Animation_AnimationLazyListenerMixin: function _ReverseAnimation_Animation_AnimationLazyListenerMixin() {
    },
    _ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin: function _ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin() {
    },
    _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    AnimationLazyListenerMixin: function AnimationLazyListenerMixin() {
    },
    AnimationEagerListenerMixin: function AnimationEagerListenerMixin() {
    },
    AnimationLocalListenersMixin: function AnimationLocalListenersMixin() {
    },
    AnimationLocalStatusListenersMixin: function AnimationLocalStatusListenersMixin() {
    },
    DragStartBehavior: function DragStartBehavior(t0) {
      this._recognizer$_name = t0;
    },
    GestureRecognizer: function GestureRecognizer() {
    },
    OneSequenceGestureRecognizer: function OneSequenceGestureRecognizer() {
    },
    GestureRecognizerState: function GestureRecognizerState(t0) {
      this._recognizer$_name = t0;
    },
    PrimaryPointerGestureRecognizer: function PrimaryPointerGestureRecognizer() {
    },
    PrimaryPointerGestureRecognizer_addAllowedPointer_closure: function PrimaryPointerGestureRecognizer_addAllowedPointer_closure(t0, t1) {
      this.$this = t0;
      this.event = t1;
    },
    OffsetPair: function OffsetPair(t0, t1) {
      this.local = t0;
      this.global = t1;
    },
    _GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin: function _GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin() {
    },
    MaterialApp_createMaterialHeroController: function() {
      return new T.HeroController(new S.MaterialApp_createMaterialHeroController_closure(), P.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroFlight));
    },
    ThemeMode: function ThemeMode(t0) {
      this._app0$_name = t0;
    },
    MaterialApp: function MaterialApp(t0, t1, t2) {
      this.title = t0;
      this.theme = t1;
      this.key = t2;
    },
    MaterialApp_createMaterialHeroController_closure: function MaterialApp_createMaterialHeroController_closure() {
    },
    MaterialScrollBehavior: function MaterialScrollBehavior() {
    },
    _MaterialAppState: function _MaterialAppState(t0) {
      var _ = this;
      _._widget = _.___MaterialAppState__heroController = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _MaterialAppState__buildWidgetApp_closure: function _MaterialAppState__buildWidgetApp_closure() {
    },
    FloatingActionButtonThemeData_lerp: function(a, b, t) {
      var t1 = P.Color_lerp(a.foregroundColor, b.foregroundColor, t),
        t2 = P.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t3 = P.Color_lerp(a.focusColor, b.focusColor, t),
        t4 = P.Color_lerp(a.hoverColor, b.hoverColor, t),
        t5 = P.Color_lerp(a.splashColor, b.splashColor, t),
        t6 = P.lerpDouble(a.elevation, b.elevation, t),
        t7 = P.lerpDouble(a.focusElevation, b.focusElevation, t),
        t8 = P.lerpDouble(a.hoverElevation, b.hoverElevation, t),
        t9 = P.lerpDouble(a.disabledElevation, b.disabledElevation, t),
        t10 = P.lerpDouble(a.highlightElevation, b.highlightElevation, t);
      return new S.FloatingActionButtonThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, Y.ShapeBorder_lerp(a.shape, b.shape, t));
    },
    FloatingActionButtonThemeData: function FloatingActionButtonThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.foregroundColor = t0;
      _.backgroundColor = t1;
      _.focusColor = t2;
      _.hoverColor = t3;
      _.splashColor = t4;
      _.elevation = t5;
      _.focusElevation = t6;
      _.hoverElevation = t7;
      _.disabledElevation = t8;
      _.highlightElevation = t9;
      _.shape = t10;
    },
    _FloatingActionButtonThemeData_Object_Diagnosticable: function _FloatingActionButtonThemeData_Object_Diagnosticable() {
    },
    ToggleButtonsThemeData_lerp: function(a, b, t) {
      var t1 = A.TextStyle_lerp(a.textStyle, b.textStyle, t),
        t2 = S.BoxConstraints_lerp(a.constraints, b.constraints, t),
        t3 = P.Color_lerp(a.color, b.color, t),
        t4 = P.Color_lerp(a.selectedColor, b.selectedColor, t),
        t5 = P.Color_lerp(a.disabledColor, b.disabledColor, t),
        t6 = P.Color_lerp(a.fillColor, b.fillColor, t),
        t7 = P.Color_lerp(a.focusColor, b.focusColor, t),
        t8 = P.Color_lerp(a.highlightColor, b.highlightColor, t),
        t9 = P.Color_lerp(a.hoverColor, b.hoverColor, t),
        t10 = P.Color_lerp(a.splashColor, b.splashColor, t),
        t11 = P.Color_lerp(a.borderColor, b.borderColor, t),
        t12 = P.Color_lerp(a.selectedBorderColor, b.selectedBorderColor, t),
        t13 = P.Color_lerp(a.disabledBorderColor, b.disabledBorderColor, t),
        t14 = K.BorderRadius_lerp(a.borderRadius, b.borderRadius, t);
      return new S.ToggleButtonsThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t10, t9, t11, t12, t13, P.lerpDouble(a.borderWidth, b.borderWidth, t), t14);
    },
    ToggleButtonsThemeData: function ToggleButtonsThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.textStyle = t0;
      _.constraints = t1;
      _.color = t2;
      _.selectedColor = t3;
      _.disabledColor = t4;
      _.fillColor = t5;
      _.focusColor = t6;
      _.highlightColor = t7;
      _.splashColor = t8;
      _.hoverColor = t9;
      _.borderColor = t10;
      _.selectedBorderColor = t11;
      _.disabledBorderColor = t12;
      _.borderWidth = t13;
      _.borderRadius = t14;
    },
    _ToggleButtonsThemeData_Object_Diagnosticable: function _ToggleButtonsThemeData_Object_Diagnosticable() {
    },
    BoxConstraints$tight: function(size) {
      var t1 = size._dx,
        t2 = size._dy;
      return new S.BoxConstraints(t1, t1, t2, t2);
    },
    BoxConstraints$tightFor: function(height, width) {
      var t3, t4,
        t1 = width == null,
        t2 = t1 ? 0 : width;
      t1 = t1 ? 1 / 0 : width;
      t3 = height == null;
      t4 = t3 ? 0 : height;
      return new S.BoxConstraints(t2, t1, t4, t3 ? 1 / 0 : height);
    },
    BoxConstraints_lerp: function(a, b, t) {
      var t2, t3, t4,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = a.minWidth;
      if (isFinite(t1)) {
        t1 = P.lerpDouble(t1, b.minWidth, t);
        t1.toString;
      } else
        t1 = 1 / 0;
      t2 = a.maxWidth;
      if (isFinite(t2)) {
        t2 = P.lerpDouble(t2, b.maxWidth, t);
        t2.toString;
      } else
        t2 = 1 / 0;
      t3 = a.minHeight;
      if (isFinite(t3)) {
        t3 = P.lerpDouble(t3, b.minHeight, t);
        t3.toString;
      } else
        t3 = 1 / 0;
      t4 = a.maxHeight;
      if (isFinite(t4)) {
        t4 = P.lerpDouble(t4, b.maxHeight, t);
        t4.toString;
      } else
        t4 = 1 / 0;
      return new S.BoxConstraints(t1, t2, t3, t4);
    },
    BoxHitTestResult$: function() {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_HitTestEntry),
        t2 = new E.Matrix4(new Float64Array(16));
      t2.setIdentity$0();
      return new S.BoxHitTestResult(t1, H.setRuntimeTypeInfo([t2], type$.JSArray_Matrix4), H.setRuntimeTypeInfo([], type$.JSArray__TransformPart));
    },
    BoxConstraints: function BoxConstraints(t0, t1, t2, t3) {
      var _ = this;
      _.minWidth = t0;
      _.maxWidth = t1;
      _.minHeight = t2;
      _.maxHeight = t3;
    },
    BoxConstraints_toString_describe: function BoxConstraints_toString_describe() {
    },
    BoxHitTestResult: function BoxHitTestResult(t0, t1, t2) {
      this._path = t0;
      this._transforms = t1;
      this._localTransforms = t2;
    },
    BoxHitTestEntry: function BoxHitTestEntry(t0, t1) {
      this.localPosition = t0;
      this.target = t1;
      this._transform = null;
    },
    BoxParentData: function BoxParentData(t0) {
      this.offset = t0;
    },
    ContainerBoxParentData: function ContainerBoxParentData() {
    },
    RenderBox: function RenderBox() {
    },
    RenderBox_getDryLayout_closure: function RenderBox_getDryLayout_closure(t0, t1) {
      this.$this = t0;
      this.constraints = t1;
    },
    RenderBox_getDistanceToActualBaseline_closure: function RenderBox_getDistanceToActualBaseline_closure(t0, t1) {
      this.$this = t0;
      this.baseline = t1;
    },
    RenderBoxContainerDefaultsMixin: function RenderBoxContainerDefaultsMixin() {
    },
    RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure: function RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.childParentData = t2;
    },
    _ContainerBoxParentData_BoxParentData_ContainerParentDataMixin: function _ContainerBoxParentData_BoxParentData_ContainerParentDataMixin() {
    },
    WidgetsApp_defaultShortcuts: function() {
      var t1 = $.$get$WidgetsApp__defaultWebShortcuts();
      return t1;
    },
    _WidgetsAppState_basicLocaleListResolution: function(preferredLocales, supportedLocales) {
      var t1, t2, allSupportedLocales, languageAndCountryLocales, languageAndScriptLocales, languageLocales, countryLocales, _i, locale, t3, t4, matchesLanguageCode, matchesCountryCode, localeIndex, userLocale, match, resolvedLocale;
      if (preferredLocales == null || preferredLocales.length === 0)
        return C.JSArray_methods.get$first(supportedLocales);
      t1 = type$.String;
      t2 = type$.Locale;
      allSupportedLocales = P.HashMap_HashMap(t1, t2);
      languageAndCountryLocales = P.HashMap_HashMap(t1, t2);
      languageAndScriptLocales = P.HashMap_HashMap(t1, t2);
      languageLocales = P.HashMap_HashMap(t1, t2);
      countryLocales = P.HashMap_HashMap(type$.nullable_String, t2);
      for (_i = 0; _i < 1; ++_i) {
        locale = supportedLocales[_i];
        t1 = locale._languageCode;
        t2 = C.Map_YCOho.$index(0, t1);
        t2 = (t2 == null ? t1 : t2) + "_null_";
        t3 = locale._countryCode;
        t4 = C.Map_0Agg9.$index(0, t3);
        t2 += H.S(t4 == null ? t3 : t4);
        if (allSupportedLocales.$index(0, t2) == null)
          allSupportedLocales.$indexSet(0, t2, locale);
        t2 = C.Map_YCOho.$index(0, t1);
        t2 = (t2 == null ? t1 : t2) + "_null";
        if (languageAndScriptLocales.$index(0, t2) == null)
          languageAndScriptLocales.$indexSet(0, t2, locale);
        t2 = C.Map_YCOho.$index(0, t1);
        t2 = (t2 == null ? t1 : t2) + "_";
        t4 = C.Map_0Agg9.$index(0, t3);
        t2 += H.S(t4 == null ? t3 : t4);
        if (languageAndCountryLocales.$index(0, t2) == null)
          languageAndCountryLocales.$indexSet(0, t2, locale);
        t2 = C.Map_YCOho.$index(0, t1);
        t1 = t2 == null ? t1 : t2;
        if (languageLocales.$index(0, t1) == null)
          languageLocales.$indexSet(0, t1, locale);
        t1 = C.Map_0Agg9.$index(0, t3);
        if (t1 == null)
          t1 = t3;
        if (countryLocales.$index(0, t1) == null)
          countryLocales.$indexSet(0, t1, locale);
      }
      for (matchesLanguageCode = null, matchesCountryCode = null, localeIndex = 0; localeIndex < preferredLocales.length; ++localeIndex) {
        userLocale = preferredLocales[localeIndex];
        t1 = userLocale._languageCode;
        t2 = C.Map_YCOho.$index(0, t1);
        t2 = (t2 == null ? t1 : t2) + "_null_";
        t3 = userLocale._countryCode;
        t4 = C.Map_0Agg9.$index(0, t3);
        if (allSupportedLocales.containsKey$1(0, t2 + H.S(t4 == null ? t3 : t4)))
          return userLocale;
        t2 = C.Map_0Agg9.$index(0, t3);
        if ((t2 == null ? t3 : t2) != null) {
          t2 = C.Map_YCOho.$index(0, t1);
          t2 = (t2 == null ? t1 : t2) + "_";
          t4 = C.Map_0Agg9.$index(0, t3);
          match = languageAndCountryLocales.$index(0, t2 + H.S(t4 == null ? t3 : t4));
          if (match != null)
            return match;
        }
        if (matchesLanguageCode != null)
          return matchesLanguageCode;
        t2 = C.Map_YCOho.$index(0, t1);
        match = languageLocales.$index(0, t2 == null ? t1 : t2);
        if (match != null) {
          if (localeIndex === 0) {
            t2 = localeIndex + 1;
            if (t2 < preferredLocales.length) {
              t2 = preferredLocales[t2]._languageCode;
              t4 = C.Map_YCOho.$index(0, t2);
              t2 = t4 == null ? t2 : t4;
              t4 = C.Map_YCOho.$index(0, t1);
              t1 = t2 === (t4 == null ? t1 : t4);
            } else
              t1 = false;
            t1 = !t1;
          } else
            t1 = false;
          if (t1)
            return match;
          matchesLanguageCode = match;
        }
        if (matchesCountryCode == null) {
          t1 = C.Map_0Agg9.$index(0, t3);
          t1 = (t1 == null ? t3 : t1) != null;
        } else
          t1 = false;
        if (t1) {
          t1 = C.Map_0Agg9.$index(0, t3);
          match = countryLocales.$index(0, t1 == null ? t3 : t1);
          if (match != null)
            matchesCountryCode = match;
        }
      }
      resolvedLocale = matchesLanguageCode == null ? matchesCountryCode : matchesLanguageCode;
      return resolvedLocale == null ? C.JSArray_methods.get$first(supportedLocales) : resolvedLocale;
    },
    WidgetsApp: function WidgetsApp(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32) {
      var _ = this;
      _.navigatorKey = t0;
      _.onGenerateRoute = t1;
      _.onGenerateInitialRoutes = t2;
      _.pageRouteBuilder = t3;
      _.routeInformationParser = t4;
      _.routerDelegate = t5;
      _.backButtonDispatcher = t6;
      _.routeInformationProvider = t7;
      _.home = t8;
      _.routes = t9;
      _.onUnknownRoute = t10;
      _.initialRoute = t11;
      _.navigatorObservers = t12;
      _.builder = t13;
      _.title = t14;
      _.onGenerateTitle = t15;
      _.textStyle = t16;
      _.color = t17;
      _.locale = t18;
      _.localizationsDelegates = t19;
      _.localeListResolutionCallback = t20;
      _.localeResolutionCallback = t21;
      _.supportedLocales = t22;
      _.showPerformanceOverlay = t23;
      _.checkerboardRasterCacheImages = t24;
      _.checkerboardOffscreenLayers = t25;
      _.showSemanticsDebugger = t26;
      _.inspectorSelectButtonBuilder = t27;
      _.debugShowCheckedModeBanner = t28;
      _.shortcuts = t29;
      _.actions = t30;
      _.restorationScopeId = t31;
      _.key = t32;
    },
    _WidgetsAppState: function _WidgetsAppState(t0) {
      var _ = this;
      _._widget = _._app$_locale = _._navigator = _._defaultRouteInformationProvider = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _WidgetsAppState_didChangeLocales_closure: function _WidgetsAppState_didChangeLocales_closure(t0, t1) {
      this.$this = t0;
      this.newLocale = t1;
    },
    _WidgetsAppState_build_closure: function _WidgetsAppState_build_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _MediaQueryFromWindow: function _MediaQueryFromWindow(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _MediaQueryFromWindowsState: function _MediaQueryFromWindowsState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _MediaQueryFromWindowsState_didChangeMetrics_closure: function _MediaQueryFromWindowsState_didChangeMetrics_closure() {
    },
    _MediaQueryFromWindowsState_didChangePlatformBrightness_closure: function _MediaQueryFromWindowsState_didChangePlatformBrightness_closure() {
    },
    __MediaQueryFromWindowsState_State_WidgetsBindingObserver: function __MediaQueryFromWindowsState_State_WidgetsBindingObserver() {
    },
    __WidgetsAppState_State_WidgetsBindingObserver: function __WidgetsAppState_State_WidgetsBindingObserver() {
    },
    InheritedNotifier: function InheritedNotifier() {
    },
    _InheritedNotifierElement: function _InheritedNotifierElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._inherited_notifier$_dirty = false;
      _._dependents = t0;
      _._framework$_parent = _._framework$_child = null;
      _._cachedHash = t1;
      _.__Element__depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._lifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t5;
    },
    PageStorageBucket: function PageStorageBucket() {
    },
    PageStorage: function PageStorage(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    setEquals: function(a, b) {
      var t1;
      if (a == null)
        return b == null;
      if (b == null || a.get$length(a) !== b.get$length(b))
        return false;
      if (a === b)
        return true;
      for (t1 = a.get$iterator(a); t1.moveNext$0();)
        if (!b.contains$1(0, t1.get$current(t1)))
          return false;
      return true;
    },
    listEquals: function(a, b) {
      var index;
      if (a == null)
        return b == null;
      if (b == null || a.length !== b.length)
        return false;
      if (a === b)
        return true;
      for (index = 0; index < a.length; ++index)
        if (!J.$eq$(a[index], b[index]))
          return false;
      return true;
    },
    mapEquals: function(a, b) {
      var key,
        t1 = a.get$length(a),
        t2 = b.get$length(b);
      if (t1 !== t2)
        return false;
      if (a === b)
        return true;
      for (t1 = a.get$keys(a), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        key = t1.get$current(t1);
        if (!b.containsKey$1(0, key) || !J.$eq$(b.$index(0, key), a.$index(0, key)))
          return false;
      }
      return true;
    },
    mergeSort: function(list, compare, $T) {
      var middle, secondLength, scratchSpace, firstTarget,
        end = list.length,
        $length = end - 0;
      if ($length < 2)
        return;
      if ($length < 32) {
        S._insertionSort(list, compare, end, 0, $T);
        return;
      }
      middle = C.JSInt_methods._shrOtherPositive$1($length, 1);
      secondLength = end - middle;
      scratchSpace = P.List_List$filled(secondLength, list[0], false, $T);
      S._mergeSort(list, compare, middle, end, scratchSpace, 0);
      firstTarget = end - (middle - 0);
      S._mergeSort(list, compare, 0, middle, list, firstTarget);
      S._merge(compare, list, firstTarget, end, scratchSpace, 0, secondLength, list, 0);
    },
    _insertionSort: function(list, compare, end, start, $T) {
      var pos, element, max, min, mid;
      for (pos = start + 1; pos < end;) {
        element = list[pos];
        for (max = pos, min = start; min < max;) {
          mid = min + C.JSInt_methods._shrOtherPositive$1(max - min, 1);
          if (compare.call$2(element, list[mid]) < 0)
            max = mid;
          else
            min = mid + 1;
        }
        ++pos;
        C.JSArray_methods.setRange$4(list, min + 1, pos, list, min);
        list[min] = element;
      }
    },
    _movingInsertionSort: function(list, compare, start, end, target, targetOffset) {
      var i, element, max, max0, min, mid,
        $length = end - start;
      if ($length === 0)
        return;
      target[targetOffset] = list[start];
      for (i = 1; i < $length; ++i) {
        element = list[start + i];
        max = targetOffset + i;
        for (max0 = max, min = targetOffset; min < max0;) {
          mid = min + C.JSInt_methods._shrOtherPositive$1(max0 - min, 1);
          if (compare.call$2(element, target[mid]) < 0)
            max0 = mid;
          else
            min = mid + 1;
        }
        C.JSArray_methods.setRange$4(target, min + 1, max + 1, target, min);
        target[min] = element;
      }
    },
    _mergeSort: function(list, compare, start, end, target, targetOffset) {
      var middle, firstLength, targetMiddle,
        $length = end - start;
      if ($length < 32) {
        S._movingInsertionSort(list, compare, start, end, target, targetOffset);
        return;
      }
      middle = start + C.JSInt_methods._shrOtherPositive$1($length, 1);
      firstLength = middle - start;
      targetMiddle = targetOffset + firstLength;
      S._mergeSort(list, compare, middle, end, target, targetMiddle);
      S._mergeSort(list, compare, start, middle, list, middle);
      S._merge(compare, list, middle, middle + firstLength, target, targetMiddle, targetMiddle + (end - middle), target, targetOffset);
    },
    _merge: function(compare, firstList, firstStart, firstEnd, secondList, secondStart, secondEnd, target, targetOffset) {
      var targetOffset0, cursor10, cursor20,
        cursor1 = firstStart + 1,
        firstElement = firstList[firstStart],
        cursor2 = secondStart + 1,
        secondElement = secondList[secondStart];
      for (; true; targetOffset = targetOffset0) {
        targetOffset0 = targetOffset + 1;
        if (compare.call$2(firstElement, secondElement) <= 0) {
          target[targetOffset] = firstElement;
          if (cursor1 === firstEnd) {
            targetOffset = targetOffset0;
            break;
          }
          cursor10 = cursor1 + 1;
          firstElement = firstList[cursor1];
        } else {
          target[targetOffset] = secondElement;
          if (cursor2 !== secondEnd) {
            cursor20 = cursor2 + 1;
            secondElement = secondList[cursor2];
            cursor2 = cursor20;
            continue;
          }
          targetOffset = targetOffset0 + 1;
          target[targetOffset0] = firstElement;
          C.JSArray_methods.setRange$4(target, targetOffset, targetOffset + (firstEnd - cursor1), firstList, cursor1);
          return;
        }
        cursor1 = cursor10;
      }
      targetOffset0 = targetOffset + 1;
      target[targetOffset] = secondElement;
      C.JSArray_methods.setRange$4(target, targetOffset0, targetOffset0 + (secondEnd - cursor2), secondList, cursor2);
    }
  },
  Z = {ParametricCurve: function ParametricCurve() {
    }, Curve: function Curve() {
    }, _Linear: function _Linear() {
    }, Interval: function Interval(t0, t1) {
      this.begin = t0;
      this.end = t1;
    }, Cubic: function Cubic(t0, t1, t2, t3) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.c = t2;
      _.d = t3;
    }, FlippedCurve: function FlippedCurve(t0) {
      this.curve = t0;
    }, RawMaterialButton: function RawMaterialButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.onPressed = t0;
      _.mouseCursor = t1;
      _.textStyle = t2;
      _.fillColor = t3;
      _.focusColor = t4;
      _.hoverColor = t5;
      _.splashColor = t6;
      _.elevation = t7;
      _.hoverElevation = t8;
      _.focusElevation = t9;
      _.highlightElevation = t10;
      _.disabledElevation = t11;
      _.constraints = t12;
      _.shape = t13;
      _.child = t14;
      _.materialTapTargetSize = t15;
      _.focusNode = t16;
      _.autofocus = t17;
      _.clipBehavior = t18;
      _.key = t19;
    }, _RawMaterialButtonState: function _RawMaterialButtonState(t0, t1) {
      var _ = this;
      _._states = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    }, _RawMaterialButtonState__handleHighlightChanged_closure: function _RawMaterialButtonState__handleHighlightChanged_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    }, _RawMaterialButtonState__handleHoveredChanged_closure: function _RawMaterialButtonState__handleHoveredChanged_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    }, _RawMaterialButtonState__handleFocusedChanged_closure: function _RawMaterialButtonState__handleFocusedChanged_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    }, _InputPadding: function _InputPadding(t0, t1, t2) {
      this.minSize = t0;
      this.child = t1;
      this.key = t2;
    }, _RenderInputPadding: function _RenderInputPadding(t0, t1) {
      var _ = this;
      _._minSize = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    }, _RenderInputPadding_hitTest_closure: function _RenderInputPadding_hitTest_closure(t0, t1) {
      this.$this = t0;
      this.center = t1;
    },
    DataTableThemeData__lerpProperties: function(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return new Z._LerpProperties2(a, b, t, lerpFunction, $T._eval$1("_LerpProperties2<0>"));
    },
    DataTableThemeData: function DataTableThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.decoration = t0;
      _.dataRowColor = t1;
      _.dataRowHeight = t2;
      _.dataTextStyle = t3;
      _.headingRowColor = t4;
      _.headingRowHeight = t5;
      _.headingTextStyle = t6;
      _.horizontalMargin = t7;
      _.columnSpacing = t8;
      _.dividerThickness = t9;
      _.checkboxHorizontalMargin = t10;
    },
    _LerpProperties2: function _LerpProperties2(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    _DataTableThemeData_Object_Diagnosticable: function _DataTableThemeData_Object_Diagnosticable() {
    },
    ClipContext: function ClipContext() {
    },
    ClipContext_clipPathAndPaint_closure: function ClipContext_clipPathAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.path = t1;
    },
    ClipContext_clipRectAndPaint_closure: function ClipContext_clipRectAndPaint_closure(t0, t1) {
      this.$this = t0;
      this.rect = t1;
    },
    Decoration_lerp: function(a, b, t) {
      var _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      if (t1) {
        t1 = b.lerpFrom$2(_null, t);
        return t1 == null ? b : t1;
      }
      if (b == null) {
        t1 = a.lerpTo$2(_null, t);
        return t1 == null ? a : t1;
      }
      if (t === 0)
        return a;
      if (t === 1)
        return b;
      t1 = b.lerpFrom$2(a, t);
      if (t1 == null)
        t1 = a.lerpTo$2(b, t);
      if (t1 == null)
        if (t < 0.5) {
          t1 = a.lerpTo$2(_null, t * 2);
          if (t1 == null)
            t1 = a;
        } else {
          t1 = b.lerpFrom$2(_null, (t - 0.5) * 2);
          if (t1 == null)
            t1 = b;
        }
      return t1;
    },
    Decoration: function Decoration() {
    },
    BoxPainter: function BoxPainter() {
    },
    _Decoration_Object_Diagnosticable: function _Decoration_Object_Diagnosticable() {
    },
    RouteInformation: function RouteInformation(t0, t1) {
      this.location = t0;
      this.state = t1;
    }
  },
  R = {
    Tween$: function(begin, end, $T) {
      return new R.Tween(begin, end, $T._eval$1("Tween<0>"));
    },
    CurveTween$: function(curve) {
      return new R.CurveTween(curve);
    },
    Animatable: function Animatable() {
    },
    _AnimatedEvaluation: function _AnimatedEvaluation(t0, t1, t2) {
      this.parent = t0;
      this._evaluatable = t1;
      this.$ti = t2;
    },
    _ChainedEvaluation: function _ChainedEvaluation(t0, t1, t2) {
      this._tween$_parent = t0;
      this._evaluatable = t1;
      this.$ti = t2;
    },
    Tween: function Tween(t0, t1, t2) {
      this.begin = t0;
      this.end = t1;
      this.$ti = t2;
    },
    ReverseTween: function ReverseTween(t0, t1, t2, t3) {
      var _ = this;
      _.parent = t0;
      _.begin = t1;
      _.end = t2;
      _.$ti = t3;
    },
    ColorTween: function ColorTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    RectTween: function RectTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    IntTween: function IntTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    CurveTween: function CurveTween(t0) {
      this.curve = t0;
    },
    __AnimatedEvaluation_Animation_AnimationWithParentMixin: function __AnimatedEvaluation_Animation_AnimationWithParentMixin() {
    },
    ObserverList$: function($T) {
      return new R.ObserverList(H.setRuntimeTypeInfo([], $T._eval$1("JSArray<0>")), $T._eval$1("ObserverList<0>"));
    },
    ObserverList: function ObserverList(t0, t1) {
      var _ = this;
      _._observer_list$_list = t0;
      _._isDirty = false;
      _.__ObserverList__set = null;
      _.$ti = t1;
    },
    HashedObserverList: function HashedObserverList(t0, t1) {
      this._observer_list$_map = t0;
      this.$ti = t1;
    },
    StackFrame_fromStackString: function(stack) {
      var t1 = type$.WhereTypeIterable_StackFrame;
      return P.List_List$of(new H.WhereTypeIterable(new H.MappedIterable(new H.WhereIterable(H.setRuntimeTypeInfo(C.JSString_methods.trim$0(stack).split("\n"), type$.JSArray_String), new R.StackFrame_fromStackString_closure(), type$.WhereIterable_String), R.stack_frame_StackFrame_fromStackTraceLine$closure(), type$.MappedIterable_of_String_and_nullable_StackFrame), t1), true, t1._eval$1("Iterable.E"));
    },
    StackFrame__parseWebFrame: function(line) {
      var t1 = R.StackFrame__parseWebNonDebugFrame(line);
      return t1;
    },
    StackFrame__parseWebNonDebugFrame: function(line) {
      var classAndMethod, className,
        _s9_ = "<unknown>",
        match = $.$get$StackFrame__webNonDebugFramePattern().firstMatch$1(line);
      if (match == null)
        return null;
      classAndMethod = H.setRuntimeTypeInfo(match._match[1].split("."), type$.JSArray_String);
      className = classAndMethod.length > 1 ? C.JSArray_methods.get$first(classAndMethod) : _s9_;
      return new R.StackFrame(line, -1, _s9_, _s9_, _s9_, -1, -1, className, classAndMethod.length > 1 ? H.SubListIterable$(classAndMethod, 1, null, type$.String).join$1(0, ".") : C.JSArray_methods.get$single(classAndMethod));
    },
    StackFrame_fromStackTraceLine: function(line) {
      var t1, t2, method, className, parts, packageUri, packagePath, $package, t3, t4,
        _s9_ = "<unknown>";
      if (line === "<asynchronous suspension>")
        return C.StackFrame_SOW;
      else if (line === "...")
        return C.StackFrame_8sg;
      if (!C.JSString_methods.startsWith$1(line, "#"))
        return R.StackFrame__parseWebFrame(line);
      t1 = P.RegExp_RegExp("^#(\\d+) +(.+) \\((.+?):?(\\d+){0,1}:?(\\d+){0,1}\\)$", true).firstMatch$1(line)._match;
      t2 = t1[2];
      t2.toString;
      method = H.stringReplaceAllUnchecked(t2, ".<anonymous closure>", "");
      if (C.JSString_methods.startsWith$1(method, "new")) {
        className = method.split(" ").length > 1 ? method.split(" ")[1] : _s9_;
        if (C.JSString_methods.contains$1(className, ".")) {
          parts = className.split(".");
          className = parts[0];
          method = parts[1];
        } else
          method = "";
      } else if (C.JSString_methods.contains$1(method, ".")) {
        parts = method.split(".");
        className = parts[0];
        method = parts[1];
      } else
        className = "";
      t2 = t1[3];
      t2.toString;
      packageUri = P.Uri_parse(t2);
      packagePath = packageUri.get$path(packageUri);
      if (packageUri.get$scheme() === "dart" || packageUri.get$scheme() === "package") {
        $package = packageUri.get$pathSegments()[0];
        packagePath = C.JSString_methods.replaceFirst$2(packageUri.get$path(packageUri), J.$add$ansx(packageUri.get$pathSegments()[0], "/"), "");
      } else
        $package = _s9_;
      t2 = t1[1];
      t2.toString;
      t2 = P.int_parse(t2, null);
      t3 = packageUri.get$scheme();
      t4 = t1[4];
      if (t4 == null)
        t4 = -1;
      else {
        t4 = t4;
        t4.toString;
        t4 = P.int_parse(t4, null);
      }
      t1 = t1[5];
      if (t1 == null)
        t1 = -1;
      else {
        t1 = t1;
        t1.toString;
        t1 = P.int_parse(t1, null);
      }
      return new R.StackFrame(line, t2, t3, $package, packagePath, t4, t1, className, method);
    },
    StackFrame: function StackFrame(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.source = t0;
      _.number = t1;
      _.packageScheme = t2;
      _.$package = t3;
      _.packagePath = t4;
      _.line = t5;
      _.column = t6;
      _.className = t7;
      _.method = t8;
    },
    StackFrame_fromStackString_closure: function StackFrame_fromStackString_closure() {
    },
    Velocity: function Velocity(t0) {
      this.pixelsPerSecond = t0;
    },
    VelocityEstimate: function VelocityEstimate(t0, t1, t2, t3) {
      var _ = this;
      _.pixelsPerSecond = t0;
      _.confidence = t1;
      _.duration = t2;
      _.offset = t3;
    },
    _PointAtTime: function _PointAtTime(t0, t1) {
      this.time = t0;
      this.point = t1;
    },
    VelocityTracker: function VelocityTracker(t0, t1) {
      this.kind = t0;
      this._samples = t1;
      this._velocity_tracker$_index = 0;
    },
    InteractiveInkFeature: function InteractiveInkFeature() {
    },
    InteractiveInkFeatureFactory: function InteractiveInkFeatureFactory() {
    },
    _ParentInkResponseProvider: function _ParentInkResponseProvider(t0, t1, t2) {
      this.state = t0;
      this.child = t1;
      this.key = t2;
    },
    InkResponse: function InkResponse() {
    },
    _InkResponseStateWidget: function _InkResponseStateWidget(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapCancel = t3;
      _.onDoubleTap = t4;
      _.onLongPress = t5;
      _.onHighlightChanged = t6;
      _.onHover = t7;
      _.mouseCursor = t8;
      _.containedInkWell = t9;
      _.highlightShape = t10;
      _.radius = t11;
      _.borderRadius = t12;
      _.customBorder = t13;
      _.focusColor = t14;
      _.hoverColor = t15;
      _.highlightColor = t16;
      _.overlayColor = t17;
      _.splashColor = t18;
      _.splashFactory = t19;
      _.enableFeedback = t20;
      _.excludeFromSemantics = t21;
      _.onFocusChange = t22;
      _.autofocus = t23;
      _.focusNode = t24;
      _.canRequestFocus = t25;
      _.parentState = t26;
      _.getRectCallback = t27;
      _.debugCheckContext = t28;
      _.key = t29;
    },
    _HighlightType: function _HighlightType(t0) {
      this._ink_well$_name = t0;
    },
    _InkResponseState: function _InkResponseState(t0, t1, t2, t3) {
      var _ = this;
      _._currentSplash = _._splashes = null;
      _._hovering = false;
      _._highlights = t0;
      _.___InkResponseState__actionMap = null;
      _._activeChildren = t1;
      _._hasFocus = false;
      _.AutomaticKeepAliveClientMixin__keepAliveHandle = t2;
      _._widget = null;
      _._debugLifecycleState = t3;
      _._framework$_element = null;
    },
    _InkResponseState_highlightsExist_closure: function _InkResponseState_highlightsExist_closure() {
    },
    _InkResponseState_updateHighlight_handleInkRemoval: function _InkResponseState_updateHighlight_handleInkRemoval(t0, t1) {
      this.$this = t0;
      this.type = t1;
    },
    _InkResponseState__createInkFeature_onRemoved: function _InkResponseState__createInkFeature_onRemoved(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _InkResponseState__handleFocusHighlightModeChange_closure: function _InkResponseState__handleFocusHighlightModeChange_closure(t0) {
      this.$this = t0;
    },
    InkWell: function InkWell(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.child = t0;
      _.onTap = t1;
      _.onTapDown = t2;
      _.onTapCancel = t3;
      _.onDoubleTap = t4;
      _.onLongPress = t5;
      _.onHighlightChanged = t6;
      _.onHover = t7;
      _.mouseCursor = t8;
      _.containedInkWell = t9;
      _.highlightShape = t10;
      _.radius = t11;
      _.borderRadius = t12;
      _.customBorder = t13;
      _.focusColor = t14;
      _.hoverColor = t15;
      _.highlightColor = t16;
      _.overlayColor = t17;
      _.splashColor = t18;
      _.splashFactory = t19;
      _.enableFeedback = t20;
      _.excludeFromSemantics = t21;
      _.onFocusChange = t22;
      _.autofocus = t23;
      _.focusNode = t24;
      _.canRequestFocus = t25;
      _.key = t26;
    },
    __InkResponseState_State_AutomaticKeepAliveClientMixin: function __InkResponseState_State_AutomaticKeepAliveClientMixin() {
    },
    PopupMenuThemeData_lerp: function(a, b, t) {
      var t5,
        t1 = P.Color_lerp(a.color, b.color, t),
        t2 = Y.ShapeBorder_lerp(a.shape, b.shape, t),
        t3 = P.lerpDouble(a.elevation, b.elevation, t),
        t4 = A.TextStyle_lerp(a.textStyle, b.textStyle, t);
      if (t < 0.5)
        t5 = a.enableFeedback;
      else
        t5 = b.enableFeedback;
      return new R.PopupMenuThemeData(t1, t2, t3, t4, t5);
    },
    PopupMenuThemeData: function PopupMenuThemeData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.shape = t1;
      _.elevation = t2;
      _.textStyle = t3;
      _.enableFeedback = t4;
    },
    _PopupMenuThemeData_Object_Diagnosticable: function _PopupMenuThemeData_Object_Diagnosticable() {
    },
    SwitchThemeData__lerpProperties: function(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return new R._LerpProperties(a, b, t, lerpFunction, $T._eval$1("_LerpProperties<0>"));
    },
    SwitchThemeData: function SwitchThemeData(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.thumbColor = t0;
      _.trackColor = t1;
      _.materialTapTargetSize = t2;
      _.mouseCursor = t3;
      _.overlayColor = t4;
      _.splashRadius = t5;
    },
    _LerpProperties: function _LerpProperties(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    _SwitchThemeData_Object_Diagnosticable: function _SwitchThemeData_Object_Diagnosticable() {
    },
    TextSelectionThemeData_lerp: function(a, b, t) {
      var t1 = P.Color_lerp(a.cursorColor, b.cursorColor, t),
        t2 = P.Color_lerp(a.selectionColor, b.selectionColor, t);
      return new R.TextSelectionThemeData(t1, t2, P.Color_lerp(a.selectionHandleColor, b.selectionHandleColor, t));
    },
    TextSelectionThemeData: function TextSelectionThemeData(t0, t1, t2) {
      this.cursorColor = t0;
      this.selectionColor = t1;
      this.selectionHandleColor = t2;
    },
    _TextSelectionThemeData_Object_Diagnosticable: function _TextSelectionThemeData_Object_Diagnosticable() {
    },
    TextTheme$: function(bodyText1, bodyText2, button, caption, headline1, headline2, headline3, headline4, headline5, headline6, overline, subtitle1, subtitle2) {
      var _null = null,
        t1 = headline1 == null ? _null : headline1,
        t2 = headline2 == null ? _null : headline2,
        t3 = headline3 == null ? _null : headline3,
        t4 = headline4 == null ? _null : headline4,
        t5 = headline5 == null ? _null : headline5,
        t6 = headline6 == null ? _null : headline6,
        t7 = subtitle1 == null ? _null : subtitle1,
        t8 = subtitle2 == null ? _null : subtitle2,
        t9 = bodyText1 == null ? _null : bodyText1;
      return new R.TextTheme(t1, t2, t3, t4, t5, t6, t7, t8, t9, bodyText2 == null ? _null : bodyText2, caption, button, overline);
    },
    TextTheme_lerp: function(a, b, t) {
      var t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _null = null,
        t1 = a == null,
        t2 = t1 ? _null : a.headline1,
        t3 = b == null;
      t2 = A.TextStyle_lerp(t2, t3 ? _null : b.headline1, t);
      t4 = t1 ? _null : a.headline2;
      t4 = A.TextStyle_lerp(t4, t3 ? _null : b.headline2, t);
      t5 = t1 ? _null : a.headline3;
      t5 = A.TextStyle_lerp(t5, t3 ? _null : b.headline3, t);
      t6 = t1 ? _null : a.headline4;
      t6 = A.TextStyle_lerp(t6, t3 ? _null : b.headline4, t);
      t7 = t1 ? _null : a.headline5;
      t7 = A.TextStyle_lerp(t7, t3 ? _null : b.headline5, t);
      t8 = t1 ? _null : a.headline6;
      t8 = A.TextStyle_lerp(t8, t3 ? _null : b.headline6, t);
      t9 = t1 ? _null : a.subtitle1;
      t9 = A.TextStyle_lerp(t9, t3 ? _null : b.subtitle1, t);
      t10 = t1 ? _null : a.subtitle2;
      t10 = A.TextStyle_lerp(t10, t3 ? _null : b.subtitle2, t);
      t11 = t1 ? _null : a.bodyText1;
      t11 = A.TextStyle_lerp(t11, t3 ? _null : b.bodyText1, t);
      t12 = t1 ? _null : a.bodyText2;
      t12 = A.TextStyle_lerp(t12, t3 ? _null : b.bodyText2, t);
      t13 = t1 ? _null : a.caption;
      t13 = A.TextStyle_lerp(t13, t3 ? _null : b.caption, t);
      t14 = t1 ? _null : a.button;
      t14 = A.TextStyle_lerp(t14, t3 ? _null : b.button, t);
      t1 = t1 ? _null : a.overline;
      return R.TextTheme$(t11, t12, t14, t13, t2, t4, t5, t6, t7, t8, A.TextStyle_lerp(t1, t3 ? _null : b.overline, t), t9, t10);
    },
    TextTheme: function TextTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.headline1 = t0;
      _.headline2 = t1;
      _.headline3 = t2;
      _.headline4 = t3;
      _.headline5 = t4;
      _.headline6 = t5;
      _.subtitle1 = t6;
      _.subtitle2 = t7;
      _.bodyText1 = t8;
      _.bodyText2 = t9;
      _.caption = t10;
      _.button = t11;
      _.overline = t12;
    },
    _TextTheme_Object_Diagnosticable: function _TextTheme_Object_Diagnosticable() {
    },
    ElevationOverlay_applyOverlay: function(context, color, elevation) {
      K.Theme_of(context);
      elevation > 0;
      return color;
    }
  },
  E = {
    CupertinoDynamicColor_maybeResolve: function(resolvable, context) {
      var inheritedTheme, t1, brightness, isHighContrastEnabled, resolved, t2, t3, t4, t5, t6, t7, t8, _null = null;
      if (resolvable == null)
        return _null;
      if (resolvable instanceof E.CupertinoDynamicColor) {
        if (resolvable.get$_isPlatformBrightnessDependent()) {
          inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$._InheritedCupertinoTheme);
          t1 = inheritedTheme == null ? _null : inheritedTheme.theme.data.get$brightness();
          if (t1 == null) {
            t1 = F.MediaQuery_maybeOf(context);
            t1 = t1 == null ? _null : t1.platformBrightness;
            brightness = t1;
          } else
            brightness = t1;
          if (brightness == null)
            brightness = C.Brightness_1;
        } else
          brightness = C.Brightness_1;
        if (resolvable.get$_isHighContrastDependent()) {
          t1 = F.MediaQuery_maybeOf(context);
          t1 = t1 == null ? _null : t1.highContrast;
          isHighContrastEnabled = t1 === true;
        } else
          isHighContrastEnabled = false;
        if (resolvable.get$_isInterfaceElevationDependent())
          K.CupertinoUserInterfaceLevel_maybeOf(context);
        switch (brightness) {
          case C.Brightness_1:
            switch (C.CupertinoUserInterfaceLevelData_0) {
              case C.CupertinoUserInterfaceLevelData_0:
                resolved = isHighContrastEnabled ? resolvable.highContrastColor : resolvable.color;
                break;
              case C.CupertinoUserInterfaceLevelData_1:
                resolved = isHighContrastEnabled ? resolvable.highContrastElevatedColor : resolvable.elevatedColor;
                break;
              default:
                resolved = _null;
            }
            break;
          case C.Brightness_0:
            switch (C.CupertinoUserInterfaceLevelData_0) {
              case C.CupertinoUserInterfaceLevelData_0:
                resolved = isHighContrastEnabled ? resolvable.darkHighContrastColor : resolvable.darkColor;
                break;
              case C.CupertinoUserInterfaceLevelData_1:
                resolved = isHighContrastEnabled ? resolvable.darkHighContrastElevatedColor : resolvable.darkElevatedColor;
                break;
              default:
                resolved = _null;
            }
            break;
          default:
            resolved = _null;
        }
        t1 = resolvable.color;
        t2 = resolvable.darkColor;
        t3 = resolvable.highContrastColor;
        t4 = resolvable.darkHighContrastColor;
        t5 = resolvable.elevatedColor;
        t6 = resolvable.darkElevatedColor;
        t7 = resolvable.highContrastElevatedColor;
        t8 = resolvable.darkHighContrastElevatedColor;
        t8 = new E.CupertinoDynamicColor(resolved, resolvable._colors$_debugLabel, _null, t1, t2, t3, t4, t5, t6, t7, t8, 0);
        t1 = t8;
      } else
        t1 = resolvable;
      return t1;
    },
    CupertinoDynamicColor: function CupertinoDynamicColor(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._effectiveColor = t0;
      _._colors$_debugLabel = t1;
      _._debugResolveContext = t2;
      _.color = t3;
      _.darkColor = t4;
      _.highContrastColor = t5;
      _.darkHighContrastColor = t6;
      _.elevatedColor = t7;
      _.darkElevatedColor = t8;
      _.highContrastElevatedColor = t9;
      _.darkHighContrastElevatedColor = t10;
      _.value = t11;
    },
    CupertinoDynamicColor_toString_toString: function CupertinoDynamicColor_toString_toString(t0) {
      this.$this = t0;
    },
    _CupertinoDynamicColor_Color_Diagnosticable: function _CupertinoDynamicColor_Color_Diagnosticable() {
    },
    MaterialColor: function MaterialColor(t0, t1) {
      this._swatch = t0;
      this.value = t1;
    },
    _DefaultHeroTag: function _DefaultHeroTag() {
    },
    FloatingActionButton: function FloatingActionButton(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.onPressed = t1;
      _._sizeConstraints = t2;
      _.key = t3;
    },
    NavigationRailThemeData_lerp: function(a, b, t) {
      var t8,
        t1 = P.Color_lerp(a.backgroundColor, b.backgroundColor, t),
        t2 = P.lerpDouble(a.elevation, b.elevation, t),
        t3 = A.TextStyle_lerp(a.unselectedLabelTextStyle, b.unselectedLabelTextStyle, t),
        t4 = A.TextStyle_lerp(a.selectedLabelTextStyle, b.selectedLabelTextStyle, t),
        t5 = T.IconThemeData_lerp(a.unselectedIconTheme, b.unselectedIconTheme, t),
        t6 = T.IconThemeData_lerp(a.selectedIconTheme, b.selectedIconTheme, t),
        t7 = P.lerpDouble(a.groupAlignment, b.groupAlignment, t);
      if (t < 0.5)
        t8 = a.labelType;
      else
        t8 = b.labelType;
      return new E.NavigationRailThemeData(t1, t2, t3, t4, t5, t6, t7, t8);
    },
    NavigationRailThemeData: function NavigationRailThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.unselectedLabelTextStyle = t2;
      _.selectedLabelTextStyle = t3;
      _.unselectedIconTheme = t4;
      _.selectedIconTheme = t5;
      _.groupAlignment = t6;
      _.labelType = t7;
    },
    _NavigationRailThemeData_Object_Diagnosticable: function _NavigationRailThemeData_Object_Diagnosticable() {
    },
    ColorSwatch: function ColorSwatch() {
    },
    ImageCache: function ImageCache(t0, t1, t2) {
      var _ = this;
      _._pendingImages = t0;
      _._image_cache$_cache = t1;
      _._liveImages = t2;
      _._currentSizeBytes = 0;
    },
    RenderConstrainedBox$: function(additionalConstraints) {
      var t1 = new E.RenderConstrainedBox(additionalConstraints, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    RenderProxyBox: function RenderProxyBox() {
    },
    RenderProxyBoxMixin: function RenderProxyBoxMixin() {
    },
    HitTestBehavior: function HitTestBehavior(t0) {
      this._proxy_box$_name = t0;
    },
    RenderProxyBoxWithHitTestBehavior: function RenderProxyBoxWithHitTestBehavior() {
    },
    RenderConstrainedBox: function RenderConstrainedBox(t0, t1) {
      var _ = this;
      _._additionalConstraints = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderLimitedBox: function RenderLimitedBox(t0, t1, t2) {
      var _ = this;
      _._maxWidth = t0;
      _._maxHeight = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderOpacity: function RenderOpacity(t0, t1, t2, t3) {
      var _ = this;
      _._alpha = t0;
      _._proxy_box$_opacity = t1;
      _._alwaysIncludeSemantics = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAnimatedOpacityMixin: function RenderAnimatedOpacityMixin() {
    },
    RenderAnimatedOpacity: function RenderAnimatedOpacity(t0, t1, t2, t3, t4) {
      var _ = this;
      _.RenderAnimatedOpacityMixin__alpha = t0;
      _.RenderAnimatedOpacityMixin__currentlyNeedsCompositing = t1;
      _.RenderAnimatedOpacityMixin__opacity = t2;
      _.RenderAnimatedOpacityMixin__alwaysIncludeSemantics = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    CustomClipper: function CustomClipper() {
    },
    ShapeBorderClipper: function ShapeBorderClipper(t0, t1) {
      this.shape = t0;
      this.textDirection = t1;
    },
    _RenderCustomClip: function _RenderCustomClip() {
    },
    RenderClipPath: function RenderClipPath(t0, t1, t2) {
      var _ = this;
      _._clipper = t0;
      _._clip = null;
      _._clipBehavior = t1;
      _._debugText = _._debugPaint = null;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderPhysicalModelBase: function _RenderPhysicalModelBase() {
    },
    RenderPhysicalModel: function RenderPhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._shape = t0;
      _._proxy_box$_borderRadius = t1;
      _._proxy_box$_elevation = t2;
      _._proxy_box$_shadowColor = t3;
      _._proxy_box$_color = t4;
      _._clipper = t5;
      _._clip = null;
      _._clipBehavior = t6;
      _._debugText = _._debugPaint = null;
      _.RenderObjectWithChildMixin__child = t7;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderPhysicalShape: function RenderPhysicalShape(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._proxy_box$_elevation = t0;
      _._proxy_box$_shadowColor = t1;
      _._proxy_box$_color = t2;
      _._clipper = t3;
      _._clip = null;
      _._clipBehavior = t4;
      _._debugText = _._debugPaint = null;
      _.RenderObjectWithChildMixin__child = t5;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    DecorationPosition: function DecorationPosition(t0) {
      this._proxy_box$_name = t0;
    },
    RenderDecoratedBox: function RenderDecoratedBox(t0, t1, t2, t3) {
      var _ = this;
      _._painter = null;
      _._proxy_box$_decoration = t0;
      _._proxy_box$_position = t1;
      _._proxy_box$_configuration = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderFractionalTranslation: function RenderFractionalTranslation(t0, t1, t2) {
      var _ = this;
      _._translation = t0;
      _.transformHitTests = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderFractionalTranslation_hitTestChildren_closure: function RenderFractionalTranslation_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    RenderPointerListener: function RenderPointerListener(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onPointerDown = t0;
      _.onPointerMove = t1;
      _.onPointerUp = t2;
      _.onPointerHover = t3;
      _.onPointerCancel = t4;
      _.onPointerSignal = t5;
      _.behavior = t6;
      _.RenderObjectWithChildMixin__child = t7;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderMouseRegion: function RenderMouseRegion(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._proxy_box$_opaque = t0;
      _.onEnter = t1;
      _.onHover = t2;
      _.onExit = t3;
      _._cursor = t4;
      _._validForMouseTracker = true;
      _.RenderObjectWithChildMixin__child = t5;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderRepaintBoundary: function RenderRepaintBoundary(t0) {
      var _ = this;
      _._debugAsymmetricPaintCount = _._debugSymmetricPaintCount = 0;
      _.RenderObjectWithChildMixin__child = t0;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderIgnorePointer: function RenderIgnorePointer(t0, t1, t2) {
      var _ = this;
      _._ignoring = t0;
      _._ignoringSemantics = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderOffstage: function RenderOffstage(t0, t1) {
      var _ = this;
      _._offstage = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAbsorbPointer: function RenderAbsorbPointer(t0, t1, t2) {
      var _ = this;
      _._absorbing = t0;
      _._ignoringSemantics = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderSemanticsGestureHandler: function RenderSemanticsGestureHandler(t0, t1) {
      var _ = this;
      _._onVerticalDragUpdate = _._onHorizontalDragUpdate = _._onLongPress = _._onTap = null;
      _.behavior = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderSemanticsAnnotations: function RenderSemanticsAnnotations(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56) {
      var _ = this;
      _._container = t0;
      _._explicitChildNodes = t1;
      _._excludeSemantics = t2;
      _._checked = t3;
      _._enabled = t4;
      _._selected = t5;
      _._button = t6;
      _._slider = t7;
      _._keyboardKey = t8;
      _._proxy_box$_link = t9;
      _._header = t10;
      _._textField = t11;
      _._readOnly = t12;
      _._focusable = t13;
      _._focused = t14;
      _._inMutuallyExclusiveGroup = t15;
      _._obscured = t16;
      _._multiline = t17;
      _._scopesRoute = t18;
      _._namesRoute = t19;
      _._hidden = t20;
      _._image = t21;
      _._liveRegion = t22;
      _._proxy_box$_maxValueLength = t23;
      _._proxy_box$_currentValueLength = t24;
      _._toggled = t25;
      _._proxy_box$_label = t26;
      _._proxy_box$_value = t27;
      _._proxy_box$_increasedValue = t28;
      _._proxy_box$_decreasedValue = t29;
      _._proxy_box$_hint = t30;
      _._hintOverrides = t31;
      _._proxy_box$_textDirection = t32;
      _._sortKey = t33;
      _._tagForChildren = t34;
      _._onTap = t35;
      _._onDismiss = t36;
      _._onLongPress = t37;
      _._onScrollLeft = t38;
      _._onScrollRight = t39;
      _._onScrollUp = t40;
      _._onScrollDown = t41;
      _._onIncrease = t42;
      _._onDecrease = t43;
      _._onCopy = t44;
      _._onCut = t45;
      _._onPaste = t46;
      _._onMoveCursorForwardByCharacter = t47;
      _._onMoveCursorBackwardByCharacter = t48;
      _._onMoveCursorForwardByWord = t49;
      _._onMoveCursorBackwardByWord = t50;
      _._onSetSelection = t51;
      _._onSetText = t52;
      _._onDidGainAccessibilityFocus = t53;
      _._onDidLoseAccessibilityFocus = t54;
      _._proxy_box$_customSemanticsActions = t55;
      _.RenderObjectWithChildMixin__child = t56;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderBlockSemantics: function RenderBlockSemantics(t0, t1) {
      var _ = this;
      _._blocking = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderMergeSemantics: function RenderMergeSemantics(t0) {
      var _ = this;
      _.RenderObjectWithChildMixin__child = t0;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderExcludeSemantics: function RenderExcludeSemantics(t0, t1) {
      var _ = this;
      _._excluding = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin: function _RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin() {
    },
    _RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin: function _RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin() {
    },
    _RenderProxyBox_RenderBox_RenderObjectWithChildMixin: function _RenderProxyBox_RenderBox_RenderObjectWithChildMixin() {
    },
    _RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin: function _RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin() {
    },
    SemanticsEvent: function SemanticsEvent() {
    },
    TapSemanticEvent: function TapSemanticEvent(t0) {
      this.type = t0;
    },
    DefaultTextEditingActions: function DefaultTextEditingActions(t0, t1, t2) {
      this.actions = t0;
      this.child = t1;
      this.key = t2;
    },
    _DoNothingAndStopPropagationTextAction: function _DoNothingAndStopPropagationTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExpandSelectionLeftByLineTextAction: function _ExpandSelectionLeftByLineTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExpandSelectionRightByLineTextAction: function _ExpandSelectionRightByLineTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExpandSelectionToEndTextAction: function _ExpandSelectionToEndTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExpandSelectionToStartTextAction: function _ExpandSelectionToStartTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionDownTextAction: function _ExtendSelectionDownTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionLeftByLineTextAction: function _ExtendSelectionLeftByLineTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionLeftByWordAndStopAtReversalTextAction: function _ExtendSelectionLeftByWordAndStopAtReversalTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionLeftByWordTextAction: function _ExtendSelectionLeftByWordTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionLeftTextAction: function _ExtendSelectionLeftTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionRightByLineTextAction: function _ExtendSelectionRightByLineTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionRightByWordAndStopAtReversalTextAction: function _ExtendSelectionRightByWordAndStopAtReversalTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionRightByWordTextAction: function _ExtendSelectionRightByWordTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionRightTextAction: function _ExtendSelectionRightTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _ExtendSelectionUpTextAction: function _ExtendSelectionUpTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionDownTextAction: function _MoveSelectionDownTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionLeftTextAction: function _MoveSelectionLeftTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionRightTextAction: function _MoveSelectionRightTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionUpTextAction: function _MoveSelectionUpTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionLeftByLineTextAction: function _MoveSelectionLeftByLineTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionLeftByWordTextAction: function _MoveSelectionLeftByWordTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionRightByLineTextAction: function _MoveSelectionRightByLineTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionRightByWordTextAction: function _MoveSelectionRightByWordTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionToEndTextAction: function _MoveSelectionToEndTextAction(t0) {
      this._actions$_listeners = t0;
    },
    _MoveSelectionToStartTextAction: function _MoveSelectionToStartTextAction(t0) {
      this._actions$_listeners = t0;
    },
    DefaultTextEditingShortcuts__shortcuts: function() {
      var t1 = $.$get$DefaultTextEditingShortcuts__webShortcuts();
      return t1;
    },
    DefaultTextEditingShortcuts: function DefaultTextEditingShortcuts(t0, t1, t2, t3) {
      var _ = this;
      _.shortcuts = t0;
      _.child = t1;
      _.debugLabel = t2;
      _.key = t3;
    },
    PrimaryScrollController_of: function(context) {
      var result = context.dependOnInheritedWidgetOfExactType$1$0(type$.PrimaryScrollController);
      return result == null ? null : result.controller;
    },
    PrimaryScrollController: function PrimaryScrollController(t0, t1, t2) {
      this.controller = t0;
      this.child = t1;
      this.key = t2;
    },
    TypedDataBuffer: function TypedDataBuffer() {
    },
    _IntBuffer0: function _IntBuffer0() {
    },
    Uint8Buffer: function Uint8Buffer(t0, t1) {
      this._typed_buffer$_buffer = t0;
      this._typed_buffer$_length = t1;
    },
    Matrix4_tryInvert: function(other) {
      var r = new E.Matrix4(new Float64Array(16));
      if (r.copyInverse$1(other) === 0)
        return null;
      return r;
    },
    Matrix4$zero: function() {
      return new E.Matrix4(new Float64Array(16));
    },
    Matrix4_Matrix4$identity: function() {
      var t1 = new E.Matrix4(new Float64Array(16));
      t1.setIdentity$0();
      return t1;
    },
    Matrix4_Matrix4$translationValues: function(x, y, z) {
      var t1 = new Float64Array(16),
        t2 = new E.Matrix4(t1);
      t2.setIdentity$0();
      t1[14] = z;
      t1[13] = y;
      t1[12] = x;
      return t2;
    },
    Matrix4_Matrix4$diagonal3Values: function(x, y, z) {
      var t1 = new Float64Array(16);
      t1[15] = 1;
      t1[10] = z;
      t1[5] = y;
      t1[0] = x;
      return new E.Matrix4(t1);
    },
    Matrix4: function Matrix4(t0) {
      this._m4storage = t0;
    },
    Vector3: function Vector3(t0) {
      this._v3storage = t0;
    },
    Vector4: function Vector4(t0) {
      this._v4storage = t0;
    },
    debugInstrumentAction: function(description, action, $T) {
      return E.debugInstrumentAction$body(description, action, $T, $T);
    },
    debugInstrumentAction$body: function(description, action, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, t1;
      var $async$debugInstrumentAction = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = action.call$0();
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$debugInstrumentAction, $async$completer);
    },
    debugFormatDouble: function(value) {
      if (value == null)
        return "null";
      return C.JSNumber_methods.toStringAsFixed$1(value, 1);
    }
  },
  T = {CupertinoIconThemeData: function CupertinoIconThemeData(t0, t1, t2) {
      this.color = t0;
      this._opacity = t1;
      this.size = t2;
    }, _CupertinoIconThemeData_IconThemeData_Diagnosticable: function _CupertinoIconThemeData_IconThemeData_Diagnosticable() {
    }, TargetPlatform: function TargetPlatform(t0) {
      this._platform$_name = t0;
    }, LongPressGestureRecognizer: function LongPressGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._longPressAccepted = false;
      _._velocityTracker = _.onSecondaryLongPressEnd = _.onSecondaryLongPressUp = _.onSecondaryLongPressMoveUpdate = _.onSecondaryLongPressStart = _.onSecondaryLongPress = _.onLongPressEnd = _.onLongPressUp = _.onLongPressMoveUpdate = _.onLongPressStart = _.onLongPress = _._long_press$_initialButtons = _._longPressOrigin = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _.state = t2;
      _.initialPosition = _.primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _._kindFilter = t6;
      _._pointerToKind = t7;
    },
    ElevatedButtonThemeData_lerp: function(a, b, t) {
      return new T.ElevatedButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    ElevatedButtonThemeData: function ElevatedButtonThemeData(t0) {
      this.style = t0;
    },
    _ElevatedButtonThemeData_Object_Diagnosticable: function _ElevatedButtonThemeData_Object_Diagnosticable() {
    },
    RadioThemeData__lerpProperties: function(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return new T._LerpProperties0(a, b, t, lerpFunction, $T._eval$1("_LerpProperties0<0>"));
    },
    RadioThemeData: function RadioThemeData(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.mouseCursor = t0;
      _.fillColor = t1;
      _.overlayColor = t2;
      _.splashRadius = t3;
      _.materialTapTargetSize = t4;
      _.visualDensity = t5;
    },
    _LerpProperties0: function _LerpProperties0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    _RadioThemeData_Object_Diagnosticable: function _RadioThemeData_Object_Diagnosticable() {
    },
    TextButtonThemeData_lerp: function(a, b, t) {
      return new T.TextButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    TextButtonThemeData: function TextButtonThemeData(t0) {
      this.style = t0;
    },
    _TextButtonThemeData_Object_Diagnosticable: function _TextButtonThemeData_Object_Diagnosticable() {
    },
    TooltipThemeData_lerp: function(a, b, t) {
      var t6, t7,
        t1 = P.lerpDouble(a.height, b.height, t),
        t2 = V.EdgeInsetsGeometry_lerp(a.padding, b.padding, t),
        t3 = V.EdgeInsetsGeometry_lerp(a.margin, b.margin, t),
        t4 = P.lerpDouble(a.verticalOffset, b.verticalOffset, t),
        t5 = t < 0.5;
      if (t5)
        t6 = a.preferBelow;
      else
        t6 = b.preferBelow;
      if (t5)
        t5 = a.excludeFromSemantics;
      else
        t5 = b.excludeFromSemantics;
      t7 = Z.Decoration_lerp(a.decoration, b.decoration, t);
      return new T.TooltipThemeData(t1, t2, t3, t4, t6, t5, t7, A.TextStyle_lerp(a.textStyle, b.textStyle, t));
    },
    TooltipThemeData: function TooltipThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.height = t0;
      _.padding = t1;
      _.margin = t2;
      _.verticalOffset = t3;
      _.preferBelow = t4;
      _.excludeFromSemantics = t5;
      _.decoration = t6;
      _.textStyle = t7;
    },
    _TooltipThemeData_Object_Diagnosticable: function _TooltipThemeData_Object_Diagnosticable() {
    },
    Simulation: function Simulation() {
    },
    PhysicalModelLayer$: function() {
      return new T.PhysicalModelLayer(C.Clip_0);
    },
    AnnotationResult: function AnnotationResult(t0, t1) {
      this._layer$_entries = t0;
      this.$ti = t1;
    },
    Layer0: function Layer0() {
    },
    PictureLayer: function PictureLayer(t0) {
      var _ = this;
      _.canvasBounds = t0;
      _._picture = null;
      _._willChangeHint = _._isComplexHint = false;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    PerformanceOverlayLayer: function PerformanceOverlayLayer(t0, t1, t2, t3, t4) {
      var _ = this;
      _._overlayRect = t0;
      _.optionsMask = t1;
      _.rasterizerThreshold = t2;
      _.checkerboardRasterCacheImages = t3;
      _.checkerboardOffscreenLayers = t4;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ContainerLayer0: function ContainerLayer0() {
    },
    OffsetLayer: function OffsetLayer(t0) {
      var _ = this;
      _._layer$_offset = t0;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ClipRectLayer: function ClipRectLayer(t0) {
      var _ = this;
      _._layer$_clipRect = null;
      _._layer$_clipBehavior = t0;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    ClipPathLayer: function ClipPathLayer(t0) {
      var _ = this;
      _._clipPath = null;
      _._layer$_clipBehavior = t0;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    TransformLayer: function TransformLayer(t0, t1) {
      var _ = this;
      _._layer$_transform = t0;
      _._invertedTransform = _._lastEffectiveTransform = null;
      _._inverseDirty = true;
      _._layer$_offset = t1;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    OpacityLayer: function OpacityLayer(t0) {
      var _ = this;
      _._layer$_alpha = null;
      _._layer$_offset = t0;
      _._lastChild = _._firstChild = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    PhysicalModelLayer: function PhysicalModelLayer(t0) {
      var _ = this;
      _._clipPath = null;
      _._layer$_clipBehavior = t0;
      _._lastChild = _._firstChild = _._layer$_shadowColor = _._layer$_color = _._layer$_elevation = null;
      _._needsAddToScene = true;
      _.debugCreator = _._previousSibling = _._nextSibling = _._engineLayer = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _Layer_AbstractNode_DiagnosticableTreeMixin: function _Layer_AbstractNode_DiagnosticableTreeMixin() {
    },
    RenderShiftedBox: function RenderShiftedBox() {
    },
    RenderShiftedBox_hitTestChildren_closure: function RenderShiftedBox_hitTestChildren_closure(t0, t1, t2) {
      this.$this = t0;
      this.position = t1;
      this.childParentData = t2;
    },
    RenderPadding: function RenderPadding(t0, t1, t2) {
      var _ = this;
      _._resolvedPadding = null;
      _._padding = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderAligningShiftedBox: function RenderAligningShiftedBox() {
    },
    RenderPositionedBox: function RenderPositionedBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _._widthFactor = t0;
      _._heightFactor = t1;
      _._resolvedAlignment = null;
      _._alignment = t2;
      _._shifted_box$_textDirection = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderShiftedBox_RenderBox_RenderObjectWithChildMixin: function _RenderShiftedBox_RenderBox_RenderObjectWithChildMixin() {
    },
    Directionality$: function(child, textDirection) {
      return new T.Directionality(textDirection, child, null);
    },
    Directionality_maybeOf: function(context) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      return widget == null ? null : widget.textDirection;
    },
    CustomPaint$: function(child, foregroundPainter, painter) {
      return new T.CustomPaint(painter, foregroundPainter, child, null);
    },
    ClipPath$: function(child, clipBehavior, clipper) {
      return new T.ClipPath(clipper, clipBehavior, child, null);
    },
    Center$: function(child, heightFactor, widthFactor) {
      return new T.Center(C.Alignment_0_0, widthFactor, heightFactor, child, null);
    },
    SizedBox$: function(child, height, width) {
      return new T.SizedBox(width, height, child, null);
    },
    Stack$: function(children, fit) {
      return new T.Stack(fit, children, null);
    },
    Positioned$: function(bottom, child, height, key, left, right, $top, width) {
      return new T.Positioned(left, $top, right, bottom, width, height, child, key);
    },
    RichText$: function(locale, maxLines, overflow, softWrap, strutStyle, text, textAlign, textDirection, textHeightBehavior, textScaleFactor, textWidthBasis) {
      return new T.RichText(text, textAlign, textDirection, true, overflow, textScaleFactor, maxLines, locale, strutStyle, textWidthBasis, textHeightBehavior, T.RichText__extractChildren(text), null);
    },
    RichText__extractChildren: function(span) {
      var result, t1 = {};
      t1.index = 0;
      result = H.setRuntimeTypeInfo([], type$.JSArray_Widget);
      span.visitChildren$1(new T.RichText__extractChildren_closure(t1, result));
      return result;
    },
    Listener$: function(behavior, child, onPointerCancel, onPointerDown, onPointerUp) {
      return new T.Listener(onPointerDown, onPointerUp, onPointerCancel, behavior, child, null);
    },
    MouseRegion$: function(child, cursor, onEnter, onExit, opaque) {
      return new T.MouseRegion(onEnter, onExit, cursor, true, child, null);
    },
    Semantics$: function(button, child, container, enabled, explicitChildNodes, focusable, focused, label, onDismiss, onLongPress, onTap, scopesRoute, sortKey, tagForChildren, textDirection) {
      var _null = null;
      return new T.Semantics(new A.SemanticsProperties(enabled, _null, _null, _null, button, _null, _null, _null, _null, _null, _null, focusable, focused, _null, _null, _null, _null, scopesRoute, _null, _null, _null, _null, _null, label, _null, _null, _null, _null, _null, textDirection, sortKey, tagForChildren, onTap, onLongPress, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, onDismiss, _null), container, explicitChildNodes, false, child, _null);
    },
    Directionality: function Directionality(t0, t1, t2) {
      this.textDirection = t0;
      this.child = t1;
      this.key = t2;
    },
    Opacity: function Opacity(t0, t1, t2) {
      this.opacity = t0;
      this.child = t1;
      this.key = t2;
    },
    CustomPaint: function CustomPaint(t0, t1, t2, t3) {
      var _ = this;
      _.painter = t0;
      _.foregroundPainter = t1;
      _.child = t2;
      _.key = t3;
    },
    ClipPath: function ClipPath(t0, t1, t2, t3) {
      var _ = this;
      _.clipper = t0;
      _.clipBehavior = t1;
      _.child = t2;
      _.key = t3;
    },
    PhysicalModel: function PhysicalModel(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.shape = t0;
      _.clipBehavior = t1;
      _.borderRadius = t2;
      _.elevation = t3;
      _.color = t4;
      _.shadowColor = t5;
      _.child = t6;
      _.key = t7;
    },
    PhysicalShape: function PhysicalShape(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.clipper = t0;
      _.clipBehavior = t1;
      _.elevation = t2;
      _.color = t3;
      _.shadowColor = t4;
      _.child = t5;
      _.key = t6;
    },
    FractionalTranslation: function FractionalTranslation(t0, t1, t2, t3) {
      var _ = this;
      _.translation = t0;
      _.transformHitTests = t1;
      _.child = t2;
      _.key = t3;
    },
    Padding: function Padding(t0, t1, t2) {
      this.padding = t0;
      this.child = t1;
      this.key = t2;
    },
    Align: function Align() {
    },
    Center: function Center(t0, t1, t2, t3, t4) {
      var _ = this;
      _.alignment = t0;
      _.widthFactor = t1;
      _.heightFactor = t2;
      _.child = t3;
      _.key = t4;
    },
    SizedBox: function SizedBox(t0, t1, t2, t3) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.child = t2;
      _.key = t3;
    },
    ConstrainedBox: function ConstrainedBox(t0, t1, t2) {
      this.constraints = t0;
      this.child = t1;
      this.key = t2;
    },
    LimitedBox: function LimitedBox(t0, t1, t2, t3) {
      var _ = this;
      _.maxWidth = t0;
      _.maxHeight = t1;
      _.child = t2;
      _.key = t3;
    },
    Offstage: function Offstage(t0, t1, t2) {
      this.offstage = t0;
      this.child = t1;
      this.key = t2;
    },
    _OffstageElement: function _OffstageElement(t0, t1, t2, t3) {
      var _ = this;
      _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = _._framework$_child = null;
      _._cachedHash = t0;
      _.__Element__depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    Stack: function Stack(t0, t1, t2) {
      this.fit = t0;
      this.children = t1;
      this.key = t2;
    },
    Positioned: function Positioned(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.width = t4;
      _.height = t5;
      _.child = t6;
      _.key = t7;
    },
    PositionedDirectional: function PositionedDirectional(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.top = t1;
      _.bottom = t2;
      _.width = t3;
      _.child = t4;
      _.key = t5;
    },
    RichText: function RichText(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.text = t0;
      _.textAlign = t1;
      _.textDirection = t2;
      _.softWrap = t3;
      _.overflow = t4;
      _.textScaleFactor = t5;
      _.maxLines = t6;
      _.locale = t7;
      _.strutStyle = t8;
      _.textWidthBasis = t9;
      _.textHeightBehavior = t10;
      _.children = t11;
      _.key = t12;
    },
    RichText__extractChildren_closure: function RichText__extractChildren_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    Listener: function Listener(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.onPointerDown = t0;
      _.onPointerUp = t1;
      _.onPointerCancel = t2;
      _.behavior = t3;
      _.child = t4;
      _.key = t5;
    },
    MouseRegion: function MouseRegion(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.onEnter = t0;
      _.onExit = t1;
      _.cursor = t2;
      _.opaque = t3;
      _.child = t4;
      _.key = t5;
    },
    _MouseRegionState: function _MouseRegionState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _RawMouseRegion: function _RawMouseRegion(t0, t1, t2) {
      this.owner = t0;
      this.child = t1;
      this.key = t2;
    },
    RepaintBoundary: function RepaintBoundary(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    IgnorePointer: function IgnorePointer(t0, t1, t2, t3) {
      var _ = this;
      _.ignoring = t0;
      _.ignoringSemantics = t1;
      _.child = t2;
      _.key = t3;
    },
    AbsorbPointer: function AbsorbPointer(t0, t1, t2) {
      this.absorbing = t0;
      this.child = t1;
      this.key = t2;
    },
    Semantics: function Semantics(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.properties = t0;
      _.container = t1;
      _.explicitChildNodes = t2;
      _.excludeSemantics = t3;
      _.child = t4;
      _.key = t5;
    },
    MergeSemantics: function MergeSemantics(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    BlockSemantics: function BlockSemantics(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ExcludeSemantics: function ExcludeSemantics(t0, t1, t2) {
      this.excluding = t0;
      this.child = t1;
      this.key = t2;
    },
    KeyedSubtree: function KeyedSubtree(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    Builder: function Builder(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    ColoredBox: function ColoredBox(t0, t1, t2) {
      this.color = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderColoredBox: function _RenderColoredBox(t0, t1, t2) {
      var _ = this;
      _._basic$_color = t0;
      _.behavior = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    Hero__allHeroesFor: function(context, isUserGestureTransition, $navigator) {
      var result = P.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$._HeroState);
      context.visitChildren$1(new T.Hero__allHeroesFor_visitor($navigator, new T.Hero__allHeroesFor_inviteHero(result, isUserGestureTransition)));
      return result;
    },
    _HeroFlightManifest__boundingBoxFor: function(context, ancestorContext) {
      var t2,
        t1 = context.get$renderObject();
      t1.toString;
      type$.RenderBox._as(t1);
      t2 = t1.getTransformTo$1(0, ancestorContext == null ? null : ancestorContext.get$renderObject());
      t1 = t1._size;
      return T.MatrixUtils_transformRect(t2, new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy));
    },
    HeroFlightDirection: function HeroFlightDirection(t0) {
      this._heroes$_name = t0;
    },
    Hero: function Hero(t0, t1, t2) {
      this.tag = t0;
      this.child = t1;
      this.key = t2;
    },
    Hero__allHeroesFor_inviteHero: function Hero__allHeroesFor_inviteHero(t0, t1) {
      this.result = t0;
      this.isUserGestureTransition = t1;
    },
    Hero__allHeroesFor_visitor: function Hero__allHeroesFor_visitor(t0, t1) {
      this.navigator = t0;
      this.inviteHero = t1;
    },
    _HeroState: function _HeroState(t0, t1) {
      var _ = this;
      _._heroes$_key = t0;
      _._placeholderSize = null;
      _._shouldIncludeChild = true;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _HeroState_startFlight_closure: function _HeroState_startFlight_closure(t0, t1) {
      this.$this = t0;
      this.box = t1;
    },
    _HeroState_endFlight_closure: function _HeroState_endFlight_closure() {
    },
    _HeroFlightManifest: function _HeroFlightManifest(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.type = t0;
      _.overlay = t1;
      _.navigatorSize = t2;
      _.fromRoute = t3;
      _.toRoute = t4;
      _.fromHero = t5;
      _.toHero = t6;
      _.createRectTween = t7;
      _.shuttleBuilder = t8;
      _.isUserGestureTransition = t9;
      _.isDiverted = t10;
      _.___HeroFlightManifest_isValid = _.___HeroFlightManifest_toHeroLocation = _.___HeroFlightManifest_fromHeroLocation = null;
    },
    _HeroFlight: function _HeroFlight(t0, t1) {
      var _ = this;
      _.onFlightEnded = t0;
      _.shuttle = _.___HeroFlight_heroRectTween = null;
      _._heroOpacity = t1;
      _.overlayEntry = _.___HeroFlight_manifest = _.___HeroFlight__proxyAnimation = null;
      _._scheduledPerformAnimtationUpdate = _._aborted = false;
    },
    _HeroFlight__buildOverlay_closure: function _HeroFlight__buildOverlay_closure(t0) {
      this.$this = t0;
    },
    _HeroFlight__handleAnimationUpdate_delayedPerformAnimtationUpdate: function _HeroFlight__handleAnimationUpdate_delayedPerformAnimtationUpdate(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    HeroController: function HeroController(t0, t1) {
      this.createRectTween = t0;
      this._flights = t1;
      this._navigator$_navigator = null;
    },
    HeroController_didStopUserGesture_isInvalidFlight: function HeroController_didStopUserGesture_isInvalidFlight() {
    },
    HeroController__maybeStartHeroTransition_closure: function HeroController__maybeStartHeroTransition_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.$this = t0;
      _.from = t1;
      _.to = t2;
      _.animation = t3;
      _.flightType = t4;
      _.isUserGestureTransition = t5;
    },
    IconThemeData_lerp: function(a, b, t) {
      var t4, _null = null,
        t1 = a == null,
        t2 = t1 ? _null : a.color,
        t3 = b == null;
      t2 = P.Color_lerp(t2, t3 ? _null : b.color, t);
      t4 = t1 ? _null : a.get$opacity(a);
      t4 = P.lerpDouble(t4, t3 ? _null : b.get$opacity(b), t);
      t1 = t1 ? _null : a.size;
      return new T.IconThemeData(t2, t4, P.lerpDouble(t1, t3 ? _null : b.size, t));
    },
    IconThemeData: function IconThemeData(t0, t1, t2) {
      this.color = t0;
      this._opacity = t1;
      this.size = t2;
    },
    _IconThemeData_Object_Diagnosticable: function _IconThemeData_Object_Diagnosticable() {
    },
    ModalRoute_of: function(context, $T) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$._ModalScopeStatus),
        t1 = widget == null ? null : widget.route;
      return $T._eval$1("ModalRoute<0>?")._as(t1);
    },
    OverlayRoute: function OverlayRoute() {
    },
    TransitionRoute: function TransitionRoute() {
    },
    TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd: function TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd(t0, t1, t2) {
      this.$this = t0;
      this.nextTrain = t1;
      this.nextRoute = t2;
    },
    TransitionRoute__updateSecondaryAnimation_closure: function TransitionRoute__updateSecondaryAnimation_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.nextTrain = t1;
      this._jumpOnAnimationEnd = t2;
    },
    TransitionRoute__updateSecondaryAnimation_closure0: function TransitionRoute__updateSecondaryAnimation_closure0(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.nextRoute = t2;
    },
    TransitionRoute__setSecondaryAnimation_closure: function TransitionRoute__setSecondaryAnimation_closure(t0, t1) {
      this.$this = t0;
      this.animation = t1;
    },
    LocalHistoryRoute: function LocalHistoryRoute() {
    },
    _DismissModalAction: function _DismissModalAction(t0, t1) {
      this.context = t0;
      this._actions$_listeners = t1;
    },
    _ModalScopeStatus: function _ModalScopeStatus(t0, t1, t2, t3, t4) {
      var _ = this;
      _.isCurrent = t0;
      _.canPop = t1;
      _.route = t2;
      _.child = t3;
      _.key = t4;
    },
    _ModalScope: function _ModalScope(t0, t1, t2) {
      this.route = t0;
      this.key = t1;
      this.$ti = t2;
    },
    _ModalScopeState: function _ModalScopeState(t0, t1, t2, t3) {
      var _ = this;
      _.___ModalScopeState__listenable = _._page = null;
      _.focusScopeNode = t0;
      _.primaryScrollController = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
      _.$ti = t3;
    },
    _ModalScopeState__forceRebuildPage_closure: function _ModalScopeState__forceRebuildPage_closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build_closure: function _ModalScopeState_build_closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build_closure0: function _ModalScopeState_build_closure0(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build__closure0: function _ModalScopeState_build__closure0(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build___closure: function _ModalScopeState_build___closure(t0) {
      this.$this = t0;
    },
    _ModalScopeState_build__closure: function _ModalScopeState_build__closure(t0) {
      this.$this = t0;
    },
    ModalRoute: function ModalRoute() {
    },
    ModalRoute_offstage_closure: function ModalRoute_offstage_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    ModalRoute_changedInternalState_closure: function ModalRoute_changedInternalState_closure() {
    },
    _ModalRoute_TransitionRoute_LocalHistoryRoute: function _ModalRoute_TransitionRoute_LocalHistoryRoute() {
    },
    MatrixUtils_getAsTranslation: function(transform) {
      var values = transform._m4storage;
      if (values[0] === 1 && values[1] === 0 && values[2] === 0 && values[3] === 0 && values[4] === 0 && values[5] === 1 && values[6] === 0 && values[7] === 0 && values[8] === 0 && values[9] === 0 && values[10] === 1 && values[11] === 0 && values[14] === 0 && values[15] === 1)
        return new P.Offset(values[12], values[13]);
      return null;
    },
    MatrixUtils_matrixEquals: function(a, b) {
      var t1, t2;
      if (a === b)
        return true;
      if (a == null)
        return T.MatrixUtils_isIdentity(b);
      t1 = a._m4storage;
      t2 = b._m4storage;
      return t1[0] === t2[0] && t1[1] === t2[1] && t1[2] === t2[2] && t1[3] === t2[3] && t1[4] === t2[4] && t1[5] === t2[5] && t1[6] === t2[6] && t1[7] === t2[7] && t1[8] === t2[8] && t1[9] === t2[9] && t1[10] === t2[10] && t1[11] === t2[11] && t1[12] === t2[12] && t1[13] === t2[13] && t1[14] === t2[14] && t1[15] === t2[15];
    },
    MatrixUtils_isIdentity: function(a) {
      var t1 = a._m4storage;
      return t1[0] === 1 && t1[1] === 0 && t1[2] === 0 && t1[3] === 0 && t1[4] === 0 && t1[5] === 1 && t1[6] === 0 && t1[7] === 0 && t1[8] === 0 && t1[9] === 0 && t1[10] === 1 && t1[11] === 0 && t1[12] === 0 && t1[13] === 0 && t1[14] === 0 && t1[15] === 1;
    },
    MatrixUtils_transformPoint: function(transform, point) {
      var storage = transform._m4storage,
        x = point._dx,
        y = point._dy,
        rx = storage[0] * x + storage[4] * y + storage[12],
        ry = storage[1] * x + storage[5] * y + storage[13],
        rw = storage[3] * x + storage[7] * y + storage[15];
      if (rw === 1)
        return new P.Offset(rx, ry);
      else
        return new P.Offset(rx / rw, ry / rw);
    },
    MatrixUtils__minMax: function() {
      var t1 = $.MatrixUtils____minMax;
      if (t1 == null) {
        t1 = new Float64Array(4);
        $.MatrixUtils____minMax = t1;
      }
      return t1;
    },
    MatrixUtils__accumulate: function(m, x, y, first, isAffine) {
      var t1,
        w = isAffine ? 1 : 1 / (m[3] * x + m[7] * y + m[15]),
        tx = (m[0] * x + m[4] * y + m[12]) * w,
        ty = (m[1] * x + m[5] * y + m[13]) * w;
      if (first) {
        t1 = T.MatrixUtils__minMax();
        T.MatrixUtils__minMax()[2] = tx;
        t1[0] = tx;
        t1 = T.MatrixUtils__minMax();
        T.MatrixUtils__minMax()[3] = ty;
        t1[1] = ty;
      } else {
        if (tx < T.MatrixUtils__minMax()[0])
          T.MatrixUtils__minMax()[0] = tx;
        if (ty < T.MatrixUtils__minMax()[1])
          T.MatrixUtils__minMax()[1] = ty;
        if (tx > T.MatrixUtils__minMax()[2])
          T.MatrixUtils__minMax()[2] = tx;
        if (ty > T.MatrixUtils__minMax()[3])
          T.MatrixUtils__minMax()[3] = ty;
      }
    },
    MatrixUtils_transformRect: function(transform, rect) {
      var isAffine, wx, hx, rx, wy, hy, ry, left, right, $top, bottom, hw, rw, ulx, uly, urx, t3, ury, t4, llx, lly, lrx, lry,
        storage = transform._m4storage,
        x = rect.left,
        y = rect.top,
        t1 = rect.right,
        w = t1 - x,
        t2 = rect.bottom,
        h = t2 - y;
      if (!isFinite(w) || !isFinite(h)) {
        isAffine = storage[3] === 0 && storage[7] === 0 && storage[15] === 1;
        T.MatrixUtils__accumulate(storage, x, y, true, isAffine);
        T.MatrixUtils__accumulate(storage, t1, y, false, isAffine);
        T.MatrixUtils__accumulate(storage, x, t2, false, isAffine);
        T.MatrixUtils__accumulate(storage, t1, t2, false, isAffine);
        return new P.Rect(T.MatrixUtils__minMax()[0], T.MatrixUtils__minMax()[1], T.MatrixUtils__minMax()[2], T.MatrixUtils__minMax()[3]);
      }
      t1 = storage[0];
      wx = t1 * w;
      t2 = storage[4];
      hx = t2 * h;
      rx = t1 * x + t2 * y + storage[12];
      t2 = storage[1];
      wy = t2 * w;
      t1 = storage[5];
      hy = t1 * h;
      ry = t2 * x + t1 * y + storage[13];
      t1 = storage[3];
      if (t1 === 0 && storage[7] === 0 && storage[15] === 1) {
        left = rx + wx;
        if (wx < 0)
          right = rx;
        else {
          right = left;
          left = rx;
        }
        if (hx < 0)
          left += hx;
        else
          right += hx;
        $top = ry + wy;
        if (wy < 0)
          bottom = ry;
        else {
          bottom = $top;
          $top = ry;
        }
        if (hy < 0)
          $top += hy;
        else
          bottom += hy;
        return new P.Rect(left, $top, right, bottom);
      } else {
        t2 = storage[7];
        hw = t2 * h;
        rw = t1 * x + t2 * y + storage[15];
        ulx = rx / rw;
        uly = ry / rw;
        t2 = rx + wx;
        t1 = rw + t1 * w;
        urx = t2 / t1;
        t3 = ry + wy;
        ury = t3 / t1;
        t4 = rw + hw;
        llx = (rx + hx) / t4;
        lly = (ry + hy) / t4;
        t1 += hw;
        lrx = (t2 + hx) / t1;
        lry = (t3 + hy) / t1;
        return new P.Rect(T.MatrixUtils__min4(ulx, urx, llx, lrx), T.MatrixUtils__min4(uly, ury, lly, lry), T.MatrixUtils__max4(ulx, urx, llx, lrx), T.MatrixUtils__max4(uly, ury, lly, lry));
      }
    },
    MatrixUtils__min4: function(a, b, c, d) {
      var e = a < b ? a : b,
        f = c < d ? c : d;
      return e < f ? e : f;
    },
    MatrixUtils__max4: function(a, b, c, d) {
      var e = a > b ? a : b,
        f = c > d ? c : d;
      return e > f ? e : f;
    },
    MatrixUtils_inverseTransformRect: function(transform, rect) {
      var transform0;
      if (T.MatrixUtils_isIdentity(transform))
        return rect;
      transform0 = new E.Matrix4(new Float64Array(16));
      transform0.setFrom$1(transform);
      transform0.copyInverse$1(transform0);
      return T.MatrixUtils_transformRect(transform0, rect);
    }
  },
  K = {
    CupertinoUserInterfaceLevel_maybeOf: function(context) {
      context.dependOnInheritedWidgetOfExactType$1$0(type$.CupertinoUserInterfaceLevel);
      return null;
    },
    CupertinoUserInterfaceLevelData: function CupertinoUserInterfaceLevelData(t0) {
      this._interface_level$_name = t0;
    },
    CupertinoTheme: function CupertinoTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    _InheritedCupertinoTheme: function _InheritedCupertinoTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    CupertinoThemeData: function CupertinoThemeData(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._defaults = t0;
      _.brightness = t1;
      _.primaryColor = t2;
      _.primaryContrastingColor = t3;
      _.textTheme = t4;
      _.barBackgroundColor = t5;
      _.scaffoldBackgroundColor = t6;
    },
    NoDefaultCupertinoThemeData: function NoDefaultCupertinoThemeData(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.brightness = t0;
      _.primaryColor = t1;
      _.primaryContrastingColor = t2;
      _.textTheme = t3;
      _.barBackgroundColor = t4;
      _.scaffoldBackgroundColor = t5;
    },
    _CupertinoThemeDefaults: function _CupertinoThemeDefaults() {
    },
    _CupertinoTextThemeDefaults: function _CupertinoTextThemeDefaults() {
    },
    _CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable: function _CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable() {
    },
    ChipThemeData$: function(backgroundColor, brightness, checkmarkColor, deleteIconColor, disabledColor, elevation, labelPadding, labelStyle, padding, pressElevation, secondaryLabelStyle, secondarySelectedColor, selectedColor, selectedShadowColor, shadowColor, shape, side) {
      return new K.ChipThemeData(backgroundColor, deleteIconColor, disabledColor, selectedColor, secondarySelectedColor, shadowColor, selectedShadowColor, checkmarkColor, labelPadding, padding, side, shape, labelStyle, secondaryLabelStyle, brightness, elevation, pressElevation);
    },
    ChipThemeData_ChipThemeData$fromDefaults: function(brightness, labelStyle, secondaryColor) {
      var backgroundColor, deleteIconColor, disabledColor, selectedColor, secondarySelectedColor, secondaryLabelStyle, _null = null,
        primaryColor = brightness === C.Brightness_1 ? C.Color_4278190080 : C.Color_4294967295,
        t1 = primaryColor.value,
        t2 = t1 >>> 16 & 255,
        t3 = t1 >>> 8 & 255;
      t1 &= 255;
      backgroundColor = P.Color$fromARGB(31, t2, t3, t1);
      deleteIconColor = P.Color$fromARGB(222, t2, t3, t1);
      disabledColor = P.Color$fromARGB(12, t2, t3, t1);
      selectedColor = P.Color$fromARGB(61, t2, t3, t1);
      secondarySelectedColor = P.Color$fromARGB(61, secondaryColor.get$value(secondaryColor) >>> 16 & 255, secondaryColor.get$value(secondaryColor) >>> 8 & 255, secondaryColor.get$value(secondaryColor) & 255);
      secondaryLabelStyle = labelStyle.copyWith$1$color(P.Color$fromARGB(222, secondaryColor.get$value(secondaryColor) >>> 16 & 255, secondaryColor.get$value(secondaryColor) >>> 8 & 255, secondaryColor.get$value(secondaryColor) & 255));
      return K.ChipThemeData$(backgroundColor, brightness, _null, deleteIconColor, disabledColor, _null, _null, labelStyle.copyWith$1$color(P.Color$fromARGB(222, t2, t3, t1)), C.EdgeInsets_4_4_4_4, _null, secondaryLabelStyle, secondarySelectedColor, selectedColor, _null, _null, _null, _null);
    },
    ChipThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16,
        t1 = P.Color_lerp(a.backgroundColor, b.backgroundColor, t);
      t1.toString;
      t2 = P.Color_lerp(a.deleteIconColor, b.deleteIconColor, t);
      t3 = P.Color_lerp(a.disabledColor, b.disabledColor, t);
      t3.toString;
      t4 = P.Color_lerp(a.selectedColor, b.selectedColor, t);
      t4.toString;
      t5 = P.Color_lerp(a.secondarySelectedColor, b.secondarySelectedColor, t);
      t5.toString;
      t6 = P.Color_lerp(a.shadowColor, b.shadowColor, t);
      t7 = P.Color_lerp(a.selectedShadowColor, b.selectedShadowColor, t);
      t8 = P.Color_lerp(a.checkmarkColor, b.checkmarkColor, t);
      t9 = V.EdgeInsetsGeometry_lerp(a.labelPadding, b.labelPadding, t);
      t10 = V.EdgeInsetsGeometry_lerp(a.padding, b.padding, t);
      t10.toString;
      t11 = K.ChipThemeData__lerpSides(a.side, b.side, t);
      t12 = K.ChipThemeData__lerpShapes(a.shape, b.shape, t);
      t13 = A.TextStyle_lerp(a.labelStyle, b.labelStyle, t);
      t13.toString;
      t14 = A.TextStyle_lerp(a.secondaryLabelStyle, b.secondaryLabelStyle, t);
      t14.toString;
      if (t < 0.5)
        t15 = a.brightness;
      else
        t15 = b.brightness;
      t16 = P.lerpDouble(a.elevation, b.elevation, t);
      return K.ChipThemeData$(t1, t15, t8, t2, t3, t16, t9, t13, t10, P.lerpDouble(a.pressElevation, b.pressElevation, t), t14, t5, t4, t7, t6, t12, t11);
    },
    ChipThemeData__lerpSides: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1) {
        t1 = b.color.value;
        return Y.BorderSide_lerp(new Y.BorderSide(P.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, C.BorderStyle_1), b, t);
      }
      if (b == null) {
        t1 = a.color.value;
        return Y.BorderSide_lerp(new Y.BorderSide(P.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, C.BorderStyle_1), a, t);
      }
      return Y.BorderSide_lerp(a, b, t);
    },
    ChipThemeData__lerpShapes: function(a, b, t) {
      if (a == null && b == null)
        return null;
      return type$.nullable_OutlinedBorder._as(Y.ShapeBorder_lerp(a, b, t));
    },
    ChipThemeData: function ChipThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.backgroundColor = t0;
      _.deleteIconColor = t1;
      _.disabledColor = t2;
      _.selectedColor = t3;
      _.secondarySelectedColor = t4;
      _.shadowColor = t5;
      _.selectedShadowColor = t6;
      _.checkmarkColor = t7;
      _.labelPadding = t8;
      _.padding = t9;
      _.side = t10;
      _.shape = t11;
      _.labelStyle = t12;
      _.secondaryLabelStyle = t13;
      _.brightness = t14;
      _.elevation = t15;
      _.pressElevation = t16;
    },
    _ChipThemeData_Object_Diagnosticable: function _ChipThemeData_Object_Diagnosticable() {
    },
    _FadeUpwardsPageTransition: function _FadeUpwardsPageTransition(t0, t1, t2, t3) {
      var _ = this;
      _._positionAnimation = t0;
      _._opacityAnimation = t1;
      _.child = t2;
      _.key = t3;
    },
    PageTransitionsBuilder: function PageTransitionsBuilder() {
    },
    FadeUpwardsPageTransitionsBuilder: function FadeUpwardsPageTransitionsBuilder() {
    },
    CupertinoPageTransitionsBuilder: function CupertinoPageTransitionsBuilder() {
    },
    PageTransitionsTheme: function PageTransitionsTheme() {
    },
    PageTransitionsTheme__all_closure: function PageTransitionsTheme__all_closure(t0) {
      this.builders = t0;
    },
    _PageTransitionsTheme_Object_Diagnosticable: function _PageTransitionsTheme_Object_Diagnosticable() {
    },
    SnackBarThemeData: function SnackBarThemeData(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.backgroundColor = t0;
      _.actionTextColor = t1;
      _.disabledActionTextColor = t2;
      _.contentTextStyle = t3;
      _.elevation = t4;
      _.shape = t5;
      _.behavior = t6;
    },
    _SnackBarThemeData_Object_Diagnosticable: function _SnackBarThemeData_Object_Diagnosticable() {
    },
    Theme_of: function(context) {
      var theme,
        inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$._InheritedTheme),
        scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._LocalizationsScope),
        category = (scope == null ? null : type$.nullable_MaterialLocalizations._as(J.$index$asx(scope.localizationsState._typeToResources, C.Type_MaterialLocalizations_flR))) == null ? null : C.ScriptCategory_0;
      if (category == null)
        category = C.ScriptCategory_0;
      theme = inheritedTheme == null ? null : inheritedTheme.theme.data;
      if (theme == null)
        theme = $.$get$Theme__kFallbackTheme();
      return X.ThemeData_localize(theme, theme.typography.geometryThemeFor$1(category));
    },
    Theme: function Theme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    _InheritedTheme: function _InheritedTheme(t0, t1, t2) {
      this.theme = t0;
      this.child = t1;
      this.key = t2;
    },
    ThemeDataTween: function ThemeDataTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    AnimatedTheme: function AnimatedTheme(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.data = t0;
      _.child = t1;
      _.curve = t2;
      _.duration = t3;
      _.onEnd = t4;
      _.key = t5;
    },
    _AnimatedThemeState: function _AnimatedThemeState(t0, t1) {
      var _ = this;
      _.__ImplicitlyAnimatedWidgetState__animation = _.__ImplicitlyAnimatedWidgetState__controller = _._theme$_data = null;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _AnimatedThemeState_forEachTween_closure: function _AnimatedThemeState_forEachTween_closure() {
    },
    AlignmentGeometry_lerp: function(a, b, t) {
      var t2, t3,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      if (a instanceof K.Alignment && b instanceof K.Alignment)
        return K.Alignment_lerp(a, b, t);
      if (a instanceof K.AlignmentDirectional && b instanceof K.AlignmentDirectional)
        return K.AlignmentDirectional_lerp(a, b, t);
      t1 = P.lerpDouble(a.get$_x(), b.get$_x(), t);
      t1.toString;
      t2 = P.lerpDouble(a.get$_alignment$_start(a), b.get$_alignment$_start(b), t);
      t2.toString;
      t3 = P.lerpDouble(a.get$_y(), b.get$_y(), t);
      t3.toString;
      return new K._MixedAlignment(t1, t2, t3);
    },
    Alignment_lerp: function(a, b, t) {
      var t2,
        t1 = P.lerpDouble(a.x, b.x, t);
      t1.toString;
      t2 = P.lerpDouble(a.y, b.y, t);
      t2.toString;
      return new K.Alignment(t1, t2);
    },
    Alignment__stringify: function(x, y) {
      var t2, t3,
        t1 = x === -1;
      if (t1 && y === -1)
        return "Alignment.topLeft";
      t2 = x === 0;
      if (t2 && y === -1)
        return "Alignment.topCenter";
      t3 = x === 1;
      if (t3 && y === -1)
        return "Alignment.topRight";
      if (t1 && y === 0)
        return "Alignment.centerLeft";
      if (t2 && y === 0)
        return "Alignment.center";
      if (t3 && y === 0)
        return "Alignment.centerRight";
      if (t1 && y === 1)
        return "Alignment.bottomLeft";
      if (t2 && y === 1)
        return "Alignment.bottomCenter";
      if (t3 && y === 1)
        return "Alignment.bottomRight";
      return "Alignment(" + C.JSNumber_methods.toStringAsFixed$1(x, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(y, 1) + ")";
    },
    AlignmentDirectional_lerp: function(a, b, t) {
      var t2,
        t1 = P.lerpDouble(a.start, b.start, t);
      t1.toString;
      t2 = P.lerpDouble(a.y, b.y, t);
      t2.toString;
      return new K.AlignmentDirectional(t1, t2);
    },
    AlignmentDirectional__stringify: function(start, y) {
      var t2, t3,
        t1 = start === -1;
      if (t1 && y === -1)
        return "AlignmentDirectional.topStart";
      t2 = start === 0;
      if (t2 && y === -1)
        return "AlignmentDirectional.topCenter";
      t3 = start === 1;
      if (t3 && y === -1)
        return "AlignmentDirectional.topEnd";
      if (t1 && y === 0)
        return "AlignmentDirectional.centerStart";
      if (t2 && y === 0)
        return "AlignmentDirectional.center";
      if (t3 && y === 0)
        return "AlignmentDirectional.centerEnd";
      if (t1 && y === 1)
        return "AlignmentDirectional.bottomStart";
      if (t2 && y === 1)
        return "AlignmentDirectional.bottomCenter";
      if (t3 && y === 1)
        return "AlignmentDirectional.bottomEnd";
      return "AlignmentDirectional(" + C.JSNumber_methods.toStringAsFixed$1(start, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(y, 1) + ")";
    },
    AlignmentGeometry: function AlignmentGeometry() {
    },
    Alignment: function Alignment(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    AlignmentDirectional: function AlignmentDirectional(t0, t1) {
      this.start = t0;
      this.y = t1;
    },
    _MixedAlignment: function _MixedAlignment(t0, t1, t2) {
      this._x = t0;
      this._alignment$_start = t1;
      this._y = t2;
    },
    BorderRadiusGeometry_lerp: function(a, b, t) {
      var t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        a = C.BorderRadius_tLn;
      return a.add$1(0, (b == null ? C.BorderRadius_tLn : b).subtract$1(a).$mul(0, t));
    },
    BorderRadius$circular: function(radius) {
      var t1 = new P.Radius(radius, radius);
      return new K.BorderRadius(t1, t1, t1, t1);
    },
    BorderRadius_lerp: function(a, b, t) {
      var t2, t3, t4,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = P.Radius_lerp(a.topLeft, b.topLeft, t);
      t1.toString;
      t2 = P.Radius_lerp(a.topRight, b.topRight, t);
      t2.toString;
      t3 = P.Radius_lerp(a.bottomLeft, b.bottomLeft, t);
      t3.toString;
      t4 = P.Radius_lerp(a.bottomRight, b.bottomRight, t);
      t4.toString;
      return new K.BorderRadius(t1, t2, t3, t4);
    },
    BorderRadiusGeometry: function BorderRadiusGeometry() {
    },
    BorderRadius: function BorderRadius(t0, t1, t2, t3) {
      var _ = this;
      _.topLeft = t0;
      _.topRight = t1;
      _.bottomLeft = t2;
      _.bottomRight = t3;
    },
    _MixedBorderRadius: function _MixedBorderRadius(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._topLeft = t0;
      _._topRight = t1;
      _._bottomLeft = t2;
      _._bottomRight = t3;
      _._topStart = t4;
      _._topEnd = t5;
      _._bottomStart = t6;
      _._bottomEnd = t7;
    },
    PaintingContext__repaintCompositedChild: function(child, childContext, debugAlsoPaintedParent) {
      var t1,
        childLayer = type$.nullable_OffsetLayer._as(child._layer);
      if (childLayer == null)
        child._layer = new T.OffsetLayer(C.Offset_0_0);
      else
        childLayer.removeAllChildren$0();
      t1 = child._layer;
      t1.toString;
      childContext = new K.PaintingContext(t1, child.get$paintBounds());
      child._paintWithContext$2(childContext, C.Offset_0_0);
      childContext.stopRecordingIfNeeded$0();
    },
    RenderObject__cleanChildRelayoutBoundary: function(child) {
      child._cleanRelayoutBoundary$0();
    },
    _SemanticsGeometry__transformRect: function(rect, transform) {
      var t1;
      if (rect == null)
        return null;
      if (!rect.get$isEmpty(rect)) {
        t1 = transform._m4storage;
        t1 = t1[0] === 0 && t1[1] === 0 && t1[2] === 0 && t1[3] === 0 && t1[4] === 0 && t1[5] === 0 && t1[6] === 0 && t1[7] === 0 && t1[8] === 0 && t1[9] === 0 && t1[10] === 0 && t1[11] === 0 && t1[12] === 0 && t1[13] === 0 && t1[14] === 0 && t1[15] === 0;
      } else
        t1 = true;
      if (t1)
        return C.Rect_0_0_0_0;
      return T.MatrixUtils_inverseTransformRect(transform, rect);
    },
    _SemanticsGeometry__applyIntermediatePaintTransforms: function(ancestor, child, transform, clipRectTransform) {
      var t2, intermediateParent, t3,
        t1 = child._node$_parent;
      t1.toString;
      t2 = type$.RenderObject;
      t2._as(t1);
      for (intermediateParent = t1; intermediateParent !== ancestor; intermediateParent = t1, child = t3) {
        intermediateParent.applyPaintTransform$2(child, transform);
        t1 = intermediateParent._node$_parent;
        t1.toString;
        t2._as(t1);
        t3 = child._node$_parent;
        t3.toString;
        t2._as(t3);
      }
      ancestor.applyPaintTransform$2(child, transform);
      ancestor.applyPaintTransform$2(child, clipRectTransform);
    },
    _SemanticsGeometry__intersectRects: function(a, b) {
      if (a == null)
        return b;
      if (b == null)
        return a;
      return a.intersect$1(b);
    },
    DiagnosticsDebugCreator$: function(value) {
      var _null = null;
      return new K.DiagnosticsDebugCreator(_null, false, true, _null, _null, _null, false, value, C.C__NoDefaultValue, C.DiagnosticLevel_0, "debugCreator", true, true, _null, C.DiagnosticsTreeStyle_8);
    },
    ParentData: function ParentData() {
    },
    PaintingContext: function PaintingContext(t0, t1) {
      var _ = this;
      _._containerLayer = t0;
      _.estimatedBounds = t1;
      _._canvas = _._recorder = _._currentLayer = null;
    },
    PaintingContext_pushClipRect_closure: function PaintingContext_pushClipRect_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    PaintingContext_pushClipPath_closure: function PaintingContext_pushClipPath_closure(t0, t1, t2) {
      this.$this = t0;
      this.painter = t1;
      this.offset = t2;
    },
    Constraints: function Constraints() {
    },
    SemanticsHandle: function SemanticsHandle(t0, t1) {
      this._object$_owner = t0;
      this.listener = t1;
    },
    PipelineOwner: function PipelineOwner(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.onNeedVisualUpdate = t0;
      _.onSemanticsOwnerCreated = t1;
      _.onSemanticsOwnerDisposed = t2;
      _._rootNode = null;
      _._nodesNeedingLayout = t3;
      _._debugDoingLayout = false;
      _._nodesNeedingCompositingBitsUpdate = t4;
      _._nodesNeedingPaint = t5;
      _._debugDoingPaint = false;
      _._semanticsOwner = null;
      _._outstandingSemanticsHandles = 0;
      _._debugDoingSemantics = false;
      _._nodesNeedingSemantics = t6;
    },
    PipelineOwner_flushLayout_closure: function PipelineOwner_flushLayout_closure() {
    },
    PipelineOwner_flushCompositingBits_closure: function PipelineOwner_flushCompositingBits_closure() {
    },
    PipelineOwner_flushPaint_closure: function PipelineOwner_flushPaint_closure() {
    },
    PipelineOwner_flushSemantics_closure: function PipelineOwner_flushSemantics_closure() {
    },
    RenderObject: function RenderObject() {
    },
    RenderObject__debugReportException_closure: function RenderObject__debugReportException_closure(t0) {
      this.$this = t0;
    },
    RenderObject__updateCompositingBits_closure: function RenderObject__updateCompositingBits_closure(t0) {
      this.$this = t0;
    },
    RenderObject_clearSemantics_closure: function RenderObject_clearSemantics_closure() {
    },
    RenderObject__getSemanticsForParent_closure: function RenderObject__getSemanticsForParent_closure(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.childrenMergeIntoParent = t2;
      _.fragments = t3;
      _.toBeMarkedExplicit = t4;
      _.config = t5;
      _.producesForkingFragment = t6;
    },
    RenderObjectWithChildMixin: function RenderObjectWithChildMixin() {
    },
    ContainerParentDataMixin: function ContainerParentDataMixin() {
    },
    ContainerRenderObjectMixin: function ContainerRenderObjectMixin() {
    },
    RelayoutWhenSystemFontsChangeMixin: function RelayoutWhenSystemFontsChangeMixin() {
    },
    _SemanticsFragment: function _SemanticsFragment() {
    },
    _ContainerSemanticsFragment: function _ContainerSemanticsFragment(t0, t1) {
      this.interestingFragments = t0;
      this.dropsSemanticsOfPreviousSiblings = t1;
    },
    _InterestingSemanticsFragment: function _InterestingSemanticsFragment() {
    },
    _RootSemanticsFragment: function _RootSemanticsFragment(t0, t1, t2) {
      var _ = this;
      _._object$_children = t0;
      _._ancestorChain = t1;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t2;
    },
    _SwitchableSemanticsFragment: function _SwitchableSemanticsFragment(t0, t1, t2, t3, t4) {
      var _ = this;
      _._mergeIntoParent = t0;
      _._config = t1;
      _._isConfigWritable = false;
      _._object$_children = t2;
      _._isExplicit = false;
      _._ancestorChain = t3;
      _._object$_tagsForChildren = null;
      _.dropsSemanticsOfPreviousSiblings = t4;
    },
    _AbortingSemanticsFragment: function _AbortingSemanticsFragment(t0, t1) {
      this._ancestorChain = t0;
      this._object$_tagsForChildren = null;
      this.dropsSemanticsOfPreviousSiblings = t1;
    },
    _SemanticsGeometry: function _SemanticsGeometry() {
      var _ = this;
      _.___SemanticsGeometry__rect = _.___SemanticsGeometry__transform = _._semanticsClipRect = _._paintClipRect = null;
      _._markAsHidden = false;
    },
    DiagnosticsDebugCreator: function DiagnosticsDebugCreator(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    _RenderObject_AbstractNode_DiagnosticableTreeMixin: function _RenderObject_AbstractNode_DiagnosticableTreeMixin() {
    },
    RenderStack_layoutPositionedChild: function(child, childParentData, size, alignment) {
      var t3, childConstraints, t4, t5, hasVisualOverflow, t1 = {},
        t2 = childParentData.left;
      if (t2 != null && childParentData.right != null) {
        t3 = childParentData.right;
        t3.toString;
        t2.toString;
        childConstraints = C.BoxConstraints_mlX.tighten$1$width(size._dx - t3 - t2);
      } else {
        t2 = childParentData.width;
        childConstraints = t2 != null ? C.BoxConstraints_mlX.tighten$1$width(t2) : C.BoxConstraints_mlX;
      }
      t2 = childParentData.top;
      if (t2 != null && childParentData.bottom != null) {
        t3 = childParentData.bottom;
        t3.toString;
        t2.toString;
        childConstraints = childConstraints.tighten$1$height(size._dy - t3 - t2);
      } else {
        t2 = childParentData.height;
        if (t2 != null)
          childConstraints = childConstraints.tighten$1$height(t2);
      }
      child.layout$2$parentUsesSize(0, childConstraints, true);
      t1._x0 = null;
      t2 = new K.RenderStack_layoutPositionedChild__x_get(t1);
      t3 = new K.RenderStack_layoutPositionedChild__x_set(t1);
      t4 = childParentData.left;
      if (t4 != null)
        t3.call$1(t4);
      else {
        t4 = childParentData.right;
        t5 = child._size;
        if (t4 != null)
          t3.call$1(size._dx - t4 - t5._dx);
        else {
          t5.toString;
          t3.call$1(alignment.alongOffset$1(type$.Offset._as(size.$sub(0, t5)))._dx);
        }
      }
      hasVisualOverflow = (t2.call$0() < 0 || t2.call$0() + child._size._dx > size._dx) && true;
      t1._y0 = null;
      t3 = new K.RenderStack_layoutPositionedChild__y_get(t1);
      t1 = new K.RenderStack_layoutPositionedChild__y_set(t1);
      t4 = childParentData.top;
      if (t4 != null)
        t1.call$1(t4);
      else {
        t4 = childParentData.bottom;
        t5 = child._size;
        if (t4 != null)
          t1.call$1(size._dy - t4 - t5._dy);
        else {
          t5.toString;
          t1.call$1(alignment.alongOffset$1(type$.Offset._as(size.$sub(0, t5)))._dy);
        }
      }
      if (t3.call$0() < 0 || t3.call$0() + child._size._dy > size._dy)
        hasVisualOverflow = true;
      childParentData.offset = new P.Offset(t2.call$0(), t3.call$0());
      return hasVisualOverflow;
    },
    RelativeRect: function RelativeRect(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    StackParentData: function StackParentData(t0, t1, t2) {
      var _ = this;
      _.height = _.width = _.left = _.bottom = _.right = _.top = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    StackFit: function StackFit(t0) {
      this._stack$_name = t0;
    },
    Overflow: function Overflow(t0) {
      this._stack$_name = t0;
    },
    RenderStack: function RenderStack(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._stack$_hasVisualOverflow = false;
      _._stack$_resolvedAlignment = null;
      _._stack$_alignment = t0;
      _._stack$_textDirection = t1;
      _._fit = t2;
      _._stack$_clipBehavior = t3;
      _._stack$_clipRectLayer = null;
      _.ContainerRenderObjectMixin__childCount = t4;
      _.ContainerRenderObjectMixin__firstChild = t5;
      _.ContainerRenderObjectMixin__lastChild = t6;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderStack_layoutPositionedChild__x_set: function RenderStack_layoutPositionedChild__x_set(t0) {
      this._box_0 = t0;
    },
    RenderStack_layoutPositionedChild__y_set: function RenderStack_layoutPositionedChild__y_set(t0) {
      this._box_0 = t0;
    },
    RenderStack_layoutPositionedChild__x_get: function RenderStack_layoutPositionedChild__x_get(t0) {
      this._box_0 = t0;
    },
    RenderStack_layoutPositionedChild__y_get: function RenderStack_layoutPositionedChild__y_get(t0) {
      this._box_0 = t0;
    },
    _RenderStack_RenderBox_ContainerRenderObjectMixin: function _RenderStack_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    RestorationManager: function RestorationManager(t0, t1) {
      var _ = this;
      _._pendingRootBucket = _._restoration$_rootBucket = null;
      _._serializationScheduled = _._debugDoingUpdate = _._isReplacing = _._rootBucketIsValid = false;
      _._bucketsNeedingSerialization = t0;
      _.ChangeNotifier__listeners = t1;
    },
    RestorationManager_handleRestorationUpdateFromEngine_closure: function RestorationManager_handleRestorationUpdateFromEngine_closure(t0) {
      this.$this = t0;
    },
    RestorationManager_scheduleSerializationFor_closure: function RestorationManager_scheduleSerializationFor_closure(t0) {
      this.$this = t0;
    },
    RestorationBucket: function RestorationBucket(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._rawData = t0;
      _._debugOwner = null;
      _._manager = t1;
      _._restoration$_parent = t2;
      _._restorationId = t3;
      _._claimedChildren = t4;
      _._childrenToAdd = t5;
      _._debugDisposed = _._needsSerialization = false;
    },
    RestorationBucket__rawChildren_closure: function RestorationBucket__rawChildren_closure() {
    },
    RestorationBucket__rawValues_closure: function RestorationBucket__rawValues_closure() {
    },
    RestorationBucket__addChildData_closure: function RestorationBucket__addChildData_closure() {
    },
    RestorationBucket__visitChildren_closure: function RestorationBucket__visitChildren_closure() {
    },
    Navigator_of: function(context) {
      var t1,
        $navigator = context instanceof N.StatefulElement && context.state instanceof K.NavigatorState ? type$.NavigatorState._as(context.state) : null;
      if ($navigator == null)
        $navigator = context.findAncestorStateOfType$1$0(type$.NavigatorState);
      t1 = $navigator;
      t1.toString;
      return t1;
    },
    Navigator_defaultGenerateInitialRoutes: function($navigator, initialRouteName) {
      var t1, routeParts, t2, _i, t3, routeName, _null = null,
        result = H.setRuntimeTypeInfo([], type$.JSArray_nullable_Route_dynamic);
      if (C.JSString_methods.startsWith$1(initialRouteName, "/") && initialRouteName.length > 1) {
        initialRouteName = C.JSString_methods.substring$1(initialRouteName, 1);
        t1 = type$.dynamic;
        result.push($navigator._routeNamed$1$3$allowNull$arguments("/", true, _null, t1));
        routeParts = initialRouteName.split("/");
        if (initialRouteName.length !== 0)
          for (t2 = routeParts.length, _i = 0, t3 = ""; _i < t2; ++_i, t3 = routeName) {
            routeName = t3 + ("/" + H.S(routeParts[_i]));
            result.push($navigator._routeNamed$1$3$allowNull$arguments(routeName, true, _null, t1));
          }
        if (C.JSArray_methods.get$last(result) == null)
          C.JSArray_methods.set$length(result, 0);
      } else if (initialRouteName !== "/")
        result.push($navigator._routeNamed$1$3$allowNull$arguments(initialRouteName, true, _null, type$.dynamic));
      if (!!result.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeWhere"));
      C.JSArray_methods._removeWhere$2(result, new K.Navigator_defaultGenerateInitialRoutes_closure(), true);
      if (result.length === 0)
        result.push($navigator._routeNamed$1$2$arguments("/", _null, type$.dynamic));
      return new H.CastList(result, type$.CastList_of_nullable_Route_dynamic_and_Route_dynamic);
    },
    _RouteEntry$: function(route, initialState, restorationInformation) {
      var t1 = $.$get$_RouteEntry_notAnnounced();
      return new K._RouteEntry(route, restorationInformation, initialState, t1, t1, t1);
    },
    _RouteEntry_isPresentPredicate: function(entry) {
      return entry.get$isPresent();
    },
    _RouteEntry_suitableForTransitionAnimationPredicate: function(entry) {
      var t1 = entry.currentState.index;
      return t1 <= 9 && t1 >= 3;
    },
    _RouteEntry_willBePresentPredicate: function(entry) {
      var t1 = entry.currentState.index;
      return t1 <= 7 && t1 >= 1;
    },
    _RouteEntry_isRoutePredicate: function(route) {
      return new K._RouteEntry_isRoutePredicate_closure(route);
    },
    _RestorationInformation__RestorationInformation$fromSerializableData: function(data) {
      var t1, t2, t3;
      type$.List_nullable_Object._as(data);
      t1 = J.getInterceptor$asx(data);
      t2 = t1.$index(data, 0);
      t2.toString;
      switch (C.List_ato[H._asInt(t2)]) {
        case C._RouteRestorationType_0:
          t1 = t1.sublist$1(data, 1);
          t2 = t1[0];
          t2.toString;
          H._asInt(t2);
          t3 = t1[1];
          t3.toString;
          H._asString(t3);
          return new K._NamedRestorationInformation(t2, t3, t1.length > 2 ? t1[2] : null, C._RouteRestorationType_0);
        case C._RouteRestorationType_1:
          t1 = t1.sublist$1(data, 1)[1];
          t1.toString;
          type$.Route_dynamic_Function_2_BuildContext_and_nullable_Object._as(P.PluginUtilities_getCallbackFromHandle(new P.CallbackHandle(H._asInt(t1))));
          return null;
      }
    },
    RoutePopDisposition: function RoutePopDisposition(t0) {
      this._navigator$_name = t0;
    },
    Route: function Route() {
    },
    Route_didPush_closure: function Route_didPush_closure(t0) {
      this.$this = t0;
    },
    Route_didAdd_closure: function Route_didAdd_closure(t0) {
      this.$this = t0;
    },
    Route_isCurrent_closure: function Route_isCurrent_closure() {
    },
    Route_isCurrent_closure0: function Route_isCurrent_closure0() {
    },
    Route_isFirst_closure: function Route_isFirst_closure() {
    },
    Route_isFirst_closure0: function Route_isFirst_closure0() {
    },
    Route_isActive_closure: function Route_isActive_closure(t0) {
      this.$this = t0;
    },
    Route_isActive_closure0: function Route_isActive_closure0() {
    },
    RouteSettings: function RouteSettings(t0, t1) {
      this.name = t0;
      this.$arguments = t1;
    },
    NavigatorObserver: function NavigatorObserver() {
    },
    HeroControllerScope: function HeroControllerScope(t0, t1, t2) {
      this.controller = t0;
      this.child = t1;
      this.key = t2;
    },
    RouteTransitionRecord: function RouteTransitionRecord() {
    },
    TransitionDelegate: function TransitionDelegate() {
    },
    DefaultTransitionDelegate: function DefaultTransitionDelegate() {
    },
    Navigator: function Navigator(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.initialRoute = t0;
      _.onGenerateRoute = t1;
      _.onUnknownRoute = t2;
      _.observers = t3;
      _.restorationScopeId = t4;
      _.onGenerateInitialRoutes = t5;
      _.reportsRouteUpdateToEngine = t6;
      _.key = t7;
    },
    Navigator_defaultGenerateInitialRoutes_closure: function Navigator_defaultGenerateInitialRoutes_closure() {
    },
    _RouteLifecycle: function _RouteLifecycle(t0, t1) {
      this.index = t0;
      this._navigator$_name = t1;
    },
    _NotAnnounced: function _NotAnnounced(t0, t1, t2) {
      var _ = this;
      _._navigator$_navigator = null;
      _._settings = t0;
      _._restorationScopeId = t1;
      _._popCompleter = t2;
    },
    _RouteEntry: function _RouteEntry(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.route = t0;
      _.restorationInformation = t1;
      _.currentState = t2;
      _.lastAnnouncedPreviousRoute = t3;
      _.lastAnnouncedPoppedNextRoute = t4;
      _.lastAnnouncedNextRoute = t5;
      _.doingPop = false;
      _._reportRemovalToObserver = true;
      _._isWaitingForExitingDecision = false;
    },
    _RouteEntry_handlePush_closure: function _RouteEntry_handlePush_closure(t0, t1) {
      this.$this = t0;
      this.navigator = t1;
    },
    _RouteEntry_dispose_closure: function _RouteEntry_dispose_closure() {
    },
    _RouteEntry_dispose__listener_set: function _RouteEntry_dispose__listener_set(t0) {
      this._box_0 = t0;
    },
    _RouteEntry_dispose__listener_get: function _RouteEntry_dispose__listener_get(t0) {
      this._box_0 = t0;
    },
    _RouteEntry_dispose_closure0: function _RouteEntry_dispose_closure0(t0, t1, t2, t3) {
      var _ = this;
      _._box_1 = t0;
      _.$this = t1;
      _.entry = t2;
      _._listener_get = t3;
    },
    _RouteEntry_isRoutePredicate_closure: function _RouteEntry_isRoutePredicate_closure(t0) {
      this.route = t0;
    },
    _NavigatorObservation: function _NavigatorObservation() {
    },
    _NavigatorPushObservation: function _NavigatorPushObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorPopObservation: function _NavigatorPopObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorRemoveObservation: function _NavigatorRemoveObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    _NavigatorReplaceObservation: function _NavigatorReplaceObservation(t0, t1) {
      this.primaryRoute = t0;
      this.secondaryRoute = t1;
    },
    NavigatorState: function NavigatorState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.__NavigatorState__overlayKey = null;
      _._history = t0;
      _._serializableHistory = t1;
      _._observedRouteAdditions = t2;
      _._observedRouteDeletions = t3;
      _.focusScopeNode = t4;
      _._debugLocked = false;
      _.__NavigatorState__effectiveObservers = _._heroControllerFromScope = null;
      _._rawNextPagelessRestorationScopeId = t5;
      _._lastAnnouncedRouteName = null;
      _._debugUpdatingPage = false;
      _._userGesturesInProgressCount = 0;
      _.userGestureInProgressNotifier = t6;
      _._activePointers = t7;
      _.RestorationMixin__bucket = t8;
      _.RestorationMixin__properties = t9;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t10;
      _.RestorationMixin__firstRestorePending = t11;
      _.RestorationMixin__currentParent = t12;
      _.TickerProviderStateMixin__tickers = t13;
      _._widget = null;
      _._debugLifecycleState = t14;
      _._framework$_element = null;
    },
    NavigatorState_restoreState_closure: function NavigatorState_restoreState_closure(t0) {
      this.$this = t0;
    },
    NavigatorState__flushHistoryUpdates_closure: function NavigatorState__flushHistoryUpdates_closure() {
    },
    NavigatorState__flushHistoryUpdates_closure0: function NavigatorState__flushHistoryUpdates_closure0() {
    },
    NavigatorState__afterNavigation_closure: function NavigatorState__afterNavigation_closure() {
    },
    NavigatorState_maybePop_closure: function NavigatorState_maybePop_closure() {
    },
    NavigatorState_maybePop_closure0: function NavigatorState_maybePop_closure0() {
    },
    NavigatorState_maybePop_closure1: function NavigatorState_maybePop_closure1() {
    },
    NavigatorState_maybePop_closure2: function NavigatorState_maybePop_closure2() {
    },
    NavigatorState__cancelActivePointers_closure: function NavigatorState__cancelActivePointers_closure(t0) {
      this.absorber = t0;
    },
    _RouteRestorationType: function _RouteRestorationType(t0, t1) {
      this.index = t0;
      this._navigator$_name = t1;
    },
    _RestorationInformation: function _RestorationInformation() {
    },
    _NamedRestorationInformation: function _NamedRestorationInformation(t0, t1, t2, t3) {
      var _ = this;
      _.restorationScopeId = t0;
      _.name = t1;
      _.$arguments = t2;
      _.type = t3;
      _._serializableData = null;
    },
    _AnonymousRestorationInformation: function _AnonymousRestorationInformation(t0, t1, t2, t3) {
      var _ = this;
      _.restorationScopeId = t0;
      _.routeBuilder = t1;
      _.$arguments = t2;
      _.type = t3;
      _._serializableData = null;
    },
    _HistoryProperty: function _HistoryProperty(t0) {
      var _ = this;
      _._restoration0$_owner = _._restoration0$_restorationId = _._pageToPagelessRoutes = null;
      _.ChangeNotifier__listeners = t0;
    },
    _HistoryProperty_fromPrimitives_closure: function _HistoryProperty_fromPrimitives_closure() {
    },
    _NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure: function _NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure() {
    },
    _NavigatorState_State_TickerProviderStateMixin: function _NavigatorState_State_TickerProviderStateMixin() {
    },
    _NavigatorState_State_TickerProviderStateMixin_RestorationMixin: function _NavigatorState_State_TickerProviderStateMixin_RestorationMixin() {
    },
    RestorationScope_of: function(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.UnmanagedRestorationScope);
      return t1 == null ? null : t1.bucket;
    },
    UnmanagedRestorationScope$: function(bucket, child) {
      return new K.UnmanagedRestorationScope(bucket, child, null);
    },
    RestorationScope: function RestorationScope(t0, t1, t2) {
      this.child = t0;
      this.restorationId = t1;
      this.key = t2;
    },
    _RestorationScopeState: function _RestorationScopeState(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.RestorationMixin__bucket = t0;
      _.RestorationMixin__properties = t1;
      _.RestorationMixin__debugPropertiesWaitingForReregistration = t2;
      _.RestorationMixin__firstRestorePending = t3;
      _.RestorationMixin__currentParent = t4;
      _._widget = null;
      _._debugLifecycleState = t5;
      _._framework$_element = null;
    },
    UnmanagedRestorationScope: function UnmanagedRestorationScope(t0, t1, t2) {
      this.bucket = t0;
      this.child = t1;
      this.key = t2;
    },
    RootRestorationScope: function RootRestorationScope(t0, t1, t2) {
      this.child = t0;
      this.restorationId = t1;
      this.key = t2;
    },
    _RootRestorationScopeState: function _RootRestorationScopeState(t0) {
      var _ = this;
      _._okToRenderBlankContainer = null;
      _._rootBucketValid = false;
      _._ancestorBucket = _._rootBucket = null;
      _._isLoadingRootBucket = false;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _RootRestorationScopeState__loadRootBucketIfNecessary_closure: function _RootRestorationScopeState__loadRootBucketIfNecessary_closure(t0) {
      this.$this = t0;
    },
    _RootRestorationScopeState__loadRootBucketIfNecessary__closure: function _RootRestorationScopeState__loadRootBucketIfNecessary__closure(t0, t1) {
      this.$this = t0;
      this.bucket = t1;
    },
    RestorableProperty: function RestorableProperty() {
    },
    RestorationMixin: function RestorationMixin() {
    },
    RestorationMixin_registerForRestoration_listener: function RestorationMixin_registerForRestoration_listener(t0, t1) {
      this.$this = t0;
      this.property = t1;
    },
    __RestorationScopeState_State_RestorationMixin_dispose_closure: function __RestorationScopeState_State_RestorationMixin_dispose_closure() {
    },
    __RestorationScopeState_State_RestorationMixin: function __RestorationScopeState_State_RestorationMixin() {
    },
    ScrollBehavior: function ScrollBehavior() {
    },
    ScrollConfiguration: function ScrollConfiguration(t0, t1, t2) {
      this.behavior = t0;
      this.child = t1;
      this.key = t2;
    },
    SlideTransition$: function(child, position, textDirection, transformHitTests) {
      return new K.SlideTransition(textDirection, transformHitTests, child, position, null);
    },
    FadeTransition$: function(child, opacity) {
      return new K.FadeTransition(opacity, child, null);
    },
    AnimatedBuilder$: function(animation, builder, child) {
      return new K.AnimatedBuilder(builder, child, animation, null);
    },
    AnimatedWidget: function AnimatedWidget() {
    },
    _AnimatedState: function _AnimatedState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _AnimatedState__handleChange_closure: function _AnimatedState__handleChange_closure() {
    },
    SlideTransition: function SlideTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _.textDirection = t0;
      _.transformHitTests = t1;
      _.child = t2;
      _.listenable = t3;
      _.key = t4;
    },
    FadeTransition: function FadeTransition(t0, t1, t2) {
      this.opacity = t0;
      this.child = t1;
      this.key = t2;
    },
    DecoratedBoxTransition: function DecoratedBoxTransition(t0, t1, t2, t3) {
      var _ = this;
      _.decoration = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    },
    AnimatedBuilder: function AnimatedBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _.child = t1;
      _.listenable = t2;
      _.key = t3;
    }
  },
  L = {_CupertinoLocalizationsDelegate: function _CupertinoLocalizationsDelegate() {
    }, DefaultCupertinoLocalizations: function DefaultCupertinoLocalizations() {
    }, FloatingLabelBehavior: function FloatingLabelBehavior() {
    }, InputDecorationTheme: function InputDecorationTheme() {
    }, _InputDecorationTheme_Object_Diagnosticable: function _InputDecorationTheme_Object_Diagnosticable() {
    }, RenderPerformanceOverlay: function RenderPerformanceOverlay(t0, t1, t2, t3) {
      var _ = this;
      _._optionsMask = t0;
      _._rasterizerThreshold = t1;
      _._checkerboardRasterCacheImages = t2;
      _._checkerboardOffscreenLayers = t3;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    }, KeepAliveNotification: function KeepAliveNotification() {
    }, KeepAliveHandle: function KeepAliveHandle(t0) {
      this.ChangeNotifier__listeners = t0;
    }, AutomaticKeepAliveClientMixin: function AutomaticKeepAliveClientMixin() {
    }, _NullWidget0: function _NullWidget0(t0) {
      this.key = t0;
    },
    Focus$: function(autofocus, canRequestFocus, child, debugLabel, descendantsAreFocusable, focusNode, includeSemantics, key, onFocusChange, onKey, skipTraversal) {
      return new L.Focus(debugLabel, child, onKey, onFocusChange, autofocus, focusNode, skipTraversal, includeSemantics, canRequestFocus, true, key);
    },
    Focus_maybeOf: function(context, scopeOk) {
      var marker = context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusMarker),
        node = marker == null ? null : marker.notifier;
      if (node == null)
        return null;
      return node;
    },
    FocusScope$: function(autofocus, child, node) {
      var _null = null;
      return new L.FocusScope(_null, child, _null, _null, autofocus, node, _null, true, _null, true, _null);
    },
    _FocusMarker$: function(child, node) {
      return new L._FocusMarker(node, child, null);
    },
    Focus: function Focus(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.debugLabel = t0;
      _.child = t1;
      _.onKey = t2;
      _.onFocusChange = t3;
      _.autofocus = t4;
      _.focusNode = t5;
      _.skipTraversal = t6;
      _.includeSemantics = t7;
      _.canRequestFocus = t8;
      _.descendantsAreFocusable = t9;
      _.key = t10;
    },
    _FocusState: function _FocusState(t0) {
      var _ = this;
      _._descendantsAreFocusable = _._canRequestFocus = _._hasPrimaryFocus = _._internalNode = null;
      _._didAutofocus = false;
      _._widget = _._focusAttachment = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _FocusState__handleFocusChanged_closure: function _FocusState__handleFocusChanged_closure(t0, t1) {
      this.$this = t0;
      this.hasPrimaryFocus = t1;
    },
    _FocusState__handleFocusChanged_closure0: function _FocusState__handleFocusChanged_closure0(t0, t1) {
      this.$this = t0;
      this.canRequestFocus = t1;
    },
    _FocusState__handleFocusChanged_closure1: function _FocusState__handleFocusChanged_closure1(t0, t1) {
      this.$this = t0;
      this.descendantsAreFocusable = t1;
    },
    FocusScope: function FocusScope(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.debugLabel = t0;
      _.child = t1;
      _.onKey = t2;
      _.onFocusChange = t3;
      _.autofocus = t4;
      _.focusNode = t5;
      _.skipTraversal = t6;
      _.includeSemantics = t7;
      _.canRequestFocus = t8;
      _.descendantsAreFocusable = t9;
      _.key = t10;
    },
    _FocusScopeState: function _FocusScopeState(t0) {
      var _ = this;
      _._descendantsAreFocusable = _._canRequestFocus = _._hasPrimaryFocus = _._internalNode = null;
      _._didAutofocus = false;
      _._widget = _._focusAttachment = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _FocusMarker: function _FocusMarker(t0, t1, t2) {
      this.notifier = t0;
      this.child = t1;
      this.key = t2;
    },
    Icon: function Icon(t0) {
      this.key = t0;
    },
    _loadAll: function(locale, allDelegates) {
      var types, delegates, _i, delegate, t3, t4, inputValue, futureValue, _box_1 = {},
        t1 = type$.Type,
        t2 = type$.dynamic,
        output = P.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      _box_1.pendingList = null;
      types = P.LinkedHashSet_LinkedHashSet$_empty(t1);
      delegates = H.setRuntimeTypeInfo([], type$.JSArray_LocalizationsDelegate_dynamic);
      for (t1 = allDelegates.length, _i = 0; _i < allDelegates.length; allDelegates.length === t1 || (0, H.throwConcurrentModificationError)(allDelegates), ++_i) {
        delegate = allDelegates[_i];
        t3 = H.instanceType(delegate)._eval$1("LocalizationsDelegate.T");
        if (!types.contains$1(0, H.createRuntimeType(t3)) && delegate.isSupported$1(locale)) {
          types.add$1(0, H.createRuntimeType(t3));
          delegates.push(delegate);
        }
      }
      for (t1 = delegates.length, t3 = type$.JSArray__Pending, _i = 0; _i < delegates.length; delegates.length === t1 || (0, H.throwConcurrentModificationError)(delegates), ++_i) {
        t4 = {};
        delegate = delegates[_i];
        inputValue = delegate.load$1(0, locale);
        t4.completedValue = null;
        futureValue = inputValue.then$1$1(0, new L._loadAll_closure(t4), t2);
        if (t4.completedValue != null)
          output.$indexSet(0, H.createRuntimeType(H._instanceType(delegate)._eval$1("LocalizationsDelegate.T")), t4.completedValue);
        else {
          t4 = _box_1.pendingList;
          if (t4 == null)
            t4 = _box_1.pendingList = H.setRuntimeTypeInfo([], t3);
          t4.push(new L._Pending(delegate, futureValue));
        }
      }
      t1 = _box_1.pendingList;
      if (t1 == null)
        return new O.SynchronousFuture(output, type$.SynchronousFuture_Map_Type_dynamic);
      return P.Future_wait(new H.MappedListIterable(t1, new L._loadAll_closure0(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Future<@>>")), t2).then$1$1(0, new L._loadAll_closure1(_box_1, output), type$.Map_Type_dynamic);
    },
    Localizations_maybeLocaleOf: function(context) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._LocalizationsScope);
      return scope == null ? null : scope.localizationsState._localizations$_locale;
    },
    _Pending: function _Pending(t0, t1) {
      this.delegate = t0;
      this.futureValue = t1;
    },
    _loadAll_closure: function _loadAll_closure(t0) {
      this._box_0 = t0;
    },
    _loadAll_closure0: function _loadAll_closure0() {
    },
    _loadAll_closure1: function _loadAll_closure1(t0, t1) {
      this._box_1 = t0;
      this.output = t1;
    },
    LocalizationsDelegate: function LocalizationsDelegate() {
    },
    _WidgetsLocalizationsDelegate: function _WidgetsLocalizationsDelegate() {
    },
    DefaultWidgetsLocalizations: function DefaultWidgetsLocalizations() {
    },
    _LocalizationsScope: function _LocalizationsScope(t0, t1, t2, t3) {
      var _ = this;
      _.localizationsState = t0;
      _.typeToResources = t1;
      _.child = t2;
      _.key = t3;
    },
    Localizations: function Localizations(t0, t1, t2, t3) {
      var _ = this;
      _.locale = t0;
      _.delegates = t1;
      _.child = t2;
      _.key = t3;
    },
    _LocalizationsState: function _LocalizationsState(t0, t1, t2) {
      var _ = this;
      _._localizedResourcesScopeKey = t0;
      _._typeToResources = t1;
      _._widget = _._localizations$_locale = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _LocalizationsState_load_closure: function _LocalizationsState_load_closure(t0) {
      this._box_0 = t0;
    },
    _LocalizationsState_load_closure0: function _LocalizationsState_load_closure0(t0, t1) {
      this.$this = t0;
      this.locale = t1;
    },
    _LocalizationsState_load__closure: function _LocalizationsState_load__closure(t0, t1, t2) {
      this.$this = t0;
      this.value = t1;
      this.locale = t2;
    },
    PerformanceOverlay: function PerformanceOverlay(t0, t1, t2, t3) {
      var _ = this;
      _.optionsMask = t0;
      _.checkerboardRasterCacheImages = t1;
      _.checkerboardOffscreenLayers = t2;
      _.key = t3;
    },
    DefaultTextStyle$: function(child, maxLines, overflow, softWrap, style, textAlign, textHeightBehavior, textWidthBasis) {
      return new L.DefaultTextStyle(style, textAlign, true, overflow, maxLines, textWidthBasis, textHeightBehavior, child, null);
    },
    DefaultTextStyle: function DefaultTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.style = t0;
      _.textAlign = t1;
      _.softWrap = t2;
      _.overflow = t3;
      _.maxLines = t4;
      _.textWidthBasis = t5;
      _.textHeightBehavior = t6;
      _.child = t7;
      _.key = t8;
    }
  },
  D = {
    CupertinoRouteTransitionMixin__isPopGestureEnabled: function(route) {
      var t1;
      if (route.get$isFirst())
        return false;
      t1 = route._animationProxy;
      if (t1.get$status(t1) !== C.AnimationStatus_3)
        return false;
      t1 = route._secondaryAnimationProxy;
      if (t1.get$status(t1) !== C.AnimationStatus_0)
        return false;
      if (route._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value)
        return false;
      return true;
    },
    CupertinoRouteTransitionMixin_buildPageTransitions: function(route, context, animation, secondaryAnimation, child, $T) {
      var t5, t6, t7,
        t1 = route._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value,
        t2 = t1 ? animation : S.CurvedAnimation$(C.Cubic_izR, animation, C.Cubic_OcD),
        t3 = $.$get$_kRightMiddleTween(),
        t4 = type$.Animation_double;
      t4._as(t2);
      t5 = t1 ? secondaryAnimation : S.CurvedAnimation$(C.Cubic_izR, secondaryAnimation, C.Cubic_OcD);
      t6 = $.$get$_kMiddleLeftTween();
      t4._as(t5);
      t1 = t1 ? animation : S.CurvedAnimation$(C.Cubic_izR, animation, null);
      t7 = $.$get$_CupertinoEdgeShadowDecoration_kTween();
      return new D.CupertinoPageTransition(new R._AnimatedEvaluation(t2, t3, t3.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new R._AnimatedEvaluation(t5, t6, t6.$ti._eval$1("_AnimatedEvaluation<Animatable.T>")), new R._AnimatedEvaluation(t4._as(t1), t7, H._instanceType(t7)._eval$1("_AnimatedEvaluation<Animatable.T>")), new D._CupertinoBackGestureDetector(child, new D.CupertinoRouteTransitionMixin_buildPageTransitions_closure(route), new D.CupertinoRouteTransitionMixin_buildPageTransitions_closure0(route, $T), null, $T._eval$1("_CupertinoBackGestureDetector<0>")), null);
    },
    _CupertinoEdgeShadowDecoration_lerp: function(a, b, t) {
      var t2, t3, t4, i, t5, t6,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1) {
        t1 = b._colors;
        if (t1 == null)
          t1 = b;
        else {
          t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Color>");
          t2 = new D._CupertinoEdgeShadowDecoration(P.List_List$of(new H.MappedListIterable(t1, new D._CupertinoEdgeShadowDecoration_lerp_closure(t), t2), true, t2._eval$1("ListIterable.E")));
          t1 = t2;
        }
        return t1;
      }
      if (b == null) {
        t1 = a._colors;
        if (t1 == null)
          t1 = a;
        else {
          t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Color>");
          t2 = new D._CupertinoEdgeShadowDecoration(P.List_List$of(new H.MappedListIterable(t1, new D._CupertinoEdgeShadowDecoration_lerp_closure0(t), t2), true, t2._eval$1("ListIterable.E")));
          t1 = t2;
        }
        return t1;
      }
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_Color);
      for (t2 = b._colors, t3 = a._colors, t4 = t3 == null, i = 0; i < t2.length; ++i) {
        t5 = t4 ? null : t3[i];
        t6 = t2[i];
        t5 = P.Color_lerp(t5, t6, t);
        t5.toString;
        t1.push(t5);
      }
      return new D._CupertinoEdgeShadowDecoration(t1);
    },
    CupertinoRouteTransitionMixin_buildPageTransitions_closure: function CupertinoRouteTransitionMixin_buildPageTransitions_closure(t0) {
      this.route = t0;
    },
    CupertinoRouteTransitionMixin_buildPageTransitions_closure0: function CupertinoRouteTransitionMixin_buildPageTransitions_closure0(t0, t1) {
      this.route = t0;
      this.T = t1;
    },
    CupertinoPageTransition: function CupertinoPageTransition(t0, t1, t2, t3, t4) {
      var _ = this;
      _._primaryPositionAnimation = t0;
      _._secondaryPositionAnimation = t1;
      _._primaryShadowAnimation = t2;
      _.child = t3;
      _.key = t4;
    },
    _CupertinoBackGestureDetector: function _CupertinoBackGestureDetector(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.enabledCallback = t1;
      _.onStartPopGesture = t2;
      _.key = t3;
      _.$ti = t4;
    },
    _CupertinoBackGestureDetectorState: function _CupertinoBackGestureDetectorState(t0, t1) {
      var _ = this;
      _._widget = _.___CupertinoBackGestureDetectorState__recognizer = _._backGestureController = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
      _.$ti = t1;
    },
    _CupertinoBackGestureController: function _CupertinoBackGestureController(t0, t1) {
      this.controller = t0;
      this.navigator = t1;
    },
    _CupertinoBackGestureController_dragEnd__animationStatusCallback_set: function _CupertinoBackGestureController_dragEnd__animationStatusCallback_set(t0) {
      this._box_0 = t0;
    },
    _CupertinoBackGestureController_dragEnd__animationStatusCallback_get: function _CupertinoBackGestureController_dragEnd__animationStatusCallback_get(t0) {
      this._box_0 = t0;
    },
    _CupertinoBackGestureController_dragEnd_closure: function _CupertinoBackGestureController_dragEnd_closure(t0, t1) {
      this.$this = t0;
      this._animationStatusCallback_get = t1;
    },
    _CupertinoEdgeShadowDecoration: function _CupertinoEdgeShadowDecoration(t0) {
      this._colors = t0;
    },
    _CupertinoEdgeShadowDecoration_lerp_closure: function _CupertinoEdgeShadowDecoration_lerp_closure(t0) {
      this.t = t0;
    },
    _CupertinoEdgeShadowDecoration_lerp_closure0: function _CupertinoEdgeShadowDecoration_lerp_closure0(t0) {
      this.t = t0;
    },
    _CupertinoEdgeShadowPainter: function _CupertinoEdgeShadowPainter(t0, t1) {
      this._route$_decoration = t0;
      this.onChanged = t1;
    },
    Key: function Key() {
    },
    LocalKey: function LocalKey() {
    },
    GestureDisposition: function GestureDisposition(t0) {
      this._arena$_name = t0;
    },
    GestureArenaMember: function GestureArenaMember() {
    },
    GestureArenaEntry: function GestureArenaEntry(t0, t1, t2) {
      this._arena = t0;
      this._arena$_pointer = t1;
      this._member = t2;
    },
    _GestureArena: function _GestureArena(t0) {
      var _ = this;
      _.members = t0;
      _.isOpen = true;
      _.hasPendingSweep = _.isHeld = false;
      _.eagerWinner = null;
    },
    _GestureArena_toString_closure: function _GestureArena_toString_closure(t0) {
      this.$this = t0;
    },
    GestureArenaManager: function GestureArenaManager(t0) {
      this._arenas = t0;
    },
    GestureArenaManager_add_closure: function GestureArenaManager_add_closure(t0, t1) {
      this.$this = t0;
      this.pointer = t1;
    },
    GestureArenaManager__tryToResolveArena_closure: function GestureArenaManager__tryToResolveArena_closure(t0, t1, t2) {
      this.$this = t0;
      this.pointer = t1;
      this.state = t2;
    },
    _maxBy: function(input, keyFunc, $T) {
      var _maxValue_set, maxKey, _i, value, key, _box_0 = {};
      _box_0._maxValue = $;
      _maxValue_set = new D._maxBy__maxValue_set(_box_0, $T);
      for (maxKey = null, _i = 0; _i < 4; ++_i) {
        value = input[_i];
        key = keyFunc.call$1(value);
        if (maxKey == null || key > maxKey) {
          _maxValue_set.call$1(value);
          maxKey = key;
        }
      }
      return new D._maxBy__maxValue_get(_box_0, $T).call$0();
    },
    MaterialPointArcTween: function MaterialPointArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _._endAngle = _._beginAngle = _._radius = _._center = null;
      _.begin = t0;
      _.end = t1;
    },
    MaterialPointArcTween__initialize_sweepAngle: function MaterialPointArcTween__initialize_sweepAngle(t0, t1) {
      this.$this = t0;
      this.distanceFromAtoB = t1;
    },
    _CornerId: function _CornerId(t0) {
      this._arc$_name = t0;
    },
    _Diagonal: function _Diagonal(t0, t1) {
      this.beginId = t0;
      this.endId = t1;
    },
    _maxBy__maxValue_set: function _maxBy__maxValue_set(t0, t1) {
      this._box_0 = t0;
      this.T = t1;
    },
    _maxBy__maxValue_get: function _maxBy__maxValue_get(t0, t1) {
      this._box_0 = t0;
      this.T = t1;
    },
    MaterialRectArcTween: function MaterialRectArcTween(t0, t1) {
      var _ = this;
      _._arc$_dirty = true;
      _.__MaterialRectArcTween__endArc = _.__MaterialRectArcTween__beginArc = null;
      _.begin = t0;
      _.end = t1;
    },
    MaterialRectArcTween__initialize_closure: function MaterialRectArcTween__initialize_closure(t0, t1) {
      this.$this = t0;
      this.centersVector = t1;
    },
    BottomAppBarTheme: function BottomAppBarTheme(t0, t1, t2) {
      this.color = t0;
      this.elevation = t1;
      this.shape = t2;
    },
    _BottomAppBarTheme_Object_Diagnosticable: function _BottomAppBarTheme_Object_Diagnosticable() {
    },
    ShaderWarmUp: function ShaderWarmUp() {
    },
    DefaultShaderWarmUp: function DefaultShaderWarmUp() {
    },
    GestureDetector$: function(behavior, child, excludeFromSemantics, onDoubleTap, onLongPress, onPanDown, onPanEnd, onPanUpdate, onTap, onTapCancel, onTapDown) {
      return new D.GestureDetector(child, onTapDown, onTap, onTapCancel, onDoubleTap, onLongPress, onPanDown, onPanUpdate, onPanEnd, behavior, true, null);
    },
    GestureRecognizerFactory: function GestureRecognizerFactory() {
    },
    GestureRecognizerFactoryWithHandlers: function GestureRecognizerFactoryWithHandlers(t0, t1, t2) {
      this._constructor = t0;
      this._initializer = t1;
      this.$ti = t2;
    },
    GestureDetector: function GestureDetector(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.child = t0;
      _.onTapDown = t1;
      _.onTap = t2;
      _.onTapCancel = t3;
      _.onDoubleTap = t4;
      _.onLongPress = t5;
      _.onPanDown = t6;
      _.onPanUpdate = t7;
      _.onPanEnd = t8;
      _.behavior = t9;
      _.excludeFromSemantics = t10;
      _.key = t11;
    },
    GestureDetector_build_closure: function GestureDetector_build_closure(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure0: function GestureDetector_build_closure0(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure1: function GestureDetector_build_closure1(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure2: function GestureDetector_build_closure2(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure3: function GestureDetector_build_closure3(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure4: function GestureDetector_build_closure4(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure5: function GestureDetector_build_closure5(t0) {
      this.$this = t0;
    },
    GestureDetector_build_closure6: function GestureDetector_build_closure6(t0) {
      this.$this = t0;
    },
    RawGestureDetector: function RawGestureDetector(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.gestures = t1;
      _.behavior = t2;
      _.excludeFromSemantics = t3;
      _.semantics = t4;
      _.key = t5;
    },
    RawGestureDetectorState: function RawGestureDetectorState(t0, t1) {
      var _ = this;
      _._recognizers = t0;
      _._widget = _._gesture_detector$_semantics = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _GestureSemantics: function _GestureSemantics(t0, t1, t2, t3) {
      var _ = this;
      _.behavior = t0;
      _.assignSemantics = t1;
      _.child = t2;
      _.key = t3;
    },
    SemanticsGestureDelegate: function SemanticsGestureDelegate() {
    },
    _DefaultSemanticsGestureDelegate: function _DefaultSemanticsGestureDelegate(t0) {
      this.detectorState = t0;
    },
    _DefaultSemanticsGestureDelegate__getTapHandler_closure: function _DefaultSemanticsGestureDelegate__getTapHandler_closure(t0) {
      this.tap = t0;
    },
    _DefaultSemanticsGestureDelegate__getLongPressHandler_closure: function _DefaultSemanticsGestureDelegate__getLongPressHandler_closure(t0) {
      this.longPress = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure(t0) {
      this.horizontal = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0(t0) {
      this.pan = t0;
    },
    _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1: function _DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1(t0, t1) {
      this.horizontalHandler = t0;
      this.panHandler = t1;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure(t0) {
      this.vertical = t0;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0(t0) {
      this.pan = t0;
    },
    _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1: function _DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1(t0, t1) {
      this.verticalHandler = t0;
      this.panHandler = t1;
    },
    debugPrintThrottled: function(message, wrapWidth) {
      var messageLines = H.setRuntimeTypeInfo(message.split("\n"), type$.JSArray_String);
      $.$get$_debugPrintBuffer().addAll$1(0, messageLines);
      if (!$._debugPrintScheduled)
        D._debugPrintTask();
    },
    _debugPrintTask: function() {
      var line,
        t1 = $._debugPrintScheduled = false,
        t2 = $.$get$_debugPrintStopwatch();
      if (P.Duration$(t2.get$elapsedMicroseconds(), 0)._duration > 1000000) {
        if (t2._stop == null)
          t2._stop = $.Primitives_timerTicks.call$0();
        t2.reset$0(0);
        $._debugPrintedCharacters = 0;
      }
      while (true) {
        if ($._debugPrintedCharacters < 12288) {
          t2 = $.$get$_debugPrintBuffer();
          t2 = !t2.get$isEmpty(t2);
        } else
          t2 = t1;
        if (!t2)
          break;
        line = $.$get$_debugPrintBuffer().removeFirst$0();
        $._debugPrintedCharacters = $._debugPrintedCharacters + line.length;
        H.printString(line);
      }
      t1 = $.$get$_debugPrintBuffer();
      if (!t1.get$isEmpty(t1)) {
        $._debugPrintScheduled = true;
        $._debugPrintedCharacters = 0;
        P.Timer_Timer(C.Duration_1000000, D.print___debugPrintTask$closure());
        if ($._debugPrintCompleter == null)
          $._debugPrintCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
      } else {
        $.$get$_debugPrintStopwatch().start$0(0);
        t1 = $._debugPrintCompleter;
        if (t1 != null)
          t1.complete$0(0);
        $._debugPrintCompleter = null;
      }
    }
  },
  U = {
    defaultTargetPlatform: function() {
      var t1 = $.$get$_testPlatform();
      return t1 == null ? $.$get$_browserPlatform() : t1;
    },
    _testPlatform_closure: function _testPlatform_closure() {
    },
    _browserPlatform_closure: function _browserPlatform_closure() {
    },
    ErrorDescription$: function(message) {
      var _null = null,
        t1 = H.setRuntimeTypeInfo([message], type$.JSArray_Object);
      return new U.ErrorDescription(_null, false, true, _null, _null, _null, false, t1, _null, C.DiagnosticLevel_3, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    },
    ErrorSummary$: function(message) {
      var _null = null,
        t1 = H.setRuntimeTypeInfo([message], type$.JSArray_Object);
      return new U.ErrorSummary(_null, false, true, _null, _null, _null, false, t1, _null, C.DiagnosticLevel_6, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    },
    ErrorHint$: function(message) {
      var _null = null,
        t1 = H.setRuntimeTypeInfo([message], type$.JSArray_Object);
      return new U.ErrorHint(_null, false, true, _null, _null, _null, false, t1, _null, C.DiagnosticLevel_5, _null, false, false, _null, C.DiagnosticsTreeStyle_7);
    },
    ErrorSpacer$: function() {
      var _null = null;
      return new U.ErrorSpacer("", false, true, _null, _null, _null, false, _null, C.C__NoDefaultValue, C.DiagnosticLevel_3, "", true, false, _null, C.DiagnosticsTreeStyle_8);
    },
    FlutterError_FlutterError: function(message) {
      var lines = H.setRuntimeTypeInfo(message.split("\n"), type$.JSArray_String),
        t1 = H.setRuntimeTypeInfo([U.ErrorSummary$(C.JSArray_methods.get$first(lines))], type$.JSArray_DiagnosticsNode),
        t2 = H.SubListIterable$(lines, 1, null, type$.String);
      C.JSArray_methods.addAll$1(t1, new H.MappedListIterable(t2, new U.FlutterError_FlutterError_closure(), t2.$ti._eval$1("MappedListIterable<ListIterable.E,DiagnosticsNode>")));
      return new U.FlutterError(t1);
    },
    FlutterError__defaultErrorHandler: function(details) {
      return $.FlutterError_presentError.call$1(details);
    },
    FlutterError__defaultStackTraceDemangler: function(stackTrace) {
      return stackTrace;
    },
    FlutterError_dumpErrorToConsole: function(details, forceReport) {
      if ($.FlutterError__errorCount === 0 || false)
        U.debugPrintStack(J.toString$0$(details.exception), 100, details.stack);
      else
        D.print__debugPrintThrottled$closure().call$1("Another exception was thrown: " + details.get$summary().toString$0(0));
      $.FlutterError__errorCount = $.FlutterError__errorCount + 1;
    },
    FlutterError_defaultStackFilter: function($frames) {
      var skipped, index, t1, frame, className, $package, reasons, t2, _i, result, index0, t3, suffix,
        removedPackagesAndClasses = P.LinkedHashMap_LinkedHashMap$_literal(["dart:async-patch", 0, "dart:async", 0, "package:stack_trace", 0, "class _AssertionError", 0, "class _FakeAsync", 0, "class _FrameCallbackEntry", 0, "class _Timer", 0, "class _RawReceivePortImpl", 0], type$.String, type$.int),
        parsedFrames = R.StackFrame_fromStackString(J.join$1$ax($frames, "\n"));
      for (skipped = 0, index = 0; t1 = parsedFrames.length, index < t1; ++index) {
        frame = parsedFrames[index];
        className = "class " + frame.className;
        $package = frame.packageScheme + ":" + frame.$package;
        if (removedPackagesAndClasses.containsKey$1(0, className)) {
          ++skipped;
          removedPackagesAndClasses.update$2(removedPackagesAndClasses, className, new U.FlutterError_defaultStackFilter_closure());
          C.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        } else if (removedPackagesAndClasses.containsKey$1(0, $package)) {
          ++skipped;
          removedPackagesAndClasses.update$2(removedPackagesAndClasses, $package, new U.FlutterError_defaultStackFilter_closure0());
          C.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        }
      }
      reasons = P.List_List$filled(t1, null, false, type$.nullable_String);
      for (t2 = $.FlutterError__stackFilters.length, _i = 0; _i < $.FlutterError__stackFilters.length; $.FlutterError__stackFilters.length === t2 || (0, H.throwConcurrentModificationError)($.FlutterError__stackFilters), ++_i)
        $.FlutterError__stackFilters[_i].filter$2(0, parsedFrames, reasons);
      t2 = type$.JSArray_String;
      result = H.setRuntimeTypeInfo([], t2);
      for (--t1, index = 0; index < parsedFrames.length; index = index0 + 1) {
        index0 = index;
        while (true) {
          if (index0 < t1) {
            t3 = reasons[index0];
            t3 = t3 != null && J.$eq$(reasons[index0 + 1], t3);
          } else
            t3 = false;
          if (!t3)
            break;
          ++index0;
        }
        if (reasons[index0] != null)
          suffix = index0 !== index ? " (" + (index0 - index + 2) + " frames)" : " (1 frame)";
        else
          suffix = "";
        t3 = reasons[index0];
        result.push(H.S(t3 == null ? parsedFrames[index0].source : t3) + suffix);
      }
      t1 = H.setRuntimeTypeInfo([], t2);
      for (t2 = removedPackagesAndClasses.get$entries(removedPackagesAndClasses), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        if (t3.value > 0)
          t1.push(t3.key);
      }
      C.JSArray_methods.sort$0(t1);
      if (skipped === 1)
        result.push("(elided one frame from " + C.JSArray_methods.get$single(t1) + ")");
      else if (skipped > 1) {
        t2 = t1.length;
        if (t2 > 1)
          t1[t2 - 1] = "and " + C.JSArray_methods.get$last(t1);
        if (t1.length > 2)
          result.push("(elided " + skipped + " frames from " + C.JSArray_methods.join$1(t1, ", ") + ")");
        else
          result.push("(elided " + skipped + " frames from " + C.JSArray_methods.join$1(t1, " ") + ")");
      }
      return result;
    },
    FlutterError_reportError: function(details) {
      var t1 = $.FlutterError_onError;
      if (t1 != null)
        t1.call$1(details);
    },
    debugPrintStack: function(label, maxFrames, stackTrace) {
      var lines, t1;
      if (label != null)
        D.print__debugPrintThrottled$closure().call$1(label);
      lines = H.setRuntimeTypeInfo(C.JSString_methods.trimRight$0(J.toString$0$(stackTrace == null ? P.StackTrace_current() : U.FlutterError__defaultStackTraceDemangler(stackTrace))).split("\n"), type$.JSArray_String);
      t1 = lines.length;
      lines = J.take$1$ax(t1 !== 0 ? new H.SkipWhileIterable(lines, new U.debugPrintStack_closure(), type$.SkipWhileIterable_String) : lines, maxFrames);
      D.print__debugPrintThrottled$closure().call$1(C.JSArray_methods.join$1(U.FlutterError_defaultStackFilter(lines), "\n"));
    },
    DiagnosticsStackTrace$: function($name, stack, stackFilter) {
      var t1 = U.DiagnosticsStackTrace__applyStackFilter(stack, stackFilter);
      return new U.DiagnosticsStackTrace(C.List_empty, t1, stack, true, $name, true, true, null, C.DiagnosticsTreeStyle_7);
    },
    DiagnosticsStackTrace__applyStackFilter: function(stack, stackFilter) {
      if (stack == null)
        return H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
      return J.map$1$1$ax(U.FlutterError_defaultStackFilter(H.setRuntimeTypeInfo(C.JSString_methods.trimRight$0(H.S(U.FlutterError__defaultStackTraceDemangler(stack))).split("\n"), type$.JSArray_String)), U.assertions_DiagnosticsStackTrace__createStackFrame$closure(), type$.DiagnosticsNode).toList$0(0);
    },
    DiagnosticsStackTrace__createStackFrame: function(frame) {
      return Y.DiagnosticsNode_DiagnosticsNode$message(frame, false, C.DiagnosticsTreeStyle_8);
    },
    _FlutterErrorDetailsNode$: function($name, style, value) {
      return new U._FlutterErrorDetailsNode(value, $name, true, true, null, style);
    },
    _ErrorDiagnostic: function _ErrorDiagnostic() {
    },
    ErrorDescription: function ErrorDescription(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    ErrorSummary: function ErrorSummary(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    ErrorHint: function ErrorHint(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    ErrorSpacer: function ErrorSpacer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _.ifEmpty = t4;
      _.tooltip = t5;
      _.missingIfNull = t6;
      _._value = t7;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _.name = t10;
      _.showSeparator = t11;
      _.showName = t12;
      _.linePrefix = t13;
      _.style = t14;
    },
    FlutterErrorDetails: function FlutterErrorDetails(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    FlutterErrorDetails_summary_formatException: function FlutterErrorDetails_summary_formatException(t0) {
      this.$this = t0;
    },
    FlutterErrorDetails_summary_closure: function FlutterErrorDetails_summary_closure() {
    },
    FlutterErrorDetails_summary_closure0: function FlutterErrorDetails_summary_closure0() {
    },
    FlutterErrorDetails_debugFillProperties_closure: function FlutterErrorDetails_debugFillProperties_closure() {
    },
    FlutterError: function FlutterError(t0) {
      this.diagnostics = t0;
    },
    FlutterError_FlutterError_closure: function FlutterError_FlutterError_closure() {
    },
    FlutterError_defaultStackFilter_closure: function FlutterError_defaultStackFilter_closure() {
    },
    FlutterError_defaultStackFilter_closure0: function FlutterError_defaultStackFilter_closure0() {
    },
    FlutterError_toString_closure: function FlutterError_toString_closure(t0) {
      this.renderer = t0;
    },
    debugPrintStack_closure: function debugPrintStack_closure() {
    },
    DiagnosticsStackTrace: function DiagnosticsStackTrace(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._diagnostics$_children = t0;
      _._properties = t1;
      _.value = t2;
      _.allowTruncate = t3;
      _.name = t4;
      _.showSeparator = t5;
      _.showName = t6;
      _.linePrefix = t7;
      _.style = t8;
    },
    _FlutterErrorDetailsNode: function _FlutterErrorDetailsNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _._cachedBuilder = null;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    _FlutterError_Error_DiagnosticableTreeMixin: function _FlutterError_Error_DiagnosticableTreeMixin() {
    },
    _FlutterErrorDetails_Object_Diagnosticable: function _FlutterErrorDetails_Object_Diagnosticable() {
    },
    _getClipCallback: function(referenceBox, containedInkWell, rectCallback) {
      if (rectCallback != null)
        return rectCallback;
      return new U._getClipCallback_closure(referenceBox);
    },
    _getTargetRadius: function(referenceBox, containedInkWell, rectCallback, position) {
      var t1, size, d1, d2, t2, d3, d4;
      if (rectCallback != null) {
        t1 = rectCallback.call$0();
        size = new P.Size(t1.right - t1.left, t1.bottom - t1.top);
      } else {
        t1 = referenceBox._size;
        t1.toString;
        size = t1;
      }
      d1 = position.$sub(0, C.Offset_0_0).get$distance();
      t1 = 0 + size._dx;
      d2 = position.$sub(0, new P.Offset(t1, 0)).get$distance();
      t2 = 0 + size._dy;
      d3 = position.$sub(0, new P.Offset(0, t2)).get$distance();
      d4 = position.$sub(0, new P.Offset(t1, t2)).get$distance();
      return Math.ceil(Math.max(Math.max(d1, d2), Math.max(d3, d4)));
    },
    _getClipCallback_closure: function _getClipCallback_closure(t0) {
      this.referenceBox = t0;
    },
    _InkSplashFactory: function _InkSplashFactory() {
    },
    InkSplash: function InkSplash(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._ink_splash$_position = t0;
      _._ink_splash$_borderRadius = t1;
      _._customBorder = t2;
      _._targetRadius = t3;
      _._clipCallback = t4;
      _._repositionToReferenceBox = t5;
      _._ink_splash$_textDirection = t6;
      _._ink_splash$_alphaController = _.__InkSplash__alpha = _.__InkSplash__radiusController = _.__InkSplash__radius = null;
      _._ink_well$_color = t7;
      _._material$_controller = t8;
      _.referenceBox = t9;
      _.onRemoved = t10;
      _._material$_debugDisposed = false;
    },
    _MaterialLocalizationsDelegate: function _MaterialLocalizationsDelegate() {
    },
    DefaultMaterialLocalizations: function DefaultMaterialLocalizations() {
    },
    OutlinedButtonThemeData_lerp: function(a, b, t) {
      return new U.OutlinedButtonThemeData(A.ButtonStyle_lerp(a.style, b.style, t));
    },
    OutlinedButtonThemeData: function OutlinedButtonThemeData(t0) {
      this.style = t0;
    },
    _OutlinedButtonThemeData_Object_Diagnosticable: function _OutlinedButtonThemeData_Object_Diagnosticable() {
    },
    TabBarTheme: function TabBarTheme(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.indicator = t0;
      _.indicatorSize = t1;
      _.labelColor = t2;
      _.labelPadding = t3;
      _.labelStyle = t4;
      _.unselectedLabelColor = t5;
      _.unselectedLabelStyle = t6;
    },
    _TabBarTheme_Object_Diagnosticable: function _TabBarTheme_Object_Diagnosticable() {
    },
    Typography_Typography$material2014: function(platform) {
      return U.Typography_Typography$_withPlatform(platform, null, null, C.TextTheme_chs, C.TextTheme_BCG, C.TextTheme_aB5);
    },
    Typography_Typography$_withPlatform: function(platform, black, white, englishLike, dense, tall) {
      switch (platform) {
        case C.TargetPlatform_2:
          black = C.TextTheme_WPD;
          white = C.TextTheme_Uhl;
          break;
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
          black = C.TextTheme_6Hm;
          white = C.TextTheme_A8Z;
          break;
        case C.TargetPlatform_5:
          black = C.TextTheme_6hH;
          white = C.TextTheme_nfu;
          break;
        case C.TargetPlatform_4:
          black = C.TextTheme_0vk;
          white = C.TextTheme_iz0;
          break;
        case C.TargetPlatform_3:
          black = C.TextTheme_kdB;
          white = C.TextTheme_69H;
          break;
        case null:
          break;
      }
      black.toString;
      white.toString;
      return new U.Typography(black, white, englishLike, dense, tall);
    },
    ScriptCategory: function ScriptCategory(t0) {
      this._typography$_name = t0;
    },
    Typography: function Typography(t0, t1, t2, t3, t4) {
      var _ = this;
      _.black = t0;
      _.white = t1;
      _.englishLike = t2;
      _.dense = t3;
      _.tall = t4;
    },
    _Typography_Object_Diagnosticable: function _Typography_Object_Diagnosticable() {
    },
    PlaceholderDimensions: function PlaceholderDimensions(t0, t1) {
      this.size = t0;
      this.baseline = t1;
    },
    TextWidthBasis: function TextWidthBasis(t0) {
      this._text_painter$_name = t0;
    },
    TextPainter: function TextPainter(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._text_painter$_paragraph = null;
      _._text_painter$_needsLayout = true;
      _._text_painter$_text = t0;
      _._text_painter$_textAlign = t1;
      _._text_painter$_textDirection = t2;
      _._textScaleFactor = t3;
      _._text_painter$_ellipsis = t4;
      _._text_painter$_locale = t5;
      _._text_painter$_maxLines = t6;
      _._text_painter$_strutStyle = t7;
      _._textWidthBasis = t8;
      _._text_painter$_textHeightBehavior = t9;
      _._lastMaxWidth = _._lastMinWidth = _._text_painter$_placeholderDimensions = _._inlinePlaceholderScales = _._inlinePlaceholderBoxes = null;
    },
    StringCodec: function StringCodec() {
    },
    JSONMessageCodec0: function JSONMessageCodec0() {
    },
    JSONMethodCodec0: function JSONMethodCodec0() {
    },
    StandardMessageCodec0: function StandardMessageCodec0() {
    },
    StandardMessageCodec_writeValue_closure: function StandardMessageCodec_writeValue_closure(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec0: function StandardMethodCodec0() {
    },
    _getParent: function(context) {
      var t1 = {};
      t1._parent0 = null;
      context.visitAncestorElements$1(new U._getParent_closure(new U._getParent__parent_set(t1)));
      return new U._getParent__parent_get(t1).call$0();
    },
    Actions__visitActionsAncestors: function(context, visitor) {
      var t2, ancestor,
        t1 = type$._ActionsMarker,
        actionsElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; t2 = actionsElement != null, t2; actionsElement = ancestor) {
        if (J.$eq$(visitor.call$1(actionsElement), true))
          break;
        t2 = U._getParent(actionsElement)._inheritedWidgets;
        ancestor = t2 == null ? null : t2.$index(0, H.createRuntimeType(t1));
      }
      return t2;
    },
    Actions__findDispatcher: function(context) {
      var t1 = {};
      t1.dispatcher = null;
      U.Actions__visitActionsAncestors(context, new U.Actions__findDispatcher_closure(t1));
      return C.C_ActionDispatcher;
    },
    Actions_maybeFind: function(context, intent, $T) {
      var type, t1 = {};
      t1.action = null;
      type = H.getRuntimeType(intent);
      U.Actions__visitActionsAncestors(context, new U.Actions_maybeFind_closure(t1, type, $T, context));
      return t1.action;
    },
    DoNothingAction$: function(consumesKey) {
      return new U.DoNothingAction(consumesKey, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent));
    },
    _getParent__parent_set: function _getParent__parent_set(t0) {
      this._box_0 = t0;
    },
    _getParent__parent_get: function _getParent__parent_get(t0) {
      this._box_0 = t0;
    },
    _getParent_closure: function _getParent_closure(t0) {
      this._parent_set = t0;
    },
    Intent: function Intent() {
    },
    Action: function Action() {
    },
    ContextAction: function ContextAction() {
    },
    CallbackAction: function CallbackAction(t0, t1, t2) {
      this.onInvoke = t0;
      this._actions$_listeners = t1;
      this.$ti = t2;
    },
    ActionDispatcher: function ActionDispatcher() {
    },
    Actions: function Actions(t0, t1, t2) {
      this.actions = t0;
      this.child = t1;
      this.key = t2;
    },
    Actions__findDispatcher_closure: function Actions__findDispatcher_closure(t0) {
      this._box_0 = t0;
    },
    Actions_maybeFind_closure: function Actions_maybeFind_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.type = t1;
      _.T = t2;
      _.context = t3;
    },
    _ActionsState: function _ActionsState(t0, t1, t2) {
      var _ = this;
      _.listenedActions = t0;
      _.rebuildKey = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _ActionsState__handleActionChanged_closure: function _ActionsState__handleActionChanged_closure(t0) {
      this.$this = t0;
    },
    _ActionsMarker: function _ActionsMarker(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dispatcher = t0;
      _.actions = t1;
      _.rebuildKey = t2;
      _.child = t3;
      _.key = t4;
    },
    DoNothingAction: function DoNothingAction(t0, t1) {
      this._consumesKey = t0;
      this._actions$_listeners = t1;
    },
    ActivateIntent: function ActivateIntent() {
    },
    ButtonActivateIntent: function ButtonActivateIntent() {
    },
    DismissIntent: function DismissIntent() {
    },
    DismissAction: function DismissAction() {
    },
    PrioritizedIntents: function PrioritizedIntents() {
    },
    PrioritizedAction: function PrioritizedAction(t0) {
      this.__PrioritizedAction__selectedIntent = this.__PrioritizedAction__selectedAction = null;
      this._actions$_listeners = t0;
    },
    _Action_Object_Diagnosticable: function _Action_Object_Diagnosticable() {
    },
    _ActionDispatcher_Object_Diagnosticable: function _ActionDispatcher_Object_Diagnosticable() {
    },
    _Intent_Object_Diagnosticable: function _Intent_Object_Diagnosticable() {
    },
    _getAncestor: function(context, count) {
      var t1 = {};
      t1.count = count;
      t1.target = null;
      context.visitAncestorElements$1(new U._getAncestor_closure(t1));
      return t1.target;
    },
    _focusAndEnsureVisible: function(node, alignmentPolicy) {
      var t1;
      node.requestFocus$0();
      t1 = node._context;
      t1.toString;
      F.Scrollable_ensureVisible(t1, 1, alignmentPolicy);
    },
    _FocusTraversalGroupInfo$: function(marker, defaultPolicy, members) {
      var t1 = marker == null ? null : marker.policy;
      if (t1 == null)
        t1 = defaultPolicy;
      return new U._FocusTraversalGroupInfo(t1, members);
    },
    _ReadingOrderSortData_commonDirectionalityOf: function(list) {
      var t1, t2, common, common0,
        allAncestors = new H.MappedListIterable(list, new U._ReadingOrderSortData_commonDirectionalityOf_closure(), H._arrayInstanceType(list)._eval$1("MappedListIterable<1,Set<Directionality>>"));
      for (t1 = new H.ListIterator(allAncestors, allAncestors.get$length(allAncestors)), t2 = H._instanceType(t1)._precomputed1, common = null; t1.moveNext$0();) {
        common0 = t2._as(t1._current);
        common = (common == null ? common0 : common).intersection$1(0, common0);
      }
      if (common.get$isEmpty(common))
        return C.JSArray_methods.get$first(list).directionality;
      return C.JSArray_methods.firstWhere$1(C.JSArray_methods.get$first(list).get$directionalAncestors(), common.get$contains(common)).textDirection;
    },
    _ReadingOrderSortData_sortWithDirectionality: function(list, directionality) {
      S.mergeSort(list, new U._ReadingOrderSortData_sortWithDirectionality_closure(directionality), type$._ReadingOrderSortData);
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality: function(list, directionality) {
      S.mergeSort(list, new U._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(directionality), type$._ReadingOrderDirectionalGroupData);
    },
    _getAncestor_closure: function _getAncestor_closure(t0) {
      this._box_0 = t0;
    },
    _FocusTraversalGroupInfo: function _FocusTraversalGroupInfo(t0, t1) {
      this.policy = t0;
      this.members = t1;
    },
    TraversalDirection: function TraversalDirection(t0) {
      this._focus_traversal$_name = t0;
    },
    FocusTraversalPolicy: function FocusTraversalPolicy() {
    },
    FocusTraversalPolicy__sortAllDescendants_visitGroups: function FocusTraversalPolicy__sortAllDescendants_visitGroups(t0, t1, t2) {
      this.groupKeys = t0;
      this.groups = t1;
      this.sortedDescendants = t2;
    },
    FocusTraversalPolicy__sortAllDescendants_closure: function FocusTraversalPolicy__sortAllDescendants_closure() {
    },
    _DirectionalPolicyDataEntry: function _DirectionalPolicyDataEntry(t0, t1) {
      this.direction = t0;
      this.node = t1;
    },
    _DirectionalPolicyData: function _DirectionalPolicyData(t0) {
      this.history = t0;
    },
    DirectionalFocusTraversalPolicyMixin: function DirectionalFocusTraversalPolicyMixin() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(t0) {
      this.node = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure(t0, t1) {
      this.vertical = t0;
      this.first = t1;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure() {
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure() {
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1: function DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1(t0) {
      this.target = t0;
    },
    DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate: function DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(t0, t1, t2) {
      this.$this = t0;
      this.policyData = t1;
      this.nearestScope = t2;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure: function DirectionalFocusTraversalPolicyMixin_inDirection_closure(t0) {
      this.band = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure0: function DirectionalFocusTraversalPolicyMixin_inDirection_closure0(t0) {
      this.focusedChild = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure1: function DirectionalFocusTraversalPolicyMixin_inDirection_closure1(t0) {
      this.band = t0;
    },
    DirectionalFocusTraversalPolicyMixin_inDirection_closure2: function DirectionalFocusTraversalPolicyMixin_inDirection_closure2(t0) {
      this.focusedChild = t0;
    },
    _ReadingOrderSortData: function _ReadingOrderSortData(t0, t1, t2) {
      var _ = this;
      _.directionality = t0;
      _.rect = t1;
      _.node = t2;
      _._directionalAncestors = null;
    },
    _ReadingOrderSortData_commonDirectionalityOf_closure: function _ReadingOrderSortData_commonDirectionalityOf_closure() {
    },
    _ReadingOrderSortData_sortWithDirectionality_closure: function _ReadingOrderSortData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors: function _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors() {
    },
    _ReadingOrderDirectionalGroupData: function _ReadingOrderDirectionalGroupData(t0) {
      this.members = t0;
      this._rect = null;
    },
    _ReadingOrderDirectionalGroupData_rect_closure: function _ReadingOrderDirectionalGroupData_rect_closure() {
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure: function _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    ReadingOrderTraversalPolicy: function ReadingOrderTraversalPolicy(t0) {
      this.DirectionalFocusTraversalPolicyMixin__policyData = t0;
    },
    ReadingOrderTraversalPolicy__pickNext_closure: function ReadingOrderTraversalPolicy__pickNext_closure() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand: function ReadingOrderTraversalPolicy__pickNext_inBand() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand_closure: function ReadingOrderTraversalPolicy__pickNext_inBand_closure(t0) {
      this.band = t0;
    },
    FocusTraversalGroup: function FocusTraversalGroup(t0, t1, t2) {
      this.policy = t0;
      this.child = t1;
      this.key = t2;
    },
    _FocusTraversalGroupState: function _FocusTraversalGroupState(t0) {
      var _ = this;
      _._widget = _.focusNode = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _FocusTraversalGroupMarker: function _FocusTraversalGroupMarker(t0, t1, t2, t3) {
      var _ = this;
      _.policy = t0;
      _.focusNode = t1;
      _.child = t2;
      _.key = t3;
    },
    RequestFocusAction: function RequestFocusAction(t0) {
      this._actions$_listeners = t0;
    },
    NextFocusIntent: function NextFocusIntent() {
    },
    NextFocusAction: function NextFocusAction(t0) {
      this._actions$_listeners = t0;
    },
    PreviousFocusIntent: function PreviousFocusIntent() {
    },
    PreviousFocusAction: function PreviousFocusAction(t0) {
      this._actions$_listeners = t0;
    },
    DirectionalFocusAction: function DirectionalFocusAction(t0) {
      this._actions$_listeners = t0;
    },
    _FocusTraversalPolicy_Object_Diagnosticable: function _FocusTraversalPolicy_Object_Diagnosticable() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin() {
    },
    __ReadingOrderDirectionalGroupData_Object_Diagnosticable: function __ReadingOrderDirectionalGroupData_Object_Diagnosticable() {
    },
    __ReadingOrderSortData_Object_Diagnosticable: function __ReadingOrderSortData_Object_Diagnosticable() {
    },
    Notification0: function Notification0() {
    },
    NotificationListener: function NotificationListener(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.onNotification = t1;
      _.key = t2;
      _.$ti = t3;
    },
    RestorableValue: function RestorableValue() {
    },
    _RestorablePrimitiveValueN: function _RestorablePrimitiveValueN() {
    },
    _RestorablePrimitiveValue: function _RestorablePrimitiveValue() {
    },
    RestorableNum: function RestorableNum(t0, t1, t2) {
      var _ = this;
      _._defaultValue = t0;
      _._restoration0$_owner = _._restoration0$_restorationId = _._restoration_properties$_value = null;
      _.ChangeNotifier__listeners = t1;
      _.$ti = t2;
    },
    TickerMode_of: function(context) {
      var widget = context.dependOnInheritedWidgetOfExactType$1$0(type$._EffectiveTickerMode),
        t1 = widget == null ? null : widget.enabled;
      return t1 !== false;
    },
    TickerMode: function TickerMode(t0, t1, t2) {
      this.enabled = t0;
      this.child = t1;
      this.key = t2;
    },
    _EffectiveTickerMode: function _EffectiveTickerMode(t0, t1, t2) {
      this.enabled = t0;
      this.child = t1;
      this.key = t2;
    },
    SingleTickerProviderStateMixin: function SingleTickerProviderStateMixin() {
    },
    TickerProviderStateMixin: function TickerProviderStateMixin() {
    },
    _WidgetTicker: function _WidgetTicker(t0, t1, t2) {
      var _ = this;
      _._creator = t0;
      _._ticker$_future = null;
      _._muted = false;
      _._startTime = null;
      _._onTick = t1;
      _._animationId = null;
      _.debugLabel = t2;
      _.__Ticker__debugCreationStack = null;
    },
    Title: function Title(t0, t1, t2, t3) {
      var _ = this;
      _.title = t0;
      _.color = t1;
      _.child = t2;
      _.key = t3;
    },
    compute: function(callback, message, debugLabel, $Q, $R) {
      return U.compute$body(callback, message, debugLabel, $Q, $R, $R);
    },
    compute$body: function(callback, message, debugLabel, $Q, $R, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue;
      var $async$compute = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(null, $async$compute);
            case 3:
              // returning from await.
              $async$returnValue = callback.call$1(message);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$compute, $async$completer);
    },
    createLocalImageConfiguration: function(context) {
      var t1, t2;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultAssetBundle);
      t1 = $.$get$rootBundle();
      t2 = F.MediaQuery_maybeOf(context);
      t2 = t2 == null ? null : t2.devicePixelRatio;
      if (t2 == null)
        t2 = 1;
      return new M.ImageConfiguration(t1, t2, L.Localizations_maybeLocaleOf(context), T.Directionality_maybeOf(context), null, U.defaultTargetPlatform());
    }
  },
  N = {BindingBase: function BindingBase() {
    }, BindingBase_lockEvents_closure: function BindingBase_lockEvents_closure(t0) {
      this.$this = t0;
    }, BindingBase_registerBoolServiceExtension_closure: function BindingBase_registerBoolServiceExtension_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.setter = t1;
      _.name = t2;
      _.getter = t3;
    }, BindingBase_registerNumericServiceExtension_closure: function BindingBase_registerNumericServiceExtension_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.name = t1;
      _.setter = t2;
      _.getter = t3;
    }, BindingBase_registerServiceExtension_closure: function BindingBase_registerServiceExtension_closure(t0, t1) {
      this.methodName = t0;
      this.callback = t1;
    }, BindingBase_registerServiceExtension_closure__result_set: function BindingBase_registerServiceExtension_closure__result_set(t0) {
      this._box_0 = t0;
    }, BindingBase_registerServiceExtension__closure: function BindingBase_registerServiceExtension__closure() {
    }, BindingBase_registerServiceExtension_closure__result_get: function BindingBase_registerServiceExtension_closure__result_get(t0) {
      this._box_0 = t0;
    },
    FlutterErrorDetailsForPointerEventDispatcher$: function(context, $event, exception, hitTestEntry, informationCollector, library, stack) {
      return new N.FlutterErrorDetailsForPointerEventDispatcher(exception, stack, library, context, informationCollector, false);
    },
    _Resampler: function _Resampler(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._resamplers = t0;
      _._frameCallbackScheduled = false;
      _._frameTime = t1;
      _._frameTimeAge = t2;
      _._lastSampleTime = t3;
      _._lastEventTime = t4;
      _._handlePointerEvent = t5;
      _._handleSampleTimeChanged = t6;
      _._samplingInterval = t7;
      _._binding2$_timer = null;
    },
    GestureBinding: function GestureBinding() {
    },
    GestureBinding_dispatchEvent_closure: function GestureBinding_dispatchEvent_closure(t0) {
      this.event = t0;
    },
    GestureBinding_dispatchEvent_closure0: function GestureBinding_dispatchEvent_closure0(t0, t1) {
      this.event = t0;
      this.entry = t1;
    },
    FlutterErrorDetailsForPointerEventDispatcher: function FlutterErrorDetailsForPointerEventDispatcher(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    TapDownDetails: function TapDownDetails(t0) {
      this.globalPosition = t0;
    },
    BaseTapGestureRecognizer: function BaseTapGestureRecognizer() {
    },
    TapGestureRecognizer: function TapGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onTertiaryTapCancel = _.onTertiaryTapUp = _.onTertiaryTapDown = _.onSecondaryTapCancel = _.onSecondaryTapUp = _.onSecondaryTapDown = _.onSecondaryTap = _.onTapCancel = _.onTap = _.onTapUp = _.onTapDown = null;
      _._wonArenaForPrimaryPointer = _._sentTapDown = false;
      _._up = _._down = null;
      _.deadline = t0;
      _.postAcceptSlopTolerance = t1;
      _.state = t2;
      _.initialPosition = _.primaryPointer = null;
      _._gestureAccepted = false;
      _._recognizer$_timer = null;
      _._recognizer$_entries = t3;
      _._trackedPointers = t4;
      _.debugOwner = t5;
      _._kindFilter = t6;
      _._pointerToKind = t7;
    },
    TapGestureRecognizer_handleTapDown_closure: function TapGestureRecognizer_handleTapDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    SnackBarClosedReason: function SnackBarClosedReason(t0) {
      this._snack_bar$_name = t0;
    },
    PaintingBinding: function PaintingBinding() {
    },
    _SystemFontsNotifier: function _SystemFontsNotifier(t0) {
      this._systemFontsCallbacks = t0;
    },
    RendererBinding: function RendererBinding() {
    },
    RendererBinding__scheduleMouseTrackerUpdate_closure: function RendererBinding__scheduleMouseTrackerUpdate_closure(t0) {
      this.$this = t0;
    },
    timeDilation: function(value) {
      var t1;
      if ($._timeDilation === value)
        return;
      t1 = $.SchedulerBinding__instance;
      if (t1 != null)
        t1.resetEpoch$0();
      $._timeDilation = value;
    },
    SchedulerBinding__taskSorter: function(e1, e2) {
      return -C.JSInt_methods.compareTo$1(e1.priority, e2.priority);
    },
    defaultSchedulingStrategy: function(priority, scheduler) {
      var t1 = scheduler.SchedulerBinding__transientCallbacks;
      if (t1.get$length(t1) > 0)
        return priority >= 100000;
      return true;
    },
    _TaskEntry: function _TaskEntry(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.task = t0;
      _.priority = t1;
      _.debugLabel = t2;
      _.flow = t3;
      _.___TaskEntry_debugStack = null;
      _.completer = t4;
      _.$ti = t5;
    },
    _TaskEntry_run_closure: function _TaskEntry_run_closure(t0) {
      this.$this = t0;
    },
    _FrameCallbackEntry: function _FrameCallbackEntry(t0) {
      this.callback = t0;
      this.debugStack = null;
    },
    SchedulerPhase: function SchedulerPhase(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SchedulerBinding: function SchedulerBinding() {
    },
    SchedulerBinding_endOfFrame_closure: function SchedulerBinding_endOfFrame_closure(t0) {
      this.$this = t0;
    },
    SchedulerBinding_scheduleWarmUpFrame_closure: function SchedulerBinding_scheduleWarmUpFrame_closure(t0) {
      this.$this = t0;
    },
    SchedulerBinding_scheduleWarmUpFrame_closure0: function SchedulerBinding_scheduleWarmUpFrame_closure0(t0, t1) {
      this.$this = t0;
      this.hadScheduledFrame = t1;
    },
    SchedulerBinding_scheduleWarmUpFrame_closure1: function SchedulerBinding_scheduleWarmUpFrame_closure1(t0) {
      this.$this = t0;
    },
    SchedulerBinding__handleDrawFrame_closure: function SchedulerBinding__handleDrawFrame_closure(t0) {
      this.$this = t0;
    },
    SchedulerBinding_handleBeginFrame_closure: function SchedulerBinding_handleBeginFrame_closure(t0) {
      this.$this = t0;
    },
    SemanticsBinding: function SemanticsBinding() {
    },
    ServicesBinding__parseLicenses: function(rawLicenses) {
      var t1, _i, license, t2, split,
        _licenseSeparator = "\n" + C.JSString_methods.$mul("-", 80) + "\n",
        result = H.setRuntimeTypeInfo([], type$.JSArray_LicenseEntry),
        licenses = rawLicenses.split(_licenseSeparator);
      for (t1 = licenses.length, _i = 0; _i < t1; ++_i) {
        license = licenses[_i];
        t2 = J.getInterceptor$asx(license);
        split = t2.indexOf$1(license, "\n\n");
        if (split >= 0) {
          t2.substring$2(license, 0, split).split("\n");
          result.push(new F.LicenseEntryWithLineBreaks(t2.substring$1(license, split + 2)));
        } else
          result.push(new F.LicenseEntryWithLineBreaks(license));
      }
      return result;
    },
    ServicesBinding__parseAppLifecycleMessage: function(message) {
      switch (message) {
        case "AppLifecycleState.paused":
          return C.AppLifecycleState_2;
        case "AppLifecycleState.resumed":
          return C.AppLifecycleState_0;
        case "AppLifecycleState.inactive":
          return C.AppLifecycleState_1;
        case "AppLifecycleState.detached":
          return C.AppLifecycleState_3;
      }
      return null;
    },
    ServicesBinding: function ServicesBinding() {
    },
    ServicesBinding__addLicenses_closure: function ServicesBinding__addLicenses_closure(t0) {
      this.rawLicenses = t0;
    },
    ServicesBinding__addLicenses_closure0: function ServicesBinding__addLicenses_closure0(t0, t1) {
      this.parsedLicenses = t0;
      this.rawLicenses = t1;
    },
    _DefaultBinaryMessenger: function _DefaultBinaryMessenger() {
    },
    _DefaultBinaryMessenger__sendPlatformMessage_closure: function _DefaultBinaryMessenger__sendPlatformMessage_closure(t0) {
      this.completer = t0;
    },
    _DefaultBinaryMessenger_setMessageHandler_closure: function _DefaultBinaryMessenger_setMessageHandler_closure(t0, t1) {
      this.$this = t0;
      this.channel = t1;
    },
    SelectionChangedCause: function SelectionChangedCause() {
    },
    RenderObjectToWidgetElement$: function(widget, $T) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.RenderObjectToWidgetElement(t1, widget, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2), $T._eval$1("RenderObjectToWidgetElement<0>"));
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure(t0, t1, t2) {
      this.$this = t0;
      this.hitTestResult = t1;
      this.event = t2;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure(t0) {
      this.$this = t0;
    },
    WidgetsBindingObserver: function WidgetsBindingObserver() {
    },
    WidgetsBinding: function WidgetsBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty(t0) {
      this.className = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    WidgetsBinding_scheduleAttachRootWidget_closure: function WidgetsBinding_scheduleAttachRootWidget_closure(t0, t1) {
      this.$this = t0;
      this.rootWidget = t1;
    },
    RenderObjectToWidgetAdapter: function RenderObjectToWidgetAdapter(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.container = t1;
      _.debugShortDescription = t2;
      _.key = t3;
      _.$ti = t4;
    },
    RenderObjectToWidgetAdapter_attachToRenderTree_closure: function RenderObjectToWidgetAdapter_attachToRenderTree_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.owner = t2;
    },
    RenderObjectToWidgetAdapter_attachToRenderTree_closure0: function RenderObjectToWidgetAdapter_attachToRenderTree_closure0(t0) {
      this._box_0 = t0;
    },
    RenderObjectToWidgetElement: function RenderObjectToWidgetElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = _._newWidget = _._child = null;
      _._cachedHash = t0;
      _.__Element__depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t4;
    },
    WidgetsFlutterBinding: function WidgetsFlutterBinding(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48) {
      var _ = this;
      _.WidgetsBinding__buildOwner = t0;
      _.WidgetsBinding__observers = t1;
      _.WidgetsBinding__needToReportFirstFrame = t2;
      _.WidgetsBinding__firstFrameCompleter = t3;
      _.WidgetsBinding_debugBuildingDirtyElements = t4;
      _.WidgetsBinding__renderViewElement = t5;
      _.WidgetsBinding__readyToProduceFrames = t6;
      _.RendererBinding__debugIsRenderViewInitialized = t7;
      _.RendererBinding__mouseTracker = t8;
      _.RendererBinding___RendererBinding__pipelineOwner = t9;
      _.RendererBinding__semanticsHandle = t10;
      _.RendererBinding__debugMouseTrackerUpdateScheduled = t11;
      _.RendererBinding__firstFrameDeferredCount = t12;
      _.RendererBinding__firstFrameSent = t13;
      _.SemanticsBinding___SemanticsBinding__accessibilityFeatures = t14;
      _.PaintingBinding__imageCache = t15;
      _.PaintingBinding__systemFonts = t16;
      _.ServicesBinding___ServicesBinding__defaultBinaryMessenger = t17;
      _.ServicesBinding___ServicesBinding__restorationManager = t18;
      _.SchedulerBinding__timingsCallbacks = t19;
      _.SchedulerBinding__lifecycleState = t20;
      _.SchedulerBinding_schedulingStrategy = t21;
      _.SchedulerBinding__taskQueue = t22;
      _.SchedulerBinding__hasRequestedAnEventLoopCallback = t23;
      _.SchedulerBinding__nextFrameCallbackId = t24;
      _.SchedulerBinding__transientCallbacks = t25;
      _.SchedulerBinding__removedIds = t26;
      _.SchedulerBinding__persistentCallbacks = t27;
      _.SchedulerBinding__postFrameCallbacks = t28;
      _.SchedulerBinding__nextFrameCompleter = t29;
      _.SchedulerBinding__hasScheduledFrame = t30;
      _.SchedulerBinding__schedulerPhase = t31;
      _.SchedulerBinding__framesEnabled = t32;
      _.SchedulerBinding__warmUpFrame = t33;
      _.SchedulerBinding__firstRawTimeStampInEpoch = t34;
      _.SchedulerBinding__epochStart = t35;
      _.SchedulerBinding__lastRawTimeStamp = t36;
      _.SchedulerBinding__currentFrameTimeStamp = t37;
      _.SchedulerBinding__debugFrameNumber = t38;
      _.SchedulerBinding__debugBanner = t39;
      _.SchedulerBinding__rescheduleAfterWarmUpFrame = t40;
      _.GestureBinding__pendingPointerEvents = t41;
      _.GestureBinding_pointerRouter = t42;
      _.GestureBinding_gestureArena = t43;
      _.GestureBinding_pointerSignalResolver = t44;
      _.GestureBinding__hitTests = t45;
      _.GestureBinding___GestureBinding__resampler = t46;
      _.GestureBinding_resamplingEnabled = t47;
      _.GestureBinding_samplingOffset = t48;
      _._lockCount = 0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding() {
    },
    _InactiveElements__deactivateRecursively: function(element) {
      element.deactivate$0();
      element.visitChildren$1(N.framework__InactiveElements__deactivateRecursively$closure());
    },
    Element__sort: function(a, b) {
      var t1;
      if (a.get$_depth() < b.get$_depth())
        return -1;
      if (b.get$_depth() < a.get$_depth())
        return 1;
      t1 = b._dirty;
      if (t1 && !a._dirty)
        return -1;
      if (a._dirty && !t1)
        return 1;
      return 0;
    },
    Element__activateRecursively: function(element) {
      element.activate$0();
      element.visitChildren$1(N.framework_Element__activateRecursively$closure());
    },
    _ElementDiagnosticableTreeNode$: function($name, stateful, style, value) {
      return new N._ElementDiagnosticableTreeNode(stateful, value, $name, true, true, null, style);
    },
    ErrorWidget__defaultErrorWidgetBuilder: function(details) {
      var exception = details.exception,
        t1 = exception instanceof U.FlutterError ? exception : null;
      return new N.ErrorWidget("", t1, new N.UniqueKey());
    },
    StatefulElement$: function(widget) {
      var t1 = widget.createState$0(),
        t2 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t2;
      t2 = new N.StatefulElement(t1, t2, widget, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
      t1._framework$_element = t2;
      t1._widget = widget;
      return t2;
    },
    InheritedElement$: function(widget) {
      var t1 = type$.Element_2,
        t2 = P.HashMap_HashMap(t1, type$.nullable_Object),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      return new N.InheritedElement(t2, t3, widget, C._ElementLifecycle_0, P.HashSet_HashSet(t1));
    },
    SingleChildRenderObjectElement$: function(widget) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.SingleChildRenderObjectElement(t1, widget, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
    },
    MultiChildRenderObjectElement$: function(widget) {
      var t1 = type$.Element_2,
        t2 = P.HashSet_HashSet(t1),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      return new N.MultiChildRenderObjectElement(t2, t3, widget, C._ElementLifecycle_0, P.HashSet_HashSet(t1));
    },
    _debugReportException: function(context, exception, stack, informationCollector) {
      var details = new U.FlutterErrorDetails(exception, stack, "widgets library", context, informationCollector, false);
      U.FlutterError_reportError(details);
      return details;
    },
    UniqueKey: function UniqueKey() {
    },
    GlobalKey: function GlobalKey() {
    },
    LabeledGlobalKey: function LabeledGlobalKey(t0, t1) {
      this._debugLabel = t0;
      this.$ti = t1;
    },
    GlobalObjectKey: function GlobalObjectKey(t0, t1) {
      this.value = t0;
      this.$ti = t1;
    },
    Widget: function Widget() {
    },
    StatelessWidget: function StatelessWidget() {
    },
    StatefulWidget: function StatefulWidget() {
    },
    _StateLifecycle: function _StateLifecycle(t0) {
      this._framework$_name = t0;
    },
    State: function State() {
    },
    ProxyWidget: function ProxyWidget() {
    },
    ParentDataWidget: function ParentDataWidget() {
    },
    InheritedWidget: function InheritedWidget() {
    },
    RenderObjectWidget: function RenderObjectWidget() {
    },
    LeafRenderObjectWidget: function LeafRenderObjectWidget() {
    },
    SingleChildRenderObjectWidget: function SingleChildRenderObjectWidget() {
    },
    MultiChildRenderObjectWidget: function MultiChildRenderObjectWidget() {
    },
    _ElementLifecycle: function _ElementLifecycle(t0) {
      this._framework$_name = t0;
    },
    _InactiveElements: function _InactiveElements(t0) {
      this._locked = false;
      this._framework$_elements = t0;
    },
    _InactiveElements__unmount_closure: function _InactiveElements__unmount_closure(t0, t1) {
      this.$this = t0;
      this.element = t1;
    },
    BuildOwner: function BuildOwner(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.onBuildScheduled = null;
      _._inactiveElements = t0;
      _._dirtyElements = t1;
      _._scheduledFlushDirtyElements = false;
      _._dirtyElementsNeedsResorting = null;
      _.focusManager = t2;
      _._debugStateLockLevel = 0;
      _._debugBuilding = false;
      _._debugElementsThatWillNeedToBeRebuiltDueToGlobalKeyShenanigans = _._debugCurrentBuildTarget = null;
      _._globalKeyRegistry = t3;
      _._debugIllFatedElements = t4;
      _._debugGlobalKeyReservations = t5;
    },
    BuildOwner_buildScope_closure: function BuildOwner_buildScope_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    BuildOwner_finalizeTree_closure: function BuildOwner_finalizeTree_closure(t0) {
      this.$this = t0;
    },
    Element: function Element() {
    },
    Element_renderObject_visit: function Element_renderObject_visit(t0) {
      this._box_0 = t0;
    },
    Element_updateSlotForChild_visit: function Element_updateSlotForChild_visit(t0) {
      this.newSlot = t0;
    },
    Element__updateDepth_closure: function Element__updateDepth_closure(t0) {
      this.expectedDepth = t0;
    },
    Element_detachRenderObject_closure: function Element_detachRenderObject_closure() {
    },
    Element_attachRenderObject_closure: function Element_attachRenderObject_closure(t0) {
      this.newSlot = t0;
    },
    Element_debugDescribeChildren_closure: function Element_debugDescribeChildren_closure(t0) {
      this.children = t0;
    },
    _ElementDiagnosticableTreeNode: function _ElementDiagnosticableTreeNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.stateful = t0;
      _.value = t1;
      _._cachedBuilder = null;
      _.name = t2;
      _.showSeparator = t3;
      _.showName = t4;
      _.linePrefix = t5;
      _.style = t6;
    },
    ErrorWidget: function ErrorWidget(t0, t1, t2) {
      this.message = t0;
      this._flutterError = t1;
      this.key = t2;
    },
    ComponentElement: function ComponentElement() {
    },
    ComponentElement_performRebuild_closure: function ComponentElement_performRebuild_closure(t0) {
      this.$this = t0;
    },
    ComponentElement_performRebuild_closure0: function ComponentElement_performRebuild_closure0(t0) {
      this.$this = t0;
    },
    StatelessElement: function StatelessElement(t0, t1, t2, t3) {
      var _ = this;
      _._framework$_parent = _._framework$_child = null;
      _._cachedHash = t0;
      _.__Element__depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    StatefulElement: function StatefulElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.state = t0;
      _._didChangeDependencies = false;
      _._framework$_parent = _._framework$_child = null;
      _._cachedHash = t1;
      _.__Element__depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._lifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    ProxyElement: function ProxyElement() {
    },
    ParentDataElement: function ParentDataElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._framework$_parent = _._framework$_child = null;
      _._cachedHash = t0;
      _.__Element__depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t4;
    },
    ParentDataElement__applyParentData_applyParentDataToChild: function ParentDataElement__applyParentData_applyParentDataToChild(t0) {
      this.widget = t0;
    },
    InheritedElement: function InheritedElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._dependents = t0;
      _._framework$_parent = _._framework$_child = null;
      _._cachedHash = t1;
      _.__Element__depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._lifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    RenderObjectElement: function RenderObjectElement() {
    },
    RenderObjectElement_updateChildren_replaceWithNullIfForgotten: function RenderObjectElement_updateChildren_replaceWithNullIfForgotten(t0) {
      this.forgottenChildren = t0;
    },
    RenderObjectElement_updateChildren_slotFor: function RenderObjectElement_updateChildren_slotFor(t0) {
      this.slots = t0;
    },
    RootRenderObjectElement: function RootRenderObjectElement() {
    },
    LeafRenderObjectElement: function LeafRenderObjectElement(t0, t1, t2, t3) {
      var _ = this;
      _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _._cachedHash = t0;
      _.__Element__depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    SingleChildRenderObjectElement: function SingleChildRenderObjectElement(t0, t1, t2, t3) {
      var _ = this;
      _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = _._framework$_child = null;
      _._cachedHash = t0;
      _.__Element__depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    MultiChildRenderObjectElement: function MultiChildRenderObjectElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__MultiChildRenderObjectElement__children = null;
      _._forgottenChildren = t0;
      _._framework$_parent = _._ancestorRenderObjectElement = _._renderObject = null;
      _._cachedHash = t1;
      _.__Element__depth = _._slot = null;
      _._widget = t2;
      _._owner = null;
      _._lifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    DebugCreator: function DebugCreator(t0) {
      this.element = t0;
    },
    IndexedSlot: function IndexedSlot(t0, t1, t2) {
      this.value = t0;
      this.index = t1;
      this.$ti = t2;
    },
    _NullElement: function _NullElement(t0, t1, t2, t3) {
      var _ = this;
      _._framework$_parent = null;
      _._cachedHash = t0;
      _.__Element__depth = _._slot = null;
      _._widget = t1;
      _._owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedWidgets = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugAllowIgnoredCallsToMarkNeedsBuild = _._debugBuiltOnce = _._inDirtyList = false;
    },
    _NullWidget: function _NullWidget(t0) {
      this.key = t0;
    },
    _State_Object_Diagnosticable: function _State_Object_Diagnosticable() {
    },
    _ElementLocationStatsTracker$: function() {
      var t1 = type$.JSArray__LocationCount;
      return new N._ElementLocationStatsTracker(H.setRuntimeTypeInfo([], type$.JSArray_nullable__LocationCount), H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1));
    },
    transformDebugCreator: function(properties) {
      return N.transformDebugCreator$body(properties);
    },
    transformDebugCreator$body: function($async$properties) {
      return P._makeSyncStarIterable(function() {
        var properties = $async$properties;
        var $async$goto = 0, $async$handler = 1, $async$currentError, errorSummary, foundStackTrace, pending, t1, t2;
        return function $async$transformDebugCreator($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                pending = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
                t1 = J.getInterceptor$ax(properties);
                t2 = t1.get$iterator(properties);
                while (true) {
                  if (!t2.moveNext$0()) {
                    errorSummary = null;
                    break;
                  }
                  errorSummary = t2.get$current(t2);
                  if (errorSummary instanceof U.ErrorSummary)
                    break;
                }
                t1 = t1.get$iterator(properties), foundStackTrace = false;
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                t2 = t1.get$current(t1);
                if (!foundStackTrace && t2 instanceof U.DiagnosticsStackTrace)
                  foundStackTrace = true;
                $async$goto = t2 instanceof K.DiagnosticsDebugCreator ? 4 : 6;
                break;
              case 4:
                // then
                t2 = N._parseDiagnosticsNode(t2, errorSummary);
                t2.toString;
                $async$goto = 7;
                return P._IterationMarker_yieldStar(t2);
              case 7:
                // after yield
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                $async$goto = foundStackTrace ? 8 : 10;
                break;
              case 8:
                // then
                pending.push(t2);
                // goto join
                $async$goto = 9;
                break;
              case 10:
                // else
                $async$goto = 11;
                return t2;
              case 11:
                // after yield
              case 9:
                // join
              case 5:
                // join
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                $async$goto = 12;
                return P._IterationMarker_yieldStar(pending);
              case 12:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    _parseDiagnosticsNode: function(node, errorSummary) {
      var t1;
      if (!(node instanceof K.DiagnosticsDebugCreator))
        return null;
      t1 = node.get$value(node);
      t1.toString;
      return N._describeRelevantUserCode(type$.DebugCreator._as(t1).element, errorSummary);
    },
    _describeRelevantUserCode: function(element, errorSummary) {
      var nodes, t1;
      if (!$.$get$WidgetInspectorService__instance().isWidgetCreationTracked$0())
        return H.setRuntimeTypeInfo([U.ErrorDescription$("Widget creation tracking is currently disabled. Enabling it enables improved error messages. It can be enabled by passing `--track-widget-creation` to `flutter run` or `flutter test`."), U.ErrorSpacer$()], type$.JSArray_DiagnosticsNode);
      nodes = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
      t1 = new N._describeRelevantUserCode_processElement(new N._describeRelevantUserCode_isOverflowError(errorSummary), nodes);
      if (t1.call$1(element))
        element.visitAncestorElements$1(t1);
      return nodes;
    },
    _WidgetInspectorService: function _WidgetInspectorService(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.WidgetInspectorService__serializeRing = t0;
      _.WidgetInspectorService__serializeRingIndex = t1;
      _.WidgetInspectorService_selection = t2;
      _.WidgetInspectorService_selectionChangedCallback = t3;
      _.WidgetInspectorService__groups = t4;
      _.WidgetInspectorService__idToReferenceData = t5;
      _.WidgetInspectorService__objectToId = t6;
      _.WidgetInspectorService__nextId = t7;
      _.WidgetInspectorService__pubRootDirectories = t8;
      _.WidgetInspectorService__trackRebuildDirtyWidgets = t9;
      _.WidgetInspectorService__trackRepaintWidgets = t10;
      _.WidgetInspectorService__structuredExceptionHandler = t11;
      _.WidgetInspectorService___WidgetInspectorService__registerServiceExtensionCallback = t12;
      _.WidgetInspectorService__errorsSinceReload = t13;
      _.WidgetInspectorService__widgetCreationTracked = t14;
      _.WidgetInspectorService___WidgetInspectorService__frameStart = t15;
      _.WidgetInspectorService__rebuildStats = t16;
      _.WidgetInspectorService__repaintStats = t17;
    },
    WidgetInspectorService: function WidgetInspectorService() {
    },
    _ElementLocationStatsTracker: function _ElementLocationStatsTracker(t0, t1, t2) {
      this._stats = t0;
      this.active = t1;
      this.newLocations = t2;
    },
    InspectorSelection: function InspectorSelection(t0) {
      var _ = this;
      _._candidates = t0;
      _._widget_inspector$_index = 0;
      _._widget_inspector$_currentElement = _._widget_inspector$_current = null;
    },
    _describeRelevantUserCode_isOverflowError: function _describeRelevantUserCode_isOverflowError(t0) {
      this.errorSummary = t0;
    },
    _describeRelevantUserCode_processElement: function _describeRelevantUserCode_processElement(t0, t1) {
      this.isOverflowError = t0;
      this.nodes = t1;
    },
    ChildLayoutHelper_dryLayoutChild: function(child, constraints) {
      return child.getDryLayout$1(constraints);
    },
    ChildLayoutHelper_layoutChild: function(child, constraints) {
      var t1;
      child.layout$2$parentUsesSize(0, constraints, true);
      t1 = child._size;
      t1.toString;
      return t1;
    }
  },
  B = {
    ValueNotifier$: function(_value) {
      return new B.ValueNotifier(_value, new P.LinkedList(type$.LinkedList__ListenerEntry));
    },
    Listenable: function Listenable() {
    },
    _ListenerEntry: function _ListenerEntry(t0) {
      var _ = this;
      _.listener = t0;
      _._collection$_previous = _._collection$_next = _._list = null;
    },
    ChangeNotifier: function ChangeNotifier() {
    },
    ChangeNotifier_notifyListeners_closure: function ChangeNotifier_notifyListeners_closure(t0) {
      this.$this = t0;
    },
    _MergingListenable: function _MergingListenable(t0) {
      this._change_notifier$_children = t0;
    },
    ValueNotifier: function ValueNotifier(t0, t1) {
      this._change_notifier$_value = t0;
      this.ChangeNotifier__listeners = t1;
    },
    AbstractNode: function AbstractNode() {
    },
    _Vector: function _Vector(t0, t1, t2) {
      this._lsq_solver$_offset = t0;
      this._lsq_solver$_length = t1;
      this._lsq_solver$_elements = t2;
    },
    _Matrix: function _Matrix(t0, t1) {
      this._columns = t0;
      this._lsq_solver$_elements = t1;
    },
    PolynomialFit: function PolynomialFit(t0) {
      this.coefficients = t0;
      this.__PolynomialFit_confidence = null;
    },
    LeastSquaresSolver: function LeastSquaresSolver(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.w = t2;
    },
    RawKeyEvent_RawKeyEvent$fromMessage: function(message) {
      var t3, t4, data, type,
        t1 = J.getInterceptor$asx(message),
        key = H._asStringQ(t1.$index(message, "key")),
        t2 = H._asStringQ(t1.$index(message, "code"));
      if (t2 == null)
        t2 = "";
      t3 = key == null ? "" : key;
      t4 = H._asIntQ(t1.$index(message, "metaState"));
      data = new A.RawKeyEventDataWeb(t2, t3, t4 == null ? 0 : t4);
      type = H._asString(t1.$index(message, "type"));
      switch (type) {
        case "keydown":
          return new B.RawKeyDownEvent(data);
        case "keyup":
          return new B.RawKeyUpEvent(data);
        default:
          throw H.wrapException(U.FlutterError_FlutterError("Unknown key event type: " + type));
      }
    },
    KeyboardSide: function KeyboardSide(t0) {
      this._raw_keyboard$_name = t0;
    },
    ModifierKey: function ModifierKey(t0) {
      this._raw_keyboard$_name = t0;
    },
    RawKeyEventData: function RawKeyEventData() {
    },
    RawKeyEvent: function RawKeyEvent() {
    },
    RawKeyDownEvent: function RawKeyDownEvent(t0) {
      this.data = t0;
    },
    RawKeyUpEvent: function RawKeyUpEvent(t0) {
      this.data = t0;
    },
    RawKeyboard: function RawKeyboard(t0, t1, t2) {
      var _ = this;
      _._raw_keyboard$_listeners = t0;
      _.keyEventHandler = null;
      _._keysPressed = t1;
      _._hiddenKeysPressed = t2;
    },
    _ModifierSidePair: function _ModifierSidePair(t0, t1) {
      this.modifier = t0;
      this.side = t1;
    },
    _RawKeyEvent_Object_Diagnosticable: function _RawKeyEvent_Object_Diagnosticable() {
    },
    RawKeyEventDataMacOs: function RawKeyEventDataMacOs() {
    }
  },
  O = {SynchronousFuture: function SynchronousFuture(t0, t1) {
      this._synchronous_future$_value = t0;
      this.$ti = t1;
    }, SynchronousFuture_whenComplete_closure: function SynchronousFuture_whenComplete_closure(t0) {
      this.$this = t0;
    }, DragDownDetails: function DragDownDetails(t0) {
      this.globalPosition = t0;
    }, DragStartDetails: function DragStartDetails(t0) {
      this.globalPosition = t0;
    }, DragUpdateDetails: function DragUpdateDetails(t0, t1, t2) {
      this.delta = t0;
      this.primaryDelta = t1;
      this.globalPosition = t2;
    }, DragEndDetails: function DragEndDetails(t0) {
      this.velocity = t0;
    },
    HitTestResult$: function() {
      var t1 = H.setRuntimeTypeInfo([], type$.JSArray_HitTestEntry),
        t2 = new E.Matrix4(new Float64Array(16));
      t2.setIdentity$0();
      return new O.HitTestResult(t1, H.setRuntimeTypeInfo([t2], type$.JSArray_Matrix4), H.setRuntimeTypeInfo([], type$.JSArray__TransformPart));
    },
    HitTestEntry: function HitTestEntry(t0) {
      this.target = t0;
      this._transform = null;
    },
    _TransformPart: function _TransformPart() {
    },
    _MatrixTransformPart: function _MatrixTransformPart(t0) {
      this.matrix = t0;
    },
    _OffsetTransformPart: function _OffsetTransformPart(t0) {
      this.offset = t0;
    },
    HitTestResult: function HitTestResult(t0, t1, t2) {
      this._path = t0;
      this._transforms = t1;
      this._localTransforms = t2;
    },
    DragGestureRecognizer__defaultBuilder: function($event) {
      return new R.VelocityTracker($event.get$kind($event), P.List_List$filled(20, null, false, type$.nullable__PointAtTime));
    },
    HorizontalDragGestureRecognizer$: function(debugOwner) {
      var t1 = type$.int;
      return new O.HorizontalDragGestureRecognizer(C.DragStartBehavior_1, C._DragState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), debugOwner, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    _DragState: function _DragState(t0) {
      this._monodrag$_name = t0;
    },
    DragGestureRecognizer: function DragGestureRecognizer() {
    },
    DragGestureRecognizer__checkDown_closure: function DragGestureRecognizer__checkDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkStart_closure: function DragGestureRecognizer__checkStart_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkUpdate_closure: function DragGestureRecognizer__checkUpdate_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    DragGestureRecognizer__checkEnd_closure: function DragGestureRecognizer__checkEnd_closure(t0, t1) {
      this.estimate = t0;
      this.velocity = t1;
    },
    DragGestureRecognizer__checkEnd_closure0: function DragGestureRecognizer__checkEnd_closure0(t0) {
      this.estimate = t0;
    },
    DragGestureRecognizer__checkEnd_closure1: function DragGestureRecognizer__checkEnd_closure1(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    HorizontalDragGestureRecognizer: function HorizontalDragGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _._monodrag$_state = t1;
      _.__DragGestureRecognizer__globalDistanceMoved = _._lastTransform = _._initialButtons = _._lastPendingEventTimestamp = _.__DragGestureRecognizer__pendingDragOffset = _.__DragGestureRecognizer__initialPosition = null;
      _._velocityTrackers = t2;
      _._acceptedActivePointers = t3;
      _._recognizer$_entries = t4;
      _._trackedPointers = t5;
      _.debugOwner = t6;
      _._kindFilter = t7;
      _._pointerToKind = t8;
    },
    PanGestureRecognizer: function PanGestureRecognizer(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.dragStartBehavior = t0;
      _.onCancel = _.onEnd = _.onUpdate = _.onStart = _.onDown = null;
      _._monodrag$_state = t1;
      _.__DragGestureRecognizer__globalDistanceMoved = _._lastTransform = _._initialButtons = _._lastPendingEventTimestamp = _.__DragGestureRecognizer__pendingDragOffset = _.__DragGestureRecognizer__initialPosition = null;
      _._velocityTrackers = t2;
      _._acceptedActivePointers = t3;
      _._recognizer$_entries = t4;
      _._trackedPointers = t5;
      _.debugOwner = t6;
      _._kindFilter = t7;
      _._pointerToKind = t8;
    },
    PointerRouter: function PointerRouter(t0, t1) {
      this._routeMap = t0;
      this._globalRoutes = t1;
    },
    PointerRouter_addRoute_closure: function PointerRouter_addRoute_closure() {
    },
    PointerRouter__dispatchEventToRoutes_closure: function PointerRouter__dispatchEventToRoutes_closure(t0, t1, t2) {
      this.$this = t0;
      this.referenceRoutes = t1;
      this.event = t2;
    },
    FocusNode$: function(canRequestFocus, debugLabel, descendantsAreFocusable, onKey, skipTraversal) {
      return new O.FocusNode(skipTraversal, canRequestFocus, true, onKey, H.setRuntimeTypeInfo([], type$.JSArray_FocusNode), new P.LinkedList(type$.LinkedList__ListenerEntry));
    },
    FocusScopeNode$: function(canRequestFocus, debugLabel, skipTraversal) {
      var t1 = type$.JSArray_FocusNode;
      return new O.FocusScopeNode(H.setRuntimeTypeInfo([], t1), skipTraversal, canRequestFocus, true, null, H.setRuntimeTypeInfo([], t1), new P.LinkedList(type$.LinkedList__ListenerEntry));
    },
    FocusManager__defaultModeForPlatform: function() {
      switch (U.defaultTargetPlatform()) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_2:
          var t1 = $.WidgetsBinding__instance.RendererBinding__mouseTracker._mouseStates;
          if (t1.get$isNotEmpty(t1))
            return C.FocusHighlightMode_1;
          return C.FocusHighlightMode_0;
        case C.TargetPlatform_3:
        case C.TargetPlatform_4:
        case C.TargetPlatform_5:
          return C.FocusHighlightMode_1;
      }
    },
    KeyEventResult: function KeyEventResult(t0) {
      this._focus_manager$_name = t0;
    },
    FocusAttachment: function FocusAttachment(t0) {
      this._node = t0;
    },
    UnfocusDisposition: function UnfocusDisposition(t0) {
      this._focus_manager$_name = t0;
    },
    FocusNode: function FocusNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._skipTraversal = t0;
      _._focus_manager$_canRequestFocus = t1;
      _._focus_manager$_descendantsAreFocusable = t2;
      _._context = null;
      _.onKey = t3;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._focus_manager$_manager = null;
      _._children = t4;
      _._attachment = _._focus_manager$_debugLabel = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__listeners = t5;
    },
    FocusNode_traversalDescendants_closure: function FocusNode_traversalDescendants_closure() {
    },
    FocusNode_debugDescribeChildren_closure: function FocusNode_debugDescribeChildren_closure(t0) {
      this._box_0 = t0;
    },
    FocusScopeNode: function FocusScopeNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._focusedChildren = t0;
      _._skipTraversal = t1;
      _._focus_manager$_canRequestFocus = t2;
      _._focus_manager$_descendantsAreFocusable = t3;
      _._context = null;
      _.onKey = t4;
      _._focus_manager$_parent = _._descendants = _._ancestors = _._focus_manager$_manager = null;
      _._children = t5;
      _._attachment = _._focus_manager$_debugLabel = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__listeners = t6;
    },
    FocusHighlightMode: function FocusHighlightMode(t0) {
      this._focus_manager$_name = t0;
    },
    FocusHighlightStrategy: function FocusHighlightStrategy(t0) {
      this._focus_manager$_name = t0;
    },
    FocusManager: function FocusManager(t0, t1, t2, t3) {
      var _ = this;
      _._lastInteractionWasTouch = _._highlightMode = null;
      _._focus_manager$_listeners = t0;
      _.rootScope = t1;
      _._primaryFocus = null;
      _._dirtyNodes = t2;
      _._markedForFocus = null;
      _._haveScheduledUpdate = false;
      _.ChangeNotifier__listeners = t3;
    },
    _FocusManager_Object_DiagnosticableTreeMixin: function _FocusManager_Object_DiagnosticableTreeMixin() {
    },
    _FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier: function _FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier() {
    },
    _FocusNode_Object_DiagnosticableTreeMixin: function _FocusNode_Object_DiagnosticableTreeMixin() {
    },
    _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier: function _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier() {
    }
  },
  V = {AppBarTheme: function AppBarTheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.brightness = t0;
      _.backgroundColor = t1;
      _.foregroundColor = t2;
      _.elevation = t3;
      _.shadowColor = t4;
      _.iconTheme = t5;
      _.actionsIconTheme = t6;
      _.textTheme = t7;
      _.centerTitle = t8;
      _.titleSpacing = t9;
      _.toolbarTextStyle = t10;
      _.titleTextStyle = t11;
      _.systemOverlayStyle = t12;
      _.backwardsCompatibility = t13;
    }, _AppBarTheme_Object_Diagnosticable: function _AppBarTheme_Object_Diagnosticable() {
    },
    MaterialStateProperty_resolveAs: function(value, states, $T) {
      if ($T._eval$1("MaterialStateProperty<0>")._is(value))
        return value.resolve$1(states);
      return value;
    },
    MaterialState: function MaterialState(t0) {
      this._material_state$_name = t0;
    },
    MaterialStateMouseCursor: function MaterialStateMouseCursor() {
    },
    _EnabledAndDisabledMouseCursor: function _EnabledAndDisabledMouseCursor() {
    },
    MaterialPageRoute: function MaterialPageRoute(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.builder = t0;
      _.fullscreenDialog = t1;
      _._routes$_offstage = false;
      _._secondaryAnimationProxy = _._animationProxy = null;
      _._willPopCallbacks = t2;
      _._scopeKey = t3;
      _._subtreeKey = t4;
      _._storageBucket = t5;
      _.__ModalRoute__modalScope = _._modalScopeCache = _.__ModalRoute__modalBarrier = null;
      _.LocalHistoryRoute__localHistory = t6;
      _._transitionCompleter = t7;
      _._routes$_controller = _._routes$_animation = null;
      _._secondaryAnimation = t8;
      _._trainHoppingListenerRemover = _._result = null;
      _._overlayEntries = t9;
      _._navigator$_navigator = null;
      _._settings = t10;
      _._restorationScopeId = t11;
      _._popCompleter = t12;
      _.$ti = t13;
    },
    MaterialRouteTransitionMixin: function MaterialRouteTransitionMixin() {
    },
    _MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin: function _MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin() {
    },
    EdgeInsetsGeometry_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6,
        t1 = a == null;
      if (t1 && b == null)
        return null;
      if (t1)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      if (a instanceof V.EdgeInsets && b instanceof V.EdgeInsets)
        return V.EdgeInsets_lerp(a, b, t);
      if (a instanceof V.EdgeInsetsDirectional && b instanceof V.EdgeInsetsDirectional)
        return V.EdgeInsetsDirectional_lerp(a, b, t);
      t1 = P.lerpDouble(a.get$_left(a), b.get$_left(b), t);
      t1.toString;
      t2 = P.lerpDouble(a.get$_right(a), b.get$_right(b), t);
      t2.toString;
      t3 = P.lerpDouble(a.get$_edge_insets$_start(a), b.get$_edge_insets$_start(b), t);
      t3.toString;
      t4 = P.lerpDouble(a.get$_edge_insets$_end(), b.get$_edge_insets$_end(), t);
      t4.toString;
      t5 = P.lerpDouble(a.get$_top(a), b.get$_top(b), t);
      t5.toString;
      t6 = P.lerpDouble(a.get$_bottom(a), b.get$_bottom(b), t);
      t6.toString;
      return new V._MixedEdgeInsets(t1, t2, t3, t4, t5, t6);
    },
    EdgeInsets$fromWindowPadding: function(padding, devicePixelRatio) {
      return new V.EdgeInsets(padding.left / devicePixelRatio, padding.top / devicePixelRatio, padding.right / devicePixelRatio, padding.bottom / devicePixelRatio);
    },
    EdgeInsets_lerp: function(a, b, t) {
      var t2, t3, t4,
        t1 = P.lerpDouble(a.left, b.left, t);
      t1.toString;
      t2 = P.lerpDouble(a.top, b.top, t);
      t2.toString;
      t3 = P.lerpDouble(a.right, b.right, t);
      t3.toString;
      t4 = P.lerpDouble(a.bottom, b.bottom, t);
      t4.toString;
      return new V.EdgeInsets(t1, t2, t3, t4);
    },
    EdgeInsetsDirectional_lerp: function(a, b, t) {
      var t2, t3, t4,
        t1 = P.lerpDouble(a.start, b.start, t);
      t1.toString;
      t2 = P.lerpDouble(a.top, b.top, t);
      t2.toString;
      t3 = P.lerpDouble(a.end, b.end, t);
      t3.toString;
      t4 = P.lerpDouble(a.bottom, b.bottom, t);
      t4.toString;
      return new V.EdgeInsetsDirectional(t1, t2, t3, t4);
    },
    EdgeInsetsGeometry: function EdgeInsetsGeometry() {
    },
    EdgeInsets: function EdgeInsets(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    EdgeInsetsDirectional: function EdgeInsetsDirectional(t0, t1, t2, t3) {
      var _ = this;
      _.start = t0;
      _.top = t1;
      _.end = t2;
      _.bottom = t3;
    },
    _MixedEdgeInsets: function _MixedEdgeInsets(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._left = t0;
      _._right = t1;
      _._edge_insets$_start = t2;
      _._edge_insets$_end = t3;
      _._top = t4;
      _._bottom = t5;
    },
    RenderCustomPaint__updateSemanticsChildren: function(oldSemantics, newChildSemantics) {
      var t1, oldChildrenBottom, newChildren, haveOldChildren, newSemantics, newChild, _oldKeyedChildren_get, oldChildrenTop, newChildrenTop, key, oldChild, _box_0 = {};
      _box_0.newChildSemantics = newChildSemantics;
      if (oldSemantics == null)
        oldSemantics = C.List_empty7;
      t1 = J.getInterceptor$asx(oldSemantics);
      oldChildrenBottom = t1.get$length(oldSemantics) - 1;
      newChildren = P.List_List$filled(0, null, false, type$.nullable_SemanticsNode);
      haveOldChildren = 0 <= oldChildrenBottom;
      while (true) {
        if (!false)
          break;
        t1.$index(oldSemantics, 0);
        newSemantics = _box_0.newChildSemantics[0];
        newSemantics.get$key(newSemantics);
        break;
      }
      while (true) {
        if (!false)
          break;
        t1.$index(oldSemantics, oldChildrenBottom);
        newChild = _box_0.newChildSemantics[-1];
        newChild.get$key(newChild);
        break;
      }
      _box_0._oldKeyedChildren = null;
      _oldKeyedChildren_get = new V.RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_get(_box_0);
      if (haveOldChildren) {
        new V.RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_set(_box_0).call$1(P.LinkedHashMap_LinkedHashMap$_empty(type$.Key, type$.SemanticsNode));
        for (oldChildrenTop = 0; oldChildrenTop <= oldChildrenBottom;) {
          t1.$index(oldSemantics, oldChildrenTop);
          ++oldChildrenTop;
        }
        haveOldChildren = true;
      } else
        oldChildrenTop = 0;
      for (newChildrenTop = 0; false;) {
        newSemantics = _box_0.newChildSemantics[newChildrenTop];
        if (haveOldChildren) {
          key = newSemantics.get$key(newSemantics);
          oldChild = J.$index$asx(_oldKeyedChildren_get.call$0(), key);
          if (oldChild != null) {
            newSemantics.get$key(newSemantics);
            oldChild = null;
          }
        } else
          oldChild = null;
        newChildren[newChildrenTop] = V.RenderCustomPaint__updateSemanticsChild(oldChild, newSemantics);
        ++newChildrenTop;
      }
      t1.get$length(oldSemantics);
      while (true) {
        if (!false)
          break;
        newChildren[newChildrenTop] = V.RenderCustomPaint__updateSemanticsChild(t1.$index(oldSemantics, oldChildrenTop), _box_0.newChildSemantics[newChildrenTop]);
        ++newChildrenTop;
        ++oldChildrenTop;
      }
      return new H.CastList(newChildren, H._arrayInstanceType(newChildren)._eval$1("CastList<1,SemanticsNode>"));
    },
    RenderCustomPaint__updateSemanticsChild: function(oldChild, newSemantics) {
      var t1,
        newChild = oldChild == null ? A.SemanticsNode$(newSemantics.get$key(newSemantics), null) : oldChild,
        properties = newSemantics.get$properties(),
        config = A.SemanticsConfiguration$();
      properties.get$sortKey();
      config._semantics$_sortKey = properties.get$sortKey();
      config._hasBeenAnnotated = true;
      properties.get$checked(properties);
      t1 = properties.get$checked(properties);
      config._setFlag$2(C.SemanticsFlag_1, true);
      config._setFlag$2(C.SemanticsFlag_2, t1);
      properties.get$selected(properties);
      config._setFlag$2(C.SemanticsFlag_4, properties.get$selected(properties));
      properties.get$button(properties);
      config._setFlag$2(C.SemanticsFlag_8, properties.get$button(properties));
      properties.get$link();
      config._setFlag$2(C.SemanticsFlag_4194304, properties.get$link());
      properties.get$textField();
      config._setFlag$2(C.SemanticsFlag_16, properties.get$textField());
      properties.get$slider();
      config._setFlag$2(C.SemanticsFlag_8388608, properties.get$slider());
      properties.get$keyboardKey();
      config._setFlag$2(C.SemanticsFlag_16777216, properties.get$keyboardKey());
      properties.get$readOnly(properties);
      config._setFlag$2(C.SemanticsFlag_1048576, properties.get$readOnly(properties));
      properties.get$focusable();
      config._setFlag$2(C.SemanticsFlag_2097152, properties.get$focusable());
      properties.get$focused(properties);
      config._setFlag$2(C.SemanticsFlag_32, properties.get$focused(properties));
      properties.get$enabled(properties);
      t1 = properties.get$enabled(properties);
      config._setFlag$2(C.SemanticsFlag_64, true);
      config._setFlag$2(C.SemanticsFlag_128, t1);
      properties.get$inMutuallyExclusiveGroup();
      config._setFlag$2(C.SemanticsFlag_256, properties.get$inMutuallyExclusiveGroup());
      properties.get$obscured();
      config._setFlag$2(C.SemanticsFlag_1024, properties.get$obscured());
      properties.get$multiline(properties);
      config._setFlag$2(C.SemanticsFlag_524288, properties.get$multiline(properties));
      properties.get$hidden(properties);
      config._setFlag$2(C.SemanticsFlag_8192, properties.get$hidden(properties));
      properties.get$header();
      config._setFlag$2(C.SemanticsFlag_512, properties.get$header());
      properties.get$scopesRoute();
      config._setFlag$2(C.SemanticsFlag_2048, properties.get$scopesRoute());
      properties.get$namesRoute();
      config._setFlag$2(C.SemanticsFlag_4096, properties.get$namesRoute());
      properties.get$liveRegion();
      config._setFlag$2(C.SemanticsFlag_32768, properties.get$liveRegion());
      properties.get$maxValueLength();
      config.set$maxValueLength(properties.get$maxValueLength());
      properties.get$currentValueLength();
      config.set$currentValueLength(properties.get$currentValueLength());
      properties.get$toggled();
      t1 = properties.get$toggled();
      config._setFlag$2(C.SemanticsFlag_65536, true);
      config._setFlag$2(C.SemanticsFlag_131072, t1);
      properties.get$image(properties);
      config._setFlag$2(C.SemanticsFlag_16384, properties.get$image(properties));
      properties.get$label(properties);
      config._label = properties.get$label(properties);
      config._hasBeenAnnotated = true;
      properties.get$value(properties);
      config._semantics$_value = properties.get$value(properties);
      config._hasBeenAnnotated = true;
      properties.get$increasedValue();
      config._increasedValue = properties.get$increasedValue();
      config._hasBeenAnnotated = true;
      properties.get$decreasedValue();
      config._decreasedValue = properties.get$decreasedValue();
      config._hasBeenAnnotated = true;
      properties.get$hint(properties);
      config._hint = properties.get$hint(properties);
      config._hasBeenAnnotated = true;
      properties.get$textDirection(properties);
      config._semantics$_textDirection = properties.get$textDirection(properties);
      config._hasBeenAnnotated = true;
      properties.get$onTap();
      config.set$onTap(properties.get$onTap());
      properties.get$onLongPress();
      config.set$onLongPress(properties.get$onLongPress());
      properties.get$onScrollLeft();
      config.set$onScrollLeft(properties.get$onScrollLeft());
      properties.get$onScrollRight();
      config.set$onScrollRight(properties.get$onScrollRight());
      properties.get$onScrollUp();
      config.set$onScrollUp(properties.get$onScrollUp());
      properties.get$onScrollDown();
      config.set$onScrollDown(properties.get$onScrollDown());
      properties.get$onIncrease();
      config.set$onIncrease(properties.get$onIncrease());
      properties.get$onDecrease();
      config.set$onDecrease(properties.get$onDecrease());
      properties.get$onCopy(properties);
      config.set$onCopy(0, properties.get$onCopy(properties));
      properties.get$onCut(properties);
      config.set$onCut(0, properties.get$onCut(properties));
      properties.get$onPaste(properties);
      config.set$onPaste(0, properties.get$onPaste(properties));
      properties.get$onMoveCursorForwardByCharacter();
      config.set$onMoveCursorForwardByCharacter(properties.get$onMoveCursorForwardByCharacter());
      properties.get$onMoveCursorBackwardByCharacter();
      config.set$onMoveCursorBackwardByCharacter(properties.get$onMoveCursorBackwardByCharacter());
      properties.get$onMoveCursorForwardByWord();
      config.set$onMoveCursorForwardByWord(properties.get$onMoveCursorForwardByWord());
      properties.get$onMoveCursorBackwardByWord();
      config.set$onMoveCursorBackwardByWord(properties.get$onMoveCursorBackwardByWord());
      properties.get$onSetSelection();
      config.set$onSetSelection(properties.get$onSetSelection());
      properties.get$onSetText();
      config.set$onSetText(properties.get$onSetText());
      properties.get$onDidGainAccessibilityFocus();
      config.set$onDidGainAccessibilityFocus(properties.get$onDidGainAccessibilityFocus());
      properties.get$onDidLoseAccessibilityFocus();
      config.set$onDidLoseAccessibilityFocus(properties.get$onDidLoseAccessibilityFocus());
      properties.get$onDismiss();
      config.set$onDismiss(properties.get$onDismiss());
      newChild.updateWith$2$childrenInInversePaintOrder$config(0, C.List_empty7, config);
      newChild.set$rect(0, newSemantics.get$rect(newSemantics));
      newChild.set$transform(0, newSemantics.get$transform(newSemantics));
      newChild.tags = newSemantics.get$tags();
      return newChild;
    },
    CustomPainter: function CustomPainter() {
    },
    RenderCustomPaint: function RenderCustomPaint(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._custom_paint$_painter = t0;
      _._foregroundPainter = t1;
      _._preferredSize = t2;
      _.isComplex = t3;
      _.willChange = t4;
      _._foregroundSemanticsNodes = _._backgroundSemanticsNodes = _._foregroundSemanticsBuilder = _._backgroundSemanticsBuilder = null;
      _.RenderObjectWithChildMixin__child = t5;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_set: function RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_set(t0) {
      this._box_0 = t0;
    },
    RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_get: function RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_get(t0) {
      this._box_0 = t0;
    },
    RenderErrorBox: function RenderErrorBox(t0) {
      var _ = this;
      _.message = t0;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = _._paragraph = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    Priority: function Priority(t0) {
      this._priority$_value = t0;
    },
    SystemSound_play: function(type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemSound_play = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(C.OptionalMethodChannel_cWd.invokeMethod$1$2("SystemSound.play", type._system_sound$_name, type$.void), $async$SystemSound_play);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$SystemSound_play, $async$completer);
    },
    SystemSoundType: function SystemSoundType(t0) {
      this._system_sound$_name = t0;
    },
    PageRoute: function PageRoute() {
    }
  },
  Q = {MaterialBannerThemeData: function MaterialBannerThemeData(t0, t1, t2, t3) {
      var _ = this;
      _.backgroundColor = t0;
      _.contentTextStyle = t1;
      _.padding = t2;
      _.leadingPadding = t3;
    }, _MaterialBannerThemeData_Object_Diagnosticable: function _MaterialBannerThemeData_Object_Diagnosticable() {
    }, SliderThemeData: function SliderThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.trackHeight = t0;
      _.activeTrackColor = t1;
      _.inactiveTrackColor = t2;
      _.disabledActiveTrackColor = t3;
      _.disabledInactiveTrackColor = t4;
      _.activeTickMarkColor = t5;
      _.inactiveTickMarkColor = t6;
      _.disabledActiveTickMarkColor = t7;
      _.disabledInactiveTickMarkColor = t8;
      _.thumbColor = t9;
      _.overlappingShapeStrokeColor = t10;
      _.disabledThumbColor = t11;
      _.overlayColor = t12;
      _.valueIndicatorColor = t13;
      _.overlayShape = t14;
      _.tickMarkShape = t15;
      _.thumbShape = t16;
      _.trackShape = t17;
      _.valueIndicatorShape = t18;
      _.rangeTickMarkShape = t19;
      _.rangeThumbShape = t20;
      _.rangeTrackShape = t21;
      _.rangeValueIndicatorShape = t22;
      _.showValueIndicator = t23;
      _.valueIndicatorTextStyle = t24;
      _.minThumbSeparation = t25;
      _.thumbSelector = t26;
    }, _SliderThemeData_Object_Diagnosticable: function _SliderThemeData_Object_Diagnosticable() {
    },
    TextSpan$: function(children, style, text) {
      return new Q.TextSpan(text, children, C.C__DeferringMouseCursor, style);
    },
    TextSpan: function TextSpan(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.children = t1;
      _.mouseCursor = t2;
      _.style = t3;
    },
    TextSpan_debugDescribeChildren_closure: function TextSpan_debugDescribeChildren_closure() {
    },
    TextOverflow: function TextOverflow(t0) {
      this._paragraph$_name = t0;
    },
    TextParentData: function TextParentData(t0, t1, t2) {
      var _ = this;
      _.scale = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    RenderParagraph: function RenderParagraph(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._textPainter = t0;
      _.__RenderParagraph__placeholderSpans = null;
      _._softWrap = t1;
      _._overflow = t2;
      _._needsClipping = false;
      _._cachedChildNodes = _._semanticsInfo = _._placeholderDimensions = _._overflowShader = null;
      _.ContainerRenderObjectMixin__childCount = t3;
      _.ContainerRenderObjectMixin__firstChild = t4;
      _.ContainerRenderObjectMixin__lastChild = t5;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    RenderParagraph__extractPlaceholderSpans_closure: function RenderParagraph__extractPlaceholderSpans_closure(t0) {
      this.$this = t0;
    },
    RenderParagraph_hitTestChildren__hitText_set: function RenderParagraph_hitTestChildren__hitText_set(t0) {
      this._box_0 = t0;
    },
    RenderParagraph_hitTestChildren__hitText_get: function RenderParagraph_hitTestChildren__hitText_get(t0) {
      this._box_0 = t0;
    },
    RenderParagraph_hitTestChildren_closure: function RenderParagraph_hitTestChildren_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.position = t1;
      this.textParentData = t2;
    },
    RenderParagraph_paint_closure: function RenderParagraph_paint_closure(t0) {
      this._box_0 = t0;
    },
    RenderParagraph_describeSemanticsConfiguration_closure: function RenderParagraph_describeSemanticsConfiguration_closure() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin: function _RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin() {
    },
    AssetBundle__utf8decode: function(data) {
      return C.C_Utf8Codec.decode$1(0, H.NativeUint8List_NativeUint8List$view(data.buffer, 0, null));
    },
    AssetBundle: function AssetBundle() {
    },
    CachingAssetBundle: function CachingAssetBundle() {
    },
    PlatformAssetBundle: function PlatformAssetBundle(t0, t1) {
      this._stringCache = t0;
      this._structuredDataCache = t1;
    },
    BinaryMessenger: function BinaryMessenger() {
    },
    RawKeyEventDataFuchsia: function RawKeyEventDataFuchsia() {
    }
  },
  M = {BottomNavigationBarThemeData: function BottomNavigationBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.backgroundColor = t0;
      _.elevation = t1;
      _.selectedIconTheme = t2;
      _.unselectedIconTheme = t3;
      _.selectedItemColor = t4;
      _.unselectedItemColor = t5;
      _.selectedLabelStyle = t6;
      _.unselectedLabelStyle = t7;
      _.showSelectedLabels = t8;
      _.showUnselectedLabels = t9;
      _.type = t10;
      _.enableFeedback = t11;
    }, _BottomNavigationBarThemeData_Object_Diagnosticable: function _BottomNavigationBarThemeData_Object_Diagnosticable() {
    },
    ButtonBarThemeData_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9,
        t1 = t < 0.5;
      if (t1)
        t2 = a.alignment;
      else
        t2 = b.alignment;
      if (t1)
        t3 = a.mainAxisSize;
      else
        t3 = b.mainAxisSize;
      if (t1)
        t4 = a.buttonTextTheme;
      else
        t4 = b.buttonTextTheme;
      t5 = P.lerpDouble(a.buttonMinWidth, b.buttonMinWidth, t);
      t6 = P.lerpDouble(a.buttonHeight, b.buttonHeight, t);
      t7 = V.EdgeInsetsGeometry_lerp(a.buttonPadding, b.buttonPadding, t);
      if (t1)
        t8 = a.buttonAlignedDropdown;
      else
        t8 = b.buttonAlignedDropdown;
      if (t1)
        t9 = a.layoutBehavior;
      else
        t9 = b.layoutBehavior;
      if (t1)
        t1 = a.overflowDirection;
      else
        t1 = b.overflowDirection;
      return new M.ButtonBarThemeData(t2, t3, t4, t5, t6, t7, t8, t9, t1);
    },
    ButtonBarThemeData: function ButtonBarThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.alignment = t0;
      _.mainAxisSize = t1;
      _.buttonTextTheme = t2;
      _.buttonMinWidth = t3;
      _.buttonHeight = t4;
      _.buttonPadding = t5;
      _.buttonAlignedDropdown = t6;
      _.layoutBehavior = t7;
      _.overflowDirection = t8;
    },
    _ButtonBarThemeData_Object_Diagnosticable: function _ButtonBarThemeData_Object_Diagnosticable() {
    },
    ButtonTextTheme: function ButtonTextTheme(t0) {
      this._button_theme$_name = t0;
    },
    ButtonThemeData: function ButtonThemeData(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._buttonColor = t0;
      _._disabledColor = t1;
      _._focusColor = t2;
      _._hoverColor = t3;
      _._highlightColor = t4;
      _._splashColor = t5;
      _.colorScheme = t6;
      _._materialTapTargetSize = t7;
    },
    _ButtonThemeData_Object_Diagnosticable: function _ButtonThemeData_Object_Diagnosticable() {
    },
    _MaterialState__transparentInterior: function(clipBehavior, contents, context, shape) {
      var child = new M._ShapeBorderPaint(contents, shape, true, null);
      if (clipBehavior === C.Clip_0)
        return child;
      return T.ClipPath$(child, clipBehavior, new E.ShapeBorderClipper(shape, T.Directionality_maybeOf(context)));
    },
    MaterialType: function MaterialType(t0) {
      this._material$_name = t0;
    },
    Material: function Material(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.child = t0;
      _.type = t1;
      _.elevation = t2;
      _.color = t3;
      _.textStyle = t4;
      _.shape = t5;
      _.clipBehavior = t6;
      _.animationDuration = t7;
      _.key = t8;
    },
    _MaterialState: function _MaterialState(t0, t1, t2) {
      var _ = this;
      _._inkFeatureRenderer = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _MaterialState_build_closure: function _MaterialState_build_closure(t0) {
      this.$this = t0;
    },
    _RenderInkFeatures: function _RenderInkFeatures(t0, t1, t2) {
      var _ = this;
      _.vsync = t0;
      _.absorbHitTest = t1;
      _._inkFeatures = null;
      _.RenderObjectWithChildMixin__child = t2;
      _._cachedDryLayoutSizes = _._cachedIntrinsicDimensions = null;
      _._computingThisDryLayout = false;
      _._cachedBaselines = _._size = null;
      _._debugActivePointers = 0;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _InkFeatures: function _InkFeatures(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.vsync = t1;
      _.absorbHitTest = t2;
      _.child = t3;
      _.key = t4;
    },
    InkFeature: function InkFeature() {
    },
    ShapeBorderTween: function ShapeBorderTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    _MaterialInterior: function _MaterialInterior(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.borderOnForeground = t2;
      _.clipBehavior = t3;
      _.elevation = t4;
      _.color = t5;
      _.shadowColor = t6;
      _.curve = t7;
      _.duration = t8;
      _.onEnd = t9;
      _.key = t10;
    },
    _MaterialInteriorState: function _MaterialInteriorState(t0, t1) {
      var _ = this;
      _.__ImplicitlyAnimatedWidgetState__animation = _.__ImplicitlyAnimatedWidgetState__controller = _._border = _._shadowColor = _._elevation = null;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _MaterialInteriorState_forEachTween_closure: function _MaterialInteriorState_forEachTween_closure() {
    },
    _MaterialInteriorState_forEachTween_closure0: function _MaterialInteriorState_forEachTween_closure0() {
    },
    _MaterialInteriorState_forEachTween_closure1: function _MaterialInteriorState_forEachTween_closure1() {
    },
    _ShapeBorderPaint: function _ShapeBorderPaint(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.shape = t1;
      _.borderOnForeground = t2;
      _.key = t3;
    },
    _ShapeBorderPainter: function _ShapeBorderPainter(t0, t1, t2) {
      this.border = t0;
      this.textDirection = t1;
      this._repaint = t2;
    },
    __MaterialState_State_TickerProviderStateMixin: function __MaterialState_State_TickerProviderStateMixin() {
    },
    ScaffoldMessenger: function ScaffoldMessenger(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    ScaffoldMessengerState: function ScaffoldMessengerState(t0, t1, t2, t3) {
      var _ = this;
      _._scaffolds = t0;
      _._snackBars = t1;
      _._accessibleNavigation = _._snackBarTimer = null;
      _.TickerProviderStateMixin__tickers = t2;
      _._widget = null;
      _._debugLifecycleState = t3;
      _._framework$_element = null;
    },
    ScaffoldMessengerState_hideCurrentSnackBar_closure: function ScaffoldMessengerState_hideCurrentSnackBar_closure(t0, t1, t2) {
      this.$this = t0;
      this.completer = t1;
      this.reason = t2;
    },
    _ScaffoldMessengerScope: function _ScaffoldMessengerScope(t0, t1, t2) {
      this._scaffoldMessengerState = t0;
      this.child = t1;
      this.key = t2;
    },
    _ScaffoldMessengerState_State_TickerProviderStateMixin: function _ScaffoldMessengerState_State_TickerProviderStateMixin() {
    },
    ImageConfiguration: function ImageConfiguration(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.bundle = t0;
      _.devicePixelRatio = t1;
      _.locale = t2;
      _.textDirection = t3;
      _.size = t4;
      _.platform = t5;
    },
    TickerFuture$complete: function() {
      var t1 = new M.TickerFuture(new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      t1._ticker$_complete$0();
      return t1;
    },
    Ticker: function Ticker(t0, t1) {
      var _ = this;
      _._ticker$_future = null;
      _._muted = false;
      _._startTime = null;
      _._onTick = t0;
      _._animationId = null;
      _.debugLabel = t1;
      _.__Ticker__debugCreationStack = null;
    },
    TickerFuture: function TickerFuture(t0) {
      this._primaryCompleter = t0;
      this._completed = this._secondaryCompleter = null;
    },
    TickerFuture_whenCompleteOrCancel_thunk: function TickerFuture_whenCompleteOrCancel_thunk(t0) {
      this.callback = t0;
    },
    TickerCanceled: function TickerCanceled(t0) {
      this.ticker = t0;
    },
    DecoratedBox$: function(child, decoration, position) {
      return new M.DecoratedBox(decoration, position, child, null);
    },
    Container$: function(child, decoration, margin, padding) {
      return new M.Container(child, padding, decoration, null, margin, null);
    },
    DecoratedBox: function DecoratedBox(t0, t1, t2, t3) {
      var _ = this;
      _.decoration = t0;
      _.position = t1;
      _.child = t2;
      _.key = t3;
    },
    Container: function Container(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.child = t0;
      _.padding = t1;
      _.decoration = t2;
      _.constraints = t3;
      _.margin = t4;
      _.key = t5;
    },
    InheritedTheme: function InheritedTheme() {
    },
    DoNothingAndStopPropagationTextIntent: function DoNothingAndStopPropagationTextIntent() {
    },
    Feedback_forTap: function(context) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue;
      var $async$Feedback_forTap = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                context.get$renderObject().sendSemanticsEvent$1(C.TapSemanticEvent_tap);
                switch (K.Theme_of(context).platform) {
                  case C.TargetPlatform_0:
                  case C.TargetPlatform_1:
                    $async$returnValue = V.SystemSound_play(C.SystemSoundType_0);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.TargetPlatform_2:
                  case C.TargetPlatform_3:
                  case C.TargetPlatform_4:
                  case C.TargetPlatform_5:
                    $async$returnValue = P.Future_Future$value(null, type$.void);
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return P._asyncStartSync($async$Feedback_forTap, $async$completer);
    },
    SystemNavigator_pop: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemNavigator_pop = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait(C.OptionalMethodChannel_cWd.invokeMethod$1$2("SystemNavigator.pop", null, type$.void), $async$SystemNavigator_pop);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$SystemNavigator_pop, $async$completer);
    }
  },
  A = {
    ButtonStyle_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      t2 = t1 ? _null : a.textStyle;
      t3 = b == null;
      t4 = t3 ? _null : b.textStyle;
      t4 = A.ButtonStyle__lerpProperties(t2, t4, t, A.text_style_TextStyle_lerp$closure(), type$.nullable_TextStyle);
      t2 = t1 ? _null : a.backgroundColor;
      t5 = t3 ? _null : b.backgroundColor;
      t6 = type$.nullable_Color;
      t5 = A.ButtonStyle__lerpProperties(t2, t5, t, P.ui_Color_lerp$closure(), t6);
      t2 = t1 ? _null : a.foregroundColor;
      t2 = A.ButtonStyle__lerpProperties(t2, t3 ? _null : b.foregroundColor, t, P.ui_Color_lerp$closure(), t6);
      t7 = t1 ? _null : a.overlayColor;
      t7 = A.ButtonStyle__lerpProperties(t7, t3 ? _null : b.overlayColor, t, P.ui_Color_lerp$closure(), t6);
      t8 = t1 ? _null : a.shadowColor;
      t6 = A.ButtonStyle__lerpProperties(t8, t3 ? _null : b.shadowColor, t, P.ui_Color_lerp$closure(), t6);
      t8 = t1 ? _null : a.elevation;
      t9 = t3 ? _null : b.elevation;
      t9 = A.ButtonStyle__lerpProperties(t8, t9, t, P.ui__lerpDouble$closure(), type$.nullable_double);
      t8 = t1 ? _null : a.padding;
      t10 = t3 ? _null : b.padding;
      t10 = A.ButtonStyle__lerpProperties(t8, t10, t, V.edge_insets_EdgeInsetsGeometry_lerp$closure(), type$.nullable_EdgeInsetsGeometry);
      t8 = t1 ? _null : a.minimumSize;
      t11 = t3 ? _null : b.minimumSize;
      t12 = type$.nullable_Size;
      t11 = A.ButtonStyle__lerpProperties(t8, t11, t, P.ui_Size_lerp$closure(), t12);
      t8 = t1 ? _null : a.fixedSize;
      t8 = A.ButtonStyle__lerpProperties(t8, t3 ? _null : b.fixedSize, t, P.ui_Size_lerp$closure(), t12);
      t12 = t1 ? _null : a.side;
      t12 = A.ButtonStyle__lerpSides(t12, t3 ? _null : b.side, t);
      t13 = t1 ? _null : a.shape;
      t13 = A.ButtonStyle__lerpShapes(t13, t3 ? _null : b.shape, t);
      t14 = t < 0.5;
      if (t14)
        t15 = t1 ? _null : a.mouseCursor;
      else
        t15 = t3 ? _null : b.mouseCursor;
      if (t14)
        t16 = t1 ? _null : a.visualDensity;
      else
        t16 = t3 ? _null : b.visualDensity;
      if (t14)
        t17 = t1 ? _null : a.tapTargetSize;
      else
        t17 = t3 ? _null : b.tapTargetSize;
      if (t14)
        t18 = t1 ? _null : a.animationDuration;
      else
        t18 = t3 ? _null : b.animationDuration;
      if (t14)
        t19 = t1 ? _null : a.enableFeedback;
      else
        t19 = t3 ? _null : b.enableFeedback;
      t20 = t1 ? _null : a.alignment;
      t20 = K.AlignmentGeometry_lerp(t20, t3 ? _null : b.alignment, t);
      if (t14)
        t1 = t1 ? _null : a.splashFactory;
      else
        t1 = t3 ? _null : b.splashFactory;
      return new A.ButtonStyle(t4, t5, t2, t7, t6, t9, t10, t11, t8, t12, t13, t15, t16, t17, t18, t19, t20, t1);
    },
    ButtonStyle__lerpProperties: function(a, b, t, lerpFunction, $T) {
      if (a == null && b == null)
        return null;
      return new A._LerpProperties3(a, b, t, lerpFunction, $T._eval$1("_LerpProperties3<0>"));
    },
    ButtonStyle__lerpSides: function(a, b, t) {
      if (a == null && b == null)
        return null;
      return new A._LerpSides(a, b, t);
    },
    ButtonStyle__lerpShapes: function(a, b, t) {
      if (a == null && b == null)
        return null;
      return new A._LerpShapes(a, b, t);
    },
    ButtonStyle: function ButtonStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.textStyle = t0;
      _.backgroundColor = t1;
      _.foregroundColor = t2;
      _.overlayColor = t3;
      _.shadowColor = t4;
      _.elevation = t5;
      _.padding = t6;
      _.minimumSize = t7;
      _.fixedSize = t8;
      _.side = t9;
      _.shape = t10;
      _.mouseCursor = t11;
      _.visualDensity = t12;
      _.tapTargetSize = t13;
      _.animationDuration = t14;
      _.enableFeedback = t15;
      _.alignment = t16;
      _.splashFactory = t17;
    },
    _LerpProperties3: function _LerpProperties3(t0, t1, t2, t3, t4) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.t = t2;
      _.lerpFunction = t3;
      _.$ti = t4;
    },
    _LerpSides: function _LerpSides(t0, t1, t2) {
      this.a = t0;
      this.b = t1;
      this.t = t2;
    },
    _LerpShapes: function _LerpShapes(t0, t1, t2) {
      this.a = t0;
      this.b = t1;
      this.t = t2;
    },
    _ButtonStyle_Object_Diagnosticable: function _ButtonStyle_Object_Diagnosticable() {
    },
    CardTheme: function CardTheme(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.clipBehavior = t0;
      _.color = t1;
      _.shadowColor = t2;
      _.elevation = t3;
      _.margin = t4;
      _.shape = t5;
    },
    _CardTheme_Object_Diagnosticable: function _CardTheme_Object_Diagnosticable() {
    },
    ColorScheme: function ColorScheme(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.primary = t0;
      _.primaryVariant = t1;
      _.secondary = t2;
      _.secondaryVariant = t3;
      _.surface = t4;
      _.background = t5;
      _.error = t6;
      _.onPrimary = t7;
      _.onSecondary = t8;
      _.onSurface = t9;
      _.onBackground = t10;
      _.onError = t11;
      _.brightness = t12;
    },
    _ColorScheme_Object_Diagnosticable: function _ColorScheme_Object_Diagnosticable() {
    },
    TimePickerThemeData: function TimePickerThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.backgroundColor = t0;
      _.hourMinuteTextColor = t1;
      _.hourMinuteColor = t2;
      _.dayPeriodTextColor = t3;
      _.dayPeriodColor = t4;
      _.dialHandColor = t5;
      _.dialBackgroundColor = t6;
      _.dialTextColor = t7;
      _.entryModeIconColor = t8;
      _.hourMinuteTextStyle = t9;
      _.dayPeriodTextStyle = t10;
      _.helpTextStyle = t11;
      _.shape = t12;
      _.hourMinuteShape = t13;
      _.dayPeriodShape = t14;
      _.dayPeriodBorderSide = t15;
      _.inputDecorationTheme = t16;
    },
    _TimePickerThemeData_Object_Diagnosticable: function _TimePickerThemeData_Object_Diagnosticable() {
    },
    TextStyle$: function(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, inherit, leadingDistribution, letterSpacing, locale, $package, shadows, textBaseline, wordSpacing) {
      return new A.TextStyle(inherit, color, backgroundColor, fontFamily, fontFamilyFallback, $package, fontSize, fontWeight, fontStyle, letterSpacing, wordSpacing, textBaseline, height, leadingDistribution, locale, foreground, background, decoration, decorationColor, decorationStyle, decorationThickness, debugLabel, shadows, fontFeatures);
    },
    TextStyle_lerp: function(a, b, t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, _null = null,
        t1 = a == null;
      if (t1 && b == null)
        return _null;
      if (t1) {
        t1 = b.inherit;
        t2 = P.Color_lerp(_null, b.color, t);
        t3 = P.Color_lerp(_null, b.backgroundColor, t);
        t4 = t < 0.5;
        t5 = t4 ? _null : b.fontFamily;
        t6 = t4 ? _null : b.get$fontFamilyFallback();
        t7 = t4 ? _null : b.fontSize;
        t8 = P.FontWeight_lerp(_null, b.fontWeight, t);
        t9 = t4 ? _null : b.fontStyle;
        t10 = t4 ? _null : b.letterSpacing;
        t11 = t4 ? _null : b.wordSpacing;
        t12 = t4 ? _null : b.textBaseline;
        t13 = t4 ? _null : b.height;
        t14 = t4 ? _null : b.leadingDistribution;
        t15 = t4 ? _null : b.locale;
        t16 = t4 ? _null : b.foreground;
        t17 = t4 ? _null : b.background;
        t18 = t4 ? _null : b.decoration;
        t19 = t4 ? _null : b.shadows;
        t20 = t4 ? _null : b.fontFeatures;
        t21 = P.Color_lerp(_null, b.decorationColor, t);
        t22 = t4 ? _null : b.decorationStyle;
        return A.TextStyle$(t17, t3, t2, _null, t18, t21, t22, t4 ? _null : b.decorationThickness, t5, t6, t20, t7, t9, t8, t16, t13, t1, t14, t10, t15, _null, t19, t12, t11);
      }
      if (b == null) {
        t1 = a.inherit;
        t2 = P.Color_lerp(a.color, _null, t);
        t3 = P.Color_lerp(_null, a.backgroundColor, t);
        t4 = t < 0.5;
        t5 = t4 ? a.fontFamily : _null;
        t6 = t4 ? a.get$fontFamilyFallback() : _null;
        t7 = t4 ? a.fontSize : _null;
        t8 = P.FontWeight_lerp(a.fontWeight, _null, t);
        t9 = t4 ? a.fontStyle : _null;
        t10 = t4 ? a.letterSpacing : _null;
        t11 = t4 ? a.wordSpacing : _null;
        t12 = t4 ? a.textBaseline : _null;
        t13 = t4 ? a.height : _null;
        t14 = t4 ? a.leadingDistribution : _null;
        t15 = t4 ? a.locale : _null;
        t16 = t4 ? a.foreground : _null;
        t17 = t4 ? a.background : _null;
        t18 = t4 ? a.shadows : _null;
        t19 = t4 ? a.fontFeatures : _null;
        t20 = t4 ? a.decoration : _null;
        t21 = P.Color_lerp(a.decorationColor, _null, t);
        t22 = t4 ? a.decorationStyle : _null;
        return A.TextStyle$(t17, t3, t2, _null, t20, t21, t22, t4 ? a.decorationThickness : _null, t5, t6, t19, t7, t9, t8, t16, t13, t1, t14, t10, t15, _null, t18, t12, t11);
      }
      t1 = b.inherit;
      t2 = a.foreground;
      t3 = t2 == null;
      t4 = t3 && b.foreground == null ? P.Color_lerp(a.color, b.color, t) : _null;
      t5 = a.background;
      t6 = t5 == null;
      t7 = t6 && b.background == null ? P.Color_lerp(a.backgroundColor, b.backgroundColor, t) : _null;
      t8 = t < 0.5;
      t9 = t8 ? a.fontFamily : b.fontFamily;
      t10 = t8 ? a.get$fontFamilyFallback() : b.get$fontFamilyFallback();
      t11 = a.fontSize;
      t12 = t11 == null ? b.fontSize : t11;
      t13 = b.fontSize;
      t11 = P.lerpDouble(t12, t13 == null ? t11 : t13, t);
      t12 = P.FontWeight_lerp(a.fontWeight, b.fontWeight, t);
      t13 = t8 ? a.fontStyle : b.fontStyle;
      t14 = a.letterSpacing;
      t15 = t14 == null ? b.letterSpacing : t14;
      t16 = b.letterSpacing;
      t14 = P.lerpDouble(t15, t16 == null ? t14 : t16, t);
      t15 = a.wordSpacing;
      t16 = t15 == null ? b.wordSpacing : t15;
      t17 = b.wordSpacing;
      t15 = P.lerpDouble(t16, t17 == null ? t15 : t17, t);
      t16 = t8 ? a.textBaseline : b.textBaseline;
      t17 = a.height;
      t18 = t17 == null ? b.height : t17;
      t19 = b.height;
      t17 = P.lerpDouble(t18, t19 == null ? t17 : t19, t);
      t18 = t8 ? a.leadingDistribution : b.leadingDistribution;
      t19 = t8 ? a.locale : b.locale;
      if (!t3 || b.foreground != null)
        if (t8) {
          if (t3) {
            t2 = H._detectRenderer();
            t2 = t2 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
            t3 = a.color;
            t3.toString;
            t2.set$color(0, t3);
          }
        } else {
          t2 = b.foreground;
          if (t2 == null) {
            t2 = H._detectRenderer();
            t2 = t2 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
            t3 = b.color;
            t3.toString;
            t2.set$color(0, t3);
          }
        }
      else
        t2 = _null;
      if (!t6 || b.background != null)
        if (t8)
          if (t6) {
            t3 = H._detectRenderer();
            t3 = t3 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
            t5 = a.backgroundColor;
            t5.toString;
            t3.set$color(0, t5);
          } else
            t3 = t5;
        else {
          t3 = b.background;
          if (t3 == null) {
            t3 = H._detectRenderer();
            t3 = t3 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
            t5 = b.backgroundColor;
            t5.toString;
            t3.set$color(0, t5);
          }
        }
      else
        t3 = _null;
      t5 = t8 ? a.shadows : b.shadows;
      t6 = t8 ? a.fontFeatures : b.fontFeatures;
      t20 = t8 ? a.decoration : b.decoration;
      t21 = P.Color_lerp(a.decorationColor, b.decorationColor, t);
      t8 = t8 ? a.decorationStyle : b.decorationStyle;
      t22 = a.decorationThickness;
      t23 = t22 == null ? b.decorationThickness : t22;
      t24 = b.decorationThickness;
      return A.TextStyle$(t3, t7, t4, _null, t20, t21, t8, P.lerpDouble(t23, t24 == null ? t22 : t24, t), t9, t10, t6, t11, t13, t12, t2, t17, t1, t18, t14, t19, _null, t5, t16, t15);
    },
    TextStyle: function TextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.inherit = t0;
      _.color = t1;
      _.backgroundColor = t2;
      _.fontFamily = t3;
      _._text_style$_fontFamilyFallback = t4;
      _._package = t5;
      _.fontSize = t6;
      _.fontWeight = t7;
      _.fontStyle = t8;
      _.letterSpacing = t9;
      _.wordSpacing = t10;
      _.textBaseline = t11;
      _.height = t12;
      _.leadingDistribution = t13;
      _.locale = t14;
      _.foreground = t15;
      _.background = t16;
      _.decoration = t17;
      _.decorationColor = t18;
      _.decorationStyle = t19;
      _.decorationThickness = t20;
      _.debugLabel = t21;
      _.shadows = t22;
      _.fontFeatures = t23;
    },
    _TextStyle_Object_Diagnosticable: function _TextStyle_Object_Diagnosticable() {
    },
    MouseTracker__shouldMarkStateDirty: function(state, $event) {
      var lastEvent;
      if (state == null)
        return true;
      lastEvent = state._latestEvent;
      if (type$.PointerSignalEvent._is($event))
        return false;
      return type$.PointerAddedEvent._is(lastEvent) || type$.PointerRemovedEvent._is($event) || !lastEvent.get$position(lastEvent).$eq(0, $event.get$position($event));
    },
    MouseTracker__handleDeviceUpdateMouseEvents: function(details) {
      var lastAnnotations, nextAnnotations, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, enteringAnnotations, baseEnterEvent,
        result = details.triggeringEvent;
      if (result == null)
        result = details.previousEvent;
      lastAnnotations = details.lastAnnotations;
      nextAnnotations = details.nextAnnotations;
      t1 = result.get$timeStamp(result);
      t2 = result.get$pointer();
      t3 = result.get$kind(result);
      t4 = result.get$device(result);
      t5 = result.get$position(result);
      t6 = result.get$delta();
      t7 = result.get$buttons(result);
      result.get$obscured();
      t8 = result.get$pressureMin();
      t9 = result.get$pressureMax();
      t10 = result.get$distance();
      t11 = result.get$distanceMax();
      t12 = result.get$size(result);
      t13 = result.get$radiusMajor();
      t14 = result.get$radiusMinor();
      t15 = result.get$radiusMin();
      t16 = result.get$radiusMax();
      t17 = result.get$orientation(result);
      t18 = result.get$tilt();
      lastAnnotations.forEach$1(0, new A.MouseTracker__handleDeviceUpdateMouseEvents_closure(nextAnnotations, F.PointerExitEvent$(t7, t6, t4, t10, t11, result.get$down(), 0, t3, false, t17, t2, t5, t9, t8, t13, t16, t15, t14, t12, result.get$synthesized(), t18, t1).transformed$1(result.get$transform(result)), lastAnnotations));
      t1 = nextAnnotations.get$keys(nextAnnotations);
      t18 = H._instanceType(t1)._eval$1("WhereIterable<Iterable.E>");
      enteringAnnotations = P.List_List$of(new H.WhereIterable(t1, new A.MouseTracker__handleDeviceUpdateMouseEvents_closure0(lastAnnotations), t18), true, t18._eval$1("Iterable.E"));
      t18 = result.get$timeStamp(result);
      t1 = result.get$pointer();
      t12 = result.get$kind(result);
      t14 = result.get$device(result);
      t15 = result.get$position(result);
      t16 = result.get$delta();
      t13 = result.get$buttons(result);
      result.get$obscured();
      t8 = result.get$pressureMin();
      t9 = result.get$pressureMax();
      t5 = result.get$distance();
      t2 = result.get$distanceMax();
      t17 = result.get$size(result);
      t3 = result.get$radiusMajor();
      t11 = result.get$radiusMinor();
      t10 = result.get$radiusMin();
      t4 = result.get$radiusMax();
      t6 = result.get$orientation(result);
      t7 = result.get$tilt();
      baseEnterEvent = F.PointerEnterEvent$(t13, t16, t14, t5, t2, result.get$down(), 0, t12, false, t6, t1, t15, t9, t8, t3, t4, t10, t11, t17, result.get$synthesized(), t7, t18).transformed$1(result.get$transform(result));
      for (t1 = new H.ReversedListIterable(enteringAnnotations, H._arrayInstanceType(enteringAnnotations)._eval$1("ReversedListIterable<1>")), t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t3 = t2._as(t1._current);
        if (t3.get$validForMouseTracker() && t3.get$onEnter(t3) != null) {
          t4 = t3.get$onEnter(t3);
          t4.toString;
          t4.call$1(baseEnterEvent.transformed$1(nextAnnotations.$index(0, t3)));
        }
      }
    },
    _MouseState: function _MouseState(t0, t1) {
      this._annotations = t0;
      this._latestEvent = t1;
    },
    _MouseTrackerUpdateDetails: function _MouseTrackerUpdateDetails(t0, t1, t2, t3) {
      var _ = this;
      _.lastAnnotations = t0;
      _.nextAnnotations = t1;
      _.previousEvent = t2;
      _.triggeringEvent = t3;
    },
    MouseTracker: function MouseTracker(t0, t1, t2) {
      var _ = this;
      _._mouseCursorMixin = t0;
      _._mouseStates = t1;
      _._debugDuringDeviceUpdate = false;
      _.ChangeNotifier__listeners = t2;
    },
    MouseTracker__handleDeviceUpdate_closure: function MouseTracker__handleDeviceUpdate_closure() {
    },
    MouseTracker_updateWithEvent_closure: function MouseTracker_updateWithEvent_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.existingState = t1;
      _.event = t2;
      _.device = t3;
      _.result = t4;
    },
    MouseTracker_updateWithEvent__closure: function MouseTracker_updateWithEvent__closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.existingState = t1;
      _.event = t2;
      _.device = t3;
      _.result = t4;
    },
    MouseTracker_updateAllDevices_closure: function MouseTracker_updateAllDevices_closure(t0, t1) {
      this.$this = t0;
      this.hitTest = t1;
    },
    MouseTracker__handleDeviceUpdateMouseEvents_closure: function MouseTracker__handleDeviceUpdateMouseEvents_closure(t0, t1, t2) {
      this.nextAnnotations = t0;
      this.baseExitEvent = t1;
      this.lastAnnotations = t2;
    },
    MouseTracker__handleDeviceUpdateMouseEvents_closure0: function MouseTracker__handleDeviceUpdateMouseEvents_closure0(t0) {
      this.lastAnnotations = t0;
    },
    __MouseTrackerUpdateDetails_Object_Diagnosticable: function __MouseTrackerUpdateDetails_Object_Diagnosticable() {
    },
    ViewConfiguration0: function ViewConfiguration0(t0, t1) {
      this.size = t0;
      this.devicePixelRatio = t1;
    },
    RenderView: function RenderView(t0, t1, t2, t3) {
      var _ = this;
      _._view$_size = t0;
      _._view$_configuration = t1;
      _._window = t2;
      _._rootTransform = null;
      _.RenderObjectWithChildMixin__child = t3;
      _.debugCreator = _.parentData = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._needsLayout = true;
      _._constraints = _._relayoutBoundary = null;
      _._debugDoingThisPaint = false;
      _._layer = null;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing = null;
      _._needsPaint = true;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    _RenderView_RenderObject_RenderObjectWithChildMixin: function _RenderView_RenderObject_RenderObjectWithChildMixin() {
    },
    CustomSemanticsAction_getIdentifier: function(action) {
      var result = $.CustomSemanticsAction__ids.$index(0, action);
      if (result == null) {
        result = $.CustomSemanticsAction__nextId;
        $.CustomSemanticsAction__nextId = result + 1;
        $.CustomSemanticsAction__ids.$indexSet(0, action, result);
        $.CustomSemanticsAction__actions.$indexSet(0, result, action);
      }
      return result;
    },
    SemanticsData__sortedListsEqual: function(left, right) {
      var i;
      if (left.length !== right.length)
        return false;
      for (i = 0; i < left.length; ++i)
        if (!J.$eq$(left[i], right[i]))
          return false;
      return true;
    },
    _SemanticsDiagnosticableNode$: function(childOrder, $name, style, value) {
      return new A._SemanticsDiagnosticableNode(childOrder, value, $name, true, true, null, style);
    },
    SemanticsNode$: function(key, showOnScreen) {
      var t14,
        t1 = $.$get$SemanticsNode__kEmptyConfig(),
        t2 = t1._isMergingSemanticsOfDescendants,
        t3 = t1._actions,
        t4 = t1._customSemanticsActions,
        t5 = t1._actionsAsBits,
        t6 = t1._flags,
        t7 = t1._label,
        t8 = t1._semantics$_value,
        t9 = t1._decreasedValue,
        t10 = t1._increasedValue,
        t11 = t1._hint,
        t12 = t1._semantics$_elevation,
        t13 = t1._thickness;
      t1 = t1._semantics$_textDirection;
      t14 = ($.SemanticsNode__lastIdentifier + 1) % 65535;
      $.SemanticsNode__lastIdentifier = t14;
      return new A.SemanticsNode(key, t14, showOnScreen, C.Rect_0_0_0_0, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t1);
    },
    _pointInParentCoordinates: function(node, point) {
      var t1, vector;
      if (node._semantics$_transform == null)
        return point;
      t1 = new Float64Array(3);
      vector = new E.Vector3(t1);
      vector.setValues$3(point._dx, point._dy, 0);
      node._semantics$_transform.transform3$1(vector);
      return new P.Offset(t1[0], t1[1]);
    },
    _childrenInDefaultOrder: function(children, textDirection) {
      var t1, _i, child, t2, verticalGroups, group, depth, edge,
        edges = H.setRuntimeTypeInfo([], type$.JSArray__BoxEdge);
      for (t1 = children.length, _i = 0; _i < children.length; children.length === t1 || (0, H.throwConcurrentModificationError)(children), ++_i) {
        child = children[_i];
        t2 = child._semantics$_rect;
        edges.push(new A._BoxEdge(true, A._pointInParentCoordinates(child, new P.Offset(t2.left - -0.1, t2.top - -0.1))._dy, child));
        edges.push(new A._BoxEdge(false, A._pointInParentCoordinates(child, new P.Offset(t2.right + -0.1, t2.bottom + -0.1))._dy, child));
      }
      C.JSArray_methods.sort$0(edges);
      verticalGroups = H.setRuntimeTypeInfo([], type$.JSArray__SemanticsSortGroup);
      for (t1 = edges.length, t2 = type$.JSArray_SemanticsNode, group = null, depth = 0, _i = 0; _i < edges.length; edges.length === t1 || (0, H.throwConcurrentModificationError)(edges), ++_i) {
        edge = edges[_i];
        if (edge.isLeadingEdge) {
          ++depth;
          if (group == null)
            group = new A._SemanticsSortGroup(edge.offset, textDirection, H.setRuntimeTypeInfo([], t2));
          group.nodes.push(edge.node);
        } else
          --depth;
        if (depth === 0) {
          group.toString;
          verticalGroups.push(group);
          group = null;
        }
      }
      C.JSArray_methods.sort$0(verticalGroups);
      t1 = type$.ExpandIterable__SemanticsSortGroup_SemanticsNode;
      return P.List_List$of(new H.ExpandIterable(verticalGroups, new A._childrenInDefaultOrder_closure(), t1), true, t1._eval$1("Iterable.E"));
    },
    SemanticsConfiguration$: function() {
      return new A.SemanticsConfiguration(P.LinkedHashMap_LinkedHashMap$_empty(type$.SemanticsAction, type$.void_Function_nullable_Object), P.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.void_Function));
    },
    _concatStrings: function(otherString, otherTextDirection, thisString, thisTextDirection) {
      var nestedLabel;
      if (otherString.length === 0)
        return thisString;
      if (thisTextDirection != otherTextDirection && otherTextDirection != null)
        switch (otherTextDirection) {
          case C.TextDirection_0:
            nestedLabel = "\u202b" + otherString + "\u202c";
            break;
          case C.TextDirection_1:
            nestedLabel = "\u202a" + otherString + "\u202c";
            break;
          default:
            nestedLabel = otherString;
        }
      else
        nestedLabel = otherString;
      if (thisString.length === 0)
        return nestedLabel;
      return thisString + "\n" + nestedLabel;
    },
    SemanticsData: function SemanticsData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.flags = t0;
      _.actions = t1;
      _.label = t2;
      _.value = t3;
      _.increasedValue = t4;
      _.decreasedValue = t5;
      _.hint = t6;
      _.textDirection = t7;
      _.textSelection = t8;
      _.scrollChildCount = t9;
      _.scrollIndex = t10;
      _.scrollPosition = t11;
      _.scrollExtentMax = t12;
      _.scrollExtentMin = t13;
      _.platformViewId = t14;
      _.maxValueLength = t15;
      _.currentValueLength = t16;
      _.rect = t17;
      _.tags = t18;
      _.transform = t19;
      _.elevation = t20;
      _.thickness = t21;
      _.customSemanticsActionIds = t22;
    },
    _SemanticsDiagnosticableNode: function _SemanticsDiagnosticableNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.childOrder = t0;
      _.value = t1;
      _._cachedBuilder = null;
      _.name = t2;
      _.showSeparator = t3;
      _.showName = t4;
      _.linePrefix = t5;
      _.style = t6;
    },
    SemanticsProperties: function SemanticsProperties(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50) {
      var _ = this;
      _.enabled = t0;
      _.checked = t1;
      _.toggled = t2;
      _.selected = t3;
      _.button = t4;
      _.link = t5;
      _.header = t6;
      _.textField = t7;
      _.slider = t8;
      _.keyboardKey = t9;
      _.readOnly = t10;
      _.focusable = t11;
      _.focused = t12;
      _.inMutuallyExclusiveGroup = t13;
      _.hidden = t14;
      _.obscured = t15;
      _.multiline = t16;
      _.scopesRoute = t17;
      _.namesRoute = t18;
      _.image = t19;
      _.liveRegion = t20;
      _.maxValueLength = t21;
      _.currentValueLength = t22;
      _.label = t23;
      _.value = t24;
      _.increasedValue = t25;
      _.decreasedValue = t26;
      _.hint = t27;
      _.hintOverrides = t28;
      _.textDirection = t29;
      _.sortKey = t30;
      _.tagForChildren = t31;
      _.onTap = t32;
      _.onLongPress = t33;
      _.onScrollLeft = t34;
      _.onScrollRight = t35;
      _.onScrollUp = t36;
      _.onScrollDown = t37;
      _.onIncrease = t38;
      _.onDecrease = t39;
      _.onCopy = t40;
      _.onCut = t41;
      _.onPaste = t42;
      _.onMoveCursorForwardByCharacter = t43;
      _.onMoveCursorBackwardByCharacter = t44;
      _.onSetSelection = t45;
      _.onSetText = t46;
      _.onDidGainAccessibilityFocus = t47;
      _.onDidLoseAccessibilityFocus = t48;
      _.onDismiss = t49;
      _.customSemanticsActions = t50;
    },
    SemanticsNode: function SemanticsNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.key = t0;
      _._id = t1;
      _._showOnScreen = t2;
      _._semantics$_transform = null;
      _._semantics$_rect = t3;
      _.indexInParent = _.elevationAdjustment = _.parentPaintClipRect = _.parentSemanticsClipRect = null;
      _._isMergedIntoParent = false;
      _._mergeAllDescendantsIntoThisNode = t4;
      _.__SemanticsNode__debugPreviousSnapshot = _._semantics$_children = null;
      _._semantics$_dirty = _._dead = false;
      _._actions = t5;
      _._customSemanticsActions = t6;
      _._actionsAsBits = t7;
      _.tags = null;
      _._flags = t8;
      _._label = t9;
      _._semantics$_value = t10;
      _._decreasedValue = t11;
      _._increasedValue = t12;
      _._hint = t13;
      _._semantics$_elevation = t14;
      _._thickness = t15;
      _._semantics$_hintOverrides = null;
      _._semantics$_textDirection = t16;
      _._currentValueLength = _._maxValueLength = _._platformViewId = _._scrollExtentMin = _._scrollExtentMax = _._scrollPosition = _._scrollIndex = _._scrollChildCount = _._textSelection = _._semantics$_sortKey = null;
      _._node$_depth = 0;
      _._node$_parent = _._node$_owner = null;
    },
    SemanticsNode_getSemanticsData_closure: function SemanticsNode_getSemanticsData_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.customSemanticsActionIds = t2;
    },
    SemanticsNode__childrenInTraversalOrder_closure: function SemanticsNode__childrenInTraversalOrder_closure() {
    },
    SemanticsNode_debugDescribeChildren_closure: function SemanticsNode_debugDescribeChildren_closure(t0) {
      this.childOrder = t0;
    },
    _BoxEdge: function _BoxEdge(t0, t1, t2) {
      this.isLeadingEdge = t0;
      this.offset = t1;
      this.node = t2;
    },
    _SemanticsSortGroup: function _SemanticsSortGroup(t0, t1, t2) {
      this.startOffset = t0;
      this.textDirection = t1;
      this.nodes = t2;
    },
    _SemanticsSortGroup_sortedWithinVerticalGroup_closure: function _SemanticsSortGroup_sortedWithinVerticalGroup_closure() {
    },
    _SemanticsSortGroup_sortedWithinKnot_closure: function _SemanticsSortGroup_sortedWithinKnot_closure() {
    },
    _SemanticsSortGroup_sortedWithinKnot_search: function _SemanticsSortGroup_sortedWithinKnot_search(t0, t1, t2) {
      this.visitedIds = t0;
      this.edges = t1;
      this.sortedIds = t2;
    },
    _SemanticsSortGroup_sortedWithinKnot_closure0: function _SemanticsSortGroup_sortedWithinKnot_closure0() {
    },
    _SemanticsSortGroup_sortedWithinKnot_closure1: function _SemanticsSortGroup_sortedWithinKnot_closure1(t0) {
      this.nodeMap = t0;
    },
    _childrenInDefaultOrder_closure: function _childrenInDefaultOrder_closure() {
    },
    _TraversalSortNode: function _TraversalSortNode(t0, t1, t2) {
      this.node = t0;
      this.sortKey = t1;
      this.position = t2;
    },
    SemanticsOwner: function SemanticsOwner(t0, t1, t2, t3) {
      var _ = this;
      _._semantics$_dirtyNodes = t0;
      _._nodes = t1;
      _._detachedNodes = t2;
      _.ChangeNotifier__listeners = t3;
    },
    SemanticsOwner_sendSemanticsUpdate_closure: function SemanticsOwner_sendSemanticsUpdate_closure(t0) {
      this.$this = t0;
    },
    SemanticsOwner_sendSemanticsUpdate_closure0: function SemanticsOwner_sendSemanticsUpdate_closure0() {
    },
    SemanticsOwner_sendSemanticsUpdate_closure1: function SemanticsOwner_sendSemanticsUpdate_closure1() {
    },
    SemanticsOwner__getSemanticsActionHandlerForId_closure: function SemanticsOwner__getSemanticsActionHandlerForId_closure(t0, t1) {
      this._box_0 = t0;
      this.action = t1;
    },
    SemanticsConfiguration: function SemanticsConfiguration(t0, t1) {
      var _ = this;
      _._hasBeenAnnotated = _.isBlockingSemanticsOfPreviouslyPaintedNodes = _.explicitChildNodes = _._isSemanticBoundary = false;
      _._actions = t0;
      _._actionsAsBits = 0;
      _._currentValueLength = _._maxValueLength = _._platformViewId = _._scrollIndex = _._scrollChildCount = _._indexInParent = _._semantics$_sortKey = null;
      _._isMergingSemanticsOfDescendants = false;
      _._customSemanticsActions = t1;
      _._hint = _._increasedValue = _._decreasedValue = _._semantics$_value = _._label = "";
      _._semantics$_hintOverrides = null;
      _._thickness = _._semantics$_elevation = 0;
      _._tagsForChildren = _._scrollExtentMin = _._scrollExtentMax = _._scrollPosition = _._textSelection = _._semantics$_textDirection = null;
      _._flags = 0;
    },
    SemanticsConfiguration__addArgumentlessAction_closure: function SemanticsConfiguration__addArgumentlessAction_closure(t0) {
      this.handler = t0;
    },
    SemanticsConfiguration_onMoveCursorForwardByCharacter_closure: function SemanticsConfiguration_onMoveCursorForwardByCharacter_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure: function SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorForwardByWord_closure: function SemanticsConfiguration_onMoveCursorForwardByWord_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onMoveCursorBackwardByWord_closure: function SemanticsConfiguration_onMoveCursorBackwardByWord_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onSetSelection_closure: function SemanticsConfiguration_onSetSelection_closure(t0) {
      this.value = t0;
    },
    SemanticsConfiguration_onSetText_closure: function SemanticsConfiguration_onSetText_closure(t0) {
      this.value = t0;
    },
    DebugSemanticsDumpOrder: function DebugSemanticsDumpOrder(t0) {
      this._semantics$_name = t0;
    },
    SemanticsSortKey: function SemanticsSortKey() {
    },
    OrdinalSortKey: function OrdinalSortKey(t0, t1) {
      this.order = t0;
      this.name = t1;
    },
    _SemanticsData_Object_Diagnosticable: function _SemanticsData_Object_Diagnosticable() {
    },
    _SemanticsNode_AbstractNode_DiagnosticableTreeMixin: function _SemanticsNode_AbstractNode_DiagnosticableTreeMixin() {
    },
    _SemanticsSortKey_Object_Diagnosticable: function _SemanticsSortKey_Object_Diagnosticable() {
    },
    _DeferringMouseCursor_firstNonDeferred: function(cursors) {
      var t1, t2, t3;
      for (t1 = new H.MappedIterator(J.get$iterator$ax(cursors._iterable), cursors._f), t2 = H._instanceType(t1)._rest[1]; t1.moveNext$0();) {
        t3 = t2._as(t1._current);
        if (!t3.$eq(0, C.C__DeferringMouseCursor))
          return t3;
      }
      return null;
    },
    MouseCursorManager: function MouseCursorManager(t0, t1) {
      this.fallbackMouseCursor = t0;
      this._lastSession = t1;
    },
    MouseCursorSession: function MouseCursorSession() {
    },
    MouseCursor0: function MouseCursor0() {
    },
    _DeferringMouseCursor: function _DeferringMouseCursor() {
    },
    _SystemMouseCursorSession: function _SystemMouseCursorSession(t0, t1) {
      this.cursor = t0;
      this.device = t1;
    },
    SystemMouseCursor: function SystemMouseCursor(t0) {
      this.kind = t0;
    },
    _MouseCursor_Object_Diagnosticable: function _MouseCursor_Object_Diagnosticable() {
    },
    BasicMessageChannel: function BasicMessageChannel(t0, t1, t2) {
      this.name = t0;
      this.codec = t1;
      this.$ti = t2;
    },
    BasicMessageChannel_setMessageHandler_closure: function BasicMessageChannel_setMessageHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    MethodChannel: function MethodChannel(t0, t1) {
      this.name = t0;
      this.codec = t1;
    },
    MethodChannel_setMethodCallHandler_closure: function MethodChannel_setMethodCallHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    OptionalMethodChannel: function OptionalMethodChannel(t0, t1) {
      this.name = t0;
      this.codec = t1;
    },
    RawKeyEventDataWeb: function RawKeyEventDataWeb(t0, t1, t2) {
      this.code = t0;
      this.key = t1;
      this.metaState = t2;
    },
    ScrollPositionAlignmentPolicy: function ScrollPositionAlignmentPolicy(t0) {
      this._scroll_position$_name = t0;
    },
    hashObjects: function(objects) {
      var t1 = C.NativeFloat64List_methods.fold$2(objects, 0, new A.hashObjects_closure()),
        hash = t1 + ((t1 & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    hashObjects_closure: function hashObjects_closure() {
    }
  };
  var holders = [C, H, J, P, W, Y, F, X, G, S, Z, R, E, T, K, L, D, U, N, B, O, V, Q, M, A];
  hunkHelpers.setFunctionNamesIfNecessary(holders);
  var $ = {};
  H.initializeEngine_closure.prototype = {
    call$2: function(_, __) {
      var t1, _i;
      for (t1 = $._hotRestartListeners.length, _i = 0; _i < $._hotRestartListeners.length; $._hotRestartListeners.length === t1 || (0, H.throwConcurrentModificationError)($._hotRestartListeners), ++_i)
        $._hotRestartListeners[_i].call$0();
      return P.Future_Future$value(P.ServiceExtensionResponse$result("OK"), type$.ServiceExtensionResponse);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 64
  };
  H.initializeEngine_closure0.prototype = {
    call$0: function() {
      var t1 = this._box_0;
      if (!t1.waitingForAnimation) {
        t1.waitingForAnimation = true;
        C.Window_methods.requestAnimationFrame$1(window, new H.initializeEngine__closure(t1));
      }
    },
    $signature: 0
  };
  H.initializeEngine__closure.prototype = {
    call$1: function(highResTime) {
      var highResTimeMicroseconds, t1, t2, t3;
      H._frameTimingsOnVsync();
      this._box_0.waitingForAnimation = false;
      highResTimeMicroseconds = C.JSNumber_methods.toInt$0(1000 * highResTime);
      H._frameTimingsOnBuildStart();
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = t1._onBeginFrame;
      if (t2 != null) {
        t3 = P.Duration$(highResTimeMicroseconds, 0);
        H.invoke1(t2, t1._onBeginFrameZone, t3);
      }
      t2 = t1._onDrawFrame;
      if (t2 != null)
        H.invoke(t2, t1._onDrawFrameZone);
    },
    $signature: 71
  };
  H._addUrlStrategyListener_closure.prototype = {
    call$1: function(jsStrategy) {
      var t1 = jsStrategy == null ? null : new H.CustomUrlStrategy(jsStrategy);
      $._isUrlStrategySet = true;
      $._customUrlStrategy = t1;
    },
    $signature: 303
  };
  H._addUrlStrategyListener_closure0.prototype = {
    call$0: function() {
      self._flutter_web_set_location_strategy = null;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H._NullTreeSanitizer.prototype = {
    sanitizeTree$1: function(node) {
    }
  };
  H.AlarmClock.prototype = {
    get$callback: function() {
      var t1 = this.__AlarmClock_callback;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("callback")) : t1;
    },
    set$datetime: function(value) {
      var now, t1, t2, _this = this;
      if (J.$eq$(value, _this._datetime))
        return;
      if (value == null) {
        _this._cancelTimer$0();
        _this._datetime = null;
        return;
      }
      now = _this._timestampFunction.call$0();
      t1 = value._core$_value;
      t2 = now._core$_value;
      if (t1 < t2) {
        _this._cancelTimer$0();
        _this._datetime = value;
        return;
      }
      if (_this._timer == null)
        _this._timer = P.Timer_Timer(P.Duration$(0, t1 - t2), _this.get$_timerDidFire());
      else if (_this._datetime._core$_value > t1) {
        _this._cancelTimer$0();
        _this._timer = P.Timer_Timer(P.Duration$(0, t1 - t2), _this.get$_timerDidFire());
      }
      _this._datetime = value;
    },
    _cancelTimer$0: function() {
      var t1 = this._timer;
      if (t1 != null)
        t1.cancel$0(0);
      this._timer = null;
    },
    _timerDidFire$0: function() {
      var _this = this,
        now = _this._timestampFunction.call$0(),
        t1 = _this._datetime,
        t2 = now._core$_value;
      t1 = t1._core$_value;
      if (t2 >= t1) {
        _this._timer = null;
        _this.callback$0();
      } else
        _this._timer = P.Timer_Timer(P.Duration$(0, t1 - t2), _this.get$_timerDidFire());
    },
    callback$0: function() {
      return this.get$callback().call$0();
    }
  };
  H.AssetManager.prototype = {
    get$_baseUrl: function() {
      var t1 = new H.WhereTypeIterable(new W._FrozenElementList(window.document.querySelectorAll("meta"), type$._FrozenElementList_Element), type$.WhereTypeIterable_nullable_MetaElement).firstWhere$2$orElse(0, new H.AssetManager__baseUrl_closure(), new H.AssetManager__baseUrl_closure0());
      return t1 == null ? null : t1.content;
    },
    getAssetUrl$1: function(asset) {
      var t1;
      if (P.Uri_parse(asset).get$hasScheme())
        return P._Uri__uriEncode(C.List_gnE, asset, C.C_Utf8Codec, false);
      t1 = this.get$_baseUrl();
      if (t1 == null)
        t1 = "";
      return P._Uri__uriEncode(C.List_gnE, t1 + ("assets/" + asset), C.C_Utf8Codec, false);
    },
    load$1: function(_, asset) {
      return this.load$body$AssetManager(_, asset);
    },
    load$body$AssetManager: function(_, asset) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.ByteData),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, request, response, e, target, t1, exception, url, $async$exception;
      var $async$load$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              url = $async$self.getAssetUrl$1(asset);
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(W.HttpRequest_request(url, "arraybuffer"), $async$load$1);
            case 7:
              // returning from await.
              request = $async$result;
              response = W._convertNativeToDart_XHR_Response(request.response);
              t1 = H.NativeByteData_NativeByteData$view(response, 0, null);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (type$.ProgressEvent._is(t1)) {
                e = t1;
                target = W._convertNativeToDart_EventTarget(e.target);
                if (type$.HttpRequest._is(target)) {
                  if (target.status === 404 && asset === "AssetManifest.json") {
                    $.$get$printWarning().call$1("Asset manifest does not exist at `" + H.S(url) + "` \u2013 ignoring.");
                    $async$returnValue = H.NativeByteData_NativeByteData$view(new Uint8Array(H._ensureNativeList(C.C_Utf8Codec.get$encoder().convert$1("{}"))).buffer, 0, null);
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                  t1 = target.status;
                  t1.toString;
                  throw H.wrapException(new H.AssetManagerException(url, t1));
                }
                $.$get$printWarning().call$1("Caught ProgressEvent with target: " + H.S(target));
                throw $async$exception;
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$load$1, $async$completer);
    }
  };
  H.AssetManager__baseUrl_closure.prototype = {
    call$1: function(e) {
      return J.$eq$(J.get$name$x(e), "assetBase");
    },
    $signature: 101
  };
  H.AssetManager__baseUrl_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 2
  };
  H.AssetManagerException.prototype = {
    toString$0: function(_) {
      return 'Failed to load asset at "' + this.url + '" (' + this.httpStatus + ")";
    },
    $isException: 1
  };
  H.BitmapCanvas.prototype = {
    set$bounds: function(_, newValue) {
      var newCanvasPositionX, newCanvasPositionY, _this = this;
      _this._bounds = newValue;
      newCanvasPositionX = C.JSNumber_methods.floor$0(newValue.left) - 1;
      newCanvasPositionY = C.JSNumber_methods.floor$0(_this._bounds.top) - 1;
      if (_this._canvasPositionX !== newCanvasPositionX || _this._canvasPositionY !== newCanvasPositionY) {
        _this._canvasPositionX = newCanvasPositionX;
        _this._canvasPositionY = newCanvasPositionY;
        _this._updateRootElementTransform$0();
      }
    },
    _updateRootElementTransform$0: function() {
      var t1 = this.rootElement.style,
        t2 = "translate(" + this._canvasPositionX + "px, " + this._canvasPositionY + "px)";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    _setupInitialTransform$0: function() {
      var _this = this,
        t1 = _this._bounds,
        t2 = t1.left;
      t1 = t1.top;
      _this._canvasPool.translate$2(0, -t2 + (t2 - 1 - _this._canvasPositionX) + 1, -t1 + (t1 - 1 - _this._canvasPositionY) + 1);
    },
    doesFitBounds$2: function(newBounds, newDensity) {
      return this._widthInBitmapPixels >= H.BitmapCanvas__widthToPhysical(newBounds.right - newBounds.left) && this._heightInBitmapPixels >= H.BitmapCanvas__heightToPhysical(newBounds.bottom - newBounds.top) && this._density === newDensity;
    },
    clear$0: function(_) {
      var t1, len, t2, i, child, t3, _this = this;
      _this._contains3dTransform = false;
      _this._canvasPool.clear$0(0);
      t1 = _this.__engine$_children;
      len = t1.length;
      for (t2 = _this.rootElement, i = 0; i < len; ++i) {
        child = t1[i];
        if (child.parentElement === t2) {
          t3 = child.parentNode;
          if (t3 != null)
            t3.removeChild(child);
        }
      }
      C.JSArray_methods.set$length(t1, 0);
      _this._childOverdraw = false;
      _this._cachedLastCssFont = null;
      _this._setupInitialTransform$0();
    },
    save$0: function(_) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$save(0);
      if (t1.__engine$_canvas != null) {
        t1.get$context(t1).save();
        ++t1._saveContextCount;
      }
      return this._saveCount++;
    },
    restore$0: function(_) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$restore(0);
      if (t1.__engine$_canvas != null) {
        t1.get$context(t1).restore();
        t1.get$contextHandle().reset$0(0);
        --t1._saveContextCount;
      }
      --this._saveCount;
      this._cachedLastCssFont = null;
    },
    translate$2: function(_, dx, dy) {
      this._canvasPool.translate$2(0, dx, dy);
    },
    transform$1: function(_, matrix4) {
      var t1;
      if (H.transformKindOf(matrix4) === C.TransformKind_2)
        this._contains3dTransform = true;
      t1 = this._canvasPool;
      t1.super$_SaveStackTracking$transform(0, matrix4);
      if (t1.__engine$_canvas != null)
        t1.get$context(t1).transform(matrix4[0], matrix4[1], matrix4[4], matrix4[5], matrix4[12], matrix4[13]);
    },
    clipRect$2: function(_, rect, op) {
      var path, t2,
        t1 = this._canvasPool;
      if (op === C.ClipOp_0) {
        path = H.SurfacePath$();
        path._fillType = C.PathFillType_1;
        t2 = this._bounds;
        path.addRectWithDirection$3(new P.Rect(0, 0, 0 + (t2.right - t2.left), 0 + (t2.bottom - t2.top)), 0, 0);
        path.addRectWithDirection$3(rect, 0, 0);
        t1.clipPath$1(0, path);
      } else {
        t1.super$_SaveStackTracking$clipRect(0, rect);
        if (t1.__engine$_canvas != null)
          t1._clipRect$2(t1.get$context(t1), rect);
      }
    },
    clipRRect$1: function(_, rrect) {
      var t1 = this._canvasPool;
      t1.super$_SaveStackTracking$clipRRect(0, rrect);
      if (t1.__engine$_canvas != null)
        t1._clipRRect$2(t1.get$context(t1), rrect);
    },
    clipPath$1: function(_, path) {
      this._canvasPool.clipPath$1(0, path);
    },
    _useDomForRenderingFill$1: function(paint) {
      var t1, _this = this;
      if (!_this._renderStrategy.isInsideShaderMask)
        if (!(!_this._preserveImageData && _this._contains3dTransform))
          t1 = _this._childOverdraw && _this._canvasPool.__engine$_canvas == null && paint.maskFilter == null && paint.shader == null && paint.style !== C.PaintingStyle_1;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _useDomForRenderingFillAndStroke$1: function(paint) {
      var _this = this,
        t1 = _this._renderStrategy;
      if (!t1.isInsideShaderMask)
        if (!(!_this._preserveImageData && _this._contains3dTransform)) {
          if (!_this._childOverdraw)
            t1 = t1.hasParagraphs;
          else
            t1 = true;
          t1 = t1 && _this._canvasPool.__engine$_canvas == null && paint.maskFilter == null && paint.shader == null;
        } else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    drawRect$2: function(_, rect, paint) {
      var t2, shaderBounds, t3, t4, t5, t6,
        t1 = this._canvasPool;
      if (this._useDomForRenderingFillAndStroke$1(paint))
        this._drawElement$3(H._buildDrawRectElement(rect, paint, "draw-rect", t1._currentTransform), new P.Offset(Math.min(rect.left, rect.right), Math.min(rect.top, rect.bottom)), paint);
      else {
        t1.get$contextHandle().setUpPaint$2(paint, rect);
        t2 = paint.style;
        t1.get$context(t1).beginPath();
        shaderBounds = t1.get$contextHandle()._shaderBounds;
        t3 = rect.left;
        t4 = rect.top;
        t5 = rect.right - t3;
        t6 = rect.bottom - t4;
        if (shaderBounds == null)
          t1.get$context(t1).rect(t3, t4, t5, t6);
        else
          t1.get$context(t1).rect(t3 - shaderBounds.left, t4 - shaderBounds.top, t5, t6);
        t1.get$contextHandle().paint$1(t2);
        t1.get$contextHandle().tearDownPaint$0();
      }
    },
    _drawElement$3: function(element, offset, paint) {
      var clipElements, t3, _i, clipElement, blendMode, _this = this,
        t1 = _this._canvasPool,
        t2 = t1._clipStack;
      if (t2 != null) {
        clipElements = H._clipContent(t2, element, C.Offset_0_0, H.transformWithOffset(t1._currentTransform, offset));
        for (t1 = clipElements.length, t2 = _this.rootElement, t3 = _this.__engine$_children, _i = 0; _i < clipElements.length; clipElements.length === t1 || (0, H.throwConcurrentModificationError)(clipElements), ++_i) {
          clipElement = clipElements[_i];
          t2.appendChild(clipElement);
          t3.push(clipElement);
        }
      } else {
        _this.rootElement.appendChild(element);
        _this.__engine$_children.push(element);
      }
      blendMode = paint.blendMode;
      if (blendMode != null) {
        t1 = element.style;
        t2 = H._stringForBlendMode(blendMode);
        if (t2 == null)
          t2 = "";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "mix-blend-mode"), t2, "");
      }
      _this._closeCurrentCanvas$0();
    },
    drawRRect$2: function(_, rrect, paint) {
      var element, shaderBounds, left, right, $top, bottom, t0, trRadiusX, tlRadiusX, trRadiusY, tlRadiusY, blRadiusX, brRadiusX, blRadiusY, brRadiusY,
        t1 = rrect.left,
        t2 = rrect.top,
        t3 = rrect.right,
        t4 = rrect.bottom,
        t5 = this._canvasPool;
      if (this._useDomForRenderingFillAndStroke$1(paint)) {
        element = H._buildDrawRectElement(new P.Rect(t1, t2, t3, t4), paint, "draw-rrect", t5._currentTransform);
        H._applyRRectBorderRadius(element.style, rrect);
        this._drawElement$3(element, new P.Offset(Math.min(t1, t3), Math.min(t2, t4)), paint);
      } else {
        t5.get$contextHandle().setUpPaint$2(paint, new P.Rect(t1, t2, t3, t4));
        t1 = paint.style;
        shaderBounds = t5.get$contextHandle()._shaderBounds;
        t2 = t5.get$context(t5);
        rrect = (shaderBounds == null ? rrect : rrect.shift$1(new P.Offset(-shaderBounds.left, -shaderBounds.top))).scaleRadii$0();
        left = rrect.left;
        right = rrect.right;
        $top = rrect.top;
        bottom = rrect.bottom;
        if (left > right) {
          t0 = right;
          right = left;
          left = t0;
        }
        if ($top > bottom) {
          t0 = bottom;
          bottom = $top;
          $top = t0;
        }
        trRadiusX = Math.abs(rrect.trRadiusX);
        tlRadiusX = Math.abs(rrect.tlRadiusX);
        trRadiusY = Math.abs(rrect.trRadiusY);
        tlRadiusY = Math.abs(rrect.tlRadiusY);
        blRadiusX = Math.abs(rrect.blRadiusX);
        brRadiusX = Math.abs(rrect.brRadiusX);
        blRadiusY = Math.abs(rrect.blRadiusY);
        brRadiusY = Math.abs(rrect.brRadiusY);
        t2.beginPath();
        t2.moveTo(left + trRadiusX, $top);
        t3 = right - trRadiusX;
        t2.lineTo(t3, $top);
        H.DomRenderer_ellipse(t2, t3, $top + trRadiusY, trRadiusX, trRadiusY, 0, 4.71238898038469, 6.283185307179586, false);
        t3 = bottom - brRadiusY;
        t2.lineTo(right, t3);
        H.DomRenderer_ellipse(t2, right - brRadiusX, t3, brRadiusX, brRadiusY, 0, 0, 1.5707963267948966, false);
        t3 = left + blRadiusX;
        t2.lineTo(t3, bottom);
        H.DomRenderer_ellipse(t2, t3, bottom - blRadiusY, blRadiusX, blRadiusY, 0, 1.5707963267948966, 3.141592653589793, false);
        t3 = $top + tlRadiusY;
        t2.lineTo(left, t3);
        H.DomRenderer_ellipse(t2, left + tlRadiusX, t3, tlRadiusX, tlRadiusY, 0, 3.141592653589793, 4.71238898038469, false);
        t5.get$contextHandle().paint$1(t1);
        t5.get$contextHandle().tearDownPaint$0();
      }
    },
    drawCircle$3: function(_, c, radius, paint) {
      var element, t1, t2, shaderBounds, t3, cx, cy, _this = this,
        rect = P.Rect$fromCircle(c, radius);
      if (_this._useDomForRenderingFillAndStroke$1(paint)) {
        element = H._buildDrawRectElement(rect, paint, "draw-circle", _this._canvasPool._currentTransform);
        _this._drawElement$3(element, new P.Offset(Math.min(rect.left, rect.right), Math.min(rect.top, rect.bottom)), paint);
        t1 = element.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "border-radius"), "50%", "");
      } else {
        t1 = paint.shader != null ? P.Rect$fromCircle(c, radius) : null;
        t2 = _this._canvasPool;
        t2.get$contextHandle().setUpPaint$2(paint, t1);
        t1 = paint.style;
        t2.get$context(t2).beginPath();
        shaderBounds = t2.get$contextHandle()._shaderBounds;
        t3 = shaderBounds == null;
        cx = c._dx;
        cx = t3 ? cx : cx - shaderBounds.left;
        cy = c._dy;
        cy = t3 ? cy : cy - shaderBounds.top;
        H.DomRenderer_ellipse(t2.get$context(t2), cx, cy, radius, radius, 0, 0, 6.283185307179586, false);
        t2.get$contextHandle().paint$1(t1);
        t2.get$contextHandle().tearDownPaint$0();
      }
    },
    drawPath$2: function(_, path, paint) {
      var t1, transform, pathAsLine, t2, t3, t4, rect, pathAsRect, pathAsRRect, pathBounds, svgElm, style, cssColor, sigma, _this = this;
      if (_this._useDomForRenderingFill$1(paint)) {
        t1 = _this._canvasPool;
        transform = t1._currentTransform;
        type$.SurfacePath._as(path);
        pathAsLine = path.pathRef.getStraightLine$0();
        if (pathAsLine != null) {
          t2 = pathAsLine.top;
          t3 = pathAsLine.bottom;
          t4 = pathAsLine.left;
          rect = t2 === t3 ? new P.Rect(t4, t2, t4 + (pathAsLine.right - t4), t2 + 1) : new P.Rect(t4, t2, t4 + 1, t2 + (t3 - t2));
          _this._drawElement$3(H._buildDrawRectElement(rect, paint, "draw-rect", t1._currentTransform), new P.Offset(Math.min(rect.left, rect.right), Math.min(rect.top, rect.bottom)), paint);
          return;
        }
        pathAsRect = path.pathRef.getRect$0();
        if (pathAsRect != null) {
          _this.drawRect$2(0, pathAsRect, paint);
          return;
        }
        t2 = path.pathRef;
        pathAsRRect = t2.fIsRRect ? t2._getRRect$0() : null;
        if (pathAsRRect != null) {
          _this.drawRRect$2(0, pathAsRRect, paint);
          return;
        }
        pathBounds = path.getBounds$0(0);
        svgElm = H._pathToSvgElement(path, paint, H.S(pathBounds.right), H.S(pathBounds.bottom));
        if (t1._clipStack == null) {
          style = svgElm.style;
          style.position = "absolute";
          if (!transform.isIdentity$0(0)) {
            t1 = H.float64ListToCssTransform(transform.__engine$_m4storage);
            C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "transform"), t1, "");
            C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, "transform-origin"), "0 0 0", "");
          }
        }
        if (paint.maskFilter != null) {
          t1 = paint.style;
          t2 = paint.color;
          if (t2 == null)
            cssColor = "#000000";
          else {
            t2 = H.colorToCssString(t2);
            t2.toString;
            cssColor = t2;
          }
          sigma = paint.maskFilter._sigma;
          t2 = H._browserEngine();
          if (t2 === C.BrowserEngine_1 && t1 !== C.PaintingStyle_1) {
            t1 = svgElm.style;
            t2 = "0px 0px " + H.S(sigma * 2) + "px " + cssColor;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "box-shadow"), t2, "");
          } else {
            t1 = svgElm.style;
            t2 = "blur(" + H.S(sigma) + "px)";
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "filter"), t2, "");
          }
        }
        _this._drawElement$3(svgElm, new P.Offset(0, 0), paint);
      } else {
        t1 = paint.shader != null ? path.getBounds$0(0) : null;
        t2 = _this._canvasPool;
        t2.get$contextHandle().setUpPaint$2(paint, t1);
        t1 = paint.style;
        if (t1 == null && paint.strokeWidth != null)
          t2.drawPath$2(0, path, C.PaintingStyle_1);
        else
          t2.drawPath$2(0, path, t1);
        t2.get$contextHandle().tearDownPaint$0();
      }
    },
    drawShadow$4: function(_, path, color, elevation, transparentOccluder) {
      var t2, solidColor, t3, t4, t5,
        t1 = this._canvasPool,
        shadow = H.computeShadow(path.getBounds$0(0), elevation);
      if (shadow != null) {
        t2 = H.toShadowColor(color).value;
        solidColor = H.colorComponentsToCssString(t2 >>> 16 & 255, t2 >>> 8 & 255, t2 & 255, 255);
        t1.get$context(t1).save();
        t1.get$context(t1).globalAlpha = (t2 >>> 24 & 255) / 255;
        if (transparentOccluder) {
          t2 = H._browserEngine();
          t2 = t2 !== C.BrowserEngine_1;
        } else
          t2 = false;
        t3 = shadow.offset;
        t4 = shadow.blurWidth;
        t5 = t3._dx;
        t3 = t3._dy;
        if (t2) {
          t1.get$context(t1).translate(t5, t3);
          t1.get$context(t1).filter = H._maskFilterToCanvasFilter(new P.MaskFilter(C.BlurStyle_0, t4));
          t1.get$context(t1).strokeStyle = "";
          t1.get$context(t1).fillStyle = solidColor;
        } else {
          t1.get$context(t1).filter = "none";
          t1.get$context(t1).strokeStyle = "";
          t1.get$context(t1).fillStyle = solidColor;
          t1.get$context(t1).shadowBlur = t4;
          t1.get$context(t1).shadowColor = solidColor;
          t1.get$context(t1).shadowOffsetX = t5;
          t1.get$context(t1).shadowOffsetY = t3;
        }
        t1._runPath$2(t1.get$context(t1), path);
        t1.get$context(t1).fill();
        t1.get$context(t1).restore();
      }
    },
    _closeCurrentCanvas$0: function() {
      var t2, t3,
        t1 = this._canvasPool;
      if (t1.__engine$_canvas != null) {
        t1._restoreContextSave$0();
        t1._contextHandle.reset$0(0);
        t2 = t1._activeCanvasList;
        if (t2 == null)
          t2 = t1._activeCanvasList = H.setRuntimeTypeInfo([], type$.JSArray_CanvasElement);
        t3 = t1.__engine$_canvas;
        t3.toString;
        t2.push(t3);
        t1._contextHandle = t1.__engine$_context = t1.__engine$_canvas = null;
      }
      this._childOverdraw = true;
      this._cachedLastCssFont = null;
    },
    setCssFont$1: function(cssFont) {
      var t1;
      if (cssFont !== this._cachedLastCssFont) {
        t1 = this._canvasPool;
        t1.get$context(t1).font = cssFont;
        this._cachedLastCssFont = cssFont;
      }
    },
    fillText$4$shadows: function(_, text, x, y, shadows) {
      var t1 = this._canvasPool,
        ctx = t1.get$context(t1);
      C.CanvasRenderingContext2D_methods.fillText$3(ctx, text, x, y);
    },
    fillText$3: function($receiver, text, x, y) {
      return this.fillText$4$shadows($receiver, text, x, y, null);
    },
    drawParagraph$2: function(_, paragraph, offset) {
      var paragraphElement, t1, t2, clipElements, t3, _i, clipElement, _this = this;
      if (paragraph.get$drawOnCanvas() && !_this._childOverdraw) {
        paragraph.paint$2(_this, offset);
        return;
      }
      paragraphElement = H._drawParagraphElement(paragraph, offset, null);
      t1 = _this._canvasPool;
      t2 = t1._clipStack;
      t1 = t1._currentTransform;
      if (t2 != null) {
        clipElements = H._clipContent(t2, paragraphElement, offset, t1);
        for (t1 = clipElements.length, t2 = _this.rootElement, t3 = _this.__engine$_children, _i = 0; _i < clipElements.length; clipElements.length === t1 || (0, H.throwConcurrentModificationError)(clipElements), ++_i) {
          clipElement = clipElements[_i];
          t2.appendChild(clipElement);
          t3.push(clipElement);
        }
      } else {
        H.setElementTransform(paragraphElement, H.transformWithOffset(t1, offset).__engine$_m4storage);
        _this.rootElement.appendChild(paragraphElement);
      }
      _this.__engine$_children.push(paragraphElement);
      t1 = paragraphElement.style;
      t1.left = "0px";
      t1.top = "0px";
      _this._closeCurrentCanvas$0();
    },
    endOfPaint$0: function() {
      var t1, t2, t3, t4, t5, paintOrderElement, t6, t7, _this = this;
      _this._canvasPool.endOfPaint$0();
      t1 = _this._elementCache;
      if (t1 != null)
        t1.commitFrame$0();
      if (_this._contains3dTransform) {
        t1 = H._browserEngine();
        t1 = t1 === C.BrowserEngine_1;
      } else
        t1 = false;
      if (t1)
        for (t1 = _this.rootElement, t2 = J.get$children$x(t1), t2 = t2.get$iterator(t2), t3 = _this.__engine$_children, t4 = H._instanceType(t2)._precomputed1; t2.moveNext$0();) {
          t5 = t4._as(t2.__interceptors$_current);
          paintOrderElement = document.createElement("div");
          t6 = paintOrderElement.style;
          t7 = C.CssStyleDeclaration_methods._browserPropertyName$1(t6, "transform");
          t6.setProperty(t7, "translate3d(0,0,0)", "");
          paintOrderElement.appendChild(t5);
          t1.appendChild(paintOrderElement);
          t3.push(paintOrderElement);
        }
      t1 = _this.rootElement.firstChild;
      t2 = type$.HtmlElement;
      if (t2._is(t1) && t1.tagName.toLowerCase() === "canvas") {
        t1 = t2._as(t1).style;
        t1.zIndex = "-1";
      }
    }
  };
  H.BrowserEngine.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.OperatingSystem.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H._CanvasPool.prototype = {
    get$context: function(_) {
      var t1,
        ctx = this.__engine$_context;
      if (ctx == null) {
        this._createCanvas$0();
        t1 = this.__engine$_context;
        t1.toString;
        ctx = t1;
      }
      return ctx;
    },
    get$contextHandle: function() {
      if (this.__engine$_canvas == null)
        this._createCanvas$0();
      var t1 = this._contextHandle;
      t1.toString;
      return t1;
    },
    _createCanvas$0: function() {
      var canvas0, requiresClearRect, t2, t3, t4, t5, exception, ctx, _this = this,
        reused = false,
        canvas = null,
        t1 = _this.__engine$_canvas;
      if (t1 != null) {
        t1.width = 0;
        _this.__engine$_canvas.height = 0;
        _this.__engine$_canvas = null;
      }
      t1 = _this._reusablePool;
      if (t1 != null && t1.length !== 0) {
        t1.toString;
        canvas0 = C.JSArray_methods.removeAt$1(t1, 0);
        _this.__engine$_canvas = canvas0;
        canvas = canvas0;
        reused = true;
        requiresClearRect = true;
      } else {
        t1 = _this._widthInBitmapPixels;
        t2 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
        t3 = _this._heightInBitmapPixels;
        t4 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
        canvas = _this._allocCanvas$2(t1, t3);
        t5 = canvas;
        _this.__engine$_canvas = t5;
        if (t5 == null) {
          H._reduceCanvasMemoryUsage();
          canvas = _this._allocCanvas$2(t1, t3);
        }
        t5 = canvas.style;
        t5.position = "absolute";
        t1 = H.S(t1 / t2) + "px";
        t5.width = t1;
        t1 = H.S(t3 / t4) + "px";
        t5.height = t1;
        requiresClearRect = false;
      }
      t1 = _this._rootElement;
      t2 = t1.lastChild;
      t3 = canvas;
      if (t2 == null ? t3 != null : t2 !== t3)
        t1.appendChild(canvas);
      try {
        if (reused)
          canvas.style.removeProperty("z-index");
        _this.__engine$_context = canvas.getContext("2d");
      } catch (exception) {
        H.unwrapException(exception);
      }
      t1 = _this.__engine$_context;
      if (t1 == null) {
        H._reduceCanvasMemoryUsage();
        t1 = _this.__engine$_context = canvas.getContext("2d");
      }
      t2 = _this._density;
      _this._contextHandle = new H.ContextStateHandle(t1, _this, t2, C.BlendMode_3, C.StrokeCap_0, C.StrokeJoin_0);
      ctx = _this.get$context(_this);
      ctx.save();
      ++_this._saveContextCount;
      ctx.setTransform(1, 0, 0, 1, 0, 0);
      if (requiresClearRect)
        ctx.clearRect(0, 0, _this._widthInBitmapPixels * t2, _this._heightInBitmapPixels * t2);
      ctx.scale(H.EnginePlatformDispatcher_browserDevicePixelRatio() * t2, H.EnginePlatformDispatcher_browserDevicePixelRatio() * t2);
      _this._replayClipStack$0();
    },
    _allocCanvas$2: function(width, height) {
      var exception,
        t1 = document,
        canvas = t1.createElement.apply(t1, ["CANVAS"]);
      if (canvas != null) {
        try {
          t1 = this._density;
          J.set$width$x(canvas, C.JSNumber_methods.ceil$0(width * t1));
          J.set$height$x(canvas, C.JSNumber_methods.ceil$0(height * t1));
        } catch (exception) {
          H.unwrapException(exception);
          return null;
        }
        return type$.CanvasElement._as(canvas);
      }
      return null;
    },
    clear$0: function(_) {
      var ctx, e, exception, t1, t2, _this = this;
      _this.super$_SaveStackTracking$clear(0);
      if (_this.__engine$_canvas != null) {
        ctx = _this.__engine$_context;
        if (ctx != null)
          try {
            ctx.font = "";
          } catch (exception) {
            e = H.unwrapException(exception);
            if (!J.$eq$(e.name, "NS_ERROR_FAILURE"))
              throw exception;
          }
      }
      if (_this.__engine$_canvas != null) {
        _this._restoreContextSave$0();
        _this._contextHandle.reset$0(0);
        t1 = _this._activeCanvasList;
        if (t1 == null)
          t1 = _this._activeCanvasList = H.setRuntimeTypeInfo([], type$.JSArray_CanvasElement);
        t2 = _this.__engine$_canvas;
        t2.toString;
        t1.push(t2);
        _this._contextHandle = _this.__engine$_context = null;
      }
      _this._reusablePool = _this._activeCanvasList;
      _this._contextHandle = _this.__engine$_context = _this.__engine$_canvas = _this._activeCanvasList = null;
    },
    _replaySingleSaveEntry$4: function(clipDepth, prevTransform, transform, clipStack) {
      var clipCount, t1, t2, clipEntry, clipTimeTransform, t3, t4, ratio, t5, path, _this = this,
        ctx = _this.get$context(_this);
      if (clipStack != null)
        for (clipCount = clipStack.length, t1 = _this._density, t2 = type$.SurfacePath; clipDepth < clipCount; ++clipDepth) {
          clipEntry = clipStack[clipDepth];
          clipTimeTransform = clipEntry.currentTransform;
          t3 = clipTimeTransform.__engine$_m4storage;
          t4 = prevTransform.__engine$_m4storage;
          if (t3[0] !== t4[0] || t3[1] !== t4[1] || t3[4] !== t4[4] || t3[5] !== t4[5] || t3[12] !== t4[12] || t3[13] !== t4[13]) {
            ratio = window.devicePixelRatio;
            ratio = (ratio === 0 ? 1 : ratio) * t1;
            ctx.setTransform(ratio, 0, 0, ratio, 0, 0);
            ctx.transform(t3[0], t3[1], t3[4], t3[5], t3[12], t3[13]);
            prevTransform = clipTimeTransform;
          }
          t3 = clipEntry.rect;
          if (t3 != null) {
            ctx.beginPath();
            t4 = t3.left;
            t5 = t3.top;
            ctx.rect(t4, t5, t3.right - t4, t3.bottom - t5);
            ctx.clip();
          } else {
            t3 = clipEntry.rrect;
            if (t3 != null) {
              path = P.Path_Path();
              path.addRRect$1(0, t3);
              _this._runPath$2(ctx, t2._as(path));
              ctx.clip();
            } else {
              t3 = clipEntry.path;
              if (t3 != null) {
                _this._runPath$2(ctx, t3);
                if (t3._fillType === C.PathFillType_0)
                  ctx.clip();
                else
                  ctx.clip("evenodd");
              }
            }
          }
        }
      t1 = transform.__engine$_m4storage;
      t2 = prevTransform.__engine$_m4storage;
      if (t1[0] !== t2[0] || t1[1] !== t2[1] || t1[4] !== t2[4] || t1[5] !== t2[5] || t1[12] !== t2[12] || t1[13] !== t2[13]) {
        ratio = H.EnginePlatformDispatcher_browserDevicePixelRatio() * _this._density;
        ctx.setTransform(ratio, 0, 0, ratio, 0, 0);
        ctx.transform(t1[0], t1[1], t1[4], t1[5], t1[12], t1[13]);
      }
      return clipDepth;
    },
    _replayClipStack$0: function() {
      var t1, len, clipDepth, saveStackIndex, saveEntry, prevTransform0, _this = this,
        ctx = _this.get$context(_this),
        prevTransform = H.Matrix4$identity();
      for (t1 = _this._saveStack, len = t1.length, clipDepth = 0, saveStackIndex = 0; saveStackIndex < len; ++saveStackIndex, prevTransform = prevTransform0) {
        saveEntry = t1[saveStackIndex];
        prevTransform0 = saveEntry.transform;
        clipDepth = _this._replaySingleSaveEntry$4(clipDepth, prevTransform, prevTransform0, saveEntry.clipStack);
        ctx.save();
        ++_this._saveContextCount;
      }
      _this._replaySingleSaveEntry$4(clipDepth, prevTransform, _this._currentTransform, _this._clipStack);
    },
    endOfPaint$0: function() {
      var t2, _i, e, t3,
        t1 = this._reusablePool;
      if (t1 != null) {
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          e = t1[_i];
          t3 = $.___browserEngine;
          if (t3 == null) {
            t3 = H.detectBrowserEngineByVendorAgent(window.navigator.vendor, window.navigator.userAgent.toLowerCase());
            if ($.___browserEngine == null)
              $.___browserEngine = t3;
            else
              t3 = H.throwExpression(H.LateError$fieldADI("_browserEngine"));
          }
          if (t3 === C.BrowserEngine_1) {
            e.height = 0;
            e.width = 0;
          }
          t3 = e.parentNode;
          if (t3 != null)
            t3.removeChild(e);
        }
        this._reusablePool = null;
      }
      this._restoreContextSave$0();
    },
    _restoreContextSave$0: function() {
      for (; this._saveContextCount !== 0;) {
        this.__engine$_context.restore();
        --this._saveContextCount;
      }
    },
    translate$2: function(_, dx, dy) {
      var _this = this;
      _this.super$_SaveStackTracking$translate(0, dx, dy);
      if (_this.__engine$_canvas != null)
        _this.get$context(_this).translate(dx, dy);
    },
    _clipRect$2: function(ctx, rect) {
      var t1, t2;
      ctx.beginPath();
      t1 = rect.left;
      t2 = rect.top;
      ctx.rect(t1, t2, rect.right - t1, rect.bottom - t2);
      ctx.clip();
    },
    _clipRRect$2: function(ctx, rrect) {
      var path = P.Path_Path();
      path.addRRect$1(0, rrect);
      this._runPath$2(ctx, type$.SurfacePath._as(path));
      ctx.clip();
    },
    clipPath$1: function(_, path) {
      var ctx, _this = this;
      _this.super$_SaveStackTracking$clipPath(0, path);
      if (_this.__engine$_canvas != null) {
        ctx = _this.get$context(_this);
        _this._runPath$2(ctx, path);
        if (path._fillType === C.PathFillType_0)
          ctx.clip();
        else
          ctx.clip("evenodd");
      }
    },
    _runPath$2: function(ctx, path) {
      var p, t1, iter, verb, w, points, len, i, t2, t3;
      ctx.beginPath();
      p = $.$get$_CanvasPool__runBuffer();
      t1 = path.pathRef;
      iter = new H.PathRefIterator(t1);
      iter.PathRefIterator$1(t1);
      for (; verb = iter.next$1(0, p), verb !== 6;)
        switch (verb) {
          case 0:
            ctx.moveTo(p[0], p[1]);
            break;
          case 1:
            ctx.lineTo(p[2], p[3]);
            break;
          case 4:
            ctx.bezierCurveTo(p[2], p[3], p[4], p[5], p[6], p[7]);
            break;
          case 2:
            ctx.quadraticCurveTo(p[2], p[3], p[4], p[5]);
            break;
          case 3:
            w = t1._conicWeights[iter._conicWeightIndex];
            points = new H.Conic(p[0], p[1], p[2], p[3], p[4], p[5], w).toQuads$0();
            len = points.length;
            for (i = 1; i < len; i += 2) {
              t2 = points[i];
              t3 = points[i + 1];
              ctx.quadraticCurveTo(t2._dx, t2._dy, t3._dx, t3._dy);
            }
            break;
          case 5:
            ctx.closePath();
            break;
          default:
            throw H.wrapException(P.UnimplementedError$("Unknown path verb " + verb));
        }
    },
    _runPathWithOffset$4: function(ctx, path, offsetX, offsetY) {
      var p, t1, iter, verb, w, points, len, i, t2, t3;
      ctx.beginPath();
      p = $.$get$_CanvasPool__runBuffer();
      t1 = path.pathRef;
      iter = new H.PathRefIterator(t1);
      iter.PathRefIterator$1(t1);
      for (; verb = iter.next$1(0, p), verb !== 6;)
        switch (verb) {
          case 0:
            ctx.moveTo(p[0] + offsetX, p[1] + offsetY);
            break;
          case 1:
            ctx.lineTo(p[2] + offsetX, p[3] + offsetY);
            break;
          case 4:
            ctx.bezierCurveTo(p[2] + offsetX, p[3] + offsetY, p[4] + offsetX, p[5] + offsetY, p[6] + offsetX, p[7] + offsetY);
            break;
          case 2:
            ctx.quadraticCurveTo(p[2] + offsetX, p[3] + offsetY, p[4] + offsetX, p[5] + offsetY);
            break;
          case 3:
            w = t1._conicWeights[iter._conicWeightIndex];
            points = new H.Conic(p[0], p[1], p[2], p[3], p[4], p[5], w).toQuads$0();
            len = points.length;
            for (i = 1; i < len; i += 2) {
              t2 = points[i];
              t3 = points[i + 1];
              ctx.quadraticCurveTo(t2._dx + offsetX, t2._dy + offsetY, t3._dx + offsetX, t3._dy + offsetY);
            }
            break;
          case 5:
            ctx.closePath();
            break;
          default:
            throw H.wrapException(P.UnimplementedError$("Unknown path verb " + verb));
        }
    },
    drawPath$2: function(_, path, style) {
      var t2, _this = this,
        shaderBounds = _this.get$contextHandle()._shaderBounds,
        t1 = type$.SurfacePath;
      if (shaderBounds == null)
        _this._runPath$2(_this.get$context(_this), t1._as(path));
      else
        _this._runPathWithOffset$4(_this.get$context(_this), t1._as(path), -shaderBounds.left, -shaderBounds.top);
      t1 = _this.get$contextHandle();
      t2 = path._fillType;
      if (style === C.PaintingStyle_1)
        t1.context.stroke();
      else {
        t1 = t1.context;
        if (t2 === C.PathFillType_0)
          t1.fill();
        else
          t1.fill("evenodd");
      }
    },
    dispose$0: function(_) {
      var t1 = H._browserEngine();
      if (t1 === C.BrowserEngine_1 && this.__engine$_canvas != null) {
        t1 = this.__engine$_canvas;
        t1.height = 0;
        t1.width = 0;
      }
      this._clearActiveCanvasList$0();
    },
    _clearActiveCanvasList$0: function() {
      var t2, _i, c, t3,
        t1 = this._activeCanvasList;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          c = t1[_i];
          t3 = $.___browserEngine;
          if (t3 == null) {
            t3 = H.detectBrowserEngineByVendorAgent(window.navigator.vendor, window.navigator.userAgent.toLowerCase());
            if ($.___browserEngine == null)
              $.___browserEngine = t3;
            else
              t3 = H.throwExpression(H.LateError$fieldADI("_browserEngine"));
          }
          if (t3 === C.BrowserEngine_1) {
            c.height = 0;
            c.width = 0;
          }
          t3 = c.parentNode;
          if (t3 != null)
            t3.removeChild(c);
        }
      this._activeCanvasList = null;
    }
  };
  H.ContextStateHandle.prototype = {
    set$fillStyle: function(_, colorOrGradient) {
      var t1 = this._currentFillStyle;
      if (colorOrGradient == null ? t1 != null : colorOrGradient !== t1) {
        this._currentFillStyle = colorOrGradient;
        this.context.fillStyle = colorOrGradient;
      }
    },
    set$strokeStyle: function(_, colorOrGradient) {
      var t1 = this._currentStrokeStyle;
      if (colorOrGradient == null ? t1 != null : colorOrGradient !== t1) {
        this._currentStrokeStyle = colorOrGradient;
        this.context.strokeStyle = colorOrGradient;
      }
    },
    setUpPaint$2: function(paint, shaderBounds) {
      var t1, t2, paintStyle, colorString, maskFilter, tempVector, shadowOffsetX, shadowOffsetY, _this = this;
      _this._lastUsedPaint = paint;
      t1 = paint.strokeWidth;
      if (t1 == null)
        t1 = 1;
      if (t1 !== _this._currentLineWidth) {
        _this._currentLineWidth = t1;
        _this.context.lineWidth = t1;
      }
      t1 = paint.blendMode;
      if (t1 != _this._currentBlendMode) {
        _this._currentBlendMode = t1;
        t1 = H._stringForBlendMode(t1);
        if (t1 == null)
          t1 = "source-over";
        _this.context.globalCompositeOperation = t1;
      }
      if (C.StrokeCap_0 !== _this._currentStrokeCap) {
        _this._currentStrokeCap = C.StrokeCap_0;
        t1 = H._stringForStrokeCap(C.StrokeCap_0);
        t1.toString;
        _this.context.lineCap = t1;
      }
      if (C.StrokeJoin_0 !== _this._currentStrokeJoin) {
        _this._currentStrokeJoin = C.StrokeJoin_0;
        _this.context.lineJoin = H._stringForStrokeJoin(C.StrokeJoin_0);
      }
      t1 = paint.shader;
      if (t1 != null) {
        t2 = _this._canvasPool;
        paintStyle = type$.EngineGradient._as(t1).createPaintStyle$3(t2.get$context(t2), shaderBounds, _this.density);
        _this.set$fillStyle(0, paintStyle);
        _this.set$strokeStyle(0, paintStyle);
        _this._shaderBounds = shaderBounds;
        _this.context.translate(shaderBounds.left, shaderBounds.top);
      } else {
        t1 = paint.color;
        if (t1 != null) {
          colorString = H.colorToCssString(t1);
          _this.set$fillStyle(0, colorString);
          _this.set$strokeStyle(0, colorString);
        } else {
          _this.set$fillStyle(0, "#000000");
          _this.set$strokeStyle(0, "#000000");
        }
      }
      maskFilter = paint.maskFilter;
      t1 = H._browserEngine();
      if (!(t1 === C.BrowserEngine_1 || false)) {
        if (!J.$eq$(_this._currentFilter, maskFilter)) {
          _this._currentFilter = maskFilter;
          _this.context.filter = H._maskFilterToCanvasFilter(maskFilter);
        }
      } else if (maskFilter != null) {
        t1 = _this.context;
        t1.save();
        t1.shadowBlur = maskFilter._sigma * 2;
        t2 = paint.color;
        if (t2 != null) {
          t2 = H.colorToCssString(P.Color$fromARGB(255, t2.get$value(t2) >>> 16 & 255, t2.get$value(t2) >>> 8 & 255, t2.get$value(t2) & 255));
          t2.toString;
          t1.shadowColor = t2;
        } else {
          t2 = H.colorToCssString(C.Color_4278190080);
          t2.toString;
          t1.shadowColor = t2;
        }
        t1.translate(-50000, 0);
        tempVector = new Float32Array(2);
        t2 = $.$get$window()._debugDevicePixelRatio;
        tempVector[0] = 50000 * (t2 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t2);
        t2 = _this._canvasPool;
        t2._currentTransform.transform2$1(tempVector);
        shadowOffsetX = tempVector[0];
        shadowOffsetY = tempVector[1];
        tempVector[1] = 0;
        tempVector[0] = 0;
        t2._currentTransform.transform2$1(tempVector);
        t1.shadowOffsetX = shadowOffsetX - tempVector[0];
        t1.shadowOffsetY = shadowOffsetY - tempVector[1];
      }
    },
    tearDownPaint$0: function() {
      var _this = this,
        t1 = _this._lastUsedPaint;
      if ((t1 == null ? null : t1.maskFilter) != null) {
        t1 = H._browserEngine();
        t1 = t1 === C.BrowserEngine_1 || false;
      } else
        t1 = false;
      if (t1)
        _this.context.restore();
      t1 = _this._shaderBounds;
      if (t1 != null) {
        _this.context.translate(-t1.left, -t1.top);
        _this._shaderBounds = null;
      }
    },
    paint$1: function(style) {
      var t1 = this.context;
      if (style === C.PaintingStyle_1)
        t1.stroke();
      else
        t1.fill();
    },
    reset$0: function(_) {
      var _this = this,
        t1 = _this.context;
      t1.fillStyle = "";
      _this._currentFillStyle = t1.fillStyle;
      t1.strokeStyle = "";
      _this._currentStrokeStyle = t1.strokeStyle;
      t1.shadowBlur = 0;
      t1.shadowColor = "none";
      t1.shadowOffsetX = 0;
      t1.shadowOffsetY = 0;
      t1.globalCompositeOperation = "source-over";
      _this._currentBlendMode = C.BlendMode_3;
      t1.lineWidth = 1;
      _this._currentLineWidth = 1;
      t1.lineCap = "butt";
      _this._currentStrokeCap = C.StrokeCap_0;
      t1.lineJoin = "miter";
      _this._currentStrokeJoin = C.StrokeJoin_0;
      _this._shaderBounds = null;
    }
  };
  H._SaveStackTracking.prototype = {
    clear$0: function(_) {
      C.JSArray_methods.set$length(this._saveStack, 0);
      this._clipStack = null;
      this._currentTransform = H.Matrix4$identity();
    },
    save$0: function(_) {
      var t1 = this._currentTransform,
        t2 = new H.Matrix40(new Float32Array(16));
      t2.setFrom$1(t1);
      t1 = this._clipStack;
      t1 = t1 == null ? null : P.List_List$from(t1, true, type$._SaveClipEntry);
      this._saveStack.push(new H._SaveStackEntry(t2, t1));
    },
    restore$0: function(_) {
      var entry,
        t1 = this._saveStack;
      if (t1.length === 0)
        return;
      entry = t1.pop();
      this._currentTransform = entry.transform;
      this._clipStack = entry.clipStack;
    },
    translate$2: function(_, dx, dy) {
      this._currentTransform.translate$2(0, dx, dy);
    },
    transform$1: function(_, matrix4) {
      this._currentTransform.multiply$1(0, new H.Matrix40(matrix4));
    },
    clipRect$1: function(_, rect) {
      var t2, t3,
        t1 = this._clipStack;
      if (t1 == null)
        t1 = this._clipStack = H.setRuntimeTypeInfo([], type$.JSArray__SaveClipEntry);
      t2 = this._currentTransform;
      t3 = new H.Matrix40(new Float32Array(16));
      t3.setFrom$1(t2);
      t1.push(new H._SaveClipEntry(rect, null, null, t3));
    },
    clipRRect$1: function(_, rrect) {
      var t2, t3,
        t1 = this._clipStack;
      if (t1 == null)
        t1 = this._clipStack = H.setRuntimeTypeInfo([], type$.JSArray__SaveClipEntry);
      t2 = this._currentTransform;
      t3 = new H.Matrix40(new Float32Array(16));
      t3.setFrom$1(t2);
      t1.push(new H._SaveClipEntry(null, rrect, null, t3));
    },
    clipPath$1: function(_, path) {
      var t2, t3,
        t1 = this._clipStack;
      if (t1 == null)
        t1 = this._clipStack = H.setRuntimeTypeInfo([], type$.JSArray__SaveClipEntry);
      t2 = this._currentTransform;
      t3 = new H.Matrix40(new Float32Array(16));
      t3.setFrom$1(t2);
      t1.push(new H._SaveClipEntry(null, null, path, t3));
    }
  };
  H.CkCanvas.prototype = {
    clipPath$2: function(_, path, doAntiAlias) {
      J.clipPath$3$x(this.skCanvas, path.get$skiaObject(), $.$get$_clipOpIntersect(), doAntiAlias);
    },
    clipRRect$2: function(_, rrect, doAntiAlias) {
      J.clipRRect$3$x(this.skCanvas, H.toSkRRect(rrect), $.$get$_clipOpIntersect(), true);
    },
    clipRect$3: function(_, rect, clipOp, doAntiAlias) {
      J.clipRect$3$x(this.skCanvas, H.toSkRect(rect), $.$get$_skClipOps()[clipOp.index], doAntiAlias);
    },
    drawCircle$3: function(_, c, radius, paint) {
      J.drawCircle$4$x(this.skCanvas, c._dx, c._dy, radius, paint.get$skiaObject());
    },
    drawDRRect$3: function(_, outer, inner, paint) {
      J.drawDRRect$3$x(this.skCanvas, H.toSkRRect(outer), H.toSkRRect(inner), paint.get$skiaObject());
    },
    drawPaint$1: function(_, paint) {
      J.drawPaint$1$x(this.skCanvas, paint.get$skiaObject());
    },
    drawParagraph$2: function(_, paragraph, offset) {
      J.drawParagraph$3$x(this.skCanvas, paragraph.get$skiaObject(), offset._dx, offset._dy);
    },
    drawPath$2: function(_, path, paint) {
      J.drawPath$2$x(this.skCanvas, path.get$skiaObject(), paint.get$skiaObject());
    },
    drawPicture$1: function(_, picture) {
      J.drawPicture$1$x(this.skCanvas, picture.get$skiaObject());
    },
    drawRRect$2: function(_, rrect, paint) {
      J.drawRRect$2$x(this.skCanvas, H.toSkRRect(rrect), paint.get$skiaObject());
    },
    drawRect$2: function(_, rect, paint) {
      J.drawRect$2$x(this.skCanvas, H.toSkRect(rect), paint.get$skiaObject());
    },
    drawShadow$4: function(_, path, color, elevation, transparentOccluder) {
      var t1 = $.$get$window()._debugDevicePixelRatio;
      if (t1 == null)
        t1 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      H.drawSkShadow(this.skCanvas, path, color, elevation, transparentOccluder, t1);
    },
    restore$0: function(_) {
      J.restore$0$x(this.skCanvas);
    },
    restoreToCount$1: function(_, count) {
      J.restoreToCount$1$x(this.skCanvas, count);
    },
    save$0: function(_) {
      return J.save$0$x(this.skCanvas);
    },
    saveLayer$2: function(_, bounds, paint) {
      var t1 = paint == null ? null : paint.get$skiaObject();
      J.saveLayer$4$x(this.skCanvas, t1, H.toSkRect(bounds), null, null);
    },
    transform$1: function(_, matrix4) {
      J.concat$1$x(this.skCanvas, H.toSkMatrixFromFloat32(matrix4));
    },
    translate$2: function(_, dx, dy) {
      J.translate$2$x(this.skCanvas, dx, dy);
    },
    get$pictureSnapshot: function() {
      return null;
    }
  };
  H.RecordingCkCanvas.prototype = {
    clipPath$2: function(_, path, doAntiAlias) {
      this.super$CkCanvas$clipPath(0, path, doAntiAlias);
      this.pictureSnapshot._commands.push(new H.CkClipPathCommand(path, doAntiAlias));
    },
    clipRRect$2: function(_, rrect, doAntiAlias) {
      this.super$CkCanvas$clipRRect(0, rrect, true);
      this.pictureSnapshot._commands.push(new H.CkClipRRectCommand(rrect, true));
    },
    clipRect$3: function(_, rect, clipOp, doAntiAlias) {
      this.super$CkCanvas$clipRect(0, rect, clipOp, doAntiAlias);
      this.pictureSnapshot._commands.push(new H.CkClipRectCommand(rect, clipOp, doAntiAlias));
    },
    drawCircle$3: function(_, c, radius, paint) {
      this.super$CkCanvas$drawCircle(0, c, radius, paint);
      this.pictureSnapshot._commands.push(new H.CkDrawCircleCommand(c, radius, paint));
    },
    drawDRRect$3: function(_, outer, inner, paint) {
      this.super$CkCanvas$drawDRRect(0, outer, inner, paint);
      this.pictureSnapshot._commands.push(new H.CkDrawDRRectCommand(outer, inner, paint));
    },
    drawPaint$1: function(_, paint) {
      this.super$CkCanvas$drawPaint(0, paint);
      this.pictureSnapshot._commands.push(new H.CkDrawPaintCommand(paint));
    },
    drawParagraph$2: function(_, paragraph, offset) {
      this.super$CkCanvas$drawParagraph(0, paragraph, offset);
      this.pictureSnapshot._commands.push(new H.CkDrawParagraphCommand(paragraph, offset));
    },
    drawPath$2: function(_, path, paint) {
      this.super$CkCanvas$drawPath(0, path, paint);
      this.pictureSnapshot._commands.push(new H.CkDrawPathCommand(path, paint));
    },
    drawPicture$1: function(_, picture) {
      this.super$CkCanvas$drawPicture(0, picture);
      this.pictureSnapshot._commands.push(new H.CkDrawPictureCommand(picture));
    },
    drawRRect$2: function(_, rrect, paint) {
      this.super$CkCanvas$drawRRect(0, rrect, paint);
      this.pictureSnapshot._commands.push(new H.CkDrawRRectCommand(rrect, paint));
    },
    drawRect$2: function(_, rect, paint) {
      this.super$CkCanvas$drawRect(0, rect, paint);
      this.pictureSnapshot._commands.push(new H.CkDrawRectCommand(rect, paint));
    },
    drawShadow$4: function(_, path, color, elevation, transparentOccluder) {
      this.super$CkCanvas$drawShadow(0, path, color, elevation, transparentOccluder);
      this.pictureSnapshot._commands.push(new H.CkDrawShadowCommand(path, color, elevation, transparentOccluder));
    },
    restore$0: function(_) {
      this.super$CkCanvas$restore(0);
      this.pictureSnapshot._commands.push(C.C_CkRestoreCommand);
    },
    restoreToCount$1: function(_, count) {
      this.super$CkCanvas$restoreToCount(0, count);
      this.pictureSnapshot._commands.push(new H.CkRestoreToCountCommand(count));
    },
    save$0: function(_) {
      this.pictureSnapshot._commands.push(C.C_CkSaveCommand);
      return this.super$CkCanvas$save(0);
    },
    saveLayer$2: function(_, bounds, paint) {
      this.super$CkCanvas$saveLayer(0, bounds, paint);
      this.pictureSnapshot._commands.push(new H.CkSaveLayerCommand(bounds, paint));
    },
    transform$1: function(_, matrix4) {
      this.super$CkCanvas$transform(0, matrix4);
      this.pictureSnapshot._commands.push(new H.CkTransformCommand(matrix4));
    },
    translate$2: function(_, dx, dy) {
      this.super$CkCanvas$translate(0, dx, dy);
      this.pictureSnapshot._commands.push(new H.CkTranslateCommand(dx, dy));
    },
    get$pictureSnapshot: function() {
      return this.pictureSnapshot;
    }
  };
  H.CkPictureSnapshot.prototype = {
    toPicture$0: function() {
      var t2, t3, _i, skPicture,
        recorder = new self.window.flutterCanvasKit.PictureRecorder(),
        t1 = J.getInterceptor$x(recorder),
        skCanvas = t1.beginRecording$1(recorder, H.toSkRect(this._bounds));
      for (t2 = this._commands, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
        t2[_i].apply$1(skCanvas);
      skPicture = t1.finishRecordingAsPicture$0(recorder);
      t1.delete$0(recorder);
      return skPicture;
    }
  };
  H.CkPaintCommand.prototype = {};
  H.CkSaveCommand.prototype = {
    apply$1: function(canvas) {
      J.save$0$x(canvas);
    }
  };
  H.CkRestoreCommand.prototype = {
    apply$1: function(canvas) {
      J.restore$0$x(canvas);
    }
  };
  H.CkRestoreToCountCommand.prototype = {
    apply$1: function(canvas) {
      J.restoreToCount$1$x(canvas, this.count);
    }
  };
  H.CkTranslateCommand.prototype = {
    apply$1: function(canvas) {
      J.translate$2$x(canvas, this.dx, this.dy);
    }
  };
  H.CkTransformCommand.prototype = {
    apply$1: function(canvas) {
      J.concat$1$x(canvas, H.toSkMatrixFromFloat32(this.matrix4));
    }
  };
  H.CkClipRectCommand.prototype = {
    apply$1: function(canvas) {
      J.clipRect$3$x(canvas, H.toSkRect(this.rect), $.$get$_skClipOps()[this.clipOp.index], this.doAntiAlias);
    }
  };
  H.CkClipRRectCommand.prototype = {
    apply$1: function(canvas) {
      J.clipRRect$3$x(canvas, H.toSkRRect(this.rrect), $.$get$_clipOpIntersect(), true);
    }
  };
  H.CkClipPathCommand.prototype = {
    apply$1: function(canvas) {
      J.clipPath$3$x(canvas, this.path.get$skiaObject(), $.$get$_clipOpIntersect(), this.doAntiAlias);
    }
  };
  H.CkDrawPaintCommand.prototype = {
    apply$1: function(canvas) {
      J.drawPaint$1$x(canvas, this.paint.get$skiaObject());
    }
  };
  H.CkDrawRectCommand.prototype = {
    apply$1: function(canvas) {
      J.drawRect$2$x(canvas, H.toSkRect(this.rect), this.paint.get$skiaObject());
    }
  };
  H.CkDrawRRectCommand.prototype = {
    apply$1: function(canvas) {
      J.drawRRect$2$x(canvas, H.toSkRRect(this.rrect), this.paint.get$skiaObject());
    }
  };
  H.CkDrawDRRectCommand.prototype = {
    apply$1: function(canvas) {
      J.drawDRRect$3$x(canvas, H.toSkRRect(this.outer), H.toSkRRect(this.inner), this.paint.get$skiaObject());
    }
  };
  H.CkDrawCircleCommand.prototype = {
    apply$1: function(canvas) {
      var t1 = this.c;
      J.drawCircle$4$x(canvas, t1._dx, t1._dy, this.radius, this.paint.get$skiaObject());
    }
  };
  H.CkDrawPathCommand.prototype = {
    apply$1: function(canvas) {
      J.drawPath$2$x(canvas, this.path.get$skiaObject(), this.paint.get$skiaObject());
    }
  };
  H.CkDrawShadowCommand.prototype = {
    apply$1: function(canvas) {
      var _this = this,
        t1 = $.$get$window()._debugDevicePixelRatio;
      if (t1 == null)
        t1 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      H.drawSkShadow(canvas, _this.path, _this.color, _this.elevation, _this.transparentOccluder, t1);
    }
  };
  H.CkDrawParagraphCommand.prototype = {
    apply$1: function(canvas) {
      var t1 = this.offset;
      J.drawParagraph$3$x(canvas, this.paragraph.get$skiaObject(), t1._dx, t1._dy);
    }
  };
  H.CkDrawPictureCommand.prototype = {
    apply$1: function(canvas) {
      J.drawPicture$1$x(canvas, this.picture.get$skiaObject());
    }
  };
  H.CkSaveLayerCommand.prototype = {
    apply$1: function(canvas) {
      var t1 = this.paint;
      t1 = t1 == null ? null : t1.get$skiaObject();
      J.saveLayer$4$x(canvas, t1, H.toSkRect(this.bounds), null, null);
    }
  };
  H.CanvasKit.prototype = {};
  H.CanvasKitInitOptions.prototype = {};
  H.CanvasKitInitPromise.prototype = {};
  H.ColorSpace.prototype = {};
  H.SkWebGLContextOptions.prototype = {};
  H.SkSurface.prototype = {};
  H.SkGrContext.prototype = {};
  H.SkFontSlantEnum.prototype = {};
  H.SkFontSlant.prototype = {};
  H.SkFontWeightEnum.prototype = {};
  H.SkFontWeight.prototype = {};
  H.SkAffinityEnum.prototype = {};
  H.SkAffinity.prototype = {};
  H.SkTextDirectionEnum.prototype = {};
  H.SkTextDirection.prototype = {};
  H.SkTextAlignEnum.prototype = {};
  H.SkTextAlign.prototype = {};
  H.SkRectHeightStyleEnum.prototype = {};
  H.SkRectHeightStyle.prototype = {};
  H.SkRectWidthStyleEnum.prototype = {};
  H.SkRectWidthStyle.prototype = {};
  H.SkVertexModeEnum.prototype = {};
  H.SkVertexMode.prototype = {};
  H.SkPointModeEnum.prototype = {};
  H.SkPointMode.prototype = {};
  H.SkClipOpEnum.prototype = {};
  H.SkClipOp.prototype = {};
  H.SkFillTypeEnum.prototype = {};
  H.SkFillType.prototype = {};
  H.SkPathOpEnum.prototype = {};
  H.SkPathOp.prototype = {};
  H.SkBlurStyleEnum.prototype = {};
  H.SkBlurStyle.prototype = {};
  H.SkStrokeCapEnum.prototype = {};
  H.SkStrokeCap.prototype = {};
  H.SkPaintStyleEnum.prototype = {};
  H.SkPaintStyle.prototype = {};
  H.SkBlendModeEnum.prototype = {};
  H.SkBlendMode.prototype = {};
  H.SkStrokeJoinEnum.prototype = {};
  H.SkStrokeJoin.prototype = {};
  H.SkFilterQualityEnum.prototype = {};
  H.SkFilterQuality.prototype = {};
  H.SkTileModeEnum.prototype = {};
  H.SkTileMode.prototype = {};
  H.SkFilterModeEnum.prototype = {};
  H.SkFilterMode.prototype = {};
  H.SkMipmapModeEnum.prototype = {};
  H.SkMipmapMode.prototype = {};
  H.SkAlphaTypeEnum.prototype = {};
  H.SkAlphaType.prototype = {};
  H.SkColorTypeEnum.prototype = {};
  H.SkColorType.prototype = {};
  H.SkAnimatedImage.prototype = {};
  H.SkImage.prototype = {};
  H.SkShaderNamespace.prototype = {};
  H.SkShader.prototype = {};
  H.SkMaskFilterNamespace.prototype = {};
  H.SkPaint.prototype = {};
  H.SkMaskFilter.prototype = {};
  H.SkColorFilterNamespace.prototype = {};
  H.SkColorFilter.prototype = {};
  H.SkImageFilterNamespace.prototype = {};
  H.SkImageFilter.prototype = {};
  H.SkPathNamespace.prototype = {};
  H._NativeFloat32ArrayType.prototype = {};
  H.SkFloat32List.prototype = {};
  H.SkPath.prototype = {};
  H.SkContourMeasureIter.prototype = {};
  H.SkContourMeasure.prototype = {};
  H.SkPictureRecorder.prototype = {};
  H.SkCanvas.prototype = {};
  H.SkPicture.prototype = {};
  H.SkParagraphBuilderNamespace.prototype = {};
  H.SkParagraphBuilder.prototype = {};
  H.SkParagraphStyle.prototype = {};
  H.SkParagraphStyleProperties.prototype = {};
  H.SkTextStyle.prototype = {};
  H.SkTextDecorationStyleEnum.prototype = {};
  H.SkTextDecorationStyle.prototype = {};
  H.SkTextBaselineEnum.prototype = {};
  H.SkTextBaseline.prototype = {};
  H.SkPlaceholderAlignmentEnum.prototype = {};
  H.SkPlaceholderAlignment.prototype = {};
  H.SkTextStyleProperties.prototype = {};
  H.SkStrutStyleProperties.prototype = {};
  H.SkFontStyle.prototype = {};
  H.SkTextShadow.prototype = {};
  H.SkFontFeature.prototype = {};
  H.SkTypeface.prototype = {};
  H.SkFont.prototype = {};
  H.SkFontMgr.prototype = {};
  H.TypefaceFontProvider.prototype = {};
  H.SkLineMetrics.prototype = {};
  H.SkParagraph.prototype = {};
  H.SkTextPosition.prototype = {};
  H.SkTextRange.prototype = {};
  H.SkVertices.prototype = {};
  H.SkTonalColors.prototype = {};
  H.SkFontMgrNamespace.prototype = {};
  H.TypefaceFontProviderNamespace.prototype = {};
  H.ProductionCollector.prototype = {
    ProductionCollector$0: function() {
      var t1 = new self.window.FinalizationRegistry(P.allowInterop(new H.ProductionCollector_closure(this)));
      if (this.__ProductionCollector__skObjectFinalizationRegistry == null)
        this.__ProductionCollector__skObjectFinalizationRegistry = t1;
      else
        H.throwExpression(H.LateError$fieldAI("_skObjectFinalizationRegistry"));
    },
    register$2: function(_, wrapper, deletable) {
      var t1 = this.__ProductionCollector__skObjectFinalizationRegistry;
      J.register$2$x(t1 == null ? H.throwExpression(H.LateError$fieldNI("_skObjectFinalizationRegistry")) : t1, wrapper, deletable);
    },
    collect$1: function(deletable) {
      var _this = this;
      _this._skiaObjectCollectionQueue.push(deletable);
      if (_this._skiaObjectCollectionTimer == null)
        _this._skiaObjectCollectionTimer = P.Timer_Timer(C.Duration_0, new H.ProductionCollector_collect_closure(_this));
    },
    collectSkiaObjectsNow$0: function() {
      var firstError, firstStackTrace, deletable, error, stackTrace, $length, i, exception,
        _s25_ = "SkObject collection-start",
        _s23_ = "SkObject collection-end";
      window.performance.mark(_s25_);
      $length = this._skiaObjectCollectionQueue.length;
      firstError = null;
      firstStackTrace = null;
      for (i = 0; i < $length; ++i) {
        deletable = this._skiaObjectCollectionQueue[i];
        if (J.isDeleted$0$x(deletable))
          continue;
        try {
          J.delete$0$x(deletable);
        } catch (exception) {
          error = H.unwrapException(exception);
          stackTrace = H.getTraceFromException(exception);
          if (firstError == null) {
            firstError = error;
            firstStackTrace = stackTrace;
          }
        }
      }
      this._skiaObjectCollectionQueue = H.setRuntimeTypeInfo([], type$.JSArray_SkDeletable);
      window.performance.mark(_s23_);
      window.performance.measure("SkObject collection", _s25_, _s23_);
      if (firstError != null)
        throw H.wrapException(new H.SkiaObjectCollectionError(firstError, firstStackTrace));
    }
  };
  H.ProductionCollector_closure.prototype = {
    call$1: function(deletable) {
      if (!J.isDeleted$0$x(deletable))
        this.$this.collect$1(deletable);
    },
    $signature: 138
  };
  H.ProductionCollector_collect_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._skiaObjectCollectionTimer = null;
      t1.collectSkiaObjectsNow$0();
    },
    $signature: 0
  };
  H.SkiaObjectCollectionError.prototype = {
    toString$0: function(_) {
      return "SkiaObjectCollectionError: " + H.S(this.error) + "\n" + H.S(this.stackTrace);
    },
    $isError: 1,
    get$stackTrace: function() {
      return this.stackTrace;
    }
  };
  H.SkDeletable.prototype = {};
  H.JsConstructor.prototype = {};
  H.SkObjectFinalizationRegistry.prototype = {};
  H.SkData.prototype = {};
  H.SkImageInfo.prototype = {};
  H.CanvasKitCanvas.prototype = {
    save$0: function(_) {
      this.__engine$_canvas.save$0(0);
    },
    saveLayer$2: function(_, bounds, paint) {
      this.__engine$_canvas.saveLayer$2(0, bounds, type$.CkPaint._as(paint));
    },
    restore$0: function(_) {
      this.__engine$_canvas.restore$0(0);
    },
    translate$2: function(_, dx, dy) {
      this.__engine$_canvas.translate$2(0, dx, dy);
    },
    transform$1: function(_, matrix4) {
      this.__engine$_canvas.transform$1(0, H.toMatrix32(matrix4));
    },
    clipRect$3$clipOp$doAntiAlias: function(_, rect, clipOp, doAntiAlias) {
      this.__engine$_canvas.clipRect$3(0, rect, clipOp, doAntiAlias);
    },
    clipRect$1: function($receiver, rect) {
      return this.clipRect$3$clipOp$doAntiAlias($receiver, rect, C.ClipOp_1, true);
    },
    clipRect$2$doAntiAlias: function($receiver, rect, doAntiAlias) {
      return this.clipRect$3$clipOp$doAntiAlias($receiver, rect, C.ClipOp_1, doAntiAlias);
    },
    clipRRect$2$doAntiAlias: function(_, rrect, doAntiAlias) {
      this.__engine$_canvas.clipRRect$2(0, rrect, true);
    },
    clipRRect$1: function($receiver, rrect) {
      return this.clipRRect$2$doAntiAlias($receiver, rrect, true);
    },
    clipPath$2$doAntiAlias: function(_, path, doAntiAlias) {
      this.__engine$_canvas.clipPath$2(0, type$.CkPath._as(path), doAntiAlias);
    },
    clipPath$1: function($receiver, path) {
      return this.clipPath$2$doAntiAlias($receiver, path, true);
    },
    drawRect$2: function(_, rect, paint) {
      this.__engine$_canvas.drawRect$2(0, rect, type$.CkPaint._as(paint));
    },
    drawRRect$2: function(_, rrect, paint) {
      this.__engine$_canvas.drawRRect$2(0, rrect, type$.CkPaint._as(paint));
    },
    drawDRRect$3: function(_, outer, inner, paint) {
      this.__engine$_canvas.drawDRRect$3(0, outer, inner, type$.CkPaint._as(paint));
    },
    drawCircle$3: function(_, c, radius, paint) {
      this.__engine$_canvas.drawCircle$3(0, c, radius, type$.CkPaint._as(paint));
    },
    drawPath$2: function(_, path, paint) {
      this.__engine$_canvas.drawPath$2(0, type$.CkPath._as(path), type$.CkPaint._as(paint));
    },
    drawParagraph$2: function(_, paragraph, offset) {
      this.__engine$_canvas.drawParagraph$2(0, type$.CkParagraph._as(paragraph), offset);
    },
    drawShadow$4: function(_, path, color, elevation, transparentOccluder) {
      this.__engine$_canvas.drawShadow$4(0, type$.CkPath._as(path), color, elevation, transparentOccluder);
    }
  };
  H.HtmlViewEmbedder.prototype = {
    set$frameSize: function(size) {
      if (this._frameSize.$eq(0, size))
        return;
      C.JSArray_methods.set$length(this._activeCompositionOrder, 0);
      this._frameSize = size;
    },
    handlePlatformViewCall$2: function(data, callback) {
      var decoded = C.C_StandardMethodCodec.decodeMethodCall$1(data);
      switch (decoded.method) {
        case "create":
          this._create$2(decoded, callback);
          return;
        case "dispose":
          callback.toString;
          this._dispose$2(decoded, callback);
          return;
      }
      callback.call$1(null);
    },
    _create$2: function(methodCall, callback) {
      var args = methodCall.$arguments,
        t1 = J.getInterceptor$asx(args),
        viewId = t1.$index(args, "id"),
        viewType = t1.$index(args, "viewType");
      this._views.$index(0, viewId);
      $.$get$platformViewRegistry().registeredFactories.$index(0, viewType);
      callback.toString;
      callback.call$1(C.C_StandardMethodCodec.encodeErrorEnvelope$3$code$details$message("unregistered_view_type", "unregistered view type: " + H.S(viewType), "trying to create a view with an unregistered type"));
      return;
    },
    _dispose$2: function(methodCall, callback) {
      var viewId = methodCall.$arguments;
      if (viewId == null || !this._views.containsKey$1(0, viewId)) {
        callback.call$1(C.C_StandardMethodCodec.encodeErrorEnvelope$3$code$details$message("unknown_view", "view id: " + H.S(viewId), "trying to dispose an unknown view"));
        return;
      }
      this._viewsToDispose.add$1(0, viewId);
      callback.call$1(C.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
    },
    getCurrentCanvases$0: function() {
      var t1, t2, i,
        canvases = H.setRuntimeTypeInfo([], type$.JSArray_nullable_CkCanvas);
      for (t1 = this._compositionOrder, t2 = this._pictureRecorders, i = 0; i < t1.length; ++i)
        canvases.push(t2.$index(0, t1[i]).get$recordingCanvas());
      return canvases;
    },
    _cleanUpClipDefs$1: function(viewId) {
      var clipDefs, nodesToRemove, t2, t3, child, _i, node, $parent,
        t1 = this._svgClipDefs;
      if (t1.containsKey$1(0, viewId)) {
        clipDefs = null.querySelector$1(0, "#sk_path_defs");
        nodesToRemove = H.setRuntimeTypeInfo([], type$.JSArray_Element);
        t2 = t1.$index(0, viewId);
        t2.toString;
        for (t3 = clipDefs.get$children(clipDefs), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          child = t3.get$current(t3);
          if (t2.contains$1(0, child.get$id(child)))
            nodesToRemove.push(child);
        }
        for (t2 = nodesToRemove.length, _i = 0; _i < nodesToRemove.length; nodesToRemove.length === t2 || (0, H.throwConcurrentModificationError)(nodesToRemove), ++_i) {
          node = nodesToRemove[_i];
          $parent = node.parentNode;
          $parent.removeChild(node);
        }
        t1.$index(0, viewId).clear$0(0);
      }
    },
    submitFrame$0: function(_) {
      var t1, t2, t3, i, viewId, frame, t4, t5, t6, unusedViews, overlay, t7, t8, t9, _this = this;
      _this.disposeViews$0();
      for (t1 = _this._compositionOrder, t2 = _this._overlays, t3 = _this._pictureRecorders, i = 0; i < t1.length; ++i) {
        viewId = t1[i];
        _this._ensureOverlayInitialized$1(viewId);
        frame = t2.$index(0, viewId).acquireFrame$1(_this._frameSize);
        t4 = J.getCanvas$0$x(frame.skiaSurface._surface);
        t5 = t3.$index(0, viewId).endRecording$0();
        t6 = t5.rawSkiaObject;
        J.drawPicture$1$x(t4, t6 == null ? t5._doResurrect$0() : t6);
        frame.submit$0(0);
      }
      t3.clear$0(0);
      t3 = _this._activeCompositionOrder;
      if (H._listEquals(t1, t3)) {
        C.JSArray_methods.set$length(t1, 0);
        return;
      }
      unusedViews = P.LinkedHashSet_LinkedHashSet$from(t3, type$.int);
      C.JSArray_methods.set$length(t3, 0);
      for (t4 = _this._rootViews, i = 0; i < t1.length; ++i) {
        viewId = t1[i];
        unusedViews.remove$1(0, viewId);
        t5 = t4.$index(0, viewId);
        t5.toString;
        overlay = t2.$index(0, viewId).htmlElement;
        t5.remove$0(0);
        $.skiaSceneHost.appendChild(t5);
        t5 = overlay.parentNode;
        if (t5 != null)
          t5.removeChild(overlay);
        $.skiaSceneHost.appendChild(overlay);
        t3.push(viewId);
      }
      C.JSArray_methods.set$length(t1, 0);
      for (t1 = P._LinkedHashSetIterator$(unusedViews, unusedViews._collection$_modifications), t3 = H._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t5 = t3._as(t1._collection$_current);
        if (t2.$index(0, t5) != null) {
          t6 = $.$get$OverlayCache_instance();
          t7 = t2.$index(0, t5);
          t8 = t7.htmlElement;
          t9 = t8.parentNode;
          if (t9 != null)
            t9.removeChild(t8);
          t9 = t6.__engine$_cache;
          if (t9.length < t6.maximumSize)
            t9.push(t7);
          else {
            t6 = t8.parentNode;
            if (t6 != null)
              t6.removeChild(t8);
            t6 = t7._surface;
            if (t6 != null)
              t6.dispose$0(0);
          }
          t2.remove$1(0, t5);
        }
        t4.$index(0, t5);
      }
    },
    disposeViews$0: function() {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, _this = this,
        t1 = _this._viewsToDispose;
      if (t1._collection$_length === 0)
        return;
      for (t2 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t3 = _this._currentCompositionParams, t4 = _this._clipCount, t5 = _this._viewsToRecomposite, t6 = _this._svgClipDefs, t7 = _this._overlays, t8 = H._instanceType(t2)._precomputed1, t9 = _this._rootViews, t10 = _this._views; t2.moveNext$0();) {
        t11 = t8._as(t2._collection$_current);
        t9.$index(0, t11).remove$0(0);
        t10.remove$1(0, t11);
        t9.remove$1(0, t11);
        if (t7.$index(0, t11) != null) {
          t12 = $.$get$OverlayCache_instance();
          t13 = t7.$index(0, t11);
          t14 = t13.htmlElement;
          t15 = t14.parentNode;
          if (t15 != null)
            t15.removeChild(t14);
          t15 = t12.__engine$_cache;
          if (t15.length < t12.maximumSize)
            t15.push(t13);
          else {
            t12 = t14.parentNode;
            if (t12 != null)
              t12.removeChild(t14);
            t12 = t13._surface;
            if (t12 != null)
              t12.dispose$0(0);
          }
          t7.remove$1(0, t11);
        }
        t3.remove$1(0, t11);
        t4.remove$1(0, t11);
        t5.remove$1(0, t11);
        _this._cleanUpClipDefs$1(t11);
        t6.remove$1(0, t11);
      }
      t1.clear$0(0);
    },
    _ensureOverlayInitialized$1: function(viewId) {
      var overlay,
        t1 = this._overlays;
      if (t1.$index(0, viewId) != null)
        return;
      overlay = $.$get$OverlayCache_instance().reserveOverlay$0();
      t1.$indexSet(0, viewId, overlay == null ? new H.Surface(W._ElementFactoryProvider_createElement_tag("flt-canvas-container", null), this) : overlay);
    }
  };
  H.OverlayCache.prototype = {
    reserveOverlay$0: function() {
      var t1 = this.__engine$_cache;
      if (t1.length === 0)
        return null;
      return t1.pop();
    }
  };
  H.MutatorType.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.Mutator.prototype = {
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof H.Mutator))
        return false;
      t1 = _this.type;
      if (t1 !== other.type)
        return false;
      switch (t1) {
        case C.MutatorType_0:
          return J.$eq$(_this.rect, other.rect);
        case C.MutatorType_1:
          return true;
        case C.MutatorType_2:
          return _this.path == other.path;
        case C.MutatorType_3:
          return _this.matrix == other.matrix;
        case C.MutatorType_4:
          return _this.alpha == other.alpha;
        default:
          return false;
      }
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.type, _this.rect, _this.rrect, _this.path, _this.matrix, _this.alpha, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  H.MutatorsStack.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (other === this)
        return true;
      return other instanceof H.MutatorsStack && H._listEquals(other._mutators, this._mutators);
    },
    get$hashCode: function(_) {
      return P.hashList(this._mutators);
    },
    get$iterator: function(_) {
      var t1 = this._mutators;
      t1 = new H.ReversedListIterable(t1, H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"));
      return new H.ListIterator(t1, t1.get$length(t1));
    }
  };
  H.FontFallbackData.prototype = {
    registerFallbackFont$2: function(family, bytes) {
      var t2, t3, countedFamily,
        t1 = $.__canvasKit,
        typeface = J.MakeTypefaceFromData$1$x(J.RefDefault$0$x(J.get$FontMgr$x(t1 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t1)), bytes);
      if (typeface == null) {
        $.$get$printWarning().call$1("Failed to parse fallback font " + family + " as a font.");
        return;
      }
      t1 = this.fontFallbackCounts;
      t1.putIfAbsent$2(0, family, new H.FontFallbackData_registerFallbackFont_closure());
      t2 = t1.$index(0, family);
      t2.toString;
      t3 = t1.$index(0, family);
      t3.toString;
      t1.$indexSet(0, family, t3 + 1);
      countedFamily = family + " " + H.S(t2);
      this.registeredFallbackFonts.push(H._RegisteredFont$(bytes, countedFamily, typeface));
      this.globalFontFallbacks.push(countedFamily);
    }
  };
  H.FontFallbackData_createNotoFontTree_closure.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_CodeunitRange);
    },
    $signature: 62
  };
  H.FontFallbackData_registerFallbackFont_closure.prototype = {
    call$0: function() {
      return 0;
    },
    $signature: 28
  };
  H.findFontsForMissingCodeunits_closure.prototype = {
    call$1: function(u) {
      return this.data.codeUnitsWithNoKnownFont.contains$1(0, u);
    },
    $signature: 21
  };
  H._makeResolvedNotoFontFromCss_closure.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_CodeunitRange);
    },
    $signature: 62
  };
  H._registerSymbolsAndEmoji_extractUrlFromCss.prototype = {
    call$1: function(css) {
      var t1, t2, urlStart;
      for (t1 = new P._SyncStarIterator(P.LineSplitter_split(css)._outerHelper()); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        if (C.JSString_methods.startsWith$1(t2, "  src:")) {
          urlStart = C.JSString_methods.indexOf$1(t2, "url(");
          if (urlStart === -1) {
            $.$get$printWarning().call$1("Unable to resolve Noto font URL: " + t2);
            return null;
          }
          return C.JSString_methods.substring$2(t2, urlStart + 4, C.JSString_methods.indexOf$1(t2, ")"));
        }
      }
      $.$get$printWarning().call$1("Unable to determine URL for Noto font");
      return null;
    },
    $signature: 105
  };
  H.findMinimumFontsForCodeUnits_closure.prototype = {
    call$1: function(font) {
      return C.JSArray_methods.contains$1($.$get$_cjkFonts(), font);
    },
    $signature: 133
  };
  H.findMinimumFontsForCodeUnits_closure0.prototype = {
    call$1: function(codeUnit) {
      return this._box_0.bestFont.resolvedFont.tree.root.containsDeep$1(codeUnit);
    },
    $signature: 21
  };
  H.NotoFont.prototype = {
    ensureResolved$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, $async$temp1;
      var $async$ensureResolved$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = $async$self.resolvedFont == null ? 2 : 3;
              break;
            case 2:
              // then
              t1 = $async$self._decodingCompleter;
              $async$goto = t1 == null ? 4 : 6;
              break;
            case 4:
              // then
              $async$self._decodingCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
              t1 = $.$get$notoDownloadQueue().downloader;
              t2 = $async$self.name;
              $async$temp1 = H;
              $async$goto = 7;
              return P._asyncAwait(t1.downloadAsString$1("https://fonts.googleapis.com/css2?family=" + H.stringReplaceAllUnchecked(t2, " ", "+")), $async$ensureResolved$0);
            case 7:
              // returning from await.
              $async$self.resolvedFont = $async$temp1._makeResolvedNotoFontFromCss($async$result, t2);
              $async$self._decodingCompleter.complete$0(0);
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              $async$goto = 8;
              return P._asyncAwait(t1.future, $async$ensureResolved$0);
            case 8:
              // returning from await.
            case 5:
              // join
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$ensureResolved$0, $async$completer);
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  H.CodeunitRange.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (!(other instanceof H.CodeunitRange))
        return false;
      return other.start === this.start && other.end === this.end;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.start, this.end, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "[" + this.start + ", " + this.end + "]";
    }
  };
  H._ResolvedNotoFont.prototype = {
    get$name: function(receiver) {
      return this.name;
    }
  };
  H._ResolvedNotoSubset.prototype = {
    toString$0: function(_) {
      return "_ResolvedNotoSubset(" + this.family + ", " + this.url + ")";
    }
  };
  H.FallbackFontDownloadQueue.prototype = {
    add$1: function(_, subset) {
      var t1, firstInBatch, _this = this;
      if (_this.downloadedSubsets.contains$1(0, subset) || _this.pendingSubsets.containsKey$1(0, subset.url))
        return;
      t1 = _this.pendingSubsets;
      firstInBatch = t1.get$isEmpty(t1);
      t1.$indexSet(0, subset.url, subset);
      if (firstInBatch)
        P.Timer_Timer(C.Duration_0, _this.get$startDownloads());
    },
    startDownloads$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, t2, t3, t4, downloadOrder, _i, url, t1, downloads, downloadedData;
      var $async$startDownloads$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.String;
              downloads = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Future_void);
              downloadedData = P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Uint8List);
              for (t1 = $async$self.pendingSubsets, t2 = t1.get$values(t1), t2 = t2.get$iterator(t2), t3 = type$.void; t2.moveNext$0();) {
                t4 = t2.get$current(t2);
                downloads.$indexSet(0, t4.url, P.Future_Future(new H.FallbackFontDownloadQueue_startDownloads_closure($async$self, t4, downloadedData), t3));
              }
              $async$goto = 2;
              return P._asyncAwait(P.Future_wait(downloads.get$values(downloads), t3), $async$startDownloads$0);
            case 2:
              // returning from await.
              t2 = downloadedData.get$keys(downloadedData);
              t2 = P.List_List$of(t2, true, H._instanceType(t2)._eval$1("Iterable.E"));
              C.JSArray_methods.sort$0(t2);
              t3 = H._arrayInstanceType(t2)._eval$1("ReversedListIterable<1>");
              downloadOrder = P.List_List$of(new H.ReversedListIterable(t2, t3), true, t3._eval$1("ListIterable.E"));
              t2 = downloadOrder.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              url = downloadOrder[_i];
              t3 = t1.remove$1(0, url);
              t3.toString;
              t4 = downloadedData.$index(0, url);
              t4.toString;
              $.$get$FontFallbackData__instance().registerFallbackFont$2(t3.family, t4);
              $async$goto = t1.get$isEmpty(t1) ? 6 : 7;
              break;
            case 6:
              // then
              t3 = $._skiaFontCollection.ensureFontsLoaded$0();
              $async$self._fontsLoading = t3;
              $async$handler = 8;
              $async$goto = 11;
              return P._asyncAwait(t3, $async$startDownloads$0);
            case 11:
              // returning from await.
              $async$next.push(10);
              // goto finally
              $async$goto = 9;
              break;
            case 8:
              // uncaught
              $async$next = [1];
            case 9:
              // finally
              $async$handler = 1;
              $async$self._fontsLoading = null;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 10:
              // after finally
              H.sendFontChangeMessage();
            case 7:
              // join
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$goto = t1.get$isNotEmpty(t1) ? 12 : 13;
              break;
            case 12:
              // then
              $async$goto = 14;
              return P._asyncAwait($async$self.startDownloads$0(), $async$startDownloads$0);
            case 14:
              // returning from await.
            case 13:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$startDownloads$0, $async$completer);
    }
  };
  H.FallbackFontDownloadQueue_startDownloads_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, e, t1, exception, t2, buffer, $async$exception;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              buffer = null;
              $async$handler = 4;
              t1 = $async$self.subset;
              $async$goto = 7;
              return P._asyncAwait($async$self.$this.downloader.downloadAsBytes$2$debugDescription(t1.url, t1.family), $async$call$0);
            case 7:
              // returning from await.
              buffer = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = H.unwrapException($async$exception);
              t1 = $async$self.subset;
              t2 = t1.url;
              $async$self.$this.pendingSubsets.remove$1(0, t2);
              $.$get$printWarning().call$1("Failed to load font " + t1.family + " at " + t2);
              $.$get$printWarning().call$1(J.toString$0$(e));
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              t1 = $async$self.subset;
              $async$self.$this.downloadedSubsets.add$1(0, t1);
              $async$self.downloadedData.$indexSet(0, t1.url, H.NativeUint8List_NativeUint8List$view(buffer, 0, null));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 33
  };
  H.NotoDownloader.prototype = {
    downloadAsBytes$2$debugDescription: function(url, debugDescription) {
      var result = C.Window_methods.fetch$1(window, url).then$1$1(0, new H.NotoDownloader_downloadAsBytes_closure(), type$.ByteBuffer);
      return result;
    },
    downloadAsString$1: function(url) {
      var result = C.Window_methods.fetch$1(window, url).then$1$1(0, new H.NotoDownloader_downloadAsString_closure(), type$.String);
      return result;
    }
  };
  H.NotoDownloader_downloadAsBytes_closure.prototype = {
    call$1: function(fetchResult) {
      return J.then$1$1$x(J.arrayBuffer$0$x(fetchResult), new H.NotoDownloader_downloadAsBytes__closure(), type$.ByteBuffer);
    },
    $signature: 159
  };
  H.NotoDownloader_downloadAsBytes__closure.prototype = {
    call$1: function(x) {
      return type$.ByteBuffer._as(x);
    },
    $signature: 75
  };
  H.NotoDownloader_downloadAsString_closure.prototype = {
    call$1: function(response) {
      return J.then$1$1$x(J.text$0$x(response), new H.NotoDownloader_downloadAsString__closure(), type$.String);
    },
    $signature: 181
  };
  H.NotoDownloader_downloadAsString__closure.prototype = {
    call$1: function(x) {
      return H._asString(x);
    },
    $signature: 189
  };
  H.SkiaFontCollection.prototype = {
    ensureFontsLoaded$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, t3, _i, font, t4, t5;
      var $async$ensureFontsLoaded$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait($async$self._loadFonts$0(), $async$ensureFontsLoaded$0);
            case 2:
              // returning from await.
              t1 = $async$self.fontProvider;
              if (t1 != null) {
                J.delete$0$x(t1);
                $async$self.fontProvider = null;
              }
              t1 = $.__canvasKit;
              $async$self.fontProvider = J.Make$0$x(J.get$TypefaceFontProvider$x(t1 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t1));
              t1 = $async$self.familyToTypefaceMap;
              t1.clear$0(0);
              for (t2 = $async$self._registeredFonts, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
                font = t2[_i];
                t4 = $async$self.fontProvider;
                t4.toString;
                t5 = font.family;
                J.registerFont$2$x(t4, font.bytes, t5);
                J.add$1$ax(t1.putIfAbsent$2(0, t5, new H.SkiaFontCollection_ensureFontsLoaded_closure()), font.typeface);
              }
              for (t2 = $.$get$FontFallbackData__instance().registeredFallbackFonts, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
                font = t2[_i];
                t4 = $async$self.fontProvider;
                t4.toString;
                t5 = font.family;
                J.registerFont$2$x(t4, font.bytes, t5);
                J.add$1$ax(t1.putIfAbsent$2(0, t5, new H.SkiaFontCollection_ensureFontsLoaded_closure0()), font.typeface);
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$ensureFontsLoaded$0, $async$completer);
    },
    _loadFonts$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t2, t3, t4, t1, $async$temp1;
      var $async$_loadFonts$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._unloadedFonts;
              if (t1.length === 0) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$temp1 = J;
              $async$goto = 3;
              return P._asyncAwait(P.Future_wait(t1, type$.nullable__RegisteredFont), $async$_loadFonts$0);
            case 3:
              // returning from await.
              t2 = $async$temp1.get$iterator$ax($async$result), t3 = $async$self._registeredFonts;
            case 4:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t4 = t2.get$current(t2);
              if (t4 != null)
                t3.push(t4);
              // goto for condition
              $async$goto = 4;
              break;
            case 5:
              // after for
              C.JSArray_methods.set$length(t1, 0);
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_loadFonts$0, $async$completer);
    },
    registerFonts$1: function(assetManager) {
      return this.registerFonts$body$SkiaFontCollection(assetManager);
    },
    registerFonts$body$SkiaFontCollection: function(assetManager) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, e, exception, t1, fontManifest, t2, t3, registeredRoboto, t4, t5, t6, fontAssets, byteData, $async$exception;
      var $async$registerFonts$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              byteData = null;
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(assetManager.load$1(0, "FontManifest.json"), $async$registerFonts$1);
            case 7:
              // returning from await.
              byteData = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (t1 instanceof H.AssetManagerException) {
                e = t1;
                if (e.httpStatus === 404) {
                  $.$get$printWarning().call$1("Font manifest does not exist at `" + e.url + "` \u2013 ignoring.");
                  // goto return
                  $async$goto = 1;
                  break;
                } else
                  throw $async$exception;
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              fontManifest = C.C_JsonCodec.decode$1(0, C.C_Utf8Codec.decode$1(0, H.NativeUint8List_NativeUint8List$view(byteData.buffer, 0, null)));
              if (fontManifest == null)
                throw H.wrapException(P.AssertionError$(string$.There_));
              for (t1 = J.cast$1$0$ax(fontManifest, type$.Map_String_dynamic), t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = $async$self._unloadedFonts, t3 = H._instanceType(t1)._precomputed1, registeredRoboto = false; t1.moveNext$0();) {
                t4 = t3._as(t1._current);
                t5 = J.getInterceptor$asx(t4);
                t6 = t5.$index(t4, "family");
                t6.toString;
                fontAssets = t5.$index(t4, "fonts");
                if (t6 === "Roboto")
                  registeredRoboto = true;
                for (t4 = J.get$iterator$ax(fontAssets); t4.moveNext$0();)
                  t2.push($async$self._registerFont$2(assetManager.getAssetUrl$1(J.$index$asx(t4.get$current(t4), "asset")), t6));
              }
              if (!registeredRoboto)
                t2.push($async$self._registerFont$2("https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Me5WZLCzYlKw.ttf", "Roboto"));
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$registerFonts$1, $async$completer);
    },
    _registerFont$2: function(url, family) {
      return this._registerFont$body$SkiaFontCollection(url, family);
    },
    _registerFont$body$SkiaFontCollection: function(url, family) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.nullable__RegisteredFont),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, e, exception, bytes, t1, typeface, buffer, $async$exception;
      var $async$_registerFont$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              buffer = null;
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(C.Window_methods.fetch$1(window, url).then$1$1(0, $async$self.get$_getArrayBuffer(), type$.ByteBuffer), $async$_registerFont$2);
            case 7:
              // returning from await.
              buffer = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = H.unwrapException($async$exception);
              $.$get$printWarning().call$1("Failed to load font " + family + " at " + url);
              $.$get$printWarning().call$1(J.toString$0$(e));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              bytes = H.NativeUint8List_NativeUint8List$view(buffer, 0, null);
              t1 = $.__canvasKit;
              typeface = J.MakeTypefaceFromData$1$x(J.RefDefault$0$x(J.get$FontMgr$x(t1 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t1)), bytes);
              if (typeface != null) {
                $async$returnValue = H._RegisteredFont$(bytes, family, typeface);
                // goto return
                $async$goto = 1;
                break;
              } else {
                $.$get$printWarning().call$1("Failed to load font " + family + " at " + url);
                $.$get$printWarning().call$1("Verify that " + url + " contains a valid font.");
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_registerFont$2, $async$completer);
    },
    _getArrayBuffer$1: function(fetchResult) {
      return J.then$1$1$x(J.arrayBuffer$0$x(fetchResult), new H.SkiaFontCollection__getArrayBuffer_closure(), type$.ByteBuffer);
    }
  };
  H.SkiaFontCollection_ensureFontsLoaded_closure.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_SkTypeface);
    },
    $signature: 88
  };
  H.SkiaFontCollection_ensureFontsLoaded_closure0.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_SkTypeface);
    },
    $signature: 88
  };
  H.SkiaFontCollection__getArrayBuffer_closure.prototype = {
    call$1: function(x) {
      return type$.ByteBuffer._as(x);
    },
    $signature: 75
  };
  H._RegisteredFont.prototype = {};
  H.initializeCanvasKit__loadSubscription_set.prototype = {
    call$1: function(t1) {
      return this._box_0._loadSubscription = t1;
    },
    $signature: 246
  };
  H.initializeCanvasKit__loadSubscription_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._loadSubscription;
      return t1 == null ? H.throwExpression(H.LateError$localNI("loadSubscription")) : t1;
    },
    $signature: 251
  };
  H.initializeCanvasKit_closure.prototype = {
    call$1: function(_) {
      J.cancel$0$z(this._loadSubscription_get.call$0());
      J.then$1$x(self.window.CanvasKitInit({locateFile: P.allowInterop(new H.initializeCanvasKit__closure())}), P.allowInterop(new H.initializeCanvasKit__closure0(this.canvasKitCompleter)));
    },
    $signature: 3
  };
  H.initializeCanvasKit__closure.prototype = {
    call$2: function(file, unusedBase) {
      return "https://unpkg.com/canvaskit-wasm@0.25.1/bin/profiling/" + file;
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 165
  };
  H.initializeCanvasKit__closure0.prototype = {
    call$1: function(ck) {
      $.__canvasKit = ck;
      self.window.flutterCanvasKit = ck;
      this.canvasKitCompleter.complete$0(0);
    },
    $signature: 200
  };
  H.IntervalTree.prototype = {};
  H.IntervalTree_IntervalTree$createFromRanges_closure.prototype = {
    call$2: function(key, rangeList) {
      var t1, t2, t3, t4, t5;
      for (t1 = J.get$iterator$ax(rangeList), t2 = this.intervals, t3 = this.T._eval$1("IntervalTreeNode<0>"); t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        t5 = t4.start;
        t4 = t4.end;
        t2.push(new H.IntervalTreeNode(key, t5, t4, t4, t3));
      }
    },
    $signature: function() {
      return this.T._eval$1("~(0,List<CodeunitRange>)");
    }
  };
  H.IntervalTree_IntervalTree$createFromRanges_closure0.prototype = {
    call$2: function(a, b) {
      return a.low - b.low;
    },
    $signature: function() {
      return this.T._eval$1("int(IntervalTreeNode<0>,IntervalTreeNode<0>)");
    }
  };
  H.IntervalTree_IntervalTree$createFromRanges__makeBalancedTree.prototype = {
    call$1: function(nodes) {
      var mid, root,
        t1 = nodes.length;
      if (t1 === 0)
        return null;
      if (t1 === 1)
        return C.JSArray_methods.get$single(nodes);
      mid = t1 / 2 | 0;
      root = nodes[mid];
      root.left = this.call$1(C.JSArray_methods.sublist$2(nodes, 0, mid));
      root.right = this.call$1(C.JSArray_methods.sublist$1(nodes, mid + 1));
      return root;
    },
    $signature: function() {
      return this.T._eval$1("IntervalTreeNode<0>?(List<IntervalTreeNode<0>>)");
    }
  };
  H.IntervalTree_IntervalTree$createFromRanges__computeHigh.prototype = {
    call$1: function(root) {
      var t3, _this = this,
        t1 = root.left,
        t2 = t1 == null;
      if (t2 && root.right == null)
        root.computedHigh = root.high;
      else if (t2) {
        t1 = root.right;
        t1.toString;
        _this.call$1(t1);
        root.computedHigh = Math.max(root.high, root.right.computedHigh);
      } else {
        t2 = root.right;
        t3 = root.high;
        if (t2 == null) {
          _this.call$1(t1);
          root.computedHigh = Math.max(t3, root.left.computedHigh);
        } else {
          _this.call$1(t2);
          t1 = root.left;
          t1.toString;
          _this.call$1(t1);
          root.computedHigh = Math.max(t3, Math.max(root.left.computedHigh, root.right.computedHigh));
        }
      }
    },
    $signature: function() {
      return this.T._eval$1("~(IntervalTreeNode<0>)");
    }
  };
  H.IntervalTreeNode.prototype = {
    containsShallow$1: function(x) {
      return this.low <= x && x <= this.high;
    },
    containsDeep$1: function(x) {
      var t1, _this = this;
      if (x > _this.computedHigh)
        return false;
      if (_this.containsShallow$1(x))
        return true;
      t1 = _this.left;
      if ((t1 == null ? null : t1.containsDeep$1(x)) === true)
        return true;
      if (x < _this.low)
        return false;
      t1 = _this.right;
      return (t1 == null ? null : t1.containsDeep$1(x)) === true;
    },
    searchForPoint$2: function(x, result) {
      var t1, _this = this;
      if (x > _this.computedHigh)
        return;
      t1 = _this.left;
      if (t1 != null)
        t1.searchForPoint$2(x, result);
      if (_this.containsShallow$1(x))
        result.push(_this.value);
      if (x < _this.low)
        return;
      t1 = _this.right;
      if (t1 != null)
        t1.searchForPoint$2(x, result);
    }
  };
  H.Layer.prototype = {};
  H.PrerollContext.prototype = {};
  H.PaintContext.prototype = {};
  H.ContainerLayer.prototype = {
    preroll$2: function(prerollContext, matrix) {
      this.paintBounds = this.prerollChildren$2(prerollContext, matrix);
    },
    prerollChildren$2: function(context, childMatrix) {
      var t1, t2, childPaintBounds, _i, layer, t3;
      for (t1 = this._layers, t2 = t1.length, childPaintBounds = C.Rect_0_0_0_0, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        layer = t1[_i];
        layer.preroll$2(context, childMatrix);
        if (childPaintBounds.left >= childPaintBounds.right || childPaintBounds.top >= childPaintBounds.bottom)
          childPaintBounds = layer.paintBounds;
        else {
          t3 = layer.paintBounds;
          if (!(t3.left >= t3.right || t3.top >= t3.bottom))
            childPaintBounds = childPaintBounds.expandToInclude$1(t3);
        }
      }
      return childPaintBounds;
    },
    paintChildren$1: function(context) {
      var t1, t2, _i, layer, t3;
      for (t1 = this._layers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        layer = t1[_i];
        t3 = layer.paintBounds;
        if (!(t3.left >= t3.right || t3.top >= t3.bottom))
          layer.paint$1(context);
      }
    }
  };
  H.RootLayer.prototype = {
    paint$1: function(context) {
      this.paintChildren$1(context);
    }
  };
  H.ClipPathEngineLayer.prototype = {
    preroll$2: function(context, matrix) {
      var childPaintBounds, clipBounds, _null = null,
        t1 = this.__engine$_clipPath,
        t2 = context.mutatorsStack._mutators;
      t2.push(new H.Mutator(C.MutatorType_2, _null, _null, t1, _null, _null));
      childPaintBounds = this.prerollChildren$2(context, matrix);
      clipBounds = H.fromSkRect(J.getBounds$0$x(t1.get$skiaObject()));
      if (childPaintBounds.overlaps$1(clipBounds))
        this.paintBounds = childPaintBounds.intersect$1(clipBounds);
      t2.pop();
    },
    paint$1: function(paintContext) {
      var t2, _this = this,
        t1 = paintContext.internalNodesCanvas;
      t1.save$0(0);
      t2 = _this.__engine$_clipBehavior;
      t1.clipPath$2(0, _this.__engine$_clipPath, t2 !== C.Clip_1);
      t2 = t2 === C.Clip_3;
      if (t2)
        t1.saveLayer$2(0, _this.paintBounds, null);
      _this.paintChildren$1(paintContext);
      if (t2)
        t1.restore$0(0);
      t1.restore$0(0);
    },
    $isClipPathEngineLayer0: 1
  };
  H.ClipRectEngineLayer.prototype = {
    preroll$2: function(context, matrix) {
      var childPaintBounds, _null = null,
        t1 = this._clipRect,
        t2 = context.mutatorsStack._mutators;
      t2.push(new H.Mutator(C.MutatorType_0, t1, _null, _null, _null, _null));
      childPaintBounds = this.prerollChildren$2(context, matrix);
      if (childPaintBounds.overlaps$1(t1))
        this.paintBounds = childPaintBounds.intersect$1(t1);
      t2.pop();
    },
    paint$1: function(paintContext) {
      var t2, t3,
        t1 = paintContext.internalNodesCanvas;
      t1.save$0(0);
      t2 = this._clipRect;
      t3 = this.__engine$_clipBehavior;
      t1.clipRect$3(0, t2, C.ClipOp_1, t3 !== C.Clip_1);
      t3 = t3 === C.Clip_3;
      if (t3)
        t1.saveLayer$2(0, t2, null);
      this.paintChildren$1(paintContext);
      if (t3)
        t1.restore$0(0);
      t1.restore$0(0);
    },
    $isClipRectEngineLayer0: 1
  };
  H.OpacityEngineLayer.prototype = {
    preroll$2: function(context, matrix) {
      var t1, t2, t3, t4, _this = this, _null = null,
        childMatrix = new H.Matrix40(new Float32Array(16));
      childMatrix.setFrom$1(matrix);
      t1 = _this.__engine$_offset;
      t2 = t1._dx;
      t1 = t1._dy;
      childMatrix.translate$2(0, t2, t1);
      t3 = H.Matrix4$identity();
      t3.setTranslationRaw$3(t2, t1, 0);
      t4 = context.mutatorsStack._mutators;
      t4.push(H.Mutator$transform(t3));
      t4.push(new H.Mutator(C.MutatorType_4, _null, _null, _null, _null, _this.__engine$_alpha));
      _this.super$ContainerLayer$preroll(context, childMatrix);
      t4.pop();
      t4.pop();
      _this.paintBounds = _this.paintBounds.translate$2(0, t2, t1);
    },
    paint$1: function(paintContext) {
      var t1, t2, t3, _this = this,
        paint = H.CkPaint$();
      paint.set$color(0, P.Color$fromARGB(_this.__engine$_alpha, 0, 0, 0));
      t1 = paintContext.internalNodesCanvas;
      t1.save$0(0);
      t2 = _this.__engine$_offset;
      t3 = t2._dx;
      t2 = t2._dy;
      t1.translate$2(0, t3, t2);
      t1.saveLayer$2(0, _this.paintBounds.shift$1(new P.Offset(-t3, -t2)), paint);
      _this.paintChildren$1(paintContext);
      t1.restore$0(0);
      t1.restore$0(0);
    },
    $isOpacityEngineLayer0: 1
  };
  H.TransformEngineLayer.prototype = {
    preroll$2: function(context, matrix) {
      var t1 = this.__engine$_transform,
        childMatrix = matrix.$mul(0, t1),
        t2 = context.mutatorsStack._mutators;
      t2.push(H.Mutator$transform(t1));
      this.paintBounds = H.transformRect(t1, this.prerollChildren$2(context, childMatrix));
      t2.pop();
    },
    paint$1: function(paintContext) {
      var t1 = paintContext.internalNodesCanvas;
      t1.save$0(0);
      t1.transform$1(0, this.__engine$_transform.__engine$_m4storage);
      this.paintChildren$1(paintContext);
      t1.restore$0(0);
    },
    $isTransformEngineLayer0: 1
  };
  H.OffsetEngineLayer.prototype = {$isOffsetEngineLayer0: 1};
  H.PictureLayer0.prototype = {
    preroll$2: function(prerollContext, matrix) {
      this.paintBounds = this.picture.cullRect.shift$1(this.offset);
    },
    paint$1: function(paintContext) {
      var t2,
        t1 = paintContext.leafNodesCanvas;
      t1.save$0(0);
      t2 = this.offset;
      t1.translate$2(0, t2._dx, t2._dy);
      t1.drawPicture$1(0, this.picture);
      t1.restore$0(0);
    }
  };
  H.PhysicalShapeEngineLayer.prototype = {
    preroll$2: function(prerollContext, matrix) {
      var t1, _this = this;
      _this.prerollChildren$2(prerollContext, matrix);
      t1 = $.$get$window()._debugDevicePixelRatio;
      if (t1 == null)
        t1 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      _this.paintBounds = H.computeSkShadowBounds(_this.__engine$_path, _this.__engine$_elevation, t1, matrix);
    },
    paint$1: function(paintContext) {
      var t2, t3, paint, saveCount, _this = this,
        t1 = _this.__engine$_elevation;
      if (t1 !== 0) {
        t2 = _this.__engine$_shadowColor;
        t2.toString;
        t3 = _this._color;
        paintContext.leafNodesCanvas.drawShadow$4(0, _this.__engine$_path, t2, t1, (t3.get$value(t3) >>> 24 & 255) !== 255);
      }
      paint = H.CkPaint$();
      paint.set$color(0, _this._color);
      t1 = _this.__engine$_clipBehavior;
      t2 = t1 === C.Clip_3;
      if (!t2)
        paintContext.leafNodesCanvas.drawPath$2(0, _this.__engine$_path, paint);
      t3 = paintContext.internalNodesCanvas;
      saveCount = t3.save$0(0);
      switch (t1) {
        case C.Clip_1:
          t3.clipPath$2(0, _this.__engine$_path, false);
          break;
        case C.Clip_2:
          t3.clipPath$2(0, _this.__engine$_path, true);
          break;
        case C.Clip_3:
          t3.clipPath$2(0, _this.__engine$_path, true);
          t3.saveLayer$2(0, _this.paintBounds, null);
          break;
        case C.Clip_0:
          break;
      }
      if (t2)
        paintContext.leafNodesCanvas.drawPaint$1(0, paint);
      _this.paintChildren$1(paintContext);
      t3.restoreToCount$1(0, saveCount);
    },
    $isPhysicalShapeEngineLayer0: 1
  };
  H.LayerScene.prototype = {
    dispose$0: function(_) {
    }
  };
  H.LayerSceneBuilder.prototype = {
    get$currentLayer: function() {
      var t1 = this.__LayerSceneBuilder_currentLayer;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("currentLayer")) : t1;
    },
    addPerformanceOverlay$2: function(enabledOptions, bounds) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    addPicture$4$isComplexHint$willChangeHint: function(offset, picture, isComplexHint, willChangeHint) {
      var t1 = this.get$currentLayer(),
        t2 = new H.PictureLayer0(type$.CkPicture._as(picture), offset, C.Rect_0_0_0_0);
      t2.parent = t1;
      t1._layers.push(t2);
    },
    addRetained$1: function(retainedLayer) {
      var t1 = this.get$currentLayer();
      type$.Layer._as(retainedLayer);
      retainedLayer.parent = t1;
      t1._layers.push(retainedLayer);
    },
    build$0: function(_) {
      return new H.LayerScene(new H.LayerTree(this.rootLayer, $.$get$window().get$physicalSize()));
    },
    pop$0: function(_) {
      var t1, _this = this;
      if (_this.get$currentLayer() === _this.rootLayer)
        return;
      t1 = _this.get$currentLayer().parent;
      t1.toString;
      _this.__LayerSceneBuilder_currentLayer = t1;
    },
    pushClipPath$3$clipBehavior$oldLayer: function(path, clipBehavior, oldLayer) {
      return this.pushLayer$1(new H.ClipPathEngineLayer(type$.CkPath._as(path), clipBehavior, H.setRuntimeTypeInfo([], type$.JSArray_Layer), C.Rect_0_0_0_0));
    },
    pushClipRect$3$clipBehavior$oldLayer: function(rect, clipBehavior, oldLayer) {
      return this.pushLayer$1(new H.ClipRectEngineLayer(rect, clipBehavior, H.setRuntimeTypeInfo([], type$.JSArray_Layer), C.Rect_0_0_0_0));
    },
    pushOffset$3$oldLayer: function(dx, dy, oldLayer) {
      var t1 = H.Matrix4$identity();
      t1.setTranslationRaw$3(dx, dy, 0);
      return this.pushLayer$1(new H.OffsetEngineLayer(t1, H.setRuntimeTypeInfo([], type$.JSArray_Layer), C.Rect_0_0_0_0));
    },
    pushOpacity$3$offset$oldLayer: function(alpha, offset, oldLayer) {
      return this.pushLayer$1(new H.OpacityEngineLayer(alpha, offset, H.setRuntimeTypeInfo([], type$.JSArray_Layer), C.Rect_0_0_0_0));
    },
    pushPhysicalShape$6$clipBehavior$color$elevation$oldLayer$path$shadowColor: function(clipBehavior, color, elevation, oldLayer, path, shadowColor) {
      return this.pushLayer$1(new H.PhysicalShapeEngineLayer(elevation, color, shadowColor, type$.CkPath._as(path), clipBehavior, H.setRuntimeTypeInfo([], type$.JSArray_Layer), C.Rect_0_0_0_0));
    },
    pushTransform$2$oldLayer: function(matrix4, oldLayer) {
      return this.pushLayer$1(new H.TransformEngineLayer(new H.Matrix40(H.toMatrix32(matrix4)), H.setRuntimeTypeInfo([], type$.JSArray_Layer), C.Rect_0_0_0_0));
    },
    setCheckerboardOffscreenLayers$1: function(checkerboard) {
    },
    setCheckerboardRasterCacheImages$1: function(checkerboard) {
    },
    setRasterizerTracingThreshold$1: function(frameInterval) {
    },
    pushLayer$1$1: function(layer) {
      var t1 = this.get$currentLayer();
      layer.parent = t1;
      t1._layers.push(layer);
      return this.__LayerSceneBuilder_currentLayer = layer;
    },
    pushLayer$1: function(layer) {
      return this.pushLayer$1$1(layer, type$.ContainerLayer);
    }
  };
  H.LayerTree.prototype = {
    paint$2$ignoreRasterCache: function(frame, ignoreRasterCache) {
      var overlayCanvases, i, t3, t4,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_nullable_CkCanvas),
        t2 = frame.canvas;
      t1.push(t2);
      overlayCanvases = frame.viewEmbedder.getCurrentCanvases$0();
      for (i = 0; i < overlayCanvases.length; ++i)
        t1.push(overlayCanvases[i]);
      t3 = this.rootLayer;
      t4 = t3.paintBounds;
      if (!t4.get$isEmpty(t4))
        t3.paintChildren$1(new H.PaintContext(new H.CkNWayCanvas(t1), t2));
    }
  };
  H.Frame.prototype = {
    raster$2$ignoreRasterCache: function(layerTree, ignoreRasterCache) {
      H.timeAction("preroll_frame", new H.Frame_raster_closure(this, layerTree, true));
      H.timeAction("apply_frame", new H.Frame_raster_closure0(this, layerTree, true));
      return true;
    }
  };
  H.Frame_raster_closure.prototype = {
    call$0: function() {
      var t1 = this.layerTree.rootLayer;
      t1.paintBounds = t1.prerollChildren$2(new H.PrerollContext(new H.MutatorsStack(H.setRuntimeTypeInfo([], type$.JSArray_Mutator))), H.Matrix4$identity());
    },
    $signature: 0
  };
  H.Frame_raster_closure0.prototype = {
    call$0: function() {
      this.layerTree.paint$2$ignoreRasterCache(this.$this, this.ignoreRasterCache);
    },
    $signature: 0
  };
  H.CompositorContext.prototype = {};
  H.CkNWayCanvas.prototype = {
    save$0: function(_) {
      var t1, saveCount, i;
      for (t1 = this._canvases, saveCount = 0, i = 0; i < t1.length; ++i)
        saveCount = t1[i].save$0(0);
      return saveCount;
    },
    saveLayer$2: function(_, bounds, paint) {
      var t1, i;
      for (t1 = this._canvases, i = 0; i < t1.length; ++i)
        t1[i].saveLayer$2(0, bounds, paint);
    },
    restore$0: function(_) {
      var t1, i;
      for (t1 = this._canvases, i = 0; i < t1.length; ++i)
        t1[i].restore$0(0);
    },
    restoreToCount$1: function(_, count) {
      var t1, i;
      for (t1 = this._canvases, i = 0; i < t1.length; ++i)
        t1[i].restoreToCount$1(0, count);
    },
    translate$2: function(_, dx, dy) {
      var t1, i;
      for (t1 = this._canvases, i = 0; i < t1.length; ++i)
        t1[i].translate$2(0, dx, dy);
    },
    transform$1: function(_, matrix) {
      var t1, i;
      for (t1 = this._canvases, i = 0; i < t1.length; ++i)
        t1[i].transform$1(0, matrix);
    },
    clipPath$2: function(_, path, doAntiAlias) {
      var t1, i;
      for (t1 = this._canvases, i = 0; i < t1.length; ++i)
        t1[i].clipPath$2(0, path, doAntiAlias);
    },
    clipRect$3: function(_, rect, clipOp, doAntiAlias) {
      var t1, i;
      for (t1 = this._canvases, i = 0; i < t1.length; ++i)
        t1[i].clipRect$3(0, rect, clipOp, doAntiAlias);
    }
  };
  H.CkPaint.prototype = {
    set$blendMode: function(value) {
      if (this._blendMode === value)
        return;
      this._blendMode = value;
      J.setBlendMode$1$x(this.get$skiaObject(), $.$get$_skBlendModes()[value.index]);
    },
    set$style: function(_, value) {
      if (this._style === value)
        return;
      this._style = value;
      J.setStyle$1$x(this.get$skiaObject(), $.$get$_skPaintStyles()[value.index]);
    },
    set$strokeWidth: function(value) {
      if (this._strokeWidth === value)
        return;
      this._strokeWidth = value;
      J.setStrokeWidth$1$x(this.get$skiaObject(), value);
    },
    set$isAntiAlias: function(value) {
      if (this._isAntiAlias === value)
        return;
      this._isAntiAlias = value;
      J.setAntiAlias$1$x(this.get$skiaObject(), value);
    },
    get$color: function(_) {
      return this._color;
    },
    set$color: function(_, value) {
      if (this._color.$eq(0, value))
        return;
      this._color = value;
      J.setColorInt$1$x(this.get$skiaObject(), value.get$value(value));
    },
    set$shader: function(value) {
      var t1, t2, _this = this;
      if (_this._shader == value)
        return;
      _this._shader = type$.nullable_CkShader._as(value);
      t1 = _this.get$skiaObject();
      t2 = _this._shader;
      J.setShader$1$x(t1, t2 == null ? null : t2.get$skiaObject());
    },
    createDefault$0: function() {
      var t2,
        paint = new self.window.flutterCanvasKit.Paint(),
        t1 = J.getInterceptor$x(paint);
      t1.setAntiAlias$1(paint, this._isAntiAlias);
      t2 = this._color;
      t1.setColorInt$1(paint, t2.get$value(t2));
      return paint;
    },
    resurrect$0: function() {
      var _this = this, _null = null,
        paint = new self.window.flutterCanvasKit.Paint(),
        t1 = _this._blendMode,
        t2 = J.getInterceptor$x(paint);
      t2.setBlendMode$1(paint, $.$get$_skBlendModes()[t1.index]);
      t1 = _this._style;
      t2.setStyle$1(paint, $.$get$_skPaintStyles()[t1.index]);
      t2.setStrokeWidth$1(paint, _this._strokeWidth);
      t2.setAntiAlias$1(paint, _this._isAntiAlias);
      t1 = _this._color;
      t2.setColorInt$1(paint, t1.get$value(t1));
      t1 = _this._shader;
      t2.setShader$1(paint, t1 == null ? _null : t1.get$skiaObject());
      t1 = _this._ckMaskFilter;
      t2.setMaskFilter$1(paint, t1 == null ? _null : t1.get$skiaObject());
      t2.setColorFilter$1(paint, _null);
      t2.setImageFilter$1(paint, _null);
      t2.setFilterQuality$1(paint, $.$get$_skFilterQualitys()[0]);
      t2.setStrokeCap$1(paint, $.$get$_skStrokeCaps()[0]);
      t2.setStrokeJoin$1(paint, $.$get$_skStrokeJoins()[0]);
      t2.setStrokeMiter$1(paint, 0);
      return paint;
    },
    delete$0: function(_) {
      var t1 = this.rawSkiaObject;
      if (t1 != null)
        J.delete$0$x(t1);
    },
    $isPaint: 1
  };
  H.CkPath.prototype = {
    set$fillType: function(newFillType) {
      if (this._fillType === newFillType)
        return;
      this._fillType = newFillType;
      J.setFillType$1$x(this.get$skiaObject(), $.$get$_skFillTypes()[newFillType.index]);
    },
    addOval$1: function(_, oval) {
      J.addOval$3$x(this.get$skiaObject(), H.toSkRect(oval), false, 1);
    },
    addRRect$1: function(_, rrect) {
      J.addRRect$2$x(this.get$skiaObject(), H.toSkRRect(rrect), false);
    },
    addRect$1: function(_, rect) {
      J.addRect$1$x(this.get$skiaObject(), H.toSkRect(rect));
    },
    close$0: function(_) {
      J.close$0$x(this.get$skiaObject());
    },
    contains$1: function(_, point) {
      return J.contains$2$asx(this.get$skiaObject(), point._dx, point._dy);
    },
    getBounds$0: function(_) {
      var t1 = J.getBounds$0$x(this.get$skiaObject());
      return new P.Rect(t1[0], t1[1], t1[2], t1[3]);
    },
    lineTo$2: function(_, x, y) {
      J.lineTo$2$x(this.get$skiaObject(), x, y);
    },
    moveTo$2: function(_, x, y) {
      J.moveTo$2$x(this.get$skiaObject(), x, y);
    },
    quadraticBezierTo$4: function(x1, y1, x2, y2) {
      J.quadTo$4$x(this.get$skiaObject(), x1, y1, x2, y2);
    },
    shift$1: function(offset) {
      var newPath = J.copy$0$x(this.get$skiaObject());
      J.transform$9$x(newPath, 1, 0, offset._dx, 0, 1, offset._dy, 0, 0, 0);
      return H.CkPath$_fromSkPath(newPath, this._fillType);
    },
    get$isResurrectionExpensive: function() {
      return true;
    },
    createDefault$0: function() {
      var path = new self.window.flutterCanvasKit.Path(),
        t1 = this._fillType;
      J.setFillType$1$x(path, $.$get$_skFillTypes()[t1.index]);
      return path;
    },
    delete$0: function(_) {
      var t1;
      this._cachedCommands = J.toCmds$0$x(this.get$skiaObject());
      t1 = this.rawSkiaObject;
      if (t1 != null)
        J.delete$0$x(t1);
    },
    resurrect$0: function() {
      var t2, path,
        t1 = $.__canvasKit;
      t1 = J.get$Path$x(t1 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t1);
      t2 = this._cachedCommands;
      t2.toString;
      path = J.MakeFromCmds$1$x(t1, t2);
      t2 = this._fillType;
      J.setFillType$1$x(path, $.$get$_skFillTypes()[t2.index]);
      return path;
    },
    $isPath: 1
  };
  H.CkPicture.prototype = {
    get$isResurrectionExpensive: function() {
      return true;
    },
    createDefault$0: function() {
      throw H.wrapException(P.StateError$("Unreachable code"));
    },
    resurrect$0: function() {
      return this._snapshot.toPicture$0();
    },
    delete$0: function(_) {
      var t1 = this.rawSkiaObject;
      if (t1 != null)
        J.delete$0$x(t1);
    }
  };
  H.CkPictureRecorder.prototype = {
    beginRecording$1: function(_, bounds) {
      var recorder, skCanvas;
      this._cullRect = bounds;
      recorder = new self.window.flutterCanvasKit.PictureRecorder();
      this._skRecorder = recorder;
      skCanvas = J.beginRecording$1$x(recorder, H.toSkRect(bounds));
      return this._recordingCanvas = $.$get$browserSupportsFinalizationRegistry() ? new H.CkCanvas(skCanvas) : new H.RecordingCkCanvas(new H.CkPictureSnapshot(bounds, H.setRuntimeTypeInfo([], type$.JSArray_CkPaintCommand)), skCanvas);
    },
    endRecording$0: function() {
      var t1, skPicture, _this = this,
        recorder = _this._skRecorder;
      if (recorder == null)
        throw H.wrapException(P.StateError$("PictureRecorder is not recording"));
      t1 = J.getInterceptor$x(recorder);
      skPicture = t1.finishRecordingAsPicture$0(recorder);
      t1.delete$0(recorder);
      _this._skRecorder = null;
      t1 = new H.CkPicture(_this._cullRect, _this._recordingCanvas.get$pictureSnapshot());
      t1.ManagedSkiaObject$1(skPicture, type$.SkPicture);
      return t1;
    },
    get$isRecording: function() {
      return this._skRecorder != null;
    }
  };
  H.Rasterizer.prototype = {
    draw$1: function(layerTree) {
      var frame, canvas, compositorFrame, t1, t2, t3;
      try {
        t1 = layerTree.frameSize;
        if (t1.get$isEmpty(t1))
          return;
        t2 = this.surface;
        frame = t2.acquireFrame$1(t1);
        t3 = t2.viewEmbedder;
        t3.set$frameSize(t1);
        canvas = new H.CkCanvas(J.getCanvas$0$x(frame.skiaSurface._surface));
        compositorFrame = new H.Frame(canvas, null, t3);
        compositorFrame.raster$2$ignoreRasterCache(layerTree, true);
        if (!t2._addedToScene) {
          t1 = $.skiaSceneHost;
          t1.toString;
          J.get$children$x(t1).insert$2(0, 0, t2.htmlElement);
        }
        t2._addedToScene = true;
        J.submit$0$z(frame);
        t3.submitFrame$0(0);
      } finally {
        this._runPostFrameCallbacks$0();
      }
    },
    _runPostFrameCallbacks$0: function() {
      var t1, i;
      for (t1 = this._postFrameCallbacks, i = 0; i < t1.length; ++i)
        t1[i].call$0();
      for (t1 = $._frameReferences, i = 0; i < t1.length; ++i)
        t1[i].value = null;
      C.JSArray_methods.set$length(t1, 0);
    }
  };
  H.CkShader.prototype = {
    delete$0: function(_) {
      var t1 = this.rawSkiaObject;
      if (t1 != null)
        J.delete$0$x(t1);
    }
  };
  H.CkGradientLinear.prototype = {
    createDefault$0: function() {
      var _this = this,
        t1 = $.__canvasKit;
      return J.MakeLinearGradient$5$x(J.get$Shader$x(t1 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t1), H.toSkPoint(_this.from), H.toSkPoint(_this.to), H.toFlatColors(_this.colors), H.toSkColorStops(_this.colorStops), $.$get$_skTileModes()[_this.tileMode.index]);
    },
    resurrect$0: function() {
      return this.createDefault$0();
    }
  };
  H.SkiaObjectCache.prototype = {
    get$length: function(_) {
      return this._itemQueue._elementCount;
    },
    add$1: function(_, object) {
      var t2, _this = this,
        t1 = _this._itemQueue;
      t1.addFirst$1(object);
      t2 = t1.get$_sentinel();
      t2 = t2.$ti._eval$1("_DoubleLinkedQueueEntry<1>")._as(t2._nextLink)._asNonSentinelEntry$0();
      t2.toString;
      _this._itemMap.$indexSet(0, object, t2);
      if (t1._elementCount > _this.maximumSize)
        H.SkiaObjects_markCacheForResize(_this);
    },
    resize$0: function(_) {
      var t1, t2, t3, t4, i, t5, result,
        itemsToDelete = this.maximumSize / 2 | 0;
      for (t1 = this._itemMap, t2 = this._itemQueue, t3 = t2.$ti, t4 = t3._eval$1("_DoubleLinkedQueueSentinel<1>"), i = 0; i < itemsToDelete; ++i) {
        t5 = t2.__DoubleLinkedQueue__sentinel;
        if (t5 == null) {
          t5 = new P._DoubleLinkedQueueSentinel(t2, null, t4);
          t5._previousLink = t5;
          t2.__DoubleLinkedQueue__sentinel = t5._nextLink = t5;
        }
        result = t3._eval$1("_DoubleLinkedQueueEntry<1>")._as(t5._previousLink)._remove$0(0);
        --t2._elementCount;
        t1.remove$1(0, result);
        result.delete$0(0);
        result.didDelete$0();
      }
    }
  };
  H.SkiaObject.prototype = {};
  H.ManagedSkiaObject.prototype = {
    ManagedSkiaObject$1: function(instance, $T) {
      var _this = this,
        defaultObject = instance == null ? _this.createDefault$0() : instance;
      _this.rawSkiaObject = defaultObject;
      if ($.$get$browserSupportsFinalizationRegistry())
        $.$get$Collector__instance().register$2(0, _this, type$.SkDeletable._as(defaultObject));
      else if (_this.get$isResurrectionExpensive()) {
        H.SkiaObjects_registerCleanupCallback();
        $.$get$SkiaObjects_expensiveCache().add$1(0, _this);
      } else {
        H.SkiaObjects_registerCleanupCallback();
        $.SkiaObjects_resurrectableObjects.push(_this);
      }
    },
    get$skiaObject: function() {
      var skiaObject, _this = this,
        t1 = _this.rawSkiaObject;
      if (t1 == null) {
        skiaObject = _this.resurrect$0();
        _this.rawSkiaObject = skiaObject;
        if (_this.get$isResurrectionExpensive()) {
          H.SkiaObjects_registerCleanupCallback();
          $.$get$SkiaObjects_expensiveCache().add$1(0, _this);
        } else {
          H.SkiaObjects_registerCleanupCallback();
          $.SkiaObjects_resurrectableObjects.push(_this);
        }
        t1 = skiaObject;
      }
      return t1;
    },
    didDelete$0: function() {
      this.rawSkiaObject = null;
    },
    get$isResurrectionExpensive: function() {
      return false;
    }
  };
  H.SurfaceFrame.prototype = {
    submit$0: function(_) {
      return this.submitCallback.call$2(this, new H.CkCanvas(J.getCanvas$0$x(this.skiaSurface._surface)));
    }
  };
  H.Surface.prototype = {
    _syncCacheBytes$0: function() {
      var t2,
        t1 = this._skiaCacheBytes;
      if (t1 != null) {
        t2 = this._grContext;
        if (t2 != null)
          J.setResourceCacheLimitBytes$1$x(t2, t1);
      }
    },
    acquireFrame$1: function(size) {
      var t2,
        surface = this._createOrUpdateSurfaces$1(size),
        t1 = surface._glContext;
      if (t1 != null) {
        t2 = $.__canvasKit;
        J.setCurrentContext$1$x(t2 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t2, t1);
      }
      return new H.SurfaceFrame(surface, new H.Surface_acquireFrame_closure(this));
    },
    _createOrUpdateSurfaces$1: function(size) {
      var previousSize, t1, _this = this;
      if (size.get$isEmpty(size))
        throw H.wrapException(H.CanvasKitError$("Cannot create surfaces of empty size."));
      previousSize = _this._currentSize;
      if (!_this._forceNewContext && previousSize != null && size._dx <= previousSize._dx && size._dy <= previousSize._dy) {
        t1 = $.$get$window()._debugDevicePixelRatio;
        if (t1 == null)
          t1 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
        if (t1 !== _this._currentDevicePixelRatio)
          _this._updateLogicalHtmlCanvasSize$0();
        t1 = _this._surface;
        t1.toString;
        return t1;
      }
      t1 = $.$get$window()._debugDevicePixelRatio;
      _this._currentDevicePixelRatio = t1 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t1;
      _this._currentSize = _this._currentSize == null ? size : size.$mul(0, 1.4);
      t1 = _this._surface;
      if (t1 != null)
        t1.dispose$0(0);
      _this._surface = null;
      _this._addedToScene = false;
      t1 = _this._currentSize;
      t1.toString;
      return _this._surface = _this._createNewSurface$1(t1);
    },
    _updateLogicalHtmlCanvasSize$0: function() {
      var t4, t5,
        t1 = this._pixelWidth,
        t2 = $.$get$window(),
        t3 = t2._debugDevicePixelRatio;
      if (t3 == null)
        t3 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      t4 = this._pixelHeight;
      t2 = t2._debugDevicePixelRatio;
      if (t2 == null)
        t2 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      t5 = this.htmlCanvas.style;
      t3 = H.S(t1 / t3) + "px";
      t5.width = t3;
      t1 = H.S(t4 / t2) + "px";
      t5.height = t1;
    },
    _createNewSurface$1: function(physicalSize) {
      var htmlCanvas, t2, glContext, skSurface, _this = this,
        _s9_ = "canvasKit",
        t1 = _this.htmlCanvas;
      if (t1 != null)
        C.CanvasElement_methods.remove$0(t1);
      _this._pixelWidth = C.JSNumber_methods.ceil$0(physicalSize._dx);
      t1 = C.JSNumber_methods.ceil$0(physicalSize._dy);
      _this._pixelHeight = t1;
      htmlCanvas = _this.htmlCanvas = W.CanvasElement_CanvasElement(t1, _this._pixelWidth);
      t1 = htmlCanvas.style;
      t1.position = "absolute";
      _this._updateLogicalHtmlCanvasSize$0();
      C.CanvasElement_methods.addEventListener$3(htmlCanvas, "webglcontextlost", new H.Surface__createNewSurface_closure(_this), false);
      _this._forceNewContext = false;
      _this.htmlElement.appendChild(htmlCanvas);
      t1 = $._cachedWebGLVersion;
      if (t1 == null) {
        t1 = $._cachedWebGLVersion = H._detectWebGLVersion();
        t2 = t1;
      } else
        t2 = t1;
      if (t1 === -1)
        return _this._makeSoftwareCanvasSurface$2(htmlCanvas, "WebGL support not detected");
      else {
        t1 = $.__canvasKit;
        if (t1 == null)
          t1 = H.throwExpression(H.LateError$fieldNI(_s9_));
        glContext = J.GetWebGLContext$2$x(t1, htmlCanvas, {anitalias: 0, majorVersion: t2});
        if (glContext === 0)
          return _this._makeSoftwareCanvasSurface$2(htmlCanvas, "Failed to initialize WebGL context");
        t1 = $.__canvasKit;
        t1 = J.MakeGrContext$1$x(t1 == null ? H.throwExpression(H.LateError$fieldNI(_s9_)) : t1, glContext);
        _this._grContext = t1;
        if (t1 == null)
          throw H.wrapException(H.CanvasKitError$("Failed to initialize CanvasKit. CanvasKit.MakeGrContext returned null."));
        _this._syncCacheBytes$0();
        t1 = $.__canvasKit;
        if (t1 == null)
          t1 = H.throwExpression(H.LateError$fieldNI(_s9_));
        t2 = _this._grContext;
        t2.toString;
        skSurface = J.MakeOnScreenGLSurface$4$x(t1, t2, _this._pixelWidth, _this._pixelHeight, self.window.flutterCanvasKit.ColorSpace.SRGB);
        if (skSurface == null)
          return _this._makeSoftwareCanvasSurface$2(htmlCanvas, "Failed to initialize WebGL surface");
        return new H.CkSurface(skSurface, _this._grContext, glContext);
      }
    },
    _makeSoftwareCanvasSurface$2: function(htmlCanvas, reason) {
      var t1;
      if (!$.Surface__didWarnAboutWebGlInitializationFailure) {
        $.$get$printWarning().call$1("WARNING: Falling back to CPU-only rendering. " + reason + ".");
        $.Surface__didWarnAboutWebGlInitializationFailure = true;
      }
      t1 = $.__canvasKit;
      return new H.CkSurface(J.MakeSWCanvasSurface$1$x(t1 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t1, htmlCanvas), null, null);
    }
  };
  H.Surface_acquireFrame_closure.prototype = {
    call$2: function(surfaceFrame, canvas) {
      var t3,
        t1 = this.$this,
        t2 = t1._surface._glContext;
      if (t2 != null) {
        t3 = $.__canvasKit;
        J.setCurrentContext$1$x(t3 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t3, t2);
      }
      J.flush$0$x(t1._surface._surface);
      return true;
    },
    $signature: 225
  };
  H.Surface__createNewSurface_closure.prototype = {
    call$1: function($event) {
      P.print("Flutter: restoring WebGL context.");
      this.$this._forceNewContext = true;
      $.$get$EnginePlatformDispatcher__instance().invokeOnMetricsChanged$0();
      $event.stopPropagation();
      $event.preventDefault();
    },
    $signature: 1
  };
  H.CkSurface.prototype = {
    dispose$0: function(_) {
      var t1, t2, _this = this;
      if (_this._isDisposed)
        return;
      t1 = _this._glContext;
      if (t1 != null) {
        t2 = $.__canvasKit;
        J.setCurrentContext$1$x(t2 == null ? H.throwExpression(H.LateError$fieldNI("canvasKit")) : t2, t1);
      }
      J.dispose$0$x(_this._surface);
      t1 = _this._grContext;
      if (t1 != null) {
        t2 = J.getInterceptor$x(t1);
        t2.releaseResourcesAndAbandonContext$0(t1);
        t2.delete$0(t1);
      }
      _this._isDisposed = true;
    }
  };
  H.CkParagraphStyle.prototype = {};
  H.CkTextStyle.prototype = {
    get$skTextStyle: function() {
      var _this = this,
        t1 = _this.__CkTextStyle_skTextStyle;
      if (t1 == null) {
        t1 = new H.CkTextStyle_skTextStyle_closure(_this).call$0();
        if (_this.__CkTextStyle_skTextStyle == null)
          _this.__CkTextStyle_skTextStyle = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("skTextStyle"));
      }
      return t1;
    }
  };
  H.CkTextStyle_skTextStyle_closure.prototype = {
    call$0: function() {
      var t2, decorationValue, t3,
        _s9_ = "canvasKit",
        t1 = this.$this,
        color = t1.color,
        decoration = t1.decoration,
        decorationColor = t1.decorationColor,
        decorationStyle = t1.decorationStyle,
        decorationThickness = t1.decorationThickness,
        fontWeight = t1.fontWeight,
        textBaseline = t1.textBaseline,
        fontSize = t1.fontSize,
        letterSpacing = t1.letterSpacing,
        wordSpacing = t1.wordSpacing,
        height = t1.height,
        background = t1.background,
        foreground = t1.foreground,
        properties = H.SkTextStyleProperties$(null);
      if (background != null)
        properties.backgroundColor = H.makeFreshSkColor(background._color);
      if (color != null)
        properties.color = H.makeFreshSkColor(color);
      if (decoration != null) {
        t2 = $.__canvasKit;
        decorationValue = J.get$NoDecoration$x(t2 == null ? H.throwExpression(H.LateError$fieldNI(_s9_)) : t2);
        t2 = decoration._mask;
        if ((t2 | 1) === t2) {
          t3 = $.__canvasKit;
          decorationValue = (decorationValue | J.get$UnderlineDecoration$x(t3 == null ? H.throwExpression(H.LateError$fieldNI(_s9_)) : t3)) >>> 0;
        }
        if ((t2 | 2) === t2) {
          t3 = $.__canvasKit;
          decorationValue = (decorationValue | J.get$OverlineDecoration$x(t3 == null ? H.throwExpression(H.LateError$fieldNI(_s9_)) : t3)) >>> 0;
        }
        if ((t2 | 4) === t2) {
          t2 = $.__canvasKit;
          decorationValue = (decorationValue | J.get$LineThroughDecoration$x(t2 == null ? H.throwExpression(H.LateError$fieldNI(_s9_)) : t2)) >>> 0;
        }
        properties.decoration = decorationValue;
      }
      if (decorationThickness != null)
        properties.decorationThickness = decorationThickness;
      if (decorationColor != null)
        properties.decorationColor = H.makeFreshSkColor(decorationColor);
      if (decorationStyle != null)
        properties.decorationStyle = $.$get$_skTextDecorationStyles()[decorationStyle.index];
      if (textBaseline != null)
        properties.textBaseline = $.$get$_skTextBaselines()[textBaseline.index];
      if (fontSize != null)
        properties.fontSize = fontSize;
      if (letterSpacing != null)
        properties.letterSpacing = letterSpacing;
      if (wordSpacing != null)
        properties.wordSpacing = wordSpacing;
      if (height != null)
        properties.heightMultiplier = height;
      t2 = t1.__CkTextStyle_effectiveFontFamilies;
      if (t2 == null) {
        t2 = H._getEffectiveFontFamilies(t1.fontFamily, t1.fontFamilyFallback);
        if (t1.__CkTextStyle_effectiveFontFamilies == null)
          t1.__CkTextStyle_effectiveFontFamilies = t2;
        else
          t2 = H.throwExpression(H.LateError$fieldADI("effectiveFontFamilies"));
      }
      properties.fontFamilies = t2;
      if (fontWeight != null || false)
        properties.fontStyle = H.toSkFontStyle(fontWeight, t1.fontStyle);
      if (foreground != null)
        properties.foregroundColor = H.makeFreshSkColor(foreground._color);
      t1 = $.__canvasKit;
      return J.TextStyle$1$x(t1 == null ? H.throwExpression(H.LateError$fieldNI(_s9_)) : t1, properties);
    },
    $signature: 243
  };
  H.CkParagraph.prototype = {
    createDefault$0: function() {
      return this._initialParagraph;
    },
    resurrect$0: function() {
      var t1, t2, t3, t4, t5, _i, command, t6, result, _this = this, _null = null,
        builder = H.CkParagraphBuilder$(_this._paragraphStyle);
      for (t1 = _this._paragraphCommands, t2 = t1.length, t3 = builder._commands, t4 = builder._paragraphBuilder, t5 = J.getInterceptor$x(t4), _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        command = t1[_i];
        switch (command.type) {
          case C._ParagraphCommandType_0:
            t6 = command.text;
            t6.toString;
            builder._ensureFontsSupportText$1(t6);
            t3.push(new H._ParagraphCommand(C._ParagraphCommandType_0, t6, _null, _null));
            t5.addText$1(t4, t6);
            break;
          case C._ParagraphCommandType_1:
            builder.pop$0(0);
            break;
          case C._ParagraphCommandType_2:
            t6 = command.style;
            t6.toString;
            builder.pushStyle$1(0, t6);
            break;
          case C._ParagraphCommandType_3:
            t6 = command.placeholderStyle;
            t6.toString;
            t3.push(new H._ParagraphCommand(C._ParagraphCommandType_3, _null, _null, t6));
            t5.addPlaceholder$5(t4, t6.get$width(t6), t6.get$height(t6), t6.get$alignment(), t6.get$baseline(t6), t6.get$offset(t6));
            break;
        }
      }
      result = builder._buildCkParagraph$0();
      t1 = _this._lastLayoutConstraints;
      if (t1 != null) {
        _this.rawSkiaObject = result;
        _this.layout$1(0, t1);
      }
      return result;
    },
    delete$0: function(_) {
      var t1 = this.rawSkiaObject;
      if (t1 != null)
        J.delete$0$x(t1);
    },
    get$isResurrectionExpensive: function() {
      return true;
    },
    get$alphabeticBaseline: function(_) {
      return J.getAlphabeticBaseline$0$x(this.get$skiaObject());
    },
    get$didExceedMaxLines: function(_) {
      return J.didExceedMaxLines$0$x(this.get$skiaObject());
    },
    get$height: function(_) {
      return J.getHeight$0$x(this.get$skiaObject());
    },
    get$ideographicBaseline: function(_) {
      return J.getIdeographicBaseline$0$x(this.get$skiaObject());
    },
    get$longestLine: function() {
      return J.getLongestLine$0$x(this.get$skiaObject());
    },
    get$maxIntrinsicWidth: function() {
      return J.getMaxIntrinsicWidth$0$x(this.get$skiaObject());
    },
    get$width: function(_) {
      return J.getMaxWidth$0$x(this.get$skiaObject());
    },
    getBoxesForPlaceholders$0: function() {
      return this.skRectsToTextBoxes$1(J.getRectsForPlaceholders$0$x(this.get$skiaObject()));
    },
    getBoxesForRange$4$boxHeightStyle$boxWidthStyle: function(start, end, boxHeightStyle, boxWidthStyle) {
      var t1, t2, t3;
      if (start < 0 || end < 0)
        return C.List_empty9;
      t1 = this.get$skiaObject();
      t2 = $.$get$_skRectHeightStyles();
      t2 = t2[0];
      t3 = $.$get$_skRectWidthStyles();
      return this.skRectsToTextBoxes$1(J.getRectsForRange$4$x(t1, start, end, t2, t3[0]));
    },
    skRectsToTextBoxes$1: function(skRects) {
      var t1, t2, i, rect, t3,
        result = H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      for (t1 = J.getInterceptor$asx(skRects), t2 = this._paragraphStyle._textDirection, i = 0; i < t1.get$length(skRects); ++i) {
        rect = t1.$index(skRects, i);
        t3 = J.getInterceptor$asx(rect);
        result.push(new P.TextBox(t3.$index(rect, 0), t3.$index(rect, 1), t3.$index(rect, 2), t3.$index(rect, 3), t2));
      }
      return result;
    },
    getPositionForOffset$1: function(offset) {
      var positionWithAffinity = J.getGlyphPositionAtCoordinate$2$x(this.get$skiaObject(), offset._dx, offset._dy),
        t1 = J.getInterceptor$x(positionWithAffinity),
        affinity = C.List_TextAffinity_0_TextAffinity_1[J.get$value$x(t1.get$affinity(positionWithAffinity))];
      return new P.TextPosition(t1.get$pos(positionWithAffinity), affinity);
    },
    layout$1: function(_, constraints) {
      var e, exception;
      this._lastLayoutConstraints = constraints;
      try {
        J.layout$1$x(this.get$skiaObject(), constraints.width);
      } catch (exception) {
        e = H.unwrapException(exception);
        $.$get$printWarning().call$1('CanvasKit threw an exception while laying out the paragraph. The font was "' + H.S(this._paragraphStyle._fontFamily) + '". Exception:\n' + H.S(e));
        throw exception;
      }
    }
  };
  H.CkParagraphBuilder.prototype = {
    _ensureFontsSupportText$1: function(text) {
      var isAscii, i, style, fontFamilies, typefaces, _i, font, typefacesForFamily, codeUnitsSupported, testString, t2, glyphs, t3, t4, t5, missingCodeUnits,
        t1 = P.LinkedHashSet_LinkedHashSet$of(new P.Runes(text), type$.Runes._eval$1("Iterable.E")),
        codeUnits = P.List_List$of(t1, true, H._instanceType(t1)._eval$1("SetMixin.E"));
      if (this._checkIfGlobalFallbacksSupport$1(codeUnits))
        return;
      if (this._checkIfNoFallbackFontSupports$1(codeUnits))
        return;
      t1 = text.length;
      i = 0;
      while (true) {
        if (!(i < t1)) {
          isAscii = true;
          break;
        }
        if (C.JSString_methods._codeUnitAt$1(text, i) >= 160) {
          isAscii = false;
          break;
        }
        ++i;
      }
      if (isAscii)
        return;
      style = C.JSArray_methods.get$last(this._styleStack);
      fontFamilies = H.setRuntimeTypeInfo([], type$.JSArray_String);
      t1 = style.fontFamily;
      if (t1 != null)
        fontFamilies.push(t1);
      t1 = style.fontFamilyFallback;
      if (t1 != null)
        C.JSArray_methods.addAll$1(fontFamilies, t1);
      typefaces = H.setRuntimeTypeInfo([], type$.JSArray_SkTypeface);
      for (t1 = fontFamilies.length, _i = 0; _i < fontFamilies.length; fontFamilies.length === t1 || (0, H.throwConcurrentModificationError)(fontFamilies), ++_i) {
        font = fontFamilies[_i];
        typefacesForFamily = $._skiaFontCollection.familyToTypefaceMap.$index(0, font);
        if (typefacesForFamily != null)
          C.JSArray_methods.addAll$1(typefaces, typefacesForFamily);
      }
      t1 = codeUnits.length;
      codeUnitsSupported = P.List_List$filled(t1, false, false, type$.bool);
      testString = P.String_String$fromCharCodes(codeUnits, 0, null);
      for (t2 = typefaces.length, _i = 0; _i < typefaces.length; typefaces.length === t2 || (0, H.throwConcurrentModificationError)(typefaces), ++_i) {
        glyphs = J.getGlyphIDs$1$x(new self.window.flutterCanvasKit.Font(typefaces[_i]), testString);
        for (t3 = glyphs.length, i = 0; i < t3; ++i) {
          t4 = codeUnitsSupported[i];
          if (glyphs[i] === 0) {
            t5 = codeUnits[i];
            if (!(t5 < 32))
              t5 = t5 > 127 && t5 < 160;
            else
              t5 = true;
          } else
            t5 = true;
          codeUnitsSupported[i] = C.JSBool_methods.$or(t4, t5);
        }
      }
      if (C.JSArray_methods.any$1(codeUnitsSupported, new H.CkParagraphBuilder__ensureFontsSupportText_closure())) {
        missingCodeUnits = H.setRuntimeTypeInfo([], type$.JSArray_int);
        for (i = 0; i < t1; ++i)
          if (!codeUnitsSupported[i])
            missingCodeUnits.push(codeUnits[i]);
        H.findFontsForMissingCodeunits(missingCodeUnits);
      }
    },
    _checkIfGlobalFallbacksSupport$1: function(codeUnits) {
      var t2, codeUnitsSupported, testString, t3, t4, _i, font, typefacesForFamily, t5, glyphs, t6, i, t7, t8, keepGoing, _i0,
        t1 = $.$get$FontFallbackData__instance();
      if (!!codeUnits.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeWhere"));
      C.JSArray_methods._removeWhere$2(codeUnits, new H.CkParagraphBuilder__checkIfGlobalFallbacksSupport_closure(t1), true);
      t2 = codeUnits.length;
      if (t2 === 0)
        return true;
      codeUnitsSupported = P.List_List$filled(t2, false, false, type$.bool);
      testString = P.String_String$fromCharCodes(codeUnits, 0, null);
      for (t3 = t1.globalFontFallbacks, t4 = t3.length, t1 = t1.knownCoveredCodeUnits, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i) {
        font = t3[_i];
        typefacesForFamily = $._skiaFontCollection.familyToTypefaceMap.$index(0, font);
        if (typefacesForFamily == null) {
          $.$get$printWarning().call$1("A fallback font was registered but we cannot retrieve the typeface for it.");
          continue;
        }
        for (t5 = J.get$iterator$ax(typefacesForFamily); t5.moveNext$0();) {
          glyphs = J.getGlyphIDs$1$x(new self.window.flutterCanvasKit.Font(t5.get$current(t5)), testString);
          for (t6 = glyphs.length, i = 0; i < t6; ++i) {
            t7 = glyphs[i] === 0;
            if (!t7)
              t1.add$1(0, codeUnits[i]);
            t8 = codeUnitsSupported[i];
            if (t7) {
              t7 = codeUnits[i];
              if (!(t7 < 32))
                t7 = t7 > 127 && t7 < 160;
              else
                t7 = true;
            } else
              t7 = true;
            codeUnitsSupported[i] = C.JSBool_methods.$or(t8, t7);
          }
        }
        _i0 = 0;
        while (true) {
          if (!(_i0 < t2)) {
            keepGoing = false;
            break;
          }
          if (!codeUnitsSupported[_i0]) {
            keepGoing = true;
            break;
          }
          ++_i0;
        }
        if (!keepGoing) {
          C.JSArray_methods.set$length(codeUnits, 0);
          return true;
        }
      }
      for (i = codeUnits.length - 1; i >= 0; --i)
        if (codeUnitsSupported[i])
          C.JSArray_methods.removeAt$1(codeUnits, i);
      return false;
    },
    _checkIfNoFallbackFontSupports$1: function(codeUnits) {
      var t1 = $.$get$FontFallbackData__instance();
      if (!!codeUnits.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeWhere"));
      C.JSArray_methods._removeWhere$2(codeUnits, new H.CkParagraphBuilder__checkIfNoFallbackFontSupports_closure(t1), true);
      return codeUnits.length === 0;
    },
    addText$1: function(_, text) {
      this._ensureFontsSupportText$1(text);
      this._commands.push(new H._ParagraphCommand(C._ParagraphCommandType_0, text, null, null));
      J.addText$1$x(this._paragraphBuilder, text);
    },
    build$0: function(_) {
      var t1 = new H.CkParagraph(this._buildCkParagraph$0(), this._style, this._commands);
      t1.ManagedSkiaObject$1(null, type$.SkParagraph);
      return t1;
    },
    _buildCkParagraph$0: function() {
      var t1 = this._paragraphBuilder,
        t2 = J.getInterceptor$x(t1),
        result = t2.build$0(t1);
      t2.delete$0(t1);
      return result;
    },
    get$placeholderScales: function() {
      return this._placeholderScales;
    },
    pop$0: function(_) {
      var t1 = this._styleStack;
      if (t1.length <= 1)
        return;
      this._commands.push(C._ParagraphCommand_rx2);
      t1.pop();
      J.pop$0$x(this._paragraphBuilder);
    },
    pushStyle$1: function(_, style) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, skStyle, foreground, background, _this = this, _null = null,
        t1 = _this._styleStack,
        baseStyle = C.JSArray_methods.get$last(t1);
      type$.CkTextStyle._as(style);
      t2 = style.color;
      if (t2 == null)
        t2 = baseStyle.color;
      t3 = style.decoration;
      if (t3 == null)
        t3 = baseStyle.decoration;
      t4 = style.decorationColor;
      if (t4 == null)
        t4 = baseStyle.decorationColor;
      t5 = style.decorationStyle;
      if (t5 == null)
        t5 = baseStyle.decorationStyle;
      t6 = style.decorationThickness;
      if (t6 == null)
        t6 = baseStyle.decorationThickness;
      t7 = style.fontWeight;
      if (t7 == null)
        t7 = baseStyle.fontWeight;
      t8 = style.textBaseline;
      if (t8 == null)
        t8 = baseStyle.textBaseline;
      t9 = style.fontFamily;
      if (t9 == null)
        t9 = baseStyle.fontFamily;
      t10 = style.fontFamilyFallback;
      if (t10 == null)
        t10 = baseStyle.fontFamilyFallback;
      t11 = style.fontSize;
      if (t11 == null)
        t11 = baseStyle.fontSize;
      t12 = style.letterSpacing;
      if (t12 == null)
        t12 = baseStyle.letterSpacing;
      t13 = style.wordSpacing;
      if (t13 == null)
        t13 = baseStyle.wordSpacing;
      t14 = style.height;
      if (t14 == null)
        t14 = baseStyle.height;
      t15 = style.background;
      if (t15 == null)
        t15 = baseStyle.background;
      t16 = style.foreground;
      if (t16 == null)
        t16 = baseStyle.foreground;
      skStyle = H.CkTextStyle_CkTextStyle(t15, t2, t3, t4, t5, t6, t9, t10, baseStyle.fontFeatures, t11, baseStyle.fontStyle, t7, t16, t14, t12, baseStyle.locale, baseStyle.shadows, t8, t13);
      t1.push(skStyle);
      _this._commands.push(new H._ParagraphCommand(C._ParagraphCommandType_2, _null, style, _null));
      t1 = skStyle.foreground;
      t2 = t1 == null;
      if (!t2 || skStyle.background != null) {
        foreground = t2 ? _null : t1.get$skiaObject();
        if (foreground == null) {
          foreground = $.$get$CkParagraphBuilder__defaultTextForeground();
          t1 = skStyle.color;
          t1 = t1 == null ? _null : t1.get$value(t1);
          J.setColorInt$1$x(foreground, t1 == null ? 4278190080 : t1);
        }
        t1 = skStyle.background;
        background = t1 == null ? _null : t1.get$skiaObject();
        if (background == null)
          background = $.$get$CkParagraphBuilder__defaultTextBackground();
        J.pushPaintStyle$3$x(_this._paragraphBuilder, skStyle.get$skTextStyle(), foreground, background);
      } else
        J.pushStyle$1$x(_this._paragraphBuilder, skStyle.get$skTextStyle());
    }
  };
  H.CkParagraphBuilder__ensureFontsSupportText_closure.prototype = {
    call$1: function(x) {
      return !x;
    },
    $signature: 254
  };
  H.CkParagraphBuilder__checkIfGlobalFallbacksSupport_closure.prototype = {
    call$1: function(codeUnit) {
      return this.fallbackData.knownCoveredCodeUnits.contains$1(0, codeUnit);
    },
    $signature: 21
  };
  H.CkParagraphBuilder__checkIfNoFallbackFontSupports_closure.prototype = {
    call$1: function(codeUnit) {
      return this.fallbackData.codeUnitsWithNoKnownFont.contains$1(0, codeUnit);
    },
    $signature: 21
  };
  H._ParagraphCommand.prototype = {
    text$0: function($receiver) {
      return this.text.call$0();
    }
  };
  H._ParagraphCommandType.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H._getEffectiveFontFamilies_closure.prototype = {
    call$1: function(font) {
      return this.fontFamily === font;
    },
    $signature: 22
  };
  H.CanvasKitError.prototype = {
    toString$0: function(_) {
      return "CanvasKitError: " + this.message;
    }
  };
  H.ClipboardMessageHandler.prototype = {
    setDataMethodCall$2: function(methodCall, callback) {
      var t1 = {};
      t1.errorEnvelopeEncoded = false;
      this._copyToClipboardStrategy.setData$1(0, J.$index$asx(methodCall.$arguments, "text")).then$1$1(0, new H.ClipboardMessageHandler_setDataMethodCall_closure(t1, callback), type$.Null).catchError$1(new H.ClipboardMessageHandler_setDataMethodCall_closure0(t1, callback));
    },
    getDataMethodCall$1: function(callback) {
      this._pasteFromClipboardStrategy.getData$0(0).then$1$1(0, new H.ClipboardMessageHandler_getDataMethodCall_closure(callback), type$.Null).catchError$1(new H.ClipboardMessageHandler_getDataMethodCall_closure0(callback));
    }
  };
  H.ClipboardMessageHandler_setDataMethodCall_closure.prototype = {
    call$1: function(success) {
      var t1 = this.callback;
      if (success) {
        t1.toString;
        t1.call$1(C.C_JSONMessageCodec.encodeMessage$1([true]));
      } else {
        t1.toString;
        t1.call$1(C.C_JSONMessageCodec.encodeMessage$1(["copy_fail", "Clipboard.setData failed", null]));
        this._box_0.errorEnvelopeEncoded = true;
      }
    },
    $signature: 58
  };
  H.ClipboardMessageHandler_setDataMethodCall_closure0.prototype = {
    call$1: function(_) {
      var t1;
      if (!this._box_0.errorEnvelopeEncoded) {
        t1 = this.callback;
        t1.toString;
        t1.call$1(C.C_JSONMessageCodec.encodeMessage$1(["copy_fail", "Clipboard.setData failed", null]));
      }
    },
    $signature: 5
  };
  H.ClipboardMessageHandler_getDataMethodCall_closure.prototype = {
    call$1: function(data) {
      var map = P.LinkedHashMap_LinkedHashMap$_literal(["text", data], type$.String, type$.dynamic),
        t1 = this.callback;
      t1.toString;
      t1.call$1(C.C_JSONMessageCodec.encodeMessage$1([map]));
    },
    $signature: 128
  };
  H.ClipboardMessageHandler_getDataMethodCall_closure0.prototype = {
    call$1: function(error) {
      var t1;
      P.print("Could not get text from clipboard: " + H.S(error));
      t1 = this.callback;
      t1.toString;
      t1.call$1(C.C_JSONMessageCodec.encodeMessage$1(["paste_fail", "Clipboard.getData failed", null]));
    },
    $signature: 5
  };
  H.ClipboardAPICopyStrategy.prototype = {
    setData$1: function(_, text) {
      return this.setData$body$ClipboardAPICopyStrategy(_, text);
    },
    setData$body$ClipboardAPICopyStrategy: function(_, text) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], error, t1, exception, $async$exception;
      var $async$setData$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              t1 = window.navigator.clipboard;
              t1.toString;
              text.toString;
              $async$goto = 7;
              return P._asyncAwait(P.promiseToFuture(t1.writeText(text), type$.dynamic), $async$setData$1);
            case 7:
              // returning from await.
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              error = H.unwrapException($async$exception);
              P.print("copy is not successful " + H.S(error));
              t1 = P.Future_Future$value(false, type$.bool);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$returnValue = P.Future_Future$value(true, type$.bool);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$setData$1, $async$completer);
    }
  };
  H.ClipboardAPIPasteStrategy.prototype = {
    getData$0: function(_) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue;
      var $async$getData$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = P.promiseToFuture(window.navigator.clipboard.readText(), type$.String);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$getData$0, $async$completer);
    }
  };
  H.ExecCommandCopyStrategy.prototype = {
    setData$1: function(_, text) {
      return P.Future_Future$value(this._setDataSync$1(text), type$.bool);
    },
    _setDataSync$1: function(text) {
      var tempTextArea, result, error, exception,
        _s8_ = "-99999px",
        _s11_ = "transparent",
        t1 = document,
        tempElement = t1.createElement("textarea"),
        elementStyle = tempElement.style;
      elementStyle.position = "absolute";
      elementStyle.top = _s8_;
      elementStyle.left = _s8_;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "opacity"), "0", "");
      elementStyle.color = _s11_;
      elementStyle.backgroundColor = _s11_;
      elementStyle.background = _s11_;
      t1.body.appendChild(tempElement);
      tempTextArea = tempElement;
      tempTextArea.value = text;
      J.focus$0$x(tempTextArea);
      J.select$0$x(tempTextArea);
      result = false;
      try {
        result = t1.execCommand("copy");
        if (!result)
          P.print("copy is not successful");
      } catch (exception) {
        error = H.unwrapException(exception);
        P.print("copy is not successful " + H.S(error));
      } finally {
        J.remove$0$ax(tempTextArea);
      }
      return result;
    }
  };
  H.ExecCommandPasteStrategy.prototype = {
    getData$0: function(_) {
      throw H.wrapException(P.UnimplementedError$("Paste is not implemented for this browser."));
    }
  };
  H.DomCanvas.prototype = {
    clipRect$2: function(_, rect, op) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    clipRRect$1: function(_, rrect) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    clipPath$1: function(_, path) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawRect$2: function(_, rect, paint) {
      var t1 = this.SaveElementStackTracking__elementStack;
      t1 = t1.length === 0 ? this.rootElement : C.JSArray_methods.get$last(t1);
      t1.appendChild(H._buildDrawRectElement(rect, paint, "draw-rect", this.SaveElementStackTracking__currentTransform));
    },
    drawRRect$2: function(_, rrect, paint) {
      var t1,
        element = H._buildDrawRectElement(new P.Rect(rrect.left, rrect.top, rrect.right, rrect.bottom), paint, "draw-rrect", this.SaveElementStackTracking__currentTransform);
      H._applyRRectBorderRadius(element.style, rrect);
      t1 = this.SaveElementStackTracking__elementStack;
      (t1.length === 0 ? this.rootElement : C.JSArray_methods.get$last(t1)).appendChild(element);
    },
    drawCircle$3: function(_, c, radius, paint) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawPath$2: function(_, path, paint) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawShadow$4: function(_, path, color, elevation, transparentOccluder) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    drawParagraph$2: function(_, paragraph, offset) {
      var paragraphElement = H._drawParagraphElement(paragraph, offset, this.SaveElementStackTracking__currentTransform),
        t1 = this.SaveElementStackTracking__elementStack;
      (t1.length === 0 ? this.rootElement : C.JSArray_methods.get$last(t1)).appendChild(paragraphElement);
    },
    endOfPaint$0: function() {
    }
  };
  H.DomRenderer.prototype = {
    renderScene$1: function(sceneElement) {
      var t1 = this._sceneElement;
      if (sceneElement == null ? t1 != null : sceneElement !== t1) {
        if (t1 != null)
          J.remove$0$ax(t1);
        this._sceneElement = sceneElement;
        t1 = this._sceneHostElement;
        t1.toString;
        sceneElement.toString;
        t1.appendChild(sceneElement);
      }
    },
    createElement$1: function(_, tagName) {
      var element = document.createElement(tagName);
      return element;
    },
    reset$0: function(_) {
      var t2, sheet, isWebKit, isFirefox, t3, t4, t5, t6, glassPaneElement, semanticsHostElement, objectConstructor, _this = this, _s1_ = "0", _s4_ = "none",
        _s8_ = "absolute",
        _s14_ = "defineProperty",
        _box_0 = {},
        t1 = _this._styleElement;
      if (t1 != null)
        C.StyleElement_methods.remove$0(t1);
      t1 = document;
      t2 = t1.createElement("style");
      _this._styleElement = t2;
      t1.head.appendChild(t2);
      sheet = type$.CssStyleSheet._as(_this._styleElement.sheet);
      t2 = H._browserEngine();
      isWebKit = t2 === C.BrowserEngine_1;
      t2 = H._browserEngine();
      isFirefox = t2 === C.BrowserEngine_2;
      if (isFirefox)
        sheet.insertRule("flt-ruler-host p, flt-scene p { margin: 0; line-height: 100%;}", sheet.cssRules.length);
      else
        sheet.insertRule("flt-ruler-host p, flt-scene p { margin: 0; }", sheet.cssRules.length);
      sheet.insertRule("flt-semantics input[type=range] {\n  appearance: none;\n  -webkit-appearance: none;\n  width: 100%;\n  position: absolute;\n  border: none;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}", sheet.cssRules.length);
      if (isWebKit)
        sheet.insertRule("flt-semantics input[type=range]::-webkit-slider-thumb {  -webkit-appearance: none;}", sheet.cssRules.length);
      if (isFirefox) {
        sheet.insertRule("input::-moz-selection {  background-color: transparent;}", sheet.cssRules.length);
        sheet.insertRule("textarea::-moz-selection {  background-color: transparent;}", sheet.cssRules.length);
      } else {
        sheet.insertRule("input::selection {  background-color: transparent;}", sheet.cssRules.length);
        sheet.insertRule("textarea::selection {  background-color: transparent;}", sheet.cssRules.length);
      }
      sheet.insertRule('flt-semantics input,\nflt-semantics textarea,\nflt-semantics [contentEditable="true"] {\n  caret-color: transparent;\n}\n', sheet.cssRules.length);
      if (isWebKit)
        sheet.insertRule("flt-glass-pane * {\n  -webkit-tap-highlight-color: transparent;\n}\n", sheet.cssRules.length);
      t2 = H._browserEngine();
      if (t2 !== C.BrowserEngine_0) {
        t2 = H._browserEngine();
        if (t2 !== C.BrowserEngine_5) {
          t2 = H._browserEngine();
          t2 = t2 === C.BrowserEngine_1;
        } else
          t2 = true;
      } else
        t2 = true;
      if (t2)
        sheet.insertRule(".transparentTextEditing:-webkit-autofill,\n.transparentTextEditing:-webkit-autofill:hover,\n.transparentTextEditing:-webkit-autofill:focus,\n.transparentTextEditing:-webkit-autofill:active {\n    -webkit-transition-delay: 99999s;\n}\n", sheet.cssRules.length);
      t2 = t1.body;
      t2.toString;
      t3 = H._detectRenderer();
      t2.setAttribute("flt-renderer", (t3 ? "canvaskit" : "html") + " (auto-selected)");
      t2.setAttribute("flt-build-mode", "profile");
      H.DomRenderer_setElementStyle(t2, "position", "fixed");
      H.DomRenderer_setElementStyle(t2, "top", _s1_);
      H.DomRenderer_setElementStyle(t2, "right", _s1_);
      H.DomRenderer_setElementStyle(t2, "bottom", _s1_);
      H.DomRenderer_setElementStyle(t2, "left", _s1_);
      H.DomRenderer_setElementStyle(t2, "overflow", "hidden");
      H.DomRenderer_setElementStyle(t2, "padding", _s1_);
      H.DomRenderer_setElementStyle(t2, "margin", _s1_);
      H.DomRenderer_setElementStyle(t2, "user-select", _s4_);
      H.DomRenderer_setElementStyle(t2, "-webkit-user-select", _s4_);
      H.DomRenderer_setElementStyle(t2, "-ms-user-select", _s4_);
      H.DomRenderer_setElementStyle(t2, "-moz-user-select", _s4_);
      H.DomRenderer_setElementStyle(t2, "touch-action", _s4_);
      H.DomRenderer_setElementStyle(t2, "font", "normal normal 14px sans-serif");
      H.DomRenderer_setElementStyle(t2, "color", "red");
      t2.spellcheck = false;
      for (t3 = new W._FrozenElementList(t1.head.querySelectorAll('meta[name="viewport"]'), type$._FrozenElementList_Element), t3 = new H.ListIterator(t3, t3.get$length(t3)), t4 = H._instanceType(t3)._precomputed1; t3.moveNext$0();) {
        t5 = t4._as(t3._current);
        t6 = t5.parentNode;
        if (t6 != null)
          t6.removeChild(t5);
      }
      t3 = _this._viewportMeta;
      if (t3 != null)
        C.MetaElement_methods.remove$0(t3);
      t3 = t1.createElement("meta");
      t3.setAttribute("flt-viewport", "");
      t3.name = "viewport";
      t3.content = "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no";
      _this._viewportMeta = t3;
      t1.head.appendChild(t3);
      t3 = _this._glassPaneElement;
      if (t3 != null)
        J.remove$0$ax(t3);
      glassPaneElement = _this._glassPaneElement = _this.createElement$1(0, "flt-glass-pane");
      t3 = glassPaneElement.style;
      t3.position = _s8_;
      t3.top = _s1_;
      t3.right = _s1_;
      t3.bottom = _s1_;
      t3.left = _s1_;
      t2.appendChild(glassPaneElement);
      _this._sceneHostElement = _this.createElement$1(0, "flt-scene-host");
      semanticsHostElement = _this.createElement$1(0, "flt-semantics-host");
      t2 = semanticsHostElement.style;
      t2.position = _s8_;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "transform-origin"), "0 0 0", "");
      _this._semanticsHostElement = semanticsHostElement;
      _this.updateSemanticsScreenProperties$0();
      glassPaneElement.appendChild(semanticsHostElement);
      t2 = _this._sceneHostElement.style;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "pointer-events"), _s4_, "");
      t2 = _this._sceneHostElement;
      t2.toString;
      glassPaneElement.appendChild(t2);
      t2 = $.EngineSemanticsOwner__instance;
      glassPaneElement.insertBefore((t2 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t2).semanticsHelper._semanticsEnabler.prepareAccessibilityPlaceholder$0(), _this._sceneHostElement);
      if ($.PointerBinding__instance == null) {
        t2 = new H.PointerBinding(glassPaneElement, new H.PointerDataConverter(P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._PointerState)));
        t2.__PointerBinding__adapter = t2._createAdapter$0();
        $.PointerBinding__instance = t2;
      }
      if ($.KeyboardBinding__instance == null) {
        t2 = new H.KeyboardBinding(P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic_Function_Event));
        t2._setup$0();
        $.KeyboardBinding__instance = t2;
      }
      _this._sceneHostElement.setAttribute("aria-hidden", "true");
      if (window.visualViewport == null && isWebKit) {
        t2 = window.innerWidth;
        t2.toString;
        _box_0.checkCount = 0;
        P.Timer_Timer$periodic(C.Duration_100000, new H.DomRenderer_reset_closure(_box_0, _this, t2));
      }
      t2 = H._detectRenderer();
      if (t2) {
        t2 = _this._canvasKitScript;
        if (t2 != null)
          C.ScriptElement_methods.remove$0(t2);
        t2 = t1.createElement("script");
        _this._canvasKitScript = t2;
        t2.src = $.$get$canvasKitJavaScriptBindingsUrl();
        t2 = $.$get$_context();
        objectConstructor = t2.$index(0, "Object");
        if (t2.$index(0, "exports") == null)
          objectConstructor.callMethod$2(_s14_, [t2, "exports", P.JsObject_JsObject$jsify(P.LinkedHashMap_LinkedHashMap$_literal(["get", P.allowInterop(new H.DomRenderer_reset_closure0(_this, objectConstructor)), "set", P.allowInterop(new H.DomRenderer_reset_closure1()), "configurable", true], type$.String, type$.Object))]);
        if (t2.$index(0, "module") == null)
          objectConstructor.callMethod$2(_s14_, [t2, "module", P.JsObject_JsObject$jsify(P.LinkedHashMap_LinkedHashMap$_literal(["get", P.allowInterop(new H.DomRenderer_reset_closure2(_this, objectConstructor)), "set", P.allowInterop(new H.DomRenderer_reset_closure3()), "configurable", true], type$.String, type$.Object))]);
        t1 = t1.head;
        t1.toString;
        t2 = _this._canvasKitScript;
        t2.toString;
        t1.appendChild(t2);
      }
      t1 = _this.get$_metricsDidChange();
      t2 = type$.Event;
      if (window.visualViewport != null) {
        t3 = window.visualViewport;
        t3.toString;
        _this._resizeSubscription = W._EventStreamSubscription$(t3, "resize", t1, false, t2);
      } else
        _this._resizeSubscription = W._EventStreamSubscription$(window, "resize", t1, false, t2);
      _this._localeSubscription = W._EventStreamSubscription$(window, "languagechange", _this.get$_languageDidChange(), false, t2);
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t1._configuration = t1._configuration.copyWith$1$locales(H.EnginePlatformDispatcher_parseBrowserLanguages());
    },
    updateSemanticsScreenProperties$0: function() {
      var t1 = this._semanticsHostElement.style,
        t2 = "scale(" + H.S(1 / window.devicePixelRatio) + ")";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    _metricsDidChange$1: function($event) {
      var t1;
      this.updateSemanticsScreenProperties$0();
      t1 = H._operatingSystem();
      if (!J.containsKey$1$x(C.Set_m536._collection$_map, t1) && !$.$get$window().isRotation$0() && $.$get$textEditing().isEditing) {
        $.$get$window().computeOnScreenKeyboardInsets$0();
        $.$get$EnginePlatformDispatcher__instance().invokeOnMetricsChanged$0();
      } else {
        t1 = $.$get$window();
        t1._computePhysicalSize$0();
        t1.computeOnScreenKeyboardInsets$0();
        $.$get$EnginePlatformDispatcher__instance().invokeOnMetricsChanged$0();
      }
    },
    _languageDidChange$1: function($event) {
      var t1 = $.$get$EnginePlatformDispatcher__instance();
      t1._configuration = t1._configuration.copyWith$1$locales(H.EnginePlatformDispatcher_parseBrowserLanguages());
      t1 = $.$get$window().platformDispatcher._onLocaleChanged;
      if (t1 != null)
        t1.call$0();
    },
    clearDom$1: function(node) {
      var t1, t2;
      for (; t1 = node.lastChild, t1 != null;) {
        t2 = t1.parentNode;
        if (t2 != null)
          t2.removeChild(t1);
      }
    },
    setPreferredOrientation$1: function(orientations) {
      var lockType, completer, t1, exception,
        screenOrientation = window.screen.orientation;
      if (screenOrientation != null) {
        t1 = J.getInterceptor$asx(orientations);
        if (t1.get$isEmpty(orientations)) {
          t1 = screenOrientation;
          t1.toString;
          J.unlock$0$x(t1);
          return P.Future_Future$value(true, type$.bool);
        } else {
          lockType = H.DomRenderer__deviceOrientationToLockType(t1.get$first(orientations));
          if (lockType != null) {
            completer = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_bool), type$._AsyncCompleter_bool);
            try {
              P.promiseToFuture(screenOrientation.lock(lockType), type$.dynamic).then$1$1(0, new H.DomRenderer_setPreferredOrientation_closure(completer), type$.Null).catchError$1(new H.DomRenderer_setPreferredOrientation_closure0(completer));
            } catch (exception) {
              H.unwrapException(exception);
              t1 = P.Future_Future$value(false, type$.bool);
              return t1;
            }
            return completer.future;
          }
        }
      }
      return P.Future_Future$value(false, type$.bool);
    }
  };
  H.DomRenderer_reset_closure.prototype = {
    call$1: function(t) {
      var t1 = ++this._box_0.checkCount;
      if (this.initialInnerWidth !== window.innerWidth) {
        t.cancel$0(0);
        this.$this._metricsDidChange$1(null);
      } else if (t1 > 5)
        t.cancel$0(0);
    },
    $signature: 131
  };
  H.DomRenderer_reset_closure0.prototype = {
    call$0: function() {
      var t1 = document.currentScript,
        t2 = this.$this._canvasKitScript;
      if (t1 == null ? t2 == null : t1 === t2)
        return P.JsObject_JsObject(this.objectConstructor);
      else
        return $.$get$_context().$index(0, "_flutterWebCachedExports");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 27
  };
  H.DomRenderer_reset_closure1.prototype = {
    call$1: function(value) {
      $.$get$_context().$indexSet(0, "_flutterWebCachedExports", value);
    },
    $signature: 5
  };
  H.DomRenderer_reset_closure2.prototype = {
    call$0: function() {
      var t1 = document.currentScript,
        t2 = this.$this._canvasKitScript;
      if (t1 == null ? t2 == null : t1 === t2)
        return P.JsObject_JsObject(this.objectConstructor);
      else
        return $.$get$_context().$index(0, "_flutterWebCachedModule");
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 27
  };
  H.DomRenderer_reset_closure3.prototype = {
    call$1: function(value) {
      $.$get$_context().$indexSet(0, "_flutterWebCachedModule", value);
    },
    $signature: 5
  };
  H.DomRenderer_setPreferredOrientation_closure.prototype = {
    call$1: function(_) {
      this.completer.complete$1(0, true);
    },
    $signature: 5
  };
  H.DomRenderer_setPreferredOrientation_closure0.prototype = {
    call$1: function(error) {
      this.completer.complete$1(0, false);
    },
    $signature: 5
  };
  H.EngineCanvas.prototype = {};
  H._SaveStackEntry.prototype = {};
  H._SaveClipEntry.prototype = {};
  H._SaveElementStackEntry.prototype = {};
  H.SaveElementStackTracking.prototype = {
    save$0: function(_) {
      var t2, t3, _this = this,
        t1 = _this.SaveElementStackTracking__elementStack;
      t1 = t1.length === 0 ? _this.rootElement : C.JSArray_methods.get$last(t1);
      t2 = _this.SaveElementStackTracking__currentTransform;
      t3 = new H.Matrix40(new Float32Array(16));
      t3.setFrom$1(t2);
      _this.SaveElementStackTracking__saveStack.push(new H._SaveElementStackEntry(t1, t3));
    },
    restore$0: function(_) {
      var entry, t2, t3, _this = this,
        t1 = _this.SaveElementStackTracking__saveStack;
      if (t1.length === 0)
        return;
      entry = t1.pop();
      _this.SaveElementStackTracking__currentTransform = entry.transform;
      t1 = _this.SaveElementStackTracking__elementStack;
      t2 = entry.savedElement;
      t3 = _this.rootElement;
      while (true) {
        if (!((t1.length === 0 ? t3 : C.JSArray_methods.get$last(t1)) !== t2))
          break;
        t1.pop();
      }
    },
    translate$2: function(_, dx, dy) {
      this.SaveElementStackTracking__currentTransform.translate$2(0, dx, dy);
    },
    transform$1: function(_, matrix4) {
      this.SaveElementStackTracking__currentTransform.multiply$1(0, new H.Matrix40(matrix4));
    }
  };
  H.FrameReference.prototype = {};
  H.CrossFrameCache.prototype = {
    commitFrame$0: function() {
      this._reusablePool = this.__engine$_cache;
      this.__engine$_cache = null;
    }
  };
  H.SurfaceCanvas.prototype = {
    save$0: function(_) {
      var t1 = this.__engine$_canvas;
      t1._paintBounds.saveTransformsAndClip$0();
      t1._commands.push(C.C_PaintSave);
      ++t1._saveCount;
    },
    saveLayer$2: function(_, bounds, paint) {
      var t1 = this.__engine$_canvas;
      type$.SurfacePaint._as(paint);
      t1.renderStrategy.hasArbitraryPaint = true;
      t1._commands.push(C.C_PaintSave);
      t1._paintBounds.saveTransformsAndClip$0();
      ++t1._saveCount;
    },
    restore$0: function(_) {
      var t2, clipRect,
        t1 = this.__engine$_canvas;
      if (!t1._recordingEnded && t1._saveCount > 1) {
        t2 = t1._paintBounds;
        t2._currentMatrix = t2.__engine$_transforms.pop();
        clipRect = t2._clipStack.pop();
        if (clipRect != null) {
          t2._currentClipLeft = clipRect.left;
          t2._currentClipTop = clipRect.top;
          t2._currentClipRight = clipRect.right;
          t2._currentClipBottom = clipRect.bottom;
          t2._clipRectInitialized = true;
        } else if (t2._clipRectInitialized)
          t2._clipRectInitialized = false;
      }
      t2 = t1._commands;
      if (t2.length !== 0 && C.JSArray_methods.get$last(t2) instanceof H.PaintSave)
        t2.pop();
      else
        t2.push(C.C_PaintRestore);
      --t1._saveCount;
    },
    translate$2: function(_, dx, dy) {
      var t1 = this.__engine$_canvas,
        t2 = t1._paintBounds;
      if (dx !== 0 || dy !== 0)
        t2._currentMatrixIsIdentity = false;
      t2._currentMatrix.translate$2(0, dx, dy);
      t1._commands.push(new H.PaintTranslate(dx, dy));
    },
    transform$1: function(_, matrix4) {
      var t1 = H.toMatrix32(matrix4),
        t2 = this.__engine$_canvas,
        t3 = t2._paintBounds;
      t3._currentMatrix.multiply$1(0, new H.Matrix40(t1));
      t3._currentMatrixIsIdentity = t3._currentMatrix.isIdentity$0(0);
      t2._commands.push(new H.PaintTransform(t1));
    },
    clipRect$3$clipOp$doAntiAlias: function(_, rect, clipOp, doAntiAlias) {
      var t1 = this.__engine$_canvas,
        command = new H.PaintClipRect(rect, clipOp, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      switch (clipOp) {
        case C.ClipOp_1:
          t1._paintBounds.clipRect$2(0, rect, command);
          break;
        case C.ClipOp_0:
          break;
      }
      t1.renderStrategy.hasArbitraryPaint = true;
      t1._commands.push(command);
    },
    clipRect$1: function($receiver, rect) {
      return this.clipRect$3$clipOp$doAntiAlias($receiver, rect, C.ClipOp_1, true);
    },
    clipRect$2$doAntiAlias: function($receiver, rect, doAntiAlias) {
      return this.clipRect$3$clipOp$doAntiAlias($receiver, rect, C.ClipOp_1, doAntiAlias);
    },
    clipRRect$2$doAntiAlias: function(_, rrect, doAntiAlias) {
      var t1 = this.__engine$_canvas,
        command = new H.PaintClipRRect(rrect, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t1._paintBounds.clipRect$2(0, new P.Rect(rrect.left, rrect.top, rrect.right, rrect.bottom), command);
      t1.renderStrategy.hasArbitraryPaint = true;
      t1._commands.push(command);
    },
    clipRRect$1: function($receiver, rrect) {
      return this.clipRRect$2$doAntiAlias($receiver, rrect, true);
    },
    clipPath$2$doAntiAlias: function(_, path, doAntiAlias) {
      var command,
        t1 = this.__engine$_canvas;
      type$.SurfacePath._as(path);
      command = new H.PaintClipPath(path, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t1._paintBounds.clipRect$2(0, path.getBounds$0(0), command);
      t1.renderStrategy.hasArbitraryPaint = true;
      t1._commands.push(command);
    },
    clipPath$1: function($receiver, path) {
      return this.clipPath$2$doAntiAlias($receiver, path, true);
    },
    drawRect$2: function(_, rect, paint) {
      this.__engine$_canvas.drawRect$2(0, rect, type$.SurfacePaint._as(paint));
    },
    drawRRect$2: function(_, rrect, paint) {
      this.__engine$_canvas.drawRRect$2(0, rrect, type$.SurfacePaint._as(paint));
    },
    drawDRRect$3: function(_, outer, inner, paint) {
      this.__engine$_canvas.drawDRRect$3(0, outer, inner, type$.SurfacePaint._as(paint));
    },
    drawCircle$3: function(_, c, radius, paint) {
      var paintSpread, command, distance, t2, t3,
        t1 = this.__engine$_canvas;
      type$.SurfacePaint._as(paint);
      t1._didDraw = t1.renderStrategy.hasArbitraryPaint = true;
      paintSpread = H._getPaintSpread(paint);
      paint._frozen = true;
      command = new H.PaintDrawCircle(c, radius, paint._paintData, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      distance = radius + paintSpread;
      t2 = c._dx;
      t3 = c._dy;
      t1._paintBounds.growLTRB$5(t2 - distance, t3 - distance, t2 + distance, t3 + distance, command);
      t1._commands.push(command);
    },
    drawPath$2: function(_, path, paint) {
      this.__engine$_canvas.drawPath$2(0, path, type$.SurfacePaint._as(paint));
    },
    drawParagraph$2: function(_, paragraph, offset) {
      this.__engine$_canvas.drawParagraph$2(0, paragraph, offset);
    },
    drawShadow$4: function(_, path, color, elevation, transparentOccluder) {
      var shadowRect, command,
        t1 = this.__engine$_canvas;
      t1._didDraw = t1.renderStrategy.hasArbitraryPaint = true;
      shadowRect = H.computePenumbraBounds(path.getBounds$0(0), elevation);
      command = new H.PaintDrawShadow(type$.SurfacePath._as(path), color, elevation, transparentOccluder, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t1._paintBounds.grow$2(shadowRect, command);
      t1._commands.push(command);
    }
  };
  H._DomClip.prototype = {
    get$childContainer: function() {
      return this._DomClip__childContainer;
    },
    createElement$0: function(_) {
      var element = this.defaultCreateElement$1("flt-clip"),
        t1 = W._ElementFactoryProvider_createElement_tag("flt-clip-interior", null);
      this._DomClip__childContainer = t1;
      t1 = t1.style;
      t1.position = "absolute";
      t1 = this._DomClip__childContainer;
      t1.toString;
      element.appendChild(t1);
      return element;
    }
  };
  H.PersistedClipRect.prototype = {
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform;
      if (_this.clipBehavior !== C.Clip_0)
        _this._localClipBounds = _this.rect;
      else
        _this._localClipBounds = null;
      _this._projectedClip = _this._localTransformInverse = null;
    },
    createElement$0: function(_) {
      var t1 = this.super$_DomClip$createElement(0);
      t1.setAttribute("clip-type", "rect");
      return t1;
    },
    apply$0: function() {
      var t5, _this = this,
        t1 = _this.rootElement.style,
        t2 = _this.rect,
        t3 = t2.left,
        t4 = H.S(t3) + "px";
      t1.left = t4;
      t4 = t2.top;
      t5 = H.S(t4) + "px";
      t1.top = t5;
      t5 = H.S(t2.right - t3) + "px";
      t1.width = t5;
      t2 = H.S(t2.bottom - t4) + "px";
      t1.height = t2;
      t1 = _this.rootElement;
      t1.toString;
      if (_this.clipBehavior !== C.Clip_0) {
        t1 = t1.style;
        t1.overflow = "hidden";
        t1.zIndex = "0";
      }
      t1 = _this._DomClip__childContainer.style;
      t3 = H.S(-t3) + "px";
      t1.left = t3;
      t2 = H.S(-t4) + "px";
      t1.top = t2;
    },
    update$1: function(_, oldSurface) {
      var _this = this;
      _this.super$PersistedContainerSurface$update(0, oldSurface);
      if (!_this.rect.$eq(0, oldSurface.rect) || _this.clipBehavior !== oldSurface.clipBehavior) {
        _this._localClipBounds = null;
        _this.apply$0();
      }
    },
    $isClipRectEngineLayer0: 1
  };
  H.PersistedPhysicalShape.prototype = {
    recomputeTransformAndClip$0: function() {
      var t1, t2, roundRect, rect, _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform;
      if (_this.clipBehavior !== C.Clip_0) {
        t1 = _this.path;
        t2 = t1.pathRef;
        roundRect = t2.fIsRRect ? t2._getRRect$0() : null;
        if (roundRect != null)
          _this._localClipBounds = new P.Rect(roundRect.left, roundRect.top, roundRect.right, roundRect.bottom);
        else {
          rect = t1.pathRef.getRect$0();
          if (rect != null)
            _this._localClipBounds = rect;
          else
            _this._localClipBounds = null;
        }
      } else
        _this._localClipBounds = null;
      _this._projectedClip = _this._localTransformInverse = null;
    },
    createElement$0: function(_) {
      var t1 = this.super$_DomClip$createElement(0);
      t1.setAttribute("clip-type", "physical-shape");
      return t1;
    },
    apply$0: function() {
      this._applyShape$0();
    },
    _applyShape$0: function() {
      var roundRect, borderRadius, style, rect, ovalRect, rx, ry, t4, t5, t6, t7, t8, t9, svgClipPath, rootElementStyle, pathBounds2, boxShadowColor, _this = this,
        _s13_ = "border-radius",
        _s6_ = "hidden",
        t1 = _this.rootElement.style,
        t2 = _this.color,
        t3 = H.colorToCssString(t2);
      t1.backgroundColor = t3 == null ? "" : t3;
      t1 = _this.path;
      t3 = t1.pathRef;
      roundRect = t3.fIsRRect ? t3._getRRect$0() : null;
      if (roundRect != null) {
        borderRadius = H.S(roundRect.tlRadiusX) + "px " + H.S(roundRect.trRadiusX) + "px " + H.S(roundRect.brRadiusX) + "px " + H.S(roundRect.blRadiusX) + "px";
        style = _this.rootElement.style;
        t1 = roundRect.left;
        t2 = H.S(t1) + "px";
        style.left = t2;
        t2 = roundRect.top;
        t3 = H.S(t2) + "px";
        style.top = t3;
        t3 = H.S(roundRect.right - t1) + "px";
        style.width = t3;
        t3 = H.S(roundRect.bottom - t2) + "px";
        style.height = t3;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, _s13_), borderRadius, "");
        t3 = _this._DomClip__childContainer.style;
        t1 = H.S(-t1) + "px";
        t3.left = t1;
        t1 = H.S(-t2) + "px";
        t3.top = t1;
        if (_this.clipBehavior !== C.Clip_0)
          style.overflow = _s6_;
        H.applyCssShadow(_this.rootElement, _this.pathBounds, _this.elevation, _this.shadowColor);
        return;
      } else {
        rect = t1.pathRef.getRect$0();
        if (rect != null) {
          style = _this.rootElement.style;
          t1 = rect.left;
          t2 = H.S(t1) + "px";
          style.left = t2;
          t2 = rect.top;
          t3 = H.S(t2) + "px";
          style.top = t3;
          t3 = H.S(rect.right - t1) + "px";
          style.width = t3;
          t3 = H.S(rect.bottom - t2) + "px";
          style.height = t3;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, _s13_), "", "");
          t3 = _this._DomClip__childContainer.style;
          t1 = H.S(-t1) + "px";
          t3.left = t1;
          t1 = H.S(-t2) + "px";
          t3.top = t1;
          if (_this.clipBehavior !== C.Clip_0)
            style.overflow = _s6_;
          H.applyCssShadow(_this.rootElement, _this.pathBounds, _this.elevation, _this.shadowColor);
          return;
        } else {
          t3 = t1.pathRef;
          ovalRect = (t3.fIsOval ? t3.fRRectOrOvalStartIdx : -1) === -1 ? null : t3.getBounds$0(0);
          if (ovalRect != null) {
            t1 = ovalRect.right;
            t2 = ovalRect.left;
            rx = (t1 - t2) / 2;
            t1 = ovalRect.bottom;
            t3 = ovalRect.top;
            ry = (t1 - t3) / 2;
            borderRadius = rx === ry ? H.S(rx) + "px " : H.S(rx) + "px " + H.S(ry) + "px ";
            style = _this.rootElement.style;
            t1 = H.S(t2) + "px";
            style.left = t1;
            t1 = H.S(t3) + "px";
            style.top = t1;
            t1 = H.S(rx * 2) + "px";
            style.width = t1;
            t1 = H.S(ry * 2) + "px";
            style.height = t1;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(style, C.CssStyleDeclaration_methods._browserPropertyName$1(style, _s13_), borderRadius, "");
            t1 = _this._DomClip__childContainer.style;
            t2 = H.S(-t2) + "px";
            t1.left = t2;
            t2 = H.S(-t3) + "px";
            t1.top = t2;
            if (_this.clipBehavior !== C.Clip_0)
              style.overflow = _s6_;
            H.applyCssShadow(_this.rootElement, _this.pathBounds, _this.elevation, _this.shadowColor);
            return;
          }
        }
      }
      t3 = _this.elevation;
      t4 = t3 === 0;
      t5 = _this.pathBounds;
      t6 = t5.right;
      t7 = t5.bottom;
      if (t4) {
        t8 = t5.left;
        t9 = t5.top;
        svgClipPath = H._pathToSvgClipPath(t1, -t8, -t9, 1 / (t6 - t8), 1 / (t7 - t9));
      } else
        svgClipPath = H._pathToSvgClipPath(t1, 0, 0, 1 / t6, 1 / t7);
      t8 = _this._clipElement;
      if (t8 != null)
        J.remove$0$ax(t8);
      t8 = _this._svgElement;
      if (t8 != null)
        J.remove$0$ax(t8);
      t8 = W.Element_Element$html(svgClipPath, new H._NullTreeSanitizer(), null);
      _this._clipElement = t8;
      $.$get$domRenderer();
      _this.rootElement.appendChild(t8);
      if (t4) {
        t1 = _this.rootElement;
        t1.toString;
        H.DomRenderer_setClipPath(t1, "url(#svgClip" + $._clipIdCounter + ")");
        rootElementStyle = _this.rootElement.style;
        rootElementStyle.overflow = "";
        t1 = t5.left;
        t2 = H.S(t1) + "px";
        rootElementStyle.left = t2;
        t2 = t5.top;
        t3 = H.S(t2) + "px";
        rootElementStyle.top = t3;
        t3 = H.S(t6 - t1) + "px";
        rootElementStyle.width = t3;
        t3 = H.S(t7 - t2) + "px";
        rootElementStyle.height = t3;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(rootElementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(rootElementStyle, _s13_), "", "");
        t3 = _this._DomClip__childContainer.style;
        t1 = "-" + H.S(t1) + "px";
        t3.left = t1;
        t1 = "-" + H.S(t2) + "px";
        t3.top = t1;
        return;
      }
      t4 = _this._DomClip__childContainer;
      t4.toString;
      H.DomRenderer_setClipPath(t4, "url(#svgClip" + $._clipIdCounter + ")");
      rootElementStyle = _this.rootElement.style;
      rootElementStyle.overflow = "";
      t4 = t5.left;
      t8 = H.S(t4) + "px";
      rootElementStyle.left = t8;
      t8 = t5.top;
      t9 = H.S(t8) + "px";
      rootElementStyle.top = t9;
      t9 = H.S(t6 - t4) + "px";
      rootElementStyle.width = t9;
      t9 = H.S(t7 - t8) + "px";
      rootElementStyle.height = t9;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(rootElementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(rootElementStyle, _s13_), "", "");
      t9 = _this._DomClip__childContainer.style;
      t4 = "-" + H.S(t4) + "px";
      t9.left = t4;
      t4 = "-" + H.S(t8) + "px";
      t9.top = t4;
      t4 = H.S(t6) + "px";
      t9.width = t4;
      t4 = H.S(t7) + "px";
      t9.height = t4;
      pathBounds2 = t1.getBounds$0(0);
      t4 = new H.SurfacePaintData();
      t4.style = C.PaintingStyle_0;
      t4.color = t2;
      t4 = H._pathToSvgElement(t1, t4, H.S(pathBounds2.right), H.S(pathBounds2.bottom));
      _this._svgElement = t4;
      _this.rootElement.insertBefore(t4, _this._DomClip__childContainer);
      t3 = H.computeShadow(t5, t3);
      t3.toString;
      boxShadowColor = H.toShadowColor(_this.shadowColor);
      t5 = _this._svgElement.style;
      t4 = t3.offset;
      t1 = boxShadowColor.value;
      t1 = "drop-shadow(" + H.S(t4._dx) + "px " + H.S(t4._dy) + "px " + H.S(t3.blurWidth) + "px rgba(" + (t1 >>> 16 & 255) + ", " + (t1 >>> 8 & 255) + ", " + (t1 & 255) + ", " + H.S((t1 >>> 24 & 255) / 255) + "))";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t5, C.CssStyleDeclaration_methods._browserPropertyName$1(t5, "filter"), t1, "");
      t1 = "translate(-" + H.S(pathBounds2.left) + "px, -" + H.S(pathBounds2.top) + "px)";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t5, C.CssStyleDeclaration_methods._browserPropertyName$1(t5, "transform"), t1, "");
      t1 = _this.rootElement.style;
      t1.backgroundColor = "";
    },
    update$1: function(_, oldSurface) {
      var t1, t2, _this = this;
      _this.super$PersistedContainerSurface$update(0, oldSurface);
      t1 = oldSurface.path === _this.path;
      if (!t1)
        _this._localClipBounds = null;
      t1 = !t1 || oldSurface.elevation !== _this.elevation || !oldSurface.shadowColor.$eq(0, _this.shadowColor) || !oldSurface.color.$eq(0, _this.color);
      t2 = oldSurface._clipElement;
      if (t1) {
        if (t2 != null)
          J.remove$0$ax(t2);
        oldSurface._clipElement = null;
        t1 = oldSurface._svgElement;
        if (t1 != null)
          J.remove$0$ax(t1);
        oldSurface._svgElement = null;
        t1 = _this._clipElement;
        if (t1 != null)
          J.remove$0$ax(t1);
        _this._clipElement = null;
        t1 = _this._svgElement;
        if (t1 != null)
          J.remove$0$ax(t1);
        _this._svgElement = null;
        t1 = _this.rootElement;
        t1.toString;
        H.DomRenderer_setClipPath(t1, "");
        _this._applyShape$0();
      } else {
        _this._clipElement = t2;
        if (t2 != null) {
          $.$get$domRenderer();
          _this.rootElement.appendChild(t2);
        }
        oldSurface._clipElement = null;
        t1 = _this._svgElement = oldSurface._svgElement;
        if (t1 != null)
          _this.rootElement.insertBefore(t1, _this._DomClip__childContainer);
      }
    },
    $isPhysicalShapeEngineLayer0: 1
  };
  H.PersistedClipPath.prototype = {
    createElement$0: function(_) {
      return this.defaultCreateElement$1("flt-clippath");
    },
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.super$PersistedContainerSurface$recomputeTransformAndClip();
      if (_this.clipBehavior !== C.Clip_0) {
        if (_this._localClipBounds == null)
          _this._localClipBounds = _this.clipPath.getBounds$0(0);
      } else
        _this._localClipBounds = null;
    },
    apply$0: function() {
      var _this = this,
        t1 = _this._clipElement;
      if (t1 != null)
        J.remove$0$ax(t1);
      t1 = W.Element_Element$html(H.createSvgClipDef(type$.HtmlElement._as(_this.rootElement), _this.clipPath), new H._NullTreeSanitizer(), null);
      _this._clipElement = t1;
      $.$get$domRenderer();
      _this.rootElement.appendChild(t1);
    },
    update$1: function(_, oldSurface) {
      var t1, _this = this;
      _this.super$PersistedContainerSurface$update(0, oldSurface);
      if (oldSurface.clipPath !== _this.clipPath) {
        _this._localClipBounds = null;
        t1 = oldSurface._clipElement;
        if (t1 != null)
          J.remove$0$ax(t1);
        _this.apply$0();
      } else
        _this._clipElement = oldSurface._clipElement;
      oldSurface._clipElement = null;
    },
    discard$0: function() {
      var t1 = this._clipElement;
      if (t1 != null)
        J.remove$0$ax(t1);
      this._clipElement = null;
      this.super$PersistedContainerSurface$discard();
    },
    $isClipPathEngineLayer0: 1
  };
  H.PersistedOffset.prototype = {
    recomputeTransformAndClip$0: function() {
      var t2, t3, _this = this,
        t1 = _this.parent.__engine$_transform;
      _this.__engine$_transform = t1;
      t2 = _this.dx;
      if (t2 !== 0 || _this.dy !== 0) {
        t1.toString;
        t3 = new H.Matrix40(new Float32Array(16));
        t3.setFrom$1(t1);
        _this.__engine$_transform = t3;
        t3.translate$2(0, t2, _this.dy);
      }
      _this._localTransformInverse = _this._projectedClip = null;
    },
    get$localTransformInverse: function() {
      var _this = this,
        t1 = _this._localTransformInverse;
      if (t1 == null) {
        t1 = H.Matrix4$identity();
        t1.setTranslationRaw$3(-_this.dx, -_this.dy, 0);
        _this._localTransformInverse = t1;
      }
      return t1;
    },
    createElement$0: function(_) {
      var element = document.createElement("flt-offset");
      H.DomRenderer_setElementStyle(element, "position", "absolute");
      H.DomRenderer_setElementStyle(element, "transform-origin", "0 0 0");
      return element;
    },
    apply$0: function() {
      var t2,
        t1 = this.rootElement;
      t1.toString;
      t2 = "translate(" + H.S(this.dx) + "px, " + H.S(this.dy) + "px)";
      t1.style.transform = t2;
    },
    update$1: function(_, oldSurface) {
      var _this = this;
      _this.super$PersistedContainerSurface$update(0, oldSurface);
      if (oldSurface.dx !== _this.dx || oldSurface.dy !== _this.dy)
        _this.apply$0();
    },
    $isOffsetEngineLayer0: 1
  };
  H.PersistedOpacity.prototype = {
    recomputeTransformAndClip$0: function() {
      var t2, dx, dy, _this = this,
        t1 = _this.parent.__engine$_transform;
      _this.__engine$_transform = t1;
      t2 = _this.offset;
      dx = t2._dx;
      dy = t2._dy;
      if (dx !== 0 || dy !== 0) {
        t1.toString;
        t2 = new H.Matrix40(new Float32Array(16));
        t2.setFrom$1(t1);
        _this.__engine$_transform = t2;
        t2.translate$2(0, dx, dy);
      }
      _this._projectedClip = _this._localTransformInverse = null;
    },
    get$localTransformInverse: function() {
      var t2,
        t1 = this._localTransformInverse;
      if (t1 == null) {
        t1 = this.offset;
        t2 = H.Matrix4$identity();
        t2.setTranslationRaw$3(-t1._dx, -t1._dy, 0);
        this._localTransformInverse = t2;
        t1 = t2;
      }
      return t1;
    },
    createElement$0: function(_) {
      var element = $.$get$domRenderer().createElement$1(0, "flt-opacity");
      H.DomRenderer_setElementStyle(element, "position", "absolute");
      H.DomRenderer_setElementStyle(element, "transform-origin", "0 0 0");
      return element;
    },
    apply$0: function() {
      var t2,
        t1 = this.rootElement;
      t1.toString;
      H.DomRenderer_setElementStyle(t1, "opacity", H.S(this.alpha / 255));
      t2 = this.offset;
      t2 = "translate(" + H.S(t2._dx) + "px, " + H.S(t2._dy) + "px)";
      t1.style.transform = t2;
    },
    update$1: function(_, oldSurface) {
      var _this = this;
      _this.super$PersistedContainerSurface$update(0, oldSurface);
      if (_this.alpha !== oldSurface.alpha || !_this.offset.$eq(0, oldSurface.offset))
        _this.apply$0();
    },
    $isOpacityEngineLayer0: 1
  };
  H.SurfacePaint.prototype = {
    set$blendMode: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.blendMode = value;
    },
    set$style: function(_, value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.style = value;
    },
    set$strokeWidth: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.strokeWidth = value;
    },
    set$isAntiAlias: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.isAntiAlias = value;
    },
    get$color: function(_) {
      var t1 = this._paintData.color;
      return t1 == null ? C.Color_4278190080 : t1;
    },
    set$color: function(_, value) {
      var t1, _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      t1 = _this._paintData;
      t1.color = H.getRuntimeType(value) === C.Type_Color_MG2 ? value : new P.Color(value.get$value(value));
    },
    set$shader: function(value) {
      var _this = this;
      if (_this._frozen) {
        _this._paintData = _this._paintData.clone$0(0);
        _this._frozen = false;
      }
      _this._paintData.shader = value;
    },
    toString$0: function(_) {
      var semicolon, _this = this,
        t1 = "" + "Paint(",
        t2 = _this._paintData.style,
        t3 = t2 == null;
      if ((t3 ? C.PaintingStyle_0 : t2) === C.PaintingStyle_1) {
        t1 += (t3 ? C.PaintingStyle_0 : t2).toString$0(0);
        t2 = _this._paintData.strokeWidth;
        t3 = t2 == null;
        if ((t3 ? 0 : t2) !== 0)
          t1 += " " + H.S(t3 ? 0 : t2);
        else
          t1 += " hairline";
        semicolon = "; ";
      } else
        semicolon = "";
      t2 = _this._paintData;
      if (!t2.isAntiAlias) {
        t1 += semicolon + "antialias off";
        semicolon = "; ";
      }
      t2 = t2.color;
      if (!(t2 == null ? C.Color_4278190080 : t2).$eq(0, C.Color_4278190080)) {
        t2 = _this._paintData.color;
        t1 += semicolon + (t2 == null ? C.Color_4278190080 : t2).toString$0(0);
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isPaint: 1
  };
  H.SurfacePaintData.prototype = {
    clone$0: function(_) {
      var _this = this,
        t1 = new H.SurfacePaintData();
      t1.blendMode = _this.blendMode;
      t1.filterQuality = _this.filterQuality;
      t1.maskFilter = _this.maskFilter;
      t1.shader = _this.shader;
      t1.isAntiAlias = _this.isAntiAlias;
      t1.color = _this.color;
      t1.colorFilter = _this.colorFilter;
      t1.strokeWidth = _this.strokeWidth;
      t1.style = _this.style;
      t1.strokeJoin = _this.strokeJoin;
      t1.strokeCap = _this.strokeCap;
      return t1;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.Conic.prototype = {
    toQuads$0: function() {
      var dst, t1, t2, t3, controlPointOffset, skipSubdivide, pointCount, hasNonFinitePoints, p, _this = this,
        pointList = H.setRuntimeTypeInfo([], type$.JSArray_Offset),
        subdivideCount = _this._computeSubdivisionCount$1(0.25),
        quadCount = C.JSInt_methods._shlPositive$1(1, subdivideCount);
      pointList.push(new P.Offset(_this.p0x, _this.p0y));
      if (subdivideCount === 5) {
        dst = new H._ConicPair();
        _this._chop$1(dst);
        t1 = dst.first;
        t1.toString;
        t2 = dst.second;
        t2.toString;
        t3 = t1.p1x;
        if (t3 === t1.p2x && t1.p1y === t1.p2y && t2.p0x === t2.p1x && t2.p0y === t2.p1y) {
          controlPointOffset = new P.Offset(t3, t1.p1y);
          pointList.push(controlPointOffset);
          pointList.push(controlPointOffset);
          pointList.push(controlPointOffset);
          pointList.push(new P.Offset(t2.p2x, t2.p2y));
          quadCount = 2;
          skipSubdivide = true;
        } else
          skipSubdivide = false;
      } else
        skipSubdivide = false;
      if (!skipSubdivide)
        H.Conic__subdivide(_this, subdivideCount, pointList);
      pointCount = 2 * quadCount + 1;
      p = 0;
      while (true) {
        if (!(p < pointCount)) {
          hasNonFinitePoints = false;
          break;
        }
        t1 = pointList[p];
        if (isNaN(t1._dx) || isNaN(t1._dy)) {
          hasNonFinitePoints = true;
          break;
        }
        ++p;
      }
      if (hasNonFinitePoints)
        for (t1 = pointCount - 1, t2 = _this.p1x, t3 = _this.p1y, p = 1; p < t1; ++p)
          pointList[p] = new P.Offset(t2, t3);
      return pointList;
    },
    _chop$1: function(pair) {
      var w2, scaleHalf, _this = this,
        t1 = _this.fW,
        scale = 1 / (1 + t1),
        newW = Math.sqrt(0.5 + t1 * 0.5),
        t2 = _this.p1x,
        t3 = t1 * t2,
        t4 = _this.p1y,
        t5 = t1 * t4,
        t6 = _this.p0x,
        t7 = _this.p2x,
        t8 = (t6 + 2 * t3 + t7) * scale * 0.5,
        t9 = _this.p0y,
        t10 = _this.p2y,
        t11 = (t9 + 2 * t5 + t10) * scale * 0.5,
        m = new P.Offset(t8, t11);
      if (isNaN(t8) || isNaN(t11)) {
        w2 = t1 * 2;
        scaleHalf = scale * 0.5;
        m = new P.Offset((t6 + w2 * t2 + t7) * scaleHalf, (t9 + w2 * t4 + t10) * scaleHalf);
      }
      t1 = m._dx;
      t2 = m._dy;
      pair.first = new H.Conic(t6, t9, (t6 + t3) * scale, (t9 + t5) * scale, t1, t2, newW);
      pair.second = new H.Conic(t1, t2, (t7 + t3) * scale, (t10 + t5) * scale, t7, t10, newW);
    },
    chopAtYExtrema$1: function(dst) {
      var _this = this,
        t = _this._findYExtrema$0();
      if (t == null) {
        dst.push(_this);
        return;
      }
      if (!_this._chopAt$3$cleanupMiddle(t, dst, true)) {
        dst.push(_this);
        return;
      }
    },
    _findYExtrema$0: function() {
      var wP10, quadRoots, _this = this,
        t1 = _this.p2y,
        t2 = _this.p0y,
        p20 = t1 - t2;
      t1 = _this.fW;
      wP10 = t1 * (_this.p1y - t2);
      quadRoots = new H._QuadRoots();
      if (quadRoots.findRoots$3(t1 * p20 - p20, p20 - 2 * wP10, wP10) === 1)
        return quadRoots.root0;
      return null;
    },
    _chopAt$3$cleanupMiddle: function(t, dst, cleanupMiddle) {
      var chopPointX, chopPointY, t2, _this = this,
        tx0 = _this.p0x,
        ty0 = _this.p0y,
        t1 = _this.fW,
        tx1 = _this.p1x * t1,
        ty1 = _this.p1y * t1,
        tx2 = _this.p2x,
        ty2 = _this.p2y,
        dx0 = tx0 + (tx1 - tx0) * t,
        dx2 = tx1 + (tx2 - tx1) * t,
        dy0 = ty0 + (ty1 - ty0) * t,
        dz0 = 1 + (t1 - 1) * t,
        dz2 = t1 + (1 - t1) * t,
        dz1 = dz0 + (dz2 - dz0) * t,
        root = Math.sqrt(dz1);
      if (Math.abs(root - 0) < 0.000244140625)
        return false;
      if (Math.abs(dz0 - 0) < 0.000244140625 || Math.abs(dz1 - 0) < 0.000244140625 || Math.abs(dz2 - 0) < 0.000244140625)
        return false;
      chopPointX = (dx0 + (dx2 - dx0) * t) / dz1;
      chopPointY = (dy0 + (ty1 + (ty2 - ty1) * t - dy0) * t) / dz1;
      t1 = _this.p0y;
      t2 = _this.p2y;
      dst.push(new H.Conic(tx0, t1, dx0 / dz0, chopPointY, chopPointX, chopPointY, dz0 / root));
      dst.push(new H.Conic(chopPointX, chopPointY, dx2 / dz2, chopPointY, tx2, t2, dz2 / root));
      return true;
    },
    _computeSubdivisionCount$1: function(tolerance) {
      var a, k, x, y, error, pow2, _this = this;
      if (tolerance < 0)
        return 0;
      a = _this.fW - 1;
      k = a / (4 * (2 + a));
      x = k * (_this.p0x - 2 * _this.p1x + _this.p2x);
      y = k * (_this.p0y - 2 * _this.p1y + _this.p2y);
      error = Math.sqrt(x * x + y * y);
      for (pow2 = 0; pow2 < 5; ++pow2) {
        if (error <= tolerance)
          break;
        error *= 0.25;
      }
      return pow2;
    },
    evalTangentAt$1: function(t) {
      var t1, p20x, t2, t3, p20y, cx, cy, quadC, _this = this;
      if (!(t === 0 && _this.p0x === _this.p1x && _this.p0y === _this.p1y))
        t1 = t === 1 && _this.p1x === _this.p2x && _this.p1y === _this.p2y;
      else
        t1 = true;
      if (t1)
        return new P.Offset(_this.p2x - _this.p0x, _this.p2y - _this.p0y);
      t1 = _this.p0x;
      p20x = _this.p2x - t1;
      t2 = _this.p2y;
      t3 = _this.p0y;
      p20y = t2 - t3;
      t2 = _this.fW;
      cx = t2 * (_this.p1x - t1);
      cy = t2 * (_this.p1y - t3);
      quadC = H._SkQuadCoefficients$(t2 * p20x - p20x, t2 * p20y - p20y, p20x - cx - cx, p20y - cy - cy, cx, cy);
      return new P.Offset(quadC.evalX$1(t), quadC.evalY$1(t));
    }
  };
  H._QuadBounds.prototype = {};
  H._ConicBounds.prototype = {};
  H._ConicPair.prototype = {};
  H._CubicBounds.prototype = {};
  H.SurfacePath.prototype = {
    _resetFields$0: function() {
      var _this = this;
      _this.fLastMoveToIndex = 0;
      _this._fillType = C.PathFillType_0;
      _this._firstDirection = _this._convexityType = -1;
    },
    _copyFields$1: function(source) {
      var _this = this;
      _this._fillType = source._fillType;
      _this.fLastMoveToIndex = source.fLastMoveToIndex;
      _this._convexityType = source._convexityType;
      _this._firstDirection = source._firstDirection;
    },
    set$fillType: function(value) {
      this._fillType = value;
    },
    moveTo$2: function(_, x, y) {
      var _this = this,
        pointIndex = _this.pathRef.growForVerb$2(0, 0);
      _this.fLastMoveToIndex = pointIndex + 1;
      _this.pathRef.setPoint$3(pointIndex, x, y);
      _this._firstDirection = _this._convexityType = -1;
    },
    _injectMoveToIfNeeded$0: function() {
      var t2, x, y, pointIndex,
        t1 = this.fLastMoveToIndex;
      if (t1 <= 0) {
        t2 = this.pathRef;
        if (t2._fPointsLength === 0) {
          x = 0;
          y = 0;
        } else {
          pointIndex = 2 * (-t1 - 1);
          t1 = t2._fPoints;
          x = t1[pointIndex];
          y = t1[pointIndex + 1];
        }
        this.moveTo$2(0, x, y);
      }
    },
    lineTo$2: function(_, x, y) {
      var pointIndex, _this = this;
      if (_this.fLastMoveToIndex <= 0)
        _this._injectMoveToIfNeeded$0();
      pointIndex = _this.pathRef.growForVerb$2(1, 0);
      _this.pathRef.setPoint$3(pointIndex, x, y);
      _this._firstDirection = _this._convexityType = -1;
    },
    quadraticBezierTo$4: function(x1, y1, x2, y2) {
      var pointIndex, _this = this;
      _this._injectMoveToIfNeeded$0();
      pointIndex = _this.pathRef.growForVerb$2(2, 0);
      _this.pathRef.setPoint$3(pointIndex, x1, y1);
      _this.pathRef.setPoint$3(pointIndex + 1, x2, y2);
      _this._firstDirection = _this._convexityType = -1;
    },
    conicTo$5: function(_, x1, y1, x2, y2, w) {
      var pointIndex, _this = this;
      _this._injectMoveToIfNeeded$0();
      pointIndex = _this.pathRef.growForVerb$2(3, w);
      _this.pathRef.setPoint$3(pointIndex, x1, y1);
      _this.pathRef.setPoint$3(pointIndex + 1, x2, y2);
      _this._firstDirection = _this._convexityType = -1;
    },
    close$0: function(_) {
      var _this = this,
        t1 = _this.pathRef,
        verbCount = t1._fVerbsLength;
      if (verbCount !== 0 && t1._fVerbs[verbCount - 1] !== 5)
        t1.growForVerb$2(5, 0);
      t1 = _this.fLastMoveToIndex;
      if (t1 >= 0)
        _this.fLastMoveToIndex = -t1;
      _this._firstDirection = _this._convexityType = -1;
    },
    addRect$1: function(_, rect) {
      this.addRectWithDirection$3(rect, 0, 0);
    },
    _hasOnlyMoveTos$0: function() {
      var i,
        t1 = this.pathRef,
        verbCount = t1._fVerbsLength;
      for (t1 = t1._fVerbs, i = 0; i < verbCount; ++i)
        switch (t1[i]) {
          case 1:
          case 2:
          case 3:
          case 4:
            return false;
        }
      return true;
    },
    addRectWithDirection$3: function(rect, direction, startIndex) {
      var pointIndex1, pointIndex2, pointIndex3, t1, t2, t3, t4, t5, _this = this,
        isRect = _this._hasOnlyMoveTos$0(),
        finalDirection = _this._hasOnlyMoveTos$0() ? direction : -1,
        pointIndex0 = _this.pathRef.growForVerb$2(0, 0);
      _this.fLastMoveToIndex = pointIndex0 + 1;
      pointIndex1 = _this.pathRef.growForVerb$2(1, 0);
      pointIndex2 = _this.pathRef.growForVerb$2(1, 0);
      pointIndex3 = _this.pathRef.growForVerb$2(1, 0);
      _this.pathRef.growForVerb$2(5, 0);
      t1 = _this.pathRef;
      t2 = rect.left;
      t3 = rect.top;
      t4 = rect.right;
      t5 = rect.bottom;
      if (direction === 0) {
        t1.setPoint$3(pointIndex0, t2, t3);
        _this.pathRef.setPoint$3(pointIndex1, t4, t3);
        _this.pathRef.setPoint$3(pointIndex2, t4, t5);
        _this.pathRef.setPoint$3(pointIndex3, t2, t5);
      } else {
        t1.setPoint$3(pointIndex3, t2, t5);
        _this.pathRef.setPoint$3(pointIndex2, t4, t5);
        _this.pathRef.setPoint$3(pointIndex1, t4, t3);
        _this.pathRef.setPoint$3(pointIndex0, t2, t3);
      }
      t1 = _this.pathRef;
      t1.fIsRect = isRect;
      t1.fRRectOrOvalIsCCW = direction === 1;
      t1.fRRectOrOvalStartIdx = 0;
      _this._firstDirection = _this._convexityType = -1;
      _this._firstDirection = finalDirection;
    },
    addOval$1: function(_, oval) {
      this._addOval$3(oval, 0, 0);
    },
    _addOval$3: function(oval, direction, startIndex) {
      var t1, _this = this,
        isOval = _this._hasOnlyMoveTos$0(),
        left = oval.left,
        right = oval.right,
        centerX = (left + right) / 2,
        $top = oval.top,
        bottom = oval.bottom,
        centerY = ($top + bottom) / 2;
      if (direction === 0) {
        _this.moveTo$2(0, right, centerY);
        _this.conicTo$5(0, right, bottom, centerX, bottom, 0.707106781);
        _this.conicTo$5(0, left, bottom, left, centerY, 0.707106781);
        _this.conicTo$5(0, left, $top, centerX, $top, 0.707106781);
        _this.conicTo$5(0, right, $top, right, centerY, 0.707106781);
      } else {
        _this.moveTo$2(0, right, centerY);
        _this.conicTo$5(0, right, $top, centerX, $top, 0.707106781);
        _this.conicTo$5(0, left, $top, left, centerY, 0.707106781);
        _this.conicTo$5(0, left, bottom, centerX, bottom, 0.707106781);
        _this.conicTo$5(0, right, bottom, right, centerY, 0.707106781);
      }
      _this.close$0(0);
      t1 = _this.pathRef;
      t1.fIsOval = isOval;
      t1.fRRectOrOvalIsCCW = direction === 1;
      t1.fRRectOrOvalStartIdx = 0;
      _this._firstDirection = _this._convexityType = -1;
      if (isOval)
        _this._firstDirection = direction;
    },
    addRRect$1: function(_, rrect) {
      var t6, width, height, tlRadiusX, trRadiusX, blRadiusX, brRadiusX, tlRadiusY, trRadiusY, blRadiusY, brRadiusY, scale, _this = this,
        isRRect = _this._hasOnlyMoveTos$0(),
        t1 = rrect.left,
        t2 = rrect.top,
        t3 = rrect.right,
        t4 = rrect.bottom,
        bounds = new P.Rect(t1, t2, t3, t4),
        t5 = rrect.tlRadiusX;
      if (t5 === 0 || rrect.tlRadiusY === 0)
        if (rrect.trRadiusX === 0 || rrect.trRadiusY === 0)
          if (rrect.blRadiusX === 0 || rrect.blRadiusY === 0)
            t6 = rrect.brRadiusX === 0 || rrect.brRadiusY === 0;
          else
            t6 = false;
        else
          t6 = false;
      else
        t6 = false;
      if (t6 || t1 >= t3 || t2 >= t4)
        _this.addRectWithDirection$3(bounds, 0, 3);
      else if (H._isRRectOval(rrect))
        _this._addOval$3(bounds, 0, 3);
      else {
        width = t3 - t1;
        height = t4 - t2;
        tlRadiusX = Math.max(0, t5);
        trRadiusX = Math.max(0, rrect.trRadiusX);
        blRadiusX = Math.max(0, rrect.blRadiusX);
        brRadiusX = Math.max(0, rrect.brRadiusX);
        tlRadiusY = Math.max(0, rrect.tlRadiusY);
        trRadiusY = Math.max(0, rrect.trRadiusY);
        blRadiusY = Math.max(0, rrect.blRadiusY);
        brRadiusY = Math.max(0, rrect.brRadiusY);
        scale = H._computeMinScale(blRadiusY, brRadiusY, height, H._computeMinScale(tlRadiusY, trRadiusY, height, H._computeMinScale(blRadiusX, brRadiusX, width, H._computeMinScale(tlRadiusX, trRadiusX, width, 1))));
        t5 = t4 - scale * blRadiusY;
        _this.moveTo$2(0, t1, t5);
        _this.lineTo$2(0, t1, t2 + scale * tlRadiusY);
        _this.conicTo$5(0, t1, t2, t1 + scale * tlRadiusX, t2, 0.707106781);
        _this.lineTo$2(0, t3 - scale * trRadiusX, t2);
        _this.conicTo$5(0, t3, t2, t3, t2 + scale * trRadiusY, 0.707106781);
        _this.lineTo$2(0, t3, t4 - scale * brRadiusY);
        _this.conicTo$5(0, t3, t4, t3 - scale * brRadiusX, t4, 0.707106781);
        _this.lineTo$2(0, t1 + scale * blRadiusX, t4);
        _this.conicTo$5(0, t1, t4, t1, t5, 0.707106781);
        _this.close$0(0);
        _this._firstDirection = isRRect ? 0 : -1;
        t1 = _this.pathRef;
        t1.fIsRRect = isRRect;
        t1.fRRectOrOvalIsCCW = false;
        t1.fRRectOrOvalStartIdx = 6;
      }
    },
    contains$1: function(_, point) {
      var bounds, x, y, t1, windings, evenOddFill, w, onCurveCount, iter, _buffer, tangents, done, oldCount, t2, last, tangent, dx, dy, index, test, t3, offset, _this = this;
      if (_this.pathRef._fVerbsLength === 0)
        return false;
      bounds = _this.getBounds$0(0);
      x = point._dx;
      y = point._dy;
      if (x < bounds.left || y < bounds.top || x > bounds.right || y > bounds.bottom)
        return false;
      t1 = _this.pathRef;
      windings = new H.PathWinding(t1, x, y, new Float32Array(18));
      windings._walkPath$0();
      evenOddFill = C.PathFillType_1 === _this._fillType;
      w = windings._w;
      if ((evenOddFill ? w & 1 : w) !== 0)
        return true;
      onCurveCount = windings._onCurveCount;
      if (onCurveCount <= 1)
        return C.JSBool_methods.$xor(onCurveCount !== 0, false);
      t1 = onCurveCount & 1;
      if (t1 !== 0 || evenOddFill)
        return t1 !== 0;
      iter = H.PathIterator$(_this.pathRef, true);
      _buffer = new Float32Array(18);
      tangents = H.setRuntimeTypeInfo([], type$.JSArray_Offset);
      t1 = iter.pathRef;
      done = false;
      do {
        oldCount = tangents.length;
        switch (iter.next$1(0, _buffer)) {
          case 0:
          case 5:
            break;
          case 1:
            H.tangentLine(_buffer, x, y, tangents);
            break;
          case 2:
            H.tangentQuad(_buffer, x, y, tangents);
            break;
          case 3:
            t2 = iter._conicWeightIndex;
            H.tangentConic(_buffer, x, y, t1._conicWeights[t2], tangents);
            break;
          case 4:
            H.tangentCubic(_buffer, x, y, tangents);
            break;
          case 6:
            done = true;
            break;
        }
        t2 = tangents.length;
        if (t2 > oldCount) {
          last = t2 - 1;
          tangent = tangents[last];
          dx = tangent._dx;
          dy = tangent._dy;
          if (Math.abs(dx * dx + dy * dy - 0) < 0.000244140625)
            C.JSArray_methods.remove$1(tangents, last);
          else
            for (index = 0; index < last; ++index) {
              test = tangents[index];
              t2 = test._dx;
              t3 = test._dy;
              if (Math.abs(t2 * dy - t3 * dx - 0) < 0.000244140625) {
                t2 = dx * t2;
                if (t2 < 0)
                  t2 = -1;
                else
                  t2 = t2 > 0 ? 1 : 0;
                if (t2 <= 0) {
                  t2 = dy * t3;
                  if (t2 < 0)
                    t2 = -1;
                  else
                    t2 = t2 > 0 ? 1 : 0;
                  t2 = t2 <= 0;
                } else
                  t2 = false;
              } else
                t2 = false;
              if (t2) {
                offset = C.JSArray_methods.removeAt$1(tangents, last);
                if (index !== tangents.length)
                  tangents[index] = offset;
                break;
              }
            }
        }
      } while (!done);
      return tangents.length !== 0 || false;
    },
    shift$1: function(offset) {
      var t6,
        t1 = offset._dx,
        t2 = offset._dy,
        t3 = this.pathRef,
        t4 = H.PathRef__fPointsFromSource(t3, t1, t2),
        t5 = t3._fVerbsCapacity,
        verbs = new Uint8Array(t5);
      C.NativeUint8List_methods.setAll$2(verbs, 0, t3._fVerbs);
      t4 = new H.PathRef(t4, verbs);
      t5 = t3._conicWeightsCapacity;
      t4._conicWeightsCapacity = t5;
      t4._conicWeightsLength = t3._conicWeightsLength;
      t6 = t3._conicWeights;
      if (t6 != null) {
        t5 = new Float32Array(t5);
        t4._conicWeights = t5;
        C.NativeFloat32List_methods.setAll$2(t5, 0, t6);
      }
      t4._fVerbsCapacity = t3._fVerbsCapacity;
      t4._fVerbsLength = t3._fVerbsLength;
      t4._fPointsCapacity = t3._fPointsCapacity;
      t4._fPointsLength = t3._fPointsLength;
      t5 = t3.fBoundsIsDirty;
      t4.fBoundsIsDirty = t5;
      if (!t5) {
        t4.fBounds = t3.fBounds.translate$2(0, t1, t2);
        t5 = t3.cachedBounds;
        t4.cachedBounds = t5 == null ? null : t5.translate$2(0, t1, t2);
        t4.fIsFinite = t3.fIsFinite;
      }
      t4.fSegmentMask = t3.fSegmentMask;
      t4.fIsOval = t3.fIsOval;
      t4.fIsRRect = t3.fIsRRect;
      t4.fIsRect = t3.fIsRect;
      t4.fRRectOrOvalIsCCW = t3.fRRectOrOvalIsCCW;
      t4.fRRectOrOvalStartIdx = t3.fRRectOrOvalStartIdx;
      t1 = new H.SurfacePath(t4, C.PathFillType_0);
      t1._copyFields$1(this);
      return t1;
    },
    getBounds$0: function(_) {
      var t2, iter, points, ltrbInitialized, left, $top, right, bottom, minX, maxX, minY, maxY, cubicBounds, quadBounds, conicBounds, verb, pIndex, pointIndex, x1, pointIndex0, y1, cpX, cpY, x2, y2, t3, t4, t5, denom, t10, tprime, t6, t7, extremaX, extremaY, t20, tprime2, extrema2X, extrema2Y, roots, P20x, wP10x, $B, src2w, P20y, wP10y, startX, startY, cpX1, cpY1, cpX2, cpY2, endX, endY, a, b, s, t, newBounds, _this = this,
        t1 = _this.pathRef;
      if ((t1.fIsRRect ? t1.fRRectOrOvalStartIdx : -1) === -1)
        t2 = (t1.fIsOval ? t1.fRRectOrOvalStartIdx : -1) !== -1;
      else
        t2 = true;
      if (t2)
        return t1.getBounds$0(0);
      if (!t1.fBoundsIsDirty && t1.cachedBounds != null) {
        t1 = t1.cachedBounds;
        t1.toString;
        return t1;
      }
      iter = new H.PathRefIterator(t1);
      iter.PathRefIterator$1(t1);
      points = _this.pathRef._fPoints;
      for (ltrbInitialized = false, left = 0, $top = 0, right = 0, bottom = 0, minX = 0, maxX = 0, minY = 0, maxY = 0, cubicBounds = null, quadBounds = null, conicBounds = null; verb = iter.nextIndex$0(), verb !== 6;) {
        pIndex = iter.iterIndex;
        switch (verb) {
          case 0:
            maxX = points[pIndex];
            maxY = points[pIndex + 1];
            minY = maxY;
            minX = maxX;
            break;
          case 1:
            maxX = points[pIndex + 2];
            maxY = points[pIndex + 3];
            minY = maxY;
            minX = maxX;
            break;
          case 2:
            if (quadBounds == null)
              quadBounds = new H._QuadBounds();
            pointIndex = pIndex + 1;
            x1 = points[pIndex];
            pointIndex0 = pointIndex + 1;
            y1 = points[pointIndex];
            pointIndex = pointIndex0 + 1;
            cpX = points[pointIndex0];
            pointIndex0 = pointIndex + 1;
            cpY = points[pointIndex];
            x2 = points[pointIndex0];
            y2 = points[pointIndex0 + 1];
            t2 = quadBounds.minX = Math.min(x1, x2);
            t3 = quadBounds.minY = Math.min(y1, y2);
            t4 = quadBounds.maxX = Math.max(x1, x2);
            t5 = quadBounds.maxY = Math.max(y1, y2);
            denom = x1 - 2 * cpX + x2;
            if (Math.abs(denom) > 0.000244140625) {
              t10 = (x1 - cpX) / denom;
              if (t10 >= 0 && t10 <= 1) {
                tprime = 1 - t10;
                t6 = tprime * tprime;
                t7 = 2 * t10 * tprime;
                t10 *= t10;
                extremaX = t6 * x1 + t7 * cpX + t10 * x2;
                extremaY = t6 * y1 + t7 * cpY + t10 * y2;
                t2 = Math.min(t2, extremaX);
                quadBounds.minX = t2;
                t4 = Math.max(t4, extremaX);
                quadBounds.maxX = t4;
                t3 = Math.min(t3, extremaY);
                quadBounds.minY = t3;
                t5 = Math.max(t5, extremaY);
                quadBounds.maxY = t5;
              }
            }
            denom = y1 - 2 * cpY + y2;
            if (Math.abs(denom) > 0.000244140625) {
              t20 = (y1 - cpY) / denom;
              if (t20 >= 0 && t20 <= 1) {
                tprime2 = 1 - t20;
                t6 = tprime2 * tprime2;
                t7 = 2 * t20 * tprime2;
                t20 *= t20;
                extrema2X = t6 * x1 + t7 * cpX + t20 * x2;
                extrema2Y = t6 * y1 + t7 * cpY + t20 * y2;
                t2 = Math.min(t2, extrema2X);
                quadBounds.minX = t2;
                t4 = Math.max(t4, extrema2X);
                quadBounds.maxX = t4;
                t3 = Math.min(t3, extrema2Y);
                quadBounds.minY = t3;
                t5 = Math.max(t5, extrema2Y);
                quadBounds.maxY = t5;
              }
              maxY = t5;
              maxX = t4;
              minY = t3;
              minX = t2;
            } else {
              maxY = t5;
              maxX = t4;
              minY = t3;
              minX = t2;
            }
            break;
          case 3:
            if (conicBounds == null)
              conicBounds = new H._ConicBounds();
            t2 = t1._conicWeights[iter._conicWeightIndex];
            pointIndex = pIndex + 1;
            x1 = points[pIndex];
            pointIndex0 = pointIndex + 1;
            y1 = points[pointIndex];
            pointIndex = pointIndex0 + 1;
            cpX = points[pointIndex0];
            pointIndex0 = pointIndex + 1;
            cpY = points[pointIndex];
            x2 = points[pointIndex0];
            y2 = points[pointIndex0 + 1];
            conicBounds.minX = Math.min(x1, x2);
            conicBounds.minY = Math.min(y1, y2);
            conicBounds.maxX = Math.max(x1, x2);
            conicBounds.maxY = Math.max(y1, y2);
            roots = new H._QuadRoots();
            P20x = x2 - x1;
            wP10x = t2 * (cpX - x1);
            if (roots.findRoots$3(t2 * P20x - P20x, P20x - 2 * wP10x, wP10x) !== 0) {
              t3 = roots.root0;
              t3.toString;
              if (t3 >= 0 && t3 <= 1) {
                $B = 2 * (t2 - 1);
                denom = (-$B * t3 + $B) * t3 + 1;
                src2w = cpX * t2;
                extremaX = (((x2 - 2 * src2w + x1) * t3 + 2 * (src2w - x1)) * t3 + x1) / denom;
                src2w = cpY * t2;
                extremaY = (((y2 - 2 * src2w + y1) * t3 + 2 * (src2w - y1)) * t3 + y1) / denom;
                conicBounds.minX = Math.min(conicBounds.minX, extremaX);
                conicBounds.maxX = Math.max(conicBounds.maxX, extremaX);
                conicBounds.minY = Math.min(conicBounds.minY, extremaY);
                conicBounds.maxY = Math.max(conicBounds.maxY, extremaY);
              }
            }
            P20y = y2 - y1;
            wP10y = t2 * (cpY - y1);
            if (roots.findRoots$3(t2 * P20y - P20y, P20y - 2 * wP10y, wP10y) !== 0) {
              t3 = roots.root0;
              t3.toString;
              if (t3 >= 0 && t3 <= 1) {
                $B = 2 * (t2 - 1);
                denom = (-$B * t3 + $B) * t3 + 1;
                src2w = cpX * t2;
                extrema2X = (((x2 - 2 * src2w + x1) * t3 + 2 * (src2w - x1)) * t3 + x1) / denom;
                src2w = cpY * t2;
                extrema2Y = (((y2 - 2 * src2w + y1) * t3 + 2 * (src2w - y1)) * t3 + y1) / denom;
                conicBounds.minX = Math.min(conicBounds.minX, extrema2X);
                conicBounds.maxX = Math.max(conicBounds.maxX, extrema2X);
                conicBounds.minY = Math.min(conicBounds.minY, extrema2Y);
                conicBounds.maxY = Math.max(conicBounds.maxY, extrema2Y);
              }
            }
            minX = conicBounds.minX;
            minY = conicBounds.minY;
            maxX = conicBounds.maxX;
            maxY = conicBounds.maxY;
            break;
          case 4:
            if (cubicBounds == null)
              cubicBounds = new H._CubicBounds();
            pointIndex = pIndex + 1;
            startX = points[pIndex];
            pointIndex0 = pointIndex + 1;
            startY = points[pointIndex];
            pointIndex = pointIndex0 + 1;
            cpX1 = points[pointIndex0];
            pointIndex0 = pointIndex + 1;
            cpY1 = points[pointIndex];
            pointIndex = pointIndex0 + 1;
            cpX2 = points[pointIndex0];
            pointIndex0 = pointIndex + 1;
            cpY2 = points[pointIndex];
            endX = points[pointIndex0];
            endY = points[pointIndex0 + 1];
            t2 = Math.min(startX, endX);
            cubicBounds.minX = t2;
            cubicBounds.minY = Math.min(startY, endY);
            t3 = Math.max(startX, endX);
            cubicBounds.maxX = t3;
            cubicBounds.maxY = Math.max(startY, endY);
            if (!(startX < cpX1 && cpX1 < cpX2 && cpX2 < endX))
              t4 = startX > cpX1 && cpX1 > cpX2 && cpX2 > endX;
            else
              t4 = true;
            if (!t4) {
              t4 = -startX;
              a = t4 + 3 * (cpX1 - cpX2) + endX;
              b = 2 * (startX - 2 * cpX1 + cpX2);
              s = b * b - 4 * a * (t4 + cpX1);
              if (s >= 0 && Math.abs(a) > 0.000244140625) {
                t4 = -b;
                t5 = 2 * a;
                if (s === 0) {
                  t = t4 / t5;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t4 = 3 * tprime;
                    extremaX = tprime * tprime * tprime * startX + t4 * tprime * t * cpX1 + t4 * t * t * cpX2 + t * t * t * endX;
                    cubicBounds.minX = Math.min(extremaX, t2);
                    cubicBounds.maxX = Math.max(extremaX, t3);
                  }
                } else {
                  s = Math.sqrt(s);
                  t = (t4 - s) / t5;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t2 = 3 * tprime;
                    extremaX = tprime * tprime * tprime * startX + t2 * tprime * t * cpX1 + t2 * t * t * cpX2 + t * t * t * endX;
                    cubicBounds.minX = Math.min(extremaX, cubicBounds.minX);
                    cubicBounds.maxX = Math.max(extremaX, cubicBounds.maxX);
                  }
                  t = (t4 + s) / t5;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t2 = 3 * tprime;
                    extremaX = tprime * tprime * tprime * startX + t2 * tprime * t * cpX1 + t2 * t * t * cpX2 + t * t * t * endX;
                    cubicBounds.minX = Math.min(extremaX, cubicBounds.minX);
                    cubicBounds.maxX = Math.max(extremaX, cubicBounds.maxX);
                  }
                }
              }
            }
            if (!(startY < cpY1 && cpY1 < cpY2 && cpY2 < endY))
              t2 = startY > cpY1 && cpY1 > cpY2 && cpY2 > endY;
            else
              t2 = true;
            if (!t2) {
              t2 = -startY;
              a = t2 + 3 * (cpY1 - cpY2) + endY;
              b = 2 * (startY - 2 * cpY1 + cpY2);
              s = b * b - 4 * a * (t2 + cpY1);
              if (s >= 0 && Math.abs(a) > 0.000244140625) {
                t2 = -b;
                t3 = 2 * a;
                if (s === 0) {
                  t = t2 / t3;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t2 = 3 * tprime;
                    extremaY = tprime * tprime * tprime * startY + t2 * tprime * t * cpY1 + t2 * t * t * cpY2 + t * t * t * endY;
                    cubicBounds.minY = Math.min(extremaY, cubicBounds.minY);
                    cubicBounds.maxY = Math.max(extremaY, cubicBounds.maxY);
                  }
                } else {
                  s = Math.sqrt(s);
                  t = (t2 - s) / t3;
                  tprime = 1 - t;
                  if (t >= 0 && t <= 1) {
                    t4 = 3 * tprime;
                    extremaY = tprime * tprime * tprime * startY + t4 * tprime * t * cpY1 + t4 * t * t * cpY2 + t * t * t * endY;
                    cubicBounds.minY = Math.min(extremaY, cubicBounds.minY);
                    cubicBounds.maxY = Math.max(extremaY, cubicBounds.maxY);
                  }
                  t2 = (t2 + s) / t3;
                  tprime2 = 1 - t2;
                  if (t2 >= 0 && t2 <= 1) {
                    t3 = 3 * tprime2;
                    extremaY = tprime2 * tprime2 * tprime2 * startY + t3 * tprime2 * t2 * cpY1 + t3 * t2 * t2 * cpY2 + t2 * t2 * t2 * endY;
                    cubicBounds.minY = Math.min(extremaY, cubicBounds.minY);
                    cubicBounds.maxY = Math.max(extremaY, cubicBounds.maxY);
                  }
                }
              }
            }
            minX = cubicBounds.minX;
            minY = cubicBounds.minY;
            maxX = cubicBounds.maxX;
            maxY = cubicBounds.maxY;
            break;
        }
        if (!ltrbInitialized) {
          bottom = maxY;
          right = maxX;
          $top = minY;
          left = minX;
          ltrbInitialized = true;
        } else {
          left = Math.min(left, minX);
          right = Math.max(right, maxX);
          $top = Math.min($top, minY);
          bottom = Math.max(bottom, maxY);
        }
      }
      newBounds = ltrbInitialized ? new P.Rect(left, $top, right, bottom) : C.Rect_0_0_0_0;
      _this.pathRef.getBounds$0(0);
      return _this.pathRef.cachedBounds = newBounds;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    },
    $isPath: 1
  };
  H._SkQuadCoefficients.prototype = {
    evalX$1: function(t) {
      return (this.ax * t + this.bx) * t + this.cx;
    },
    evalY$1: function(t) {
      return (this.ay * t + this.by) * t + this.cy;
    }
  };
  H.PathRef.prototype = {
    setPoint$3: function(pointIndex, x, y) {
      var index = pointIndex * 2,
        t1 = this._fPoints;
      t1[index] = x;
      t1[index + 1] = y;
    },
    atPoint$1: function(index) {
      var t1 = this._fPoints,
        t2 = index * 2;
      return new P.Offset(t1[t2], t1[t2 + 1]);
    },
    getRect$0: function() {
      var _this = this;
      if (_this.fIsRect)
        return new P.Rect(_this.atPoint$1(0)._dx, _this.atPoint$1(0)._dy, _this.atPoint$1(1)._dx, _this.atPoint$1(2)._dy);
      else
        return _this._fVerbsLength === 4 ? _this._detectRect$0() : null;
    },
    getBounds$0: function(_) {
      var t1;
      if (this.fBoundsIsDirty)
        this._computeBounds$0();
      t1 = this.fBounds;
      t1.toString;
      return t1;
    },
    _detectRect$0: function() {
      var width, x2, y2, height, t1, y3, _this = this, _null = null,
        x0 = _this.atPoint$1(0)._dx,
        y0 = _this.atPoint$1(0)._dy,
        x1 = _this.atPoint$1(1)._dx,
        y1 = _this.atPoint$1(1)._dy;
      if (_this._fVerbs[1] !== 1 || y1 !== y0)
        return _null;
      width = x1 - x0;
      x2 = _this.atPoint$1(2)._dx;
      y2 = _this.atPoint$1(2)._dy;
      if (_this._fVerbs[2] !== 1 || x2 !== x1)
        return _null;
      height = y2 - y1;
      t1 = _this.atPoint$1(3);
      y3 = _this.atPoint$1(3)._dy;
      if (_this._fVerbs[3] !== 1 || y3 !== y2)
        return _null;
      if (x2 - t1._dx !== width || y3 - y0 !== height)
        return _null;
      return new P.Rect(x0, y0, x0 + width, y0 + height);
    },
    getStraightLine$0: function() {
      var t1, x0, y0, x1, y1;
      if (this._fVerbsLength === 2) {
        t1 = this._fVerbs;
        t1 = t1[0] !== 0 || t1[1] !== 1;
      } else
        t1 = true;
      if (t1)
        return null;
      t1 = this._fPoints;
      x0 = t1[0];
      y0 = t1[1];
      x1 = t1[2];
      y1 = t1[3];
      if (y0 === y1 || x0 === x1)
        return new P.Rect(x0, y0, x1, y1);
      return null;
    },
    _getRRect$0: function() {
      var pts, cornerIndex, verb, controlPx, controlPy, vector1_0x, vector1_0y, t1, t2, dx, dy, t3,
        bounds = this.getBounds$0(0),
        radii = H.setRuntimeTypeInfo([], type$.JSArray_Radius),
        iter = new H.PathRefIterator(this);
      iter.PathRefIterator$1(this);
      pts = new Float32Array(8);
      iter.next$1(0, pts);
      for (cornerIndex = 0; verb = iter.next$1(0, pts), verb !== 6;)
        if (3 === verb) {
          controlPx = pts[2];
          controlPy = pts[3];
          vector1_0x = controlPx - pts[0];
          vector1_0y = controlPy - pts[1];
          t1 = pts[4];
          t2 = pts[5];
          if (vector1_0x !== 0) {
            dx = Math.abs(vector1_0x);
            dy = Math.abs(t2 - controlPy);
          } else {
            dy = Math.abs(vector1_0y);
            dx = vector1_0y !== 0 ? Math.abs(t1 - controlPx) : Math.abs(vector1_0x);
          }
          radii.push(new P.Radius(dx, dy));
          ++cornerIndex;
        }
      t1 = radii[0];
      t2 = radii[1];
      t3 = radii[2];
      return P.RRect$fromRectAndCorners(bounds, radii[3], t3, t1, t2);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return this.equals$1(type$.PathRef._as(other));
    },
    equals$1: function(ref) {
      var pointCount, len, t1, t2, i, weightCount, verbCount, _this = this;
      if (_this.fSegmentMask !== ref.fSegmentMask)
        return false;
      pointCount = _this._fPointsLength;
      if (pointCount !== ref._fPointsLength)
        return false;
      for (len = pointCount * 2, t1 = _this._fPoints, t2 = ref._fPoints, i = 0; i < len; ++i)
        if (t1[i] !== t2[i])
          return false;
      t1 = _this._conicWeights;
      if (t1 == null) {
        if (ref._conicWeights != null)
          return false;
      } else {
        t2 = ref._conicWeights;
        if (t2 == null)
          return false;
        weightCount = t1.length;
        if (t2.length !== weightCount)
          return false;
        for (i = 0; i < weightCount; ++i)
          if (t1[i] !== t2[i])
            return false;
      }
      verbCount = _this._fVerbsLength;
      if (verbCount !== ref._fVerbsLength)
        return false;
      for (t1 = _this._fVerbs, t2 = ref._fVerbs, i = 0; i < verbCount; ++i)
        if (t1[i] !== t2[i])
          return false;
      return true;
    },
    _resizePoints$1: function(newLength) {
      var t1, newPoints, _this = this;
      if (newLength > _this._fPointsCapacity) {
        t1 = newLength + 10;
        _this._fPointsCapacity = t1;
        newPoints = new Float32Array(t1 * 2);
        newPoints.set.apply(newPoints, [_this._fPoints]);
        _this._fPoints = newPoints;
      }
      _this._fPointsLength = newLength;
    },
    _resizeVerbs$1: function(newLength) {
      var t1, newVerbs, _this = this;
      if (newLength > _this._fVerbsCapacity) {
        t1 = newLength + 8;
        _this._fVerbsCapacity = t1;
        newVerbs = new Uint8Array(t1);
        newVerbs.set.apply(newVerbs, [_this._fVerbs]);
        _this._fVerbs = newVerbs;
      }
      _this._fVerbsLength = newLength;
    },
    _resizeConicWeights$1: function(newLength) {
      var t1, newWeights, _this = this;
      if (newLength > _this._conicWeightsCapacity) {
        t1 = newLength + 4;
        _this._conicWeightsCapacity = t1;
        newWeights = new Float32Array(t1);
        t1 = _this._conicWeights;
        if (t1 != null)
          newWeights.set.apply(newWeights, [t1]);
        _this._conicWeights = newWeights;
      }
      _this._conicWeightsLength = newLength;
    },
    _computeBounds$0: function() {
      var t1, maxX, maxY, accum, len, minY, minX, i, x, y, _this = this,
        pointCount = _this._fPointsLength;
      _this.fBoundsIsDirty = false;
      _this.cachedBounds = null;
      if (pointCount === 0) {
        _this.fBounds = C.Rect_0_0_0_0;
        _this.fIsFinite = true;
      } else {
        t1 = _this._fPoints;
        maxX = t1[0];
        maxY = t1[1];
        accum = 0 * maxX * maxY;
        for (len = 2 * pointCount, minY = maxY, minX = maxX, i = 2; i < len; i += 2) {
          x = t1[i];
          y = t1[i + 1];
          accum = accum * x * y;
          minX = Math.min(minX, x);
          minY = Math.min(minY, y);
          maxX = Math.max(maxX, x);
          maxY = Math.max(maxY, y);
        }
        if (accum * 0 === 0) {
          _this.fBounds = new P.Rect(minX, minY, maxX, maxY);
          _this.fIsFinite = true;
        } else {
          _this.fBounds = C.Rect_0_0_0_0;
          _this.fIsFinite = false;
        }
      }
    },
    growForVerb$2: function(verb, weight) {
      var pCnt, mask, verbCount, weightCount, ptsIndex, _this = this;
      switch (verb) {
        case 0:
          pCnt = 1;
          mask = 0;
          break;
        case 1:
          pCnt = 1;
          mask = 1;
          break;
        case 2:
          pCnt = 2;
          mask = 2;
          break;
        case 3:
          pCnt = 2;
          mask = 4;
          break;
        case 4:
          pCnt = 3;
          mask = 8;
          break;
        case 5:
          pCnt = 0;
          mask = 0;
          break;
        case 6:
          pCnt = 0;
          mask = 0;
          break;
        default:
          pCnt = 0;
          mask = 0;
          break;
      }
      _this.fSegmentMask |= mask;
      _this.fBoundsIsDirty = true;
      _this.startEdit$0();
      verbCount = _this._fVerbsLength;
      _this._resizeVerbs$1(verbCount + 1);
      _this._fVerbs[verbCount] = verb;
      if (3 === verb) {
        weightCount = _this._conicWeightsLength;
        _this._resizeConicWeights$1(weightCount + 1);
        _this._conicWeights[weightCount] = weight;
      }
      ptsIndex = _this._fPointsLength;
      _this._resizePoints$1(ptsIndex + pCnt);
      return ptsIndex;
    },
    startEdit$0: function() {
      var _this = this;
      _this.fIsRect = _this.fIsRRect = _this.fIsOval = false;
      _this.cachedBounds = null;
      _this.fBoundsIsDirty = true;
    }
  };
  H.PathRefIterator.prototype = {
    PathRefIterator$1: function(pathRef) {
      var t1;
      this._pointIndex = 0;
      t1 = this.pathRef;
      if (t1.fBoundsIsDirty)
        t1._computeBounds$0();
      if (!t1.fIsFinite)
        this._verbIndex = t1._fVerbsLength;
    },
    nextIndex$0: function() {
      var verb, _this = this,
        t1 = _this._verbIndex,
        t2 = _this.pathRef;
      if (t1 === t2._fVerbsLength)
        return 6;
      t2 = t2._fVerbs;
      _this._verbIndex = t1 + 1;
      verb = t2[t1];
      switch (verb) {
        case 0:
          t1 = _this._pointIndex;
          _this.iterIndex = t1;
          _this._pointIndex = t1 + 2;
          break;
        case 1:
          t1 = _this._pointIndex;
          _this.iterIndex = t1 - 2;
          _this._pointIndex = t1 + 2;
          break;
        case 3:
          ++_this._conicWeightIndex;
          t1 = _this._pointIndex;
          _this.iterIndex = t1 - 2;
          _this._pointIndex = t1 + 4;
          break;
        case 2:
          t1 = _this._pointIndex;
          _this.iterIndex = t1 - 2;
          _this._pointIndex = t1 + 4;
          break;
        case 4:
          t1 = _this._pointIndex;
          _this.iterIndex = t1 - 2;
          _this._pointIndex = t1 + 6;
          break;
        case 5:
          break;
        case 6:
          break;
        default:
          throw H.wrapException(P.FormatException$("Unsupport Path verb " + verb, null, null));
      }
      return verb;
    },
    next$1: function(_, outPts) {
      var t3, verb, points, pointIndex, pointIndex0, _this = this,
        t1 = _this._verbIndex,
        t2 = _this.pathRef;
      if (t1 === t2._fVerbsLength)
        return 6;
      t3 = t2._fVerbs;
      _this._verbIndex = t1 + 1;
      verb = t3[t1];
      points = t2._fPoints;
      pointIndex = _this._pointIndex;
      switch (verb) {
        case 0:
          pointIndex0 = pointIndex + 1;
          outPts[0] = points[pointIndex];
          pointIndex = pointIndex0 + 1;
          outPts[1] = points[pointIndex0];
          break;
        case 1:
          outPts[0] = points[pointIndex - 2];
          outPts[1] = points[pointIndex - 1];
          pointIndex0 = pointIndex + 1;
          outPts[2] = points[pointIndex];
          pointIndex = pointIndex0 + 1;
          outPts[3] = points[pointIndex0];
          break;
        case 3:
          ++_this._conicWeightIndex;
          outPts[0] = points[pointIndex - 2];
          outPts[1] = points[pointIndex - 1];
          pointIndex0 = pointIndex + 1;
          outPts[2] = points[pointIndex];
          pointIndex = pointIndex0 + 1;
          outPts[3] = points[pointIndex0];
          pointIndex0 = pointIndex + 1;
          outPts[4] = points[pointIndex];
          pointIndex = pointIndex0 + 1;
          outPts[5] = points[pointIndex0];
          break;
        case 2:
          outPts[0] = points[pointIndex - 2];
          outPts[1] = points[pointIndex - 1];
          pointIndex0 = pointIndex + 1;
          outPts[2] = points[pointIndex];
          pointIndex = pointIndex0 + 1;
          outPts[3] = points[pointIndex0];
          pointIndex0 = pointIndex + 1;
          outPts[4] = points[pointIndex];
          pointIndex = pointIndex0 + 1;
          outPts[5] = points[pointIndex0];
          break;
        case 4:
          outPts[0] = points[pointIndex - 2];
          outPts[1] = points[pointIndex - 1];
          pointIndex0 = pointIndex + 1;
          outPts[2] = points[pointIndex];
          pointIndex = pointIndex0 + 1;
          outPts[3] = points[pointIndex0];
          pointIndex0 = pointIndex + 1;
          outPts[4] = points[pointIndex];
          pointIndex = pointIndex0 + 1;
          outPts[5] = points[pointIndex0];
          pointIndex0 = pointIndex + 1;
          outPts[6] = points[pointIndex];
          pointIndex = pointIndex0 + 1;
          outPts[7] = points[pointIndex0];
          break;
        case 5:
          break;
        case 6:
          break;
        default:
          throw H.wrapException(P.FormatException$("Unsupport Path verb " + verb, null, null));
      }
      _this._pointIndex = pointIndex;
      return verb;
    }
  };
  H._QuadRoots.prototype = {
    findRoots$3: function(a, b, c) {
      var t1, dr, q, res, rootCount, rootCount0, t2, _this = this;
      if (a === 0) {
        t1 = H._validUnitDivide(-c, b);
        _this.root0 = t1;
        return t1 == null ? 0 : 1;
      }
      dr = b * b - 4 * a * c;
      if (dr < 0)
        return 0;
      dr = Math.sqrt(dr);
      if (!isFinite(dr))
        return 0;
      q = b < 0 ? -(b - dr) / 2 : -(b + dr) / 2;
      res = H._validUnitDivide(q, a);
      if (res != null) {
        _this.root0 = res;
        rootCount = 1;
      } else
        rootCount = 0;
      res = H._validUnitDivide(c, q);
      if (res != null) {
        rootCount0 = rootCount + 1;
        if (rootCount === 0)
          _this.root0 = res;
        else
          _this.root1 = res;
        rootCount = rootCount0;
      }
      if (rootCount === 2) {
        t1 = _this.root0;
        t1.toString;
        t2 = _this.root1;
        t2.toString;
        if (t1 > t2) {
          _this.root0 = t2;
          _this.root1 = t1;
        } else if (t1 === t2)
          return 1;
      }
      return rootCount;
    }
  };
  H.PathWinding.prototype = {
    _walkPath$0: function() {
      var t2, t3, verb, n, winding, t4, t5, t6, t7, t8, t9, t10, isMono, conics, _this = this,
        t1 = _this.pathRef,
        iter = H.PathIterator$(t1, true);
      for (t2 = _this.__engine$_buffer, t3 = type$.JSArray_Conic; verb = iter.next$1(0, t2), verb !== 6;)
        switch (verb) {
          case 0:
          case 5:
            break;
          case 1:
            _this._computeLineWinding$0();
            break;
          case 2:
            n = !H.PathWinding__isQuadMonotonic(t2) ? H.PathWinding__chopQuadAtExtrema(t2) : 0;
            winding = _this._computeMonoQuadWinding$6(t2[0], t2[1], t2[2], t2[3], t2[4], t2[5]);
            _this._w += n > 0 ? winding + _this._computeMonoQuadWinding$6(t2[4], t2[5], t2[6], t2[7], t2[8], t2[9]) : winding;
            break;
          case 3:
            t4 = t1._conicWeights[iter._conicWeightIndex];
            t5 = t2[0];
            t6 = t2[1];
            t7 = t2[2];
            t8 = t2[3];
            t9 = t2[4];
            t10 = t2[5];
            isMono = H.PathWinding__isQuadMonotonic(t2);
            conics = H.setRuntimeTypeInfo([], t3);
            new H.Conic(t5, t6, t7, t8, t9, t10, t4).chopAtYExtrema$1(conics);
            _this._computeMonoConicWinding$1(conics[0]);
            if (!isMono && conics.length === 2)
              _this._computeMonoConicWinding$1(conics[1]);
            break;
          case 4:
            _this._computeCubicWinding$0();
            break;
        }
    },
    _computeLineWinding$0: function() {
      var y1, y0, dir, t2, crossProduct, _this = this,
        t1 = _this.__engine$_buffer,
        x0 = t1[0],
        startY = t1[1],
        x1 = t1[2],
        endY = t1[3];
      if (startY > endY) {
        y1 = startY;
        y0 = endY;
        dir = -1;
      } else {
        y1 = endY;
        y0 = startY;
        dir = 1;
      }
      t1 = _this.y;
      if (t1 < y0 || t1 > y1)
        return;
      t2 = _this.x;
      if (H.PathWinding__checkOnCurve(t2, t1, x0, startY, x1, endY)) {
        ++_this._onCurveCount;
        return;
      }
      if (t1 === y1)
        return;
      crossProduct = (x1 - x0) * (t1 - startY) - (endY - startY) * (t2 - x0);
      if (crossProduct === 0) {
        if (t2 !== x1 || t1 !== endY)
          ++_this._onCurveCount;
        dir = 0;
      } else if (H.SPath_scalarSignedAsInt(crossProduct) === dir)
        dir = 0;
      _this._w += dir;
    },
    _computeMonoQuadWinding$6: function(x0, y0, x1, y1, x2, y2) {
      var y20, y00, dir, t1, t2, quadRoots, xt, t3, _this = this;
      if (y0 > y2) {
        y20 = y0;
        y00 = y2;
        dir = -1;
      } else {
        y20 = y2;
        y00 = y0;
        dir = 1;
      }
      t1 = _this.y;
      if (t1 < y00 || t1 > y20)
        return 0;
      t2 = _this.x;
      if (H.PathWinding__checkOnCurve(t2, t1, x0, y0, x2, y2)) {
        ++_this._onCurveCount;
        return 0;
      }
      if (t1 === y20)
        return 0;
      quadRoots = new H._QuadRoots();
      if (0 === quadRoots.findRoots$3(y0 - 2 * y1 + y2, 2 * (y1 - y0), y0 - t1))
        xt = dir === 1 ? x0 : x2;
      else {
        t3 = quadRoots.root0;
        t3.toString;
        xt = ((x2 - 2 * x1 + x0) * t3 + 2 * (x1 - x0)) * t3 + x0;
      }
      if (Math.abs(xt - t2) < 0.000244140625)
        if (t2 !== x2 || t1 !== y2) {
          ++_this._onCurveCount;
          return 0;
        }
      return xt < t2 ? dir : 0;
    },
    _computeMonoConicWinding$1: function(conic) {
      var y20, y00, dir, t1, t2, xt, xt0, t3, $B, quadRoots, t4, _this = this,
        y0 = conic.p0y,
        y2 = conic.p2y;
      if (y0 > y2) {
        y20 = y0;
        y00 = y2;
        dir = -1;
      } else {
        y20 = y2;
        y00 = y0;
        dir = 1;
      }
      t1 = _this.y;
      if (t1 < y00 || t1 > y20)
        return;
      t2 = _this.x;
      xt = conic.p0x;
      xt0 = conic.p2x;
      if (H.PathWinding__checkOnCurve(t2, t1, xt, y0, xt0, y2)) {
        ++_this._onCurveCount;
        return;
      }
      if (t1 === y20)
        return;
      t3 = conic.fW;
      $B = conic.p1y * t3 - t1 * t3 + t1;
      quadRoots = new H._QuadRoots();
      if (0 === quadRoots.findRoots$3(y2 + (y0 - 2 * $B), 2 * ($B - y0), y0 - t1))
        xt = dir === 1 ? xt : xt0;
      else {
        t4 = quadRoots.root0;
        t4.toString;
        xt = H._conicEvalNumerator(xt, conic.p1x, xt0, t3, t4) / H._conicEvalDenominator(t3, t4);
      }
      if (Math.abs(xt - t2) < 0.000244140625)
        if (t2 !== xt0 || t1 !== conic.p2y) {
          ++_this._onCurveCount;
          return;
        }
      t1 = _this._w;
      _this._w = t1 + (xt < t2 ? dir : 0);
    },
    _computeCubicWinding$0: function() {
      var i,
        t1 = this.__engine$_buffer,
        n = H._chopCubicAtYExtrema(t1, t1);
      for (i = 0; i <= n; ++i)
        this._windingMonoCubic$1(i * 3 * 2);
    },
    _windingMonoCubic$1: function(bufferIndex) {
      var px2, px3, py3, y3, y0, dir, t2, t3, min, max, t, xt, _this = this,
        t1 = _this.__engine$_buffer,
        bufferIndex0 = bufferIndex + 1,
        px0 = t1[bufferIndex],
        bufferIndex1 = bufferIndex0 + 1,
        py0 = t1[bufferIndex0],
        px1 = t1[bufferIndex1];
      bufferIndex0 = bufferIndex1 + 1 + 1;
      px2 = t1[bufferIndex0];
      bufferIndex0 = bufferIndex0 + 1 + 1;
      px3 = t1[bufferIndex0];
      py3 = t1[bufferIndex0 + 1];
      if (py0 > py3) {
        y3 = py0;
        y0 = py3;
        dir = -1;
      } else {
        y3 = py3;
        y0 = py0;
        dir = 1;
      }
      t2 = _this.y;
      if (t2 < y0 || t2 > y3)
        return;
      t3 = _this.x;
      if (H.PathWinding__checkOnCurve(t3, t2, px0, py0, px3, py3)) {
        ++_this._onCurveCount;
        return;
      }
      if (t2 === y3)
        return;
      min = Math.min(px0, Math.min(px1, Math.min(px2, px3)));
      max = Math.max(px0, Math.max(px1, Math.max(px2, px3)));
      if (t3 < min)
        return;
      if (t3 > max) {
        _this._w += dir;
        return;
      }
      t = H._chopMonoAtY(t1, bufferIndex, t2);
      if (t == null)
        return;
      xt = H._evalCubicPts(px0, px1, px2, px3, t);
      if (Math.abs(xt - t3) < 0.000244140625)
        if (t3 !== px3 || t2 !== py3) {
          ++_this._onCurveCount;
          return;
        }
      t1 = _this._w;
      _this._w = t1 + (xt < t3 ? dir : 0);
    }
  };
  H.PathIterator.prototype = {
    _autoClose$1: function(outPts) {
      var _this = this,
        t1 = _this._lastPointX,
        t2 = _this._moveToX;
      if (t1 !== t2 || _this._lastPointY !== _this._moveToY) {
        if (isNaN(t1) || isNaN(_this._lastPointY) || isNaN(t2) || isNaN(_this._moveToY))
          return 5;
        outPts[0] = t1;
        outPts[1] = _this._lastPointY;
        outPts[2] = t2;
        t1 = _this._moveToY;
        outPts[3] = t1;
        _this._lastPointX = t2;
        _this._lastPointY = t1;
        return 1;
      } else {
        outPts[0] = t2;
        outPts[1] = _this._moveToY;
        return 5;
      }
    },
    _constructMoveTo$0: function() {
      var t1, t2, _this = this;
      if (_this._segmentState === 1) {
        _this._segmentState = 2;
        return new P.Offset(_this._moveToX, _this._moveToY);
      }
      t1 = _this.pathRef._fPoints;
      t2 = _this._pointIndex;
      return new P.Offset(t1[t2 - 2], t1[t2 - 1]);
    },
    next$1: function(_, outPts) {
      var t3, t4, verb, autoVerb, offsetX, offsetY, start, _this = this,
        t1 = _this._verbIndex,
        t2 = _this.pathRef;
      if (t1 === t2._fVerbsLength) {
        if (_this._needClose && _this._segmentState === 2) {
          if (1 === _this._autoClose$1(outPts))
            return 1;
          _this._needClose = false;
          return 5;
        }
        return 6;
      }
      t3 = t2._fVerbs;
      t4 = _this._verbIndex = t1 + 1;
      verb = t3[t1];
      switch (verb) {
        case 0:
          if (_this._needClose) {
            _this._verbIndex = t4 - 1;
            autoVerb = _this._autoClose$1(outPts);
            if (autoVerb === 5)
              _this._needClose = false;
            return autoVerb;
          }
          if (t4 === _this._verbCount)
            return 6;
          t1 = t2._fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          offsetX = t1[t2];
          _this._pointIndex = t3 + 1;
          offsetY = t1[t3];
          _this._moveToX = offsetX;
          _this._moveToY = offsetY;
          outPts[0] = offsetX;
          outPts[1] = offsetY;
          _this._segmentState = 1;
          _this._lastPointX = offsetX;
          _this._lastPointY = offsetY;
          _this._needClose = true;
          break;
        case 1:
          start = _this._constructMoveTo$0();
          t1 = t2._fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          offsetX = t1[t2];
          _this._pointIndex = t3 + 1;
          offsetY = t1[t3];
          outPts[0] = start._dx;
          outPts[1] = start._dy;
          outPts[2] = offsetX;
          outPts[3] = offsetY;
          _this._lastPointX = offsetX;
          _this._lastPointY = offsetY;
          break;
        case 3:
          ++_this._conicWeightIndex;
          start = _this._constructMoveTo$0();
          outPts[0] = start._dx;
          outPts[1] = start._dy;
          t1 = t2._fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          outPts[2] = t1[t2];
          t2 = _this._pointIndex = t3 + 1;
          outPts[3] = t1[t3];
          t3 = _this._pointIndex = t2 + 1;
          t2 = t1[t2];
          outPts[4] = t2;
          _this._lastPointX = t2;
          _this._pointIndex = t3 + 1;
          t3 = t1[t3];
          outPts[5] = t3;
          _this._lastPointY = t3;
          break;
        case 2:
          start = _this._constructMoveTo$0();
          outPts[0] = start._dx;
          outPts[1] = start._dy;
          t1 = t2._fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          outPts[2] = t1[t2];
          t2 = _this._pointIndex = t3 + 1;
          outPts[3] = t1[t3];
          t3 = _this._pointIndex = t2 + 1;
          t2 = t1[t2];
          outPts[4] = t2;
          _this._lastPointX = t2;
          _this._pointIndex = t3 + 1;
          t3 = t1[t3];
          outPts[5] = t3;
          _this._lastPointY = t3;
          break;
        case 4:
          start = _this._constructMoveTo$0();
          outPts[0] = start._dx;
          outPts[1] = start._dy;
          t1 = t2._fPoints;
          t2 = _this._pointIndex;
          t3 = _this._pointIndex = t2 + 1;
          outPts[2] = t1[t2];
          t2 = _this._pointIndex = t3 + 1;
          outPts[3] = t1[t3];
          t3 = _this._pointIndex = t2 + 1;
          outPts[4] = t1[t2];
          t2 = _this._pointIndex = t3 + 1;
          outPts[5] = t1[t3];
          t3 = _this._pointIndex = t2 + 1;
          t2 = t1[t2];
          outPts[6] = t2;
          _this._lastPointX = t2;
          _this._pointIndex = t3 + 1;
          t3 = t1[t3];
          outPts[7] = t3;
          _this._lastPointY = t3;
          break;
        case 5:
          verb = _this._autoClose$1(outPts);
          if (verb === 1)
            --_this._verbIndex;
          else {
            _this._needClose = false;
            _this._segmentState = 0;
          }
          _this._lastPointX = _this._moveToX;
          _this._lastPointY = _this._moveToY;
          break;
        case 6:
          break;
        default:
          throw H.wrapException(P.FormatException$("Unsupport Path verb " + verb, null, null));
      }
      return verb;
    }
  };
  H._PaintRequest.prototype = {
    paintCallback$0: function() {
      return this.paintCallback.call$0();
    }
  };
  H.PersistedPicture.prototype = {
    createElement$0: function(_) {
      return this.defaultCreateElement$1("flt-picture");
    },
    preroll$0: function() {
      this.super$PersistedSurface$preroll();
    },
    recomputeTransformAndClip$0: function() {
      var t2, t3, paintWidth, paintHeight, newDensity, _this = this,
        t1 = _this.parent.__engine$_transform;
      _this.__engine$_transform = t1;
      t2 = _this.dx;
      if (t2 !== 0 || _this.dy !== 0) {
        t1.toString;
        t3 = new H.Matrix40(new Float32Array(16));
        t3.setFrom$1(t1);
        _this.__engine$_transform = t3;
        t3.translate$2(0, t2, _this.dy);
      }
      t1 = _this.localPaintBounds;
      paintWidth = t1.right - t1.left;
      paintHeight = t1.bottom - t1.top;
      t1 = paintWidth === 0 || paintHeight === 0;
      newDensity = t1 ? 1 : H._computePixelDensity(_this.__engine$_transform, paintWidth, paintHeight);
      if (newDensity !== _this._density) {
        _this._density = newDensity;
        _this._requiresRepaint = true;
      }
      _this._computeExactCullRects$0();
    },
    _computeExactCullRects$0: function() {
      var clipTransform, bounds, localClipBounds, localInverse, t1, t2, _this = this,
        parentSurface = _this.parent;
      if (parentSurface._projectedClip == null) {
        clipTransform = H.Matrix4$identity();
        for (bounds = null; parentSurface != null;) {
          localClipBounds = parentSurface._localClipBounds;
          if (localClipBounds != null)
            bounds = bounds == null ? H.transformRect(clipTransform, localClipBounds) : bounds.intersect$1(H.transformRect(clipTransform, localClipBounds));
          localInverse = parentSurface.get$localTransformInverse();
          if (localInverse != null && !localInverse.isIdentity$0(0))
            clipTransform.multiply$1(0, localInverse);
          parentSurface = parentSurface.parent;
        }
        if (bounds != null)
          t1 = bounds.right - bounds.left <= 0 || bounds.bottom - bounds.top <= 0;
        else
          t1 = false;
        if (t1)
          bounds = C.Rect_0_0_0_0;
        t1 = _this.parent;
        t1._projectedClip = bounds;
      } else
        t1 = parentSurface;
      t1 = t1._projectedClip;
      t2 = _this.localPaintBounds;
      if (t1 == null) {
        _this._exactLocalCullRect = t2;
        t1 = t2;
      } else
        t1 = _this._exactLocalCullRect = t2.intersect$1(t1);
      if (t1.right - t1.left <= 0 || t1.bottom - t1.top <= 0)
        _this._exactGlobalCullRect = _this._exactLocalCullRect = C.Rect_0_0_0_0;
    },
    _computeOptimalCullRect$1: function(oldSurface) {
      var oldOptimalLocalCullRect, t1, t2, t3, t4, t5, t6, t7, t8, t9, newLocalCullRect, _this = this;
      if (oldSurface == null || !oldSurface.picture.recordingCanvas._didDraw) {
        _this._optimalLocalCullRect = _this._exactLocalCullRect;
        _this._requiresRepaint = true;
        return;
      }
      oldOptimalLocalCullRect = oldSurface === _this ? _this._optimalLocalCullRect : oldSurface._optimalLocalCullRect;
      if (J.$eq$(_this._exactLocalCullRect, C.Rect_0_0_0_0)) {
        _this._optimalLocalCullRect = C.Rect_0_0_0_0;
        if (!J.$eq$(oldOptimalLocalCullRect, C.Rect_0_0_0_0))
          _this._requiresRepaint = true;
        return;
      }
      oldOptimalLocalCullRect.toString;
      t1 = _this._exactLocalCullRect;
      t1.toString;
      if (H.rectContainsOther(oldOptimalLocalCullRect, t1)) {
        _this._optimalLocalCullRect = oldOptimalLocalCullRect;
        return;
      }
      t2 = t1.left;
      t3 = t1.top;
      t4 = t1.right;
      t1 = t1.bottom;
      t5 = t4 - t2;
      t6 = H.PersistedPicture__predictTrend(oldOptimalLocalCullRect.left - t2, t5);
      t7 = t1 - t3;
      t8 = H.PersistedPicture__predictTrend(oldOptimalLocalCullRect.top - t3, t7);
      t5 = H.PersistedPicture__predictTrend(t4 - oldOptimalLocalCullRect.right, t5);
      t7 = H.PersistedPicture__predictTrend(t1 - oldOptimalLocalCullRect.bottom, t7);
      t9 = _this.localPaintBounds;
      t9.toString;
      newLocalCullRect = new P.Rect(t2 - t6, t3 - t8, t4 + t5, t1 + t7).intersect$1(t9);
      _this._requiresRepaint = !J.$eq$(_this._optimalLocalCullRect, newLocalCullRect);
      _this._optimalLocalCullRect = newLocalCullRect;
    },
    _applyPaint$1: function(oldSurface) {
      var t2, t3, domCanvas, _this = this,
        t1 = oldSurface == null,
        oldCanvas = t1 ? null : oldSurface.__engine$_canvas;
      _this._requiresRepaint = false;
      t2 = _this.picture.recordingCanvas;
      if (t2._didDraw) {
        t3 = _this._optimalLocalCullRect;
        t3 = t3.get$isEmpty(t3);
      } else
        t3 = true;
      if (t3) {
        H._recycleCanvas(oldCanvas);
        if (!t1)
          oldSurface.__engine$_canvas = null;
        t1 = _this.rootElement;
        if (t1 != null)
          $.$get$domRenderer().clearDom$1(t1);
        t1 = _this.__engine$_canvas;
        if (t1 != null && t1 !== oldCanvas)
          H._recycleCanvas(t1);
        _this.__engine$_canvas = null;
        return;
      }
      if (t2.renderStrategy.hasArbitraryPaint)
        _this._applyBitmapPaint$1(oldCanvas);
      else {
        H._recycleCanvas(_this.__engine$_canvas);
        t1 = _this.rootElement;
        t1.toString;
        domCanvas = _this.__engine$_canvas = new H.DomCanvas(t1, H.setRuntimeTypeInfo([], type$.JSArray__SaveElementStackEntry), H.setRuntimeTypeInfo([], type$.JSArray_Element), H.Matrix4$identity());
        t1 = $.$get$domRenderer();
        t3 = _this.rootElement;
        t3.toString;
        t1.clearDom$1(t3);
        t3 = _this._optimalLocalCullRect;
        t3.toString;
        t2.applyCommands$2(domCanvas, t3);
        domCanvas.endOfPaint$0();
      }
    },
    matchForUpdate$1: function(existingSurface) {
      var didRequireBitmap, requiresBitmap, oldCanvas, oldPixelCount, _this = this,
        t1 = existingSurface.picture,
        t2 = _this.picture;
      if (t1 === t2)
        return 0;
      t1 = t1.recordingCanvas;
      if (!t1._didDraw)
        return 1;
      didRequireBitmap = t1.renderStrategy.hasArbitraryPaint;
      requiresBitmap = t2.recordingCanvas.renderStrategy.hasArbitraryPaint;
      if (didRequireBitmap !== requiresBitmap)
        return 1;
      else if (!requiresBitmap)
        return 1;
      else {
        oldCanvas = type$.nullable_BitmapCanvas._as(existingSurface.__engine$_canvas);
        if (oldCanvas == null)
          return 1;
        else {
          t1 = _this._exactLocalCullRect;
          t1.toString;
          if (!oldCanvas.doesFitBounds$2(t1, _this._density))
            return 1;
          else {
            t1 = _this._exactLocalCullRect;
            t1 = H.BitmapCanvas__widthToPhysical(t1.right - t1.left);
            t2 = _this._exactLocalCullRect;
            t2 = H.BitmapCanvas__heightToPhysical(t2.bottom - t2.top);
            oldPixelCount = oldCanvas._widthInBitmapPixels * oldCanvas._heightInBitmapPixels;
            if (oldPixelCount === 0)
              return 1;
            return 1 - t1 * t2 / oldPixelCount;
          }
        }
      }
    },
    _applyBitmapPaint$1: function(oldCanvas) {
      var t1, t2, _this = this;
      if (oldCanvas instanceof H.BitmapCanvas) {
        t1 = _this._optimalLocalCullRect;
        t1.toString;
        t1 = oldCanvas.doesFitBounds$2(t1, _this._density) && oldCanvas._devicePixelRatio === H.EnginePlatformDispatcher_browserDevicePixelRatio();
      } else
        t1 = false;
      if (t1) {
        t1 = _this._optimalLocalCullRect;
        t1.toString;
        oldCanvas.set$bounds(0, t1);
        _this.__engine$_canvas = oldCanvas;
        oldCanvas._elementCache = _this._elementCache;
        oldCanvas.clear$0(0);
        t1 = _this.picture.recordingCanvas;
        t1.toString;
        t2 = _this._optimalLocalCullRect;
        t2.toString;
        t1.applyCommands$2(oldCanvas, t2);
        oldCanvas.endOfPaint$0();
      } else {
        H._recycleCanvas(oldCanvas);
        t1 = _this.__engine$_canvas;
        if (t1 instanceof H.BitmapCanvas)
          t1._elementCache = null;
        _this.__engine$_canvas = null;
        t1 = $._paintQueue;
        t2 = _this._optimalLocalCullRect;
        t1.push(new H._PaintRequest(new P.Size(t2.right - t2.left, t2.bottom - t2.top), new H.PersistedPicture__applyBitmapPaint_closure(_this)));
      }
    },
    _findOrCreateCanvas$1: function(bounds) {
      var boundsWidth, boundsHeight, requestedPixelCount, t3, bestRecycledCanvas, lastPixelCount, i, candidate, ratio, t4, t5, candidatePixelCount, t6, fits, isSmaller, canvas, _this = this,
        t1 = bounds.right - bounds.left,
        t2 = bounds.bottom - bounds.top;
      for (boundsWidth = t1 + 1, boundsHeight = t2 + 1, requestedPixelCount = t1 * t2, t3 = requestedPixelCount > 1, bestRecycledCanvas = null, lastPixelCount = 1 / 0, i = 0; i < $._recycledCanvases.length; ++i) {
        candidate = $._recycledCanvases[i];
        ratio = window.devicePixelRatio;
        t4 = ratio === 0 ? 1 : ratio;
        if (candidate._devicePixelRatio !== t4)
          continue;
        t4 = candidate._bounds;
        t5 = t4.right - t4.left;
        t4 = t4.bottom - t4.top;
        candidatePixelCount = t5 * t4;
        t6 = _this._density;
        ratio = window.devicePixelRatio;
        if (candidate._widthInBitmapPixels >= C.JSNumber_methods.ceil$0(boundsWidth * (ratio === 0 ? 1 : ratio)) + 2) {
          ratio = window.devicePixelRatio;
          fits = candidate._heightInBitmapPixels >= C.JSNumber_methods.ceil$0(boundsHeight * (ratio === 0 ? 1 : ratio)) + 2 && candidate._density === t6;
        } else
          fits = false;
        isSmaller = candidatePixelCount < lastPixelCount;
        if (fits && isSmaller)
          if (!(isSmaller && t3 && candidatePixelCount / requestedPixelCount > 4)) {
            if (t5 === t1 && t4 === t2) {
              bestRecycledCanvas = candidate;
              break;
            }
            lastPixelCount = candidatePixelCount;
            bestRecycledCanvas = candidate;
          }
      }
      if (bestRecycledCanvas != null) {
        C.JSArray_methods.remove$1($._recycledCanvases, bestRecycledCanvas);
        bestRecycledCanvas.set$bounds(0, bounds);
        bestRecycledCanvas._elementCache = _this._elementCache;
        return bestRecycledCanvas;
      }
      canvas = H.BitmapCanvas$(bounds, _this.picture.recordingCanvas.renderStrategy, _this._density);
      canvas._elementCache = _this._elementCache;
      return canvas;
    },
    _applyTranslate$0: function() {
      var t1 = this.rootElement.style,
        t2 = "translate(" + H.S(this.dx) + "px, " + H.S(this.dy) + "px)";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    apply$0: function() {
      this._applyTranslate$0();
      this._applyPaint$1(null);
    },
    build$0: function(_) {
      this._computeOptimalCullRect$1(null);
      this._requiresRepaint = true;
      this.super$PersistedSurface$build(0);
    },
    update$1: function(_, oldSurface) {
      var t1, densityChanged, _this = this;
      _this.super$PersistedSurface$update(0, oldSurface);
      _this._elementCache = oldSurface._elementCache;
      if (oldSurface !== _this)
        oldSurface._elementCache = null;
      if (_this.dx !== oldSurface.dx || _this.dy !== oldSurface.dy)
        _this._applyTranslate$0();
      _this._computeOptimalCullRect$1(oldSurface);
      if (_this.picture === oldSurface.picture) {
        t1 = _this.__engine$_canvas;
        densityChanged = t1 instanceof H.BitmapCanvas && _this._density !== t1._density;
        if (_this._requiresRepaint || densityChanged)
          _this._applyPaint$1(oldSurface);
        else
          _this.__engine$_canvas = oldSurface.__engine$_canvas;
      } else
        _this._applyPaint$1(oldSurface);
    },
    retain$0: function() {
      var _this = this;
      _this.super$PersistedSurface$retain();
      _this._computeOptimalCullRect$1(_this);
      if (_this._requiresRepaint)
        _this._applyPaint$1(_this);
    },
    discard$0: function() {
      H._recycleCanvas(this.__engine$_canvas);
      this.__engine$_canvas = null;
      this.super$PersistedSurface$discard();
    }
  };
  H.PersistedPicture__applyBitmapPaint_closure.prototype = {
    call$0: function() {
      var bitmapCanvas, t3,
        t1 = this.$this,
        t2 = t1._optimalLocalCullRect;
      t2.toString;
      bitmapCanvas = t1.__engine$_canvas = t1._findOrCreateCanvas$1(t2);
      bitmapCanvas._elementCache = t1._elementCache;
      t2 = $.$get$domRenderer();
      t3 = t1.rootElement;
      t3.toString;
      t2.clearDom$1(t3);
      t1.rootElement.appendChild(bitmapCanvas.rootElement);
      bitmapCanvas.clear$0(0);
      t3 = t1.picture.recordingCanvas;
      t3.toString;
      t1 = t1._optimalLocalCullRect;
      t1.toString;
      t3.applyCommands$2(bitmapCanvas, t1);
      bitmapCanvas.endOfPaint$0();
    },
    $signature: 0
  };
  H.RecordingCanvas.prototype = {
    applyCommands$2: function(engineCanvas, clipRect) {
      var i, len, i0, len0, command, e, t1, exception;
      try {
        t1 = this._pictureBounds;
        t1.toString;
        if (H.rectContainsOther(clipRect, t1))
          for (i = 0, t1 = this._commands, len = t1.length; i < len; ++i)
            t1[i].apply$1(engineCanvas);
        else
          for (i0 = 0, t1 = this._commands, len0 = t1.length; i0 < len0; ++i0) {
            command = t1[i0];
            if (command instanceof H.DrawCommand)
              if (command.isInvisible$1(clipRect))
                continue;
            command.apply$1(engineCanvas);
          }
      } catch (exception) {
        e = H.unwrapException(exception);
        if (!J.$eq$(e.name, "NS_ERROR_FAILURE"))
          throw exception;
      }
    },
    drawRect$2: function(_, rect, paint) {
      var paintSpread, command, _this = this,
        t1 = paint._paintData;
      if (t1.shader != null)
        _this.renderStrategy.hasArbitraryPaint = true;
      _this._didDraw = true;
      paintSpread = H._getPaintSpread(paint);
      paint._frozen = true;
      command = new H.PaintDrawRect(rect, t1, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t1 = _this._paintBounds;
      if (paintSpread !== 0)
        t1.grow$2(rect.inflate$1(paintSpread), command);
      else
        t1.grow$2(rect, command);
      _this._commands.push(command);
    },
    drawRRect$2: function(_, rrect, paint) {
      var paintSpread, t2, t3, t4, t5, t6, t7, command, _this = this,
        t1 = paint._paintData;
      if (t1.shader != null || !rrect.webOnlyUniformRadii)
        _this.renderStrategy.hasArbitraryPaint = true;
      _this._didDraw = true;
      paintSpread = H._getPaintSpread(paint);
      t2 = rrect.left;
      t3 = rrect.right;
      t4 = Math.min(t2, t3);
      t5 = rrect.top;
      t6 = rrect.bottom;
      t7 = Math.min(t5, t6);
      t3 = Math.max(t2, t3);
      t6 = Math.max(t5, t6);
      paint._frozen = true;
      command = new H.PaintDrawRRect(rrect, t1, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      _this._paintBounds.growLTRB$5(t4 - paintSpread, t7 - paintSpread, t3 + paintSpread, t6 + paintSpread, command);
      _this._commands.push(command);
    },
    drawDRRect$3: function(_, outer, inner, paint) {
      var scaledOuter, scaledInner, outerTl, outerTr, outerBl, outerBr, innerTl, innerTr, innerBl, innerBr, paintSpread, command, t5, left, right, _this = this,
        innerRect = new P.Rect(inner.left, inner.top, inner.right, inner.bottom),
        t1 = outer.left,
        t2 = outer.top,
        t3 = outer.right,
        t4 = outer.bottom,
        outerRect = new P.Rect(t1, t2, t3, t4);
      if (outerRect.$eq(0, innerRect) || !outerRect.intersect$1(innerRect).$eq(0, innerRect))
        return;
      scaledOuter = outer.scaleRadii$0();
      scaledInner = inner.scaleRadii$0();
      outerTl = H._measureBorderRadius(scaledOuter.tlRadiusX, scaledOuter.tlRadiusY);
      outerTr = H._measureBorderRadius(scaledOuter.trRadiusX, scaledOuter.trRadiusY);
      outerBl = H._measureBorderRadius(scaledOuter.blRadiusX, scaledOuter.blRadiusY);
      outerBr = H._measureBorderRadius(scaledOuter.brRadiusX, scaledOuter.brRadiusY);
      innerTl = H._measureBorderRadius(scaledInner.tlRadiusX, scaledInner.tlRadiusY);
      innerTr = H._measureBorderRadius(scaledInner.trRadiusX, scaledInner.trRadiusY);
      innerBl = H._measureBorderRadius(scaledInner.blRadiusX, scaledInner.blRadiusY);
      innerBr = H._measureBorderRadius(scaledInner.brRadiusX, scaledInner.brRadiusY);
      if (innerTl > outerTl || innerTr > outerTr || innerBl > outerBl || innerBr > outerBr)
        return;
      _this._didDraw = _this.renderStrategy.hasArbitraryPaint = true;
      paintSpread = H._getPaintSpread(paint);
      paint._frozen = true;
      command = new H.PaintDrawDRRect(outer, inner, paint._paintData, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      t5 = P.Path_Path();
      t5.set$fillType(C.PathFillType_1);
      t5.addRRect$1(0, outer);
      t5.addRRect$1(0, inner);
      t5.close$0(0);
      command.path = t5;
      left = Math.min(t1, t3);
      right = Math.max(t1, t3);
      _this._paintBounds.growLTRB$5(left - paintSpread, Math.min(t2, t4) - paintSpread, right + paintSpread, Math.max(t2, t4) + paintSpread, command);
      _this._commands.push(command);
    },
    drawPath$2: function(_, path, paint) {
      var rect, t1, rrect, pathBounds, paintSpread, t2, t3, clone, command, _this = this;
      if (paint._paintData.shader == null) {
        type$.SurfacePath._as(path);
        rect = path.pathRef.getRect$0();
        if (rect != null) {
          _this.drawRect$2(0, rect, paint);
          return;
        }
        t1 = path.pathRef;
        rrect = t1.fIsRRect ? t1._getRRect$0() : null;
        if (rrect != null) {
          _this.drawRRect$2(0, rrect, paint);
          return;
        }
      }
      type$.SurfacePath._as(path);
      if (path.pathRef._fVerbsLength !== 0) {
        _this._didDraw = _this.renderStrategy.hasArbitraryPaint = true;
        pathBounds = path.getBounds$0(0);
        paintSpread = H._getPaintSpread(paint);
        if (paintSpread !== 0)
          pathBounds = pathBounds.inflate$1(paintSpread);
        t1 = path.pathRef;
        t2 = new H.PathRef(t1._fPoints, t1._fVerbs);
        t2._fVerbsCapacity = t1._fVerbsCapacity;
        t2._fVerbsLength = t1._fVerbsLength;
        t2._fPointsCapacity = t1._fPointsCapacity;
        t2._fPointsLength = t1._fPointsLength;
        t2._conicWeightsCapacity = t1._conicWeightsCapacity;
        t2._conicWeightsLength = t1._conicWeightsLength;
        t2._conicWeights = t1._conicWeights;
        t3 = t1.fBoundsIsDirty;
        t2.fBoundsIsDirty = t3;
        if (!t3) {
          t2.fBounds = t1.fBounds;
          t2.cachedBounds = t1.cachedBounds;
          t2.fIsFinite = t1.fIsFinite;
        }
        t2.fSegmentMask = t1.fSegmentMask;
        t2.fIsOval = t1.fIsOval;
        t2.fIsRRect = t1.fIsRRect;
        t2.fIsRect = t1.fIsRect;
        t2.fRRectOrOvalIsCCW = t1.fRRectOrOvalIsCCW;
        t2.fRRectOrOvalStartIdx = t1.fRRectOrOvalStartIdx;
        clone = new H.SurfacePath(t2, C.PathFillType_0);
        clone._copyFields$1(path);
        paint._frozen = true;
        command = new H.PaintDrawPath(clone, paint._paintData, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
        _this._paintBounds.grow$2(pathBounds, command);
        clone._fillType = path._fillType;
        _this._commands.push(command);
      }
    },
    drawParagraph$2: function(_, paragraph, offset) {
      var left, $top, command, _this = this;
      type$.EngineParagraph._as(paragraph);
      if (!paragraph.get$isLaidOut())
        return;
      _this._didDraw = true;
      if (paragraph.get$hasArbitraryPaint())
        _this.renderStrategy.hasArbitraryPaint = true;
      _this.renderStrategy.hasParagraphs = true;
      left = offset._dx;
      $top = offset._dy;
      command = new H.PaintDrawParagraph(paragraph, offset, -1 / 0, -1 / 0, 1 / 0, 1 / 0);
      _this._paintBounds.growLTRB$5(left, $top, left + paragraph.get$width(paragraph), $top + paragraph.get$height(paragraph), command);
      _this._commands.push(command);
    }
  };
  H.PaintCommand.prototype = {};
  H.DrawCommand.prototype = {
    isInvisible$1: function(clipRect) {
      var _this = this;
      if (_this.isClippedOut)
        return true;
      return _this.bottomBound < clipRect.top || _this.topBound > clipRect.bottom || _this.rightBound < clipRect.left || _this.leftBound > clipRect.right;
    }
  };
  H.PaintSave.prototype = {
    apply$1: function(canvas) {
      canvas.save$0(0);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintRestore.prototype = {
    apply$1: function(canvas) {
      canvas.restore$0(0);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintTranslate.prototype = {
    apply$1: function(canvas) {
      canvas.translate$2(0, this.dx, this.dy);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintTransform.prototype = {
    apply$1: function(canvas) {
      canvas.transform$1(0, this.matrix4);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintClipRect.prototype = {
    apply$1: function(canvas) {
      canvas.clipRect$2(0, this.rect, this.clipOp);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintClipRRect.prototype = {
    apply$1: function(canvas) {
      canvas.clipRRect$1(0, this.rrect);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintClipPath.prototype = {
    apply$1: function(canvas) {
      canvas.clipPath$1(0, this.path);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawRect.prototype = {
    apply$1: function(canvas) {
      canvas.drawRect$2(0, this.rect, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawRRect.prototype = {
    apply$1: function(canvas) {
      canvas.drawRRect$2(0, this.rrect, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawDRRect.prototype = {
    apply$1: function(canvas) {
      var t1 = this.paint;
      if (t1.style == null)
        t1.style = C.PaintingStyle_0;
      canvas.drawPath$2(0, this.path, t1);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawCircle.prototype = {
    apply$1: function(canvas) {
      canvas.drawCircle$3(0, this.c, this.radius, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawPath.prototype = {
    apply$1: function(canvas) {
      canvas.drawPath$2(0, this.path, this.paint);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawShadow.prototype = {
    apply$1: function(canvas) {
      var _this = this;
      canvas.drawShadow$4(0, _this.path, _this.color, _this.elevation, _this.transparentOccluder);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PaintDrawParagraph.prototype = {
    apply$1: function(canvas) {
      canvas.drawParagraph$2(0, this.paragraph, this.offset);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H._PaintBounds.prototype = {
    clipRect$2: function(_, rect, command) {
      var t1, t4, t3, t2, _this = this,
        left = rect.left,
        $top = rect.top,
        right = rect.right,
        bottom = rect.bottom;
      if (!_this._currentMatrixIsIdentity) {
        t1 = $.$get$_PaintBounds__tempRectData();
        t1[0] = left;
        t1[1] = $top;
        t1[2] = right;
        t1[3] = bottom;
        H.transformLTRB(_this._currentMatrix, t1);
        left = t1[0];
        $top = t1[1];
        right = t1[2];
        bottom = t1[3];
      }
      if (!_this._clipRectInitialized) {
        _this._currentClipLeft = left;
        _this._currentClipTop = $top;
        _this._currentClipRight = right;
        _this._currentClipBottom = bottom;
        _this._clipRectInitialized = true;
        t4 = bottom;
        t3 = right;
        t2 = $top;
        t1 = left;
      } else {
        t1 = _this._currentClipLeft;
        if (left > t1) {
          _this._currentClipLeft = left;
          t1 = left;
        }
        t2 = _this._currentClipTop;
        if ($top > t2) {
          _this._currentClipTop = $top;
          t2 = $top;
        }
        t3 = _this._currentClipRight;
        if (right < t3) {
          _this._currentClipRight = right;
          t3 = right;
        }
        t4 = _this._currentClipBottom;
        if (bottom < t4) {
          _this._currentClipBottom = bottom;
          t4 = bottom;
        }
      }
      if (t1 >= t3 || t2 >= t4)
        command.isClippedOut = true;
      else {
        command.leftBound = t1;
        command.topBound = t2;
        command.rightBound = t3;
        command.bottomBound = t4;
      }
    },
    grow$2: function(r, command) {
      this.growLTRB$5(r.left, r.top, r.right, r.bottom, command);
    },
    growLTRB$5: function(left, $top, right, bottom, command) {
      var t1, transformedPointLeft, transformedPointTop, transformedPointRight, transformedPointBottom, transformedPointRight0, transformedPointLeft0, transformedPointBottom0, transformedPointTop0, _this = this;
      if (left === right || $top === bottom) {
        command.isClippedOut = true;
        return;
      }
      if (!_this._currentMatrixIsIdentity) {
        t1 = $.$get$_PaintBounds__tempRectData();
        t1[0] = left;
        t1[1] = $top;
        t1[2] = right;
        t1[3] = bottom;
        H.transformLTRB(_this._currentMatrix, t1);
        transformedPointLeft = t1[0];
        transformedPointTop = t1[1];
        transformedPointRight = t1[2];
        transformedPointBottom = t1[3];
      } else {
        transformedPointBottom = bottom;
        transformedPointRight = right;
        transformedPointTop = $top;
        transformedPointLeft = left;
      }
      if (_this._clipRectInitialized) {
        transformedPointRight0 = _this._currentClipRight;
        if (transformedPointLeft > transformedPointRight0) {
          command.isClippedOut = true;
          return;
        }
        transformedPointLeft0 = _this._currentClipLeft;
        if (transformedPointRight < transformedPointLeft0) {
          command.isClippedOut = true;
          return;
        }
        transformedPointBottom0 = _this._currentClipBottom;
        if (transformedPointTop > transformedPointBottom0) {
          command.isClippedOut = true;
          return;
        }
        transformedPointTop0 = _this._currentClipTop;
        if (transformedPointBottom < transformedPointTop0) {
          command.isClippedOut = true;
          return;
        }
        if (transformedPointLeft < transformedPointLeft0)
          transformedPointLeft = transformedPointLeft0;
        if (transformedPointRight > transformedPointRight0)
          transformedPointRight = transformedPointRight0;
        if (transformedPointTop < transformedPointTop0)
          transformedPointTop = transformedPointTop0;
        if (transformedPointBottom > transformedPointBottom0)
          transformedPointBottom = transformedPointBottom0;
      }
      command.leftBound = transformedPointLeft;
      command.topBound = transformedPointTop;
      command.rightBound = transformedPointRight;
      command.bottomBound = transformedPointBottom;
      if (_this._didPaintInsideClipArea) {
        _this.__engine$_left = Math.min(Math.min(_this.__engine$_left, transformedPointLeft), transformedPointRight);
        _this.__engine$_right = Math.max(Math.max(_this.__engine$_right, transformedPointLeft), transformedPointRight);
        _this.__engine$_top = Math.min(Math.min(_this.__engine$_top, transformedPointTop), transformedPointBottom);
        _this.__engine$_bottom = Math.max(Math.max(_this.__engine$_bottom, transformedPointTop), transformedPointBottom);
      } else {
        _this.__engine$_left = Math.min(transformedPointLeft, transformedPointRight);
        _this.__engine$_right = Math.max(transformedPointLeft, transformedPointRight);
        _this.__engine$_top = Math.min(transformedPointTop, transformedPointBottom);
        _this.__engine$_bottom = Math.max(transformedPointTop, transformedPointBottom);
      }
      _this._didPaintInsideClipArea = true;
    },
    saveTransformsAndClip$0: function() {
      var _this = this,
        t1 = _this._currentMatrix,
        t2 = new H.Matrix40(new Float32Array(16));
      t2.setFrom$1(t1);
      _this.__engine$_transforms.push(t2);
      t1 = _this._clipRectInitialized ? new P.Rect(_this._currentClipLeft, _this._currentClipTop, _this._currentClipRight, _this._currentClipBottom) : null;
      _this._clipStack.push(t1);
    },
    computeBounds$0: function() {
      var t1, maxLeft, maxRight, maxTop, maxBottom, t2, left, right, $top, bottom, _this = this;
      if (!_this._didPaintInsideClipArea)
        return C.Rect_0_0_0_0;
      t1 = _this.maxPaintBounds;
      maxLeft = t1.left;
      if (isNaN(maxLeft))
        maxLeft = -1 / 0;
      maxRight = t1.right;
      if (isNaN(maxRight))
        maxRight = 1 / 0;
      maxTop = t1.top;
      if (isNaN(maxTop))
        maxTop = -1 / 0;
      maxBottom = t1.bottom;
      if (isNaN(maxBottom))
        maxBottom = 1 / 0;
      t1 = _this.__engine$_left;
      t2 = _this.__engine$_right;
      left = Math.min(t1, t2);
      right = Math.max(t1, t2);
      t2 = _this.__engine$_top;
      t1 = _this.__engine$_bottom;
      $top = Math.min(t2, t1);
      bottom = Math.max(t2, t1);
      if (right < maxLeft || bottom < maxTop)
        return C.Rect_0_0_0_0;
      return new P.Rect(Math.max(left, maxLeft), Math.max($top, maxTop), Math.min(right, maxRight), Math.min(bottom, maxBottom));
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.RenderStrategy.prototype = {};
  H._WebGlRenderer.prototype = {
    drawRectToGl$6: function(targetRect, gl, glProgram, gradient, widthInPixels, heightInPixels) {
      var t1, t2, t3, colorsBuffer, colors, indexBuffer, t4,
        left = targetRect.left,
        $top = targetRect.top,
        right = targetRect.right,
        bottom = targetRect.bottom,
        vertices = new Float32Array(8);
      vertices[0] = left;
      vertices[1] = $top;
      vertices[2] = right;
      vertices[3] = $top;
      vertices[4] = right;
      vertices[5] = bottom;
      vertices[6] = left;
      vertices[7] = bottom;
      t1 = glProgram.program;
      t2 = gl.glContext;
      t2.uniformMatrix4fv.apply(t2, [gl.getUniformLocation$2(0, t1, "u_ctransform"), false, H.Matrix4$identity().__engine$_m4storage]);
      t2.uniform4f.apply(t2, [gl.getUniformLocation$2(0, t1, "u_scale"), 2 / widthInPixels, -2 / heightInPixels, 1, 1]);
      t2.uniform4f.apply(t2, [gl.getUniformLocation$2(0, t1, "u_shift"), -1, 1, 0, 0]);
      t3 = t2.createBuffer.apply(t2, C.List_empty1);
      t3.toString;
      t2.bindBuffer.apply(t2, [gl.get$kArrayBuffer(), t3]);
      t3 = gl.get$kStaticDraw();
      t2.bufferData.apply(t2, [gl.get$kArrayBuffer(), vertices, t3]);
      t3 = gl._kFloat;
      t2.vertexAttribPointer.apply(t2, [0, 2, t3 == null ? gl._kFloat = t2.FLOAT : t3, false, 0, 0]);
      t2.enableVertexAttribArray.apply(t2, [0]);
      colorsBuffer = t2.createBuffer.apply(t2, C.List_empty1);
      t2.bindBuffer.apply(t2, [gl.get$kArrayBuffer(), colorsBuffer]);
      colors = new Int32Array(H._ensureNativeList(H.setRuntimeTypeInfo([4278255360, 4278190335, 4294967040, 4278255615], type$.JSArray_int)));
      t3 = gl.get$kStaticDraw();
      t2.bufferData.apply(t2, [gl.get$kArrayBuffer(), colors, t3]);
      t3 = gl._kUnsignedByte;
      t2.vertexAttribPointer.apply(t2, [1, 4, t3 == null ? gl._kUnsignedByte = t2.UNSIGNED_BYTE : t3, true, 0, 0]);
      t2.enableVertexAttribArray.apply(t2, [1]);
      indexBuffer = t2.createBuffer.apply(t2, C.List_empty1);
      t2.bindBuffer.apply(t2, [gl.get$kElementArrayBuffer(), indexBuffer]);
      t3 = $.$get$_WebGlRenderer__vertexIndicesForRect();
      t4 = gl.get$kStaticDraw();
      t2.bufferData.apply(t2, [gl.get$kElementArrayBuffer(), t3, t4]);
      if (t2.getUniformLocation.apply(t2, [t1, "u_resolution"]) != null)
        t2.uniform2f.apply(t2, [gl.getUniformLocation$2(0, t1, "u_resolution"), widthInPixels, heightInPixels]);
      t1 = gl._kColorBufferBit;
      t2.clear.apply(t2, [t1 == null ? gl._kColorBufferBit = t2.COLOR_BUFFER_BIT : t1]);
      t2.viewport.apply(t2, [0, 0, widthInPixels, heightInPixels]);
      t1 = gl._kTriangles;
      if (t1 == null)
        t1 = gl._kTriangles = t2.TRIANGLES;
      t3 = t3.length;
      t4 = gl._kUnsignedShort;
      t2.drawElements.apply(t2, [t1, t3, t4 == null ? gl._kUnsignedShort = t2.UNSIGNED_SHORT : t4, 0]);
    }
  };
  H._GlProgram.prototype = {};
  H._GlContext.prototype = {
    drawImage$3: function(_, context, left, $top) {
      var t1 = this.__engine$_canvas,
        t2 = this._widthInPixels,
        t3 = this._heightInPixels;
      context.drawImage.apply(context, [t1, 0, 0, t2, t3, left, $top, t2, t3]);
    },
    compileShader$2: function(_, shaderType, source) {
      var t2,
        t1 = this.glContext,
        shader = t1.createShader.apply(t1, [t1[shaderType]]);
      if (shader == null)
        throw H.wrapException(P.Exception_Exception(P.callMethod(t1, "getError", C.List_empty1)));
      t1.shaderSource.apply(t1, [shader, source]);
      t1.compileShader.apply(t1, [shader]);
      t2 = this._kCompileStatus;
      if (!t1.getShaderParameter.apply(t1, [shader, t2 == null ? this._kCompileStatus = t1.COMPILE_STATUS : t2]))
        throw H.wrapException(P.Exception_Exception("Shader compilation failed: " + H.S(P.callMethod(t1, "getShaderInfoLog", [shader]))));
      return shader;
    },
    get$kArrayBuffer: function() {
      var t1 = this._kArrayBuffer;
      return t1 == null ? this._kArrayBuffer = this.glContext.ARRAY_BUFFER : t1;
    },
    get$kElementArrayBuffer: function() {
      var t1 = this._kElementArrayBuffer;
      return t1 == null ? this._kElementArrayBuffer = this.glContext.ELEMENT_ARRAY_BUFFER : t1;
    },
    get$kStaticDraw: function() {
      var t1 = this._kStaticDraw;
      return t1 == null ? this._kStaticDraw = this.glContext.STATIC_DRAW : t1;
    },
    getUniformLocation$2: function(_, program, uniformName) {
      var t1 = this.glContext,
        res = t1.getUniformLocation.apply(t1, [program, uniformName]);
      if (res == null)
        throw H.wrapException(P.Exception_Exception(uniformName + " not found"));
      else
        return res;
    },
    readPatternData$0: function() {
      var canvas, _this = this,
        t1 = _this.__engine$_canvas;
      if ("transferToImageBitmap" in t1) {
        t1.getContext.apply(t1, ["webgl2"]);
        t1 = _this.__engine$_canvas;
        return t1.transferToImageBitmap.apply(t1, []);
      } else {
        t1 = _this._widthInPixels;
        canvas = W.CanvasElement_CanvasElement(_this._heightInPixels, t1);
        _this.drawImage$3(0, canvas.getContext("2d"), 0, 0);
        return canvas;
      }
    }
  };
  H._OffScreenCanvas.prototype = {
    set$width: function(receiver, val) {
      return this.width = val;
    },
    set$height: function(receiver, val) {
      return this.height = val;
    }
  };
  H.SurfaceScene.prototype = {
    dispose$0: function(_) {
    }
  };
  H.PersistedScene.prototype = {
    recomputeTransformAndClip$0: function() {
      var t2,
        t1 = window.innerWidth;
      t1.toString;
      t2 = window.innerHeight;
      t2.toString;
      this._localClipBounds = new P.Rect(0, 0, t1, t2);
      this._localTransformInverse = H.Matrix4$identity();
      this._projectedClip = null;
    },
    get$localTransformInverse: function() {
      return this._localTransformInverse;
    },
    createElement$0: function(_) {
      return this.defaultCreateElement$1("flt-scene");
    },
    apply$0: function() {
    }
  };
  H.SurfaceSceneBuilder.prototype = {
    _pushSurface$1$1: function(surface) {
      var t2,
        t1 = surface._oldLayer.value;
      if (t1 != null)
        t1.__engine$_state = C.PersistedSurfaceState_3;
      t1 = this._surfaceStack;
      t2 = C.JSArray_methods.get$last(t1);
      t2.__engine$_children.push(surface);
      surface.parent = t2;
      t1.push(surface);
      return surface;
    },
    _pushSurface$1: function(surface) {
      return this._pushSurface$1$1(surface, type$.PersistedContainerSurface);
    },
    pushOffset$3$oldLayer: function(dx, dy, oldLayer) {
      var t1, t2;
      type$.nullable_PersistedOffset._as(oldLayer);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedOffset(dx, dy, t1, t2, C.PersistedSurfaceState_0));
    },
    pushTransform$2$oldLayer: function(matrix4, oldLayer) {
      var matrix, t1, t2;
      if (this._surfaceStack.length === 1)
        matrix = H.Matrix4$identity().__engine$_m4storage;
      else
        matrix = H.toMatrix32(matrix4);
      type$.nullable_PersistedTransform._as(oldLayer);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedTransform(matrix, t1, t2, C.PersistedSurfaceState_0));
    },
    pushClipRect$3$clipBehavior$oldLayer: function(rect, clipBehavior, oldLayer) {
      var t1, t2;
      type$.nullable_PersistedClipRect._as(oldLayer);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedClipRect(clipBehavior, rect, null, t1, t2, C.PersistedSurfaceState_0));
    },
    pushClipPath$3$clipBehavior$oldLayer: function(path, clipBehavior, oldLayer) {
      var t1, t2;
      type$.nullable_PersistedClipPath._as(oldLayer);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedClipPath(path, clipBehavior, t1, t2, C.PersistedSurfaceState_0));
    },
    pushOpacity$3$offset$oldLayer: function(alpha, offset, oldLayer) {
      var t1, t2;
      type$.nullable_PersistedOpacity._as(oldLayer);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      t2 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t2);
      return this._pushSurface$1(new H.PersistedOpacity(alpha, offset, t1, t2, C.PersistedSurfaceState_0));
    },
    pushPhysicalShape$6$clipBehavior$color$elevation$oldLayer$path$shadowColor: function(clipBehavior, color, elevation, oldLayer, path, shadowColor) {
      var t1, t2, t3, t4, t5;
      type$.nullable_PersistedPhysicalShape._as(oldLayer);
      type$.SurfacePath._as(path);
      t1 = color.get$value(color);
      t2 = shadowColor == null ? null : shadowColor.get$value(shadowColor);
      if (t2 == null)
        t2 = 4278190080;
      t3 = path.getBounds$0(0);
      t4 = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      t5 = new H.FrameReference(oldLayer != null && oldLayer.__engine$_state === C.PersistedSurfaceState_1 ? oldLayer : null);
      $._frameReferences.push(t5);
      return this._pushSurface$1(new H.PersistedPhysicalShape(path, t3, elevation, new P.Color(t1), new P.Color(t2), clipBehavior, null, t4, t5, C.PersistedSurfaceState_0));
    },
    addRetained$1: function(retainedLayer) {
      var t1;
      type$.PersistedContainerSurface._as(retainedLayer);
      if (retainedLayer.__engine$_state === C.PersistedSurfaceState_1)
        retainedLayer.__engine$_state = C.PersistedSurfaceState_2;
      else
        retainedLayer.revive$0();
      t1 = C.JSArray_methods.get$last(this._surfaceStack);
      t1.__engine$_children.push(retainedLayer);
      retainedLayer.parent = t1;
    },
    pop$0: function(_) {
      this._surfaceStack.pop();
    },
    addPerformanceOverlay$2: function(enabledOptions, bounds) {
      if (!$.SurfaceSceneBuilder__webOnlyDidWarnAboutPerformanceOverlay) {
        $.SurfaceSceneBuilder__webOnlyDidWarnAboutPerformanceOverlay = true;
        $.$get$printWarning().call$1("The performance overlay isn't supported on the web");
      }
    },
    addPicture$4$isComplexHint$willChangeHint: function(offset, picture, isComplexHint, willChangeHint) {
      var t1, t2;
      type$.EnginePicture._as(picture);
      t1 = picture.recordingCanvas._pictureBounds;
      t2 = new H.FrameReference(null);
      $._frameReferences.push(t2);
      t2 = new H.PersistedPicture(offset._dx, offset._dy, picture, t1, new H.CrossFrameCache(), t2, C.PersistedSurfaceState_0);
      t1 = C.JSArray_methods.get$last(this._surfaceStack);
      t1.__engine$_children.push(t2);
      t2.parent = t1;
    },
    setRasterizerTracingThreshold$1: function(frameInterval) {
    },
    setCheckerboardRasterCacheImages$1: function(checkerboard) {
    },
    setCheckerboardOffscreenLayers$1: function(checkerboard) {
    },
    build$0: function(_) {
      H._frameTimingsOnBuildFinish();
      H._frameTimingsOnRasterStart();
      H.timeAction("preroll_frame", new H.SurfaceSceneBuilder_build_closure(this));
      return H.timeAction("apply_frame", new H.SurfaceSceneBuilder_build_closure0(this));
    }
  };
  H.SurfaceSceneBuilder_build_closure.prototype = {
    call$0: function() {
      for (var t1 = this.$this._surfaceStack; t1.length > 1;)
        t1.pop();
      type$.PersistedScene._as(C.JSArray_methods.get$first(t1)).preroll$0();
    },
    $signature: 0
  };
  H.SurfaceSceneBuilder_build_closure0.prototype = {
    call$0: function() {
      var t3, t4,
        t1 = type$.PersistedScene,
        t2 = this.$this._surfaceStack;
      if ($.SurfaceSceneBuilder__lastFrameScene == null)
        t1._as(C.JSArray_methods.get$first(t2)).build$0(0);
      else {
        t3 = t1._as(C.JSArray_methods.get$first(t2));
        t4 = $.SurfaceSceneBuilder__lastFrameScene;
        t4.toString;
        t3.update$1(0, t4);
      }
      H.commitScene(t1._as(C.JSArray_methods.get$first(t2)));
      $.SurfaceSceneBuilder__lastFrameScene = t1._as(C.JSArray_methods.get$first(t2));
      return new H.SurfaceScene(t1._as(C.JSArray_methods.get$first(t2)).rootElement);
    },
    $signature: 135
  };
  H.NormalizedGradient.prototype = {
    setupUniforms$2: function(gl, glProgram) {
      var t1, t2, t3, t4, t5, i, t6, res, result, t7, t8, t9, t10, _this = this;
      for (t1 = _this.thresholdCount, t2 = _this._scale, t3 = gl.glContext, t4 = _this._bias, t5 = glProgram.program, i = 0; i < t1; ++i) {
        t6 = "bias_" + i;
        res = t3.getUniformLocation.apply(t3, [t5, t6]);
        if (res == null) {
          H.throwExpression(P.Exception_Exception(t6 + " not found"));
          result = null;
        } else
          result = res;
        t6 = i * 4;
        t7 = t6 + 1;
        t8 = t6 + 2;
        t9 = t6 + 3;
        t3.uniform4f.apply(t3, [result, t4[t6], t4[t7], t4[t8], t4[t9]]);
        t10 = "scale_" + i;
        res = t3.getUniformLocation.apply(t3, [t5, t10]);
        if (res == null) {
          H.throwExpression(P.Exception_Exception(t10 + " not found"));
          result = null;
        } else
          result = res;
        t3.uniform4f.apply(t3, [result, t2[t6], t2[t7], t2[t8], t2[t9]]);
      }
      for (t1 = _this._thresholds, t2 = t1.length, i = 0; i < t2; i += 4) {
        t4 = "threshold_" + C.JSInt_methods._tdivFast$1(i, 4);
        res = t3.getUniformLocation.apply(t3, [t5, t4]);
        if (res == null) {
          H.throwExpression(P.Exception_Exception(t4 + " not found"));
          result = null;
        } else
          result = res;
        t3.uniform4f.apply(t3, [result, t1[i], t1[i + 1], t1[i + 2], t1[i + 3]]);
      }
    }
  };
  H.EngineGradient.prototype = {};
  H.GradientLinear.prototype = {
    createPaintStyle$3: function(ctx, shaderBounds, density) {
      var matrix4, offsetX, offsetY, t2, t3, t4, t5, centerX, centerY, gradient, _this = this,
        t1 = _this.tileMode;
      if (t1 === C.TileMode_0 || t1 === C.TileMode_3) {
        matrix4 = _this.matrix4;
        offsetX = shaderBounds.left;
        offsetY = shaderBounds.top;
        t2 = _this.from;
        t3 = _this.to;
        t4 = t2._dx;
        t5 = t3._dx;
        t2 = t2._dy;
        t3 = t3._dy;
        if (matrix4 != null) {
          centerX = (t4 + t5) / 2;
          centerY = (t2 + t3) / 2;
          matrix4.transform$2(0, t4 - centerX, t2 - centerY);
          t2 = matrix4.transformedX;
          t4 = matrix4.transformedY;
          matrix4.transform$2(0, t5 - centerX, t3 - centerY);
          gradient = ctx.createLinearGradient(t2 + centerX - offsetX, t4 + centerY - offsetY, matrix4.transformedX + centerX - offsetX, matrix4.transformedY - offsetY + centerY);
        } else
          gradient = ctx.createLinearGradient(t4 - offsetX, t2 - offsetY, t5 - offsetX, t3 - offsetY);
        H._addColorStopsToCanvasGradient(gradient, _this.colors, _this.colorStops, t1 === C.TileMode_3);
        return gradient;
      } else {
        t1 = ctx.createPattern(_this.createImageBitmap$3(shaderBounds, density, false), "no-repeat");
        t1.toString;
        return t1;
      }
    },
    createImageBitmap$3: function(shaderBounds, density, createDataUrl) {
      var widthInPixels, t3, t4, heightInPixels, t5, t6, t7, t8, gl, normalizedGradient, builder, method, t9, fragColor, probeName, shader, cacheKey, cachedProgram, vertexShader, fragmentShader, fromX, fromY, toX, toY, dx, dy, $length, sinVal, cosVal, isRepeated, originX, originY, translateToOrigin, rotationZ, storage, gradientTransform, image, _this = this,
        _s18_ = "premultipliedAlpha",
        _s12_ = "u_resolution",
        _s10_ = "m_gradient",
        t1 = shaderBounds.right,
        t2 = shaderBounds.left;
      t1 -= t2;
      widthInPixels = C.JSNumber_methods.ceil$0(t1);
      t3 = shaderBounds.bottom;
      t4 = shaderBounds.top;
      t3 -= t4;
      heightInPixels = C.JSNumber_methods.ceil$0(t3);
      if ($._glRenderer == null)
        $._glRenderer = new H._WebGlRenderer();
      if ("OffscreenCanvas" in window) {
        t5 = new OffscreenCanvas(widthInPixels, heightInPixels);
        t6 = null;
      } else {
        t5 = W.CanvasElement_CanvasElement(heightInPixels, widthInPixels);
        t5.className = "gl-canvas";
        t6 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
        t7 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
        t8 = t5.style;
        t8.position = "absolute";
        t6 = H.S(widthInPixels / t6) + "px";
        t8.width = t6;
        t6 = H.S(heightInPixels / t7) + "px";
        t8.height = t6;
        t6 = t5;
        t5 = null;
      }
      if ("OffscreenCanvas" in window) {
        t5.toString;
        t6 = type$.String;
        t7 = C.OffscreenCanvas_methods.getContext$2(t5, "webgl2", P.LinkedHashMap_LinkedHashMap$_literal([_s18_, false], t6, type$.dynamic));
        t7.toString;
        gl = new H._GlContext(t7);
        $._GlContext____programCache = P.LinkedHashMap_LinkedHashMap$_empty(t6, type$.nullable__GlProgram);
        gl.__engine$_canvas = t5;
      } else {
        t6.toString;
        t5 = $._cachedWebGLVersion;
        t5 = (t5 == null ? $._cachedWebGLVersion = H._detectWebGLVersion() : t5) === 1 ? "webgl" : "webgl2";
        t7 = type$.String;
        t5 = C.CanvasElement_methods.getContext$2(t6, t5, P.LinkedHashMap_LinkedHashMap$_literal([_s18_, false], t7, type$.dynamic));
        t5.toString;
        gl = new H._GlContext(t5);
        $._GlContext____programCache = P.LinkedHashMap_LinkedHashMap$_empty(t7, type$.nullable__GlProgram);
        gl.__engine$_canvas = t6;
      }
      gl._widthInPixels = widthInPixels;
      gl._heightInPixels = heightInPixels;
      normalizedGradient = H.NormalizedGradient_NormalizedGradient(_this.colors, _this.colorStops);
      t5 = $._WebGlRenderer__baseVertexShader;
      if (t5 == null) {
        t5 = $._cachedWebGLVersion;
        if (t5 == null)
          t5 = $._cachedWebGLVersion = H._detectWebGLVersion();
        t6 = H.setRuntimeTypeInfo([], type$.JSArray_ShaderDeclaration);
        t7 = H.setRuntimeTypeInfo([], type$.JSArray_ShaderMethod);
        builder = new H.ShaderBuilder(t6, t7, t5 === 2, false, new P.StringBuffer(""));
        builder.addIn$2$name(11, "position");
        builder.addIn$2$name(11, "color");
        builder.addUniform$2$name(14, "u_ctransform");
        builder.addUniform$2$name(11, "u_scale");
        builder.addUniform$2$name(11, "u_shift");
        t6.push(new H.ShaderDeclaration("v_color", 11, 3));
        method = new H.ShaderMethod("main", H.setRuntimeTypeInfo([], type$.JSArray_String));
        t7.push(method);
        method.addStatement$1("gl_Position = ((u_ctransform * position) * u_scale) + u_shift;");
        method.addStatement$1("v_color = color.zyxw;");
        t5 = $._WebGlRenderer__baseVertexShader = builder.build$0(0);
      }
      t6 = _this.tileMode;
      t7 = $._cachedWebGLVersion;
      if (t7 == null)
        t7 = $._cachedWebGLVersion = H._detectWebGLVersion();
      t8 = H.setRuntimeTypeInfo([], type$.JSArray_ShaderDeclaration);
      t9 = H.setRuntimeTypeInfo([], type$.JSArray_ShaderMethod);
      t7 = t7 === 2;
      builder = new H.ShaderBuilder(t8, t9, t7, true, new P.StringBuffer(""));
      builder.floatPrecision = 1;
      builder.addIn$2$name(11, "v_color");
      builder.addUniform$2$name(9, _s12_);
      builder.addUniform$2$name(14, _s10_);
      fragColor = builder._fragmentColorDeclaration;
      if (fragColor == null)
        fragColor = builder._fragmentColorDeclaration = new H.ShaderDeclaration(t7 ? "gFragColor" : "gl_FragColor", 11, 3);
      method = new H.ShaderMethod("main", H.setRuntimeTypeInfo([], type$.JSArray_String));
      t9.push(method);
      method.addStatement$1("vec4 localCoord = m_gradient * vec4(gl_FragCoord.x, u_resolution.y - gl_FragCoord.y, 0, 1);");
      method.addStatement$1("float st = localCoord.x;");
      probeName = H._writeSharedGradientShader(builder, method, normalizedGradient, t6);
      method.addStatement$1(fragColor.name + " = " + probeName + " * scale + bias;");
      shader = builder.build$0(0);
      cacheKey = t5 + "||" + shader;
      cachedProgram = H._GlContext__programCache().$index(0, cacheKey);
      if (cachedProgram == null) {
        vertexShader = gl.compileShader$2(0, "VERTEX_SHADER", t5);
        fragmentShader = gl.compileShader$2(0, "FRAGMENT_SHADER", shader);
        t5 = gl.glContext;
        t7 = t5.createProgram.apply(t5, C.List_empty1);
        t7.toString;
        t5.attachShader.apply(t5, [t7, vertexShader]);
        t5.attachShader.apply(t5, [t7, fragmentShader]);
        t5.linkProgram.apply(t5, [t7]);
        t8 = gl._kLinkStatus;
        if (!t5.getProgramParameter.apply(t5, [t7, t8 == null ? gl._kLinkStatus = t5.LINK_STATUS : t8]))
          H.throwExpression(P.Exception_Exception(P.callMethod(t5, "getProgramInfoLog", [t7])));
        cachedProgram = new H._GlProgram(t7);
        H._GlContext__programCache().$indexSet(0, cacheKey, cachedProgram);
        t5.useProgram.apply(t5, [t7]);
      }
      t5 = _this.from;
      fromX = t5._dx;
      fromY = t5._dy;
      t5 = _this.to;
      toX = t5._dx;
      toY = t5._dy;
      dx = toX - fromX;
      dy = toY - fromY;
      $length = Math.sqrt(dx * dx + dy * dy);
      t5 = $length < 11920929e-14;
      sinVal = t5 ? 0 : -dy / $length;
      cosVal = t5 ? 1 : dx / $length;
      isRepeated = t6 !== C.TileMode_0;
      originX = isRepeated ? t1 / 2 : (fromX + toX) / 2 - t2;
      originY = isRepeated ? t3 / 2 : (fromY + toY) / 2 - t4;
      translateToOrigin = H.Matrix4$identity();
      translateToOrigin.setTranslationRaw$3(-originX, -originY, 0);
      rotationZ = H.Matrix4$identity();
      storage = rotationZ.__engine$_m4storage;
      storage[0] = cosVal;
      storage[1] = sinVal;
      storage[4] = -sinVal;
      storage[5] = cosVal;
      gradientTransform = H.Matrix4$identity();
      if (t6 !== C.TileMode_1)
        gradientTransform.translate$2(0, 0.5, 0);
      if ($length > 11920929e-14)
        gradientTransform.scale$1(0, 1 / $length);
      t2 = _this.matrix4;
      if (t2 != null) {
        t2 = t2.matrix;
        gradientTransform.scale$2(0, 1, -1);
        gradientTransform.translate$2(0, -shaderBounds.get$center()._dx, -shaderBounds.get$center()._dy);
        gradientTransform.multiply$1(0, new H.Matrix40(t2));
        gradientTransform.translate$2(0, shaderBounds.get$center()._dx, shaderBounds.get$center()._dy);
        gradientTransform.scale$2(0, 1, -1);
      }
      gradientTransform.multiply$1(0, rotationZ);
      gradientTransform.multiply$1(0, translateToOrigin);
      normalizedGradient.setupUniforms$2(gl, cachedProgram);
      t2 = cachedProgram.program;
      t4 = gl.glContext;
      t4.uniformMatrix4fv.apply(t4, [gl.getUniformLocation$2(0, t2, _s10_), false, gradientTransform.__engine$_m4storage]);
      t4.uniform2f.apply(t4, [gl.getUniformLocation$2(0, t2, _s12_), widthInPixels, heightInPixels]);
      t2 = $._glRenderer;
      t2.drawRectToGl$6(new P.Rect(0, 0, 0 + t1, 0 + t3), gl, cachedProgram, normalizedGradient, widthInPixels, heightInPixels);
      image = gl.readPatternData$0();
      t4.bindBuffer.apply(t4, [gl.get$kArrayBuffer(), null]);
      t4.bindBuffer.apply(t4, [gl.get$kElementArrayBuffer(), null]);
      image.toString;
      return image;
    }
  };
  H.ShaderBuilder.prototype = {
    addIn$2$name: function(dataType, $name) {
      var attrib = new H.ShaderDeclaration($name, dataType, 1);
      this.declarations.push(attrib);
      return attrib;
    },
    addUniform$2$name: function(dataType, $name) {
      var uniform = new H.ShaderDeclaration($name, dataType, 2);
      this.declarations.push(uniform);
      return uniform;
    },
    _writeVariableDeclaration$2: function(sb, variable) {
      var t2, t3, _this = this,
        _s8_ = "varying ",
        t1 = variable.storage;
      switch (t1) {
        case 0:
          _this.__engine$_buffer._contents += "const ";
          break;
        case 1:
          if (_this.isWebGl2)
            t2 = "in ";
          else
            t2 = _this._isFragmentShader ? _s8_ : "attribute ";
          _this.__engine$_buffer._contents += t2;
          break;
        case 2:
          _this.__engine$_buffer._contents += "uniform ";
          break;
        case 3:
          t2 = _this.isWebGl2 ? "out " : _s8_;
          _this.__engine$_buffer._contents += t2;
          break;
      }
      t2 = _this.__engine$_buffer;
      t3 = t2._contents += H.ShaderBuilder_typeToString(variable.dataType) + " " + variable.name;
      if (t1 === 0)
        t1 = t2._contents = t3 + " = ";
      else
        t1 = t3;
      t2._contents = t1 + ";\n";
    },
    build$0: function(_) {
      var t2, t3, _i, _this = this,
        t1 = _this.isWebGl2;
      if (t1)
        _this.__engine$_buffer._contents += "#version 300 es\n";
      t2 = _this.floatPrecision;
      if (t2 != null) {
        if (t2 === 0)
          t2 = "lowp";
        else
          t2 = t2 === 1 ? "mediump" : "highp";
        _this.__engine$_buffer._contents += "precision " + t2 + " float;\n";
      }
      if (t1 && _this._fragmentColorDeclaration != null) {
        t1 = _this._fragmentColorDeclaration;
        t1.toString;
        _this._writeVariableDeclaration$2(_this.__engine$_buffer, t1);
      }
      for (t1 = _this.declarations, t2 = t1.length, t3 = _this.__engine$_buffer, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        _this._writeVariableDeclaration$2(t3, t1[_i]);
      for (t1 = _this._methods, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].write$1(0, t3);
      t1 = t3._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  H.ShaderMethod.prototype = {
    addStatement$1: function(statement) {
      this._statements.push(statement);
    },
    write$1: function(_, buffer) {
      var t2, t3, _i,
        t1 = buffer._contents += "void " + this.name + "() {\n";
      for (t2 = this._statements, t3 = t2.length, _i = 0; _i < t3; ++_i) {
        t1 += t2[_i] + "\n";
        buffer._contents = t1;
      }
      buffer._contents = t1 + "}\n";
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  H.ShaderDeclaration.prototype = {
    get$name: function(receiver) {
      return this.name;
    }
  };
  H.commitScene_closure.prototype = {
    call$2: function(a, b) {
      var bSize,
        t1 = a.canvasSize,
        aSize = t1._dy * t1._dx;
      t1 = b.canvasSize;
      bSize = t1._dy * t1._dx;
      return J.compareTo$1$ns(bSize, aSize);
    },
    $signature: 141
  };
  H.PersistedSurfaceState.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.PersistedSurface.prototype = {
    revive$0: function() {
      this.__engine$_state = C.PersistedSurfaceState_0;
    },
    get$childContainer: function() {
      return this.rootElement;
    },
    build$0: function(_) {
      var t2, _this = this,
        t1 = _this.createElement$0(0);
      _this.rootElement = t1;
      t2 = H._browserEngine();
      if (t2 === C.BrowserEngine_1) {
        t1 = t1.style;
        t1.zIndex = "0";
      }
      _this.apply$0();
      _this.__engine$_state = C.PersistedSurfaceState_1;
    },
    adoptElements$1: function(oldSurface) {
      this.rootElement = oldSurface.rootElement;
      oldSurface.rootElement = null;
      oldSurface.__engine$_state = C.PersistedSurfaceState_4;
    },
    update$1: function(_, oldSurface) {
      this.adoptElements$1(oldSurface);
      this.__engine$_state = C.PersistedSurfaceState_1;
    },
    retain$0: function() {
      if (this.__engine$_state === C.PersistedSurfaceState_2)
        $._retainedSurfaces.push(this);
    },
    discard$0: function() {
      var t1 = this.rootElement;
      t1.toString;
      J.remove$0$ax(t1);
      this.rootElement = null;
      this.__engine$_state = C.PersistedSurfaceState_4;
    },
    defaultCreateElement$1: function(tagName) {
      var t1 = W._ElementFactoryProvider_createElement_tag(tagName, null),
        t2 = t1.style;
      t2.position = "absolute";
      return t1;
    },
    get$localTransformInverse: function() {
      var t1 = this._localTransformInverse;
      return t1 == null ? this._localTransformInverse = H.Matrix4$identity() : t1;
    },
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform;
      _this._projectedClip = _this._localTransformInverse = _this._localClipBounds = null;
    },
    preroll$0: function() {
      this.recomputeTransformAndClip$0();
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PersistedLeafSurface.prototype = {};
  H.PersistedContainerSurface.prototype = {
    preroll$0: function() {
      var t1, $length, i;
      this.super$PersistedSurface$preroll();
      t1 = this.__engine$_children;
      $length = t1.length;
      for (i = 0; i < $length; ++i)
        t1[i].preroll$0();
    },
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform;
      _this._projectedClip = _this._localTransformInverse = _this._localClipBounds = null;
    },
    build$0: function(_) {
      var t1, len, containerElement, i, child, t2;
      this.super$PersistedSurface$build(0);
      t1 = this.__engine$_children;
      len = t1.length;
      containerElement = this.get$childContainer();
      for (i = 0; i < len; ++i) {
        child = t1[i];
        if (child.__engine$_state === C.PersistedSurfaceState_2)
          child.retain$0();
        else if (child instanceof H.PersistedContainerSurface && child._oldLayer.value != null) {
          t2 = child._oldLayer.value;
          t2.toString;
          child.update$1(0, t2);
        } else
          child.build$0(0);
        containerElement.toString;
        t2 = child.rootElement;
        t2.toString;
        containerElement.appendChild(t2);
        child.__engine$_index = i;
      }
    },
    matchForUpdate$1: function(existingSurface) {
      return 1;
    },
    update$1: function(_, oldSurface) {
      var t1, _this = this;
      _this.super$PersistedSurface$update(0, oldSurface);
      if (oldSurface.__engine$_children.length === 0)
        _this._updateZeroToMany$1(oldSurface);
      else {
        t1 = _this.__engine$_children.length;
        if (t1 === 1)
          _this._updateManyToOne$1(oldSurface);
        else if (t1 === 0)
          H.PersistedContainerSurface__discardActiveChildren(oldSurface);
        else
          _this._updateManyToMany$1(oldSurface);
      }
    },
    _updateZeroToMany$1: function(oldSurface) {
      var t2, i, newChild, t3,
        containerElement = this.get$childContainer(),
        t1 = this.__engine$_children,
        $length = t1.length;
      for (t2 = type$.PersistedContainerSurface, i = 0; i < $length; ++i) {
        newChild = t1[i];
        if (newChild.__engine$_state === C.PersistedSurfaceState_2)
          newChild.retain$0();
        else if (newChild instanceof H.PersistedContainerSurface && newChild._oldLayer.value != null)
          newChild.update$1(0, t2._as(newChild._oldLayer.value));
        else
          newChild.build$0(0);
        newChild.__engine$_index = i;
        containerElement.toString;
        t3 = newChild.rootElement;
        t3.toString;
        containerElement.appendChild(t3);
      }
    },
    _updateManyToOne$1: function(oldSurface) {
      var t1, t2, oldLayer, bestMatch, bestScore, i, candidate, rti, score, t3, oldChild, _this = this,
        newChild = _this.__engine$_children[0];
      newChild.__engine$_index = 0;
      if (newChild.__engine$_state === C.PersistedSurfaceState_2) {
        t1 = newChild.rootElement.parentElement;
        t2 = _this.get$childContainer();
        if (t1 == null ? t2 != null : t1 !== t2) {
          t1 = _this.get$childContainer();
          t1.toString;
          t2 = newChild.rootElement;
          t2.toString;
          t1.appendChild(t2);
        }
        newChild.retain$0();
        H.PersistedContainerSurface__discardActiveChildren(oldSurface);
        return;
      }
      if (newChild instanceof H.PersistedContainerSurface && newChild._oldLayer.value != null) {
        oldLayer = type$.PersistedContainerSurface._as(newChild._oldLayer.value);
        t1 = oldLayer.rootElement.parentElement;
        t2 = _this.get$childContainer();
        if (t1 == null ? t2 != null : t1 !== t2) {
          t1 = _this.get$childContainer();
          t1.toString;
          t2 = oldLayer.rootElement;
          t2.toString;
          t1.appendChild(t2);
        }
        newChild.update$1(0, oldLayer);
        H.PersistedContainerSurface__discardActiveChildren(oldSurface);
        return;
      }
      for (t1 = oldSurface.__engine$_children, bestMatch = null, bestScore = 2, i = 0; i < t1.length; ++i) {
        candidate = t1[i];
        if (candidate.__engine$_state === C.PersistedSurfaceState_1) {
          rti = newChild instanceof H.Closure ? H.closureFunctionType(newChild) : null;
          t2 = H.createRuntimeType(rti == null ? H.instanceType(newChild) : rti);
          rti = candidate instanceof H.Closure ? H.closureFunctionType(candidate) : null;
          t2 = t2 === H.createRuntimeType(rti == null ? H.instanceType(candidate) : rti);
        } else
          t2 = false;
        if (!t2)
          continue;
        score = newChild.matchForUpdate$1(candidate);
        if (score < bestScore) {
          bestScore = score;
          bestMatch = candidate;
        }
      }
      if (bestMatch != null) {
        newChild.update$1(0, bestMatch);
        t2 = newChild.rootElement.parentElement;
        t3 = _this.get$childContainer();
        if (t2 == null ? t3 != null : t2 !== t3) {
          t2 = _this.get$childContainer();
          t2.toString;
          t3 = newChild.rootElement;
          t3.toString;
          t2.appendChild(t3);
        }
      } else {
        newChild.build$0(0);
        t2 = _this.get$childContainer();
        t2.toString;
        t3 = newChild.rootElement;
        t3.toString;
        t2.appendChild(t3);
      }
      for (i = 0; i < t1.length; ++i) {
        oldChild = t1[i];
        if (oldChild !== bestMatch && oldChild.__engine$_state === C.PersistedSurfaceState_1)
          oldChild.discard$0();
      }
    },
    _updateManyToMany$1: function(oldSurface) {
      var t1, t2, t3, indexMapNew, indexMapOld, requiresDomInserts, topInNew, newChild, t4, isReparenting, matchedOldChild, oldLayer, indexInOld, backfill, _this = this,
        containerElement = _this.get$childContainer(),
        matches = _this._matchChildren$1(oldSurface);
      for (t1 = _this.__engine$_children, t2 = type$.PersistedContainerSurface, t3 = type$.JSArray_int, indexMapNew = null, indexMapOld = null, requiresDomInserts = false, topInNew = 0; topInNew < t1.length; ++topInNew) {
        newChild = t1[topInNew];
        if (newChild.__engine$_state === C.PersistedSurfaceState_2) {
          t4 = newChild.rootElement.parentElement;
          isReparenting = t4 == null ? containerElement != null : t4 !== containerElement;
          newChild.retain$0();
          matchedOldChild = newChild;
        } else if (newChild instanceof H.PersistedContainerSurface && newChild._oldLayer.value != null) {
          oldLayer = t2._as(newChild._oldLayer.value);
          t4 = oldLayer.rootElement.parentElement;
          isReparenting = t4 == null ? containerElement != null : t4 !== containerElement;
          newChild.update$1(0, oldLayer);
          matchedOldChild = oldLayer;
        } else {
          matchedOldChild = matches.$index(0, newChild);
          if (matchedOldChild != null) {
            t4 = matchedOldChild.rootElement.parentElement;
            isReparenting = t4 == null ? containerElement != null : t4 !== containerElement;
            newChild.update$1(0, matchedOldChild);
          } else {
            newChild.build$0(0);
            isReparenting = true;
          }
        }
        indexInOld = matchedOldChild != null && !isReparenting ? matchedOldChild.__engine$_index : -1;
        if (!requiresDomInserts && indexInOld !== topInNew) {
          indexMapNew = H.setRuntimeTypeInfo([], t3);
          indexMapOld = H.setRuntimeTypeInfo([], t3);
          for (backfill = 0; backfill < topInNew; ++backfill) {
            indexMapNew.push(backfill);
            indexMapOld.push(backfill);
          }
          requiresDomInserts = true;
        }
        if (requiresDomInserts && indexInOld !== -1) {
          indexMapNew.push(topInNew);
          indexMapOld.push(indexInOld);
        }
        newChild.__engine$_index = topInNew;
      }
      if (requiresDomInserts) {
        indexMapOld.toString;
        _this._insertChildDomNodes$2(indexMapNew, indexMapOld);
      }
      H.PersistedContainerSurface__discardActiveChildren(oldSurface);
    },
    _insertChildDomNodes$2: function(indexMapNew, indexMapOld) {
      var t1, i, containerElement, t2, refNode, isStationary, childElement,
        stationaryIndices = H.longestIncreasingSubsequence(indexMapOld);
      for (t1 = stationaryIndices.length, i = 0; i < t1; ++i)
        stationaryIndices[i] = indexMapNew[stationaryIndices[i]];
      containerElement = this.get$childContainer();
      for (t1 = this.__engine$_children, i = t1.length - 1, t2 = type$.HtmlElement, refNode = null; i >= 0; --i, refNode = childElement) {
        indexMapNew.toString;
        isStationary = C.JSArray_methods.indexOf$1(indexMapNew, i) !== -1 && C.JSArray_methods.contains$1(stationaryIndices, i);
        childElement = t2._as(t1[i].rootElement);
        if (!isStationary)
          if (refNode == null)
            containerElement.appendChild(childElement);
          else
            containerElement.insertBefore(childElement, refNode);
      }
    },
    _matchChildren$1: function(oldSurface) {
      var i, child, oldChildren, newChildCount, oldChildCount, allMatches, indexInNew, newChild, indexInOld, oldChild, rti, result, match, matchedChild, newChildNeedsMatch,
        t1 = this.__engine$_children,
        newUnfilteredChildCount = t1.length,
        t2 = oldSurface.__engine$_children,
        oldUnfilteredChildCount = t2.length,
        newChildren = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
      for (i = 0; i < newUnfilteredChildCount; ++i) {
        child = t1[i];
        if (child.__engine$_state === C.PersistedSurfaceState_0 && child._oldLayer.value == null)
          newChildren.push(child);
      }
      oldChildren = H.setRuntimeTypeInfo([], type$.JSArray_nullable_PersistedSurface);
      for (i = 0; i < oldUnfilteredChildCount; ++i) {
        child = t2[i];
        if (child.__engine$_state === C.PersistedSurfaceState_1)
          oldChildren.push(child);
      }
      newChildCount = newChildren.length;
      oldChildCount = oldChildren.length;
      if (newChildCount === 0 || oldChildCount === 0)
        return C.Map_empty5;
      allMatches = H.setRuntimeTypeInfo([], type$.JSArray__PersistedSurfaceMatch);
      for (indexInNew = 0; indexInNew < newChildCount; ++indexInNew) {
        newChild = newChildren[indexInNew];
        for (indexInOld = 0; indexInOld < oldChildCount; ++indexInOld) {
          oldChild = oldChildren[indexInOld];
          if (oldChild != null) {
            if (oldChild.__engine$_state === C.PersistedSurfaceState_1) {
              rti = newChild instanceof H.Closure ? H.closureFunctionType(newChild) : null;
              t1 = H.createRuntimeType(rti == null ? H.instanceType(newChild) : rti);
              rti = oldChild instanceof H.Closure ? H.closureFunctionType(oldChild) : null;
              t1 = t1 === H.createRuntimeType(rti == null ? H.instanceType(oldChild) : rti);
            } else
              t1 = false;
            t1 = !t1;
          } else
            t1 = true;
          if (t1)
            continue;
          allMatches.push(new H._PersistedSurfaceMatch(newChild, indexInOld, newChild.matchForUpdate$1(oldChild)));
        }
      }
      C.JSArray_methods.sort$1(allMatches, new H.PersistedContainerSurface__matchChildren_closure());
      result = P.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_PersistedSurface, type$.PersistedSurface);
      for (i = 0; i < allMatches.length; ++i) {
        match = allMatches[i];
        t1 = match.oldChildIndex;
        matchedChild = oldChildren[t1];
        t2 = match.newChild;
        newChildNeedsMatch = result.$index(0, t2) == null;
        if (matchedChild != null && newChildNeedsMatch) {
          oldChildren[t1] = null;
          result.$indexSet(0, t2, matchedChild);
        }
      }
      return result;
    },
    retain$0: function() {
      var t1, len, i;
      this.super$PersistedSurface$retain();
      t1 = this.__engine$_children;
      len = t1.length;
      for (i = 0; i < len; ++i)
        t1[i].retain$0();
    },
    revive$0: function() {
      var t1, len, i;
      this.super$PersistedSurface$revive();
      t1 = this.__engine$_children;
      len = t1.length;
      for (i = 0; i < len; ++i)
        t1[i].revive$0();
    },
    discard$0: function() {
      this.super$PersistedSurface$discard();
      H.PersistedContainerSurface__discardActiveChildren(this);
    }
  };
  H.PersistedContainerSurface__matchChildren_closure.prototype = {
    call$2: function(m1, m2) {
      return C.JSNumber_methods.compareTo$1(m1.matchQuality, m2.matchQuality);
    },
    $signature: 93
  };
  H._PersistedSurfaceMatch.prototype = {
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.PersistedTransform.prototype = {
    recomputeTransformAndClip$0: function() {
      var _this = this;
      _this.__engine$_transform = _this.parent.__engine$_transform.multiplied$1(new H.Matrix40(_this.matrix4));
      _this._projectedClip = _this._localTransformInverse = null;
    },
    get$localTransformInverse: function() {
      var t1 = this._localTransformInverse;
      return t1 == null ? this._localTransformInverse = H.Matrix4_tryInvert0(new H.Matrix40(this.matrix4)) : t1;
    },
    createElement$0: function(_) {
      var element = $.$get$domRenderer().createElement$1(0, "flt-transform");
      H.DomRenderer_setElementStyle(element, "position", "absolute");
      H.DomRenderer_setElementStyle(element, "transform-origin", "0 0 0");
      return element;
    },
    apply$0: function() {
      var t1 = this.rootElement.style,
        t2 = H.float64ListToCssTransform(this.matrix4);
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
    },
    update$1: function(_, oldSurface) {
      var t1, t2, matrixChanged, i;
      this.super$PersistedContainerSurface$update(0, oldSurface);
      t1 = oldSurface.matrix4;
      t2 = this.matrix4;
      if (t1 === t2)
        return;
      i = 0;
      while (true) {
        if (!(i < 16)) {
          matrixChanged = false;
          break;
        }
        if (t2[i] !== t1[i]) {
          matrixChanged = true;
          break;
        }
        ++i;
      }
      if (matrixChanged) {
        t1 = this.rootElement.style;
        t2 = H.float64ListToCssTransform(t2);
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t2, "");
      }
    },
    $isTransformEngineLayer0: 1
  };
  H.Keyboard.prototype = {
    Keyboard$_$0: function() {
      var _this = this,
        t1 = new H.Keyboard$__closure(_this);
      _this._keydownListener = t1;
      C.Window_methods.addEventListener$2(window, "keydown", t1);
      t1 = new H.Keyboard$__closure0(_this);
      _this._keyupListener = t1;
      C.Window_methods.addEventListener$2(window, "keyup", t1);
      $._hotRestartListeners.push(new H.Keyboard$__closure1(_this));
    },
    dispose$0: function(_) {
      var t1, t2, _this = this;
      C.Window_methods.removeEventListener$2(window, "keydown", _this._keydownListener);
      C.Window_methods.removeEventListener$2(window, "keyup", _this._keyupListener);
      for (t1 = _this._keydownTimers, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.$index(0, t2.get$current(t2)).cancel$0(0);
      t1.clear$0(0);
      $.Keyboard__instance = _this._keyupListener = _this._keydownListener = null;
    },
    _handleHtmlEvent$1: function($event) {
      var t1, t2, t3, metaState, eventData, _this = this;
      if (!type$.KeyboardEvent._is($event))
        return;
      t1 = $event.code;
      t1.toString;
      t2 = $event.key;
      t2.toString;
      if (!(t2 === "Meta" || t2 === "Shift" || t2 === "Alt" || t2 === "Control")) {
        t2 = _this._keydownTimers;
        t3 = t2.$index(0, t1);
        if (t3 != null)
          t3.cancel$0(0);
        if ($event.type === "keydown")
          t3 = $event.ctrlKey || $event.shiftKey || $event.altKey || $event.metaKey;
        else
          t3 = false;
        if (t3)
          t2.$indexSet(0, t1, P.Timer_Timer(C.Duration_1000000, new H.Keyboard__handleHtmlEvent_closure(_this, t1, $event)));
        else
          t2.remove$1(0, t1);
      }
      metaState = $event.getModifierState("Shift") ? 1 : 0;
      if ($event.getModifierState("Alt") || $event.getModifierState("AltGraph"))
        metaState |= 2;
      if ($event.getModifierState("Control"))
        metaState |= 4;
      if ($event.getModifierState("Meta"))
        metaState |= 8;
      _this._lastMetaState = metaState;
      if ($event.type === "keydown") {
        t1 = $event.key;
        if (t1 === "CapsLock") {
          t1 = metaState | 32;
          _this._lastMetaState = t1;
        } else if ($event.code === "NumLock") {
          t1 = metaState | 16;
          _this._lastMetaState = t1;
        } else if (t1 === "ScrollLock") {
          t1 = metaState | 64;
          _this._lastMetaState = t1;
        } else
          t1 = metaState;
      } else
        t1 = metaState;
      eventData = P.LinkedHashMap_LinkedHashMap$_literal(["type", $event.type, "keymap", "web", "code", $event.code, "key", $event.key, "metaState", t1], type$.String, type$.dynamic);
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/keyevent", C.C_JSONMessageCodec.encodeMessage$1(eventData), new H.Keyboard__handleHtmlEvent_closure0($event));
    }
  };
  H.Keyboard$__closure.prototype = {
    call$1: function($event) {
      this.$this._handleHtmlEvent$1($event);
    },
    $signature: 1
  };
  H.Keyboard$__closure0.prototype = {
    call$1: function($event) {
      this.$this._handleHtmlEvent$1($event);
    },
    $signature: 1
  };
  H.Keyboard$__closure1.prototype = {
    call$0: function() {
      this.$this.dispose$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.Keyboard__handleHtmlEvent_closure.prototype = {
    call$0: function() {
      var t2, eventData,
        t1 = this.$this;
      t1._keydownTimers.remove$1(0, this.timerKey);
      t2 = this.event;
      eventData = P.LinkedHashMap_LinkedHashMap$_literal(["type", "keyup", "keymap", "web", "code", t2.code, "key", t2.key, "metaState", t1._lastMetaState], type$.String, type$.dynamic);
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/keyevent", C.C_JSONMessageCodec.encodeMessage$1(eventData), H._engine___noopCallback$closure());
    },
    $signature: 0
  };
  H.Keyboard__handleHtmlEvent_closure0.prototype = {
    call$1: function(data) {
      if (data == null)
        return;
      if (H._asBool(J.$index$asx(C.C_JSONMessageCodec.decodeMessage$1(data), "handled")))
        this.event.preventDefault();
    },
    $signature: 10
  };
  H._kLogicalKeyToModifierGetter_closure.prototype = {
    call$1: function($event) {
      return $event._event.altKey;
    },
    $signature: 12
  };
  H._kLogicalKeyToModifierGetter_closure0.prototype = {
    call$1: function($event) {
      return $event._event.altKey;
    },
    $signature: 12
  };
  H._kLogicalKeyToModifierGetter_closure1.prototype = {
    call$1: function($event) {
      return $event._event.ctrlKey;
    },
    $signature: 12
  };
  H._kLogicalKeyToModifierGetter_closure2.prototype = {
    call$1: function($event) {
      return $event._event.ctrlKey;
    },
    $signature: 12
  };
  H._kLogicalKeyToModifierGetter_closure3.prototype = {
    call$1: function($event) {
      return $event._event.shiftKey;
    },
    $signature: 12
  };
  H._kLogicalKeyToModifierGetter_closure4.prototype = {
    call$1: function($event) {
      return $event._event.shiftKey;
    },
    $signature: 12
  };
  H._kLogicalKeyToModifierGetter_closure5.prototype = {
    call$1: function($event) {
      return $event._event.metaKey;
    },
    $signature: 12
  };
  H._kLogicalKeyToModifierGetter_closure6.prototype = {
    call$1: function($event) {
      return $event._event.metaKey;
    },
    $signature: 12
  };
  H.KeyboardBinding.prototype = {
    get$_converter: function() {
      var t1 = this.__KeyboardBinding__converter;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_converter")) : t1;
    },
    __engine$_addEventListener$2: function(_, eventName, handler) {
      var loggedHandler = new H.KeyboardBinding__addEventListener_closure(handler);
      this._listeners.$indexSet(0, eventName, loggedHandler);
      C.Window_methods.addEventListener$3(window, eventName, loggedHandler, true);
    },
    _onKeyData$1: function(data) {
      var t1 = {};
      t1.result = null;
      $.$get$EnginePlatformDispatcher__instance().invokeOnKeyData$2(data, new H.KeyboardBinding__onKeyData_closure(t1));
      t1 = t1.result;
      t1.toString;
      return t1;
    },
    _setup$0: function() {
      var t1, t2, _this = this;
      _this.__engine$_addEventListener$2(0, "keydown", new H.KeyboardBinding__setup_closure(_this));
      _this.__engine$_addEventListener$2(0, "keyup", new H.KeyboardBinding__setup_closure0(_this));
      t1 = H._operatingSystem();
      t2 = type$.int;
      _this.__KeyboardBinding__converter = new H.KeyboardConverter(_this.get$_onKeyData(), t1 === C.OperatingSystem_4, P.LinkedHashMap_LinkedHashMap$_empty(t2, t2), P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.void_Function));
    }
  };
  H.KeyboardBinding__addEventListener_closure.prototype = {
    call$1: function($event) {
      var t1 = $.EngineSemanticsOwner__instance;
      if ((t1 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t1).receiveGlobalEvent$1($event))
        return this.handler.call$1($event);
    },
    $signature: 24
  };
  H.KeyboardBinding__onKeyData_closure.prototype = {
    call$1: function(handled) {
      this._box_0.result = false;
    },
    $signature: 15
  };
  H.KeyboardBinding__setup_closure.prototype = {
    call$1: function($event) {
      return this.$this.get$_converter().handleEvent$1(new H.FlutterHtmlKeyboardEvent(type$.KeyboardEvent._as($event)));
    },
    $signature: 3
  };
  H.KeyboardBinding__setup_closure0.prototype = {
    call$1: function($event) {
      return this.$this.get$_converter().handleEvent$1(new H.FlutterHtmlKeyboardEvent(type$.KeyboardEvent._as($event)));
    },
    $signature: 3
  };
  H.FlutterHtmlKeyboardEvent.prototype = {};
  H.KeyboardConverter.prototype = {
    _scheduleAsyncEvent$3: function(duration, getData, callback) {
      var t2, t1 = {};
      t1.canceled = false;
      t2 = type$.void;
      P.Future_Future$delayed(duration, t2).then$1$1(0, new H.KeyboardConverter__scheduleAsyncEvent_closure(t1, this, callback, getData), t2);
      return new H.KeyboardConverter__scheduleAsyncEvent_closure0(t1);
    },
    _startGuardingKey$3: function(physicalKey, logicalKey, currentTimeStamp) {
      var t2, _this = this,
        t1 = _this.onMacOs ? C.Duration_2000000 : C.Duration_1000000,
        cancelingCallback = _this._scheduleAsyncEvent$3(t1, new H.KeyboardConverter__startGuardingKey_closure(_this, currentTimeStamp, physicalKey, logicalKey), new H.KeyboardConverter__startGuardingKey_closure0(_this, physicalKey));
      t1 = _this._keyGuards;
      t2 = t1.remove$1(0, physicalKey);
      if (t2 != null)
        t2.call$0();
      t1.$indexSet(0, physicalKey, cancelingCallback);
    },
    handleEvent$1: function($event) {
      var ms, timeStamp, t3, physicalKey, logicalKeyIsCharacter, character, logicalKey, isPhysicalDown, lastLogicalRecord, type, nextLogicalRecord, _this = this, _null = null,
        t1 = $event._event,
        t2 = t1.timeStamp;
      t2.toString;
      ms = C.JSNumber_methods.toInt$0(t2);
      timeStamp = P.Duration$(C.JSNumber_methods.toInt$0((t2 - ms) * 1000), ms);
      t2 = t1.key;
      t2.toString;
      t3 = t1.code;
      t3.toString;
      physicalKey = C.Map_YV6he.$index(0, t3);
      if (physicalKey == null)
        physicalKey = C.JSString_methods.get$hashCode(t3) + 34359738368 + 1099511627776;
      t3 = C.JSString_methods._codeUnitAt$1(t2, 0);
      if (!(t3 >= 97 && t3 <= 122))
        t3 = t3 >= 65 && t3 <= 90;
      else
        t3 = true;
      logicalKeyIsCharacter = !(t3 && t2.length > 1);
      if (logicalKeyIsCharacter)
        character = t2;
      else
        character = _null;
      logicalKey = new H.KeyboardConverter_handleEvent_closure($event, character, t2, physicalKey).call$0();
      if (t1.type !== "keydown")
        if (_this.onMacOs) {
          t2 = t1.code;
          t2.toString;
          t2 = t2 === "CapsLock";
          isPhysicalDown = t2;
        } else
          isPhysicalDown = false;
      else
        isPhysicalDown = true;
      t2 = _this._pressingRecords;
      lastLogicalRecord = t2.$index(0, physicalKey);
      if (_this.onMacOs) {
        t3 = t1.code;
        t3.toString;
        t3 = t3 === "CapsLock";
      } else
        t3 = false;
      if (t3) {
        _this._scheduleAsyncEvent$3(C.Duration_0, new H.KeyboardConverter_handleEvent_closure0(timeStamp, physicalKey, logicalKey), new H.KeyboardConverter_handleEvent_closure1(_this, physicalKey));
        type = C.KeyEventType_0;
      } else if (isPhysicalDown)
        if (lastLogicalRecord != null) {
          t3 = t1.repeat;
          if (t3 !== true)
            return;
          type = C.KeyEventType_2;
        } else
          type = C.KeyEventType_0;
      else {
        if (lastLogicalRecord == null)
          return;
        type = C.KeyEventType_1;
      }
      switch (type) {
        case C.KeyEventType_0:
          nextLogicalRecord = logicalKey;
          break;
        case C.KeyEventType_1:
          nextLogicalRecord = _null;
          break;
        case C.KeyEventType_2:
          nextLogicalRecord = lastLogicalRecord;
          break;
        default:
          nextLogicalRecord = _null;
      }
      t3 = nextLogicalRecord == null;
      if (t3)
        t2.remove$1(0, physicalKey);
      else
        t2.$indexSet(0, physicalKey, nextLogicalRecord);
      $.$get$_kLogicalKeyToModifierGetter().forEach$1(0, new H.KeyboardConverter_handleEvent_closure2(_this, $event, timeStamp));
      if (logicalKeyIsCharacter)
        if (!t3)
          _this._startGuardingKey$3(physicalKey, logicalKey, timeStamp);
        else {
          t2 = _this._keyGuards.remove$1(0, physicalKey);
          if (t2 != null)
            t2.call$0();
        }
      t2 = lastLogicalRecord == null ? logicalKey : lastLogicalRecord;
      t3 = type === C.KeyEventType_1 ? _null : character;
      if (_this.dispatchKeyData.call$1(new P.KeyData(type, physicalKey, t2, t3)))
        t1.preventDefault();
    }
  };
  H.KeyboardConverter__scheduleAsyncEvent_closure.prototype = {
    call$1: function(_) {
      var _this = this;
      if (!_this._box_0.canceled && !_this.$this._disposed) {
        _this.callback.call$0();
        _this.$this.dispatchKeyData.call$1(_this.getData.call$0());
      }
    },
    $signature: 17
  };
  H.KeyboardConverter__scheduleAsyncEvent_closure0.prototype = {
    call$0: function() {
      this._box_0.canceled = true;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.KeyboardConverter__startGuardingKey_closure.prototype = {
    call$0: function() {
      return new P.KeyData(C.KeyEventType_1, this.physicalKey, this.logicalKey, null);
    },
    $signature: 78
  };
  H.KeyboardConverter__startGuardingKey_closure0.prototype = {
    call$0: function() {
      this.$this._pressingRecords.remove$1(0, this.physicalKey);
    },
    $signature: 0
  };
  H.KeyboardConverter_handleEvent_closure.prototype = {
    call$0: function() {
      var result, altDown, ctrlDown, shiftDown, metaDown, t3, t4, _this = this,
        t1 = _this.event._event,
        t2 = t1.key;
      t2.toString;
      if (C.Map_T7S7Y.containsKey$1(0, t2)) {
        t2 = t1.key;
        t2.toString;
        t2 = C.Map_T7S7Y.$index(0, t2);
        result = t2 == null ? null : t2[t1.location];
        result.toString;
        return result;
      }
      t2 = _this.character;
      if (t2 != null) {
        result = C.JSString_methods._codeUnitAt$1(t2, 0) & 65535;
        if (t2.length === 2)
          result += C.JSString_methods._codeUnitAt$1(t2, 1) << 16 >>> 0;
        return result >= 65 && result <= 90 ? result + 97 - 65 : result;
      }
      t2 = _this.eventKey;
      if (t2 === "Dead") {
        altDown = t1.altKey;
        ctrlDown = t1.ctrlKey;
        shiftDown = t1.shiftKey;
        metaDown = t1.metaKey;
        t1 = altDown ? 70368744177664 : 0;
        t2 = ctrlDown ? 17592186044416 : 0;
        t3 = shiftDown ? 35184372088832 : 0;
        t4 = metaDown ? 140737488355328 : 0;
        return _this.physicalKey + (t1 + t2 + t3 + t4) + 34359738368 + 1099511627776;
      }
      t1 = C.Map_mC8xL.$index(0, t2);
      return t1 == null ? C.JSString_methods.get$hashCode(t2) + 34359738368 + 1099511627776 : t1;
    },
    $signature: 28
  };
  H.KeyboardConverter_handleEvent_closure0.prototype = {
    call$0: function() {
      return new P.KeyData(C.KeyEventType_1, this.physicalKey, this.logicalKey, null);
    },
    $signature: 78
  };
  H.KeyboardConverter_handleEvent_closure1.prototype = {
    call$0: function() {
      this.$this._pressingRecords.remove$1(0, this.physicalKey);
    },
    $signature: 0
  };
  H.KeyboardConverter_handleEvent_closure2.prototype = {
    call$2: function(logicalKey, getModifier) {
      var t1 = this.$this,
        t2 = t1._pressingRecords;
      if (t2.containsValue$1(0, logicalKey) && !getModifier.call$1(this.event))
        t2.removeWhere$1(t2, new H.KeyboardConverter_handleEvent__closure(t1, logicalKey, this.timeStamp));
    },
    $signature: 202
  };
  H.KeyboardConverter_handleEvent__closure.prototype = {
    call$2: function(physicalKey, logicalRecord) {
      var t1 = this.logicalKey;
      if (logicalRecord !== t1)
        return false;
      this.$this.dispatchKeyData.call$1(new P.KeyData(C.KeyEventType_1, physicalKey, t1, null));
      return true;
    },
    $signature: 204
  };
  H.MouseCursor.prototype = {};
  H.BrowserHistory.prototype = {
    get$_unsubscribe0: function() {
      var t1 = this.__BrowserHistory__unsubscribe;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_unsubscribe")) : t1;
    },
    _setupStrategy$1: function(strategy) {
      this.__BrowserHistory__unsubscribe = strategy.addPopStateListener$1(0, type$.dynamic_Function_Event._as(this.get$onPopState(this)));
    },
    exit$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$exit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = $async$self.get$urlStrategy() != null ? 2 : 3;
              break;
            case 2:
              // then
              $async$goto = 4;
              return P._asyncAwait($async$self.tearDown$0(), $async$exit$0);
            case 4:
              // returning from await.
              $async$goto = 5;
              return P._asyncAwait($async$self.get$urlStrategy().go$1(0, -1), $async$exit$0);
            case 5:
              // returning from await.
            case 3:
              // join
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$exit$0, $async$completer);
    },
    get$currentPath: function() {
      var t1 = this.get$urlStrategy();
      t1 = t1 == null ? null : t1.getPath$0(0);
      return t1 == null ? "/" : t1;
    },
    get$currentState: function() {
      var t1 = this.get$urlStrategy();
      return t1 == null ? null : t1.getState$0(0);
    },
    _unsubscribe$0: function() {
      return this.get$_unsubscribe0().call$0();
    }
  };
  H.MultiEntriesBrowserHistory.prototype = {
    MultiEntriesBrowserHistory$1$urlStrategy: function(urlStrategy) {
      var t1, _this = this,
        strategy = _this.urlStrategy;
      if (strategy == null)
        return;
      _this._setupStrategy$1(strategy);
      if (!_this._hasSerialCount$1(_this.get$currentState())) {
        t1 = type$.dynamic;
        strategy.replaceState$3(0, P.LinkedHashMap_LinkedHashMap$_literal(["serialCount", 0, "state", _this.get$currentState()], t1, t1), "flutter", _this.get$currentPath());
      }
      _this.__MultiEntriesBrowserHistory__lastSeenSerialCount = _this.get$_currentSerialCount();
    },
    get$_lastSeenSerialCount: function() {
      var t1 = this.__MultiEntriesBrowserHistory__lastSeenSerialCount;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_lastSeenSerialCount")) : t1;
    },
    get$_currentSerialCount: function() {
      if (this._hasSerialCount$1(this.get$currentState()))
        return H._asInt(J.$index$asx(type$.Map_dynamic_dynamic._as(this.get$currentState()), "serialCount"));
      return 0;
    },
    _hasSerialCount$1: function(state) {
      return type$.Map_dynamic_dynamic._is(state) && J.$index$asx(state, "serialCount") != null;
    },
    setRouteName$2$state: function(routeName, state) {
      var t2, _this = this,
        t1 = _this.urlStrategy;
      if (t1 != null) {
        _this.__MultiEntriesBrowserHistory__lastSeenSerialCount = _this.get$_lastSeenSerialCount() + 1;
        t2 = type$.dynamic;
        t2 = P.LinkedHashMap_LinkedHashMap$_literal(["serialCount", _this.get$_lastSeenSerialCount(), "state", state], t2, t2);
        routeName.toString;
        t1.pushState$3(0, t2, "flutter", routeName);
      }
    },
    setRouteName$1: function(routeName) {
      return this.setRouteName$2$state(routeName, null);
    },
    onPopState$1: function(_, $event) {
      var t1, t2, t3, t4, _this = this;
      if (!_this._hasSerialCount$1(new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy($event.state, true))) {
        t1 = _this.urlStrategy;
        t1.toString;
        t2 = new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy($event.state, true);
        t3 = type$.dynamic;
        t1.replaceState$3(0, P.LinkedHashMap_LinkedHashMap$_literal(["serialCount", _this.get$_lastSeenSerialCount() + 1, "state", t2], t3, t3), "flutter", _this.get$currentPath());
      }
      _this.__MultiEntriesBrowserHistory__lastSeenSerialCount = _this.get$_currentSerialCount();
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = _this.get$currentPath();
      t3 = new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy($event.state, true);
      t3 = t3 == null ? null : J.$index$asx(t3, "state");
      t4 = type$.dynamic;
      t1.invokeOnPlatformMessage$3("flutter/navigation", C.C_JSONMethodCodec.encodeMethodCall$1(new H.MethodCall0("pushRouteInformation", P.LinkedHashMap_LinkedHashMap$_literal(["location", t2, "state", t3], t4, t4))), new H.MultiEntriesBrowserHistory_onPopState_closure());
    },
    tearDown$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, backCount, stateMap, t1;
      var $async$tearDown$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._isDisposed || $async$self.urlStrategy == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._isDisposed = true;
              $async$self._unsubscribe$0();
              backCount = $async$self.get$_currentSerialCount();
              $async$goto = backCount > 0 ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return P._asyncAwait($async$self.urlStrategy.go$1(0, -backCount), $async$tearDown$0);
            case 5:
              // returning from await.
            case 4:
              // join
              stateMap = type$.Map_dynamic_dynamic._as($async$self.get$currentState());
              t1 = $async$self.urlStrategy;
              t1.toString;
              t1.replaceState$3(0, J.$index$asx(stateMap, "state"), "flutter", $async$self.get$currentPath());
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$tearDown$0, $async$completer);
    },
    get$urlStrategy: function() {
      return this.urlStrategy;
    }
  };
  H.MultiEntriesBrowserHistory_onPopState_closure.prototype = {
    call$1: function(_) {
    },
    $signature: 10
  };
  H.SingleEntryBrowserHistory.prototype = {
    SingleEntryBrowserHistory$1$urlStrategy: function(urlStrategy) {
      var path, _this = this,
        strategy = _this.urlStrategy;
      if (strategy == null)
        return;
      _this._setupStrategy$1(strategy);
      path = _this.get$currentPath();
      if (!_this._isFlutterEntry$1(new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(window.history.state, true))) {
        strategy.replaceState$3(0, P.LinkedHashMap_LinkedHashMap$_literal(["origin", true, "state", _this.get$currentState()], type$.String, type$.dynamic), "origin", "");
        _this._setupFlutterEntry$3$path$replace(strategy, path, false);
      }
    },
    _isFlutterEntry$1: function(state) {
      return type$.Map_dynamic_dynamic._is(state) && J.$eq$(J.$index$asx(state, "flutter"), true);
    },
    setRouteName$2$state: function(routeName, state) {
      var t1 = this.urlStrategy;
      if (t1 != null)
        this._setupFlutterEntry$3$path$replace(t1, routeName, true);
    },
    setRouteName$1: function(routeName) {
      return this.setRouteName$2$state(routeName, null);
    },
    onPopState$1: function(_, $event) {
      var _this = this,
        _s18_ = "flutter/navigation",
        t1 = new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy($event.state, true);
      if (type$.Map_dynamic_dynamic._is(t1) && J.$eq$(J.$index$asx(t1, "origin"), true)) {
        t1 = _this.urlStrategy;
        t1.toString;
        _this._setupFlutterEntry$1(t1);
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s18_, C.C_JSONMethodCodec.encodeMethodCall$1(C.MethodCall_popRoute_null), new H.SingleEntryBrowserHistory_onPopState_closure());
      } else if (_this._isFlutterEntry$1(new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy($event.state, true))) {
        t1 = _this._userProvidedRouteName;
        t1.toString;
        _this._userProvidedRouteName = null;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s18_, C.C_JSONMethodCodec.encodeMethodCall$1(new H.MethodCall0("pushRoute", t1)), new H.SingleEntryBrowserHistory_onPopState_closure0());
      } else {
        _this._userProvidedRouteName = _this.get$currentPath();
        _this.urlStrategy.go$1(0, -1);
      }
    },
    _setupFlutterEntry$3$path$replace: function(strategy, path, replace) {
      var t1;
      if (path == null)
        path = this.get$currentPath();
      t1 = this._flutterState;
      if (replace)
        strategy.replaceState$3(0, t1, "flutter", path);
      else
        strategy.pushState$3(0, t1, "flutter", path);
    },
    _setupFlutterEntry$1: function(strategy) {
      return this._setupFlutterEntry$3$path$replace(strategy, null, false);
    },
    tearDown$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1;
      var $async$tearDown$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._isDisposed || $async$self.urlStrategy == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._isDisposed = true;
              $async$self._unsubscribe$0();
              t1 = $async$self.urlStrategy;
              $async$goto = 3;
              return P._asyncAwait(t1.go$1(0, -1), $async$tearDown$0);
            case 3:
              // returning from await.
              t1.replaceState$3(0, J.$index$asx(type$.Map_dynamic_dynamic._as($async$self.get$currentState()), "state"), "flutter", $async$self.get$currentPath());
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$tearDown$0, $async$completer);
    },
    get$urlStrategy: function() {
      return this.urlStrategy;
    }
  };
  H.SingleEntryBrowserHistory_onPopState_closure.prototype = {
    call$1: function(_) {
    },
    $signature: 10
  };
  H.SingleEntryBrowserHistory_onPopState_closure0.prototype = {
    call$1: function(_) {
    },
    $signature: 10
  };
  H.JsUrlStrategy.prototype = {};
  H.UrlStrategy.prototype = {};
  H.HashUrlStrategy.prototype = {
    addPopStateListener$1: function(_, fn) {
      C.Window_methods.addEventListener$2(window, "popstate", fn);
      return new H.HashUrlStrategy_addPopStateListener_closure(this, fn);
    },
    getPath$0: function(_) {
      var path = window.location.hash;
      if (path.length === 0 || path === "#")
        return "/";
      return C.JSString_methods.substring$1(path, 1);
    },
    getState$0: function(_) {
      return new P._AcceptStructuredCloneDart2Js([], []).convertNativeToDart_AcceptStructuredClone$2$mustCopy(window.history.state, true);
    },
    prepareExternalUrl$1: function(_, internalUrl) {
      var t1, t2;
      if (internalUrl.length === 0) {
        t1 = window.location.pathname;
        t1.toString;
        t2 = window.location.search;
        t2.toString;
        t2 = t1 + t2;
        t1 = t2;
      } else
        t1 = "#" + internalUrl;
      return t1;
    },
    pushState$3: function(_, state, title, url) {
      var t1 = this.prepareExternalUrl$1(0, url);
      window.history.pushState(new P._StructuredCloneDart2Js([], []).walk$1(state), title, t1);
    },
    replaceState$3: function(_, state, title, url) {
      var t1 = this.prepareExternalUrl$1(0, url);
      window.history.replaceState(new P._StructuredCloneDart2Js([], []).walk$1(state), title, t1);
    },
    go$1: function(_, count) {
      window.history.go(count);
      return this._waitForPopState$0();
    },
    _waitForPopState$0: function() {
      var t1 = {},
        t2 = new P._Future($.Zone__current, type$._Future_void);
      t1._unsubscribe = null;
      new H.HashUrlStrategy__waitForPopState__unsubscribe_set(t1).call$1(this.addPopStateListener$1(0, new H.HashUrlStrategy__waitForPopState_closure(new H.HashUrlStrategy__waitForPopState__unsubscribe_get(t1), new P._AsyncCompleter(t2, type$._AsyncCompleter_void))));
      return t2;
    }
  };
  H.HashUrlStrategy_addPopStateListener_closure.prototype = {
    call$0: function() {
      C.Window_methods.removeEventListener$2(window, "popstate", this.fn);
      return null;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.HashUrlStrategy__waitForPopState__unsubscribe_set.prototype = {
    call$1: function(t1) {
      return this._box_0._unsubscribe = t1;
    },
    $signature: 80
  };
  H.HashUrlStrategy__waitForPopState__unsubscribe_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._unsubscribe;
      return t1 == null ? H.throwExpression(H.LateError$localNI("unsubscribe")) : t1;
    },
    $signature: 82
  };
  H.HashUrlStrategy__waitForPopState_closure.prototype = {
    call$1: function(_) {
      this._unsubscribe_get.call$0().call$0();
      this.completer.complete$0(0);
    },
    $signature: 1
  };
  H.CustomUrlStrategy.prototype = {
    addPopStateListener$1: function(_, fn) {
      return J.addPopStateListener$1$x(this.delegate, fn);
    },
    getPath$0: function(_) {
      return J.getPath$0$x(this.delegate);
    },
    getState$0: function(_) {
      return J.getState$0$x(this.delegate);
    },
    pushState$3: function(_, state, title, url) {
      return J.pushState$3$x(this.delegate, state, title, url);
    },
    replaceState$3: function(_, state, title, url) {
      return J.replaceState$3$x(this.delegate, state, title, url);
    },
    go$1: function(_, count) {
      return J.go$1$x(this.delegate, count);
    }
  };
  H.PlatformLocation.prototype = {};
  H.BrowserPlatformLocation.prototype = {};
  H.EnginePictureRecorder.prototype = {
    get$cullRect: function() {
      var t1 = this.__EnginePictureRecorder_cullRect;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("cullRect")) : t1;
    },
    beginRecording$1: function(_, bounds) {
      var t1, t2, _this = this;
      _this.__EnginePictureRecorder_cullRect = bounds;
      _this._isRecording = true;
      t1 = _this.get$cullRect();
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_PaintCommand);
      return _this.__engine$_canvas = new H.RecordingCanvas(new H._PaintBounds(t1, H.setRuntimeTypeInfo([], type$.JSArray_Matrix4_2), H.setRuntimeTypeInfo([], type$.JSArray_nullable_Rect), H.Matrix4$identity()), t2, new H.RenderStrategy());
    },
    get$isRecording: function() {
      return this._isRecording;
    },
    endRecording$0: function() {
      var t1, _this = this;
      if (!_this._isRecording)
        _this.beginRecording$1(0, C.Rect_aha);
      _this._isRecording = false;
      t1 = _this.__engine$_canvas;
      t1._pictureBounds = t1._paintBounds.computeBounds$0();
      t1._recordingEnded = true;
      t1 = _this.__engine$_canvas;
      _this.get$cullRect();
      return new H.EnginePicture(t1);
    }
  };
  H.EnginePicture.prototype = {};
  H.EnginePlatformDispatcher.prototype = {
    invokeOnMetricsChanged$0: function() {
      var t1 = this._onMetricsChanged;
      if (t1 != null)
        H.invoke(t1, this._onMetricsChangedZone);
    },
    invokeOnKeyData$2: function(data, callback) {
      callback.call$1(false);
    },
    invokeOnPlatformMessage$3: function($name, data, callback) {
      var t1, bytes, methodNameLength, t2, methodName, index, channelNameLength, channelName, parts,
        _s143_ = "Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and new capacity)",
        _s143_0 = "Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and flag state)";
      if ($name === "dev.flutter/channel-buffers")
        try {
          t1 = $.$get$channelBuffers();
          bytes = H.NativeUint8List_NativeUint8List$view(data.buffer, data.byteOffset, data.byteLength);
          if (bytes[0] === 7) {
            methodNameLength = bytes[1];
            if (methodNameLength >= 254)
              H.throwExpression(P.Exception_Exception("Unrecognized message sent to dev.flutter/channel-buffers (method name too long)"));
            t2 = 2 + methodNameLength;
            methodName = C.C_Utf8Codec.decode$1(0, C.NativeUint8List_methods.sublist$2(bytes, 2, t2));
            switch (methodName) {
              case "resize":
                if (bytes[t2] !== 12)
                  H.throwExpression(P.Exception_Exception(_s143_));
                index = t2 + 1;
                if (bytes[index] < 2)
                  H.throwExpression(P.Exception_Exception(_s143_));
                ++index;
                if (bytes[index] !== 7)
                  H.throwExpression(P.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
                ++index;
                channelNameLength = bytes[index];
                if (channelNameLength >= 254)
                  H.throwExpression(P.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
                ++index;
                t2 = index + channelNameLength;
                channelName = C.C_Utf8Codec.decode$1(0, C.NativeUint8List_methods.sublist$2(bytes, index, t2));
                if (bytes[t2] !== 3)
                  H.throwExpression(P.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (second argument must be an integer in the range 0 to 2147483647)"));
                t1.resize$2(0, channelName, data.getUint32(t2 + 1, C.C_Endian === $.$get$Endian_host()));
                break;
              case "overflow":
                if (bytes[t2] !== 12)
                  H.throwExpression(P.Exception_Exception(_s143_0));
                index = t2 + 1;
                if (bytes[index] < 2)
                  H.throwExpression(P.Exception_Exception(_s143_0));
                ++index;
                if (bytes[index] !== 7)
                  H.throwExpression(P.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
                ++index;
                channelNameLength = bytes[index];
                if (channelNameLength >= 254)
                  H.throwExpression(P.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
                ++index;
                t1 = index + channelNameLength;
                C.C_Utf8Codec.decode$1(0, C.NativeUint8List_methods.sublist$2(bytes, index, t1));
                t1 = bytes[t1];
                if (t1 !== 1 && t1 !== 2)
                  H.throwExpression(P.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (second argument must be a boolean)"));
                break;
              default:
                H.throwExpression(P.Exception_Exception("Unrecognized method '" + methodName + "' sent to dev.flutter/channel-buffers"));
            }
          } else {
            parts = H.setRuntimeTypeInfo(C.C_Utf8Codec.decode$1(0, bytes).split("\r"), type$.JSArray_String);
            if (parts.length === 3 && J.$eq$(parts[0], "resize"))
              t1.resize$2(0, parts[1], P.int_parse(parts[2], null));
            else
              H.throwExpression(P.Exception_Exception("Unrecognized message " + H.S(parts) + " sent to dev.flutter/channel-buffers."));
          }
        } finally {
          callback.call$1(null);
        }
      else {
        t1 = this._onPlatformMessage;
        if (t1 != null)
          H.invoke3(t1, this._onPlatformMessageZone, $name, data, callback);
        else
          $.$get$channelBuffers().push$3($name, data, callback);
      }
    },
    __engine$_sendPlatformMessage$3: function($name, data, callback) {
      var decoded, t1, cacheSizeInBytes, url, $navigator, $arguments, t2, t3, theme, e, codec, _this = this;
      switch ($name) {
        case "flutter/skia":
          decoded = C.C_JSONMethodCodec.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "Skia.setResourceCacheMaxBytes":
              t1 = H._detectRenderer();
              if (t1) {
                cacheSizeInBytes = H._asInt(decoded.$arguments);
                t1 = _this.get$rasterizer().surface;
                t1._skiaCacheBytes = cacheSizeInBytes;
                t1._syncCacheBytes$0();
              }
              _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec.encodeMessage$1([H.setRuntimeTypeInfo([true], type$.JSArray_bool)]));
              break;
          }
          return;
        case "flutter/assets":
          url = C.C_Utf8Codec.decode$1(0, H.NativeUint8List_NativeUint8List$view(data.buffer, 0, null));
          $._assetManager.load$1(0, url).then$1$2$onError(0, new H.EnginePlatformDispatcher__sendPlatformMessage_closure(_this, callback), new H.EnginePlatformDispatcher__sendPlatformMessage_closure0(_this, callback), type$.Null);
          return;
        case "flutter/platform":
          decoded = C.C_JSONMethodCodec.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "SystemNavigator.pop":
              type$.EngineFlutterWindow._as(_this._windows.$index(0, 0)).get$browserHistory().exit$0().then$1$1(0, new H.EnginePlatformDispatcher__sendPlatformMessage_closure1(_this, callback), type$.Null);
              return;
            case "HapticFeedback.vibrate":
              $.$get$domRenderer();
              t1 = _this._getHapticFeedbackDuration$1(decoded.$arguments);
              $navigator = window.navigator;
              if ("vibrate" in $navigator)
                $navigator.vibrate.apply($navigator, H.setRuntimeTypeInfo([t1], type$.JSArray_num));
              _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case string$.System:
              $arguments = decoded.$arguments;
              $.$get$domRenderer();
              t1 = J.getInterceptor$asx($arguments);
              t2 = t1.$index($arguments, "label");
              t3 = document;
              t3.title = t2;
              t1 = t1.$index($arguments, "primaryColor");
              theme = type$.nullable_MetaElement._as(t3.querySelector("#flutterweb-theme"));
              if (theme == null) {
                theme = t3.createElement("meta");
                theme.id = "flutterweb-theme";
                theme.name = "theme-color";
                t3.head.appendChild(theme);
              }
              t1 = H.colorToCssString(new P.Color(t1 >>> 0));
              t1.toString;
              theme.content = t1;
              _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "SystemChrome.setPreferredOrientations":
              $.$get$domRenderer().setPreferredOrientation$1(decoded.$arguments).then$1$1(0, new H.EnginePlatformDispatcher__sendPlatformMessage_closure2(_this, callback), type$.Null);
              return;
            case "SystemSound.play":
              _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "Clipboard.setData":
              t1 = window.navigator.clipboard != null ? new H.ClipboardAPICopyStrategy() : new H.ExecCommandCopyStrategy();
              new H.ClipboardMessageHandler(t1, H.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).setDataMethodCall$2(decoded, callback);
              return;
            case "Clipboard.getData":
              t1 = window.navigator.clipboard != null ? new H.ClipboardAPICopyStrategy() : new H.ExecCommandCopyStrategy();
              new H.ClipboardMessageHandler(t1, H.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).getDataMethodCall$1(callback);
              return;
          }
          break;
        case "flutter/service_worker":
          t1 = window;
          e = document.createEvent("Event");
          e.initEvent("flutter-first-frame", true, true);
          t1.dispatchEvent(e);
          return;
        case "flutter/textinput":
          t1 = $.$get$textEditing();
          t1.get$channel(t1).handleTextInput$2(data, callback);
          return;
        case "flutter/mousecursor":
          decoded = C.C_StandardMethodCodec.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "activateSystemCursor":
              $.MouseCursor__instance.toString;
              t1 = J.$index$asx(decoded.$arguments, "kind");
              t2 = $.$get$domRenderer()._glassPaneElement;
              t2.toString;
              t1 = C.Map_gFKQ1.$index(0, t1);
              H.DomRenderer_setElementStyle(t2, "cursor", t1 == null ? "default" : t1);
              break;
          }
          return;
        case "flutter/web_test_e2e":
          _this._replyToPlatformMessage$2(callback, C.C_JSONMessageCodec.encodeMessage$1([H._handleWebTestEnd2EndMessage(C.C_JSONMethodCodec, data)]));
          return;
        case "flutter/platform_views":
          t1 = H._detectRenderer();
          if (t1)
            _this.get$rasterizer().surface.viewEmbedder.handlePlatformViewCall$2(data, callback);
          else {
            data.toString;
            callback.toString;
            P.handlePlatformViewCall(data, callback);
          }
          return;
        case "flutter/accessibility":
          codec = new H.StandardMessageCodec();
          $.$get$accessibilityAnnouncements().handleMessage$2(codec, data);
          _this._replyToPlatformMessage$2(callback, codec.encodeMessage$1(true));
          return;
        case "flutter/navigation":
          type$.EngineFlutterWindow._as(_this._windows.$index(0, 0)).handleNavigationMessage$1(data).then$1$1(0, new H.EnginePlatformDispatcher__sendPlatformMessage_closure3(_this, callback), type$.Null);
          _this._defaultRouteName = "/";
          return;
      }
      _this._replyToPlatformMessage$2(callback, null);
    },
    _getHapticFeedbackDuration$1: function(type) {
      switch (type) {
        case "HapticFeedbackType.lightImpact":
          return 10;
        case "HapticFeedbackType.mediumImpact":
          return 20;
        case "HapticFeedbackType.heavyImpact":
          return 30;
        case "HapticFeedbackType.selectionClick":
          return 10;
        default:
          return 50;
      }
    },
    scheduleFrame$0: function() {
      var t1 = $.scheduleFrameCallback;
      if (t1 == null)
        throw H.wrapException(P.Exception_Exception("scheduleFrameCallback must be initialized first."));
      t1.call$0();
    },
    render$2: function(scene, view) {
      var t1 = H._detectRenderer();
      if (t1) {
        H._frameTimingsOnBuildFinish();
        H._frameTimingsOnRasterStart();
        type$.LayerScene._as(scene);
        this.get$rasterizer().draw$1(scene.layerTree);
      } else {
        type$.SurfaceScene._as(scene);
        $.$get$domRenderer().renderScene$1(scene.webOnlyRootElement);
      }
      H._frameTimingsOnRasterFinish();
    },
    _updatePlatformBrightness$1: function(value) {
      var _this = this,
        t1 = _this._configuration;
      if (t1.platformBrightness !== value) {
        _this._configuration = t1.copyWith$1$platformBrightness(value);
        H.invoke(null, null);
        H.invoke(_this._onPlatformBrightnessChanged, _this._onPlatformBrightnessChangedZone);
      }
    },
    _addBrightnessMediaQueryListener$0: function() {
      var t2, _this = this,
        t1 = _this._brightnessMediaQuery;
      _this._updatePlatformBrightness$1(t1.matches ? C.Brightness_0 : C.Brightness_1);
      t2 = new H.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(_this);
      _this._brightnessMediaQueryListener = t2;
      C.MediaQueryList_methods.addListener$1(t1, t2);
      $._hotRestartListeners.push(new H.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure0(_this));
    },
    get$defaultRouteName: function() {
      var t1 = this._defaultRouteName;
      return t1 == null ? this._defaultRouteName = this._windows.$index(0, 0).get$browserHistory().get$currentPath() : t1;
    },
    get$rasterizer: function() {
      var t2, t3, t4, t5,
        t1 = this.__EnginePlatformDispatcher_rasterizer;
      if (t1 === $) {
        t1 = H._detectRenderer();
        if (t1) {
          t1 = type$.int;
          t2 = type$.nullable_int;
          t3 = type$.JSArray_int;
          t4 = H.setRuntimeTypeInfo([], t3);
          t3 = H.setRuntimeTypeInfo([], t3);
          t5 = $.$get$window().get$physicalSize();
          t1 = new H.Rasterizer(new H.Surface(W._ElementFactoryProvider_createElement_tag("flt-canvas-container", null), new H.HtmlViewEmbedder(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.CkPictureRecorder), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.EmbeddedViewParams), P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.Element), P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.nullable_Element), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Surface), P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashSet_LinkedHashSet$_empty(t1), t4, t3, P.LinkedHashMap_LinkedHashMap$_empty(t1, t1), t5, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Set_String))), new H.CompositorContext(), H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function));
        } else
          t1 = null;
        t1 = this.__EnginePlatformDispatcher_rasterizer = t1;
      }
      return t1;
    },
    _replyToPlatformMessage$2: function(callback, data) {
      P.Future_Future$delayed(C.Duration_0, type$.void).then$1$1(0, new H.EnginePlatformDispatcher__replyToPlatformMessage_closure(callback, data), type$.Null);
    }
  };
  H.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure.prototype = {
    call$1: function(data) {
      this.registrationZone.runUnaryGuarded$2(this.callback, data);
    },
    $signature: 10
  };
  H.EnginePlatformDispatcher__sendPlatformMessage_closure.prototype = {
    call$1: function(assetData) {
      this.$this._replyToPlatformMessage$2(this.callback, assetData);
    },
    $signature: 230
  };
  H.EnginePlatformDispatcher__sendPlatformMessage_closure0.prototype = {
    call$1: function(error) {
      $.$get$printWarning().call$1("Error while trying to load an asset: " + H.S(error));
      this.$this._replyToPlatformMessage$2(this.callback, null);
    },
    $signature: 5
  };
  H.EnginePlatformDispatcher__sendPlatformMessage_closure1.prototype = {
    call$1: function(_) {
      this.$this._replyToPlatformMessage$2(this.callback, C.C_JSONMessageCodec.encodeMessage$1([true]));
    },
    $signature: 17
  };
  H.EnginePlatformDispatcher__sendPlatformMessage_closure2.prototype = {
    call$1: function(success) {
      this.$this._replyToPlatformMessage$2(this.callback, C.C_JSONMessageCodec.encodeMessage$1([success]));
    },
    $signature: 58
  };
  H.EnginePlatformDispatcher__sendPlatformMessage_closure3.prototype = {
    call$1: function(handled) {
      var t1 = this.callback;
      if (handled)
        this.$this._replyToPlatformMessage$2(t1, C.C_JSONMessageCodec.encodeMessage$1([true]));
      else if (t1 != null)
        t1.call$1(null);
    },
    $signature: 58
  };
  H.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure.prototype = {
    call$1: function($event) {
      var t1 = type$.MediaQueryListEvent._as($event).matches;
      t1.toString;
      t1 = t1 ? C.Brightness_0 : C.Brightness_1;
      this.$this._updatePlatformBrightness$1(t1);
    },
    $signature: 1
  };
  H.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this;
      C.MediaQueryList_methods.removeListener$1(t1._brightnessMediaQuery, t1._brightnessMediaQueryListener);
      t1._brightnessMediaQueryListener = null;
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.EnginePlatformDispatcher__replyToPlatformMessage_closure.prototype = {
    call$1: function(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(this.data);
    },
    $signature: 17
  };
  H.invoke3_closure.prototype = {
    call$0: function() {
      var _this = this;
      _this.callback.call$3(_this.arg1, _this.arg2, _this.arg3);
    },
    $signature: 0
  };
  H.PointerBinding.prototype = {
    _createAdapter$0: function() {
      var t1, _this = this;
      if ("PointerEvent" in window) {
        t1 = new H._PointerAdapter(P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._ButtonSanitizer), _this.glassPaneElement, _this.get$_onPointerData(), _this._pointerDataConverter);
        t1.setup$0();
        return t1;
      }
      if ("TouchEvent" in window) {
        t1 = new H._TouchAdapter(P.LinkedHashSet_LinkedHashSet$_empty(type$.int), _this.glassPaneElement, _this.get$_onPointerData(), _this._pointerDataConverter);
        t1.setup$0();
        return t1;
      }
      if ("MouseEvent" in window) {
        t1 = new H._MouseAdapter(new H._ButtonSanitizer(), _this.glassPaneElement, _this.get$_onPointerData(), _this._pointerDataConverter);
        t1.setup$0();
        return t1;
      }
      throw H.wrapException(P.UnsupportedError$("This browser does not support pointer, touch, or mouse events."));
    },
    _onPointerData$1: function(data) {
      var t1 = H.setRuntimeTypeInfo(data.slice(0), H._arrayInstanceType(data)),
        t2 = $.$get$EnginePlatformDispatcher__instance();
      H.invoke1(t2._onPointerDataPacket, t2._onPointerDataPacketZone, new P.PointerDataPacket(t1));
    }
  };
  H.PointerSupportDetector.prototype = {
    toString$0: function(_) {
      return "pointers:" + ("PointerEvent" in window) + ", touch:" + ("TouchEvent" in window) + ", mouse:" + ("MouseEvent" in window);
    }
  };
  H._BaseAdapter.prototype = {
    addEventListener$3$acceptOutsideGlasspane: function(_, eventName, handler, acceptOutsideGlasspane) {
      var loggedHandler = new H._BaseAdapter_addEventListener_closure(this, acceptOutsideGlasspane, handler);
      $._BaseAdapter__listeners.$indexSet(0, eventName, loggedHandler);
      C.Window_methods.addEventListener$3(window, eventName, loggedHandler, true);
    },
    addEventListener$2: function($receiver, eventName, handler) {
      return this.addEventListener$3$acceptOutsideGlasspane($receiver, eventName, handler, false);
    }
  };
  H._BaseAdapter_addEventListener_closure.prototype = {
    call$1: function($event) {
      var t1;
      if (!this.acceptOutsideGlasspane && !this.$this.glassPaneElement.contains(type$.nullable_Node._as(J.get$target$x($event))))
        return;
      t1 = $.EngineSemanticsOwner__instance;
      if ((t1 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t1).receiveGlobalEvent$1($event))
        this.handler.call$1($event);
    },
    $signature: 1
  };
  H._WheelEventListenerMixin.prototype = {
    _addWheelEventListener$1: function(handler) {
      var t1, eventOptions = {},
        jsHandler = P.allowInterop(new H._WheelEventListenerMixin__addWheelEventListener_closure(handler));
      $._BaseAdapter__nativeListeners.$indexSet(0, "wheel", jsHandler);
      eventOptions.passive = false;
      t1 = this.glassPaneElement;
      t1.addEventListener.apply(t1, ["wheel", jsHandler, eventOptions]);
    },
    _handleWheelEvent$1: function(e) {
      var deltaX, deltaY, t1, probe, t2, fontSize, res, data, t3, t4, t5, t6;
      type$.WheelEvent._as(e);
      deltaX = C.WheelEvent_methods.get$deltaX(e);
      deltaY = C.WheelEvent_methods.get$deltaY(e);
      switch (C.WheelEvent_methods.get$deltaMode(e)) {
        case 1:
          t1 = $._WheelEventListenerMixin__defaultScrollLineHeight;
          if (t1 == null) {
            t1 = document;
            probe = t1.createElement("div");
            t2 = probe.style;
            t2.fontSize = "initial";
            t2.display = "none";
            t1.body.appendChild(probe);
            fontSize = window.getComputedStyle(probe, "").fontSize;
            if (C.JSString_methods.contains$1(fontSize, "px"))
              res = H.Primitives_parseDouble(H.stringReplaceAllUnchecked(fontSize, "px", ""));
            else
              res = null;
            C.DivElement_methods.remove$0(probe);
            t1 = $._WheelEventListenerMixin__defaultScrollLineHeight = res == null ? 16 : res / 4;
          }
          deltaX *= t1;
          deltaY *= t1;
          break;
        case 2:
          t1 = $.$get$window();
          deltaX *= t1.get$physicalSize()._dx;
          deltaY *= t1.get$physicalSize()._dy;
          break;
        case 0:
        default:
          break;
      }
      data = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      t1 = e.timeStamp;
      t1.toString;
      t1 = H._BaseAdapter__eventTimeStampToDuration(t1);
      t2 = e.clientX;
      e.clientY;
      t3 = $.$get$window();
      t4 = t3._debugDevicePixelRatio;
      if (t4 == null)
        t4 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      e.clientX;
      t5 = e.clientY;
      t3 = t3._debugDevicePixelRatio;
      if (t3 == null)
        t3 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      t6 = e.buttons;
      t6.toString;
      this._pointerDataConverter.convert$14$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$timeStamp(data, t6, C.PointerChange_3, -1, C.PointerDeviceKind_1, t2 * t4, t5 * t3, 1, 1, 0, deltaX, deltaY, C.PointerSignalKind_1, t1);
      this.__engine$_callback.call$1(data);
      if (e.getModifierState("Control")) {
        t1 = H._operatingSystem();
        if (t1 !== C.OperatingSystem_4) {
          t1 = H._operatingSystem();
          t1 = t1 !== C.OperatingSystem_0;
        } else
          t1 = false;
      } else
        t1 = false;
      if (t1)
        return;
      e.preventDefault();
    }
  };
  H._WheelEventListenerMixin__addWheelEventListener_closure.prototype = {
    call$1: function($event) {
      return this.handler.call$1($event);
    },
    $signature: 24
  };
  H._SanitizedDetails.prototype = {
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "(change: " + this.change.toString$0(0) + ", buttons: " + this.buttons + ")";
    }
  };
  H._ButtonSanitizer.prototype = {
    sanitizeDownEvent$2$button$buttons: function(button, buttons) {
      var t1;
      if (this._pressedButtons !== 0)
        return this.sanitizeMoveEvent$1$buttons(buttons);
      t1 = (buttons === 0 && button > -1 ? H.convertButtonToButtons(button) : buttons) & 1073741823;
      this._pressedButtons = t1;
      return new H._SanitizedDetails(C.PointerChange_4, t1);
    },
    sanitizeMoveEvent$1$buttons: function(buttons) {
      var newPressedButtons = buttons & 1073741823,
        t1 = this._pressedButtons;
      if (t1 === 0 && newPressedButtons !== 0)
        return new H._SanitizedDetails(C.PointerChange_3, t1);
      this._pressedButtons = newPressedButtons;
      return new H._SanitizedDetails(newPressedButtons === 0 ? C.PointerChange_3 : C.PointerChange_5, newPressedButtons);
    },
    sanitizeMissingRightClickUp$1$buttons: function(buttons) {
      if (this._pressedButtons !== 0 && (buttons & 1073741823) === 0) {
        this._pressedButtons = 0;
        return new H._SanitizedDetails(C.PointerChange_6, 0);
      }
      return null;
    },
    sanitizeUpEvent$1$buttons: function(buttons) {
      var t1;
      if (this._pressedButtons === 0)
        return null;
      t1 = this._pressedButtons = (buttons == null ? 0 : buttons) & 1073741823;
      if (t1 === 0)
        return new H._SanitizedDetails(C.PointerChange_6, t1);
      else
        return new H._SanitizedDetails(C.PointerChange_5, t1);
    }
  };
  H._PointerAdapter.prototype = {
    _ensureSanitizer$1: function(device) {
      return this._sanitizers.putIfAbsent$2(0, device, new H._PointerAdapter__ensureSanitizer_closure());
    },
    _removePointerIfUnhoverable$1: function($event) {
      if ($event.pointerType === "touch")
        this._sanitizers.remove$1(0, $event.pointerId);
    },
    _addPointerEventListener$3$acceptOutsideGlasspane: function(eventName, handler, acceptOutsideGlasspane) {
      this.addEventListener$3$acceptOutsideGlasspane(0, eventName, new H._PointerAdapter__addPointerEventListener_closure(handler), acceptOutsideGlasspane);
    },
    _addPointerEventListener$2: function(eventName, handler) {
      return this._addPointerEventListener$3$acceptOutsideGlasspane(eventName, handler, false);
    },
    setup$0: function() {
      var _this = this;
      _this._addPointerEventListener$2("pointerdown", new H._PointerAdapter_setup_closure(_this));
      _this._addPointerEventListener$3$acceptOutsideGlasspane("pointermove", new H._PointerAdapter_setup_closure0(_this), true);
      _this._addPointerEventListener$3$acceptOutsideGlasspane("pointerup", new H._PointerAdapter_setup_closure1(_this), true);
      _this._addPointerEventListener$2("pointercancel", new H._PointerAdapter_setup_closure2(_this));
      _this._addWheelEventListener$1(new H._PointerAdapter_setup_closure3(_this));
    },
    _convertEventsToPointerData$3$data$details$event: function(data, details, $event) {
      var kind, t2, timeStamp, t3, t4, t5, t6,
        t1 = $event.pointerType;
      t1.toString;
      kind = this._pointerTypeToDeviceKind$1(t1);
      t1 = $event.tiltX;
      t1.toString;
      t2 = $event.tiltY;
      t2.toString;
      if (!(Math.abs(t1) > Math.abs(t2)))
        t1 = t2;
      t2 = $event.timeStamp;
      t2.toString;
      timeStamp = H._BaseAdapter__eventTimeStampToDuration(t2);
      t2 = this._getPointerId$1($event);
      t3 = $event.clientX;
      $event.clientY;
      t4 = $.$get$window();
      t5 = t4._debugDevicePixelRatio;
      if (t5 == null)
        t5 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      $event.clientX;
      t6 = $event.clientY;
      t4 = t4._debugDevicePixelRatio;
      if (t4 == null)
        t4 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      this._pointerDataConverter.convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$tilt$timeStamp(data, details.buttons, details.change, t2, kind, t3 * t5, t6 * t4, H._asDouble($event.pressure), 1, 0, C.PointerSignalKind_0, t1 / 180 * 3.141592653589793, timeStamp);
    },
    _expandEvents$1: function($event) {
      var coalescedEvents;
      if ("getCoalescedEvents" in $event) {
        coalescedEvents = J.cast$1$0$ax($event.getCoalescedEvents(), type$.PointerEvent_2);
        if (!coalescedEvents.get$isEmpty(coalescedEvents))
          return coalescedEvents;
      }
      return H.setRuntimeTypeInfo([$event], type$.JSArray_PointerEvent);
    },
    _pointerTypeToDeviceKind$1: function(pointerType) {
      switch (pointerType) {
        case "mouse":
          return C.PointerDeviceKind_1;
        case "pen":
          return C.PointerDeviceKind_2;
        case "touch":
          return C.PointerDeviceKind_0;
        default:
          return C.PointerDeviceKind_4;
      }
    },
    _getPointerId$1: function($event) {
      var t1 = $event.pointerType;
      t1.toString;
      if (this._pointerTypeToDeviceKind$1(t1) === C.PointerDeviceKind_1)
        t1 = -1;
      else {
        t1 = $event.pointerId;
        t1.toString;
      }
      return t1;
    }
  };
  H._PointerAdapter__ensureSanitizer_closure.prototype = {
    call$0: function() {
      return new H._ButtonSanitizer();
    },
    $signature: 236
  };
  H._PointerAdapter__addPointerEventListener_closure.prototype = {
    call$1: function($event) {
      return this.handler.call$1(type$.PointerEvent_2._as($event));
    },
    $signature: 24
  };
  H._PointerAdapter_setup_closure.prototype = {
    call$1: function($event) {
      var up, t3,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        sanitizer = t1._ensureSanitizer$1(device),
        t2 = $event.buttons;
      t2.toString;
      up = sanitizer.sanitizeMissingRightClickUp$1$buttons(t2);
      if (up != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, up, $event);
      t2 = $event.button;
      t3 = $event.buttons;
      t3.toString;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeDownEvent$2$button$buttons(t2, t3), $event);
      t1.__engine$_callback.call$1(pointerData);
    },
    $signature: 31
  };
  H._PointerAdapter_setup_closure0.prototype = {
    call$1: function($event) {
      var t2, t3, t4, up,
        t1 = this.$this,
        sanitizer = t1._ensureSanitizer$1(t1._getPointerId$1($event)),
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      for (t2 = J.get$iterator$ax(t1._expandEvents$1($event)); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = t3.buttons;
        t4.toString;
        up = sanitizer.sanitizeMissingRightClickUp$1$buttons(t4);
        if (up != null)
          t1._convertEventsToPointerData$3$data$details$event(pointerData, up, t3);
        t4 = t3.buttons;
        t4.toString;
        t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeMoveEvent$1$buttons(t4), t3);
      }
      t1.__engine$_callback.call$1(pointerData);
    },
    $signature: 31
  };
  H._PointerAdapter_setup_closure1.prototype = {
    call$1: function($event) {
      var details,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t2 = t1._sanitizers.$index(0, device);
      t2.toString;
      details = t2.sanitizeUpEvent$1$buttons($event.buttons);
      t1._removePointerIfUnhoverable$1($event);
      if (details != null) {
        t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
        t1.__engine$_callback.call$1(pointerData);
      }
    },
    $signature: 31
  };
  H._PointerAdapter_setup_closure2.prototype = {
    call$1: function($event) {
      var t1 = this.$this,
        device = t1._getPointerId$1($event),
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t2 = t1._sanitizers.$index(0, device);
      t2.toString;
      t2._pressedButtons = 0;
      t1._removePointerIfUnhoverable$1($event);
      t1._convertEventsToPointerData$3$data$details$event(pointerData, new H._SanitizedDetails(C.PointerChange_0, 0), $event);
      t1.__engine$_callback.call$1(pointerData);
    },
    $signature: 31
  };
  H._PointerAdapter_setup_closure3.prototype = {
    call$1: function($event) {
      this.$this._handleWheelEvent$1($event);
    },
    $signature: 1
  };
  H._TouchAdapter.prototype = {
    _addTouchEventListener$2: function(eventName, handler) {
      this.addEventListener$2(0, eventName, new H._TouchAdapter__addTouchEventListener_closure(handler));
    },
    setup$0: function() {
      var _this = this;
      _this._addTouchEventListener$2("touchstart", new H._TouchAdapter_setup_closure(_this));
      _this._addTouchEventListener$2("touchmove", new H._TouchAdapter_setup_closure0(_this));
      _this._addTouchEventListener$2("touchend", new H._TouchAdapter_setup_closure1(_this));
      _this._addTouchEventListener$2("touchcancel", new H._TouchAdapter_setup_closure2(_this));
    },
    _convertEventToPointerData$5$change$data$pressed$timeStamp$touch: function(change, data, pressed, timeStamp, touch) {
      var t2, t3, t4, t5, t6,
        t1 = touch.identifier;
      t1.toString;
      t2 = C.JSNumber_methods.round$0(touch.clientX);
      C.JSNumber_methods.round$0(touch.clientY);
      t3 = $.$get$window();
      t4 = t3._debugDevicePixelRatio;
      if (t4 == null)
        t4 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      C.JSNumber_methods.round$0(touch.clientX);
      t5 = C.JSNumber_methods.round$0(touch.clientY);
      t3 = t3._debugDevicePixelRatio;
      if (t3 == null)
        t3 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      t6 = pressed ? 1 : 0;
      this._pointerDataConverter.convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$timeStamp(data, t6, change, t1, C.PointerDeviceKind_0, t2 * t4, t5 * t3, 1, 1, 0, C.PointerSignalKind_0, timeStamp);
    }
  };
  H._TouchAdapter__addTouchEventListener_closure.prototype = {
    call$1: function($event) {
      return this.handler.call$1(type$.TouchEvent._as($event));
    },
    $signature: 24
  };
  H._TouchAdapter_setup_closure.prototype = {
    call$1: function($event) {
      var timeStamp, pointerData, t2, t3, t4, _i, touch, t5,
        t1 = $event.timeStamp;
      t1.toString;
      timeStamp = H._BaseAdapter__eventTimeStampToDuration(t1);
      pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      for (t1 = $event.changedTouches, t2 = t1.length, t3 = this.$this, t4 = t3._pressedTouches, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        touch = t1[_i];
        t5 = touch.identifier;
        t5.toString;
        if (!t4.contains$1(0, t5)) {
          t5 = touch.identifier;
          t5.toString;
          t4.add$1(0, t5);
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(C.PointerChange_4, pointerData, true, timeStamp, touch);
        }
      }
      t3.__engine$_callback.call$1(pointerData);
    },
    $signature: 32
  };
  H._TouchAdapter_setup_closure0.prototype = {
    call$1: function($event) {
      var t1, timeStamp, pointerData, t2, t3, t4, _i, touch, t5;
      $event.preventDefault();
      t1 = $event.timeStamp;
      t1.toString;
      timeStamp = H._BaseAdapter__eventTimeStampToDuration(t1);
      pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      for (t1 = $event.changedTouches, t2 = t1.length, t3 = this.$this, t4 = t3._pressedTouches, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        touch = t1[_i];
        t5 = touch.identifier;
        t5.toString;
        if (t4.contains$1(0, t5))
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(C.PointerChange_5, pointerData, true, timeStamp, touch);
      }
      t3.__engine$_callback.call$1(pointerData);
    },
    $signature: 32
  };
  H._TouchAdapter_setup_closure1.prototype = {
    call$1: function($event) {
      var t1, timeStamp, pointerData, t2, t3, t4, _i, touch, t5;
      $event.preventDefault();
      t1 = $event.timeStamp;
      t1.toString;
      timeStamp = H._BaseAdapter__eventTimeStampToDuration(t1);
      pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      for (t1 = $event.changedTouches, t2 = t1.length, t3 = this.$this, t4 = t3._pressedTouches, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        touch = t1[_i];
        t5 = touch.identifier;
        t5.toString;
        if (t4.contains$1(0, t5)) {
          t5 = touch.identifier;
          t5.toString;
          t4.remove$1(0, t5);
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(C.PointerChange_6, pointerData, false, timeStamp, touch);
        }
      }
      t3.__engine$_callback.call$1(pointerData);
    },
    $signature: 32
  };
  H._TouchAdapter_setup_closure2.prototype = {
    call$1: function($event) {
      var timeStamp, pointerData, t2, t3, t4, _i, touch, t5,
        t1 = $event.timeStamp;
      t1.toString;
      timeStamp = H._BaseAdapter__eventTimeStampToDuration(t1);
      pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData);
      for (t1 = $event.changedTouches, t2 = t1.length, t3 = this.$this, t4 = t3._pressedTouches, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        touch = t1[_i];
        t5 = touch.identifier;
        t5.toString;
        if (t4.contains$1(0, t5)) {
          t5 = touch.identifier;
          t5.toString;
          t4.remove$1(0, t5);
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(C.PointerChange_0, pointerData, false, timeStamp, touch);
        }
      }
      t3.__engine$_callback.call$1(pointerData);
    },
    $signature: 32
  };
  H._MouseAdapter.prototype = {
    _addMouseEventListener$3$acceptOutsideGlasspane: function(eventName, handler, acceptOutsideGlasspane) {
      this.addEventListener$3$acceptOutsideGlasspane(0, eventName, new H._MouseAdapter__addMouseEventListener_closure(handler), acceptOutsideGlasspane);
    },
    _addMouseEventListener$2: function(eventName, handler) {
      return this._addMouseEventListener$3$acceptOutsideGlasspane(eventName, handler, false);
    },
    setup$0: function() {
      var _this = this;
      _this._addMouseEventListener$2("mousedown", new H._MouseAdapter_setup_closure(_this));
      _this._addMouseEventListener$3$acceptOutsideGlasspane("mousemove", new H._MouseAdapter_setup_closure0(_this), true);
      _this._addMouseEventListener$3$acceptOutsideGlasspane("mouseup", new H._MouseAdapter_setup_closure1(_this), true);
      _this._addWheelEventListener$1(new H._MouseAdapter_setup_closure2(_this));
    },
    _convertEventsToPointerData$3$data$details$event: function(data, details, $event) {
      var t2, t3, t4, t5,
        t1 = $event.timeStamp;
      t1.toString;
      t1 = H._BaseAdapter__eventTimeStampToDuration(t1);
      t2 = $event.clientX;
      $event.clientY;
      t3 = $.$get$window();
      t4 = t3._debugDevicePixelRatio;
      if (t4 == null)
        t4 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      $event.clientX;
      t5 = $event.clientY;
      t3 = t3._debugDevicePixelRatio;
      if (t3 == null)
        t3 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      this._pointerDataConverter.convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$timeStamp(data, details.buttons, details.change, -1, C.PointerDeviceKind_1, t2 * t4, t5 * t3, 1, 1, 0, C.PointerSignalKind_0, t1);
    }
  };
  H._MouseAdapter__addMouseEventListener_closure.prototype = {
    call$1: function($event) {
      return this.handler.call$1(type$.MouseEvent._as($event));
    },
    $signature: 24
  };
  H._MouseAdapter_setup_closure.prototype = {
    call$1: function($event) {
      var up, t4,
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t1 = this.$this,
        t2 = t1._sanitizer,
        t3 = $event.buttons;
      t3.toString;
      up = t2.sanitizeMissingRightClickUp$1$buttons(t3);
      if (up != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, up, $event);
      t3 = $event.button;
      t4 = $event.buttons;
      t4.toString;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, t2.sanitizeDownEvent$2$button$buttons(t3, t4), $event);
      t1.__engine$_callback.call$1(pointerData);
    },
    $signature: 43
  };
  H._MouseAdapter_setup_closure0.prototype = {
    call$1: function($event) {
      var up,
        pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t1 = this.$this,
        t2 = t1._sanitizer,
        t3 = $event.buttons;
      t3.toString;
      up = t2.sanitizeMissingRightClickUp$1$buttons(t3);
      if (up != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, up, $event);
      t3 = $event.buttons;
      t3.toString;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, t2.sanitizeMoveEvent$1$buttons(t3), $event);
      t1.__engine$_callback.call$1(pointerData);
    },
    $signature: 43
  };
  H._MouseAdapter_setup_closure1.prototype = {
    call$1: function($event) {
      var pointerData = H.setRuntimeTypeInfo([], type$.JSArray_PointerData),
        t1 = this.$this,
        sanitizedDetails = t1._sanitizer.sanitizeUpEvent$1$buttons($event.buttons);
      if (sanitizedDetails != null) {
        t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizedDetails, $event);
        t1.__engine$_callback.call$1(pointerData);
      }
    },
    $signature: 43
  };
  H._MouseAdapter_setup_closure2.prototype = {
    call$1: function($event) {
      this.$this._handleWheelEvent$1($event);
    },
    $signature: 1
  };
  H._PointerState.prototype = {};
  H.PointerDataConverter.prototype = {
    _ensureStateForPointer$3: function(device, x, y) {
      return this._pointers.putIfAbsent$2(0, device, new H.PointerDataConverter__ensureStateForPointer_closure(x, y));
    },
    _generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp: function(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp) {
      var t2, t3,
        t1 = this._pointers.$index(0, device);
      t1.toString;
      t2 = t1.x;
      t3 = t1.y;
      t1.x = physicalX;
      t1.y = physicalY;
      t1 = t1._pointer;
      if (t1 == null)
        t1 = 0;
      return P.PointerData$(buttons, change, device, distance, distanceMax, kind, false, orientation, physicalX - t2, physicalY - t3, physicalX, physicalY, platformData, t1, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, signalKind, size, false, tilt, timeStamp);
    },
    _locationHasChanged$3: function(device, physicalX, physicalY) {
      var t1 = this._pointers.$index(0, device);
      t1.toString;
      return t1.x !== physicalX || t1.y !== physicalY;
    },
    _synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp: function(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, size, tilt, timeStamp) {
      var t2, t3,
        t1 = this._pointers.$index(0, device);
      t1.toString;
      t2 = t1.x;
      t3 = t1.y;
      t1.x = physicalX;
      t1.y = physicalY;
      t1 = t1._pointer;
      if (t1 == null)
        t1 = 0;
      return P.PointerData$(buttons, change, device, distance, distanceMax, kind, false, orientation, physicalX - t2, physicalY - t3, physicalX, physicalY, platformData, t1, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scrollDeltaX, scrollDeltaY, C.PointerSignalKind_0, size, true, tilt, timeStamp);
    },
    convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp: function(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, scrollDeltaX, scrollDeltaY, signalKind, tilt, timeStamp) {
      var alreadyAdded, t1, t2, _this = this;
      if (signalKind === C.PointerSignalKind_0)
        switch (change) {
          case C.PointerChange_1:
            _this._ensureStateForPointer$3(device, physicalX, physicalY);
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            break;
          case C.PointerChange_3:
            alreadyAdded = _this._pointers.containsKey$1(0, device);
            _this._ensureStateForPointer$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            _this._activeButtons = buttons;
            break;
          case C.PointerChange_4:
            alreadyAdded = _this._pointers.containsKey$1(0, device);
            _this._ensureStateForPointer$3(device, physicalX, physicalY)._pointer = $._PointerState__pointerCount = $._PointerState__pointerCount + 1;
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(0, C.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            _this._activeButtons = buttons;
            break;
          case C.PointerChange_5:
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            _this._activeButtons = buttons;
            break;
          case C.PointerChange_6:
          case C.PointerChange_0:
            t1 = _this._pointers;
            t2 = t1.$index(0, device);
            t2.toString;
            if (change === C.PointerChange_0) {
              physicalX = t2.x;
              physicalY = t2.y;
            }
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(_this._activeButtons, C.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            if (kind === C.PointerDeviceKind_0) {
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(0, C.PointerChange_2, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
              t1.remove$1(0, device);
            }
            break;
          case C.PointerChange_2:
            t1 = _this._pointers;
            t2 = t1.$index(0, device);
            t2.toString;
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, t2.x, t2.y, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            t1.remove$1(0, device);
            break;
        }
      else
        switch (signalKind) {
          case C.PointerSignalKind_1:
            alreadyAdded = _this._pointers.containsKey$1(0, device);
            _this._ensureStateForPointer$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              if (buttons !== 0)
                result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
              else
                result.push(_this._synthesizePointerData$23$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, C.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, pressureMin, 0, 0, 0, 0, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            break;
          case C.PointerSignalKind_0:
            break;
          case C.PointerSignalKind_2:
            break;
        }
    },
    convert$14$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$timeStamp: function(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, scrollDeltaX, scrollDeltaY, signalKind, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, scrollDeltaX, scrollDeltaY, signalKind, 0, timeStamp);
    },
    convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$timeStamp: function(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, signalKind, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, 0, 0, signalKind, 0, timeStamp);
    },
    convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$signalKind$tilt$timeStamp: function(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, signalKind, tilt, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$pressureMin$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, pressureMin, 0, 0, signalKind, tilt, timeStamp);
    }
  };
  H.PointerDataConverter__ensureStateForPointer_closure.prototype = {
    call$0: function() {
      return new H._PointerState(this.x, this.y);
    },
    $signature: 284
  };
  H.Profiler.prototype = {};
  H.Instrumentation.prototype = {};
  H.AccessibilityAnnouncements.prototype = {
    AccessibilityAnnouncements$_$0: function() {
      $._hotRestartListeners.push(new H.AccessibilityAnnouncements$__closure(this));
    },
    get$_domElement: function() {
      var liveRegion,
        t1 = this._element;
      if (t1 == null) {
        liveRegion = document.createElement("label");
        liveRegion.setAttribute("id", "accessibility-element");
        t1 = liveRegion.style;
        t1.position = "fixed";
        t1.overflow = "hidden";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), "translate(-99999px, -99999px)", "");
        t1.width = "1px";
        t1.height = "1px";
        this._element = liveRegion;
        t1 = liveRegion;
      }
      return t1;
    },
    handleMessage$2: function(codec, data) {
      var t1, _this = this,
        message = J.$index$asx(J.$index$asx(codec.decodeMessage$1(data), "data"), "message");
      if (message != null && message.length !== 0) {
        _this.get$_domElement().setAttribute("aria-live", "polite");
        _this.get$_domElement().textContent = message;
        t1 = document.body;
        t1.toString;
        t1.appendChild(_this.get$_domElement());
        _this._removeElementTimer = P.Timer_Timer(C.Duration_5000000, new H.AccessibilityAnnouncements_handleMessage_closure(_this));
      }
    }
  };
  H.AccessibilityAnnouncements$__closure.prototype = {
    call$0: function() {
      var t1 = this.$this._removeElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.AccessibilityAnnouncements_handleMessage_closure.prototype = {
    call$0: function() {
      var t1 = this.$this._element;
      t1.toString;
      C.LabelElement_methods.remove$0(t1);
    },
    $signature: 0
  };
  H._CheckableKind.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.Checkable.prototype = {
    update$0: function(_) {
      var element, t2, _s4_ = "true",
        t1 = this.semanticsObject;
      if ((t1._dirtyFields & 1) !== 0) {
        switch (this.__engine$_kind) {
          case C._CheckableKind_0:
            t1.setAriaRole$2("checkbox", true);
            break;
          case C._CheckableKind_1:
            t1.setAriaRole$2("radio", true);
            break;
          case C._CheckableKind_2:
            t1.setAriaRole$2("switch", true);
            break;
        }
        if (t1.enabledState$0() === C.EnabledState_2) {
          element = t1.element;
          element.setAttribute("aria-disabled", _s4_);
          element.setAttribute("disabled", _s4_);
        } else
          this._removeDisabledAttribute$0();
        t2 = t1.__engine$_flags;
        t2 = (t2 & 2) !== 0 || (t2 & 131072) !== 0 ? _s4_ : "false";
        t1.element.setAttribute("aria-checked", t2);
      }
    },
    dispose$0: function(_) {
      var _this = this;
      switch (_this.__engine$_kind) {
        case C._CheckableKind_0:
          _this.semanticsObject.setAriaRole$2("checkbox", false);
          break;
        case C._CheckableKind_1:
          _this.semanticsObject.setAriaRole$2("radio", false);
          break;
        case C._CheckableKind_2:
          _this.semanticsObject.setAriaRole$2("switch", false);
          break;
      }
      _this._removeDisabledAttribute$0();
    },
    _removeDisabledAttribute$0: function() {
      var element = this.semanticsObject.element;
      element.removeAttribute("aria-disabled");
      element.removeAttribute("disabled");
    }
  };
  H.ImageRoleManager.prototype = {
    update$0: function(_) {
      var t2, t3, _this = this,
        t1 = _this.semanticsObject;
      if (t1.get$isVisualOnly()) {
        t2 = t1.__engine$_childrenInTraversalOrder;
        t2 = t2 != null && !C.NativeInt32List_methods.get$isEmpty(t2);
      } else
        t2 = false;
      if (t2) {
        if (_this._auxiliaryImageElement == null) {
          _this._auxiliaryImageElement = W._ElementFactoryProvider_createElement_tag("flt-semantics-img", null);
          t2 = t1.__engine$_childrenInTraversalOrder;
          if (t2 != null && !C.NativeInt32List_methods.get$isEmpty(t2)) {
            t2 = _this._auxiliaryImageElement.style;
            t2.position = "absolute";
            t2.top = "0";
            t2.left = "0";
            t3 = t1.__engine$_rect;
            t3 = H.S(t3.right - t3.left) + "px";
            t2.width = t3;
            t3 = t1.__engine$_rect;
            t3 = H.S(t3.bottom - t3.top) + "px";
            t2.height = t3;
          }
          t2 = _this._auxiliaryImageElement.style;
          t2.fontSize = "6px";
          t2 = _this._auxiliaryImageElement;
          t2.toString;
          t1.element.appendChild(t2);
        }
        _this._auxiliaryImageElement.setAttribute("role", "img");
        _this._setLabel$1(_this._auxiliaryImageElement);
      } else if (t1.get$isVisualOnly()) {
        t1.setAriaRole$2("img", true);
        _this._setLabel$1(t1.element);
        _this._cleanUpAuxiliaryElement$0();
      } else {
        _this._cleanUpAuxiliaryElement$0();
        _this._cleanupElement$0();
      }
    },
    _setLabel$1: function(element) {
      var t1 = this.semanticsObject.__engine$_label;
      if (t1 != null && t1.length !== 0) {
        element.toString;
        t1.toString;
        element.setAttribute("aria-label", t1);
      }
    },
    _cleanUpAuxiliaryElement$0: function() {
      var t1 = this._auxiliaryImageElement;
      if (t1 != null) {
        J.remove$0$ax(t1);
        this._auxiliaryImageElement = null;
      }
    },
    _cleanupElement$0: function() {
      var t1 = this.semanticsObject;
      t1.setAriaRole$2("img", false);
      t1.element.removeAttribute("aria-label");
    },
    dispose$0: function(_) {
      this._cleanUpAuxiliaryElement$0();
      this._cleanupElement$0();
    }
  };
  H.Incrementable.prototype = {
    Incrementable$1: function(semanticsObject) {
      var _this = this,
        t1 = _this._element;
      semanticsObject.element.appendChild(t1);
      t1.type = "range";
      t1.setAttribute("role", "slider");
      C.InputElement_methods.addEventListener$2(t1, "change", new H.Incrementable_closure(_this, semanticsObject));
      t1 = new H.Incrementable_closure0(_this);
      _this._gestureModeListener = t1;
      semanticsObject.owner._gestureModeListeners.push(t1);
    },
    update$0: function(_) {
      var _this = this;
      switch (_this.semanticsObject.owner._gestureMode) {
        case C.GestureMode_1:
          _this._enableBrowserGestureHandling$0();
          _this._updateInputValues$0();
          break;
        case C.GestureMode_0:
          _this._disableBrowserGestureHandling$0();
          break;
      }
    },
    _enableBrowserGestureHandling$0: function() {
      var t1 = this._element,
        t2 = t1.disabled;
      t2.toString;
      if (!t2)
        return;
      t1.disabled = false;
    },
    _updateInputValues$0: function() {
      var t1, updateNeeded, surrogateTextValue, t2, t3, surrogateMaxTextValue, surrogateMinTextValue, _this = this;
      if (!_this._pendingResync) {
        t1 = _this.semanticsObject._dirtyFields;
        updateNeeded = (t1 & 4096) !== 0 || (t1 & 8192) !== 0 || (t1 & 16384) !== 0;
      } else
        updateNeeded = true;
      if (!updateNeeded)
        return;
      _this._pendingResync = false;
      surrogateTextValue = "" + _this._currentSurrogateValue;
      t1 = _this._element;
      t1.value = surrogateTextValue;
      t1.setAttribute("aria-valuenow", surrogateTextValue);
      t2 = _this.semanticsObject;
      t3 = t2.__engine$_value;
      t3.toString;
      t1.setAttribute("aria-valuetext", t3);
      surrogateMaxTextValue = t2.__engine$_increasedValue.length !== 0 ? "" + (_this._currentSurrogateValue + 1) : surrogateTextValue;
      t1.max = surrogateMaxTextValue;
      t1.setAttribute("aria-valuemax", surrogateMaxTextValue);
      surrogateMinTextValue = t2.__engine$_decreasedValue.length !== 0 ? "" + (_this._currentSurrogateValue - 1) : surrogateTextValue;
      t1.min = surrogateMinTextValue;
      t1.setAttribute("aria-valuemin", surrogateMinTextValue);
    },
    _disableBrowserGestureHandling$0: function() {
      var t1 = this._element,
        t2 = t1.disabled;
      t2.toString;
      if (t2)
        return;
      t1.disabled = true;
    },
    dispose$0: function(_) {
      var _this = this;
      C.JSArray_methods.remove$1(_this.semanticsObject.owner._gestureModeListeners, _this._gestureModeListener);
      _this._gestureModeListener = null;
      _this._disableBrowserGestureHandling$0();
      C.InputElement_methods.remove$0(_this._element);
    }
  };
  H.Incrementable_closure.prototype = {
    call$1: function(_) {
      var newInputValue,
        t1 = this.$this,
        t2 = t1._element,
        t3 = t2.disabled;
      t3.toString;
      if (t3)
        return;
      t1._pendingResync = true;
      t2 = t2.value;
      t2.toString;
      newInputValue = P.int_parse(t2, null);
      t2 = t1._currentSurrogateValue;
      if (newInputValue > t2) {
        t1._currentSurrogateValue = t2 + 1;
        t1 = $.$get$EnginePlatformDispatcher__instance();
        H.invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, this.semanticsObject.id, C.SemanticsAction_64, null);
      } else if (newInputValue < t2) {
        t1._currentSurrogateValue = t2 - 1;
        t1 = $.$get$EnginePlatformDispatcher__instance();
        H.invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, this.semanticsObject.id, C.SemanticsAction_128, null);
      }
    },
    $signature: 1
  };
  H.Incrementable_closure0.prototype = {
    call$1: function(mode) {
      this.$this.update$0(0);
    },
    $signature: 91
  };
  H.LabelAndValue.prototype = {
    update$0: function(_) {
      var hasLabel, t3, shouldDisplayValue, t4, t5, _this = this,
        t1 = _this.semanticsObject,
        t2 = t1.__engine$_value,
        hasValue = t2 != null && t2.length !== 0;
      t2 = t1.__engine$_label;
      hasLabel = t2 != null && t2.length !== 0;
      if (hasValue) {
        t3 = t1.__engine$_actions;
        t3.toString;
        shouldDisplayValue = !((t3 & 64) !== 0 || (t3 & 128) !== 0);
      } else
        shouldDisplayValue = false;
      if (!hasLabel && !shouldDisplayValue) {
        _this._cleanUpDom$0();
        return;
      }
      if (hasLabel) {
        t2 = "" + H.S(t2);
        if (shouldDisplayValue)
          t2 += " ";
      } else
        t2 = "";
      if (shouldDisplayValue)
        t2 += H.S(t1.__engine$_value);
      t3 = t1.element;
      t2 = t2.charCodeAt(0) == 0 ? t2 : t2;
      t3.setAttribute("aria-label", t2);
      if ((t1.__engine$_flags & 512) !== 0)
        t1.setAriaRole$2("heading", true);
      if (_this._auxiliaryValueElement == null) {
        _this._auxiliaryValueElement = W._ElementFactoryProvider_createElement_tag("flt-semantics-value", null);
        t4 = t1.__engine$_childrenInTraversalOrder;
        if (t4 != null && !C.NativeInt32List_methods.get$isEmpty(t4)) {
          t4 = _this._auxiliaryValueElement.style;
          t4.position = "absolute";
          t4.top = "0";
          t4.left = "0";
          t5 = t1.__engine$_rect;
          t5 = H.S(t5.right - t5.left) + "px";
          t4.width = t5;
          t1 = t1.__engine$_rect;
          t1 = H.S(t1.bottom - t1.top) + "px";
          t4.height = t1;
        }
        t1 = _this._auxiliaryValueElement.style;
        t1.fontSize = "6px";
        t1 = _this._auxiliaryValueElement;
        t1.toString;
        t3.appendChild(t1);
      }
      _this._auxiliaryValueElement.textContent = t2;
    },
    _cleanUpDom$0: function() {
      var t1 = this._auxiliaryValueElement;
      if (t1 != null) {
        J.remove$0$ax(t1);
        this._auxiliaryValueElement = null;
      }
      t1 = this.semanticsObject;
      t1.element.removeAttribute("aria-label");
      t1.setAriaRole$2("heading", false);
    },
    dispose$0: function(_) {
      this._cleanUpDom$0();
    }
  };
  H.LiveRegion.prototype = {
    update$0: function(_) {
      var t1 = this.semanticsObject,
        t2 = t1.__engine$_label;
      t2 = t2 != null && t2.length !== 0;
      t1 = t1.element;
      if (t2)
        t1.setAttribute("aria-live", "polite");
      else
        t1.removeAttribute("aria-live");
    },
    dispose$0: function(_) {
      this.semanticsObject.element.removeAttribute("aria-live");
    }
  };
  H.Scrollable.prototype = {
    _recomputeScrollPosition$0: function() {
      var t1, t2, t3, semanticsId, _this = this, _null = null;
      if (_this.get$_domScrollPosition() !== _this._effectiveNeutralScrollPosition) {
        t1 = _this.semanticsObject;
        if (!t1.owner.shouldAcceptBrowserGesture$1("scroll"))
          return;
        t2 = _this.get$_domScrollPosition();
        t3 = _this._effectiveNeutralScrollPosition;
        _this._neutralizeDomScrollPosition$0();
        t1.recomputePositionAndSize$0();
        semanticsId = t1.id;
        if (t2 > t3) {
          t1 = t1.__engine$_actions;
          t1.toString;
          if ((t1 & 32) !== 0 || (t1 & 16) !== 0) {
            t1 = $.$get$EnginePlatformDispatcher__instance();
            H.invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, semanticsId, C.SemanticsAction_16, _null);
          } else {
            t1 = $.$get$EnginePlatformDispatcher__instance();
            H.invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, semanticsId, C.SemanticsAction_4, _null);
          }
        } else {
          t1 = t1.__engine$_actions;
          t1.toString;
          if ((t1 & 32) !== 0 || (t1 & 16) !== 0) {
            t1 = $.$get$EnginePlatformDispatcher__instance();
            H.invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, semanticsId, C.SemanticsAction_32, _null);
          } else {
            t1 = $.$get$EnginePlatformDispatcher__instance();
            H.invoke3(t1._onSemanticsAction, t1._onSemanticsActionZone, semanticsId, C.SemanticsAction_8, _null);
          }
        }
      }
    },
    update$0: function(_) {
      var t1, t2, t3, _this = this;
      if (_this._scrollListener == null) {
        t1 = _this.semanticsObject;
        t2 = t1.element;
        t3 = t2.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, "touch-action"), "none", "");
        _this._gestureModeDidChange$0();
        t1 = t1.owner;
        t1._oneTimePostUpdateCallbacks.push(new H.Scrollable_update_closure(_this));
        t3 = new H.Scrollable_update_closure0(_this);
        _this._gestureModeListener = t3;
        t1._gestureModeListeners.push(t3);
        t3 = new H.Scrollable_update_closure1(_this);
        _this._scrollListener = t3;
        J.addEventListener$2$x(t2, "scroll", t3);
      }
    },
    get$_domScrollPosition: function() {
      var t1 = this.semanticsObject,
        t2 = t1.__engine$_actions;
      t2.toString;
      t2 = (t2 & 32) !== 0 || (t2 & 16) !== 0;
      t1 = t1.element;
      if (t2)
        return C.JSNumber_methods.round$0(t1.scrollTop);
      else
        return C.JSNumber_methods.round$0(t1.scrollLeft);
    },
    _neutralizeDomScrollPosition$0: function() {
      var t1 = this.semanticsObject,
        element = t1.element,
        t2 = t1.__engine$_actions;
      t2.toString;
      if ((t2 & 32) !== 0 || (t2 & 16) !== 0) {
        element.scrollTop = 10;
        t1.verticalContainerAdjustment = this._effectiveNeutralScrollPosition = C.JSNumber_methods.round$0(element.scrollTop);
        t1.horizontalContainerAdjustment = 0;
      } else {
        element.scrollLeft = 10;
        t2 = C.JSNumber_methods.round$0(element.scrollLeft);
        this._effectiveNeutralScrollPosition = t2;
        t1.verticalContainerAdjustment = 0;
        t1.horizontalContainerAdjustment = t2;
      }
    },
    _gestureModeDidChange$0: function() {
      var _s10_ = "overflow-y",
        _s10_0 = "overflow-x",
        t1 = this.semanticsObject,
        element = t1.element;
      switch (t1.owner._gestureMode) {
        case C.GestureMode_1:
          t1 = t1.__engine$_actions;
          t1.toString;
          if ((t1 & 32) !== 0 || (t1 & 16) !== 0) {
            t1 = element.style;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_), "scroll", "");
          } else {
            t1 = element.style;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_0), "scroll", "");
          }
          break;
        case C.GestureMode_0:
          t1 = t1.__engine$_actions;
          t1.toString;
          if ((t1 & 32) !== 0 || (t1 & 16) !== 0) {
            t1 = element.style;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_), "hidden", "");
          } else {
            t1 = element.style;
            C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, _s10_0), "hidden", "");
          }
          break;
      }
    },
    dispose$0: function(_) {
      var t3, _this = this,
        t1 = _this.semanticsObject,
        t2 = t1.element,
        style = t2.style;
      style.removeProperty("overflowY");
      style.removeProperty("overflowX");
      style.removeProperty("touch-action");
      t3 = _this._scrollListener;
      if (t3 != null)
        J.removeEventListener$2$x(t2, "scroll", t3);
      C.JSArray_methods.remove$1(t1.owner._gestureModeListeners, _this._gestureModeListener);
      _this._gestureModeListener = null;
    }
  };
  H.Scrollable_update_closure.prototype = {
    call$0: function() {
      this.$this._neutralizeDomScrollPosition$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.Scrollable_update_closure0.prototype = {
    call$1: function(_) {
      this.$this._gestureModeDidChange$0();
    },
    $signature: 91
  };
  H.Scrollable_update_closure1.prototype = {
    call$1: function(_) {
      this.$this._recomputeScrollPosition$0();
    },
    $signature: 1
  };
  H.SemanticsUpdate.prototype = {};
  H.SemanticsNodeUpdate.prototype = {};
  H.Role.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H._roleFactories_closure.prototype = {
    call$1: function(object) {
      return H.Incrementable$(object);
    },
    $signature: 288
  };
  H._roleFactories_closure0.prototype = {
    call$1: function(object) {
      return new H.Scrollable(object);
    },
    $signature: 302
  };
  H._roleFactories_closure1.prototype = {
    call$1: function(object) {
      return new H.LabelAndValue(object);
    },
    $signature: 147
  };
  H._roleFactories_closure2.prototype = {
    call$1: function(object) {
      return new H.Tappable(object);
    },
    $signature: 119
  };
  H._roleFactories_closure3.prototype = {
    call$1: function(object) {
      var t2, t3,
        t1 = new H.TextField(object);
      t1.__TextField_editableElement = (object.__engine$_flags & 524288) !== 0 ? document.createElement("textarea") : W.InputElement_InputElement();
      t2 = t1.get$editableElement();
      t2.spellcheck = false;
      t2.setAttribute("autocorrect", "off");
      t2.setAttribute("autocomplete", "off");
      t2.setAttribute("data-semantics-role", "text-field");
      t2 = t1.get$editableElement().style;
      t2.position = "absolute";
      t2.top = "0";
      t2.left = "0";
      t3 = object.__engine$_rect;
      t3 = H.S(t3.right - t3.left) + "px";
      t2.width = t3;
      t3 = object.__engine$_rect;
      t3 = H.S(t3.bottom - t3.top) + "px";
      t2.height = t3;
      object.element.appendChild(t1.get$editableElement());
      t2 = H._browserEngine();
      switch (t2) {
        case C.BrowserEngine_0:
        case C.BrowserEngine_5:
        case C.BrowserEngine_3:
        case C.BrowserEngine_4:
        case C.BrowserEngine_2:
        case C.BrowserEngine_4:
        case C.BrowserEngine_6:
          t1._initializeForBlink$0();
          break;
        case C.BrowserEngine_1:
          t1._initializeForWebkit$0();
          break;
      }
      return t1;
    },
    $signature: 231
  };
  H._roleFactories_closure4.prototype = {
    call$1: function(object) {
      return new H.Checkable(H._checkableKindFromSemanticsFlag(object), object);
    },
    $signature: 106
  };
  H._roleFactories_closure5.prototype = {
    call$1: function(object) {
      return new H.ImageRoleManager(object);
    },
    $signature: 108
  };
  H._roleFactories_closure6.prototype = {
    call$1: function(object) {
      return new H.LiveRegion(object);
    },
    $signature: 114
  };
  H.RoleManager.prototype = {};
  H.SemanticsObject.prototype = {
    SemanticsObject$2: function(id, owner) {
      var t1 = this.element,
        t2 = t1.style;
      t2.position = "absolute";
      if (this.id === 0 && true) {
        t2 = t1.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "filter"), "opacity(0%)", "");
        t1 = t1.style;
        t1.color = "rgba(0,0,0,0)";
      }
    },
    getOrCreateChildContainer$0: function() {
      var t1, _this = this;
      if (_this._childContainerElement == null) {
        t1 = W._ElementFactoryProvider_createElement_tag("flt-semantics-container", null);
        _this._childContainerElement = t1;
        t1 = t1.style;
        t1.position = "absolute";
        t1 = _this._childContainerElement;
        t1.toString;
        _this.element.appendChild(t1);
      }
      return _this._childContainerElement;
    },
    get$isVisualOnly: function() {
      var t2,
        t1 = this.__engine$_flags;
      if ((t1 & 16384) !== 0) {
        t2 = this.__engine$_actions;
        t2.toString;
        t1 = (t2 & 1) === 0 && (t1 & 8) === 0;
      } else
        t1 = false;
      return t1;
    },
    enabledState$0: function() {
      var t1 = this.__engine$_flags;
      if ((t1 & 64) !== 0)
        if ((t1 & 128) !== 0)
          return C.EnabledState_1;
        else
          return C.EnabledState_2;
      else
        return C.EnabledState_0;
    },
    setAriaRole$2: function(ariaRoleName, condition) {
      var t1;
      if (condition)
        this.element.setAttribute("role", ariaRoleName);
      else {
        t1 = this.element;
        if (t1.getAttribute("role") === ariaRoleName)
          t1.removeAttribute("role");
      }
    },
    _updateRole$2: function(role, enabled) {
      var t1 = this._roleManagers,
        manager = t1.$index(0, role);
      if (enabled) {
        if (manager == null) {
          manager = $.$get$_roleFactories().$index(0, role).call$1(this);
          t1.$indexSet(0, role, manager);
        }
        manager.update$0(0);
      } else if (manager != null) {
        manager.dispose$0(0);
        t1.remove$1(0, role);
      }
    },
    recomputePositionAndSize$0: function() {
      var containerElement, hasZeroRectOffset, transform, hasIdentityTransform, left, $top, effectiveTransformIsIdentity, t5, _this = this, t1 = {},
        t2 = _this.element,
        t3 = t2.style,
        t4 = _this.__engine$_rect;
      t4 = H.S(t4.right - t4.left) + "px";
      t3.width = t4;
      t4 = _this.__engine$_rect;
      t4 = H.S(t4.bottom - t4.top) + "px";
      t3.height = t4;
      t3 = _this.__engine$_childrenInTraversalOrder;
      containerElement = t3 != null && !C.NativeInt32List_methods.get$isEmpty(t3) ? _this.getOrCreateChildContainer$0() : null;
      t3 = _this.__engine$_rect;
      hasZeroRectOffset = t3.top === 0 && t3.left === 0;
      transform = _this.__engine$_transform;
      t3 = transform == null;
      hasIdentityTransform = t3 || H.transformKindOf(transform) === C.TransformKind_0;
      if (hasZeroRectOffset && hasIdentityTransform && _this.verticalContainerAdjustment === 0 && _this.horizontalContainerAdjustment === 0) {
        H.SemanticsObject__clearSemanticElementTransform(t2);
        if (containerElement != null)
          H.SemanticsObject__clearSemanticElementTransform(containerElement);
        return;
      }
      t1._effectiveTransform = null;
      t4 = new H.SemanticsObject_recomputePositionAndSize__effectiveTransform_get(t1);
      t1 = new H.SemanticsObject_recomputePositionAndSize__effectiveTransform_set(t1);
      if (!hasZeroRectOffset)
        if (t3) {
          t3 = _this.__engine$_rect;
          left = t3.left;
          $top = t3.top;
          t3 = H.Matrix4$identity();
          t3.setTranslationRaw$3(left, $top, 0);
          t1.call$1(t3);
          effectiveTransformIsIdentity = left === 0 && $top === 0;
        } else {
          t3 = new H.Matrix40(new Float32Array(16));
          t3.setFrom$1(new H.Matrix40(transform));
          t5 = _this.__engine$_rect;
          t3.translate$3(0, t5.left, t5.top, 0);
          t1.call$1(t3);
          effectiveTransformIsIdentity = J.isIdentity$0$z(t4.call$0());
        }
      else if (!hasIdentityTransform) {
        t1.call$1(new H.Matrix40(transform));
        effectiveTransformIsIdentity = false;
      } else
        effectiveTransformIsIdentity = true;
      if (!effectiveTransformIsIdentity) {
        t1 = t2.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform-origin"), "0 0 0", "");
        t4 = H.float64ListToCssTransform(t4.call$0().__engine$_m4storage);
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), t4, "");
      } else
        H.SemanticsObject__clearSemanticElementTransform(t2);
      if (containerElement != null)
        if (!hasZeroRectOffset || _this.verticalContainerAdjustment !== 0 || _this.horizontalContainerAdjustment !== 0) {
          t1 = _this.__engine$_rect;
          t2 = t1.left;
          t3 = _this.horizontalContainerAdjustment;
          t1 = t1.top;
          t4 = _this.verticalContainerAdjustment;
          t5 = containerElement.style;
          t4 = H.S(-t1 + t4) + "px";
          t5.top = t4;
          t1 = H.S(-t2 + t3) + "px";
          t5.left = t1;
        } else
          H.SemanticsObject__clearSemanticElementTransform(containerElement);
    },
    _updateChildrenInTraversalOrder$0: function() {
      var t2, len, i, object, containerElement, t3, t4, t5, t6, _i, id, intersectionIndicesNew, intersectionIndicesOld, minLength, newIndex, oldIndex, longestSequence, stationaryIds, refNode, childId, _this = this,
        _s13_ = "flt-semantics",
        t1 = _this.__engine$_childrenInTraversalOrder;
      if (t1 == null || t1.length === 0) {
        t2 = _this._previousChildrenInTraversalOrder;
        if (t2 == null || t2.length === 0) {
          _this._previousChildrenInTraversalOrder = t1;
          return;
        }
        len = t2.length;
        for (t1 = _this.owner, t2 = t1._semanticsTree, i = 0; i < len; ++i) {
          object = t2.$index(0, _this._previousChildrenInTraversalOrder[i]);
          t1._detachments.push(object);
        }
        _this._previousChildrenInTraversalOrder = null;
        t1 = _this._childContainerElement;
        t1.toString;
        J.remove$0$ax(t1);
        _this._childContainerElement = null;
        _this._previousChildrenInTraversalOrder = _this.__engine$_childrenInTraversalOrder;
        return;
      }
      containerElement = _this.getOrCreateChildContainer$0();
      t1 = _this._previousChildrenInTraversalOrder;
      if (t1 == null || t1.length === 0) {
        t1 = _this._previousChildrenInTraversalOrder = _this.__engine$_childrenInTraversalOrder;
        for (t2 = t1.length, t3 = _this.owner, t4 = t3._semanticsTree, t5 = type$.Role, t6 = type$.nullable_RoleManager, _i = 0; _i < t2; ++_i) {
          id = t1[_i];
          object = t4.$index(0, id);
          if (object == null) {
            object = new H.SemanticsObject(id, t3, W._ElementFactoryProvider_createElement_tag(_s13_, null), P.LinkedHashMap_LinkedHashMap$_empty(t5, t6));
            object.SemanticsObject$2(id, t3);
            t4.$indexSet(0, id, object);
          }
          containerElement.appendChild(object.element);
          object.__engine$_parent = _this;
          t3._attachments.$indexSet(0, object.id, _this);
        }
        _this._previousChildrenInTraversalOrder = _this.__engine$_childrenInTraversalOrder;
        return;
      }
      t1 = type$.JSArray_int;
      intersectionIndicesNew = H.setRuntimeTypeInfo([], t1);
      intersectionIndicesOld = H.setRuntimeTypeInfo([], t1);
      minLength = Math.min(_this._previousChildrenInTraversalOrder.length, _this.__engine$_childrenInTraversalOrder.length);
      newIndex = 0;
      while (true) {
        if (!(newIndex < minLength && _this._previousChildrenInTraversalOrder[newIndex] === _this.__engine$_childrenInTraversalOrder[newIndex]))
          break;
        intersectionIndicesNew.push(newIndex);
        intersectionIndicesOld.push(newIndex);
        ++newIndex;
      }
      t2 = _this._previousChildrenInTraversalOrder.length;
      t3 = _this.__engine$_childrenInTraversalOrder.length;
      if (t2 === t3 && newIndex === t3)
        return;
      for (; t2 = _this.__engine$_childrenInTraversalOrder, newIndex < t2.length;) {
        for (t3 = _this._previousChildrenInTraversalOrder, t4 = t3.length, oldIndex = 0; oldIndex < t4; ++oldIndex)
          if (t3[oldIndex] === t2[newIndex]) {
            intersectionIndicesNew.push(newIndex);
            intersectionIndicesOld.push(oldIndex);
            break;
          }
        ++newIndex;
      }
      longestSequence = H.longestIncreasingSubsequence(intersectionIndicesOld);
      stationaryIds = H.setRuntimeTypeInfo([], t1);
      for (t1 = longestSequence.length, i = 0; i < t1; ++i)
        stationaryIds.push(_this._previousChildrenInTraversalOrder[intersectionIndicesOld[longestSequence[i]]]);
      for (t1 = _this.owner, t2 = t1._semanticsTree, i = 0; i < _this._previousChildrenInTraversalOrder.length; ++i)
        if (!C.JSArray_methods.contains$1(intersectionIndicesOld, i)) {
          object = t2.$index(0, _this._previousChildrenInTraversalOrder[i]);
          t1._detachments.push(object);
        }
      for (i = _this.__engine$_childrenInTraversalOrder.length - 1, t3 = type$.Role, t4 = type$.nullable_RoleManager, refNode = null; i >= 0; --i) {
        childId = _this.__engine$_childrenInTraversalOrder[i];
        object = t2.$index(0, childId);
        if (object == null) {
          object = new H.SemanticsObject(childId, t1, W._ElementFactoryProvider_createElement_tag(_s13_, null), P.LinkedHashMap_LinkedHashMap$_empty(t3, t4));
          object.SemanticsObject$2(childId, t1);
          t2.$indexSet(0, childId, object);
        }
        if (!C.JSArray_methods.contains$1(stationaryIds, childId)) {
          t5 = object.element;
          if (refNode == null)
            containerElement.appendChild(t5);
          else
            containerElement.insertBefore(t5, refNode);
          object.__engine$_parent = _this;
          t1._attachments.$indexSet(0, object.id, _this);
        }
        refNode = object.element;
      }
      _this._previousChildrenInTraversalOrder = _this.__engine$_childrenInTraversalOrder;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.SemanticsObject_recomputePositionAndSize__effectiveTransform_set.prototype = {
    call$1: function(t1) {
      return this._box_0._effectiveTransform = t1;
    },
    $signature: 115
  };
  H.SemanticsObject_recomputePositionAndSize__effectiveTransform_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._effectiveTransform;
      return t1 == null ? H.throwExpression(H.LateError$localNI("effectiveTransform")) : t1;
    },
    $signature: 118
  };
  H.AccessibilityMode.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.GestureMode.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.EngineSemanticsOwner.prototype = {
    EngineSemanticsOwner$_$0: function() {
      $._hotRestartListeners.push(new H.EngineSemanticsOwner$__closure(this));
    },
    _finalizeTree$0: function() {
      var t1, t2, t3, _i, object, t4, t5, _this = this;
      for (t1 = _this._detachments, t2 = t1.length, t3 = _this._semanticsTree, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        object = t1[_i];
        t4 = _this._attachments;
        t5 = object.id;
        if (t4.$index(0, t5) == null) {
          t3.remove$1(0, t5);
          object.__engine$_parent = null;
          t4 = object.element;
          t5 = t4.parentNode;
          if (t5 != null)
            t5.removeChild(t4);
        }
      }
      _this._detachments = H.setRuntimeTypeInfo([], type$.JSArray_nullable_SemanticsObject);
      _this._attachments = P.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_int, type$.SemanticsObject);
      t1 = _this._oneTimePostUpdateCallbacks;
      t2 = t1.length;
      if (t2 !== 0) {
        for (_i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].call$0();
        _this._oneTimePostUpdateCallbacks = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function);
      }
    },
    set$semanticsEnabled: function(value) {
      var t1, t2, t3;
      if (this._semanticsEnabled)
        return;
      this._semanticsEnabled = true;
      t1 = this._semanticsEnabled;
      t2 = $.$get$EnginePlatformDispatcher__instance();
      t3 = t2._configuration;
      if (t1 !== t3.semanticsEnabled) {
        t2._configuration = t3.copyWith$1$semanticsEnabled(t1);
        t1 = t2._onSemanticsEnabledChanged;
        if (t1 != null)
          H.invoke(t1, t2._onSemanticsEnabledChangedZone);
      }
    },
    _getGestureModeClock$0: function() {
      var _this = this,
        t1 = _this._gestureModeClock;
      if (t1 == null) {
        t1 = _this._gestureModeClock = new H.AlarmClock(_this._now);
        t1.__AlarmClock_callback = new H.EngineSemanticsOwner__getGestureModeClock_closure(_this);
      }
      return t1;
    },
    receiveGlobalEvent$1: function($event) {
      var t1, _this = this;
      if (C.JSArray_methods.contains$1(C.List_Cg9, $event.type)) {
        t1 = _this._getGestureModeClock$0();
        t1.toString;
        t1.set$datetime(J.add$1$ax(_this._now.call$0(), C.Duration_500000));
        if (_this._gestureMode !== C.GestureMode_0) {
          _this._gestureMode = C.GestureMode_0;
          _this._notifyGestureModeListeners$0();
        }
      }
      return _this.semanticsHelper._semanticsEnabler.shouldEnableSemantics$1($event);
    },
    _notifyGestureModeListeners$0: function() {
      var t1, i;
      for (t1 = this._gestureModeListeners, i = 0; i < t1.length; ++i)
        t1[i].call$1(this._gestureMode);
    },
    shouldAcceptBrowserGesture$1: function(eventType) {
      if (C.JSArray_methods.contains$1(C.List_click_scroll, eventType))
        return this._gestureMode === C.GestureMode_1;
      return false;
    },
    updateSemantics$1: function(uiUpdate) {
      var t1, t2, t3, t4, t5, _i, nodeUpdate, t6, object, t7, _this = this;
      if (!_this._semanticsEnabled)
        return;
      for (t1 = uiUpdate.__engine$_nodeUpdates, t2 = t1.length, t3 = _this._semanticsTree, t4 = type$.Role, t5 = type$.nullable_RoleManager, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        nodeUpdate = t1[_i];
        t6 = nodeUpdate.id;
        object = t3.$index(0, t6);
        if (object == null) {
          object = new H.SemanticsObject(t6, _this, W._ElementFactoryProvider_createElement_tag("flt-semantics", null), P.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
          object.SemanticsObject$2(t6, _this);
          t3.$indexSet(0, t6, object);
        }
        t6 = nodeUpdate.flags;
        if (object.__engine$_flags !== t6) {
          object.__engine$_flags = t6;
          object._dirtyFields = (object._dirtyFields | 1) >>> 0;
        }
        t6 = nodeUpdate.value;
        if (object.__engine$_value !== t6) {
          object.__engine$_value = t6;
          object._dirtyFields = (object._dirtyFields | 4096) >>> 0;
        }
        t6 = nodeUpdate.label;
        if (object.__engine$_label !== t6) {
          object.__engine$_label = t6;
          object._dirtyFields = (object._dirtyFields | 1024) >>> 0;
        }
        t6 = nodeUpdate.rect;
        if (!J.$eq$(object.__engine$_rect, t6)) {
          object.__engine$_rect = t6;
          object._dirtyFields = (object._dirtyFields | 512) >>> 0;
        }
        t6 = nodeUpdate.transform;
        if (object.__engine$_transform !== t6) {
          object.__engine$_transform = t6;
          object._dirtyFields = (object._dirtyFields | 65536) >>> 0;
        }
        t6 = nodeUpdate.scrollPosition;
        if (object.__engine$_scrollPosition !== t6) {
          object.__engine$_scrollPosition = t6;
          object._dirtyFields = (object._dirtyFields | 64) >>> 0;
        }
        t6 = object.__engine$_actions;
        t7 = nodeUpdate.actions;
        if (t6 !== t7) {
          object.__engine$_actions = t7;
          object._dirtyFields = (object._dirtyFields | 2) >>> 0;
          t6 = t7;
        }
        t7 = nodeUpdate.textSelectionBase;
        if (object._textSelectionBase !== t7) {
          object._textSelectionBase = t7;
          object._dirtyFields = (object._dirtyFields | 4) >>> 0;
        }
        t7 = nodeUpdate.textSelectionExtent;
        if (object._textSelectionExtent !== t7) {
          object._textSelectionExtent = t7;
          object._dirtyFields = (object._dirtyFields | 8) >>> 0;
        }
        t7 = nodeUpdate.scrollChildren;
        if (object._scrollChildren !== t7) {
          object._scrollChildren = t7;
          object._dirtyFields = (object._dirtyFields | 16) >>> 0;
        }
        t7 = nodeUpdate.scrollIndex;
        if (object.__engine$_scrollIndex !== t7) {
          object.__engine$_scrollIndex = t7;
          object._dirtyFields = (object._dirtyFields | 32) >>> 0;
        }
        t7 = nodeUpdate.scrollExtentMax;
        if (object.__engine$_scrollExtentMax !== t7) {
          object.__engine$_scrollExtentMax = t7;
          object._dirtyFields = (object._dirtyFields | 128) >>> 0;
        }
        t7 = nodeUpdate.scrollExtentMin;
        if (object.__engine$_scrollExtentMin !== t7) {
          object.__engine$_scrollExtentMin = t7;
          object._dirtyFields = (object._dirtyFields | 256) >>> 0;
        }
        t7 = nodeUpdate.hint;
        if (object.__engine$_hint !== t7) {
          object.__engine$_hint = t7;
          object._dirtyFields = (object._dirtyFields | 2048) >>> 0;
        }
        t7 = nodeUpdate.increasedValue;
        if (object.__engine$_increasedValue !== t7) {
          object.__engine$_increasedValue = t7;
          object._dirtyFields = (object._dirtyFields | 8192) >>> 0;
        }
        t7 = nodeUpdate.decreasedValue;
        if (object.__engine$_decreasedValue !== t7) {
          object.__engine$_decreasedValue = t7;
          object._dirtyFields = (object._dirtyFields | 16384) >>> 0;
        }
        t7 = nodeUpdate.textDirection;
        if (object._textDirection != t7) {
          object._textDirection = t7;
          object._dirtyFields = (object._dirtyFields | 32768) >>> 0;
        }
        t7 = nodeUpdate.childrenInHitTestOrder;
        if (object._childrenInHitTestOrder !== t7) {
          object._childrenInHitTestOrder = t7;
          object._dirtyFields = (object._dirtyFields | 1048576) >>> 0;
        }
        t7 = nodeUpdate.childrenInTraversalOrder;
        if (object.__engine$_childrenInTraversalOrder !== t7) {
          object.__engine$_childrenInTraversalOrder = t7;
          object._dirtyFields = (object._dirtyFields | 524288) >>> 0;
        }
        t7 = nodeUpdate.additionalActions;
        if (object._additionalActions !== t7) {
          object._additionalActions = t7;
          object._dirtyFields = (object._dirtyFields | 2097152) >>> 0;
        }
        t7 = object.__engine$_label;
        if (!(t7 != null && t7.length !== 0)) {
          t7 = object.__engine$_value;
          t7 = t7 != null && t7.length !== 0;
        } else
          t7 = true;
        if (t7) {
          t7 = object.__engine$_flags;
          if ((t7 & 16) === 0) {
            if ((t7 & 16384) !== 0) {
              t6.toString;
              t6 = (t6 & 1) === 0 && (t7 & 8) === 0;
            } else
              t6 = false;
            t6 = !t6;
          } else
            t6 = false;
        } else
          t6 = false;
        object._updateRole$2(C.Role_2, t6);
        object._updateRole$2(C.Role_4, (object.__engine$_flags & 16) !== 0);
        t6 = object.__engine$_actions;
        t6.toString;
        object._updateRole$2(C.Role_3, ((t6 & 1) !== 0 || (object.__engine$_flags & 8) !== 0) && (object.__engine$_flags & 16) === 0);
        t6 = object.__engine$_actions;
        t6.toString;
        object._updateRole$2(C.Role_0, (t6 & 64) !== 0 || (t6 & 128) !== 0);
        t6 = object.__engine$_actions;
        t6.toString;
        object._updateRole$2(C.Role_1, (t6 & 32) !== 0 || (t6 & 16) !== 0 || (t6 & 4) !== 0 || (t6 & 8) !== 0);
        t6 = object.__engine$_flags;
        object._updateRole$2(C.Role_5, (t6 & 1) !== 0 || (t6 & 65536) !== 0);
        t6 = object.__engine$_flags;
        if ((t6 & 16384) !== 0) {
          t7 = object.__engine$_actions;
          t7.toString;
          t6 = (t7 & 1) === 0 && (t6 & 8) === 0;
        } else
          t6 = false;
        object._updateRole$2(C.Role_6, t6);
        t6 = object.__engine$_flags;
        object._updateRole$2(C.Role_7, (t6 & 32768) !== 0 && (t6 & 8192) === 0);
        object._updateChildrenInTraversalOrder$0();
        t6 = object._dirtyFields;
        if ((t6 & 512) !== 0 || (t6 & 65536) !== 0 || (t6 & 64) !== 0)
          object.recomputePositionAndSize$0();
        object._dirtyFields = 0;
      }
      if (_this._rootSemanticsElement == null) {
        t1 = t3.$index(0, 0).element;
        _this._rootSemanticsElement = t1;
        $.$get$domRenderer()._semanticsHostElement.appendChild(t1);
      }
      _this._finalizeTree$0();
    }
  };
  H.EngineSemanticsOwner$__closure.prototype = {
    call$0: function() {
      var t1 = this.$this._rootSemanticsElement;
      if (t1 != null)
        J.remove$0$ax(t1);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.EngineSemanticsOwner__now_closure.prototype = {
    call$0: function() {
      return new P.DateTime(Date.now(), false);
    },
    $signature: 61
  };
  H.EngineSemanticsOwner__getGestureModeClock_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1._gestureMode === C.GestureMode_1)
        return;
      t1._gestureMode = C.GestureMode_1;
      t1._notifyGestureModeListeners$0();
    },
    $signature: 0
  };
  H.EnabledState.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.SemanticsHelper.prototype = {};
  H.SemanticsEnabler.prototype = {
    shouldEnableSemantics$1: function($event) {
      if (!this.get$isWaitingToEnableSemantics())
        return true;
      else
        return this.tryEnableSemantics$1($event);
    }
  };
  H.DesktopSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics: function() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1: function($event) {
      var t1, t2, _this = this;
      if (_this._schedulePlaceholderRemoval) {
        t1 = _this._semanticsPlaceholder;
        t1.toString;
        J.remove$0$ax(t1);
        _this.semanticsActivationTimer = _this._semanticsPlaceholder = null;
        return true;
      }
      t1 = $.EngineSemanticsOwner__instance;
      if ((t1 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t1)._semanticsEnabled)
        return true;
      if (!J.containsKey$1$x(C.Set_Yabt3._collection$_map, $event.type))
        return true;
      if (++_this.semanticsActivationAttempts >= 20)
        return _this._schedulePlaceholderRemoval = true;
      if (_this.semanticsActivationTimer != null)
        return false;
      t1 = J.get$target$x($event);
      t2 = _this._semanticsPlaceholder;
      if (t1 == null ? t2 == null : t1 === t2) {
        _this.semanticsActivationTimer = P.Timer_Timer(C.Duration_300000, new H.DesktopSemanticsEnabler_tryEnableSemantics_closure(_this));
        return false;
      }
      return true;
    },
    prepareAccessibilityPlaceholder$0: function() {
      var t2,
        t1 = this._semanticsPlaceholder = W._ElementFactoryProvider_createElement_tag("flt-semantics-placeholder", null);
      J.addEventListener$3$x(t1, "click", new H.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this), true);
      t1.setAttribute("role", "button");
      t1.setAttribute("aria-live", "true");
      t1.setAttribute("tabindex", "0");
      t1.setAttribute("aria-label", "Enable accessibility");
      t2 = t1.style;
      t2.position = "absolute";
      t2.left = "-1px";
      t2.top = "-1px";
      t2.width = "1px";
      t2.height = "1px";
      return t1;
    }
  };
  H.DesktopSemanticsEnabler_tryEnableSemantics_closure.prototype = {
    call$0: function() {
      var t1 = $.EngineSemanticsOwner__instance;
      (t1 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t1).set$semanticsEnabled(true);
      this.$this._schedulePlaceholderRemoval = true;
    },
    $signature: 0
  };
  H.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1: function($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 1
  };
  H.MobileSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics: function() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1: function($event) {
      var t1, removeNow, blinkEnableConditionPassed, activationPoint, activatingElementRect, t2, t3, t4, deltaX, deltaY, safariEnableConditionPassed, _this = this;
      if (_this._schedulePlaceholderRemoval) {
        t1 = H._browserEngine();
        if (t1 === C.BrowserEngine_1) {
          t1 = $event.type;
          removeNow = t1 === "touchend" || t1 === "pointerup" || t1 === "click";
        } else
          removeNow = true;
        if (removeNow) {
          t1 = _this._semanticsPlaceholder;
          t1.toString;
          J.remove$0$ax(t1);
          _this.semanticsActivationTimer = _this._semanticsPlaceholder = null;
        }
        return true;
      }
      t1 = $.EngineSemanticsOwner__instance;
      if ((t1 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t1)._semanticsEnabled)
        return true;
      if (++_this.semanticsActivationAttempts >= 20)
        return _this._schedulePlaceholderRemoval = true;
      if (!J.containsKey$1$x(C.Set_2No4._collection$_map, $event.type))
        return true;
      if (_this.semanticsActivationTimer != null)
        return false;
      t1 = H._browserEngine();
      if (t1 !== C.BrowserEngine_0) {
        t1 = H._browserEngine();
        t1 = t1 === C.BrowserEngine_5;
      } else
        t1 = true;
      if (t1) {
        t1 = $.EngineSemanticsOwner__instance;
        blinkEnableConditionPassed = (t1 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t1)._gestureMode === C.GestureMode_1;
      } else
        blinkEnableConditionPassed = false;
      t1 = H._browserEngine();
      if (t1 === C.BrowserEngine_1) {
        switch ($event.type) {
          case "click":
            activationPoint = J.get$offset$x(type$.MouseEvent._as($event));
            break;
          case "touchstart":
          case "touchend":
            t1 = type$.TouchEvent._as($event).changedTouches;
            t1.toString;
            t1 = C.TouchList_methods.get$first(t1);
            activationPoint = new P.Point(C.JSNumber_methods.round$0(t1.clientX), C.JSNumber_methods.round$0(t1.clientY), type$.Point_num);
            break;
          case "pointerdown":
          case "pointerup":
            type$.PointerEvent_2._as($event);
            activationPoint = new P.Point($event.clientX, $event.clientY, type$.Point_num);
            break;
          default:
            return true;
        }
        activatingElementRect = $.$get$domRenderer()._glassPaneElement.getBoundingClientRect();
        t1 = activatingElementRect.left;
        t1.toString;
        t2 = activatingElementRect.right;
        t2.toString;
        t3 = activatingElementRect.top;
        t3.toString;
        t4 = activatingElementRect.bottom;
        t4.toString;
        deltaX = activationPoint.x - (t1 + (t2 - t1) / 2);
        deltaY = activationPoint.y - (t3 + (t4 - t3) / 2);
        safariEnableConditionPassed = deltaX * deltaX + deltaY * deltaY < 1 && true;
      } else
        safariEnableConditionPassed = false;
      if (blinkEnableConditionPassed || safariEnableConditionPassed) {
        _this.semanticsActivationTimer = P.Timer_Timer(C.Duration_300000, new H.MobileSemanticsEnabler_tryEnableSemantics_closure(_this));
        return false;
      }
      return true;
    },
    prepareAccessibilityPlaceholder$0: function() {
      var t2,
        t1 = this._semanticsPlaceholder = W._ElementFactoryProvider_createElement_tag("flt-semantics-placeholder", null);
      J.addEventListener$3$x(t1, "click", new H.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this), true);
      t1.setAttribute("role", "button");
      t1.setAttribute("aria-label", "Enable accessibility");
      t2 = t1.style;
      t2.position = "absolute";
      t2.left = "0";
      t2.top = "0";
      t2.right = "0";
      t2.bottom = "0";
      return t1;
    }
  };
  H.MobileSemanticsEnabler_tryEnableSemantics_closure.prototype = {
    call$0: function() {
      var t1 = $.EngineSemanticsOwner__instance;
      (t1 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t1).set$semanticsEnabled(true);
      this.$this._schedulePlaceholderRemoval = true;
    },
    $signature: 0
  };
  H.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1: function($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 1
  };
  H.Tappable.prototype = {
    update$0: function(_) {
      var t2, _this = this,
        t1 = _this.semanticsObject,
        element = t1.element;
      element.tabIndex = 0;
      t1.setAriaRole$2("button", (t1.__engine$_flags & 8) !== 0);
      if (t1.enabledState$0() === C.EnabledState_2 && (t1.__engine$_flags & 8) !== 0) {
        element.setAttribute("aria-disabled", "true");
        _this._stopListening$0();
      } else {
        t2 = t1.__engine$_actions;
        t2.toString;
        if ((t2 & 1) !== 0 && (t1.__engine$_flags & 16) === 0) {
          if (_this._clickListener == null) {
            t2 = new H.Tappable_update_closure(_this);
            _this._clickListener = t2;
            J.addEventListener$2$x(element, "click", t2);
          }
        } else
          _this._stopListening$0();
      }
      if ((t1._dirtyFields & 1) !== 0 && (t1.__engine$_flags & 32) !== 0)
        J.focus$0$x(element);
    },
    _stopListening$0: function() {
      var t1 = this._clickListener;
      if (t1 == null)
        return;
      J.removeEventListener$2$x(this.semanticsObject.element, "click", t1);
      this._clickListener = null;
    },
    dispose$0: function(_) {
      this._stopListening$0();
      this.semanticsObject.setAriaRole$2("button", false);
    }
  };
  H.Tappable_update_closure.prototype = {
    call$1: function(_) {
      var t2,
        t1 = this.$this.semanticsObject;
      if (t1.owner._gestureMode !== C.GestureMode_1)
        return;
      t2 = $.$get$EnginePlatformDispatcher__instance();
      H.invoke3(t2._onSemanticsAction, t2._onSemanticsActionZone, t1.id, C.SemanticsAction_1, null);
    },
    $signature: 1
  };
  H.SemanticsTextEditingStrategy.prototype = {
    enable$3$onAction$onChange: function(_, inputConfig, onAction, onChange) {
      this.inputConfig = inputConfig;
      this.onChange = onChange;
      this.onAction = onAction;
    },
    activate$1: function(textField) {
      var t2, t3, _this = this,
        t1 = _this.activeTextField;
      if (t1 === textField)
        return;
      else if (t1 != null)
        _this.disable$0(0);
      _this.activeTextField = textField;
      _this.domElement = textField.get$editableElement();
      _this._syncStyle$0();
      t1 = _this.inputConfig;
      t1.toString;
      t2 = _this.onChange;
      t2.toString;
      t3 = _this.onAction;
      t3.toString;
      _this.super$DefaultTextEditingStrategy$enable(0, t1, t3, t2);
    },
    disable$0: function(_) {
      var t1, i, _this = this;
      if (!_this.isEnabled)
        return;
      _this.isEnabled = false;
      _this._geometry = _this._style = null;
      for (t1 = _this._subscriptions, i = 0; i < t1.length; ++i)
        J.cancel$0$z(t1[i]);
      C.JSArray_methods.set$length(t1, 0);
      _this._lastEditingState = null;
      t1 = _this.domElement;
      if (t1 != null)
        t1.blur();
      _this._queuedStyle = _this.activeTextField = _this.domElement = null;
    },
    addEventHandlers$0: function() {
      var t1, t2, t3, _this = this;
      if (_this.get$_inputConfiguration().autofillGroup != null)
        C.JSArray_methods.addAll$1(_this._subscriptions, _this.get$_inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this._subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$_handleChange();
      t1.push(W._EventStreamSubscription$(t2, "input", t3, false, type$._ElementEventStreamImpl_Event._precomputed1));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "keydown", _this.get$_maybeSendAction(), false, type$._ElementEventStreamImpl_KeyboardEvent._precomputed1));
      t1.push(W._EventStreamSubscription$(document, "selectionchange", t3, false, type$.Event));
      _this.preventDefaultForMouseEvents$0();
    },
    initializeTextEditing$3$onAction$onChange: function(inputConfig, onAction, onChange) {
      var _this = this;
      _this.isEnabled = true;
      _this.__DefaultTextEditingStrategy__inputConfiguration = inputConfig;
      _this._onChange = onChange;
      _this._onAction = onAction;
      _this._applyConfiguration$1(inputConfig);
    },
    placeElement$0: function() {
      this.get$_inputConfiguration();
      this.domElement.focus();
    },
    initializeElementPlacement$0: function() {
    },
    updateElementPlacement$1: function(geometry) {
    },
    updateElementStyle$1: function(style) {
      this._queuedStyle = style;
      this._syncStyle$0();
    },
    _syncStyle$0: function() {
      var t1 = this._queuedStyle;
      if (t1 == null || this.domElement == null)
        return;
      t1.toString;
      this.super$DefaultTextEditingStrategy$updateElementStyle(t1);
    }
  };
  H.TextField.prototype = {
    get$editableElement: function() {
      var t1 = this.__TextField_editableElement;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("editableElement")) : t1;
    },
    _initializeForBlink$0: function() {
      J.addEventListener$2$x(this.get$editableElement(), "focus", new H.TextField__initializeForBlink_closure(this));
    },
    _initializeForWebkit$0: function() {
      var _this = this, t1 = {},
        t2 = H._operatingSystem();
      if (t2 === C.OperatingSystem_4) {
        _this._initializeForBlink$0();
        return;
      }
      t1.lastTouchStartOffsetY = t1.lastTouchStartOffsetX = null;
      J.addEventListener$3$x(_this.get$editableElement(), "touchstart", new H.TextField__initializeForWebkit_closure(t1), true);
      J.addEventListener$3$x(_this.get$editableElement(), "touchend", new H.TextField__initializeForWebkit_closure0(t1, _this), true);
    },
    update$0: function(_) {
      var t3, editingState, needsDomFocusRequest, element, _this = this,
        _s10_ = "aria-label",
        t1 = _this.semanticsObject,
        t2 = t1.__engine$_label;
      if (t2 != null && t2.length !== 0) {
        t2 = _this.get$editableElement();
        t3 = t1.__engine$_label;
        t3.toString;
        t2.setAttribute(_s10_, t3);
      } else
        _this.get$editableElement().removeAttribute(_s10_);
      t2 = _this.get$editableElement().style;
      t3 = t1.__engine$_rect;
      t3 = H.S(t3.right - t3.left) + "px";
      t2.width = t3;
      t3 = t1.__engine$_rect;
      t3 = H.S(t3.bottom - t3.top) + "px";
      t2.height = t3;
      t2 = t1.__engine$_value;
      editingState = H.EditingState$(t1._textSelectionBase, t1._textSelectionExtent, t2);
      if ((t1.__engine$_flags & 32) !== 0) {
        if (!_this._hasFocused) {
          _this._hasFocused = true;
          $.SemanticsTextEditingStrategy__instance.activate$1(_this);
          needsDomFocusRequest = true;
        } else
          needsDomFocusRequest = false;
        if (document.activeElement !== _this.get$editableElement())
          needsDomFocusRequest = true;
        $.SemanticsTextEditingStrategy__instance.setEditingState$1(editingState);
      } else {
        if (_this._hasFocused) {
          t2 = $.SemanticsTextEditingStrategy__instance;
          if (t2.activeTextField === _this)
            t2.disable$0(0);
          element = _this.get$editableElement();
          if (type$.InputElement._is(element))
            element.value = editingState.text;
          else if (type$.TextAreaElement._is(element))
            element.value = editingState.text;
          else
            H.throwExpression(P.UnsupportedError$("Unsupported DOM element type"));
          if (_this._hasFocused && document.activeElement === _this.get$editableElement())
            _this.get$editableElement().blur();
          _this._hasFocused = false;
        }
        needsDomFocusRequest = false;
      }
      if (needsDomFocusRequest)
        t1.owner._oneTimePostUpdateCallbacks.push(new H.TextField_update_closure(_this));
    },
    dispose$0: function(_) {
      var t1;
      J.remove$0$ax(this.get$editableElement());
      t1 = $.SemanticsTextEditingStrategy__instance;
      if (t1.activeTextField === this)
        t1.disable$0(0);
    }
  };
  H.TextField__initializeForBlink_closure.prototype = {
    call$1: function($event) {
      var t2,
        t1 = this.$this.semanticsObject;
      if (t1.owner._gestureMode !== C.GestureMode_1)
        return;
      t2 = $.$get$EnginePlatformDispatcher__instance();
      H.invoke3(t2._onSemanticsAction, t2._onSemanticsActionZone, t1.id, C.SemanticsAction_1, null);
    },
    $signature: 1
  };
  H.TextField__initializeForWebkit_closure.prototype = {
    call$1: function($event) {
      var t1, t2;
      type$.TouchEvent._as($event);
      t1 = $event.changedTouches;
      t1.toString;
      t1 = C.TouchList_methods.get$last(t1);
      t2 = C.JSNumber_methods.round$0(t1.clientX);
      C.JSNumber_methods.round$0(t1.clientY);
      t1 = this._box_0;
      t1.lastTouchStartOffsetX = t2;
      t2 = $event.changedTouches;
      t2.toString;
      t2 = C.TouchList_methods.get$last(t2);
      C.JSNumber_methods.round$0(t2.clientX);
      t1.lastTouchStartOffsetY = C.JSNumber_methods.round$0(t2.clientY);
    },
    $signature: 1
  };
  H.TextField__initializeForWebkit_closure0.prototype = {
    call$1: function($event) {
      var t1, t2, t3;
      type$.TouchEvent._as($event);
      t1 = this._box_0;
      if (t1.lastTouchStartOffsetX != null) {
        t2 = $event.changedTouches;
        t2.toString;
        t2 = C.TouchList_methods.get$last(t2);
        t3 = C.JSNumber_methods.round$0(t2.clientX);
        C.JSNumber_methods.round$0(t2.clientY);
        t2 = $event.changedTouches;
        t2.toString;
        t2 = C.TouchList_methods.get$last(t2);
        C.JSNumber_methods.round$0(t2.clientX);
        t2 = C.JSNumber_methods.round$0(t2.clientY);
        if (t3 * t3 + t2 * t2 < 324) {
          t2 = $.$get$EnginePlatformDispatcher__instance();
          H.invoke3(t2._onSemanticsAction, t2._onSemanticsActionZone, this.$this.semanticsObject.id, C.SemanticsAction_1, null);
        }
      }
      t1.lastTouchStartOffsetY = t1.lastTouchStartOffsetX = null;
    },
    $signature: 1
  };
  H.TextField_update_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (document.activeElement !== t1.get$editableElement())
        t1.get$editableElement().focus();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H._TypedDataBuffer.prototype = {
    get$length: function(_) {
      return this.__engine$_length;
    },
    $index: function(_, index) {
      if (index >= this.__engine$_length)
        throw H.wrapException(P.IndexError$(index, this, null, null, null));
      return this.__engine$_buffer[index];
    },
    $indexSet: function(_, index, value) {
      if (index >= this.__engine$_length)
        throw H.wrapException(P.IndexError$(index, this, null, null, null));
      this.__engine$_buffer[index] = value;
    },
    set$length: function(_, newLength) {
      var t2, i, newBuffer, _this = this,
        t1 = _this.__engine$_length;
      if (newLength < t1)
        for (t2 = _this.__engine$_buffer, i = newLength; i < t1; ++i)
          t2[i] = 0;
      else {
        t1 = _this.__engine$_buffer.length;
        if (newLength > t1) {
          if (t1 === 0)
            newBuffer = new Uint8Array(newLength);
          else
            newBuffer = _this.__engine$_createBiggerBuffer$1(newLength);
          C.NativeUint8List_methods.setRange$3(newBuffer, 0, _this.__engine$_length, _this.__engine$_buffer);
          _this.__engine$_buffer = newBuffer;
        }
      }
      _this.__engine$_length = newLength;
    },
    __engine$_add$1: function(_, value) {
      var _this = this,
        t1 = _this.__engine$_length;
      if (t1 === _this.__engine$_buffer.length)
        _this.__engine$_grow$1(t1);
      _this.__engine$_buffer[_this.__engine$_length++] = value;
    },
    add$1: function(_, value) {
      var _this = this,
        t1 = _this.__engine$_length;
      if (t1 === _this.__engine$_buffer.length)
        _this.__engine$_grow$1(t1);
      _this.__engine$_buffer[_this.__engine$_length++] = value;
    },
    addAll$3: function(_, values, start, end) {
      P.RangeError_checkNotNegative(start, "start");
      if (end != null && start > end)
        throw H.wrapException(P.RangeError$range(end, start, null, "end", null));
      this.__engine$_addAll$3(values, start, end);
    },
    addAll$1: function($receiver, values) {
      return this.addAll$3($receiver, values, 0, null);
    },
    __engine$_addAll$3: function(values, start, end) {
      var t1, i, value, _this = this;
      if (H._instanceType(_this)._eval$1("List<_TypedDataBuffer.E>")._is(values))
        end = end == null ? values.length : end;
      if (end != null) {
        _this.__engine$_insertKnownLength$4(_this.__engine$_length, values, start, end);
        return;
      }
      for (t1 = J.get$iterator$ax(values), i = 0; t1.moveNext$0();) {
        value = t1.get$current(t1);
        if (i >= start)
          _this.__engine$_add$1(0, value);
        ++i;
      }
      if (i < start)
        throw H.wrapException(P.StateError$("Too few elements"));
    },
    __engine$_insertKnownLength$4: function(index, values, start, end) {
      var valuesLength, newLength, t2, _this = this,
        t1 = J.getInterceptor$asx(values);
      if (start > t1.get$length(values) || end > t1.get$length(values))
        throw H.wrapException(P.StateError$("Too few elements"));
      valuesLength = end - start;
      newLength = _this.__engine$_length + valuesLength;
      _this.__engine$_ensureCapacity$1(newLength);
      t1 = _this.__engine$_buffer;
      t2 = index + valuesLength;
      C.NativeUint8List_methods.setRange$4(t1, t2, _this.__engine$_length + valuesLength, t1, index);
      C.NativeUint8List_methods.setRange$4(_this.__engine$_buffer, index, t2, values, start);
      _this.__engine$_length = newLength;
    },
    __engine$_ensureCapacity$1: function(requiredCapacity) {
      var newBuffer, _this = this;
      if (requiredCapacity <= _this.__engine$_buffer.length)
        return;
      newBuffer = _this.__engine$_createBiggerBuffer$1(requiredCapacity);
      C.NativeUint8List_methods.setRange$3(newBuffer, 0, _this.__engine$_length, _this.__engine$_buffer);
      _this.__engine$_buffer = newBuffer;
    },
    __engine$_createBiggerBuffer$1: function(requiredCapacity) {
      var newLength = this.__engine$_buffer.length * 2;
      if (requiredCapacity != null && newLength < requiredCapacity)
        newLength = requiredCapacity;
      else if (newLength < 8)
        newLength = 8;
      return new Uint8Array(newLength);
    },
    __engine$_grow$1: function($length) {
      var t1 = this.__engine$_createBiggerBuffer$1(null);
      C.NativeUint8List_methods.setRange$3(t1, 0, $length, this.__engine$_buffer);
      this.__engine$_buffer = t1;
    },
    setRange$4: function(_, start, end, source, skipCount) {
      var t1 = this.__engine$_length;
      if (end > t1)
        throw H.wrapException(P.RangeError$range(end, 0, t1, null, null));
      t1 = this.__engine$_buffer;
      if (H._instanceType(this)._eval$1("_TypedDataBuffer<_TypedDataBuffer.E>")._is(source))
        C.NativeUint8List_methods.setRange$4(t1, start, end, source.__engine$_buffer, skipCount);
      else
        C.NativeUint8List_methods.setRange$4(t1, start, end, source, skipCount);
    },
    setRange$3: function($receiver, start, end, source) {
      return this.setRange$4($receiver, start, end, source, 0);
    }
  };
  H._IntBuffer.prototype = {};
  H.Uint8Buffer0.prototype = {};
  H.MethodCall0.prototype = {
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "(" + this.method + ", " + H.S(this.$arguments) + ")";
    }
  };
  H.JSONMessageCodec.prototype = {
    encodeMessage$1: function(message) {
      return H.NativeByteData_NativeByteData$view(C.C_Utf8Encoder.convert$1(C.C_JsonCodec.encode$1(message)).buffer, 0, null);
    },
    decodeMessage$1: function(message) {
      if (message == null)
        return message;
      return C.C_JsonCodec.decode$1(0, C.Utf8Decoder_false.convert$1(H.NativeUint8List_NativeUint8List$view(message.buffer, 0, null)));
    }
  };
  H.JSONMethodCodec.prototype = {
    encodeMethodCall$1: function($call) {
      return C.C_JSONMessageCodec.encodeMessage$1(P.LinkedHashMap_LinkedHashMap$_literal(["method", $call.method, "args", $call.$arguments], type$.String, type$.dynamic));
    },
    decodeMethodCall$1: function(methodCall) {
      var t1, method, $arguments, _null = null,
        decoded = C.C_JSONMessageCodec.decodeMessage$1(methodCall);
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw H.wrapException(P.FormatException$("Expected method call Map, got " + H.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      method = t1.$index(decoded, "method");
      $arguments = t1.$index(decoded, "args");
      if (typeof method == "string")
        return new H.MethodCall0(method, $arguments);
      throw H.wrapException(P.FormatException$("Invalid method call: " + H.S(decoded), _null, _null));
    }
  };
  H.StandardMessageCodec.prototype = {
    encodeMessage$1: function(message) {
      var buffer = H.WriteBuffer_WriteBuffer();
      this.writeValue$2(0, buffer, true);
      return buffer.done$0();
    },
    decodeMessage$1: function(message) {
      var buffer, result;
      if (message == null)
        return null;
      buffer = new H.ReadBuffer0(message);
      result = this.readValue$1(0, buffer);
      if (buffer.__engine$_position < message.byteLength)
        throw H.wrapException(C.FormatException_oCg);
      return result;
    },
    writeValue$2: function(_, buffer, value) {
      var t1, t2, t3, bytes, _this = this;
      if (value == null)
        buffer.__engine$_buffer.__engine$_add$1(0, 0);
      else if (H._isBool(value)) {
        t1 = value ? 1 : 2;
        buffer.__engine$_buffer.__engine$_add$1(0, t1);
      } else if (typeof value == "number") {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 6);
        buffer.__engine$_alignTo$1(8);
        buffer.__engine$_eightBytes.setFloat64(0, value, C.C_Endian === $.$get$Endian_host());
        t1.addAll$1(0, buffer.__engine$_eightBytesAsList);
      } else if (H._isInt(value)) {
        t1 = -2147483648 <= value && value <= 2147483647;
        t2 = buffer.__engine$_buffer;
        t3 = buffer.__engine$_eightBytes;
        if (t1) {
          t2.__engine$_add$1(0, 3);
          t3.setInt32(0, value, C.C_Endian === $.$get$Endian_host());
          t2.addAll$3(0, buffer.__engine$_eightBytesAsList, 0, 4);
        } else {
          t2.__engine$_add$1(0, 4);
          C.NativeByteData_methods.setInt64$3(t3, 0, value, $.$get$Endian_host());
        }
      } else if (typeof value == "string") {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 7);
        bytes = C.C_Utf8Encoder.convert$1(value);
        _this.writeSize$2(buffer, bytes.length);
        t1.addAll$1(0, bytes);
      } else if (type$.Uint8List._is(value)) {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 8);
        _this.writeSize$2(buffer, value.length);
        t1.addAll$1(0, value);
      } else if (type$.Int32List._is(value)) {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 9);
        t2 = value.length;
        _this.writeSize$2(buffer, t2);
        buffer.__engine$_alignTo$1(4);
        t1.addAll$1(0, H.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t2));
      } else if (type$.Float64List._is(value)) {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 11);
        t2 = value.length;
        _this.writeSize$2(buffer, t2);
        buffer.__engine$_alignTo$1(8);
        t1.addAll$1(0, H.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 8 * t2));
      } else if (type$.List_dynamic._is(value)) {
        buffer.__engine$_buffer.__engine$_add$1(0, 12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); t1.moveNext$0();)
          _this.writeValue$2(0, buffer, t1.get$current(t1));
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer.__engine$_buffer.__engine$_add$1(0, 13);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        t1.forEach$1(value, new H.StandardMessageCodec_writeValue_closure0(_this, buffer));
      } else
        throw H.wrapException(P.ArgumentError$value(value, null, null));
    },
    readValue$1: function(_, buffer) {
      if (buffer.__engine$_position >= buffer.data.byteLength)
        throw H.wrapException(C.FormatException_oCg);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2: function(type, buffer) {
      var result, value, $length, t1, list, i, t2, t3, _this = this;
      switch (type) {
        case 0:
          result = null;
          break;
        case 1:
          result = true;
          break;
        case 2:
          result = false;
          break;
        case 3:
          value = buffer.data.getInt32(buffer.__engine$_position, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 4;
          result = value;
          break;
        case 4:
          result = buffer.getInt64$0(0);
          break;
        case 5:
          $length = _this.readSize$1(buffer);
          result = P.int_parse(C.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length)), 16);
          break;
        case 6:
          buffer.__engine$_alignTo$1(8);
          value = buffer.data.getFloat64(buffer.__engine$_position, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 8;
          result = value;
          break;
        case 7:
          $length = _this.readSize$1(buffer);
          result = C.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length));
          break;
        case 8:
          result = buffer.getUint8List$1(_this.readSize$1(buffer));
          break;
        case 9:
          $length = _this.readSize$1(buffer);
          buffer.__engine$_alignTo$1(4);
          t1 = buffer.data;
          list = H.NativeInt32List_NativeInt32List$view(t1.buffer, t1.byteOffset + buffer.__engine$_position, $length);
          buffer.__engine$_position = buffer.__engine$_position + 4 * $length;
          result = list;
          break;
        case 10:
          result = buffer.getInt64List$1(_this.readSize$1(buffer));
          break;
        case 11:
          $length = _this.readSize$1(buffer);
          buffer.__engine$_alignTo$1(8);
          t1 = buffer.data;
          list = H.NativeFloat64List_NativeFloat64List$view(t1.buffer, t1.byteOffset + buffer.__engine$_position, $length);
          buffer.__engine$_position = buffer.__engine$_position + 8 * $length;
          result = list;
          break;
        case 12:
          $length = _this.readSize$1(buffer);
          result = [];
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer.__engine$_position;
            if (t2 >= t1.byteLength)
              H.throwExpression(C.FormatException_oCg);
            buffer.__engine$_position = t2 + 1;
            result.push(_this.readValueOfType$2(t1.getUint8(t2), buffer));
          }
          break;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.dynamic;
          result = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer.__engine$_position;
            if (t2 >= t1.byteLength)
              H.throwExpression(C.FormatException_oCg);
            buffer.__engine$_position = t2 + 1;
            t2 = _this.readValueOfType$2(t1.getUint8(t2), buffer);
            t3 = buffer.__engine$_position;
            if (t3 >= t1.byteLength)
              H.throwExpression(C.FormatException_oCg);
            buffer.__engine$_position = t3 + 1;
            result.$indexSet(0, t2, _this.readValueOfType$2(t1.getUint8(t3), buffer));
          }
          break;
        default:
          throw H.wrapException(C.FormatException_oCg);
      }
      return result;
    },
    writeSize$2: function(buffer, value) {
      var t1, t2, t3;
      if (value < 254)
        buffer.__engine$_buffer.__engine$_add$1(0, value);
      else {
        t1 = buffer.__engine$_buffer;
        t2 = buffer.__engine$_eightBytes;
        t3 = buffer.__engine$_eightBytesAsList;
        if (value <= 65535) {
          t1.__engine$_add$1(0, 254);
          t2.setUint16(0, value, C.C_Endian === $.$get$Endian_host());
          t1.addAll$3(0, t3, 0, 2);
        } else {
          t1.__engine$_add$1(0, 255);
          t2.setUint32(0, value, C.C_Endian === $.$get$Endian_host());
          t1.addAll$3(0, t3, 0, 4);
        }
      }
    },
    readSize$1: function(buffer) {
      var value = buffer.getUint8$0(0);
      switch (value) {
        case 254:
          value = buffer.data.getUint16(buffer.__engine$_position, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 2;
          return value;
        case 255:
          value = buffer.data.getUint32(buffer.__engine$_position, C.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 4;
          return value;
        default:
          return value;
      }
    }
  };
  H.StandardMessageCodec_writeValue_closure0.prototype = {
    call$2: function(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(0, t2, key);
      t1.writeValue$2(0, t2, value);
    },
    $signature: 23
  };
  H.StandardMethodCodec.prototype = {
    decodeMethodCall$1: function(methodCall) {
      var buffer, method, $arguments;
      methodCall.toString;
      buffer = new H.ReadBuffer0(methodCall);
      method = C.C_StandardMessageCodec0.readValue$1(0, buffer);
      $arguments = C.C_StandardMessageCodec0.readValue$1(0, buffer);
      if (typeof method == "string" && buffer.__engine$_position >= methodCall.byteLength)
        return new H.MethodCall0(method, $arguments);
      else
        throw H.wrapException(C.FormatException_Qi2);
    },
    encodeSuccessEnvelope$1: function(result) {
      var buffer = H.WriteBuffer_WriteBuffer();
      buffer.__engine$_buffer.__engine$_add$1(0, 0);
      C.C_StandardMessageCodec0.writeValue$2(0, buffer, result);
      return buffer.done$0();
    },
    encodeErrorEnvelope$3$code$details$message: function(code, details, message) {
      var buffer = H.WriteBuffer_WriteBuffer();
      buffer.__engine$_buffer.__engine$_add$1(0, 1);
      C.C_StandardMessageCodec0.writeValue$2(0, buffer, code);
      C.C_StandardMessageCodec0.writeValue$2(0, buffer, message);
      C.C_StandardMessageCodec0.writeValue$2(0, buffer, details);
      return buffer.done$0();
    },
    encodeErrorEnvelope$2$code$message: function(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    }
  };
  H.WriteBuffer0.prototype = {
    __engine$_alignTo$1: function(alignment) {
      var t2, i,
        t1 = this.__engine$_buffer,
        mod = C.JSInt_methods.$mod(t1.__engine$_length, alignment);
      if (mod !== 0)
        for (t2 = alignment - mod, i = 0; i < t2; ++i)
          t1.__engine$_add$1(0, 0);
    },
    done$0: function() {
      var t1, t2;
      this._debugFinalized = true;
      t1 = this.__engine$_buffer;
      t2 = t1.__engine$_buffer;
      return H.NativeByteData_NativeByteData$view(t2.buffer, 0, t1.__engine$_length * t2.BYTES_PER_ELEMENT);
    }
  };
  H.ReadBuffer0.prototype = {
    getUint8$0: function(_) {
      return this.data.getUint8(this.__engine$_position++);
    },
    getInt64$0: function(_) {
      C.NativeByteData_methods.getInt64$2(this.data, this.__engine$_position, $.$get$Endian_host());
    },
    getUint8List$1: function($length) {
      var t1 = this.data,
        list = H.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + this.__engine$_position, $length);
      this.__engine$_position += $length;
      return list;
    },
    getInt64List$1: function($length) {
      var t1;
      this.__engine$_alignTo$1(8);
      t1 = this.data;
      C.NativeByteBuffer_methods.asInt64List$2(t1.buffer, t1.byteOffset + this.__engine$_position, $length);
    },
    __engine$_alignTo$1: function(alignment) {
      var t1 = this.__engine$_position,
        mod = C.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this.__engine$_position = t1 + (alignment - mod);
    }
  };
  H.SurfaceShadowData.prototype = {};
  H.CanvasParagraph.prototype = {
    get$width: function(_) {
      return this.get$_layoutService().width;
    },
    get$height: function(_) {
      return this.get$_layoutService().height;
    },
    get$longestLine: function() {
      var t1 = this.get$_layoutService().longestLine;
      t1 = t1 == null ? null : t1.width;
      return t1 == null ? 0 : t1;
    },
    get$maxIntrinsicWidth: function() {
      return this.get$_layoutService().maxIntrinsicWidth;
    },
    get$alphabeticBaseline: function(_) {
      return this.get$_layoutService().alphabeticBaseline;
    },
    get$ideographicBaseline: function(_) {
      return this.get$_layoutService().ideographicBaseline;
    },
    get$didExceedMaxLines: function(_) {
      this.get$_layoutService();
      return false;
    },
    get$_layoutService: function() {
      var _this = this,
        t1 = _this.__CanvasParagraph__layoutService;
      if (t1 == null) {
        t1 = new H.TextLayoutService(_this, W.CanvasElement_CanvasElement(null, null).getContext("2d"), H.setRuntimeTypeInfo([], type$.JSArray_EngineLineMetrics));
        if (_this.__CanvasParagraph__layoutService == null)
          _this.__CanvasParagraph__layoutService = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("_layoutService"));
      }
      return t1;
    },
    layout$1: function(_, constraints) {
      var _this = this;
      constraints = new P.ParagraphConstraints(Math.floor(constraints.width));
      if (constraints.$eq(0, _this._lastUsedConstraints))
        return;
      _this.get$_layoutService().performLayout$1(constraints);
      _this.isLaidOut = true;
      _this._lastUsedConstraints = constraints;
      _this._cachedDomElement = null;
    },
    get$hasArbitraryPaint: function() {
      return true;
    },
    paint$2: function(canvas, offset) {
      var t1 = this.__CanvasParagraph__paintService;
      if (t1 == null)
        t1 = this.__CanvasParagraph__paintService = new H.TextPaintService(this);
      t1.paint$2(canvas, offset);
    },
    toDomElement$0: function() {
      var t1,
        domElement = this._cachedDomElement;
      if (domElement == null) {
        t1 = this._createDomElement$0();
        this._cachedDomElement = t1;
        return t1;
      }
      return type$.HtmlElement._as(domElement.cloneNode(true));
    },
    _createDomElement$0: function() {
      var t4, t5, _element_get, _element_set, lines, span, i, element, _i, box, span0, _this = this, _box_0 = {},
        t1 = type$.HtmlElement,
        rootElement = t1._as($.$get$domRenderer().createElement$1(0, "p")),
        t2 = _this.paragraphStyle,
        cssStyle = rootElement.style,
        t3 = t2._textAlign;
      if (t3 != null) {
        t4 = t2._textDirection;
        t3 = H.textAlignToCssValue(t3, t4 == null ? C.TextDirection_1 : t4);
        cssStyle.textAlign = t3 == null ? "" : t3;
      }
      if (t2.get$_lineHeight(t2) != null) {
        t3 = H.S(t2.get$_lineHeight(t2));
        cssStyle.lineHeight = t3;
      }
      t3 = t2._textDirection;
      if (t3 != null) {
        t3 = H._textDirectionToCss(t3);
        cssStyle.direction = t3 == null ? "" : t3;
      }
      cssStyle = rootElement.style;
      cssStyle.position = "absolute";
      cssStyle.whiteSpace = "pre";
      if (_this.get$_layoutService().width > _this.get$longestLine()) {
        t3 = H.S(_this.get$_layoutService().width) + "px";
        cssStyle.width = t3;
      }
      t3 = t2._maxLines;
      t4 = t3 == null;
      if (!t4 || t2._ellipsis != null) {
        C.CssStyleDeclaration_methods._setPropertyHelper$3(cssStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(cssStyle, "overflow-y"), "hidden", "");
        t5 = H.S(_this.get$_layoutService().height) + "px";
        cssStyle.height = t5;
      }
      if (t2._ellipsis != null)
        t2 = t4 || t3 === 1;
      else
        t2 = false;
      if (t2) {
        t2 = H.S(_this.get$_layoutService().width) + "px";
        cssStyle.width = t2;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(cssStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(cssStyle, "overflow-x"), "hidden", "");
        C.CssStyleDeclaration_methods._setPropertyHelper$3(cssStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(cssStyle, "text-overflow"), "ellipsis", "");
      }
      _box_0._element0 = null;
      _element_get = new H.CanvasParagraph__createDomElement__element_get(_box_0);
      _element_set = new H.CanvasParagraph__createDomElement__element_set(_box_0);
      lines = _this.get$_layoutService().lines;
      for (span = null, i = 0; i < lines.length; ++i) {
        if (i > 0) {
          $.$get$domRenderer();
          t2 = _element_get.call$0();
          element = document.createElement("br");
          t2.appendChild(element);
        }
        for (t2 = lines[i].boxes, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
          box = t2[_i];
          if (box instanceof H.SpanBox) {
            span0 = box.span;
            if (span0 !== span) {
              $.$get$domRenderer();
              element = document.createElement("span");
              _element_set.call$1(t1._as(element));
              H._applyTextStyleToElement(_element_get.call$0(), true, span0.style);
              rootElement.appendChild(_element_get.call$0());
              span = span0;
            }
            $.$get$domRenderer();
            t4 = _element_get.call$0();
            t5 = C.JSString_methods.substring$2(box.spanometer.paragraph.plainText, box.start.index, box.end.indexWithoutTrailingNewlines);
            t4.appendChild(document.createTextNode(t5));
          } else if (box instanceof H.PlaceholderBox) {
            span = box.placeholder;
            _element_set.call$1(rootElement);
            $.$get$domRenderer();
            rootElement.appendChild(H._createPlaceholderElement(span));
          } else
            throw H.wrapException(P.UnimplementedError$("Unknown box type: " + H.getRuntimeType(box).toString$0(0)));
        }
      }
      return rootElement;
    },
    getBoxesForPlaceholders$0: function() {
      return this.get$_layoutService().getBoxesForPlaceholders$0();
    },
    getBoxesForRange$4$boxHeightStyle$boxWidthStyle: function(start, end, boxHeightStyle, boxWidthStyle) {
      return this.get$_layoutService().getBoxesForRange$4(start, end, boxHeightStyle, boxWidthStyle);
    },
    getPositionForOffset$1: function(offset) {
      return this.get$_layoutService().getPositionForOffset$1(offset);
    },
    $isEngineParagraph: 1,
    get$drawOnCanvas: function() {
      return this.drawOnCanvas;
    },
    get$isLaidOut: function() {
      return this.isLaidOut;
    }
  };
  H.CanvasParagraph__createDomElement__element_set.prototype = {
    call$1: function(t1) {
      return this._box_0._element0 = t1;
    },
    $signature: 145
  };
  H.CanvasParagraph__createDomElement__element_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._element0;
      return t1 == null ? H.throwExpression(H.LateError$localNI("element")) : t1;
    },
    $signature: 150
  };
  H.FlatTextSpan.prototype = {$isParagraphSpan: 1};
  H.StyleNode.prototype = {
    resolveStyle$0: function() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _this = this,
        style = _this._cachedStyle;
      if (style == null) {
        t1 = _this.get$_color(_this);
        t2 = _this.get$_decoration();
        t3 = _this.get$_decorationColor();
        t4 = _this.get$_decorationStyle();
        t5 = _this.get$_decorationThickness();
        t6 = _this.get$_fontWeight(_this);
        t7 = _this.get$_fontStyle(_this);
        t8 = _this.get$_textBaseline();
        t9 = _this.get$_fontFamily(_this);
        t10 = _this.get$_fontFamilyFallback();
        t11 = _this.get$_fontFeatures();
        t12 = _this.get$_fontSize(_this);
        t13 = _this.get$_letterSpacing(_this);
        t14 = _this.get$_wordSpacing(_this);
        t15 = _this.get$__engine$_height(_this);
        t16 = _this.get$_locale();
        t14 = H.EngineTextStyle$only(_this.get$_background(_this), t1, t2, t3, t4, t5, t9, t10, t11, t12, t7, t6, _this.get$_foreground(), t15, t13, t16, _this.get$_shadows(), t8, t14);
        _this._cachedStyle = t14;
        return t14;
      }
      return style;
    }
  };
  H.ChildStyleNode.prototype = {
    get$_color: function(_) {
      var t1 = this.style._color;
      if (t1 == null)
        if (this.get$_foreground() == null) {
          t1 = this.parent;
          t1 = t1.get$_color(t1);
        } else
          t1 = null;
      return t1;
    },
    get$_decoration: function() {
      var t1 = this.style._decoration;
      return t1 == null ? this.parent.get$_decoration() : t1;
    },
    get$_decorationColor: function() {
      var t1 = this.style._decorationColor;
      return t1 == null ? this.parent.get$_decorationColor() : t1;
    },
    get$_decorationStyle: function() {
      var t1 = this.style._decorationStyle;
      return t1 == null ? this.parent.get$_decorationStyle() : t1;
    },
    get$_decorationThickness: function() {
      var t1 = this.style._decorationThickness;
      return t1 == null ? this.parent.get$_decorationThickness() : t1;
    },
    get$_fontWeight: function(_) {
      var t1 = this.style._fontWeight;
      if (t1 == null) {
        t1 = this.parent;
        t1 = t1.get$_fontWeight(t1);
      }
      return t1;
    },
    get$_fontStyle: function(_) {
      var t1 = this.parent;
      t1 = t1.get$_fontStyle(t1);
      return t1;
    },
    get$_textBaseline: function() {
      var t1 = this.style._textBaseline;
      return t1 == null ? this.parent.get$_textBaseline() : t1;
    },
    get$_fontFamilyFallback: function() {
      var t1 = this.style._fontFamilyFallback;
      return t1 == null ? this.parent.get$_fontFamilyFallback() : t1;
    },
    get$_fontFeatures: function() {
      var t1 = this.parent.get$_fontFeatures();
      return t1;
    },
    get$_fontSize: function(_) {
      var t1 = this.style._fontSize;
      if (t1 == null) {
        t1 = this.parent;
        t1 = t1.get$_fontSize(t1);
      }
      return t1;
    },
    get$_letterSpacing: function(_) {
      var t1 = this.style._letterSpacing;
      if (t1 == null) {
        t1 = this.parent;
        t1 = t1.get$_letterSpacing(t1);
      }
      return t1;
    },
    get$_wordSpacing: function(_) {
      var t1 = this.style._wordSpacing;
      if (t1 == null) {
        t1 = this.parent;
        t1 = t1.get$_wordSpacing(t1);
      }
      return t1;
    },
    get$__engine$_height: function(_) {
      var t1 = this.style.__engine$_height;
      if (t1 == null) {
        t1 = this.parent;
        t1 = t1.get$__engine$_height(t1);
      }
      return t1;
    },
    get$_locale: function() {
      var t1 = this.style._locale;
      return t1 == null ? this.parent.get$_locale() : t1;
    },
    get$_background: function(_) {
      var t1 = this.style._background;
      if (t1 == null) {
        t1 = this.parent;
        t1 = t1.get$_background(t1);
      }
      return t1;
    },
    get$_foreground: function() {
      var t1 = this.style._foreground;
      return t1 == null ? this.parent.get$_foreground() : t1;
    },
    get$_shadows: function() {
      var t1 = this.parent.get$_shadows();
      return t1;
    },
    get$_fontFamily: function(_) {
      var t1 = this.style;
      if (t1._isFontFamilyProvided)
        t1 = t1._fontFamily;
      else {
        t1 = this.parent;
        t1 = t1.get$_fontFamily(t1);
      }
      return t1;
    }
  };
  H.RootStyleNode.prototype = {
    get$_decoration: function() {
      return null;
    },
    get$_decorationColor: function() {
      return null;
    },
    get$_decorationStyle: function() {
      return null;
    },
    get$_decorationThickness: function() {
      return null;
    },
    get$_fontWeight: function(_) {
      return this.paragraphStyle._fontWeight;
    },
    get$_fontStyle: function(_) {
      return this.paragraphStyle._fontStyle;
    },
    get$_textBaseline: function() {
      return null;
    },
    get$_fontFamily: function(_) {
      var t1 = this.paragraphStyle._fontFamily;
      return t1 == null ? "sans-serif" : t1;
    },
    get$_fontFamilyFallback: function() {
      return null;
    },
    get$_fontFeatures: function() {
      return null;
    },
    get$_fontSize: function(_) {
      var t1 = this.paragraphStyle._fontSize;
      return t1 == null ? 14 : t1;
    },
    get$_letterSpacing: function(_) {
      return null;
    },
    get$_wordSpacing: function(_) {
      return null;
    },
    get$__engine$_height: function(_) {
      return this.paragraphStyle.__engine$_height;
    },
    get$_locale: function() {
      return this.paragraphStyle._locale;
    },
    get$_background: function(_) {
      return null;
    },
    get$_foreground: function() {
      return null;
    },
    get$_shadows: function() {
      return null;
    },
    get$_color: function() {
      return C.Color_4294901760;
    }
  };
  H.CanvasParagraphBuilder.prototype = {
    get$_currentStyleNode: function() {
      var t1 = this._styleStack,
        t2 = t1.length;
      return t2 === 0 ? this._rootStyleNode : t1[t2 - 1];
    },
    get$placeholderScales: function() {
      return this._placeholderScales;
    },
    pushStyle$1: function(_, style) {
      this._styleStack.push(new H.ChildStyleNode(this.get$_currentStyleNode(), type$.EngineTextStyle._as(style)));
    },
    pop$0: function(_) {
      var t1 = this._styleStack;
      if (t1.length !== 0)
        t1.pop();
    },
    addText$1: function(_, text) {
      var decoration, _this = this,
        style = _this.get$_currentStyleNode().resolveStyle$0(),
        t1 = _this._plainTextBuffer,
        t2 = t1._contents,
        t3 = t2 + text;
      t1._contents = t3;
      t1 = _this._drawOnCanvas;
      if (t1) {
        decoration = style._decoration;
        if (decoration != null) {
          t1 = decoration._mask;
          t1 = C.TextDecoration_0._mask !== t1;
        } else
          t1 = false;
        if (t1) {
          _this._drawOnCanvas = false;
          t1 = false;
        } else
          t1 = true;
      }
      t1;
      _this._spans.push(new H.FlatTextSpan(style, t2.length, t3.length));
    },
    build$0: function(_) {
      var _this = this,
        t1 = _this._plainTextBuffer._contents;
      return new H.CanvasParagraph(_this._spans, _this._paragraphStyle, t1.charCodeAt(0) == 0 ? t1 : t1, _this._drawOnCanvas);
    }
  };
  H.FontCollection.prototype = {
    registerFonts$1: function(assetManager) {
      return this.registerFonts$body$FontCollection(assetManager);
    },
    registerFonts$body$FontCollection: function(assetManager) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, e, exception, t1, fontManifest, t2, t3, t4, t5, family, fontAssetItem, asset, descriptors, t6, t7, byteData, $async$exception;
      var $async$registerFonts$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              byteData = null;
              $async$handler = 4;
              $async$goto = 7;
              return P._asyncAwait(assetManager.load$1(0, "FontManifest.json"), $async$registerFonts$1);
            case 7:
              // returning from await.
              byteData = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = H.unwrapException($async$exception);
              if (t1 instanceof H.AssetManagerException) {
                e = t1;
                if (e.httpStatus === 404) {
                  $.$get$printWarning().call$1("Font manifest does not exist at `" + e.url + "` \u2013 ignoring.");
                  // goto return
                  $async$goto = 1;
                  break;
                } else
                  throw $async$exception;
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              fontManifest = C.C_JsonCodec.decode$1(0, C.C_Utf8Codec.decode$1(0, H.NativeUint8List_NativeUint8List$view(byteData.buffer, 0, null)));
              if (fontManifest == null)
                throw H.wrapException(P.AssertionError$(string$.There_));
              if ($.$get$supportsFontLoadingApi())
                $async$self._assetFontManager = H.FontManager_FontManager();
              else
                $async$self._assetFontManager = new H._PolyfillFontManager(H.setRuntimeTypeInfo([], type$.JSArray_Future_void));
              for (t1 = J.cast$1$0$ax(fontManifest, type$.Map_String_dynamic), t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = type$.String, t3 = H._instanceType(t1)._precomputed1; t1.moveNext$0();) {
                t4 = t3._as(t1._current);
                t5 = J.getInterceptor$asx(t4);
                family = t5.$index(t4, "family");
                for (t4 = J.get$iterator$ax(t5.$index(t4, "fonts")); t4.moveNext$0();) {
                  fontAssetItem = t4.get$current(t4);
                  t5 = J.getInterceptor$asx(fontAssetItem);
                  asset = t5.$index(fontAssetItem, "asset");
                  descriptors = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
                  for (t6 = J.get$iterator$ax(t5.get$keys(fontAssetItem)); t6.moveNext$0();) {
                    t7 = t6.get$current(t6);
                    if (t7 !== "asset")
                      descriptors.$indexSet(0, t7, H.S(t5.$index(fontAssetItem, t7)));
                  }
                  t5 = $async$self._assetFontManager;
                  t5.toString;
                  family.toString;
                  t5.registerAsset$3(family, "url(" + assetManager.getAssetUrl$1(asset) + ")", descriptors);
                }
              }
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$registerFonts$1, $async$completer);
    },
    ensureFontsLoaded$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$ensureFontsLoaded$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._assetFontManager;
              $async$goto = 2;
              return P._asyncAwait(t1 == null ? null : P.Future_wait(t1._fontLoadingFutures, type$.void), $async$ensureFontsLoaded$0);
            case 2:
              // returning from await.
              t1 = $async$self._testFontManager;
              $async$goto = 3;
              return P._asyncAwait(t1 == null ? null : P.Future_wait(t1._fontLoadingFutures, type$.void), $async$ensureFontsLoaded$0);
            case 3:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$ensureFontsLoaded$0, $async$completer);
    }
  };
  H.FontManager.prototype = {
    registerAsset$3: function(family, asset, descriptors) {
      var t1 = $.$get$FontManager_startWithDigit()._nativeRegExp;
      if (t1.test(family) || $.$get$FontManager_notPunctuation().stringMatch$1(family) !== family)
        this._loadFontFace$3("'" + family + "'", asset, descriptors);
      this._loadFontFace$3(family, asset, descriptors);
    },
    _loadFontFace$3: function(family, asset, descriptors) {
      var fontFace, e, exception;
      try {
        fontFace = W.FontFace_FontFace(family, asset, descriptors);
        this._fontLoadingFutures.push(P.promiseToFuture(fontFace.load(), type$.FontFace).then$1$2$onError(0, new H.FontManager__loadFontFace_closure(fontFace), new H.FontManager__loadFontFace_closure0(family), type$.void));
      } catch (exception) {
        e = H.unwrapException(exception);
        $.$get$printWarning().call$1('Error while loading font family "' + family + '":\n' + H.S(e));
      }
    }
  };
  H.FontManager__loadFontFace_closure.prototype = {
    call$1: function(_) {
      document.fonts.add(this.fontFace);
    },
    $signature: 152
  };
  H.FontManager__loadFontFace_closure0.prototype = {
    call$1: function(e) {
      $.$get$printWarning().call$1('Error while trying to load font family "' + this.family + '":\n' + H.S(e));
    },
    $signature: 5
  };
  H._PolyfillFontManager.prototype = {
    registerAsset$3: function(family, asset, descriptors) {
      var fallbackFontName, t4, sansSerifWidth, fontStyleMap, t5, fontFaceDeclaration, fontLoadStyle, _s5_ = "style", _s6_ = "weight", t1 = {},
        t2 = document,
        paragraph = t2.createElement("p"),
        t3 = paragraph.style;
      t3.position = "absolute";
      t3 = paragraph.style;
      t3.visibility = "hidden";
      t3 = paragraph.style;
      t3.fontSize = "72px";
      t3 = H._browserEngine();
      fallbackFontName = t3 === C.BrowserEngine_4 ? "Times New Roman" : "sans-serif";
      t3 = paragraph.style;
      t3.fontFamily = fallbackFontName;
      if (descriptors.$index(0, _s5_) != null) {
        t3 = paragraph.style;
        t4 = descriptors.$index(0, _s5_);
        t3.fontStyle = t4 == null ? "" : t4;
      }
      if (descriptors.$index(0, _s6_) != null) {
        t3 = paragraph.style;
        t4 = descriptors.$index(0, _s6_);
        t3.fontWeight = t4 == null ? "" : t4;
      }
      paragraph.textContent = "giItT1WQy@!-/#";
      t2.body.appendChild(paragraph);
      sansSerifWidth = C.JSNumber_methods.round$0(paragraph.offsetWidth);
      t3 = paragraph.style;
      t4 = "'" + family + "', " + fallbackFontName;
      t3.fontFamily = t4;
      t3 = new P._Future($.Zone__current, type$._Future_void);
      t1.__fontLoadStart = null;
      t4 = type$.String;
      fontStyleMap = P.LinkedHashMap_LinkedHashMap$_empty(t4, type$.nullable_String);
      fontStyleMap.$indexSet(0, "font-family", "'" + family + "'");
      fontStyleMap.$indexSet(0, "src", asset);
      if (descriptors.$index(0, _s5_) != null)
        fontStyleMap.$indexSet(0, "font-style", descriptors.$index(0, _s5_));
      if (descriptors.$index(0, _s6_) != null)
        fontStyleMap.$indexSet(0, "font-weight", descriptors.$index(0, _s6_));
      t5 = fontStyleMap.get$keys(fontStyleMap);
      fontFaceDeclaration = H.MappedIterable_MappedIterable(t5, new H._PolyfillFontManager_registerAsset_closure(fontStyleMap), H._instanceType(t5)._eval$1("Iterable.E"), t4).join$1(0, " ");
      fontLoadStyle = t2.createElement("style");
      fontLoadStyle.type = "text/css";
      C.StyleElement_methods.setInnerHtml$1(fontLoadStyle, "@font-face { " + fontFaceDeclaration + " }");
      t2.head.appendChild(fontLoadStyle);
      if (C.JSString_methods.contains$1(family.toLowerCase(), "icon")) {
        C.ParagraphElement_methods.remove$0(paragraph);
        return;
      }
      new H._PolyfillFontManager_registerAsset___fontLoadStart_set(t1).call$1(new P.DateTime(Date.now(), false));
      new H._PolyfillFontManager_registerAsset__watchWidth(paragraph, sansSerifWidth, new P._AsyncCompleter(t3, type$._AsyncCompleter_void), new H._PolyfillFontManager_registerAsset___fontLoadStart_get(t1), family).call$0();
      this._fontLoadingFutures.push(t3);
    }
  };
  H._PolyfillFontManager_registerAsset___fontLoadStart_set.prototype = {
    call$1: function(t1) {
      return this._box_0.__fontLoadStart = t1;
    },
    $signature: 158
  };
  H._PolyfillFontManager_registerAsset___fontLoadStart_get.prototype = {
    call$0: function() {
      var t1 = this._box_0.__fontLoadStart;
      return t1 == null ? H.throwExpression(H.LateError$localNI("_fontLoadStart")) : t1;
    },
    $signature: 61
  };
  H._PolyfillFontManager_registerAsset__watchWidth.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.paragraph;
      if (C.JSNumber_methods.round$0(t1.offsetWidth) !== _this.sansSerifWidth) {
        C.ParagraphElement_methods.remove$0(t1);
        _this.completer.complete$0(0);
      } else if (P.Duration$(0, Date.now() - _this.__fontLoadStart_get.call$0()._core$_value)._duration > 2000000) {
        _this.completer.complete$0(0);
        throw H.wrapException(P.Exception_Exception("Timed out trying to load font: " + _this.family));
      } else
        P.Timer_Timer(C.Duration_50000, _this);
    },
    $signature: 0
  };
  H._PolyfillFontManager_registerAsset_closure.prototype = {
    call$1: function($name) {
      return $name + ": " + H.S(this.fontStyleMap.$index(0, $name)) + ";";
    },
    $signature: 55
  };
  H.TextLayoutService.prototype = {
    performLayout$1: function(constraints) {
      var t4, spanometer, currentLine, t5, t6, t7, t8, spanIndex, span, t9, nextBreak, additionalWidth, _i, line, longestLineWidth, breakToNextLine, widthOfLastSegment, _this = this,
        t1 = _this.paragraph,
        t2 = t1.spans,
        spanCount = t2.length,
        t3 = _this.width = constraints.width;
      _this.height = 0;
      _this.longestLine = null;
      _this.maxIntrinsicWidth = _this.minIntrinsicWidth = 0;
      _this.didExceedMaxLines = false;
      t4 = _this.lines;
      C.JSArray_methods.set$length(t4, 0);
      if (spanCount === 0)
        return;
      spanometer = new H.Spanometer(t1, _this.context);
      currentLine = H.LineBuilder$_(t1, spanometer, 0, 0, t3, new H.LineBreakResult(0, 0, 0, C.LineBreakType_1));
      for (t5 = t1.paragraphStyle, t6 = t5._maxLines, t5 = t5._ellipsis, t7 = t5 != null, t8 = t6 == null, spanIndex = 0; true;) {
        if (spanIndex === spanCount) {
          if (currentLine._segments.length !== 0 || currentLine.end.type !== C.LineBreakType_3) {
            currentLine.extendToEndOfText$0();
            t4.push(currentLine.build$0(0));
          }
          break;
        }
        span = t2[spanIndex];
        spanometer.set$currentSpan(span);
        t9 = span.end;
        nextBreak = H.nextLineBreak(currentLine.paragraph.plainText, currentLine.end.index, t9);
        additionalWidth = currentLine.getAdditionalWidthTo$1(nextBreak);
        if (currentLine.width + additionalWidth <= t3) {
          currentLine.extendTo$1(nextBreak);
          if (nextBreak.type === C.LineBreakType_2) {
            t4.push(currentLine.build$0(0));
            currentLine = currentLine.nextLine$0();
          }
        } else if ((t7 && t8 || t4.length + 1 === t6) && t7) {
          currentLine.forceBreak$3$allowEmpty$ellipsis(nextBreak, true, t5);
          t4.push(currentLine.build$1$ellipsis(0, t5));
          break;
        } else if (currentLine._segments.length === 0) {
          currentLine.forceBreak$2$allowEmpty(nextBreak, false);
          t4.push(currentLine.build$0(0));
          currentLine = currentLine.nextLine$0();
        } else {
          t4.push(currentLine.build$0(0));
          currentLine = currentLine.nextLine$0();
        }
        if (currentLine.end.index >= t9) {
          currentLine.createBox$0();
          ++spanIndex;
        }
        if (t4.length === t6)
          break;
      }
      for (t5 = t4.length, _i = 0; _i < t5; ++_i) {
        line = t4[_i];
        _this.height = _this.height + line.height;
        if (_this.alphabeticBaseline === -1) {
          t6 = line.baseline;
          _this.alphabeticBaseline = t6;
          _this.ideographicBaseline = t6 * 1.1662499904632568;
        }
        t6 = _this.longestLine;
        longestLineWidth = t6 == null ? null : t6.width;
        if (longestLineWidth == null)
          longestLineWidth = 0;
        if (longestLineWidth < line.width)
          _this.longestLine = line;
      }
      currentLine = H.LineBuilder$_(t1, spanometer, 0, 0, t3, new H.LineBreakResult(0, 0, 0, C.LineBreakType_1));
      for (spanIndex = 0; spanIndex < spanCount;) {
        span = t2[spanIndex];
        spanometer.set$currentSpan(span);
        t1 = span.end;
        nextBreak = H.nextLineBreak(currentLine.paragraph.plainText, currentLine.end.index, t1);
        currentLine.extendTo$1(nextBreak);
        breakToNextLine = nextBreak.type === C.LineBreakType_2 && true;
        if (currentLine.end.index >= t1)
          ++spanIndex;
        widthOfLastSegment = C.JSArray_methods.get$last(currentLine._segments).width;
        if (_this.minIntrinsicWidth < widthOfLastSegment)
          _this.minIntrinsicWidth = widthOfLastSegment;
        t1 = _this.maxIntrinsicWidth;
        t3 = currentLine.widthIncludingSpace;
        if (t1 < t3)
          _this.maxIntrinsicWidth = t3;
        if (breakToNextLine)
          currentLine = currentLine.nextLine$0();
      }
    },
    getBoxesForPlaceholders$0: function() {
      var t1, t2, _i, line, t3, t4, t5, $top, lineTop, t6, t7, _i0, box, t8, t9, t10, top0,
        boxes = H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      for (t1 = this.lines, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        line = t1[_i];
        for (t3 = line.boxes, t4 = t3.length, t5 = line.left, $top = line.baseline, lineTop = $top - line.ascent, t6 = line.height, t7 = lineTop + t6, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0) {
          box = t3[_i0];
          if (box instanceof H.PlaceholderBox) {
            t8 = box.left;
            t9 = box.placeholder;
            t10 = C.JSNumber_methods.$add(t8, t9.get$width(t9));
            switch (t9.get$alignment()) {
              case C.PlaceholderAlignment_3:
                top0 = lineTop;
                break;
              case C.PlaceholderAlignment_5:
                top0 = lineTop + C.JSNumber_methods.$sub(t6, t9.get$height(t9)) / 2;
                break;
              case C.PlaceholderAlignment_4:
                top0 = C.JSNumber_methods.$sub(t7, t9.get$height(t9));
                break;
              case C.PlaceholderAlignment_1:
                top0 = C.JSNumber_methods.$sub($top, t9.get$height(t9));
                break;
              case C.PlaceholderAlignment_2:
                top0 = $top;
                break;
              case C.PlaceholderAlignment_0:
                top0 = C.JSNumber_methods.$sub($top, t9.get$baselineOffset());
                break;
              default:
                top0 = null;
            }
            boxes.push(new P.TextBox(t5 + t8, top0, t5 + t10, C.JSNumber_methods.$add(top0, t9.get$height(t9)), box.direction));
          }
        }
      }
      return boxes;
    },
    getBoxesForRange$4: function(start, end, boxHeightStyle, boxWidthStyle) {
      var $length, boxes, t1, t2, _i, line, t3, t4, _i0, box;
      if (start >= end || start < 0 || end < 0)
        return H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      $length = this.paragraph.plainText.length;
      if (start > $length || end > $length)
        return H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      boxes = H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      for (t1 = this.lines, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        line = t1[_i];
        if (start < line.endIndex && line.startIndex < end)
          for (t3 = line.boxes, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i0) {
            box = t3[_i0];
            if (box instanceof H.SpanBox && start < box.end.index && box.start.index < end)
              boxes.push(box.intersect$3(line, start, end));
          }
      }
      return boxes;
    },
    getPositionForOffset$1: function(offset) {
      var dx, _i, box,
        line = this._findLineForY$1(offset._dy),
        t1 = offset._dx,
        t2 = line.left;
      if (t1 <= t2)
        return new P.TextPosition(line.startIndex, C.TextAffinity_1);
      if (t1 >= t2 + line.widthWithTrailingSpaces)
        return new P.TextPosition(line.endIndexWithoutNewlines, C.TextAffinity_0);
      dx = t1 - t2;
      for (t1 = line.boxes, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        box = t1[_i];
        if (box.get$left(box) <= dx && dx <= box.get$right(box))
          return box.getPositionForX$1(dx);
      }
      return new P.TextPosition(line.startIndex, C.TextAffinity_1);
    },
    _findLineForY$1: function(y) {
      var t1, t2, _i, line, t3;
      for (t1 = this.lines, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        line = t1[_i];
        t3 = line.height;
        if (y <= t3)
          return line;
        y -= t3;
      }
      return C.JSArray_methods.get$last(t1);
    },
    set$width: function(receiver, val) {
      return this.width = val;
    },
    set$height: function(receiver, val) {
      return this.height = val;
    }
  };
  H.RangeBox.prototype = {};
  H.PlaceholderBox.prototype = {};
  H.SpanBox.prototype = {
    get$right: function(_) {
      return this.left + this.width;
    },
    intersect$3: function(line, start, end) {
      var left0, t2, right, _this = this,
        $top = line.baseline - _this.baseline,
        t1 = _this.start.index,
        left = _this.left;
      if (start <= t1)
        left0 = left;
      else {
        t2 = _this.spanometer;
        t2.set$currentSpan(_this.span);
        left0 = left + t2._measure$2(t1, start);
      }
      t1 = _this.end.indexWithoutTrailingNewlines;
      right = left + _this.width;
      if (!(end >= t1)) {
        t2 = _this.spanometer;
        t2.set$currentSpan(_this.span);
        right -= t2._measure$2(end, t1);
      }
      t1 = line.left;
      return new P.TextBox(left0 + t1, $top, right + t1, $top + _this.height, _this.direction);
    },
    getPositionForX$1: function(x) {
      var startIndex, endIndex, cutoff, t2, _this = this,
        t1 = _this.spanometer;
      t1.set$currentSpan(_this.span);
      x -= _this.left;
      startIndex = _this.start.index;
      endIndex = _this.end.indexWithoutTrailingNewlines;
      cutoff = t1.forceBreak$4$allowEmpty$availableWidth(startIndex, endIndex, true, x);
      if (cutoff === endIndex)
        return new P.TextPosition(cutoff, C.TextAffinity_0);
      t2 = cutoff + 1;
      if (x - t1._measure$2(startIndex, cutoff) < t1._measure$2(startIndex, t2) - x)
        return new P.TextPosition(cutoff, C.TextAffinity_1);
      else
        return new P.TextPosition(t2, C.TextAffinity_0);
    },
    get$end: function(receiver) {
      return this.end;
    },
    get$left: function(receiver) {
      return this.left;
    }
  };
  H.LineSegment.prototype = {};
  H.LineBuilder.prototype = {
    get$alignOffset: function() {
      var textAlign,
        emptySpace = this.maxWidth - this.width,
        t1 = this.paragraph.paragraphStyle,
        textDirection = t1._textDirection;
      if (textDirection == null)
        textDirection = C.TextDirection_1;
      textAlign = t1._textAlign;
      switch (textAlign == null ? C.TextAlign_4 : textAlign) {
        case C.TextAlign_2:
          return emptySpace / 2;
        case C.TextAlign_1:
          return emptySpace;
        case C.TextAlign_4:
          return textDirection === C.TextDirection_0 ? emptySpace : 0;
        case C.TextAlign_5:
          return textDirection === C.TextDirection_0 ? 0 : emptySpace;
        default:
          return 0;
      }
    },
    getAdditionalWidthTo$1: function(newEnd) {
      var _this = this,
        t1 = _this.end.index,
        t2 = newEnd.indexWithoutTrailingSpaces;
      if (t1 === t2)
        return 0;
      return _this.widthIncludingSpace - _this.width + _this.spanometer._measure$2(t1, t2);
    },
    get$_isLastBoxAPlaceholder: function() {
      var t1 = this._boxes;
      if (t1.length === 0)
        return false;
      return C.JSArray_methods.get$last(t1) instanceof H.PlaceholderBox;
    },
    extendTo$1: function(newEnd) {
      var _this = this,
        t1 = _this.ascent,
        t2 = _this.spanometer,
        t3 = t2._currentRuler;
      _this.ascent = Math.max(t1, t3.get$alphabeticBaseline(t3));
      t3 = _this.descent;
      t1 = t2._currentRuler;
      t1 = t1.get$height(t1);
      t2 = t2._currentRuler;
      _this.descent = Math.max(t3, t1 - t2.get$alphabeticBaseline(t2));
      _this._addSegment$1(_this._createSegment$1(newEnd));
    },
    extendToEndOfText$0: function() {
      var t1, endOfText, t2, t3, _this = this;
      if (_this.end.type === C.LineBreakType_3)
        return;
      t1 = _this.paragraph.plainText.length;
      endOfText = new H.LineBreakResult(t1, t1, t1, C.LineBreakType_3);
      t1 = _this.spanometer;
      if (t1._currentSpan != null) {
        t2 = _this.ascent;
        t3 = t1._currentRuler;
        _this.ascent = Math.max(t2, t3.get$alphabeticBaseline(t3));
        t3 = _this.descent;
        t2 = t1._currentRuler;
        t2 = t2.get$height(t2);
        t1 = t1._currentRuler;
        _this.descent = Math.max(t3, t2 - t1.get$alphabeticBaseline(t1));
        _this._addSegment$1(_this._createSegment$1(endOfText));
      } else
        _this.end = endOfText;
    },
    _createSegment$1: function(segmentEnd) {
      var t3,
        segmentStart = this.end,
        t1 = this.spanometer,
        t2 = t1._currentSpan;
      t2.toString;
      t3 = segmentStart.index;
      return new H.LineSegment(t2, segmentStart, segmentEnd, t1._measure$2(t3, segmentEnd.indexWithoutTrailingSpaces), t1._measure$2(t3, segmentEnd.indexWithoutTrailingNewlines));
    },
    _addSegment$1: function(segment) {
      var t1, t2, _this = this;
      _this._segments.push(segment);
      t1 = segment.width;
      if (t1 !== 0) {
        t2 = _this.width;
        _this.width = t2 + (_this.widthIncludingSpace - t2 + t1);
      }
      _this.widthIncludingSpace = _this.widthIncludingSpace + segment.widthIncludingSpace;
      _this.end = segment.end;
    },
    _popSegment$0: function() {
      var t2, i, widthOfTrailingSpace, _this = this,
        t1 = _this._segments,
        poppedSegment = t1.pop();
      if (t1.length === 0) {
        _this.widthIncludingSpace = _this.width = 0;
        _this.end = _this.start;
      } else {
        _this.widthIncludingSpace = _this.widthIncludingSpace - poppedSegment.widthIncludingSpace;
        _this.end = C.JSArray_methods.get$last(t1).end;
        t2 = poppedSegment.width;
        if (t2 !== 0) {
          _this.width -= t2;
          i = t1.length - 1;
          widthOfTrailingSpace = 0;
          while (true) {
            t2 = i >= 0;
            if (!(t2 && t1[i].width === 0))
              break;
            widthOfTrailingSpace += t1[i].widthIncludingSpace;
            --i;
          }
          if (t2) {
            t1 = t1[i];
            widthOfTrailingSpace += t1.widthIncludingSpace - t1.width;
          }
          _this.width -= widthOfTrailingSpace;
        }
      }
      return poppedSegment;
    },
    forceBreak$3$allowEmpty$ellipsis: function(nextBreak, allowEmpty, ellipsis) {
      var t1, t2, breakingPoint, availableWidth, segmentToBreak, _this = this;
      if (ellipsis == null) {
        t1 = _this.widthIncludingSpace;
        t2 = nextBreak.indexWithoutTrailingSpaces;
        breakingPoint = _this.spanometer.forceBreak$4$allowEmpty$availableWidth(_this.end.index, t2, allowEmpty, _this.maxWidth - t1);
        if (breakingPoint === t2)
          _this.extendTo$1(nextBreak);
        else
          _this.extendTo$1(new H.LineBreakResult(breakingPoint, breakingPoint, breakingPoint, C.LineBreakType_1));
        return;
      }
      t1 = _this.spanometer;
      availableWidth = _this.maxWidth - H._measureSubstring(t1.context, ellipsis, 0, ellipsis.length, null);
      segmentToBreak = _this._createSegment$1(nextBreak);
      t2 = _this._segments;
      while (true) {
        if (!(t2.length !== 0 && _this.widthIncludingSpace > availableWidth))
          break;
        segmentToBreak = _this._popSegment$0();
      }
      t1.set$currentSpan(segmentToBreak.span);
      breakingPoint = t1.forceBreak$4$allowEmpty$availableWidth(segmentToBreak.start.index, segmentToBreak.end.index, allowEmpty, availableWidth - _this.widthIncludingSpace);
      _this.extendTo$1(new H.LineBreakResult(breakingPoint, breakingPoint, breakingPoint, C.LineBreakType_1));
      t1 = _this._boxes;
      while (true) {
        if (t1.length > 0) {
          t2 = C.JSArray_methods.get$last(t1);
          t2 = t2.get$end(t2).index > breakingPoint;
        } else
          t2 = false;
        if (!t2)
          break;
        t1.pop();
      }
    },
    forceBreak$2$allowEmpty: function(nextBreak, allowEmpty) {
      return this.forceBreak$3$allowEmpty$ellipsis(nextBreak, allowEmpty, null);
    },
    get$_boxStart: function() {
      var t1 = this._boxes;
      if (t1.length === 0)
        return this.start;
      t1 = C.JSArray_methods.get$last(t1);
      return t1.get$end(t1);
    },
    get$_boxLeft: function() {
      var t1 = this._boxes;
      if (t1.length === 0)
        return 0;
      t1 = C.JSArray_methods.get$last(t1);
      return t1.get$right(t1);
    },
    createBox$0: function() {
      var t2, t3, t4, t5, t6, t7, _this = this,
        boxStart = _this.get$_boxStart(),
        boxEnd = _this.end,
        t1 = boxStart.index;
      if (t1 === boxEnd.index)
        return;
      t2 = _this.spanometer;
      t3 = _this.get$_boxLeft();
      t4 = _this.paragraph.paragraphStyle._textDirection;
      if (t4 == null)
        t4 = C.TextDirection_1;
      t5 = t2._currentSpan;
      t5.toString;
      t6 = t2._currentRuler;
      t6 = t6.get$height(t6);
      t7 = t2._currentRuler;
      t7 = t7.get$alphabeticBaseline(t7);
      _this._boxes.push(new H.SpanBox(t2, t5, boxStart, boxEnd, t3, t2._measure$2(t1, boxEnd.indexWithoutTrailingNewlines), t6, t7, t4));
    },
    build$1$ellipsis: function(_, ellipsis) {
      var ellipsisWidth, t1, t2, endIndexWithoutNewlines, hardBreak, t3, t4, t5, t6, t7, _this = this;
      _this.createBox$0();
      ellipsisWidth = ellipsis == null ? 0 : H._measureSubstring(_this.spanometer.context, ellipsis, 0, ellipsis.length, null);
      t1 = _this.start.index;
      t2 = _this.end;
      endIndexWithoutNewlines = Math.max(t1, t2.indexWithoutTrailingNewlines);
      if (t2.type !== C.LineBreakType_3 && _this.get$_isLastBoxAPlaceholder())
        hardBreak = false;
      else {
        t2 = _this.end.type;
        hardBreak = t2 === C.LineBreakType_2 || t2 === C.LineBreakType_3;
      }
      t2 = _this.end;
      t3 = _this.width;
      t4 = _this.widthIncludingSpace;
      t5 = _this.get$alignOffset();
      t6 = _this.ascent;
      t7 = _this.descent;
      return new H.EngineLineMetrics(null, ellipsis, t1, t2.index, endIndexWithoutNewlines, _this._boxes, hardBreak, t6, t7, t6 + t7, t3 + ellipsisWidth, t4 + ellipsisWidth, t5, _this.accumulatedHeight + t6, _this.lineNumber);
    },
    build$0: function($receiver) {
      return this.build$1$ellipsis($receiver, null);
    },
    nextLine$0: function() {
      var _this = this,
        t1 = _this.end;
      return H.LineBuilder$_(_this.paragraph, _this.spanometer, _this.accumulatedHeight + (_this.ascent + _this.descent), _this.lineNumber + 1, _this.maxWidth, t1);
    },
    set$width: function(receiver, val) {
      return this.width = val;
    }
  };
  H.Spanometer.prototype = {
    set$currentSpan: function(span) {
      var t1, heightStyle, t2, t3, ruler, cssFontString, _this = this;
      if (span === _this._currentSpan)
        return;
      _this._currentSpan = span;
      t1 = span.style;
      heightStyle = t1.__EngineTextStyle_heightStyle;
      if (heightStyle == null) {
        t2 = t1.get$_effectiveFontFamily();
        t3 = t1._fontSize;
        if (t3 == null)
          t3 = 14;
        t3 = new H.TextHeightStyle(t2, t3, t1.__engine$_height, null);
        if (t1.__EngineTextStyle_heightStyle == null) {
          t1.__EngineTextStyle_heightStyle = t3;
          heightStyle = t3;
        } else {
          t2 = H.throwExpression(H.LateError$fieldADI("heightStyle"));
          heightStyle = t2;
        }
      }
      ruler = $.Spanometer__rulers.$index(0, heightStyle);
      if (ruler == null) {
        ruler = new H.TextHeightRuler(heightStyle, $.$get$Spanometer__rulerHost(), new H.TextDimensions(document.createElement("p")));
        $.Spanometer__rulers.$indexSet(0, heightStyle, ruler);
      }
      _this._currentRuler = ruler;
      cssFontString = t1.get$cssFontString();
      if (_this._cssFontString !== cssFontString) {
        _this._cssFontString = cssFontString;
        _this.context.font = cssFontString;
      }
    },
    forceBreak$4$allowEmpty$availableWidth: function(start, end, allowEmpty, availableWidth) {
      var high, low, mid, width;
      this._currentSpan.toString;
      if (availableWidth <= 0)
        return allowEmpty ? start : start + 1;
      high = end;
      low = start;
      do {
        mid = C.JSInt_methods._tdivFast$1(low + high, 2);
        width = this._measure$2(start, mid);
        if (width < availableWidth)
          low = mid;
        else {
          low = width > availableWidth ? low : mid;
          high = mid;
        }
      } while (high - low > 1);
      return low === start && !allowEmpty ? low + 1 : low;
    },
    _measure$2: function(start, end) {
      return H._measureSubstring(this.context, this.paragraph.plainText, start, end, this._currentSpan.style._letterSpacing);
    }
  };
  H.LineCharProperty.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.LineBreakType.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.LineBreakResult.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.index, _this.indexWithoutTrailingNewlines, _this.indexWithoutTrailingSpaces, _this.type, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof H.LineBreakResult && other.index === _this.index && other.indexWithoutTrailingNewlines === _this.indexWithoutTrailingNewlines && other.indexWithoutTrailingSpaces === _this.indexWithoutTrailingSpaces && other.type === _this.type;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.RulerHost.prototype = {
    RulerHost$0: function() {
      var t1 = this._rulerHost,
        t2 = t1.style;
      t2.position = "fixed";
      t2.visibility = "hidden";
      t2.overflow = "hidden";
      t2.top = "0";
      t2.left = "0";
      t2.width = "0";
      t2.height = "0";
      document.body.appendChild(t1);
      $._hotRestartListeners.push(this.get$dispose(this));
    },
    dispose$0: function(_) {
      J.remove$0$ax(this._rulerHost);
    }
  };
  H.RulerManager.prototype = {
    _scheduleRulerCacheCleanup$0: function() {
      if (!this._rulerCacheCleanupScheduled) {
        this._rulerCacheCleanupScheduled = true;
        P.scheduleMicrotask(new H.RulerManager__scheduleRulerCacheCleanup_closure(this));
      }
    },
    _evictAllRulers$0: function() {
      this._rulers.forEach$1(0, new H.RulerManager__evictAllRulers_closure());
      this._rulers = P.LinkedHashMap_LinkedHashMap$_empty(type$.ParagraphGeometricStyle, type$.ParagraphRuler);
    },
    cleanUpRulerCache$0: function() {
      var t2, sortedByUsage, i, ruler, t3, _this = this,
        t1 = $.$get$window().get$physicalSize();
      if (t1.get$isEmpty(t1)) {
        _this._evictAllRulers$0();
        return;
      }
      t1 = _this._rulers;
      t2 = _this.rulerCacheCapacity;
      if (t1.get$length(t1) > t2) {
        t1 = _this._rulers;
        t1 = t1.get$values(t1);
        sortedByUsage = P.List_List$of(t1, true, H._instanceType(t1)._eval$1("Iterable.E"));
        C.JSArray_methods.sort$1(sortedByUsage, new H.RulerManager_cleanUpRulerCache_closure());
        _this._rulers = P.LinkedHashMap_LinkedHashMap$_empty(type$.ParagraphGeometricStyle, type$.ParagraphRuler);
        for (i = 0; i < sortedByUsage.length; ++i) {
          ruler = sortedByUsage[i];
          ruler._hitCount = 0;
          if (i < t2)
            _this._rulers.$indexSet(0, ruler.style, ruler);
          else {
            t1 = ruler._singleLineHost;
            t3 = t1.parentNode;
            if (t3 != null)
              t3.removeChild(t1);
            t1 = ruler._minIntrinsicHost;
            t3 = t1.parentNode;
            if (t3 != null)
              t3.removeChild(t1);
            t1 = ruler._constrainedHost;
            t3 = t1.parentNode;
            if (t3 != null)
              t3.removeChild(t1);
            t1 = ruler.get$_textHeightRuler();
            t3 = t1.__TextHeightRuler__host;
            if (t3 == null) {
              t3 = t1._createHost$0();
              if (t1.__TextHeightRuler__host == null) {
                t1.__TextHeightRuler__host = t3;
                t1 = t3;
              } else
                t1 = H.throwExpression(H.LateError$fieldADI("_host"));
            } else
              t1 = t3;
            t3 = t1.parentNode;
            if (t3 != null)
              t3.removeChild(t1);
          }
        }
      }
    },
    findOrCreateRuler$1: function(style) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, elementStyle, _this = this, _s6_ = "hidden",
        _s8_ = "absolute",
        _s1_ = "0", _s4_ = "flex",
        _s14_ = "flex-direction",
        _s8_0 = "baseline",
        _s11_ = "align-items",
        ruler = _this._rulers.$index(0, style);
      if (ruler == null) {
        t1 = _this._rulers;
        t2 = document;
        t3 = t2.createElement("div");
        t4 = t2.createElement("p");
        t5 = new H.TextDimensions(t4);
        t6 = t2.createElement("div");
        t7 = t2.createElement("p");
        t8 = new H.TextDimensions(t7);
        t9 = t2.createElement("div");
        t2 = t2.createElement("p");
        t10 = new H.TextDimensions(t2);
        ruler = new H.ParagraphRuler(style, _this, t3, t5, t6, t8, t9, t10, P.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_String, type$.List_nullable_MeasurementResult), H.setRuntimeTypeInfo([], type$.JSArray_nullable_String));
        t11 = t3.style;
        t11.visibility = _s6_;
        t11.position = _s8_;
        t11.top = _s1_;
        t11.left = _s1_;
        t11.display = _s4_;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t11, C.CssStyleDeclaration_methods._browserPropertyName$1(t11, _s14_), "row", "");
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t11, C.CssStyleDeclaration_methods._browserPropertyName$1(t11, _s11_), _s8_0, "");
        t11.margin = _s1_;
        t11.border = _s1_;
        t11.padding = _s1_;
        t5.applyStyle$1(style);
        t11 = t4.style;
        t11.whiteSpace = "pre";
        t3.appendChild(t4);
        t5._cachedBoundingClientRect = null;
        t4 = _this._rulerHost;
        t4.appendChild(t3);
        t3 = t6.style;
        t3.visibility = _s6_;
        t3.position = _s8_;
        t3.top = _s1_;
        t3.left = _s1_;
        t3.display = _s4_;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s14_), "row", "");
        t3.margin = _s1_;
        t3.border = _s1_;
        t3.padding = _s1_;
        t8.applyStyle$1(style);
        t3 = t7.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s4_), _s1_, "");
        t3.display = "inline";
        t3.whiteSpace = "pre-line";
        t6.appendChild(t7);
        t4.appendChild(t6);
        t3 = t9.style;
        t3.visibility = _s6_;
        t3.position = _s8_;
        t3.top = _s1_;
        t3.left = _s1_;
        t3.display = _s4_;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s14_), "row", "");
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t3, C.CssStyleDeclaration_methods._browserPropertyName$1(t3, _s11_), _s8_0, "");
        t3.margin = _s1_;
        t3.border = _s1_;
        t3.padding = _s1_;
        t10.applyStyle$1(style);
        elementStyle = t2.style;
        elementStyle.display = "block";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "overflow-wrap"), "break-word", "");
        if (style.ellipsis != null) {
          elementStyle.overflow = _s6_;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "text-overflow"), "ellipsis", "");
        }
        t9.appendChild(t2);
        t10._cachedBoundingClientRect = null;
        t4.appendChild(t9);
        t1.$indexSet(0, style, ruler);
        _this._scheduleRulerCacheCleanup$0();
      }
      ++ruler._hitCount;
      return ruler;
    }
  };
  H.RulerManager__scheduleRulerCacheCleanup_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._rulerCacheCleanupScheduled = false;
      t1.cleanUpRulerCache$0();
    },
    $signature: 0
  };
  H.RulerManager__evictAllRulers_closure.prototype = {
    call$2: function(style, ruler) {
      ruler.dispose$0(0);
    },
    $signature: 169
  };
  H.RulerManager_cleanUpRulerCache_closure.prototype = {
    call$2: function(a, b) {
      return b._hitCount - a._hitCount;
    },
    $signature: 177
  };
  H.TextMeasurementService.prototype = {
    measure$2: function(_, paragraph, constraints) {
      var ruler = $.TextMeasurementService_rulerManager.findOrCreateRuler$1(paragraph._geometricStyle),
        result = ruler.cacheLookup$2(paragraph, constraints);
      if (result != null)
        return result;
      result = this._doMeasure$3(paragraph, constraints, ruler);
      ruler.cacheMeasurement$2(paragraph, result);
      return result;
    }
  };
  H.DomTextMeasurementService.prototype = {
    _doMeasure$3: function(paragraph, constraints, ruler) {
      var plainText, t1, t2, t3, width, t4, t5, alphabeticBaseline, height, maxIntrinsicWidth, alignOffset, lines, result, naturalHeight, maxLines, lineHeight, _null = null;
      ruler.__engine$_paragraph = paragraph;
      plainText = paragraph._plainText;
      ruler.measureAsSingleLine$0();
      t1 = ruler.minIntrinsicDimensions;
      t2 = ruler.__engine$_paragraph;
      t2.toString;
      t1.updateText$2(t2, ruler.style);
      ruler.measureWithConstraints$1(constraints);
      t2 = plainText == null;
      t3 = t2 ? _null : C.JSString_methods.contains$1(plainText, "\n");
      if (t3 !== true) {
        t3 = ruler.singleLineDimensions._readAndCacheMetrics$0().width;
        t3.toString;
        t3 = t3 <= constraints.width;
      } else
        t3 = false;
      width = constraints.width;
      t4 = ruler.singleLineDimensions;
      if (t3) {
        t1 = t1._readAndCacheMetrics$0().width;
        t1.toString;
        t3 = t4._readAndCacheMetrics$0().width;
        t3.toString;
        t5 = ruler.get$_textHeightRuler();
        alphabeticBaseline = t5.get$alphabeticBaseline(t5);
        height = t4.get$height(t4);
        maxIntrinsicWidth = H.DomTextMeasurementService__applySubPixelRoundingHack(t1, t3);
        if (!t2) {
          alignOffset = H._calculateAlignOffsetForLine(maxIntrinsicWidth, width, paragraph);
          t2 = plainText.length;
          lines = H.setRuntimeTypeInfo([H.EngineLineMetrics$withText(plainText, t2, H._excludeTrailing(plainText, 0, t2, H._engine___newlinePredicate$closure()), true, alignOffset, 0, 0, maxIntrinsicWidth, maxIntrinsicWidth)], type$.JSArray_EngineLineMetrics);
        } else
          lines = _null;
        result = H.MeasurementResult$(width, alphabeticBaseline, height, alphabeticBaseline * 1.1662499904632568, true, height, lines, maxIntrinsicWidth, t1, height, ruler.measurePlaceholderBoxes$0(), paragraph._textAlign, paragraph._textDirection, width);
      } else {
        t1 = t1._readAndCacheMetrics$0().width;
        t1.toString;
        t4 = t4._readAndCacheMetrics$0().width;
        t4.toString;
        t2 = ruler.get$_textHeightRuler();
        alphabeticBaseline = t2.get$alphabeticBaseline(t2);
        t2 = ruler.constrainedDimensions;
        naturalHeight = t2.get$height(t2);
        maxLines = paragraph._geometricStyle.maxLines;
        if (maxLines == null) {
          lineHeight = _null;
          height = naturalHeight;
        } else {
          t2 = ruler.get$_textHeightRuler();
          lineHeight = t2.get$height(t2);
          height = Math.min(naturalHeight, maxLines * lineHeight);
        }
        result = H.MeasurementResult$(width, alphabeticBaseline, height, alphabeticBaseline * 1.1662499904632568, false, lineHeight, _null, H.DomTextMeasurementService__applySubPixelRoundingHack(t1, t4), t1, naturalHeight, ruler.measurePlaceholderBoxes$0(), paragraph._textAlign, paragraph._textDirection, width);
      }
      ruler.didMeasure$0();
      return result;
    },
    measureSubstringWidth$3: function(paragraph, start, end) {
      var text,
        style = paragraph._geometricStyle,
        ruler = $.TextMeasurementService_rulerManager.findOrCreateRuler$1(style),
        t1 = paragraph._plainText;
      t1.toString;
      text = C.JSString_methods.substring$2(t1, start, end);
      ruler.__engine$_paragraph = new H.DomParagraph(type$.HtmlElement._as(paragraph._paragraphElement.cloneNode(true)), style, text, paragraph._paint, paragraph._textAlign, paragraph._textDirection, paragraph._background, paragraph.placeholderCount);
      ruler.measureAsSingleLine$0();
      ruler.didMeasure$0();
      t1 = ruler.singleLineDimensions._readAndCacheMetrics$0().width;
      t1.toString;
      return t1;
    },
    getTextPositionForOffset$3: function(paragraph, constraints, offset) {
      var position,
        ruler = $.TextMeasurementService_rulerManager.findOrCreateRuler$1(paragraph._geometricStyle);
      ruler.__engine$_paragraph = paragraph;
      constraints.toString;
      position = ruler.hitTest$2(constraints, offset);
      ruler.didMeasure$0();
      return new P.TextPosition(position, C.TextAffinity_1);
    },
    get$isCanvas: function() {
      return false;
    }
  };
  H.CanvasTextMeasurementService.prototype = {
    _doMeasure$3: function(paragraph, constraints, ruler) {
      var style, t2, t3, linesCalculator, maxIntrinsicCalculator, t4, reachedEndOfText, i, t5, t6, brk, chunkEnd, width, alphabeticBaseline, lineCount, lineHeight, naturalHeight, maxLines, height,
        t1 = paragraph._plainText;
      t1.toString;
      style = paragraph._geometricStyle;
      t2 = this._canvasContext;
      t2.font = style.get$cssFontString();
      t3 = constraints.width;
      linesCalculator = new H.LinesCalculator(t2, paragraph, t3, H.setRuntimeTypeInfo([], type$.JSArray_EngineLineMetrics), C.LineBreakResult_Z8h, C.LineBreakResult_Z8h);
      maxIntrinsicCalculator = new H.MaxIntrinsicCalculator(t2, t1, style);
      for (t4 = style.letterSpacing, reachedEndOfText = false, i = 0, t5 = 0, t6 = 0; !reachedEndOfText; t6 = chunkEnd, i = t6) {
        brk = H.nextLineBreak(t1, i, null);
        linesCalculator.update$1(0, brk);
        chunkEnd = brk.index;
        width = H._measureSubstring(t2, t1, t6, brk.indexWithoutTrailingSpaces, t4);
        if (width > t5)
          t5 = width;
        maxIntrinsicCalculator.update$1(0, brk);
        if (brk.type === C.LineBreakType_3)
          reachedEndOfText = true;
      }
      t1 = ruler.get$_textHeightRuler();
      alphabeticBaseline = t1.get$alphabeticBaseline(t1);
      t1 = linesCalculator.lines;
      lineCount = t1.length;
      t2 = ruler.get$_textHeightRuler();
      lineHeight = t2.get$height(t2);
      naturalHeight = lineCount * lineHeight;
      maxLines = style.maxLines;
      height = maxLines == null ? naturalHeight : Math.min(lineCount, maxLines) * lineHeight;
      return H.MeasurementResult$(t3, alphabeticBaseline, height, alphabeticBaseline * 1.1662499904632568, lineCount === 1, lineHeight, t1, maxIntrinsicCalculator.value, t5, naturalHeight, H.setRuntimeTypeInfo([], type$.JSArray_TextBox), paragraph._textAlign, paragraph._textDirection, t3);
    },
    measureSubstringWidth$3: function(paragraph, start, end) {
      var style, t2,
        t1 = paragraph._plainText;
      t1.toString;
      style = paragraph._geometricStyle;
      t2 = this._canvasContext;
      t2.font = style.get$cssFontString();
      return H._measureSubstring(t2, t1, start, end, style.letterSpacing);
    },
    getTextPositionForOffset$3: function(paragraph, constraints, offset) {
      return C.TextPosition_0_TextAffinity_1;
    },
    get$isCanvas: function() {
      return true;
    }
  };
  H.LinesCalculator.prototype = {
    update$1: function(_, brk) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, isLastLine, breakingPoint, widthOfResultingLine, alignOffset, _this = this,
        chunkEnd = brk.index,
        chunkEndWithoutNewlines = brk.indexWithoutTrailingNewlines,
        chunkEndWithoutSpace = brk.indexWithoutTrailingSpaces;
      for (t1 = _this.__engine$_paragraph, t2 = t1._geometricStyle, t3 = t2.ellipsis, t4 = t3 != null, t5 = _this.__engine$_maxWidth, t6 = _this._canvasContext, t7 = t1._plainText, t8 = t2.letterSpacing, t2 = t2.maxLines, t9 = t2 == null, t10 = _this.lines; !_this._reachedMaxLines;) {
        t11 = _this._lastTakenBreak;
        t7.toString;
        if (H._measureSubstring(t6, t7, t11.index, chunkEndWithoutSpace, t8) <= t5)
          break;
        t11 = _this._lastBreak;
        t12 = _this._lastTakenBreak.index;
        isLastLine = t4 && t9 || t10.length + 1 === t2;
        _this._reachedMaxLines = isLastLine;
        if (isLastLine && t4) {
          t11 = _this._cachedEllipsisWidth;
          if (t11 == null)
            t11 = _this._cachedEllipsisWidth = C.JSNumber_methods.round$0(H._asDouble(t6.measureText(t3).width) * 100) / 100;
          breakingPoint = _this.forceBreakSubstring$3$end$maxWidth$start(chunkEndWithoutSpace, t5 - t11, _this._lastTakenBreak.index);
          t11 = H._measureSubstring(t6, t7, _this._lastTakenBreak.index, breakingPoint, t8);
          t12 = _this._cachedEllipsisWidth;
          widthOfResultingLine = t11 + (t12 == null ? _this._cachedEllipsisWidth = C.JSNumber_methods.round$0(H._asDouble(t6.measureText(t3).width) * 100) / 100 : t12);
          alignOffset = H._calculateAlignOffsetForLine(widthOfResultingLine, t5, t1);
          t11 = _this._lastTakenBreak.index;
          t10.push(new H.EngineLineMetrics(C.JSString_methods.substring$2(t7, t11, breakingPoint) + t3, null, t11, chunkEnd, chunkEndWithoutNewlines, null, false, 1 / 0, 1 / 0, 1 / 0, widthOfResultingLine, widthOfResultingLine, alignOffset, 1 / 0, t10.length));
        } else if (t11.index === t12) {
          breakingPoint = _this.forceBreakSubstring$3$end$maxWidth$start(chunkEndWithoutSpace, t5, t12);
          if (breakingPoint === chunkEndWithoutSpace)
            break;
          _this._addLineBreak$1(new H.LineBreakResult(breakingPoint, breakingPoint, breakingPoint, C.LineBreakType_0));
        } else
          _this._addLineBreak$1(t11);
      }
      if (_this._reachedMaxLines)
        return;
      t1 = brk.type;
      if (t1 === C.LineBreakType_2 || t1 === C.LineBreakType_3)
        _this._addLineBreak$1(brk);
      _this._lastBreak = brk;
    },
    _addLineBreak$1: function(brk) {
      var t5, t6, _this = this,
        t1 = _this.lines,
        lineNumber = t1.length,
        lineWidth = _this.measureSubstring$2(_this._lastTakenBreak.index, brk.indexWithoutTrailingSpaces),
        t2 = brk.indexWithoutTrailingNewlines,
        lineWidthWithTrailingSpaces = _this.measureSubstring$2(_this._lastTakenBreak.index, t2),
        t3 = _this.__engine$_paragraph,
        alignOffset = H._calculateAlignOffsetForLine(lineWidth, _this.__engine$_maxWidth, t3),
        t4 = t3._plainText;
      t4.toString;
      t5 = _this._lastTakenBreak.index;
      t4 = C.JSString_methods.substring$2(t4, t5, t2);
      t6 = brk.type;
      t6 = t6 === C.LineBreakType_2 || t6 === C.LineBreakType_3;
      t1.push(H.EngineLineMetrics$withText(t4, brk.index, t2, t6, alignOffset, lineNumber, t5, lineWidth, lineWidthWithTrailingSpaces));
      _this._lastTakenBreak = _this._lastBreak = brk;
      if (t1.length === t3._geometricStyle.maxLines)
        _this._reachedMaxLines = true;
    },
    measureSubstring$2: function(start, end) {
      var t1 = this.__engine$_paragraph,
        t2 = t1._plainText;
      t2.toString;
      return H._measureSubstring(this._canvasContext, t2, start, end, t1._geometricStyle.letterSpacing);
    },
    forceBreakSubstring$3$end$maxWidth$start: function(end, maxWidth, start) {
      var mid, width,
        low = this.__engine$_paragraph._geometricStyle.ellipsis != null ? start : start + 1,
        high = end;
      do {
        mid = C.JSInt_methods._tdivFast$1(low + high, 2);
        width = this.measureSubstring$2(start, mid);
        if (width < maxWidth)
          low = mid;
        else {
          low = width > maxWidth ? low : mid;
          high = mid;
        }
      } while (high - low > 1);
      return low;
    }
  };
  H.MaxIntrinsicCalculator.prototype = {
    update$1: function(_, brk) {
      var lineWidth, _this = this,
        t1 = brk.type;
      if (!(t1 === C.LineBreakType_2 || t1 === C.LineBreakType_3))
        return;
      lineWidth = H._measureSubstring(_this._canvasContext, _this.__engine$_text, _this._lastHardLineEnd, brk.indexWithoutTrailingNewlines, _this._style.letterSpacing);
      if (lineWidth > _this.value)
        _this.value = lineWidth;
      _this._lastHardLineEnd = brk.index;
    }
  };
  H.TextPaintService.prototype = {
    paint$2: function(canvas, offset) {
      var t1, _i, line, t2, t3, _i0,
        lines = this.paragraph.get$_layoutService().lines;
      for (t1 = lines.length, _i = 0; _i < lines.length; lines.length === t1 || (0, H.throwConcurrentModificationError)(lines), ++_i) {
        line = lines[_i];
        for (t2 = line.boxes, t3 = t2.length, _i0 = 0; _i0 < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i0)
          this._paintBox$4(canvas, offset, line, t2[_i0]);
      }
    },
    _paintBox$4: function(canvas, offset, line, box) {
      var t1, background, t2, foreground, paint, t3, t4, t5, x, y, text, letterSpacing, len, charX, i, char, ctx, ellipsis;
      if (box instanceof H.SpanBox) {
        t1 = box.span.style;
        background = type$.nullable_SurfacePaint._as(t1._background);
        if (background != null) {
          t2 = box.intersect$3(line, box.start.index, box.end.index);
          t2 = new P.Rect(t2.left, t2.top, t2.right, t2.bottom).shift$1(offset);
          background._frozen = true;
          canvas.drawRect$2(0, t2, background._paintData);
        }
        foreground = t1._foreground;
        if (foreground != null) {
          type$.SurfacePaint._as(foreground);
          paint = foreground;
        } else {
          t2 = H._detectRenderer();
          t2 = t2 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
          t3 = t1._color;
          t3.toString;
          t2.set$color(0, t3);
          type$.SurfacePaint._as(t2);
          paint = t2;
        }
        canvas.setCssFont$1(t1.get$cssFontString());
        t2 = paint._frozen = true;
        t3 = paint._paintData;
        t4 = canvas._canvasPool;
        t4.get$contextHandle().setUpPaint$2(t3, null);
        t3 = offset._dx + line.left;
        t5 = box.left;
        x = t3 + t5;
        y = offset._dy + line.baseline;
        text = C.JSString_methods.substring$2(this.paragraph.plainText, box.start.index, box.end.indexWithoutTrailingNewlines);
        letterSpacing = t1._letterSpacing;
        if (letterSpacing != null ? letterSpacing === 0 : t2)
          canvas.fillText$4$shadows(0, text, x, y, t1._shadows);
        else {
          len = text.length;
          for (t1 = t1._shadows, charX = x, i = 0; i < len; ++i) {
            char = text[i];
            canvas.fillText$4$shadows(0, char, C.JSNumber_methods.roundToDouble$0(charX), y, t1);
            ctx = t4.__engine$_context;
            if (ctx == null) {
              t4._createCanvas$0();
              t2 = t4.__engine$_context;
              t2.toString;
              ctx = t2;
            }
            t2 = ctx.measureText(char).width;
            t2.toString;
            charX += letterSpacing + t2;
          }
        }
        ellipsis = line.ellipsis;
        if (ellipsis != null) {
          t1 = line.boxes;
          t1.toString;
          t1 = box === C.JSArray_methods.get$last(t1);
        } else
          t1 = false;
        if (t1)
          canvas.fillText$3(0, ellipsis, t3 + (t5 + box.width), y);
        t4.get$contextHandle().tearDownPaint$0();
      }
    }
  };
  H.EngineLineMetrics.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.displayText, _this.startIndex, _this.endIndex, _this.hardBreak, _this.ascent, _this.descent, 1 / 0, _this.height, _this.width, _this.left, _this.baseline, _this.lineNumber, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof H.EngineLineMetrics)
        if (other.displayText == _this.displayText)
          if (other.startIndex === _this.startIndex)
            if (other.endIndex === _this.endIndex)
              if (other.hardBreak === _this.hardBreak)
                if (other.ascent === _this.ascent)
                  if (other.descent === _this.descent)
                    t1 = other.height === _this.height && other.width === _this.width && other.left === _this.left && other.baseline === _this.baseline && other.lineNumber === _this.lineNumber;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.DomParagraph.prototype = {
    get$_hasLineMetrics: function() {
      var t1 = this._measurementResult;
      return (t1 == null ? null : t1.lines) != null;
    },
    get$width: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.width;
      return t1 == null ? -1 : t1;
    },
    get$height: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.height;
      return t1 == null ? 0 : t1;
    },
    get$_lineHeight: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.lineHeight;
      return t1 == null ? 0 : t1;
    },
    get$longestLine: function() {
      var t1, t2, maxWidth, _i, maxWidth0;
      if (this.get$_hasLineMetrics()) {
        for (t1 = this._measurementResult.lines, t2 = t1.length, maxWidth = 0, _i = 0; _i < t2; ++_i) {
          maxWidth0 = t1[_i].width;
          if (maxWidth < maxWidth0)
            maxWidth = maxWidth0;
        }
        return maxWidth;
      }
      return 0;
    },
    get$maxIntrinsicWidth: function() {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.maxIntrinsicWidth;
      return t1 == null ? 0 : t1;
    },
    get$alphabeticBaseline: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.alphabeticBaseline;
      return t1 == null ? -1 : t1;
    },
    get$ideographicBaseline: function(_) {
      var t1 = this._measurementResult;
      t1 = t1 == null ? null : t1.ideographicBaseline;
      return t1 == null ? -1 : t1;
    },
    get$didExceedMaxLines: function(_) {
      return this._didExceedMaxLines;
    },
    layout$1: function(_, constraints) {
      var t2, _this = this,
        t1 = Math.floor(constraints.width);
      constraints = new P.ParagraphConstraints(t1);
      if (constraints.$eq(0, _this._lastUsedConstraints))
        return;
      t2 = H.TextMeasurementService_forParagraph(_this).measure$2(0, _this, constraints);
      _this._measurementResult = t2;
      _this._lastUsedConstraints = constraints;
      if (_this._geometricStyle.maxLines != null) {
        t2 = t2.naturalHeight;
        _this._didExceedMaxLines = t2 > _this.get$height(_this);
      } else
        _this._didExceedMaxLines = false;
      if (_this._measurementResult.isSingleLine)
        switch (_this._textAlign) {
          case C.TextAlign_2:
            _this._alignOffset = (t1 - _this.get$maxIntrinsicWidth()) / 2;
            break;
          case C.TextAlign_1:
            _this._alignOffset = t1 - _this.get$maxIntrinsicWidth();
            break;
          case C.TextAlign_4:
            _this._alignOffset = _this._textDirection === C.TextDirection_0 ? t1 - _this.get$maxIntrinsicWidth() : 0;
            break;
          case C.TextAlign_5:
            _this._alignOffset = _this._textDirection === C.TextDirection_1 ? t1 - _this.get$maxIntrinsicWidth() : 0;
            break;
          default:
            _this._alignOffset = 0;
            break;
        }
    },
    get$hasArbitraryPaint: function() {
      return this._geometricStyle.ellipsis != null;
    },
    paint$2: function(canvas, offset) {
      var t1, t2, t3, t4, y, len, i, _this = this,
        background = _this._background;
      if (background != null) {
        t1 = offset._dx;
        t2 = offset._dy;
        t3 = _this.get$width(_this);
        t4 = _this.get$height(_this);
        background._frozen = true;
        canvas.drawRect$2(0, new P.Rect(t1, t2, t1 + t3, t2 + t4), background._paintData);
      }
      t1 = _this._measurementResult.lines;
      t1.toString;
      canvas.setCssFont$1(_this._geometricStyle.get$cssFontString());
      t2 = _this._paint;
      t2._frozen = true;
      t2 = t2._paintData;
      t3 = canvas._canvasPool;
      t3.get$contextHandle().setUpPaint$2(t2, null);
      y = offset._dy + _this.get$alphabeticBaseline(_this);
      len = t1.length;
      for (t2 = offset._dx, i = 0; i < len; ++i) {
        _this._paintLine$4(canvas, t1[i], t2, y);
        t4 = _this._measurementResult;
        t4 = t4 == null ? null : t4.lineHeight;
        y += t4 == null ? 0 : t4;
      }
      t3.get$contextHandle().tearDownPaint$0();
    },
    _paintLine$4: function(canvas, line, x, y) {
      var letterSpacing, t1, t2, len, i, char, ctx, t3;
      x += line.left;
      letterSpacing = this._geometricStyle.letterSpacing;
      t1 = letterSpacing == null || letterSpacing === 0;
      t2 = line.displayText;
      if (t1) {
        t2.toString;
        canvas.fillText$3(0, t2, x, y);
      } else {
        len = t2.length;
        for (t1 = canvas._canvasPool, i = 0; i < len; ++i) {
          char = t2[i];
          canvas.fillText$3(0, char, x, y);
          ctx = t1.__engine$_context;
          if (ctx == null) {
            t1._createCanvas$0();
            t3 = t1.__engine$_context;
            t3.toString;
            ctx = t3;
          }
          t3 = ctx.measureText(char).width;
          t3.toString;
          x += letterSpacing + t3;
        }
      }
    },
    toDomElement$0: function() {
      var style, _this = this,
        paragraphElement = type$.HtmlElement._as(_this._paragraphElement.cloneNode(true)),
        paragraphStyle = paragraphElement.style,
        t1 = H.S(_this.get$height(_this)) + "px";
      paragraphStyle.height = t1;
      t1 = H.S(_this.get$width(_this)) + "px";
      paragraphStyle.width = t1;
      paragraphStyle.position = "absolute";
      paragraphStyle.whiteSpace = "pre-wrap";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(paragraphStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(paragraphStyle, "overflow-wrap"), "break-word", "");
      paragraphStyle.overflow = "hidden";
      style = _this._geometricStyle;
      if (style.ellipsis != null) {
        t1 = style.maxLines;
        t1 = t1 == null || t1 === 1;
      } else
        t1 = false;
      if (t1) {
        paragraphStyle.whiteSpace = "pre";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(paragraphStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(paragraphStyle, "text-overflow"), "ellipsis", "");
      }
      return paragraphElement;
    },
    getBoxesForPlaceholders$0: function() {
      return this._measurementResult.placeholderBoxes;
    },
    get$drawOnCanvas: function() {
      var t1, _this = this;
      if (!_this.get$_hasLineMetrics())
        return false;
      if (H.TextMeasurementService_forParagraph(_this).get$isCanvas() ? true : _this._geometricStyle.ellipsis == null) {
        t1 = _this._geometricStyle;
        t1 = t1.decoration == null && t1.wordSpacing == null && true;
      } else
        t1 = false;
      return t1;
    },
    get$isLaidOut: function() {
      return this._measurementResult != null;
    },
    getBoxesForRange$4$boxHeightStyle$boxWidthStyle: function(start, end, boxHeightStyle, boxWidthStyle) {
      var t1, $length, t2, t3, startLine, endLine, boxes, i, t4, t5, widthBeforeBox, widthAfterBox, t6, t7, $top, _this = this;
      if (start === end || start < 0 || end < 0)
        return H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      t1 = _this._plainText;
      if (t1 == null)
        return H.setRuntimeTypeInfo([new P.TextBox(0, 0, 0, _this.get$_lineHeight(_this), _this._textDirection)], type$.JSArray_TextBox);
      $length = t1.length;
      if (start > $length || end > $length)
        return H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      if (!_this.get$_hasLineMetrics()) {
        H.TextMeasurementService_forParagraph(_this);
        t2 = _this._lastUsedConstraints;
        t2.toString;
        t3 = _this._alignOffset;
        return $.TextMeasurementService_rulerManager.findOrCreateRuler$1(_this._geometricStyle).measureBoxesForRange$6$alignOffset$end$start$textDirection(t1, t2, t3, end, start, _this._textDirection);
      }
      t1 = _this._measurementResult.lines;
      t1.toString;
      if (start >= C.JSArray_methods.get$last(t1).endIndex)
        return H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      startLine = _this._getLineForIndex$1(start);
      endLine = _this._getLineForIndex$1(end);
      if (end === endLine.startIndex)
        endLine = t1[endLine.lineNumber - 1];
      boxes = H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      for (i = startLine.lineNumber, t2 = endLine.lineNumber, t3 = _this._textDirection; i <= t2; ++i) {
        t4 = t1[i];
        t5 = t4.startIndex;
        widthBeforeBox = start <= t5 ? 0 : H.TextMeasurementService_forParagraph(_this).measureSubstringWidth$3(_this, t5, start);
        t5 = t4.endIndexWithoutNewlines;
        widthAfterBox = end >= t5 ? 0 : H.TextMeasurementService_forParagraph(_this).measureSubstringWidth$3(_this, end, t5);
        t5 = _this._measurementResult;
        t6 = t5 == null;
        t7 = t6 ? null : t5.lineHeight;
        if (t7 == null)
          t7 = 0;
        $top = t4.lineNumber * t7;
        t7 = t4.left;
        t5 = t6 ? null : t5.lineHeight;
        if (t5 == null)
          t5 = 0;
        boxes.push(new P.TextBox(t7 + widthBeforeBox, $top, t7 + t4.widthWithTrailingSpaces - widthAfterBox, $top + t5, t3));
      }
      return boxes;
    },
    getPositionForOffset$1: function(offset) {
      var t1, t2, lineNumber, lineMetrics, lineLeft, dx, instance, low, high, low0, current, width, _this = this,
        lines = _this._measurementResult.lines;
      if (!_this.get$_hasLineMetrics())
        return H.TextMeasurementService_forParagraph(_this).getTextPositionForOffset$3(_this, _this._lastUsedConstraints, offset);
      t1 = offset._dy;
      if (t1 < 0)
        return new P.TextPosition(0, C.TextAffinity_1);
      t2 = _this._measurementResult.lineHeight;
      t2.toString;
      lineNumber = C.JSNumber_methods.$tdiv(t1, t2);
      if (lineNumber >= lines.length)
        return new P.TextPosition(_this._plainText.length, C.TextAffinity_0);
      lineMetrics = lines[lineNumber];
      lineLeft = lineMetrics.left;
      t1 = offset._dx;
      if (t1 <= lineLeft)
        return new P.TextPosition(lineMetrics.startIndex, C.TextAffinity_1);
      if (t1 >= lineLeft + lineMetrics.width)
        return new P.TextPosition(lineMetrics.endIndexWithoutNewlines, C.TextAffinity_0);
      dx = t1 - lineLeft;
      instance = H.TextMeasurementService_forParagraph(_this);
      low = lineMetrics.startIndex;
      high = lineMetrics.endIndexWithoutNewlines;
      low0 = low;
      do {
        current = C.JSInt_methods._tdivFast$1(low0 + high, 2);
        width = instance.measureSubstringWidth$3(_this, low, current);
        if (width < dx)
          low0 = current;
        else {
          low0 = width > dx ? low0 : current;
          high = current;
        }
      } while (high - low0 > 1);
      if (low0 === high)
        return new P.TextPosition(high, C.TextAffinity_0);
      if (dx - instance.measureSubstringWidth$3(_this, low, low0) < instance.measureSubstringWidth$3(_this, low, high) - dx)
        return new P.TextPosition(low0, C.TextAffinity_1);
      else
        return new P.TextPosition(high, C.TextAffinity_0);
    },
    _getLineForIndex$1: function(index) {
      var t1, i, line,
        lines = this._measurementResult.lines;
      for (t1 = lines.length, i = 0; i < t1; ++i) {
        line = lines[i];
        if (index >= line.startIndex && index < line.endIndex)
          return line;
      }
      return C.JSArray_methods.get$last(lines);
    },
    $isEngineParagraph: 1
  };
  H.EngineParagraphStyle.prototype = {
    get$_effectiveFontFamily: function() {
      var fontFamily = this._fontFamily;
      if (fontFamily == null || fontFamily.length === 0)
        return "sans-serif";
      return fontFamily;
    },
    get$_lineHeight: function(_) {
      var t2,
        t1 = this._strutStyle;
      if (t1 != null)
        t2 = false;
      else
        t2 = true;
      if (t2)
        return this.__engine$_height;
      t1 = t1.__engine$_height;
      t2 = this.__engine$_height;
      if (t2 == null)
        t2 = 0;
      return Math.max(H.checkNum(t1), t2);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof H.EngineParagraphStyle)
        if (other._textAlign == _this._textAlign)
          if (other._textDirection == _this._textDirection)
            if (other._fontWeight == _this._fontWeight)
              t1 = other._maxLines == _this._maxLines && other._fontFamily == _this._fontFamily && other._fontSize == _this._fontSize && other.__engine$_height == _this.__engine$_height && J.$eq$(other._textHeightBehavior, _this._textHeightBehavior) && other._ellipsis == _this._ellipsis && J.$eq$(other._locale, _this._locale);
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this._textAlign, _this._textDirection, _this._fontWeight, _this._fontStyle, _this._maxLines, _this._fontFamily, _this._fontSize, _this.__engine$_height, _this._textHeightBehavior, _this._ellipsis, _this._locale, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.EngineTextStyle.prototype = {
    get$_effectiveFontFamily: function() {
      var t1 = this._fontFamily;
      if (t1.length === 0)
        return "sans-serif";
      return t1;
    },
    get$cssFontString: function() {
      var _this = this,
        t1 = _this._cssFontString;
      return t1 == null ? _this._cssFontString = H._buildCssFontString(_this.get$_effectiveFontFamily(), _this._fontSize, _this._fontStyle, _this._fontWeight) : t1;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof H.EngineTextStyle)
        if (J.$eq$(other._color, _this._color))
          if (J.$eq$(other._decoration, _this._decoration))
            if (J.$eq$(other._decorationColor, _this._decorationColor))
              if (other._decorationStyle == _this._decorationStyle)
                if (other._fontWeight == _this._fontWeight)
                  t1 = other._textBaseline == _this._textBaseline && other._fontFamily === _this._fontFamily && other._fontSize == _this._fontSize && other._letterSpacing == _this._letterSpacing && other._wordSpacing == _this._wordSpacing && other.__engine$_height == _this.__engine$_height && J.$eq$(other._locale, _this._locale) && other._background == _this._background && other._foreground == _this._foreground && H._listEquals(other._shadows, _this._shadows) && H._listEquals(other._fontFamilyFallback, _this._fontFamilyFallback);
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this._color, _this._decoration, _this._decorationColor, _this._decorationStyle, _this._decorationThickness, _this._fontWeight, _this._fontStyle, _this._textBaseline, _this._fontFamily, _this._fontFamilyFallback, _this._fontSize, _this._letterSpacing, _this._wordSpacing, _this.__engine$_height, _this._locale, _this._background, _this._foreground, _this._shadows, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.DomParagraphBuilder.prototype = {
    pushStyle$1: function(_, style) {
      this._ops.push(style);
    },
    get$placeholderScales: function() {
      return this._placeholderScales;
    },
    pop$0: function(_) {
      this._ops.push($.$get$DomParagraphBuilder__paragraphBuilderPop());
    },
    addText$1: function(_, text) {
      this._ops.push(text);
    },
    build$0: function(_) {
      var t1 = this._tryBuildPlainText$0();
      return t1 == null ? this._buildRichText$0() : t1;
    },
    _tryBuildPlainText$0: function() {
      var fontSize, textAlign, t2, textAlign0, textDirection, t3, textDirection0, locale, t4, t5, foreground, background, height, wordSpacing, letterSpacing, fontFamilyFallback, textBaseline, decorationThickness, decorationStyle, decorationColor, decoration, color, i, style, color0, decoration0, decorationColor0, decorationStyle0, decorationThickness0, fontWeight0, textBaseline0, fontFamilyFallback0, fontSize0, letterSpacing0, wordSpacing0, height0, locale0, background0, foreground0, cumulativeStyle, paint, plainTextBuffer, plainText, t6, _this = this, _null = null,
        t1 = _this._paragraphStyle,
        fontWeight = t1._fontWeight,
        fontStyle = t1._fontStyle,
        fontFamily = t1._fontFamily;
      if (fontFamily == null)
        fontFamily = "sans-serif";
      fontSize = t1._fontSize;
      if (fontSize == null)
        fontSize = 14;
      textAlign = t1._textAlign;
      t2 = textAlign == null;
      textAlign0 = t2 ? C.TextAlign_4 : textAlign;
      textDirection = t1._textDirection;
      t3 = textDirection == null;
      textDirection0 = t3 ? C.TextDirection_1 : textDirection;
      locale = t1._locale;
      t4 = _this._ops;
      t5 = t4.length;
      foreground = _null;
      background = foreground;
      height = background;
      wordSpacing = height;
      letterSpacing = wordSpacing;
      fontFamilyFallback = letterSpacing;
      textBaseline = fontFamilyFallback;
      decorationThickness = textBaseline;
      decorationStyle = decorationThickness;
      decorationColor = decorationStyle;
      decoration = decorationColor;
      color = decoration;
      i = 0;
      while (true) {
        if (!(i < t5 && t4[i] instanceof H.EngineTextStyle))
          break;
        style = t4[i];
        color0 = style._color;
        if (color0 != null)
          color = color0;
        decoration0 = style._decoration;
        if (decoration0 != null)
          decoration = decoration0;
        decorationColor0 = style._decorationColor;
        if (decorationColor0 != null)
          decorationColor = decorationColor0;
        decorationStyle0 = style._decorationStyle;
        if (decorationStyle0 != null)
          decorationStyle = decorationStyle0;
        decorationThickness0 = style._decorationThickness;
        if (decorationThickness0 != null)
          decorationThickness = decorationThickness0;
        fontWeight0 = style._fontWeight;
        if (fontWeight0 != null)
          fontWeight = fontWeight0;
        textBaseline0 = style._textBaseline;
        if (textBaseline0 != null)
          textBaseline = textBaseline0;
        fontFamily = style._fontFamily;
        fontFamilyFallback0 = style._fontFamilyFallback;
        if (fontFamilyFallback0 != null)
          fontFamilyFallback = fontFamilyFallback0;
        fontSize0 = style._fontSize;
        if (fontSize0 != null)
          fontSize = fontSize0;
        letterSpacing0 = style._letterSpacing;
        if (letterSpacing0 != null)
          letterSpacing = letterSpacing0;
        wordSpacing0 = style._wordSpacing;
        if (wordSpacing0 != null)
          wordSpacing = wordSpacing0;
        height0 = style.__engine$_height;
        if (height0 != null)
          height = height0;
        locale0 = style._locale;
        if (locale0 != null)
          locale = locale0;
        background0 = style._background;
        if (background0 != null)
          background = background0;
        foreground0 = style._foreground;
        if (foreground0 != null)
          foreground = foreground0;
        ++i;
      }
      if (color == null && foreground == null)
        color = C.Color_4294901760;
      cumulativeStyle = H.EngineTextStyle$only(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, _null, fontSize, fontStyle, fontWeight, foreground, height, letterSpacing, locale, _null, textBaseline, wordSpacing);
      if (foreground != null)
        paint = foreground;
      else {
        t5 = H._detectRenderer();
        paint = t5 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
        color.toString;
        paint.set$color(0, color);
      }
      if (i >= t4.length) {
        t4 = _this._paragraphElement;
        H._applyTextStyleToElement(t4, false, cumulativeStyle);
        t3 = t3 ? C.TextDirection_1 : textDirection;
        t2 = t2 ? C.TextAlign_4 : textAlign;
        t5 = type$.nullable_SurfacePaint;
        return new H.DomParagraph(t4, new H.ParagraphGeometricStyle(t3, t2, fontWeight, fontStyle, fontFamily, fontSize, height, t1._maxLines, letterSpacing, wordSpacing, H._textDecorationToCssString(decoration, decorationStyle), t1._ellipsis, _null), "", t5._as(paint), textAlign0, textDirection0, t5._as(cumulativeStyle._background), 0);
      }
      if (typeof t4[i] != "string")
        return _null;
      plainTextBuffer = new P.StringBuffer("");
      t5 = "";
      while (true) {
        if (!(i < t4.length && typeof t4[i] == "string"))
          break;
        t5 += H.S(t4[i]);
        plainTextBuffer._contents = t5;
        ++i;
      }
      for (; i < t4.length; ++i)
        if (!J.$eq$(t4[i], $.$get$DomParagraphBuilder__paragraphBuilderPop()))
          return _null;
      t4 = plainTextBuffer._contents;
      plainText = t4.charCodeAt(0) == 0 ? t4 : t4;
      $.$get$domRenderer();
      t4 = _this._paragraphElement;
      t4.appendChild(document.createTextNode(plainText));
      H._applyTextStyleToElement(t4, false, cumulativeStyle);
      t5 = cumulativeStyle._background;
      if (t5 != null)
        H._applyTextBackgroundToElement(t4, cumulativeStyle);
      t3 = t3 ? C.TextDirection_1 : textDirection;
      t2 = t2 ? C.TextAlign_4 : textAlign;
      t6 = type$.nullable_SurfacePaint;
      return new H.DomParagraph(t4, new H.ParagraphGeometricStyle(t3, t2, fontWeight, fontStyle, fontFamily, fontSize, height, t1._maxLines, letterSpacing, wordSpacing, H._textDecorationToCssString(decoration, decorationStyle), t1._ellipsis, _null), plainText, t6._as(paint), textAlign0, textDirection0, t6._as(t5), 0);
    },
    _buildRichText$0: function() {
      var t1, t2, i, op, element, t3, t4, t5, t6, t7, _this = this, _null = null,
        _s16_ = "background-color",
        elementStack = [],
        currentElement = new H.DomParagraphBuilder__buildRichText_currentElement(_this, elementStack);
      for (t1 = _this._ops, t2 = type$.SpanElement, i = 0; i < t1.length; ++i) {
        op = t1[i];
        if (op instanceof H.EngineTextStyle) {
          $.$get$domRenderer();
          element = document.createElement("span");
          t2._as(element);
          H._applyTextStyleToElement(element, true, op);
          t3 = op._background;
          if (t3 != null) {
            t3 = H.colorToCssString(t3.get$color(t3));
            if (t3 == null)
              element.style.removeProperty(_s16_);
            else {
              t4 = element.style;
              t5 = C.CssStyleDeclaration_methods._browserPropertyName$1(t4, _s16_);
              t4.setProperty(t5, t3, "");
            }
          }
          currentElement.call$0().appendChild(element);
          elementStack.push(element);
        } else if (typeof op == "string") {
          $.$get$domRenderer();
          currentElement.call$0().appendChild(document.createTextNode(op));
        } else {
          t3 = $.$get$DomParagraphBuilder__paragraphBuilderPop();
          if (op == null ? t3 == null : op === t3)
            elementStack.pop();
          else
            throw H.wrapException(P.UnsupportedError$("Unsupported ParagraphBuilder operation: " + H.S(op)));
        }
      }
      t1 = _this._paragraphStyle;
      t2 = t1._textDirection;
      t3 = t2 == null;
      t4 = t3 ? C.TextDirection_1 : t2;
      t5 = t1._textAlign;
      t6 = t5 == null;
      t7 = t6 ? C.TextAlign_4 : t5;
      if (t6)
        t5 = C.TextAlign_4;
      if (t3)
        t2 = C.TextDirection_1;
      return new H.DomParagraph(_this._paragraphElement, new H.ParagraphGeometricStyle(t4, t7, t1._fontWeight, t1._fontStyle, t1._fontFamily, t1._fontSize, t1.__engine$_height, t1._maxLines, _null, _null, _null, t1._ellipsis, _null), _null, _null, t5, t2, _null, 0);
    }
  };
  H.DomParagraphBuilder__buildRichText_currentElement.prototype = {
    call$0: function() {
      var t1 = this.elementStack;
      return t1.length !== 0 ? C.JSArray_methods.get$last(t1) : this.$this._paragraphElement;
    },
    $signature: 27
  };
  H.ParagraphGeometricStyle.prototype = {
    get$effectiveFontFamily: function() {
      var localFontFamily = this.fontFamily;
      if (localFontFamily == null || localFontFamily.length === 0)
        return "sans-serif";
      return localFontFamily;
    },
    get$cssFontString: function() {
      var _this = this,
        t1 = _this._cssFontString;
      return t1 == null ? _this._cssFontString = H._buildCssFontString(_this.get$effectiveFontFamily(), _this.fontSize, _this.fontStyle, _this.fontWeight) : t1;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof H.ParagraphGeometricStyle)
        if (other.textDirection === _this.textDirection)
          if (other.textAlign === _this.textAlign)
            if (other.fontWeight == _this.fontWeight)
              t1 = other.fontFamily == _this.fontFamily && other.fontSize == _this.fontSize && other.lineHeight == _this.lineHeight && other.maxLines == _this.maxLines && other.letterSpacing == _this.letterSpacing && other.wordSpacing == _this.wordSpacing && other.decoration == _this.decoration && other.ellipsis == _this.ellipsis;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this,
        t1 = _this._cachedHashCode;
      return t1 == null ? _this._cachedHashCode = P.hashValues(_this.textDirection, _this.textAlign, _this.fontWeight, _this.fontStyle, _this.fontFamily, _this.fontSize, _this.lineHeight, _this.maxLines, _this.letterSpacing, _this.wordSpacing, _this.decoration, _this.ellipsis, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd) : t1;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.TextHeightStyle.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof H.TextHeightStyle && other.get$hashCode(other) === this.get$hashCode(this);
    },
    get$hashCode: function(_) {
      var _this = this,
        t1 = _this.__TextHeightStyle_hashCode;
      if (t1 == null) {
        t1 = P.hashValues(_this.fontFamily, _this.fontSize, _this.height, P.hashList(_this.fontFeatures), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
        if (_this.__TextHeightStyle_hashCode == null)
          _this.__TextHeightStyle_hashCode = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("hashCode"));
      }
      return t1;
    }
  };
  H.TextDimensions.prototype = {
    updateText$2: function(from, style) {
      var plainText, t1;
      this._cachedBoundingClientRect = null;
      plainText = from._plainText;
      if (plainText != null) {
        t1 = this._element;
        if (C.JSString_methods.endsWith$1(plainText, "\n"))
          t1.textContent = plainText + "\n";
        else
          t1.textContent = plainText;
      } else
        new W._ChildNodeListLazy(this._element).addAll$1(0, new W._ChildNodeListLazy(type$.Element._as(from._paragraphElement.cloneNode(true))));
    },
    updateConstraintWidth$2: function(width, ellipsis) {
      var t1, t2;
      this._cachedBoundingClientRect = null;
      if (width == 1 / 0 || width == -1 / 0) {
        t1 = this._element.style;
        t1.width = "";
        t1.whiteSpace = "pre";
      } else {
        t1 = this._element;
        if (ellipsis != null) {
          t1 = t1.style;
          t2 = H.S(width) + "px";
          t1.width = t2;
          t1.whiteSpace = "pre";
        } else {
          t1 = t1.style;
          t2 = H.S(width) + "px";
          t1.width = t2;
          t1.whiteSpace = "pre-wrap";
        }
      }
    },
    applyStyle$1: function(style) {
      var decoration, _null = null,
        t1 = this._element,
        elementStyle = t1.style,
        t2 = style.textDirection,
        t3 = H._textDirectionToCss(t2);
      elementStyle.direction = t3 == null ? "" : t3;
      t2 = H.textAlignToCssValue(style.textAlign, t2);
      elementStyle.textAlign = t2 == null ? "" : t2;
      t2 = style.fontSize;
      t2 = t2 != null ? "" + C.JSNumber_methods.floor$0(t2) + "px" : _null;
      elementStyle.fontSize = t2 == null ? "" : t2;
      t2 = H.canonicalizeFontFamily(style.get$effectiveFontFamily());
      elementStyle.fontFamily = t2 == null ? "" : t2;
      t2 = style.fontWeight;
      t2 = t2 != null ? H.fontWeightToCss(t2) : _null;
      elementStyle.fontWeight = t2 == null ? "" : t2;
      elementStyle.fontStyle = "";
      t2 = style.letterSpacing;
      t2 = t2 != null ? H.S(t2) + "px" : _null;
      elementStyle.letterSpacing = t2 == null ? "" : t2;
      t2 = style.wordSpacing;
      t2 = t2 != null ? H.S(t2) + "px" : _null;
      elementStyle.wordSpacing = t2 == null ? "" : t2;
      decoration = style.decoration;
      t2 = H._browserEngine();
      if (t2 === C.BrowserEngine_1)
        H.DomRenderer_setElementStyle(t1, "-webkit-text-decoration", decoration);
      else
        elementStyle.textDecoration = decoration == null ? "" : decoration;
      t1 = style.lineHeight;
      if (t1 != null) {
        t1 = C.JSNumber_methods.toString$0(t1);
        elementStyle.lineHeight = t1;
      }
      this._cachedBoundingClientRect = null;
    },
    _readAndCacheMetrics$0: function() {
      var t1 = this._cachedBoundingClientRect;
      return t1 == null ? this._cachedBoundingClientRect = this._element.getBoundingClientRect() : t1;
    },
    get$height: function(_) {
      var t2, cachedHeight,
        t1 = this._readAndCacheMetrics$0().height;
      t1.toString;
      t2 = H._browserEngine();
      if (t2 === C.BrowserEngine_2 && true)
        cachedHeight = t1 + 1;
      else
        cachedHeight = t1;
      return cachedHeight;
    }
  };
  H.TextHeightRuler.prototype = {
    get$__engine$_host: function() {
      var host, t2, t3, style, t4, height, _this = this,
        t1 = _this.__TextHeightRuler__host;
      if (t1 == null) {
        host = document.createElement("div");
        t1 = host.style;
        t1.visibility = "hidden";
        t1.position = "absolute";
        t1.top = "0";
        t1.left = "0";
        t1.display = "flex";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "flex-direction"), "row", "");
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "align-items"), "baseline", "");
        t1.margin = "0";
        t1.border = "0";
        t1.padding = "0";
        t1 = _this._dimensions;
        t2 = _this.textHeightStyle;
        t3 = t1._element;
        style = t3.style;
        t4 = "" + C.JSNumber_methods.floor$0(t2.fontSize) + "px";
        style.fontSize = t4;
        t4 = H.canonicalizeFontFamily(t2.fontFamily);
        style.fontFamily = t4 == null ? "" : t4;
        height = t2.height;
        if (height != null) {
          t2 = C.JSNumber_methods.toString$0(height);
          style.lineHeight = t2;
        }
        t1._cachedBoundingClientRect = null;
        t2 = t3.style;
        t2.whiteSpace = "pre";
        t1._cachedBoundingClientRect = null;
        t3.textContent = " ";
        host.appendChild(t3);
        t1._cachedBoundingClientRect = null;
        _this.rulerHost._rulerHost.appendChild(host);
        if (_this.__TextHeightRuler__host == null) {
          _this.__TextHeightRuler__host = host;
          t1 = host;
        } else
          t1 = H.throwExpression(H.LateError$fieldADI("_host"));
      }
      return t1;
    },
    get$alphabeticBaseline: function(_) {
      var probe, _this = this,
        t1 = _this.__TextHeightRuler_alphabeticBaseline;
      if (t1 == null) {
        t1 = _this.__TextHeightRuler__probe;
        if (t1 == null) {
          probe = document.createElement("div");
          _this.get$__engine$_host().appendChild(probe);
          if (_this.__TextHeightRuler__probe == null) {
            _this.__TextHeightRuler__probe = probe;
            t1 = probe;
          } else
            t1 = H.throwExpression(H.LateError$fieldADI("_probe"));
        }
        t1 = t1.getBoundingClientRect().bottom;
        t1.toString;
        if (_this.__TextHeightRuler_alphabeticBaseline == null)
          _this.__TextHeightRuler_alphabeticBaseline = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("alphabeticBaseline"));
      }
      return t1;
    },
    get$height: function(_) {
      var _this = this,
        t1 = _this.__TextHeightRuler_height;
      if (t1 == null) {
        t1 = _this._dimensions;
        t1 = t1.get$height(t1);
        if (_this.__TextHeightRuler_height == null)
          _this.__TextHeightRuler_height = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("height"));
      }
      return t1;
    },
    _createHost$0: function() {
      var t2, t3, style, t4, height,
        host = document.createElement("div"),
        t1 = host.style;
      t1.visibility = "hidden";
      t1.position = "absolute";
      t1.top = "0";
      t1.left = "0";
      t1.display = "flex";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "flex-direction"), "row", "");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "align-items"), "baseline", "");
      t1.margin = "0";
      t1.border = "0";
      t1.padding = "0";
      t1 = this._dimensions;
      t2 = this.textHeightStyle;
      t3 = t1._element;
      style = t3.style;
      t4 = "" + C.JSNumber_methods.floor$0(t2.fontSize) + "px";
      style.fontSize = t4;
      t4 = H.canonicalizeFontFamily(t2.fontFamily);
      style.fontFamily = t4 == null ? "" : t4;
      height = t2.height;
      if (height != null) {
        t2 = C.JSNumber_methods.toString$0(height);
        style.lineHeight = t2;
      }
      t1._cachedBoundingClientRect = null;
      t2 = t3.style;
      t2.whiteSpace = "pre";
      t1._cachedBoundingClientRect = null;
      t3.textContent = " ";
      host.appendChild(t3);
      t1._cachedBoundingClientRect = null;
      this.rulerHost._rulerHost.appendChild(host);
      return host;
    }
  };
  H.ParagraphRuler.prototype = {
    get$_textHeightRuler: function() {
      var style, t2, t3, _this = this,
        t1 = _this.__ParagraphRuler__textHeightRuler;
      if (t1 == null) {
        t1 = _this.style;
        style = t1._cachedHeightStyle;
        if (style == null) {
          t2 = t1.get$effectiveFontFamily();
          t3 = t1.fontSize;
          if (t3 == null)
            t3 = 14;
          style = t1._cachedHeightStyle = new H.TextHeightStyle(t2, t3, t1.lineHeight, null);
        }
        t1 = new H.TextHeightRuler(style, _this.rulerManager, new H.TextDimensions(document.createElement("p")));
        if (_this.__ParagraphRuler__textHeightRuler == null)
          _this.__ParagraphRuler__textHeightRuler = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("_textHeightRuler"));
      }
      return t1;
    },
    measureAsSingleLine$0: function() {
      var t1 = this.__engine$_paragraph,
        t2 = this.singleLineDimensions;
      if (t1._plainText === "") {
        t2._cachedBoundingClientRect = null;
        t2._element.textContent = " ";
      } else
        t2.updateText$2(t1, this.style);
    },
    measureWithConstraints$1: function(constraints) {
      var t3,
        t1 = this.constrainedDimensions,
        t2 = this.__engine$_paragraph;
      t2.toString;
      t3 = this.style;
      t1.updateText$2(t2, t3);
      t1.updateConstraintWidth$2(constraints.width + 0.5, t3.ellipsis);
    },
    measurePlaceholderBoxes$0: function() {
      var placeholderElements, boxes, t1, t2, rect, t3, t4, t5, t6;
      if (this.__engine$_paragraph.placeholderCount === 0)
        return C.List_empty9;
      placeholderElements = new W._FrozenElementList(this.constrainedDimensions._element.querySelectorAll(".paragraph-placeholder"), type$._FrozenElementList_Element);
      boxes = H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      for (t1 = new H.ListIterator(placeholderElements, placeholderElements.get$length(placeholderElements)), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        rect = t2._as(t1._current).getBoundingClientRect();
        t3 = rect.left;
        t3.toString;
        t4 = rect.top;
        t4.toString;
        t5 = rect.right;
        t5.toString;
        t6 = rect.bottom;
        t6.toString;
        boxes.push(new P.TextBox(t3, t4, t5, t6, this.__engine$_paragraph._textDirection));
      }
      return boxes;
    },
    hitTest$2: function(constraints, offset) {
      var el, textNodes, i, t1, dx, dy, bounds, t2, _this = this;
      _this.measureWithConstraints$1(constraints);
      el = _this.constrainedDimensions._element;
      textNodes = H.setRuntimeTypeInfo([], type$.JSArray_Node);
      _this._collectTextNodes$2(el.childNodes, textNodes);
      for (i = textNodes.length - 1, t1 = type$.Element, dx = offset._dx, dy = offset._dy; i >= 0; --i) {
        bounds = t1._as(textNodes[i].parentNode).getBoundingClientRect();
        t2 = bounds.left;
        t2.toString;
        if (dx >= t2) {
          t2 = bounds.right;
          t2.toString;
          if (dx < t2) {
            t2 = bounds.top;
            t2.toString;
            if (dy >= t2) {
              t2 = bounds.bottom;
              t2.toString;
              t2 = dy < t2;
            } else
              t2 = false;
          } else
            t2 = false;
        } else
          t2 = false;
        if (t2)
          return _this._countTextPosition$2(el.childNodes, textNodes[i]);
      }
      return 0;
    },
    _collectTextNodes$2: function(nodes, textNodes) {
      var childNodes, t1, _i, node;
      if (J.get$isEmpty$asx(nodes))
        return;
      childNodes = H.setRuntimeTypeInfo([], type$.JSArray_Node);
      for (t1 = nodes.length, _i = 0; _i < nodes.length; nodes.length === t1 || (0, H.throwConcurrentModificationError)(nodes), ++_i) {
        node = nodes[_i];
        if (node.nodeType === 3)
          textNodes.push(node);
        C.JSArray_methods.addAll$1(childNodes, node.childNodes);
      }
      this._collectTextNodes$2(childNodes, textNodes);
    },
    _countTextPosition$2: function(nodes, endNode) {
      var position, node,
        t1 = H.instanceType(nodes)._eval$1("ReversedListIterable<ListMixin.E>"),
        stack = P.List_List$of(new H.ReversedListIterable(nodes, t1), true, t1._eval$1("ListIterable.E"));
      for (position = 0; true;) {
        node = C.JSArray_methods.removeLast$0(stack);
        t1 = node.childNodes;
        C.JSArray_methods.addAll$1(stack, new H.ReversedListIterable(t1, H.instanceType(t1)._eval$1("ReversedListIterable<ListMixin.E>")));
        if (node === endNode)
          break;
        if (node.nodeType === 3)
          position += node.textContent.length;
      }
      return position;
    },
    didMeasure$0: function() {
      var t1, _this = this;
      if (_this.__engine$_paragraph._plainText == null) {
        t1 = $.$get$domRenderer();
        t1.clearDom$1(_this.singleLineDimensions._element);
        t1.clearDom$1(_this.minIntrinsicDimensions._element);
        t1.clearDom$1(_this.constrainedDimensions._element);
      }
      _this.__engine$_paragraph = null;
    },
    measureBoxesForRange$6$alignOffset$end$start$textDirection: function(plainText, constraints, alignOffset, end, start, textDirection) {
      var t2, t3, value, boxes, maxLinesLimit, previousRect, _i, rect, t4,
        before = C.JSString_methods.substring$2(plainText, 0, start),
        rangeText = C.JSString_methods.substring$2(plainText, start, end),
        after = C.JSString_methods.substring$1(plainText, end),
        t1 = document,
        rangeSpan = t1.createElement("span");
      rangeSpan.textContent = rangeText;
      t2 = this.constrainedDimensions;
      t3 = t2._element;
      $.$get$domRenderer().clearDom$1(t3);
      t3.appendChild(t1.createTextNode(before));
      t3.appendChild(rangeSpan);
      t3.appendChild(t1.createTextNode(after));
      t2.updateConstraintWidth$2(constraints.width, null);
      value = rangeSpan.getClientRects();
      if (value.prototype == null)
        value.prototype = Object.create(null);
      boxes = H.setRuntimeTypeInfo([], type$.JSArray_TextBox);
      t1 = this.style.maxLines;
      if (t1 == null)
        maxLinesLimit = 1 / 0;
      else {
        t2 = this.get$_textHeightRuler();
        maxLinesLimit = t1 * t2.get$height(t2);
      }
      for (t1 = value.length, previousRect = null, _i = 0; _i < value.length; value.length === t1 || (0, H.throwConcurrentModificationError)(value), ++_i) {
        rect = value[_i];
        t2 = J.getInterceptor$x(rect);
        t4 = t2.get$top(rect);
        if (t4 === (previousRect == null ? null : J.get$top$x(previousRect)) && t2.get$left(rect) === t2.get$right(rect))
          continue;
        if (t2.get$top(rect) >= maxLinesLimit)
          break;
        boxes.push(new P.TextBox(t2.get$left(rect) + alignOffset, t2.get$top(rect), t2.get$right(rect) + alignOffset, t2.get$bottom(rect), textDirection));
        previousRect = rect;
      }
      $.$get$domRenderer().clearDom$1(t3);
      return boxes;
    },
    dispose$0: function(_) {
      var _this = this;
      C.DivElement_methods.remove$0(_this._singleLineHost);
      C.DivElement_methods.remove$0(_this._minIntrinsicHost);
      C.DivElement_methods.remove$0(_this._constrainedHost);
      C.DivElement_methods.remove$0(_this.get$_textHeightRuler().get$__engine$_host());
    },
    cacheMeasurement$2: function(paragraph, item) {
      var t2, i,
        plainText = paragraph._plainText,
        t1 = this._measurementCache,
        constraintCache = t1.$index(0, plainText);
      if (constraintCache == null) {
        constraintCache = H.setRuntimeTypeInfo([], type$.JSArray_nullable_MeasurementResult);
        t1.$indexSet(0, plainText, constraintCache);
      }
      constraintCache.push(item);
      if (constraintCache.length > 8)
        C.JSArray_methods.removeAt$1(constraintCache, 0);
      t2 = this._mruList;
      t2.push(plainText);
      if (t2.length > 2400) {
        for (i = 0; i < 100; ++i)
          t1.remove$1(0, t2[i]);
        C.JSArray_methods.removeRange$2(t2, 0, 100);
      }
    },
    cacheLookup$2: function(paragraph, constraints) {
      var constraintCache, len, t1, t2, t3, i, t4,
        plainText = paragraph._plainText;
      if (plainText == null)
        return null;
      constraintCache = this._measurementCache.$index(0, plainText);
      if (constraintCache == null)
        return null;
      len = constraintCache.length;
      for (t1 = constraints.width, t2 = paragraph._textAlign, t3 = paragraph._textDirection, i = 0; i < len; ++i) {
        t4 = constraintCache[i];
        t4.toString;
        if (t4.constraintWidth === t1 && t4.textAlign === t2 && t4.textDirection === t3)
          return t4;
      }
      return null;
    }
  };
  H.MeasurementResult.prototype = {};
  H._ComparisonResult.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.UnicodeRange.prototype = {
    compare$1: function(value) {
      if (value < this.start)
        return C._ComparisonResult_2;
      if (value > this.end)
        return C._ComparisonResult_1;
      return C._ComparisonResult_0;
    }
  };
  H.UnicodePropertyLookup.prototype = {
    findForChar$1: function(char) {
      var t1, cacheHit, rangeIndex, result, _this = this;
      if (char == null)
        return _this.defaultProperty;
      t1 = _this.__engine$_cache;
      cacheHit = t1.$index(0, char);
      if (cacheHit != null)
        return cacheHit;
      rangeIndex = _this._binarySearch$1(char);
      result = rangeIndex === -1 ? _this.defaultProperty : _this.ranges[rangeIndex].property;
      t1.$indexSet(0, char, result);
      return result;
    },
    _binarySearch$1: function(value) {
      var min, mid,
        t1 = this.ranges,
        max = t1.length;
      for (min = 0; min < max;) {
        mid = min + C.JSInt_methods._shrOtherPositive$1(max - min, 1);
        switch (t1[mid].compare$1(value)) {
          case C._ComparisonResult_1:
            min = mid + 1;
            break;
          case C._ComparisonResult_2:
            max = mid;
            break;
          case C._ComparisonResult_0:
            return mid;
        }
      }
      return -1;
    }
  };
  H.BrowserAutofillHints.prototype = {};
  H.EngineInputType.prototype = {
    get$submitActionOnEnter: function() {
      return true;
    },
    createDomElement$0: function() {
      return W.InputElement_InputElement();
    },
    configureInputMode$1: function(domElement) {
      var t1;
      if (this.get$inputmodeAttribute() == null)
        return;
      t1 = H._operatingSystem();
      if (t1 !== C.OperatingSystem_0) {
        t1 = H._operatingSystem();
        t1 = t1 === C.OperatingSystem_1;
      } else
        t1 = true;
      if (t1) {
        t1 = this.get$inputmodeAttribute();
        t1.toString;
        domElement.setAttribute("inputmode", t1);
      }
    }
  };
  H.TextInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "text";
    }
  };
  H.NumberInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "numeric";
    }
  };
  H.DecimalInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "decimal";
    }
  };
  H.PhoneInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "tel";
    }
  };
  H.EmailInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "email";
    }
  };
  H.UrlInputType.prototype = {
    get$inputmodeAttribute: function() {
      return "url";
    }
  };
  H.MultilineInputType.prototype = {
    get$submitActionOnEnter: function() {
      return false;
    },
    createDomElement$0: function() {
      return document.createElement("textarea");
    },
    get$inputmodeAttribute: function() {
      return null;
    }
  };
  H.TextCapitalization.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.TextCapitalizationConfig.prototype = {
    setAutocapitalizeAttribute$1: function(domElement) {
      var t1, autocapitalize,
        _s9_ = "sentences",
        _s14_ = "autocapitalize";
      switch (this.textCapitalization) {
        case C.TextCapitalization_0:
          t1 = H._browserEngine();
          autocapitalize = t1 === C.BrowserEngine_1 ? _s9_ : "words";
          break;
        case C.TextCapitalization_2:
          autocapitalize = "characters";
          break;
        case C.TextCapitalization_1:
          autocapitalize = _s9_;
          break;
        case C.TextCapitalization_3:
        default:
          autocapitalize = "off";
          break;
      }
      if (type$.InputElement._is(domElement))
        domElement.setAttribute(_s14_, autocapitalize);
      else if (type$.TextAreaElement._is(domElement))
        domElement.setAttribute(_s14_, autocapitalize);
    }
  };
  H.EngineAutofillForm.prototype = {
    addInputEventListeners$0: function() {
      var t1 = this.elements,
        keys = t1.get$keys(t1),
        subscriptions = H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event);
      keys.forEach$1(0, new H.EngineAutofillForm_addInputEventListeners_closure(this, subscriptions));
      return subscriptions;
    }
  };
  H.EngineAutofillForm_fromFrameworkMessage_closure.prototype = {
    call$1: function(e) {
      e.preventDefault();
    },
    $signature: 1
  };
  H.EngineAutofillForm_addInputEventListeners_closure.prototype = {
    call$1: function(key) {
      var t1 = this.$this,
        t2 = t1.elements.$index(0, key);
      t2.toString;
      this.subscriptions.push(W._EventStreamSubscription$(t2, "input", new H.EngineAutofillForm_addInputEventListeners__closure(t1, key, t2), false, type$._ElementEventStreamImpl_Event._precomputed1));
    },
    $signature: 180
  };
  H.EngineAutofillForm_addInputEventListeners__closure.prototype = {
    call$1: function(e) {
      var autofillInfo, newEditingState,
        t1 = this.$this.items,
        t2 = this.key;
      if (t1.$index(0, t2) == null)
        throw H.wrapException(P.StateError$("Autofill would not work withuot Autofill value set"));
      else {
        autofillInfo = t1.$index(0, t2);
        newEditingState = H.EditingState_EditingState$fromDomElement(this.element, autofillInfo.textCapitalization);
        t1 = autofillInfo.uniqueIdentifier;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec.encodeMethodCall$1(new H.MethodCall0("TextInputClient.updateEditingStateWithTag", [0, P.LinkedHashMap_LinkedHashMap$_literal([t1, newEditingState.toFlutter$0()], type$.nullable_String, type$.dynamic)])), H._engine___emptyCallback$closure());
      }
    },
    $signature: 3
  };
  H.AutofillInfo.prototype = {
    applyToDomElement$2$focusedElement: function(domElement, focusedElement) {
      var _s8_ = "password",
        t1 = this.hint;
      domElement.id = t1;
      if (type$.InputElement._is(domElement)) {
        domElement.name = t1;
        domElement.id = t1;
        domElement.autocomplete = t1;
        if (C.JSString_methods.contains$1(t1, _s8_))
          domElement.type = _s8_;
        else
          domElement.type = "text";
      } else if (type$.TextAreaElement._is(domElement)) {
        domElement.name = t1;
        domElement.id = t1;
        domElement.setAttribute("autocomplete", t1);
      }
    },
    applyToDomElement$1: function(domElement) {
      return this.applyToDomElement$2$focusedElement(domElement, false);
    }
  };
  H.EditingState.prototype = {
    toFlutter$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_literal(["text", this.text, "selectionBase", this.baseOffset, "selectionExtent", this.extentOffset], type$.String, type$.dynamic);
    },
    get$hashCode: function(_) {
      return P.hashValues(this.text, this.baseOffset, this.extentOffset, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (H.getRuntimeType(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof H.EditingState && other.text == _this.text && other.baseOffset === _this.baseOffset && other.extentOffset === _this.extentOffset;
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    },
    applyToDomElement$1: function(domElement) {
      var _this = this;
      if (type$.InputElement._is(domElement)) {
        domElement.value = _this.text;
        domElement.setSelectionRange(_this.baseOffset, _this.extentOffset);
      } else if (type$.TextAreaElement._is(domElement)) {
        domElement.value = _this.text;
        domElement.setSelectionRange(_this.baseOffset, _this.extentOffset);
      } else
        throw H.wrapException(P.UnsupportedError$("Unsupported DOM element type: <" + H.S(domElement == null ? null : domElement.tagName) + "> (" + J.get$runtimeType$(domElement).toString$0(0) + ")"));
    },
    text$0: function($receiver) {
      return this.text.call$0();
    }
  };
  H.InputConfiguration.prototype = {};
  H.GloballyPositionedTextEditingStrategy.prototype = {
    placeElement$0: function() {
      var _this = this,
        t1 = _this.get$_inputConfiguration(),
        t2 = _this._geometry;
      if (t1.autofillGroup != null) {
        if (t2 != null) {
          t1 = _this.get$focusedFormElement();
          t1.toString;
          t2.applyToDomElement$1(t1);
        }
        _this.placeForm$0();
        t1 = _this._lastEditingState;
        if (t1 != null)
          t1.applyToDomElement$1(_this.domElement);
        _this.get$focusedFormElement().focus();
        _this.domElement.focus();
      } else if (t2 != null) {
        t1 = _this.domElement;
        t1.toString;
        t2.applyToDomElement$1(t1);
      }
    }
  };
  H.SafariDesktopTextEditingStrategy.prototype = {
    placeElement$0: function() {
      var t2, _this = this,
        t1 = _this._geometry;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      if (_this.get$_inputConfiguration().autofillGroup != null) {
        _this.placeForm$0();
        _this.get$focusedFormElement().focus();
        _this.domElement.focus();
        t1 = _this._lastEditingState;
        if (t1 != null) {
          t2 = _this.domElement;
          t2.toString;
          t1.applyToDomElement$1(t2);
        }
      }
    },
    initializeElementPlacement$0: function() {
      this.domElement.focus();
    }
  };
  H.DefaultTextEditingStrategy.prototype = {
    get$_inputConfiguration: function() {
      var t1 = this.__DefaultTextEditingStrategy__inputConfiguration;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_inputConfiguration")) : t1;
    },
    get$focusedFormElement: function() {
      var t1 = this.get$_inputConfiguration().autofillGroup;
      return t1 == null ? null : t1.formElement;
    },
    initializeTextEditing$3$onAction$onChange: function(inputConfig, onAction, onChange) {
      var t1, elementStyle, t2, _this = this,
        _s11_ = "transparent",
        _s4_ = "none";
      _this.domElement = inputConfig.inputType.createDomElement$0();
      _this._applyConfiguration$1(inputConfig);
      t1 = _this.domElement;
      t1.classList.add("flt-text-editing");
      elementStyle = t1.style;
      elementStyle.whiteSpace = "pre-wrap";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "align-content"), "center", "");
      elementStyle.position = "absolute";
      elementStyle.top = "0";
      elementStyle.left = "0";
      elementStyle.padding = "0";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "opacity"), "1", "");
      elementStyle.color = _s11_;
      elementStyle.backgroundColor = _s11_;
      elementStyle.background = _s11_;
      elementStyle.outline = _s4_;
      elementStyle.border = _s4_;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "resize"), _s4_, "");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "text-shadow"), _s11_, "");
      elementStyle.overflow = "hidden";
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "transform-origin"), "0 0 0", "");
      t2 = H._browserEngine();
      if (t2 !== C.BrowserEngine_0) {
        t2 = H._browserEngine();
        if (t2 !== C.BrowserEngine_5) {
          t2 = H._browserEngine();
          t2 = t2 === C.BrowserEngine_1;
        } else
          t2 = true;
      } else
        t2 = true;
      if (t2)
        t1.classList.add("transparentTextEditing");
      C.CssStyleDeclaration_methods._setPropertyHelper$3(elementStyle, C.CssStyleDeclaration_methods._browserPropertyName$1(elementStyle, "caret-color"), _s11_, null);
      t1 = _this._style;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      if (_this.get$_inputConfiguration().autofillGroup == null) {
        t1 = $.$get$domRenderer()._glassPaneElement;
        t1.toString;
        t2 = _this.domElement;
        t2.toString;
        t1.appendChild(t2);
        _this._appendedToForm = false;
      }
      _this.initializeElementPlacement$0();
      _this.isEnabled = true;
      _this._onChange = onChange;
      _this._onAction = onAction;
    },
    _applyConfiguration$1: function(config) {
      var t1, t2, autocorrectValue, _this = this,
        _s8_ = "readonly";
      _this.__DefaultTextEditingStrategy__inputConfiguration = config;
      t1 = _this.domElement;
      if (config.readOnly)
        t1.setAttribute(_s8_, _s8_);
      else
        t1.removeAttribute(_s8_);
      if (config.obscureText)
        _this.domElement.setAttribute("type", "password");
      t1 = config.autofill;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$2$focusedElement(t2, true);
      }
      autocorrectValue = config.autocorrect ? "on" : "off";
      _this.domElement.setAttribute("autocorrect", autocorrectValue);
    },
    initializeElementPlacement$0: function() {
      this.placeElement$0();
    },
    addEventHandlers$0: function() {
      var t1, t2, t3, t4, _this = this;
      if (_this.get$_inputConfiguration().autofillGroup != null)
        C.JSArray_methods.addAll$1(_this._subscriptions, _this.get$_inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this._subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$_handleChange();
      t4 = type$._ElementEventStreamImpl_Event._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "input", t3, false, t4));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "keydown", _this.get$_maybeSendAction(), false, type$._ElementEventStreamImpl_KeyboardEvent._precomputed1));
      t1.push(W._EventStreamSubscription$(document, "selectionchange", t3, false, type$.Event));
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "blur", new H.DefaultTextEditingStrategy_addEventHandlers_closure(_this), false, t4));
      _this.preventDefaultForMouseEvents$0();
    },
    updateElementPlacement$1: function(geometry) {
      this._geometry = geometry;
      if (this.isEnabled)
        this.placeElement$0();
    },
    updateElementStyle$1: function(style) {
      var t1;
      this._style = style;
      if (this.isEnabled) {
        t1 = this.domElement;
        t1.toString;
        style.applyToDomElement$1(t1);
      }
    },
    disable$0: function(_) {
      var t2, i, t3, _this = this,
        t1 = _this.isEnabled = false;
      _this._geometry = _this._style = _this._lastEditingState = null;
      for (t2 = _this._subscriptions, i = 0; i < t2.length; ++i)
        J.cancel$0$z(t2[i]);
      C.JSArray_methods.set$length(t2, 0);
      if (_this._appendedToForm) {
        t1 = _this.get$_inputConfiguration().autofillGroup;
        t1 = (t1 == null ? null : t1.formElement) != null;
      }
      t2 = _this.domElement;
      if (t1) {
        t2.blur();
        t1 = _this.domElement;
        t1.toString;
        H._hideAutofillElements(t1, true);
        t1 = _this.get$_inputConfiguration().autofillGroup;
        if (t1 != null) {
          t2 = $.$get$formsOnTheDom();
          t3 = t1.formIdentifier;
          t1 = t1.formElement;
          t2.$indexSet(0, t3, t1);
          H._hideAutofillElements(t1, true);
        }
      } else {
        t2.toString;
        J.remove$0$ax(t2);
      }
      _this.domElement = null;
    },
    setEditingState$1: function(editingState) {
      var t1;
      this._lastEditingState = editingState;
      if (this.isEnabled)
        t1 = !(editingState.baseOffset >= 0 && editingState.extentOffset >= 0);
      else
        t1 = true;
      if (t1)
        return;
      editingState.applyToDomElement$1(this.domElement);
    },
    placeElement$0: function() {
      this.domElement.focus();
    },
    placeForm$0: function() {
      var t2,
        t1 = this.get$_inputConfiguration().autofillGroup;
      t1.toString;
      t2 = this.domElement;
      t2.toString;
      t1 = t1.formElement;
      t1.appendChild(t2);
      $.$get$domRenderer()._glassPaneElement.appendChild(t1);
      this._appendedToForm = true;
    },
    _handleChange$1: function($event) {
      var newEditingState, _this = this,
        t1 = _this.domElement;
      t1.toString;
      newEditingState = H.EditingState_EditingState$fromDomElement(t1, _this.get$_inputConfiguration().textCapitalization);
      if (!newEditingState.$eq(0, _this._lastEditingState)) {
        _this._lastEditingState = newEditingState;
        _this._onChange.call$1(newEditingState);
      }
    },
    _maybeSendAction$1: function($event) {
      var t1;
      if (type$.KeyboardEvent._is($event))
        if (this.get$_inputConfiguration().inputType.get$submitActionOnEnter() && $event.keyCode === 13) {
          $event.preventDefault();
          t1 = this._onAction;
          t1.toString;
          t1.call$1(this.get$_inputConfiguration().inputAction);
        }
    },
    enable$3$onAction$onChange: function(_, inputConfig, onAction, onChange) {
      var t1, _this = this;
      _this.initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange);
      _this.addEventHandlers$0();
      t1 = _this._lastEditingState;
      if (t1 != null)
        _this.setEditingState$1(t1);
      _this.domElement.focus();
    },
    preventDefaultForMouseEvents$0: function() {
      var t3, _this = this,
        t1 = _this._subscriptions,
        t2 = _this.domElement;
      t2.toString;
      t3 = type$._ElementEventStreamImpl_MouseEvent._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "mousedown", new H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure(), false, t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "mouseup", new H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0(), false, t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "mousemove", new H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1(), false, t3));
    }
  };
  H.DefaultTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1: function(_) {
      this.$this.domElement.focus();
    },
    $signature: 3
  };
  H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure.prototype = {
    call$1: function(_) {
      _.preventDefault();
    },
    $signature: 42
  };
  H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0.prototype = {
    call$1: function(_) {
      _.preventDefault();
    },
    $signature: 42
  };
  H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1.prototype = {
    call$1: function(_) {
      _.preventDefault();
    },
    $signature: 42
  };
  H.IOSTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange: function(inputConfig, onAction, onChange) {
      var t1, _this = this;
      _this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      t1 = _this.domElement;
      t1.toString;
      inputConfig.inputType.configureInputMode$1(t1);
      if (_this.get$_inputConfiguration().autofillGroup != null)
        _this.placeForm$0();
      t1 = _this.domElement;
      t1.toString;
      inputConfig.textCapitalization.setAutocapitalizeAttribute$1(t1);
    },
    initializeElementPlacement$0: function() {
      var t1 = this.domElement.style;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), "translate(-9999px, -9999px)", "");
      this._canPosition = false;
    },
    addEventHandlers$0: function() {
      var t1, t2, t3, t4, _this = this;
      if (_this.get$_inputConfiguration().autofillGroup != null)
        C.JSArray_methods.addAll$1(_this._subscriptions, _this.get$_inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this._subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$_handleChange();
      t4 = type$._ElementEventStreamImpl_Event._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "input", t3, false, t4));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "keydown", _this.get$_maybeSendAction(), false, type$._ElementEventStreamImpl_KeyboardEvent._precomputed1));
      t1.push(W._EventStreamSubscription$(document, "selectionchange", t3, false, type$.Event));
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "focus", new H.IOSTextEditingStrategy_addEventHandlers_closure(_this), false, t4));
      _this._addTapListener$0();
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "blur", new H.IOSTextEditingStrategy_addEventHandlers_closure0(_this), false, t4));
    },
    updateElementPlacement$1: function(geometry) {
      var _this = this;
      _this._geometry = geometry;
      if (_this.isEnabled && _this._canPosition)
        _this.placeElement$0();
    },
    disable$0: function(_) {
      var t1;
      this.super$DefaultTextEditingStrategy$disable(0);
      t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._positionInputElementTimer = null;
    },
    _addTapListener$0: function() {
      var t1 = this.domElement;
      t1.toString;
      this._subscriptions.push(W._EventStreamSubscription$(t1, "click", new H.IOSTextEditingStrategy__addTapListener_closure(this), false, type$._ElementEventStreamImpl_MouseEvent._precomputed1));
    },
    _schedulePlacement$0: function() {
      var t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._positionInputElementTimer = P.Timer_Timer(C.Duration_100000, new H.IOSTextEditingStrategy__schedulePlacement_closure(this));
    },
    placeElement$0: function() {
      var t1, t2;
      this.domElement.focus();
      t1 = this._geometry;
      if (t1 != null) {
        t2 = this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
    }
  };
  H.IOSTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1: function(_) {
      this.$this._schedulePlacement$0();
    },
    $signature: 3
  };
  H.IOSTextEditingStrategy_addEventHandlers_closure0.prototype = {
    call$1: function(_) {
      this.$this.owner.sendTextConnectionClosedToFrameworkIfAny$0();
    },
    $signature: 3
  };
  H.IOSTextEditingStrategy__addTapListener_closure.prototype = {
    call$1: function(_) {
      var t2,
        t1 = this.$this;
      if (t1._canPosition) {
        t2 = t1.domElement.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t2, C.CssStyleDeclaration_methods._browserPropertyName$1(t2, "transform"), "translate(-9999px, -9999px)", "");
        t1._canPosition = false;
        t1._schedulePlacement$0();
      }
    },
    $signature: 42
  };
  H.IOSTextEditingStrategy__schedulePlacement_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._canPosition = true;
      t1.placeElement$0();
    },
    $signature: 0
  };
  H.AndroidTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange: function(inputConfig, onAction, onChange) {
      var t1, t2, _this = this;
      _this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      t1 = _this.domElement;
      t1.toString;
      inputConfig.inputType.configureInputMode$1(t1);
      if (_this.get$_inputConfiguration().autofillGroup != null)
        _this.placeForm$0();
      else {
        t1 = $.$get$domRenderer()._glassPaneElement;
        t1.toString;
        t2 = _this.domElement;
        t2.toString;
        t1.appendChild(t2);
      }
      t1 = _this.domElement;
      t1.toString;
      inputConfig.textCapitalization.setAutocapitalizeAttribute$1(t1);
    },
    addEventHandlers$0: function() {
      var t1, t2, t3, t4, _this = this;
      if (_this.get$_inputConfiguration().autofillGroup != null)
        C.JSArray_methods.addAll$1(_this._subscriptions, _this.get$_inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this._subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$_handleChange();
      t4 = type$._ElementEventStreamImpl_Event._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "input", t3, false, t4));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "keydown", _this.get$_maybeSendAction(), false, type$._ElementEventStreamImpl_KeyboardEvent._precomputed1));
      t1.push(W._EventStreamSubscription$(document, "selectionchange", t3, false, type$.Event));
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "blur", new H.AndroidTextEditingStrategy_addEventHandlers_closure(_this), false, t4));
    },
    placeElement$0: function() {
      var t1, t2;
      this.domElement.focus();
      t1 = this._geometry;
      if (t1 != null) {
        t2 = this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
    }
  };
  H.AndroidTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1: function(_) {
      var t1, t2;
      $.$get$domRenderer();
      t1 = document;
      t1 = t1.hasFocus.apply(t1, []);
      if (t1 == null)
        t1 = false;
      t2 = this.$this;
      if (t1)
        t2.domElement.focus();
      else
        t2.owner.sendTextConnectionClosedToFrameworkIfAny$0();
    },
    $signature: 3
  };
  H.FirefoxTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange: function(inputConfig, onAction, onChange) {
      this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      if (this.get$_inputConfiguration().autofillGroup != null)
        this.placeForm$0();
    },
    addEventHandlers$0: function() {
      var t1, t2, t3, t4, t5, _this = this;
      if (_this.get$_inputConfiguration().autofillGroup != null)
        C.JSArray_methods.addAll$1(_this._subscriptions, _this.get$_inputConfiguration().autofillGroup.addInputEventListeners$0());
      t1 = _this._subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$_handleChange();
      t4 = type$._ElementEventStreamImpl_Event._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "input", t3, false, t4));
      t2 = _this.domElement;
      t2.toString;
      t5 = type$._ElementEventStreamImpl_KeyboardEvent._precomputed1;
      t1.push(W._EventStreamSubscription$(t2, "keydown", _this.get$_maybeSendAction(), false, t5));
      t2 = _this.domElement;
      t2.toString;
      t1.push(W._EventStreamSubscription$(t2, "keyup", new H.FirefoxTextEditingStrategy_addEventHandlers_closure(_this), false, t5));
      t5 = _this.domElement;
      t5.toString;
      t1.push(W._EventStreamSubscription$(t5, "select", t3, false, t4));
      t3 = _this.domElement;
      t3.toString;
      t1.push(W._EventStreamSubscription$(t3, "blur", new H.FirefoxTextEditingStrategy_addEventHandlers_closure0(_this), false, t4));
      _this.preventDefaultForMouseEvents$0();
    },
    _postponeFocus$0: function() {
      P.Timer_Timer(C.Duration_0, new H.FirefoxTextEditingStrategy__postponeFocus_closure(this));
    },
    placeElement$0: function() {
      var t1, t2, _this = this;
      _this.domElement.focus();
      t1 = _this._geometry;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      t1 = _this._lastEditingState;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
    }
  };
  H.FirefoxTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1: function($event) {
      this.$this._handleChange$1($event);
    },
    $signature: 206
  };
  H.FirefoxTextEditingStrategy_addEventHandlers_closure0.prototype = {
    call$1: function(_) {
      this.$this._postponeFocus$0();
    },
    $signature: 3
  };
  H.FirefoxTextEditingStrategy__postponeFocus_closure.prototype = {
    call$0: function() {
      this.$this.domElement.focus();
    },
    $signature: 0
  };
  H.TextInputCommand.prototype = {};
  H.TextInputSetClient.prototype = {
    run$1: function(textEditing) {
      var t1 = textEditing._clientId;
      if (t1 != null && t1 !== this.clientId && textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
      }
      textEditing._clientId = this.clientId;
      textEditing.configuration = this.configuration;
    }
  };
  H.TextInputUpdateConfig.prototype = {
    run$1: function(textEditing) {
      var t1 = textEditing.get$strategy(),
        t2 = textEditing.configuration;
      t2.toString;
      t1._applyConfiguration$1(t2);
    }
  };
  H.TextInputSetEditingState.prototype = {
    run$1: function(textEditing) {
      textEditing.get$strategy().setEditingState$1(this.state);
    }
  };
  H.TextInputShow.prototype = {
    run$1: function(textEditing) {
      if (!textEditing.isEditing)
        textEditing._startEditing$0();
    }
  };
  H.TextInputSetEditableSizeAndTransform.prototype = {
    run$1: function(textEditing) {
      textEditing.get$strategy().updateElementPlacement$1(this.geometry);
    }
  };
  H.TextInputSetStyle.prototype = {
    run$1: function(textEditing) {
      textEditing.get$strategy().updateElementStyle$1(this.style);
    }
  };
  H.TextInputClearClient.prototype = {
    run$1: function(textEditing) {
      if (textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
      }
    }
  };
  H.TextInputHide.prototype = {
    run$1: function(textEditing) {
      if (textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
      }
    }
  };
  H.TextInputSetMarkedTextRect.prototype = {
    run$1: function(textEditing) {
    }
  };
  H.TextInputSetCaretRect.prototype = {
    run$1: function(textEditing) {
    }
  };
  H.TextInputFinishAutofillContext.prototype = {
    run$1: function(textEditing) {
      textEditing.sendTextConnectionClosedToFrameworkIfAny$0();
      if (this.saveForm)
        H.saveForms();
      H.cleanForms();
    }
  };
  H.saveForms_closure.prototype = {
    call$2: function(identifier, form) {
      type$.InputElement._as(J.get$first$ax(form.getElementsByClassName("submitBtn"))).click();
    },
    $signature: 210
  };
  H.TextEditingChannel.prototype = {
    handleTextInput$2: function(data, callback) {
      var _command_set, t1, t2, transformList, textAlignIndex, textDirectionIndex, fontWeightIndex, fontWeight, _box_0 = {},
        $call = C.C_JSONMethodCodec.decodeMethodCall$1(data);
      _box_0._command = null;
      _command_set = new H.TextEditingChannel_handleTextInput__command_set(_box_0);
      switch ($call.method) {
        case "TextInput.setClient":
          t1 = $call.$arguments;
          t2 = J.getInterceptor$asx(t1);
          _command_set.call$1(new H.TextInputSetClient(t2.$index(t1, 0), H.InputConfiguration$fromFrameworkMessage(t2.$index(t1, 1))));
          break;
        case "TextInput.updateConfig":
          this.implementation.configuration = H.InputConfiguration$fromFrameworkMessage($call.$arguments);
          _command_set.call$1(new H.TextInputUpdateConfig());
          break;
        case "TextInput.setEditingState":
          _command_set.call$1(new H.TextInputSetEditingState(H.EditingState_EditingState$fromFrameworkMessage($call.$arguments)));
          break;
        case "TextInput.show":
          _command_set.call$1(C.C_TextInputShow);
          break;
        case "TextInput.setEditableSizeAndTransform":
          t1 = $call.$arguments;
          t2 = J.getInterceptor$asx(t1);
          transformList = P.List_List$from(t2.$index(t1, "transform"), true, type$.double);
          _command_set.call$1(new H.TextInputSetEditableSizeAndTransform(new H.EditableTextGeometry(t2.$index(t1, "width"), t2.$index(t1, "height"), new Float32Array(H._ensureNativeList(transformList)))));
          break;
        case "TextInput.setStyle":
          t1 = $call.$arguments;
          t2 = J.getInterceptor$asx(t1);
          textAlignIndex = t2.$index(t1, "textAlignIndex");
          textDirectionIndex = t2.$index(t1, "textDirectionIndex");
          fontWeightIndex = t2.$index(t1, "fontWeightIndex");
          fontWeight = fontWeightIndex != null ? H.fontWeightIndexToCss(fontWeightIndex) : "normal";
          _command_set.call$1(new H.TextInputSetStyle(new H.EditableTextStyle(t2.$index(t1, "fontSize"), fontWeight, t2.$index(t1, "fontFamily"), C.List_WPl[textAlignIndex], C.List_TextDirection_0_TextDirection_1[textDirectionIndex])));
          break;
        case "TextInput.clearClient":
          _command_set.call$1(C.C_TextInputClearClient);
          break;
        case "TextInput.hide":
          _command_set.call$1(C.C_TextInputHide);
          break;
        case "TextInput.requestAutofill":
          break;
        case "TextInput.finishAutofillContext":
          _command_set.call$1(new H.TextInputFinishAutofillContext(H._asBool($call.$arguments)));
          break;
        case "TextInput.setMarkedTextRect":
          _command_set.call$1(C.C_TextInputSetMarkedTextRect);
          break;
        case "TextInput.setCaretRect":
          _command_set.call$1(C.C_TextInputSetCaretRect);
          break;
        default:
          $.$get$EnginePlatformDispatcher__instance()._replyToPlatformMessage$2(callback, null);
          return;
      }
      t1 = new H.TextEditingChannel_handleTextInput__command_get(_box_0).call$0();
      t1.run$1(this.implementation);
      new H.TextEditingChannel_handleTextInput_closure(callback).call$0();
    }
  };
  H.TextEditingChannel_handleTextInput__command_set.prototype = {
    call$1: function(t1) {
      var t2 = this._box_0;
      if (t2._command == null)
        return t2._command = t1;
      else
        throw H.wrapException(H.LateError$localAI("command"));
    },
    $signature: 213
  };
  H.TextEditingChannel_handleTextInput__command_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._command;
      return t1 == null ? H.throwExpression(H.LateError$localNI("command")) : t1;
    },
    $signature: 214
  };
  H.TextEditingChannel_handleTextInput_closure.prototype = {
    call$0: function() {
      $.$get$EnginePlatformDispatcher__instance()._replyToPlatformMessage$2(this.callback, C.C_JSONMessageCodec.encodeMessage$1([true]));
    },
    $signature: 0
  };
  H.HybridTextEditing.prototype = {
    get$channel: function(_) {
      var t1 = this.__HybridTextEditing_channel;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("channel")) : t1;
    },
    get$strategy: function() {
      var strategy, t2, _this = this,
        t1 = _this.__HybridTextEditing_strategy;
      if (t1 == null) {
        t1 = $.EngineSemanticsOwner__instance;
        if ((t1 == null ? $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_() : t1)._semanticsEnabled)
          t1 = H.SemanticsTextEditingStrategy_ensureInitialized(_this);
        else {
          t1 = H._browserEngine();
          if (t1 === C.BrowserEngine_1) {
            t1 = H._operatingSystem();
            t1 = t1 === C.OperatingSystem_0;
          } else
            t1 = false;
          if (t1)
            strategy = new H.IOSTextEditingStrategy(_this, H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event));
          else {
            t1 = H._browserEngine();
            if (t1 === C.BrowserEngine_1)
              strategy = new H.SafariDesktopTextEditingStrategy(_this, H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event));
            else {
              t1 = H._browserEngine();
              if (t1 === C.BrowserEngine_0) {
                t1 = H._operatingSystem();
                t1 = t1 === C.OperatingSystem_1;
              } else
                t1 = false;
              if (t1)
                strategy = new H.AndroidTextEditingStrategy(_this, H.setRuntimeTypeInfo([], type$.JSArray_StreamSubscription_Event));
              else {
                t1 = H._browserEngine();
                t2 = type$.JSArray_StreamSubscription_Event;
                strategy = t1 === C.BrowserEngine_2 ? new H.FirefoxTextEditingStrategy(_this, H.setRuntimeTypeInfo([], t2)) : new H.GloballyPositionedTextEditingStrategy(_this, H.setRuntimeTypeInfo([], t2));
              }
            }
          }
          t1 = strategy;
        }
        if (_this.__HybridTextEditing_strategy == null)
          _this.__HybridTextEditing_strategy = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("strategy"));
      }
      return t1;
    },
    _startEditing$0: function() {
      var t1, t2, _this = this;
      _this.isEditing = true;
      t1 = _this.get$strategy();
      t2 = _this.configuration;
      t2.toString;
      t1.enable$3$onAction$onChange(0, t2, new H.HybridTextEditing__startEditing_closure(_this), new H.HybridTextEditing__startEditing_closure0(_this));
    },
    sendTextConnectionClosedToFrameworkIfAny$0: function() {
      var t1, _this = this;
      if (_this.isEditing) {
        _this.isEditing = false;
        _this.get$strategy().disable$0(0);
        _this.get$channel(_this);
        t1 = _this._clientId;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec.encodeMethodCall$1(new H.MethodCall0("TextInputClient.onConnectionClosed", [t1])), H._engine___emptyCallback$closure());
      }
    }
  };
  H.HybridTextEditing__startEditing_closure0.prototype = {
    call$1: function(editingState) {
      var t1 = this.$this;
      t1.get$channel(t1);
      t1 = t1._clientId;
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec.encodeMethodCall$1(new H.MethodCall0("TextInputClient.updateEditingState", [t1, editingState.toFlutter$0()])), H._engine___emptyCallback$closure());
    },
    $signature: 216
  };
  H.HybridTextEditing__startEditing_closure.prototype = {
    call$1: function(inputAction) {
      var t1 = this.$this;
      t1.get$channel(t1);
      t1 = t1._clientId;
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", C.C_JSONMethodCodec.encodeMethodCall$1(new H.MethodCall0("TextInputClient.performAction", [t1, inputAction])), H._engine___emptyCallback$closure());
    },
    $signature: 221
  };
  H.EditableTextStyle.prototype = {
    applyToDomElement$1: function(domElement) {
      var _this = this,
        t1 = domElement.style,
        t2 = H.textAlignToCssValue(_this.textAlign, _this.textDirection);
      t1.textAlign = t2 == null ? "" : t2;
      t2 = _this.fontWeight + " " + H.S(_this.fontSize) + "px " + H.S(H.canonicalizeFontFamily(_this.fontFamily));
      t1.font = t2;
    }
  };
  H.EditableTextGeometry.prototype = {
    applyToDomElement$1: function(domElement) {
      var cssTransform = H.float64ListToCssTransform(this.globalTransform),
        t1 = domElement.style,
        t2 = H.S(this.width) + "px";
      t1.width = t2;
      t2 = H.S(this.height) + "px";
      t1.height = t2;
      C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, C.CssStyleDeclaration_methods._browserPropertyName$1(t1, "transform"), cssTransform, "");
    }
  };
  H.TransformKind.prototype = {
    toString$0: function(_) {
      return this.__engine$_name;
    }
  };
  H.sendFontChangeMessage_closure.prototype = {
    call$1: function(_) {
      $._fontChangeScheduled = false;
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/system", $.$get$_fontChangeMessage(), new H.sendFontChangeMessage__closure());
    },
    $signature: 71
  };
  H.sendFontChangeMessage__closure.prototype = {
    call$1: function(_) {
    },
    $signature: 10
  };
  H.Matrix40.prototype = {
    setFrom$1: function(arg) {
      var argStorage = arg.__engine$_m4storage,
        t1 = this.__engine$_m4storage;
      t1[15] = argStorage[15];
      t1[14] = argStorage[14];
      t1[13] = argStorage[13];
      t1[12] = argStorage[12];
      t1[11] = argStorage[11];
      t1[10] = argStorage[10];
      t1[9] = argStorage[9];
      t1[8] = argStorage[8];
      t1[7] = argStorage[7];
      t1[6] = argStorage[6];
      t1[5] = argStorage[5];
      t1[4] = argStorage[4];
      t1[3] = argStorage[3];
      t1[2] = argStorage[2];
      t1[1] = argStorage[1];
      t1[0] = argStorage[0];
    },
    $index: function(_, i) {
      return this.__engine$_m4storage[i];
    },
    translate$3: function(_, x, y, z) {
      var t1 = this.__engine$_m4storage,
        t2 = t1[0],
        t3 = t1[4],
        t4 = t1[8],
        t5 = t1[12],
        t6 = t1[1],
        t7 = t1[5],
        t8 = t1[9],
        t9 = t1[13],
        t10 = t1[2],
        t11 = t1[6],
        t12 = t1[10],
        t13 = t1[14],
        t14 = t1[3],
        t15 = t1[7],
        t16 = t1[11],
        t17 = t1[15];
      t1[12] = t2 * x + t3 * y + t4 * z + t5;
      t1[13] = t6 * x + t7 * y + t8 * z + t9;
      t1[14] = t10 * x + t11 * y + t12 * z + t13;
      t1[15] = t14 * x + t15 * y + t16 * z + t17;
    },
    translate$2: function($receiver, x, y) {
      return this.translate$3($receiver, x, y, 0);
    },
    scale$3: function(_, x, y, z) {
      var sy = y == null ? x : y,
        t1 = this.__engine$_m4storage;
      t1[15] = t1[15];
      t1[0] = t1[0] * x;
      t1[1] = t1[1] * x;
      t1[2] = t1[2] * x;
      t1[3] = t1[3] * x;
      t1[4] = t1[4] * sy;
      t1[5] = t1[5] * sy;
      t1[6] = t1[6] * sy;
      t1[7] = t1[7] * sy;
      t1[8] = t1[8] * x;
      t1[9] = t1[9] * x;
      t1[10] = t1[10] * x;
      t1[11] = t1[11] * x;
      t1[12] = t1[12];
      t1[13] = t1[13];
      t1[14] = t1[14];
    },
    scale$1: function($receiver, x) {
      return this.scale$3($receiver, x, null, null);
    },
    scale$2: function($receiver, x, y) {
      return this.scale$3($receiver, x, y, null);
    },
    $mul: function(_, arg) {
      var t1;
      if (typeof arg == "number") {
        t1 = new H.Matrix40(new Float32Array(16));
        t1.setFrom$1(this);
        t1.scale$3(0, arg, null, null);
        return t1;
      }
      if (arg instanceof H.Matrix40)
        return this.multiplied$1(arg);
      throw H.wrapException(P.ArgumentError$(arg));
    },
    isIdentity$0: function(_) {
      var t1 = this.__engine$_m4storage;
      return t1[0] === 1 && t1[1] === 0 && t1[2] === 0 && t1[3] === 0 && t1[4] === 0 && t1[5] === 1 && t1[6] === 0 && t1[7] === 0 && t1[8] === 0 && t1[9] === 0 && t1[10] === 1 && t1[11] === 0 && t1[12] === 0 && t1[13] === 0 && t1[14] === 0 && t1[15] === 1;
    },
    isIdentityOrTranslation$0: function() {
      var t1 = this.__engine$_m4storage;
      return t1[15] === 1 && t1[0] === 1 && t1[1] === 0 && t1[2] === 0 && t1[3] === 0 && t1[4] === 0 && t1[5] === 1 && t1[6] === 0 && t1[7] === 0 && t1[8] === 0 && t1[9] === 0 && t1[10] === 1 && t1[11] === 0;
    },
    setTranslationRaw$3: function(x, y, z) {
      var t1 = this.__engine$_m4storage;
      t1[14] = z;
      t1[13] = y;
      t1[12] = x;
    },
    copyInverse$1: function(arg) {
      var invDet, t1, t2, t3,
        argStorage = arg.__engine$_m4storage,
        a00 = argStorage[0],
        a01 = argStorage[1],
        a02 = argStorage[2],
        a03 = argStorage[3],
        a10 = argStorage[4],
        a11 = argStorage[5],
        a12 = argStorage[6],
        a13 = argStorage[7],
        a20 = argStorage[8],
        a21 = argStorage[9],
        a22 = argStorage[10],
        a23 = argStorage[11],
        a30 = argStorage[12],
        a31 = argStorage[13],
        a32 = argStorage[14],
        a33 = argStorage[15],
        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0) {
        this.setFrom$1(arg);
        return 0;
      }
      invDet = 1 / det;
      t1 = this.__engine$_m4storage;
      t1[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
      t1[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
      t1[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
      t1[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
      t2 = -a10;
      t1[4] = (t2 * b11 + a12 * b08 - a13 * b07) * invDet;
      t1[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
      t3 = -a30;
      t1[6] = (t3 * b05 + a32 * b02 - a33 * b01) * invDet;
      t1[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
      t1[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
      t1[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
      t1[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
      t1[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
      t1[12] = (t2 * b09 + a11 * b07 - a12 * b06) * invDet;
      t1[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
      t1[14] = (t3 * b03 + a31 * b01 - a32 * b00) * invDet;
      t1[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
      return det;
    },
    multiply$1: function(_, arg) {
      var t1 = this.__engine$_m4storage,
        m33 = t1[15],
        m00 = t1[0],
        m01 = t1[4],
        m02 = t1[8],
        m03 = t1[12],
        m10 = t1[1],
        m11 = t1[5],
        m12 = t1[9],
        m13 = t1[13],
        m20 = t1[2],
        m21 = t1[6],
        m22 = t1[10],
        m23 = t1[14],
        m30 = t1[3],
        m31 = t1[7],
        m32 = t1[11],
        argStorage = arg.__engine$_m4storage,
        n33 = argStorage[15],
        n00 = argStorage[0],
        n01 = argStorage[4],
        n02 = argStorage[8],
        n03 = argStorage[12],
        n10 = argStorage[1],
        n11 = argStorage[5],
        n12 = argStorage[9],
        n13 = argStorage[13],
        n20 = argStorage[2],
        n21 = argStorage[6],
        n22 = argStorage[10],
        n23 = argStorage[14],
        n30 = argStorage[3],
        n31 = argStorage[7],
        n32 = argStorage[11];
      t1[0] = m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30;
      t1[4] = m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31;
      t1[8] = m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32;
      t1[12] = m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33;
      t1[1] = m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30;
      t1[5] = m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31;
      t1[9] = m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32;
      t1[13] = m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33;
      t1[2] = m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30;
      t1[6] = m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31;
      t1[10] = m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32;
      t1[14] = m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33;
      t1[3] = m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30;
      t1[7] = m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31;
      t1[11] = m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32;
      t1[15] = m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33;
    },
    multiplied$1: function(arg) {
      var t1 = new H.Matrix40(new Float32Array(16));
      t1.setFrom$1(this);
      t1.multiply$1(0, arg);
      return t1;
    },
    transform2$1: function(vector) {
      var x = vector[0],
        y = vector[1],
        t1 = this.__engine$_m4storage;
      vector[0] = t1[0] * x + t1[4] * y + t1[12];
      vector[1] = t1[1] * x + t1[5] * y + t1[13];
    },
    toString$0: function(_) {
      var t1 = this.super$Object$toString(0);
      return t1;
    }
  };
  H.WebExperiments.prototype = {
    WebExperiments$_$0: function() {
      $.$get$_context().$indexSet(0, "_flutter_internal_update_experiment", this.get$updateExperiment());
      $._hotRestartListeners.push(new H.WebExperiments$__closure());
    },
    updateExperiment$2: function($name, enabled) {
      switch ($name) {
        case "useCanvasText":
          this._useCanvasText = enabled;
          break;
        case "useCanvasRichText":
          this._useCanvasRichText = enabled;
          break;
      }
    }
  };
  H.WebExperiments$__closure.prototype = {
    call$0: function() {
      $.$get$_context().$indexSet(0, "_flutter_internal_update_experiment", null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.EngineFlutterWindow.prototype = {
    EngineFlutterWindow$2: function(_windowId, platformDispatcher) {
      var t2, _this = this,
        engineDispatcher = _this.platformDispatcher,
        t1 = _this._windowId;
      engineDispatcher._windows.$indexSet(0, t1, _this);
      engineDispatcher._windowConfigurations.$indexSet(0, t1, P.ViewConfiguration$());
      if ($._isUrlStrategySet) {
        t1 = $._customUrlStrategy;
        t2 = new H.MultiEntriesBrowserHistory(t1);
        t2.MultiEntriesBrowserHistory$1$urlStrategy(t1);
        _this._browserHistory = t2;
      }
      $._hotRestartListeners.push(new H.EngineFlutterWindow_closure());
    },
    get$browserHistory: function() {
      var urlStrategy,
        t1 = this._browserHistory;
      if (t1 == null) {
        if ($._isUrlStrategySet)
          urlStrategy = $._customUrlStrategy;
        else
          urlStrategy = C.C_HashUrlStrategy;
        $._isUrlStrategySet = true;
        t1 = new H.MultiEntriesBrowserHistory(urlStrategy);
        t1.MultiEntriesBrowserHistory$1$urlStrategy(urlStrategy);
        this._browserHistory = t1;
      }
      return t1;
    },
    _useSingleEntryBrowserHistory$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, urlStrategy, strategy, t1;
      var $async$_useSingleEntryBrowserHistory$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._browserHistory;
              if (t1 instanceof H.SingleEntryBrowserHistory) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = t1 == null ? 3 : 5;
              break;
            case 3:
              // then
              if ($._isUrlStrategySet)
                urlStrategy = $._customUrlStrategy;
              else
                urlStrategy = C.C_HashUrlStrategy;
              $._isUrlStrategySet = true;
              strategy = urlStrategy;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              strategy = t1.get$urlStrategy();
              t1 = $async$self._browserHistory;
              $async$goto = 6;
              return P._asyncAwait(t1 == null ? null : t1.tearDown$0(), $async$_useSingleEntryBrowserHistory$0);
            case 6:
              // returning from await.
            case 4:
              // join
              t1 = new H.SingleEntryBrowserHistory(strategy, P.LinkedHashMap_LinkedHashMap$_literal(["flutter", true], type$.String, type$.bool));
              t1.SingleEntryBrowserHistory$1$urlStrategy(strategy);
              $async$self._browserHistory = t1;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_useSingleEntryBrowserHistory$0, $async$completer);
    },
    _useMultiEntryBrowserHistory$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, urlStrategy, strategy, t1;
      var $async$_useMultiEntryBrowserHistory$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._browserHistory;
              if (t1 instanceof H.MultiEntriesBrowserHistory) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = t1 == null ? 3 : 5;
              break;
            case 3:
              // then
              if ($._isUrlStrategySet)
                urlStrategy = $._customUrlStrategy;
              else
                urlStrategy = C.C_HashUrlStrategy;
              $._isUrlStrategySet = true;
              strategy = urlStrategy;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              strategy = t1.get$urlStrategy();
              t1 = $async$self._browserHistory;
              $async$goto = 6;
              return P._asyncAwait(t1 == null ? null : t1.tearDown$0(), $async$_useMultiEntryBrowserHistory$0);
            case 6:
              // returning from await.
            case 4:
              // join
              t1 = new H.MultiEntriesBrowserHistory(strategy);
              t1.MultiEntriesBrowserHistory$1$urlStrategy(strategy);
              $async$self._browserHistory = t1;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_useMultiEntryBrowserHistory$0, $async$completer);
    },
    resetHistory$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$resetHistory$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._browserHistory;
              $async$goto = 2;
              return P._asyncAwait(t1 == null ? null : t1.tearDown$0(), $async$resetHistory$0);
            case 2:
              // returning from await.
              $async$self._browserHistory = null;
              $._isUrlStrategySet = $async$self._usingRouter = false;
              $._customUrlStrategy = null;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$resetHistory$0, $async$completer);
    },
    handleNavigationMessage$1: function(data) {
      return this.handleNavigationMessage$body$EngineFlutterWindow(data);
    },
    handleNavigationMessage$body$EngineFlutterWindow: function(data) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, decoded, $arguments;
      var $async$handleNavigationMessage$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              decoded = new H.JSONMethodCodec().decodeMethodCall$1(data);
              $arguments = decoded.$arguments;
            case 3:
              // switch
              switch (decoded.method) {
                case "routeUpdated":
                  // goto case
                  $async$goto = 5;
                  break;
                case "routeInformationUpdated":
                  // goto case
                  $async$goto = 6;
                  break;
                default:
                  // goto after switch
                  $async$goto = 4;
                  break;
              }
              break;
            case 5:
              // case
              $async$goto = !$async$self._usingRouter ? 7 : 9;
              break;
            case 7:
              // then
              $async$goto = 10;
              return P._asyncAwait($async$self._useSingleEntryBrowserHistory$0(), $async$handleNavigationMessage$1);
            case 10:
              // returning from await.
              $async$self.get$browserHistory().setRouteName$1(J.$index$asx($arguments, "routeName"));
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 6:
              // case
              $async$goto = 11;
              return P._asyncAwait($async$self._useMultiEntryBrowserHistory$0(), $async$handleNavigationMessage$1);
            case 11:
              // returning from await.
              $async$self._usingRouter = true;
              t1 = J.getInterceptor$asx($arguments);
              $async$self.get$browserHistory().setRouteName$2$state(t1.$index($arguments, "location"), t1.$index($arguments, "state"));
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // after switch
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handleNavigationMessage$1, $async$completer);
    },
    get$viewConfiguration: function() {
      var t1 = this.platformDispatcher._windowConfigurations.$index(0, this._windowId);
      return t1 == null ? P.ViewConfiguration$() : t1;
    },
    get$physicalSize: function() {
      if (this._physicalSize == null)
        this._computePhysicalSize$0();
      var t1 = this._physicalSize;
      t1.toString;
      return t1;
    },
    _computePhysicalSize$0: function() {
      var t2, windowInnerWidth, windowInnerHeight, _this = this,
        viewport = window.visualViewport,
        t1 = _this._debugDevicePixelRatio;
      if (viewport != null) {
        t2 = viewport.width;
        t2.toString;
        windowInnerWidth = t2 * (t1 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t1);
        t1 = viewport.height;
        t1.toString;
        t2 = _this._debugDevicePixelRatio;
        windowInnerHeight = t1 * (t2 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t2);
      } else {
        t2 = window.innerWidth;
        t2.toString;
        windowInnerWidth = t2 * (t1 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t1);
        t1 = window.innerHeight;
        t1.toString;
        t2 = _this._debugDevicePixelRatio;
        windowInnerHeight = t1 * (t2 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t2);
      }
      _this._physicalSize = new P.Size(windowInnerWidth, windowInnerHeight);
    },
    computeOnScreenKeyboardInsets$0: function() {
      var t2, windowInnerHeight,
        viewport = window.visualViewport,
        t1 = this._debugDevicePixelRatio;
      if (viewport != null) {
        t2 = viewport.height;
        t2.toString;
        windowInnerHeight = t2 * (t1 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t1);
      } else {
        t2 = window.innerHeight;
        t2.toString;
        windowInnerHeight = t2 * (t1 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t1);
      }
      this._viewInsets = new H.WindowPadding(0, 0, 0, this._physicalSize._dy - windowInnerHeight);
    },
    isRotation$0: function() {
      var height, width, _this = this,
        t1 = window.visualViewport,
        t2 = _this._debugDevicePixelRatio;
      if (t1 != null) {
        t1 = window.visualViewport.height;
        t1.toString;
        height = t1 * (t2 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t2);
        t1 = window.visualViewport.width;
        t1.toString;
        t2 = _this._debugDevicePixelRatio;
        width = t1 * (t2 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t2);
      } else {
        t1 = window.innerHeight;
        t1.toString;
        height = t1 * (t2 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t2);
        t1 = window.innerWidth;
        t1.toString;
        t2 = _this._debugDevicePixelRatio;
        width = t1 * (t2 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t2);
      }
      t1 = _this._physicalSize;
      if (t1 != null) {
        t2 = t1._dy;
        if (t2 !== height && t1._dx !== width) {
          t1 = t1._dx;
          if (!(t2 > t1 && height < width))
            t1 = t1 > t2 && width < height;
          else
            t1 = true;
          if (t1)
            return true;
        }
      }
      return false;
    }
  };
  H.EngineFlutterWindow_closure.prototype = {
    call$0: function() {
      $.$get$window().resetHistory$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  H.EngineSingletonFlutterWindow.prototype = {};
  H.WindowPadding.prototype = {};
  H._DomCanvas_EngineCanvas_SaveElementStackTracking.prototype = {};
  H._PersistedClipRect_PersistedContainerSurface__DomClip.prototype = {
    adoptElements$1: function(oldSurface) {
      this.super$PersistedSurface$adoptElements(oldSurface);
      this._DomClip__childContainer = oldSurface._DomClip__childContainer;
      oldSurface._DomClip__childContainer = null;
    },
    discard$0: function() {
      this.super$PersistedContainerSurface$discard();
      this._DomClip__childContainer = null;
    }
  };
  H._PersistedPhysicalShape_PersistedContainerSurface__DomClip.prototype = {
    adoptElements$1: function(oldSurface) {
      this.super$PersistedSurface$adoptElements(oldSurface);
      this._DomClip__childContainer = oldSurface._DomClip__childContainer;
      oldSurface._DomClip__childContainer = null;
    },
    discard$0: function() {
      this.super$PersistedContainerSurface$discard();
      this._DomClip__childContainer = null;
    }
  };
  H.__MouseAdapter__BaseAdapter__WheelEventListenerMixin.prototype = {};
  H.__PointerAdapter__BaseAdapter__WheelEventListenerMixin.prototype = {};
  H.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq: function(receiver, other) {
      return receiver === other;
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: function(receiver) {
      return "Instance of '" + H.Primitives_objectTypeName(receiver) + "'";
    },
    noSuchMethod$1: function(receiver, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    get$runtimeType: function(receiver) {
      return H.getRuntimeType(receiver);
    }
  };
  J.JSBool.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $or: function(receiver, other) {
      return other || receiver;
    },
    $xor: function(receiver, other) {
      return receiver;
    },
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType: function(receiver) {
      return C.Type_bool_lhE;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq: function(receiver, other) {
      return null == other;
    },
    toString$0: function(receiver) {
      return "null";
    },
    get$hashCode: function(receiver) {
      return 0;
    },
    get$runtimeType: function(receiver) {
      return C.Type_Null_Yyn;
    },
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {
    get$hashCode: function(receiver) {
      return 0;
    },
    get$runtimeType: function(receiver) {
      return C.Type_JSObject_8k0;
    },
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isJSObject: 1,
    $isCanvasKit: 1,
    $isSkFontWeight: 1,
    $isSkTextDirection: 1,
    $isSkTextAlign: 1,
    $isSkRectHeightStyle: 1,
    $isSkRectWidthStyle: 1,
    $isSkClipOp: 1,
    $isSkFillType: 1,
    $isSkStrokeCap: 1,
    $isSkPaintStyle: 1,
    $isSkBlendMode: 1,
    $isSkStrokeJoin: 1,
    $isSkFilterQuality: 1,
    $isSkTileMode: 1,
    $isSkShader: 1,
    $isSkPaint: 1,
    $isSkPath: 1,
    $isSkPicture: 1,
    $isSkTextStyle: 1,
    $isSkTextDecorationStyle: 1,
    $isSkTextBaseline: 1,
    $isSkTextShadow: 1,
    $isSkFontFeature: 1,
    $isSkTypeface: 1,
    $isSkParagraph: 1,
    $isSkDeletable: 1,
    $isJsUrlStrategy: 1,
    get$BlendMode: function(obj) {
      return obj.BlendMode;
    },
    get$PaintStyle: function(obj) {
      return obj.PaintStyle;
    },
    get$StrokeCap: function(obj) {
      return obj.StrokeCap;
    },
    get$StrokeJoin: function(obj) {
      return obj.StrokeJoin;
    },
    get$FilterQuality: function(obj) {
      return obj.FilterQuality;
    },
    get$TileMode: function(obj) {
      return obj.TileMode;
    },
    get$FillType: function(obj) {
      return obj.FillType;
    },
    get$ClipOp: function(obj) {
      return obj.ClipOp;
    },
    get$RectHeightStyle: function(obj) {
      return obj.RectHeightStyle;
    },
    get$RectWidthStyle: function(obj) {
      return obj.RectWidthStyle;
    },
    get$TextAlign: function(obj) {
      return obj.TextAlign;
    },
    get$TextDirection: function(obj) {
      return obj.TextDirection;
    },
    get$FontWeight: function(obj) {
      return obj.FontWeight;
    },
    get$Shader: function(obj) {
      return obj.Shader;
    },
    get$Path: function(obj) {
      return obj.Path;
    },
    computeTonalColors$1: function(receiver, p0) {
      return receiver.computeTonalColors(p0);
    },
    get$ParagraphBuilder: function(obj) {
      return obj.ParagraphBuilder;
    },
    ParagraphStyle$1: function(receiver, p0) {
      return receiver.ParagraphStyle(p0);
    },
    TextStyle$1: function(receiver, p0) {
      return receiver.TextStyle(p0);
    },
    get$NoDecoration: function(obj) {
      return obj.NoDecoration;
    },
    get$UnderlineDecoration: function(obj) {
      return obj.UnderlineDecoration;
    },
    get$OverlineDecoration: function(obj) {
      return obj.OverlineDecoration;
    },
    get$LineThroughDecoration: function(obj) {
      return obj.LineThroughDecoration;
    },
    get$DecorationStyle: function(obj) {
      return obj.DecorationStyle;
    },
    get$TextBaseline: function(obj) {
      return obj.TextBaseline;
    },
    get$FontMgr: function(obj) {
      return obj.FontMgr;
    },
    get$TypefaceFontProvider: function(obj) {
      return obj.TypefaceFontProvider;
    },
    GetWebGLContext$2: function(receiver, p0, p1) {
      return receiver.GetWebGLContext(p0, p1);
    },
    MakeGrContext$1: function(receiver, p0) {
      return receiver.MakeGrContext(p0);
    },
    MakeOnScreenGLSurface$4: function(receiver, p0, p1, p2, p3) {
      return receiver.MakeOnScreenGLSurface(p0, p1, p2, p3);
    },
    MakeSWCanvasSurface$1: function(receiver, p0) {
      return receiver.MakeSWCanvasSurface(p0);
    },
    setCurrentContext$1: function(receiver, p0) {
      return receiver.setCurrentContext(p0);
    },
    then$1$1: function(receiver, p0) {
      return receiver.then(p0);
    },
    then$1: function(receiver, p0) {
      return receiver.then(p0);
    },
    getCanvas$0: function(receiver) {
      return receiver.getCanvas();
    },
    flush$0: function(receiver) {
      return receiver.flush();
    },
    get$width: function(obj) {
      return obj.width;
    },
    get$height: function(obj) {
      return obj.height;
    },
    get$dispose: function(obj) {
      return obj.dispose;
    },
    dispose$0: function(receiver) {
      return receiver.dispose();
    },
    setResourceCacheLimitBytes$1: function(receiver, p0) {
      return receiver.setResourceCacheLimitBytes(p0);
    },
    releaseResourcesAndAbandonContext$0: function(receiver) {
      return receiver.releaseResourcesAndAbandonContext();
    },
    delete$0: function(receiver) {
      return receiver.delete();
    },
    get$value: function(obj) {
      return obj.value;
    },
    get$Thin: function(obj) {
      return obj.Thin;
    },
    get$ExtraLight: function(obj) {
      return obj.ExtraLight;
    },
    get$Light: function(obj) {
      return obj.Light;
    },
    get$Normal: function(obj) {
      return obj.Normal;
    },
    get$Medium: function(obj) {
      return obj.Medium;
    },
    get$SemiBold: function(obj) {
      return obj.SemiBold;
    },
    get$Bold: function(obj) {
      return obj.Bold;
    },
    get$ExtraBold: function(obj) {
      return obj.ExtraBold;
    },
    get$ExtraBlack: function(obj) {
      return obj.ExtraBlack;
    },
    get$RTL: function(obj) {
      return obj.RTL;
    },
    get$LTR: function(obj) {
      return obj.LTR;
    },
    get$Left: function(obj) {
      return obj.Left;
    },
    get$Right: function(obj) {
      return obj.Right;
    },
    get$Center: function(obj) {
      return obj.Center;
    },
    get$Justify: function(obj) {
      return obj.Justify;
    },
    get$Start: function(obj) {
      return obj.Start;
    },
    get$End: function(obj) {
      return obj.End;
    },
    get$Tight: function(obj) {
      return obj.Tight;
    },
    get$Max: function(obj) {
      return obj.Max;
    },
    get$Difference: function(obj) {
      return obj.Difference;
    },
    get$Intersect: function(obj) {
      return obj.Intersect;
    },
    get$Winding: function(obj) {
      return obj.Winding;
    },
    get$EvenOdd: function(obj) {
      return obj.EvenOdd;
    },
    get$Solid: function(obj) {
      return obj.Solid;
    },
    get$Butt: function(obj) {
      return obj.Butt;
    },
    get$Round: function(obj) {
      return obj.Round;
    },
    get$Square: function(obj) {
      return obj.Square;
    },
    get$Stroke: function(obj) {
      return obj.Stroke;
    },
    get$Fill: function(obj) {
      return obj.Fill;
    },
    get$Clear: function(obj) {
      return obj.Clear;
    },
    get$Src: function(obj) {
      return obj.Src;
    },
    get$Dst: function(obj) {
      return obj.Dst;
    },
    get$SrcOver: function(obj) {
      return obj.SrcOver;
    },
    get$DstOver: function(obj) {
      return obj.DstOver;
    },
    get$SrcIn: function(obj) {
      return obj.SrcIn;
    },
    get$DstIn: function(obj) {
      return obj.DstIn;
    },
    get$SrcOut: function(obj) {
      return obj.SrcOut;
    },
    get$DstOut: function(obj) {
      return obj.DstOut;
    },
    get$SrcATop: function(obj) {
      return obj.SrcATop;
    },
    get$DstATop: function(obj) {
      return obj.DstATop;
    },
    get$Xor: function(obj) {
      return obj.Xor;
    },
    get$Plus: function(obj) {
      return obj.Plus;
    },
    get$Modulate: function(obj) {
      return obj.Modulate;
    },
    get$Screen: function(obj) {
      return obj.Screen;
    },
    get$Overlay: function(obj) {
      return obj.Overlay;
    },
    get$Darken: function(obj) {
      return obj.Darken;
    },
    get$Lighten: function(obj) {
      return obj.Lighten;
    },
    get$ColorDodge: function(obj) {
      return obj.ColorDodge;
    },
    get$ColorBurn: function(obj) {
      return obj.ColorBurn;
    },
    get$HardLight: function(obj) {
      return obj.HardLight;
    },
    get$SoftLight: function(obj) {
      return obj.SoftLight;
    },
    get$Exclusion: function(obj) {
      return obj.Exclusion;
    },
    get$Multiply: function(obj) {
      return obj.Multiply;
    },
    get$Hue: function(obj) {
      return obj.Hue;
    },
    get$Saturation: function(obj) {
      return obj.Saturation;
    },
    get$Color: function(obj) {
      return obj.Color;
    },
    get$Luminosity: function(obj) {
      return obj.Luminosity;
    },
    get$Miter: function(obj) {
      return obj.Miter;
    },
    get$Bevel: function(obj) {
      return obj.Bevel;
    },
    get$None: function(obj) {
      return obj.None;
    },
    get$Low: function(obj) {
      return obj.Low;
    },
    get$High: function(obj) {
      return obj.High;
    },
    get$Clamp: function(obj) {
      return obj.Clamp;
    },
    get$Repeat: function(obj) {
      return obj.Repeat;
    },
    get$Mirror: function(obj) {
      return obj.Mirror;
    },
    get$Decal: function(obj) {
      return obj.Decal;
    },
    isDeleted$0: function(receiver) {
      return receiver.isDeleted();
    },
    MakeLinearGradient$5: function(receiver, p0, p1, p2, p3, p4) {
      return receiver.MakeLinearGradient(p0, p1, p2, p3, p4);
    },
    setBlendMode$1: function(receiver, p0) {
      return receiver.setBlendMode(p0);
    },
    setStyle$1: function(receiver, p0) {
      return receiver.setStyle(p0);
    },
    setStrokeWidth$1: function(receiver, p0) {
      return receiver.setStrokeWidth(p0);
    },
    setStrokeCap$1: function(receiver, p0) {
      return receiver.setStrokeCap(p0);
    },
    setStrokeJoin$1: function(receiver, p0) {
      return receiver.setStrokeJoin(p0);
    },
    setAntiAlias$1: function(receiver, p0) {
      return receiver.setAntiAlias(p0);
    },
    setColorInt$1: function(receiver, p0) {
      return receiver.setColorInt(p0);
    },
    setShader$1: function(receiver, p0) {
      return receiver.setShader(p0);
    },
    setMaskFilter$1: function(receiver, p0) {
      return receiver.setMaskFilter(p0);
    },
    setFilterQuality$1: function(receiver, p0) {
      return receiver.setFilterQuality(p0);
    },
    setColorFilter$1: function(receiver, p0) {
      return receiver.setColorFilter(p0);
    },
    setStrokeMiter$1: function(receiver, p0) {
      return receiver.setStrokeMiter(p0);
    },
    setImageFilter$1: function(receiver, p0) {
      return receiver.setImageFilter(p0);
    },
    MakeFromCmds$1: function(receiver, p0) {
      return receiver.MakeFromCmds(p0);
    },
    setFillType$1: function(receiver, p0) {
      return receiver.setFillType(p0);
    },
    addOval$3: function(receiver, p0, p1, p2) {
      return receiver.addOval(p0, p1, p2);
    },
    addRRect$2: function(receiver, p0, p1) {
      return receiver.addRRect(p0, p1);
    },
    addRect$1: function(receiver, p0) {
      return receiver.addRect(p0);
    },
    close$0: function(receiver) {
      return receiver.close();
    },
    get$contains: function(obj) {
      return obj.contains;
    },
    contains$2: function(receiver, p0, p1) {
      return receiver.contains(p0, p1);
    },
    getBounds$0: function(receiver) {
      return receiver.getBounds();
    },
    lineTo$2: function(receiver, p0, p1) {
      return receiver.lineTo(p0, p1);
    },
    moveTo$2: function(receiver, p0, p1) {
      return receiver.moveTo(p0, p1);
    },
    quadTo$4: function(receiver, p0, p1, p2, p3) {
      return receiver.quadTo(p0, p1, p2, p3);
    },
    get$isEmpty: function(obj) {
      return obj.isEmpty;
    },
    copy$0: function(receiver) {
      return receiver.copy();
    },
    get$transform: function(obj) {
      return obj.transform;
    },
    transform$9: function(receiver, p0, p1, p2, p3, p4, p5, p6, p7, p8) {
      return receiver.transform(p0, p1, p2, p3, p4, p5, p6, p7, p8);
    },
    toCmds$0: function(receiver) {
      return receiver.toCmds();
    },
    get$next: function(obj) {
      return obj.next;
    },
    get$length: function(obj) {
      return obj.length;
    },
    beginRecording$1: function(receiver, p0) {
      return receiver.beginRecording(p0);
    },
    finishRecordingAsPicture$0: function(receiver) {
      return receiver.finishRecordingAsPicture();
    },
    clipPath$3: function(receiver, p0, p1, p2) {
      return receiver.clipPath(p0, p1, p2);
    },
    clipRRect$3: function(receiver, p0, p1, p2) {
      return receiver.clipRRect(p0, p1, p2);
    },
    clipRect$3: function(receiver, p0, p1, p2) {
      return receiver.clipRect(p0, p1, p2);
    },
    drawCircle$4: function(receiver, p0, p1, p2, p3) {
      return receiver.drawCircle(p0, p1, p2, p3);
    },
    drawDRRect$3: function(receiver, p0, p1, p2) {
      return receiver.drawDRRect(p0, p1, p2);
    },
    drawPaint$1: function(receiver, p0) {
      return receiver.drawPaint(p0);
    },
    drawPath$2: function(receiver, p0, p1) {
      return receiver.drawPath(p0, p1);
    },
    drawRRect$2: function(receiver, p0, p1) {
      return receiver.drawRRect(p0, p1);
    },
    drawRect$2: function(receiver, p0, p1) {
      return receiver.drawRect(p0, p1);
    },
    drawShadow$7: function(receiver, p0, p1, p2, p3, p4, p5, p6) {
      return receiver.drawShadow(p0, p1, p2, p3, p4, p5, p6);
    },
    save$0: function(receiver) {
      return receiver.save();
    },
    saveLayer$4: function(receiver, p0, p1, p2, p3) {
      return receiver.saveLayer(p0, p1, p2, p3);
    },
    restore$0: function(receiver) {
      return receiver.restore();
    },
    restoreToCount$1: function(receiver, p0) {
      return receiver.restoreToCount(p0);
    },
    scale$2: function(receiver, p0, p1) {
      return receiver.scale(p0, p1);
    },
    concat$1: function(receiver, p0) {
      return receiver.concat(p0);
    },
    translate$2: function(receiver, p0, p1) {
      return receiver.translate(p0, p1);
    },
    drawPicture$1: function(receiver, p0) {
      return receiver.drawPicture(p0);
    },
    drawParagraph$3: function(receiver, p0, p1, p2) {
      return receiver.drawParagraph(p0, p1, p2);
    },
    MakeFromFontProvider$2: function(receiver, p0, p1) {
      return receiver.MakeFromFontProvider(p0, p1);
    },
    addText$1: function(receiver, p0) {
      return receiver.addText(p0);
    },
    pushStyle$1: function(receiver, p0) {
      return receiver.pushStyle(p0);
    },
    pushPaintStyle$3: function(receiver, p0, p1, p2) {
      return receiver.pushPaintStyle(p0, p1, p2);
    },
    pop$0: function(receiver) {
      return receiver.pop();
    },
    addPlaceholder$5: function(receiver, p0, p1, p2, p3, p4) {
      return receiver.addPlaceholder(p0, p1, p2, p3, p4);
    },
    build$0: function(receiver) {
      return receiver.build();
    },
    set$textAlign: function(obj, v) {
      return obj.textAlign = v;
    },
    set$textDirection: function(obj, v) {
      return obj.textDirection = v;
    },
    set$textHeightBehavior: function(obj, v) {
      return obj.textHeightBehavior = v;
    },
    set$maxLines: function(obj, v) {
      return obj.maxLines = v;
    },
    set$ellipsis: function(obj, v) {
      return obj.ellipsis = v;
    },
    set$strutStyle: function(obj, v) {
      return obj.strutStyle = v;
    },
    get$Double: function(obj) {
      return obj.Double;
    },
    get$Dotted: function(obj) {
      return obj.Dotted;
    },
    get$Dashed: function(obj) {
      return obj.Dashed;
    },
    get$Wavy: function(obj) {
      return obj.Wavy;
    },
    get$Alphabetic: function(obj) {
      return obj.Alphabetic;
    },
    get$Ideographic: function(obj) {
      return obj.Ideographic;
    },
    set$color: function(obj, v) {
      return obj.color = v;
    },
    set$decoration: function(obj, v) {
      return obj.decoration = v;
    },
    set$locale: function(obj, v) {
      return obj.locale = v;
    },
    set$offset: function(obj, v) {
      return obj.offset = v;
    },
    set$value: function(obj, v) {
      return obj.value = v;
    },
    getGlyphIDs$1: function(receiver, p0) {
      return receiver.getGlyphIDs(p0);
    },
    getGlyphBounds$3: function(receiver, p0, p1, p2) {
      return receiver.getGlyphBounds(p0, p1, p2);
    },
    MakeTypefaceFromData$1: function(receiver, p0) {
      return receiver.MakeTypefaceFromData(p0);
    },
    registerFont$2: function(receiver, p0, p1) {
      return receiver.registerFont(p0, p1);
    },
    getAlphabeticBaseline$0: function(receiver) {
      return receiver.getAlphabeticBaseline();
    },
    get$didExceedMaxLines: function(obj) {
      return obj.didExceedMaxLines;
    },
    didExceedMaxLines$0: function(receiver) {
      return receiver.didExceedMaxLines();
    },
    getHeight$0: function(receiver) {
      return receiver.getHeight();
    },
    getIdeographicBaseline$0: function(receiver) {
      return receiver.getIdeographicBaseline();
    },
    getLongestLine$0: function(receiver) {
      return receiver.getLongestLine();
    },
    getMaxIntrinsicWidth$0: function(receiver) {
      return receiver.getMaxIntrinsicWidth();
    },
    getMaxWidth$0: function(receiver) {
      return receiver.getMaxWidth();
    },
    getRectsForRange$4: function(receiver, p0, p1, p2, p3) {
      return receiver.getRectsForRange(p0, p1, p2, p3);
    },
    getRectsForPlaceholders$0: function(receiver) {
      return receiver.getRectsForPlaceholders();
    },
    getGlyphPositionAtCoordinate$2: function(receiver, p0, p1) {
      return receiver.getGlyphPositionAtCoordinate(p0, p1);
    },
    layout$1: function(receiver, p0) {
      return receiver.layout(p0);
    },
    get$affinity: function(obj) {
      return obj.affinity;
    },
    get$pos: function(obj) {
      return obj.pos;
    },
    get$end: function(obj) {
      return obj.end;
    },
    get$ambient: function(obj) {
      return obj.ambient;
    },
    get$spot: function(obj) {
      return obj.spot;
    },
    RefDefault$0: function(receiver) {
      return receiver.RefDefault();
    },
    Make$0: function(receiver) {
      return receiver.Make();
    },
    constructor$0: function(receiver) {
      return receiver.constructor();
    },
    get$name: function(obj) {
      return obj.name;
    },
    register$2: function(receiver, p0, p1) {
      return receiver.register(p0, p1);
    },
    get$size: function(obj) {
      return obj.size;
    },
    addPopStateListener$1: function(receiver, p0) {
      return receiver.addPopStateListener(p0);
    },
    getPath$0: function(receiver) {
      return receiver.getPath();
    },
    getState$0: function(receiver) {
      return receiver.getState();
    },
    pushState$3: function(receiver, p0, p1, p2) {
      return receiver.pushState(p0, p1, p2);
    },
    replaceState$3: function(receiver, p0, p1, p2) {
      return receiver.replaceState(p0, p1, p2);
    },
    go$1: function(receiver, p0) {
      return receiver.go(p0);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0: function(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$JavaScriptObject$toString(receiver);
      return "JavaScript function for " + H.S(J.toString$0$(dartClosure));
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    cast$1$0: function(receiver, $R) {
      return new H.CastList(receiver, H._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1: function(receiver, value) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1: function(receiver, index) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeAt"));
      if (index < 0 || index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    insert$2: function(receiver, index, value) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insert"));
      if (index < 0 || index > receiver.length)
        throw H.wrapException(P.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2: function(receiver, index, iterable) {
      var insertionLength, end;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insertAll"));
      P.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!type$.EfficientLengthIterable_dynamic._is(iterable))
        iterable = J.toList$0$ax(iterable);
      insertionLength = J.get$length$asx(iterable);
      receiver.length = receiver.length + insertionLength;
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    removeLast$0: function(receiver) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeLast"));
      if (receiver.length === 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, -1));
      return receiver.pop();
    },
    remove$1: function(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    _removeWhere$2: function(receiver, test, removeMatching) {
      var i, element, t1, retained = [],
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (!test.call$1(element))
          retained.push(element);
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      t1 = retained.length;
      if (t1 === end)
        return;
      this.set$length(receiver, t1);
      for (i = 0; i < retained.length; ++i)
        receiver[i] = retained[i];
    },
    addAll$1: function(receiver, collection) {
      var t1;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("addAll"));
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current(t1));
    },
    _addAllFromArray$1: function(receiver, array) {
      var i,
        len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw H.wrapException(P.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    forEach$1: function(receiver, f) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1: function(receiver, f, $T) {
      return new H.MappedListIterable(receiver, f, H._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1: function(receiver, separator) {
      var i,
        list = P.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        list[i] = H.S(receiver[i]);
      return list.join(separator);
    },
    take$1: function(receiver, n) {
      return H.SubListIterable$(receiver, 0, H.checkNotNullable(n, "count", type$.int), H._arrayInstanceType(receiver)._precomputed1);
    },
    skip$1: function(receiver, n) {
      return H.SubListIterable$(receiver, n, null, H._arrayInstanceType(receiver)._precomputed1);
    },
    fold$1$2: function(receiver, initialValue, combine) {
      var value, i,
        $length = receiver.length;
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    fold$2: function($receiver, initialValue, combine) {
      return this.fold$1$2($receiver, initialValue, combine, type$.dynamic);
    },
    firstWhere$2$orElse: function(receiver, test, orElse) {
      var i, element,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (test.call$1(element))
          return element;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      throw H.wrapException(H.IterableElementError_noElement());
    },
    firstWhere$1: function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    },
    lastWhere$2$orElse: function(receiver, test, orElse) {
      var i, element,
        $length = receiver.length;
      for (i = $length - 1; i >= 0; --i) {
        element = receiver[i];
        if (test.call$1(element))
          return element;
        if ($length !== receiver.length)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(H.IterableElementError_noElement());
    },
    lastWhere$1: function($receiver, test) {
      return this.lastWhere$2$orElse($receiver, test, null);
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      var end0 = receiver.length;
      if (start > end0)
        throw H.wrapException(P.RangeError$range(start, 0, end0, "start", null));
      if (end == null)
        end = end0;
      else if (end < start || end > end0)
        throw H.wrapException(P.RangeError$range(end, start, end0, "end", null));
      if (start === end)
        return H.setRuntimeTypeInfo([], H._arrayInstanceType(receiver));
      return H.setRuntimeTypeInfo(receiver.slice(start, end), H._arrayInstanceType(receiver));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    getRange$2: function(receiver, start, end) {
      P.RangeError_checkValidRange(start, end, receiver.length);
      return H.SubListIterable$(receiver, start, end, H._arrayInstanceType(receiver)._precomputed1);
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(H.IterableElementError_noElement());
    },
    get$last: function(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw H.wrapException(H.IterableElementError_noElement());
    },
    get$single: function(receiver) {
      var t1 = receiver.length;
      if (t1 === 1)
        return receiver[0];
      if (t1 === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      throw H.wrapException(H.IterableElementError_tooMany());
    },
    removeRange$2: function(receiver, start, end) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeRange"));
      P.RangeError_checkValidRange(start, end, receiver.length);
      receiver.splice(start, end - start);
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("setRange"));
      P.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      P.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw H.wrapException(H.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    any$1: function(receiver, test) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (test.call$1(receiver[i]))
          return true;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    every$1: function(receiver, test) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (!test.call$1(receiver[i]))
          return false;
        if (receiver.length !== end)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return true;
    },
    sort$1: function(receiver, compare) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("sort"));
      H.Sort_sort(receiver, compare == null ? J._interceptors_JSArray__compareAny$closure() : compare);
    },
    sort$0: function($receiver) {
      return this.sort$1($receiver, null);
    },
    indexOf$1: function(receiver, element) {
      var i,
        $length = receiver.length;
      if (0 >= $length)
        return -1;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(receiver[i], element))
          return i;
      return -1;
    },
    contains$1: function(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.length !== 0;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable: function(receiver, growable) {
      var t1 = H.setRuntimeTypeInfo(receiver.slice(0), H._arrayInstanceType(receiver));
      return t1;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    toSet$0: function(receiver) {
      return P.LinkedHashSet_LinkedHashSet$from(receiver, H._arrayInstanceType(receiver)._precomputed1);
    },
    get$iterator: function(receiver) {
      return new J.ArrayIterator(receiver, receiver.length);
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      if (newLength < 0)
        throw H.wrapException(P.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        H._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index: function(receiver, index) {
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $add: function(receiver, other) {
      var t1 = P.List_List$of(receiver, true, H._arrayInstanceType(receiver)._precomputed1);
      this.addAll$1(t1, other);
      return t1;
    },
    set$last: function(receiver, element) {
      var t1 = receiver.length;
      if (t1 === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      this.$indexSet(receiver, t1 - 1, element);
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current: function(_) {
      return H._instanceType(this)._precomputed1._as(this.__interceptors$_current);
    },
    moveNext$0: function() {
      var t2, _this = this,
        t1 = _this.__interceptors$_iterable,
        $length = t1.length;
      if (_this.__interceptors$_length !== $length)
        throw H.wrapException(H.throwConcurrentModificationError(t1));
      t2 = _this.__interceptors$_index;
      if (t2 >= $length) {
        _this.__interceptors$_current = null;
        return false;
      }
      _this.__interceptors$_current = t1[t2];
      _this.__interceptors$_index = t2 + 1;
      return true;
    }
  };
  J.JSNumber.prototype = {
    compareTo$1: function(receiver, b) {
      var bIsNegative;
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative: function(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    get$sign: function(receiver) {
      var t1;
      if (receiver > 0)
        t1 = 1;
      else
        t1 = receiver < 0 ? -1 : receiver;
      return t1;
    },
    toInt$0: function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".toInt()"));
    },
    ceil$0: function(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647) {
          truncated = receiver | 0;
          return receiver === truncated ? truncated : truncated + 1;
        }
      } else if (receiver >= -2147483648)
        return receiver | 0;
      d = Math.ceil(receiver);
      if (isFinite(d))
        return d;
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".ceil()"));
    },
    floor$0: function(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".floor()"));
    },
    round$0: function(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw H.wrapException(P.UnsupportedError$("" + receiver + ".round()"));
    },
    roundToDouble$0: function(receiver) {
      if (receiver < 0)
        return -Math.round(-receiver);
      else
        return Math.round(receiver);
    },
    clamp$2: function(receiver, lowerLimit, upperLimit) {
      if (this.compareTo$1(lowerLimit, upperLimit) > 0)
        throw H.wrapException(H.argumentErrorValue(lowerLimit));
      if (this.compareTo$1(receiver, lowerLimit) < 0)
        return lowerLimit;
      if (this.compareTo$1(receiver, upperLimit) > 0)
        return upperLimit;
      return receiver;
    },
    toStringAsFixed$1: function(receiver, fractionDigits) {
      var result;
      if (fractionDigits > 20)
        throw H.wrapException(P.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    },
    toRadixString$1: function(receiver, radix) {
      var result, match, exponent, t1;
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (C.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        H.throwExpression(P.UnsupportedError$("Unexpected toString result: " + result));
      result = match[1];
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + C.JSString_methods.$mul("0", exponent);
    },
    toString$0: function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode: function(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $add: function(receiver, other) {
      return receiver + other;
    },
    $sub: function(receiver, other) {
      return receiver - other;
    },
    $mul: function(receiver, other) {
      return receiver * other;
    },
    $mod: function(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    },
    $tdiv: function(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1: function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1: function(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw H.wrapException(P.UnsupportedError$("Result of truncating division is " + H.S(quotient) + ": " + H.S(receiver) + " ~/ " + H.S(other)));
    },
    $shl: function(receiver, other) {
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    _shlPositive$1: function(receiver, other) {
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    _shrOtherPositive$1: function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1: function(receiver, other) {
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1: function(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    $or: function(receiver, other) {
      return (receiver | other) >>> 0;
    },
    get$runtimeType: function(receiver) {
      return C.Type_num_cv7;
    },
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$sign: function(receiver) {
      var t1;
      if (receiver > 0)
        t1 = 1;
      else
        t1 = receiver < 0 ? -1 : receiver;
      return t1;
    },
    get$runtimeType: function(receiver) {
      return C.Type_int_tHn;
    },
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_double_K1J;
    }
  };
  J.JSString.prototype = {
    codeUnitAt$1: function(receiver, index) {
      if (index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        H.throwExpression(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    _codeUnitAt$1: function(receiver, index) {
      if (index >= receiver.length)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    allMatches$2: function(receiver, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw H.wrapException(P.RangeError$range(start, 0, t1, null, null));
      return new H._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1: function($receiver, string) {
      return this.allMatches$2($receiver, string, 0);
    },
    $add: function(receiver, other) {
      return receiver + other;
    },
    endsWith$1: function(receiver, other) {
      var otherLength = other.length,
        t1 = receiver.length;
      if (otherLength > t1)
        return false;
      return other === this.substring$1(receiver, t1 - otherLength);
    },
    replaceFirst$2: function(receiver, from, to) {
      P.RangeError_checkValueInInterval(0, 0, receiver.length, "startIndex");
      return H.stringReplaceFirstUnchecked(receiver, from, to, 0);
    },
    split$1: function(receiver, pattern) {
      var t1 = H.setRuntimeTypeInfo(receiver.split(pattern), type$.JSArray_String);
      return t1;
    },
    replaceRange$3: function(receiver, start, end, replacement) {
      var e = P.RangeError_checkValidRange(start, end, receiver.length);
      return H.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    startsWith$2: function(receiver, pattern, index) {
      var endIndex;
      if (index < 0 || index > receiver.length)
        throw H.wrapException(P.RangeError$range(index, 0, receiver.length, null, null));
      endIndex = index + pattern.length;
      if (endIndex > receiver.length)
        return false;
      return pattern === receiver.substring(index, endIndex);
    },
    startsWith$1: function($receiver, pattern) {
      return this.startsWith$2($receiver, pattern, 0);
    },
    substring$2: function(receiver, startIndex, endIndex) {
      if (endIndex == null)
        endIndex = receiver.length;
      if (startIndex < 0)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (startIndex > endIndex)
        throw H.wrapException(P.RangeError$value(startIndex, null));
      if (endIndex > receiver.length)
        throw H.wrapException(P.RangeError$value(endIndex, null));
      return receiver.substring(startIndex, endIndex);
    },
    substring$1: function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    },
    toLowerCase$0: function(receiver) {
      return receiver.toLowerCase();
    },
    trim$0: function(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (this._codeUnitAt$1(result, 0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    trimLeft$0: function(receiver) {
      var result, startIndex;
      if (typeof receiver.trimLeft != "undefined") {
        result = receiver.trimLeft();
        if (result.length === 0)
          return result;
        startIndex = this._codeUnitAt$1(result, 0) === 133 ? J.JSString__skipLeadingWhitespace(result, 1) : 0;
      } else {
        startIndex = J.JSString__skipLeadingWhitespace(receiver, 0);
        result = receiver;
      }
      if (startIndex === 0)
        return result;
      if (startIndex === result.length)
        return "";
      return result.substring(startIndex);
    },
    trimRight$0: function(receiver) {
      var result, endIndex, t1;
      if (typeof receiver.trimRight != "undefined") {
        result = receiver.trimRight();
        endIndex = result.length;
        if (endIndex === 0)
          return result;
        t1 = endIndex - 1;
        if (this.codeUnitAt$1(result, t1) === 133)
          endIndex = J.JSString__skipTrailingWhitespace(result, t1);
      } else {
        endIndex = J.JSString__skipTrailingWhitespace(receiver, receiver.length);
        result = receiver;
      }
      if (endIndex === result.length)
        return result;
      if (endIndex === 0)
        return "";
      return result.substring(0, endIndex);
    },
    $mul: function(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw H.wrapException(C.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2: function(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$2: function(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1: function($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    },
    lastIndexOf$2: function(receiver, pattern, start) {
      var t1, t2;
      if (start == null)
        start = receiver.length;
      else if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
      t1 = pattern.length;
      t2 = receiver.length;
      if (start + t1 > t2)
        start = t2 - t1;
      return receiver.lastIndexOf(pattern, start);
    },
    lastIndexOf$1: function($receiver, pattern) {
      return this.lastIndexOf$2($receiver, pattern, null);
    },
    contains$2: function(receiver, other, startIndex) {
      var t1 = receiver.length;
      if (startIndex > t1)
        throw H.wrapException(P.RangeError$range(startIndex, 0, t1, null, null));
      return H.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1: function($receiver, other) {
      return this.contains$2($receiver, other, 0);
    },
    compareTo$1: function(receiver, other) {
      var t1;
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0: function(receiver) {
      return receiver;
    },
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType: function(receiver) {
      return C.Type_String_k8F;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isString: 1
  };
  H._CastIterableBase.prototype = {
    get$iterator: function(_) {
      var t1 = H._instanceType(this);
      return new H.CastIterator(J.get$iterator$ax(this.get$_source()), t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("CastIterator<1,2>"));
    },
    get$length: function(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty: function(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1: function(_, count) {
      var t1 = H._instanceType(this);
      return H.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    take$1: function(_, count) {
      var t1 = H._instanceType(this);
      return H.CastIterable_CastIterable(J.take$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1: function(_, index) {
      return H._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    get$first: function(_) {
      return H._instanceType(this)._rest[1]._as(J.get$first$ax(this.get$_source()));
    },
    get$last: function(_) {
      return H._instanceType(this)._rest[1]._as(J.get$last$ax(this.get$_source()));
    },
    contains$1: function(_, other) {
      return J.contains$1$asx(this.get$_source(), other);
    },
    toString$0: function(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  H.CastIterator.prototype = {
    moveNext$0: function() {
      return this._source.moveNext$0();
    },
    get$current: function(_) {
      var t1 = this._source;
      return this.$ti._rest[1]._as(t1.get$current(t1));
    }
  };
  H.CastIterable.prototype = {
    get$_source: function() {
      return this._source;
    }
  };
  H._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  H._CastListBase.prototype = {
    $index: function(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet: function(_, index, value) {
      J.$indexSet$ax(this._source, index, this.$ti._precomputed1._as(value));
    },
    set$length: function(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1: function(_, value) {
      J.add$1$ax(this._source, this.$ti._precomputed1._as(value));
    },
    remove$1: function(_, value) {
      return J.remove$1$ax(this._source, value);
    },
    removeLast$0: function(_) {
      return this.$ti._rest[1]._as(J.removeLast$0$ax(this._source));
    },
    getRange$2: function(_, start, end) {
      var t1 = this.$ti;
      return H.CastIterable_CastIterable(J.getRange$2$ax(this._source, start, end), t1._precomputed1, t1._rest[1]);
    },
    setRange$4: function(_, start, end, iterable, skipCount) {
      var t1 = this.$ti;
      J.setRange$4$ax(this._source, start, end, H.CastIterable_CastIterable(iterable, t1._rest[1], t1._precomputed1), skipCount);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  H.CastList.prototype = {
    cast$1$0: function(_, $R) {
      return new H.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source: function() {
      return this._source;
    }
  };
  H.CastMap.prototype = {
    cast$2$0: function(_, RK, RV) {
      var t1 = this.$ti;
      return new H.CastMap(this._source, t1._eval$1("@<1>")._bind$1(t1._rest[1])._bind$1(RK)._bind$1(RV)._eval$1("CastMap<1,2,3,4>"));
    },
    containsKey$1: function(_, key) {
      return J.containsKey$1$x(this._source, key);
    },
    $index: function(_, key) {
      return this.$ti._eval$1("4?")._as(J.$index$asx(this._source, key));
    },
    $indexSet: function(_, key, value) {
      var t1 = this.$ti;
      J.$indexSet$ax(this._source, t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      var t1 = this.$ti;
      return t1._rest[3]._as(J.putIfAbsent$2$x(this._source, t1._precomputed1._as(key), new H.CastMap_putIfAbsent_closure(this, ifAbsent)));
    },
    remove$1: function(_, key) {
      return this.$ti._eval$1("4?")._as(J.remove$1$ax(this._source, key));
    },
    forEach$1: function(_, f) {
      J.forEach$1$ax(this._source, new H.CastMap_forEach_closure(this, f));
    },
    get$keys: function(_) {
      var t1 = this.$ti;
      return H.CastIterable_CastIterable(J.get$keys$x(this._source), t1._precomputed1, t1._rest[2]);
    },
    get$values: function(_) {
      var t1 = this.$ti;
      return H.CastIterable_CastIterable(J.get$values$x(this._source), t1._rest[1], t1._rest[3]);
    },
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this._source);
    },
    get$isNotEmpty: function(_) {
      return J.get$isNotEmpty$asx(this._source);
    },
    get$entries: function(_) {
      return J.get$entries$x(this._source).map$1$1(0, new H.CastMap_entries_closure(this), this.$ti._eval$1("MapEntry<3,4>"));
    }
  };
  H.CastMap_putIfAbsent_closure.prototype = {
    call$0: function() {
      return this.$this.$ti._rest[1]._as(this.ifAbsent.call$0());
    },
    $signature: function() {
      return this.$this.$ti._eval$1("2()");
    }
  };
  H.CastMap_forEach_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this.$this.$ti;
      this.f.call$2(t1._rest[2]._as(key), t1._rest[3]._as(value));
    },
    $signature: function() {
      return this.$this.$ti._eval$1("~(1,2)");
    }
  };
  H.CastMap_entries_closure.prototype = {
    call$1: function(e) {
      var t1 = this.$this.$ti,
        t2 = t1._rest[3];
      return new P.MapEntry(t1._rest[2]._as(e.key), t2._as(e.value), t1._eval$1("@<3>")._bind$1(t2)._eval$1("MapEntry<1,2>"));
    },
    $signature: function() {
      return this.$this.$ti._eval$1("MapEntry<3,4>(MapEntry<1,2>)");
    }
  };
  H.LateError.prototype = {
    toString$0: function(_) {
      var t1 = "LateInitializationError: " + this._message;
      return t1;
    }
  };
  H.CodeUnits.prototype = {
    get$length: function(_) {
      return this._string.length;
    },
    $index: function(_, i) {
      return C.JSString_methods.codeUnitAt$1(this._string, i);
    }
  };
  H.nullFuture_closure.prototype = {
    call$0: function() {
      return P.Future_Future$value(null, type$.Null);
    },
    $signature: 45
  };
  H.EfficientLengthIterable.prototype = {};
  H.ListIterable.prototype = {
    get$iterator: function(_) {
      return new H.ListIterator(this, this.get$length(this));
    },
    forEach$1: function(_, action) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        action.call$1(_this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$first: function(_) {
      if (this.get$length(this) === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    get$last: function(_) {
      var _this = this;
      if (_this.get$length(_this) === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      return _this.elementAt$1(0, _this.get$length(_this) - 1);
    },
    contains$1: function(_, element) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(_this.elementAt$1(0, i), element))
          return true;
        if ($length !== _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
      return false;
    },
    join$1: function(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = H.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + H.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw H.wrapException(P.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += H.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw H.wrapException(P.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    where$1: function(_, test) {
      return this.super$Iterable$where(0, test);
    },
    map$1$1: function(_, f, $T) {
      return new H.MappedListIterable(this, f, H._instanceType(this)._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1: function(_, count) {
      return H.SubListIterable$(this, count, null, H._instanceType(this)._eval$1("ListIterable.E"));
    },
    take$1: function(_, count) {
      return H.SubListIterable$(this, 0, H.checkNotNullable(count, "count", type$.int), H._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$1$growable: function(_, growable) {
      return P.List_List$of(this, growable, H._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    toSet$0: function(_) {
      var i, _this = this,
        result = P.LinkedHashSet_LinkedHashSet(H._instanceType(_this)._eval$1("ListIterable.E"));
      for (i = 0; i < _this.get$length(_this); ++i)
        result.add$1(0, _this.elementAt$1(0, i));
      return result;
    }
  };
  H.SubListIterable.prototype = {
    SubListIterable$3: function(_iterable, _start, _endOrLength, $E) {
      var endOrLength,
        t1 = this._start;
      P.RangeError_checkNotNegative(t1, "start");
      endOrLength = this._endOrLength;
      if (endOrLength != null) {
        P.RangeError_checkNotNegative(endOrLength, "end");
        if (t1 > endOrLength)
          throw H.wrapException(P.RangeError$range(t1, 0, endOrLength, "start", null));
      }
    },
    get$_endIndex: function() {
      var $length = J.get$length$asx(this._iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex: function() {
      var $length = J.get$length$asx(this._iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length: function(_) {
      var endOrLength,
        $length = J.get$length$asx(this._iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      return endOrLength - t1;
    },
    elementAt$1: function(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw H.wrapException(P.IndexError$(index, _this, "index", null, null));
      return J.elementAt$1$ax(_this._iterable, realIndex);
    },
    skip$1: function(_, count) {
      var newStart, endOrLength, _this = this;
      P.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new H.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return H.SubListIterable$(_this._iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    take$1: function(_, count) {
      var endOrLength, t1, newEnd, _this = this;
      P.RangeError_checkNotNegative(count, "count");
      endOrLength = _this._endOrLength;
      t1 = _this._start;
      newEnd = t1 + count;
      if (endOrLength == null)
        return H.SubListIterable$(_this._iterable, t1, newEnd, _this.$ti._precomputed1);
      else {
        if (endOrLength < newEnd)
          return _this;
        return H.SubListIterable$(_this._iterable, t1, newEnd, _this.$ti._precomputed1);
      }
    },
    toList$1$growable: function(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this._iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      result = P.List_List$filled($length, t2.elementAt$1(t1, start), growable, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        result[i] = t2.elementAt$1(t1, start + i);
        if (t2.get$length(t1) < end)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  H.ListIterator.prototype = {
    get$current: function(_) {
      return H._instanceType(this)._precomputed1._as(this._current);
    },
    moveNext$0: function() {
      var t3, _this = this,
        t1 = _this._iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this._length !== $length)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = _this._index;
      if (t3 >= $length) {
        _this._current = null;
        return false;
      }
      _this._current = t2.elementAt$1(t1, t3);
      ++_this._index;
      return true;
    }
  };
  H.MappedIterable.prototype = {
    get$iterator: function(_) {
      return new H.MappedIterator(J.get$iterator$ax(this._iterable), this._f);
    },
    get$length: function(_) {
      return J.get$length$asx(this._iterable);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this._iterable);
    },
    get$first: function(_) {
      return this._f.call$1(J.get$first$ax(this._iterable));
    },
    get$last: function(_) {
      return this._f.call$1(J.get$last$ax(this._iterable));
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._iterable, index));
    }
  };
  H.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  H.MappedIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this._current = _this._f.call$1(t1.get$current(t1));
        return true;
      }
      _this._current = null;
      return false;
    },
    get$current: function(_) {
      return H._instanceType(this)._rest[1]._as(this._current);
    }
  };
  H.MappedListIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  H.WhereIterable.prototype = {
    get$iterator: function(_) {
      return new H.WhereIterator(J.get$iterator$ax(this._iterable), this._f);
    },
    map$1$1: function(_, f, $T) {
      return new H.MappedIterable(this, f, this.$ti._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    }
  };
  H.WhereIterator.prototype = {
    moveNext$0: function() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (t2.call$1(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.ExpandIterable.prototype = {
    get$iterator: function(_) {
      return new H.ExpandIterator(J.get$iterator$ax(this._iterable), this._f, C.C_EmptyIterator);
    }
  };
  H.ExpandIterator.prototype = {
    get$current: function(_) {
      return H._instanceType(this)._rest[1]._as(this._current);
    },
    moveNext$0: function() {
      var t2, t3, _this = this,
        t1 = _this._currentExpansion;
      if (t1 == null)
        return false;
      for (t2 = _this._iterator, t3 = _this._f; !t1.moveNext$0();) {
        _this._current = null;
        if (t2.moveNext$0()) {
          _this._currentExpansion = null;
          t1 = J.get$iterator$ax(t3.call$1(t2.get$current(t2)));
          _this._currentExpansion = t1;
        } else
          return false;
      }
      t1 = _this._currentExpansion;
      _this._current = t1.get$current(t1);
      return true;
    }
  };
  H.TakeIterable.prototype = {
    get$iterator: function(_) {
      return new H.TakeIterator(J.get$iterator$ax(this._iterable), this._takeCount);
    }
  };
  H.EfficientLengthTakeIterable.prototype = {
    get$length: function(_) {
      var iterableLength = J.get$length$asx(this._iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  H.TakeIterator.prototype = {
    moveNext$0: function() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current: function(_) {
      var t1;
      if (this._remaining < 0)
        return H._instanceType(this)._precomputed1._as(null);
      t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.SkipIterable.prototype = {
    skip$1: function(_, count) {
      P.RangeError_checkNotNegative(count, "count");
      return new H.SkipIterable(this._iterable, this._skipCount + count, H._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator: function(_) {
      return new H.SkipIterator(J.get$iterator$ax(this._iterable), this._skipCount);
    }
  };
  H.EfficientLengthSkipIterable.prototype = {
    get$length: function(_) {
      var $length = J.get$length$asx(this._iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1: function(_, count) {
      P.RangeError_checkNotNegative(count, "count");
      return new H.EfficientLengthSkipIterable(this._iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  H.SkipIterator.prototype = {
    moveNext$0: function() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.SkipWhileIterable.prototype = {
    get$iterator: function(_) {
      return new H.SkipWhileIterator(J.get$iterator$ax(this._iterable), this._f);
    }
  };
  H.SkipWhileIterator.prototype = {
    moveNext$0: function() {
      var t1, t2, _this = this;
      if (!_this._hasSkipped) {
        _this._hasSkipped = true;
        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)
          if (!t2.call$1(t1.get$current(t1)))
            return true;
      }
      return _this._iterator.moveNext$0();
    },
    get$current: function(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  H.EmptyIterable.prototype = {
    get$iterator: function(_) {
      return C.C_EmptyIterator;
    },
    forEach$1: function(_, action) {
    },
    get$isEmpty: function(_) {
      return true;
    },
    get$length: function(_) {
      return 0;
    },
    get$first: function(_) {
      throw H.wrapException(H.IterableElementError_noElement());
    },
    get$last: function(_) {
      throw H.wrapException(H.IterableElementError_noElement());
    },
    elementAt$1: function(_, index) {
      throw H.wrapException(P.RangeError$range(index, 0, 0, "index", null));
    },
    contains$1: function(_, element) {
      return false;
    },
    map$1$1: function(_, f, $T) {
      return new H.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1: function(_, count) {
      P.RangeError_checkNotNegative(count, "count");
      return this;
    },
    take$1: function(_, count) {
      P.RangeError_checkNotNegative(count, "count");
      return this;
    },
    toList$1$growable: function(_, growable) {
      var t1 = J.JSArray_JSArray$growable(0, this.$ti._precomputed1);
      return t1;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    toSet$0: function(_) {
      return P.LinkedHashSet_LinkedHashSet(this.$ti._precomputed1);
    }
  };
  H.EmptyIterator.prototype = {
    moveNext$0: function() {
      return false;
    },
    get$current: function(_) {
      throw H.wrapException(H.IterableElementError_noElement());
    }
  };
  H.FollowedByIterable.prototype = {
    get$iterator: function(_) {
      return new H.FollowedByIterator(J.get$iterator$ax(this.__internal$_first), this._second);
    },
    get$length: function(_) {
      var t1 = this._second;
      return J.get$length$asx(this.__internal$_first) + t1.get$length(t1);
    },
    get$isEmpty: function(_) {
      var t1;
      if (J.get$isEmpty$asx(this.__internal$_first)) {
        t1 = this._second;
        t1 = !t1.get$iterator(t1).moveNext$0();
      } else
        t1 = false;
      return t1;
    },
    get$isNotEmpty: function(_) {
      var t1;
      if (!J.get$isNotEmpty$asx(this.__internal$_first)) {
        t1 = this._second;
        t1 = !t1.get$isEmpty(t1);
      } else
        t1 = true;
      return t1;
    },
    contains$1: function(_, value) {
      return J.contains$1$asx(this.__internal$_first, value) || this._second.contains$1(0, value);
    },
    get$first: function(_) {
      var t1,
        iterator = J.get$iterator$ax(this.__internal$_first);
      if (iterator.moveNext$0())
        return iterator.get$current(iterator);
      t1 = this._second;
      return t1.get$first(t1);
    },
    get$last: function(_) {
      var last,
        t1 = this._second,
        iterator = new H.ExpandIterator(J.get$iterator$ax(t1._iterable), t1._f, C.C_EmptyIterator);
      if (iterator.moveNext$0()) {
        t1 = H._instanceType(iterator)._rest[1];
        last = t1._as(iterator._current);
        for (; iterator.moveNext$0();)
          last = t1._as(iterator._current);
        return last;
      }
      return J.get$last$ax(this.__internal$_first);
    }
  };
  H.FollowedByIterator.prototype = {
    moveNext$0: function() {
      var t1, _this = this;
      if (_this._currentIterator.moveNext$0())
        return true;
      t1 = _this._nextIterable;
      if (t1 != null) {
        t1 = new H.ExpandIterator(J.get$iterator$ax(t1._iterable), t1._f, C.C_EmptyIterator);
        _this._currentIterator = t1;
        _this._nextIterable = null;
        return t1.moveNext$0();
      }
      return false;
    },
    get$current: function(_) {
      var t1 = this._currentIterator;
      return t1.get$current(t1);
    }
  };
  H.WhereTypeIterable.prototype = {
    get$iterator: function(_) {
      return new H.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  H.WhereTypeIterator.prototype = {
    moveNext$0: function() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current: function(_) {
      var t1 = this._source;
      return this.$ti._precomputed1._as(t1.get$current(t1));
    }
  };
  H.FixedLengthListMixin.prototype = {
    set$length: function(receiver, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    },
    remove$1: function(receiver, element) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
    },
    removeLast$0: function(receiver) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
    }
  };
  H.UnmodifiableListMixin.prototype = {
    $indexSet: function(_, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    },
    remove$1: function(_, element) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    },
    removeLast$0: function(_) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    },
    setRange$4: function(_, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    }
  };
  H.UnmodifiableListBase.prototype = {};
  H.ReversedListIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: function(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  H.Symbol.prototype = {
    get$hashCode: function(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 664597 * J.get$hashCode$(this.__internal$_name) & 536870911;
      this._hashCode = hash;
      return hash;
    },
    toString$0: function(_) {
      return 'Symbol("' + H.S(this.__internal$_name) + '")';
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof H.Symbol && this.__internal$_name == other.__internal$_name;
    },
    $isSymbol0: 1
  };
  H.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  H.ConstantMapView.prototype = {};
  H.ConstantMap.prototype = {
    cast$2$0: function(_, RK, RV) {
      var t1 = H._instanceType(this);
      return P.Map_castFrom(this, t1._precomputed1, t1._rest[1], RK, RV);
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$length(this) !== 0;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    $indexSet: function(_, key, val) {
      H.ConstantMap__throwUnmodifiable();
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      H.ConstantMap__throwUnmodifiable();
    },
    remove$1: function(_, key) {
      H.ConstantMap__throwUnmodifiable();
    },
    get$entries: function(_) {
      return this.entries$body$ConstantMap(_, H._instanceType(this)._eval$1("MapEntry<1,2>"));
    },
    entries$body$ConstantMap: function($async$_, $async$type) {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var _ = $async$_;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, key, t3;
        return function $async$get$entries($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys($async$self), t1 = t1.get$iterator(t1), t2 = H._instanceType($async$self), t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1])._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current(t1);
                t3 = $async$self.$index(0, key);
                t3.toString;
                $async$goto = 4;
                return new P.MapEntry(key, t3, t2);
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, $async$type);
    },
    map$2$1: function(_, transform, K2, V2) {
      var result = P.LinkedHashMap_LinkedHashMap$_empty(K2, V2);
      this.forEach$1(0, new H.ConstantMap_map_closure(this, transform, result));
      return result;
    },
    $isMap: 1
  };
  H.ConstantMap_map_closure.prototype = {
    call$2: function(key, value) {
      var entry = this.transform.call$2(key, value);
      this.result.$indexSet(0, entry.key, entry.value);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  H.ConstantStringMap.prototype = {
    get$length: function(_) {
      return this.__js_helper$_length;
    },
    containsKey$1: function(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index: function(_, key) {
      if (!this.containsKey$1(0, key))
        return null;
      return this._fetch$1(key);
    },
    _fetch$1: function(key) {
      return this._jsObject[key];
    },
    forEach$1: function(_, f) {
      var t1, i, key,
        keys = this._keys;
      for (t1 = keys.length, i = 0; i < t1; ++i) {
        key = keys[i];
        f.call$2(key, this._fetch$1(key));
      }
    },
    get$keys: function(_) {
      return new H._ConstantMapKeyIterable(this, H._instanceType(this)._eval$1("_ConstantMapKeyIterable<1>"));
    },
    get$values: function(_) {
      var t1 = H._instanceType(this);
      return H.MappedIterable_MappedIterable(this._keys, new H.ConstantStringMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    }
  };
  H.ConstantStringMap_values_closure.prototype = {
    call$1: function(key) {
      return this.$this._fetch$1(key);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  H._ConstantMapKeyIterable.prototype = {
    get$iterator: function(_) {
      var t1 = this._map._keys;
      return new J.ArrayIterator(t1, t1.length);
    },
    get$length: function(_) {
      return this._map._keys.length;
    }
  };
  H.GeneralConstantMap.prototype = {
    _getMap$0: function() {
      var t1, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        t1 = _this.$ti;
        backingMap = new H.JsLinkedHashMap(t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("JsLinkedHashMap<1,2>"));
        H.fillLiteralMap(_this._jsData, backingMap);
        _this.$map = backingMap;
      }
      return backingMap;
    },
    containsKey$1: function(_, key) {
      return this._getMap$0().containsKey$1(0, key);
    },
    $index: function(_, key) {
      return this._getMap$0().$index(0, key);
    },
    forEach$1: function(_, f) {
      this._getMap$0().forEach$1(0, f);
    },
    get$keys: function(_) {
      var t1 = this._getMap$0();
      return t1.get$keys(t1);
    },
    get$values: function(_) {
      var t1 = this._getMap$0();
      return t1.get$values(t1);
    },
    get$length: function(_) {
      var t1 = this._getMap$0();
      return t1.get$length(t1);
    }
  };
  H.JSInvocationMirror.prototype = {
    get$memberName: function() {
      var t1 = this.__js_helper$_memberName;
      return t1;
    },
    get$positionalArguments: function() {
      var t1, argumentCount, list, index, _this = this;
      if (_this.__js_helper$_kind === 1)
        return C.List_empty1;
      t1 = _this._arguments;
      argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;
      if (argumentCount === 0)
        return C.List_empty1;
      list = [];
      for (index = 0; index < argumentCount; ++index)
        list.push(t1[index]);
      return J.JSArray_markUnmodifiableList(list);
    },
    get$namedArguments: function() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, _this = this;
      if (_this.__js_helper$_kind !== 0)
        return C.Map_empty;
      t1 = _this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = _this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;
      if (namedArgumentCount === 0)
        return C.Map_empty;
      map = new H.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);
      for (i = 0; i < namedArgumentCount; ++i)
        map.$indexSet(0, new H.Symbol(t1[i]), t2[namedArgumentsStartIndex + i]);
      return new H.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);
    }
  };
  H.Primitives_initTicker_closure.prototype = {
    call$0: function() {
      return C.JSNumber_methods.floor$0(1000 * this.performance.now());
    },
    $signature: 28
  };
  H.Primitives_functionNoSuchMethod_closure.prototype = {
    call$2: function($name, argument) {
      var t1 = this._box_0;
      t1.names = t1.names + "$" + $name;
      this.namedArgumentList.push($name);
      this.$arguments.push(argument);
      ++t1.argumentCount;
    },
    $signature: 9
  };
  H.TypeErrorDecoder.prototype = {
    matchTypeError$1: function(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  H.NullError.prototype = {
    toString$0: function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + this.__js_helper$_message;
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  H.JsNoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  H.UnknownJsTypeError.prototype = {
    toString$0: function(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  H.NullThrownFromJavaScriptException.prototype = {
    toString$0: function(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  H.ExceptionAndStackTrace.prototype = {};
  H._StackTrace.prototype = {
    toString$0: function(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  H.Closure.prototype = {
    toString$0: function(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + H.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call: function() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  H.TearOffClosure.prototype = {};
  H.StaticClosure.prototype = {
    toString$0: function(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + H.unminifyOrTag($name) + "'";
    }
  };
  H.BoundClosure.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof H.BoundClosure))
        return false;
      return _this._self === other._self && _this._target === other._target && _this._receiver === other._receiver;
    },
    get$hashCode: function(_) {
      var receiverHashCode,
        t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      return (receiverHashCode ^ H.Primitives_objectHashCode(this._target)) >>> 0;
    },
    toString$0: function(_) {
      var receiver = this._receiver;
      if (receiver == null)
        receiver = this._self;
      return "Closure '" + H.S(this.__js_helper$_name) + "' of " + ("Instance of '" + H.Primitives_objectTypeName(receiver) + "'");
    }
  };
  H.RuntimeError.prototype = {
    toString$0: function(_) {
      return "RuntimeError: " + this.message;
    }
  };
  H._Required.prototype = {};
  H.JsLinkedHashMap.prototype = {
    get$length: function(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty: function(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return !this.get$isEmpty(this);
    },
    get$keys: function(_) {
      return new H.LinkedHashMapKeyIterable(this, H._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values: function(_) {
      var _this = this,
        t1 = H._instanceType(_this);
      return H.MappedIterable_MappedIterable(_this.get$keys(_this), new H.JsLinkedHashMap_values_closure(_this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1: function(_, key) {
      var strings, nums, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        if (strings == null)
          return false;
        return _this._containsTableEntry$2(strings, key);
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return false;
        return _this._containsTableEntry$2(nums, key);
      } else
        return _this.internalContainsKey$1(key);
    },
    internalContainsKey$1: function(key) {
      var _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return false;
      return _this.internalFindBucketIndex$2(_this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key)), key) >= 0;
    },
    containsValue$1: function(_, value) {
      return this.get$keys(this).any$1(0, new H.JsLinkedHashMap_containsValue_closure(this, value));
    },
    addAll$1: function(_, other) {
      other.forEach$1(0, new H.JsLinkedHashMap_addAll_closure(this));
    },
    $index: function(_, key) {
      var strings, cell, t1, nums, _this = this, _null = null;
      if (typeof key == "string") {
        strings = _this._strings;
        if (strings == null)
          return _null;
        cell = _this._getTableCell$2(strings, key);
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        if (nums == null)
          return _null;
        cell = _this._getTableCell$2(nums, key);
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return _this.internalGet$1(key);
    },
    internalGet$1: function(key) {
      var bucket, index, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = _this._getTableBucket$2(rest, _this.internalComputeHashCode$1(key));
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3ffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2: function(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      if (bucket == null)
        _this._setTableEntry$3(rest, hash, [_this._newLinkedCell$2(key, value)]);
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      var value, _this = this;
      if (_this.containsKey$1(0, key))
        return H._instanceType(_this)._rest[1]._as(_this.$index(0, key));
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1: function(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this._removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 0x3ffffff) === key)
        return _this._removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1: function(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = _this._getTableBucket$2(rest, hash);
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        _this._deleteTableEntry$2(rest, hash);
      return cell.hashMapCellValue;
    },
    clear$0: function(_) {
      var _this = this;
      if (_this.__js_helper$_length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;
        _this.__js_helper$_length = 0;
        _this._modified$0();
      }
    },
    forEach$1: function(_, action) {
      var _this = this,
        cell = _this._first,
        modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3: function(table, key, value) {
      var cell = this._getTableCell$2(table, key);
      if (cell == null)
        this._setTableEntry$3(table, key, this._newLinkedCell$2(key, value));
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2: function(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = this._getTableCell$2(table, key);
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      this._deleteTableEntry$2(table, key);
      return cell.hashMapCellValue;
    },
    _modified$0: function() {
      this._modifications = this._modifications + 1 & 67108863;
    },
    _newLinkedCell$2: function(key, value) {
      var t1, _this = this,
        cell = new H.LinkedHashMapCell(key, value);
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1: function(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    },
    internalFindBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    },
    _getTableCell$2: function(table, key) {
      return table[key];
    },
    _getTableBucket$2: function(table, key) {
      return table[key];
    },
    _setTableEntry$3: function(table, key, value) {
      table[key] = value;
    },
    _deleteTableEntry$2: function(table, key) {
      delete table[key];
    },
    _containsTableEntry$2: function(table, key) {
      return this._getTableCell$2(table, key) != null;
    },
    _newHashTable$0: function() {
      var _s20_ = "<non-identifier-key>",
        table = Object.create(null);
      this._setTableEntry$3(table, _s20_, table);
      this._deleteTableEntry$2(table, _s20_);
      return table;
    },
    $isLinkedHashMap: 1
  };
  H.JsLinkedHashMap_values_closure.prototype = {
    call$1: function(each) {
      var t1 = this.$this;
      return H._instanceType(t1)._rest[1]._as(t1.$index(0, each));
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  H.JsLinkedHashMap_containsValue_closure.prototype = {
    call$1: function(each) {
      return J.$eq$(this.$this.$index(0, each), this.value);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("bool(1)");
    }
  };
  H.JsLinkedHashMap_addAll_closure.prototype = {
    call$2: function(key, value) {
      this.$this.$indexSet(0, key, value);
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  H.LinkedHashMapCell.prototype = {};
  H.LinkedHashMapKeyIterable.prototype = {
    get$length: function(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty: function(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator: function(_) {
      var t1 = this._map,
        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications);
      t2._cell = t1._first;
      return t2;
    },
    contains$1: function(_, element) {
      return this._map.containsKey$1(0, element);
    },
    forEach$1: function(_, f) {
      var t1 = this._map,
        cell = t1._first,
        modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.hashMapCellKey);
        if (modifications !== t1._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        cell = cell._next;
      }
    }
  };
  H.LinkedHashMapKeyIterator.prototype = {
    get$current: function(_) {
      return H._instanceType(this)._precomputed1._as(this.__js_helper$_current);
    },
    moveNext$0: function() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellKey;
        _this._cell = cell._next;
        return true;
      }
    }
  };
  H.initHooks_closure.prototype = {
    call$1: function(o) {
      return this.getTag(o);
    },
    $signature: 26
  };
  H.initHooks_closure0.prototype = {
    call$2: function(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 277
  };
  H.initHooks_closure1.prototype = {
    call$1: function(tag) {
      return this.prototypeForTag(tag);
    },
    $signature: 287
  };
  H.JSSyntaxRegExp.prototype = {
    toString$0: function(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    firstMatch$1: function(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new H._MatchImplementation(m);
    },
    stringMatch$1: function(string) {
      var match = this.firstMatch$1(string);
      if (match != null)
        return match._match[0];
      return null;
    },
    $isRegExp: 1
  };
  H._MatchImplementation.prototype = {
    $index: function(_, index) {
      return this._match[index];
    },
    $isMatch: 1
  };
  H.StringMatch.prototype = {
    $index: function(_, g) {
      if (g !== 0)
        H.throwExpression(P.RangeError$value(g, null));
      return this.pattern;
    },
    $isMatch: 1
  };
  H._StringAllMatchesIterable.prototype = {
    get$iterator: function(_) {
      return new H._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    },
    get$first: function(_) {
      var t1 = this._pattern,
        index = this._input.indexOf(t1, this.__js_helper$_index);
      if (index >= 0)
        return new H.StringMatch(index, t1);
      throw H.wrapException(H.IterableElementError_noElement());
    }
  };
  H._StringAllMatchesIterator.prototype = {
    moveNext$0: function() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new H.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current: function(_) {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    }
  };
  H.NativeByteBuffer.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_ByteBuffer_RkP;
    },
    asInt64List$2: function(receiver, offsetInBytes, $length) {
      throw H.wrapException(P.UnsupportedError$("Int64List not supported by dart2js."));
    },
    $isNativeByteBuffer: 1,
    $isByteBuffer: 1
  };
  H.NativeTypedData.prototype = {
    _invalidPosition$3: function(receiver, position, $length, $name) {
      var t1 = P.RangeError$range(position, 0, $length, $name, null);
      throw H.wrapException(t1);
    },
    _checkPosition$3: function(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    },
    $isNativeTypedData: 1,
    $isTypedData: 1
  };
  H.NativeByteData.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_ByteData_zNC;
    },
    getInt64$2: function(receiver, byteOffset, endian) {
      throw H.wrapException(P.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    setInt64$3: function(receiver, byteOffset, value, endian) {
      throw H.wrapException(P.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    $isByteData: 1
  };
  H.NativeTypedArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    _setRangeFast$4: function(receiver, start, end, source, skipCount) {
      var count, sourceLength,
        targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        throw H.wrapException(P.RangeError$range(start, 0, end, null, null));
      count = end - start;
      if (skipCount < 0)
        throw H.wrapException(P.ArgumentError$(skipCount));
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw H.wrapException(P.StateError$("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  H.NativeTypedArrayOfDouble.prototype = {
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      if (type$.NativeTypedArrayOfDouble._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  H.NativeTypedArrayOfInt.prototype = {
    $indexSet: function(receiver, index, value) {
      H._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      if (type$.NativeTypedArrayOfInt._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  H.NativeFloat32List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Float32List_LB7;
    },
    sublist$2: function(receiver, start, end) {
      return new Float32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }
  };
  H.NativeFloat64List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Float64List_LB7;
    },
    sublist$2: function(receiver, start, end) {
      return new Float64Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    $isFloat64List: 1
  };
  H.NativeInt16List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Int16List_uXf;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      return new Int16Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }
  };
  H.NativeInt32List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Int32List_O50;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      return new Int32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    $isInt32List: 1
  };
  H.NativeInt8List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Int8List_ekJ;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      return new Int8Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }
  };
  H.NativeUint16List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Uint16List_2bx;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      return new Uint16Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }
  };
  H.NativeUint32List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Uint32List_2bx;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      return new Uint32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }
  };
  H.NativeUint8ClampedList.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Uint8ClampedList_Jik;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      return new Uint8ClampedArray(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }
  };
  H.NativeUint8List.prototype = {
    get$runtimeType: function(receiver) {
      return C.Type_Uint8List_WLA;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2: function(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    $isNativeUint8List: 1,
    $isUint8List: 1
  };
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H.Rti.prototype = {
    _eval$1: function(recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1: function(typeOrTuple) {
      return H._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  H._FunctionParameters.prototype = {};
  H._Type.prototype = {
    toString$0: function(_) {
      return H._rtiToString(this._rti, null);
    },
    $isType: 1
  };
  H._Error.prototype = {
    toString$0: function(_) {
      return this.__rti$_message;
    }
  };
  H._TypeError.prototype = {};
  P._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1: function(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 5
  };
  P._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1: function(callback) {
      var t1, t2;
      this._box_0.storedCallback = callback;
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 292
  };
  P._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0: function() {
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  P._TimerImpl.prototype = {
    _TimerImpl$2: function(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(H.convertDartClosureToJS(new P._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("`setTimeout()` not found."));
    },
    _TimerImpl$periodic$2: function(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setInterval(H.convertDartClosureToJS(new P._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);
      else
        throw H.wrapException(P.UnsupportedError$("Periodic timer."));
    },
    cancel$0: function(_) {
      var t1;
      if (self.setTimeout != null) {
        t1 = this._handle;
        if (t1 == null)
          return;
        if (this._once)
          self.clearTimeout(t1);
        else
          self.clearInterval(t1);
        this._handle = null;
      } else
        throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
    },
    $isTimer: 1
  };
  P._TimerImpl_internalCallback.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._handle = null;
      t1._tick = 1;
      this.callback.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P._TimerImpl$periodic_closure.prototype = {
    call$0: function() {
      var duration, _this = this,
        t1 = _this.$this,
        tick = t1._tick + 1,
        t2 = _this.milliseconds;
      if (t2 > 0) {
        duration = Date.now() - _this.start;
        if (duration > (tick + 1) * t2)
          tick = C.JSInt_methods.$tdiv(duration, t2);
      }
      t1._tick = tick;
      _this.callback.call$1(t1);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 2
  };
  P._AsyncAwaitCompleter.prototype = {
    complete$1: function(_, value) {
      var t1, _this = this;
      if (value == null)
        value = _this.$ti._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t1 = _this._future;
        if (_this.$ti._eval$1("Future<1>")._is(value))
          t1._chainFuture$1(value);
        else
          t1._completeWithValue$1(value);
      }
    },
    completeError$2: function(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    }
  };
  P._awaitOnObject_closure.prototype = {
    call$1: function(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 13
  };
  P._awaitOnObject_closure0.prototype = {
    call$2: function(error, stackTrace) {
      this.bodyFunction.call$2(1, new H.ExceptionAndStackTrace(error, stackTrace));
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 94
  };
  P._wrapJsFunctionForAsync_closure.prototype = {
    call$2: function(errorCode, result) {
      this.$protected(errorCode, result);
    },
    $signature: 95
  };
  P._asyncStarHelper_closure.prototype = {
    call$0: function() {
      var t1 = this.controller,
        t2 = t1.get$controller(t1),
        t3 = t2._state;
      if ((t3 & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t3 & 2) === 0) {
        t1.isSuspended = true;
        return;
      }
      this.bodyFunction.call$2(0, null);
    },
    $signature: 0
  };
  P._asyncStarHelper_closure0.prototype = {
    call$1: function(_) {
      var errorCode = this.controller.cancelationFuture != null ? 2 : 0;
      this.bodyFunction.call$2(errorCode, null);
    },
    $signature: 5
  };
  P._AsyncStarStreamController.prototype = {
    get$controller: function(_) {
      var t1 = this.___AsyncStarStreamController_controller;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("controller")) : t1;
    },
    _AsyncStarStreamController$1: function(body, $T) {
      var t1 = new P._AsyncStarStreamController__resumeBody(body);
      this.___AsyncStarStreamController_controller = new P._AsyncStreamController(new P._AsyncStarStreamController_closure(t1), null, new P._AsyncStarStreamController_closure0(this, t1), new P._AsyncStarStreamController_closure1(this, body), $T._eval$1("_AsyncStreamController<0>"));
    }
  };
  P._AsyncStarStreamController__resumeBody.prototype = {
    call$0: function() {
      P.scheduleMicrotask(new P._AsyncStarStreamController__resumeBody_closure(this.body));
    },
    $signature: 2
  };
  P._AsyncStarStreamController__resumeBody_closure.prototype = {
    call$0: function() {
      this.body.call$2(0, null);
    },
    $signature: 0
  };
  P._AsyncStarStreamController_closure.prototype = {
    call$0: function() {
      this._resumeBody.call$0();
    },
    $signature: 0
  };
  P._AsyncStarStreamController_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1.isSuspended) {
        t1.isSuspended = false;
        this._resumeBody.call$0();
      }
    },
    $signature: 0
  };
  P._AsyncStarStreamController_closure1.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if ((t1.get$controller(t1)._state & 4) === 0) {
        t1.cancelationFuture = new P._Future($.Zone__current, type$._Future_dynamic);
        if (t1.isSuspended) {
          t1.isSuspended = false;
          P.scheduleMicrotask(new P._AsyncStarStreamController__closure(this.body));
        }
        return t1.cancelationFuture;
      }
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 96
  };
  P._AsyncStarStreamController__closure.prototype = {
    call$0: function() {
      this.body.call$2(2, null);
    },
    $signature: 0
  };
  P._IterationMarker.prototype = {
    toString$0: function(_) {
      return "IterationMarker(" + this.state + ", " + H.S(this.value) + ")";
    }
  };
  P._SyncStarIterator.prototype = {
    get$current: function(_) {
      var nested = this._nestedIterator;
      if (nested == null)
        return this._async$_current;
      return nested.get$current(nested);
    },
    moveNext$0: function() {
      var t1, value, state, suspendedBodies, inner, _this = this;
      for (; true;) {
        t1 = _this._nestedIterator;
        if (t1 != null)
          if (t1.moveNext$0())
            return true;
          else
            _this._nestedIterator = null;
        value = function(body, SUCCESS, ERROR) {
          var errorValue,
            errorCode = SUCCESS;
          while (true)
            try {
              return body(errorCode, errorValue);
            } catch (error) {
              errorValue = error;
              errorCode = ERROR;
            }
        }(_this._body, 0, 1);
        if (value instanceof P._IterationMarker) {
          state = value.state;
          if (state === 2) {
            suspendedBodies = _this._suspendedBodies;
            if (suspendedBodies == null || suspendedBodies.length === 0) {
              _this._async$_current = null;
              return false;
            }
            _this._body = suspendedBodies.pop();
            continue;
          } else {
            t1 = value.value;
            if (state === 3)
              throw t1;
            else {
              inner = J.get$iterator$ax(t1);
              if (inner instanceof P._SyncStarIterator) {
                t1 = _this._suspendedBodies;
                if (t1 == null)
                  t1 = _this._suspendedBodies = [];
                t1.push(_this._body);
                _this._body = inner._body;
                continue;
              } else {
                _this._nestedIterator = inner;
                continue;
              }
            }
          }
        } else {
          _this._async$_current = value;
          return true;
        }
      }
      return false;
    }
  };
  P._SyncStarIterable.prototype = {
    get$iterator: function(_) {
      return new P._SyncStarIterator(this._outerHelper());
    }
  };
  P.AsyncError.prototype = {
    toString$0: function(_) {
      return H.S(this.error);
    },
    $isError: 1,
    get$stackTrace: function() {
      return this.stackTrace;
    }
  };
  P.Future_Future_closure.prototype = {
    call$0: function() {
      var e, s, exception;
      try {
        this.result._complete$1(this.computation.call$0());
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._completeWithErrorCallback(this.result, e, s);
      }
    },
    $signature: 0
  };
  P.Future_Future$delayed_closure.prototype = {
    call$0: function() {
      this.result._complete$1(this.T._as(null));
    },
    $signature: 0
  };
  P.Future_wait__error_set.prototype = {
    call$1: function(t1) {
      return this._box_0._error = t1;
    },
    $signature: 97
  };
  P.Future_wait__stackTrace_set.prototype = {
    call$1: function(t1) {
      return this._box_0._stackTrace = t1;
    },
    $signature: 98
  };
  P.Future_wait__error_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._error;
      return t1 == null ? H.throwExpression(H.LateError$localNI("error")) : t1;
    },
    $signature: 99
  };
  P.Future_wait__stackTrace_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._stackTrace;
      return t1 == null ? H.throwExpression(H.LateError$localNI("stackTrace")) : t1;
    },
    $signature: 100
  };
  P.Future_wait_handleError.prototype = {
    call$2: function(theError, theStackTrace) {
      var _this = this,
        t1 = _this._box_0,
        t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        if (t1.remaining === 0 || _this.eagerError)
          _this._future._completeError$2(theError, theStackTrace);
        else {
          _this._error_set.call$1(theError);
          _this._stackTrace_set.call$1(theStackTrace);
        }
      } else if (t2 === 0 && !_this.eagerError)
        _this._future._completeError$2(_this._error_get.call$0(), _this._stackTrace_get.call$0());
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 51
  };
  P.Future_wait_closure.prototype = {
    call$1: function(value) {
      var valueList, _this = this,
        t1 = _this._box_0;
      --t1.remaining;
      valueList = t1.values;
      if (valueList != null) {
        J.$indexSet$ax(valueList, _this.pos, value);
        if (t1.remaining === 0)
          _this._future._completeWithValue$1(P.List_List$from(valueList, true, _this.T));
      } else if (t1.remaining === 0 && !_this.eagerError)
        _this._future._completeError$2(_this._error_get.call$0(), _this._stackTrace_get.call$0());
    },
    $signature: function() {
      return this.T._eval$1("Null(0)");
    }
  };
  P._Completer.prototype = {
    completeError$2: function(error, stackTrace) {
      H.checkNotNullable(error, "error", type$.Object);
      if (this.future._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      if (stackTrace == null)
        stackTrace = P.AsyncError_defaultStackTrace(error);
      this._completeError$2(error, stackTrace);
    },
    completeError$1: function(error) {
      return this.completeError$2(error, null);
    }
  };
  P._AsyncCompleter.prototype = {
    complete$1: function(_, value) {
      var t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(P.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    },
    complete$0: function($receiver) {
      return this.complete$1($receiver, null);
    },
    _completeError$2: function(error, stackTrace) {
      this.future._asyncCompleteError$2(error, stackTrace);
    }
  };
  P._FutureListener.prototype = {
    matchesErrorTest$1: function(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2(this.callback, asyncError.error);
    },
    handleError$1: function(asyncError) {
      var errorCallback = this.errorCallback,
        t1 = asyncError.error,
        t2 = this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        return t2.runBinary$3(errorCallback, t1, asyncError.stackTrace);
      else
        return t2.runUnary$2(errorCallback, t1);
    }
  };
  P._Future.prototype = {
    then$1$2$onError: function(_, f, onError, $R) {
      var result, t1,
        currentZone = $.Zone__current;
      if (currentZone !== C.C__RootZone)
        onError = onError != null ? P._registerErrorHandler(onError, currentZone) : onError;
      result = new P._Future(currentZone, $R._eval$1("_Future<0>"));
      t1 = onError == null ? 1 : 3;
      this._addListener$1(new P._FutureListener(result, t1, f, onError, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1: function($receiver, f, $R) {
      return this.then$1$2$onError($receiver, f, null, $R);
    },
    then$1: function($receiver, f) {
      return this.then$1$2$onError($receiver, f, null, type$.dynamic);
    },
    _thenAwait$1$2: function(f, onError, $E) {
      var result = new P._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new P._FutureListener(result, 19, f, onError, this.$ti._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    catchError$2$test: function(onError, test) {
      var t1 = this.$ti,
        t2 = $.Zone__current,
        result = new P._Future(t2, t1);
      if (t2 !== C.C__RootZone)
        onError = P._registerErrorHandler(onError, t2);
      this._addListener$1(new P._FutureListener(result, 2, test, onError, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    catchError$1: function(onError) {
      return this.catchError$2$test(onError, null);
    },
    whenComplete$1: function(action) {
      var t1 = this.$ti,
        result = new P._Future($.Zone__current, t1);
      this._addListener$1(new P._FutureListener(result, 8, action, null, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _addListener$1: function(listener) {
      var t2, _this = this,
        t1 = _this._state;
      if (t1 <= 1) {
        listener._nextListener = _this._resultOrListeners;
        _this._resultOrListeners = listener;
      } else {
        if (t1 === 2) {
          t1 = _this._resultOrListeners;
          t2 = t1._state;
          if (t2 < 4) {
            t1._addListener$1(listener);
            return;
          }
          _this._state = t2;
          _this._resultOrListeners = t1._resultOrListeners;
        }
        P._rootScheduleMicrotask(null, null, _this._zone, new P._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1: function(listeners) {
      var t1, existingListeners, next, cursor, next0, t2, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 1) {
        existingListeners = _this._resultOrListeners;
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if (t1 === 2) {
          t1 = _this._resultOrListeners;
          t2 = t1._state;
          if (t2 < 4) {
            t1._prependListeners$1(listeners);
            return;
          }
          _this._state = t2;
          _this._resultOrListeners = t1._resultOrListeners;
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        P._rootScheduleMicrotask(null, null, _this._zone, new P._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0: function() {
      var current = this._resultOrListeners;
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1: function(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1: function(source) {
      var e, s, exception, _this = this;
      _this._state = 1;
      try {
        source.then$1$2$onError(0, new P._Future__chainForeignFuture_closure(_this), new P._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _complete$1: function(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          P._Future__chainCoreFuture(value, _this);
        else
          _this._chainForeignFuture$1(value);
      else {
        listeners = _this._removeListeners$0();
        _this._state = 4;
        _this._resultOrListeners = value;
        P._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1: function(value) {
      var _this = this,
        listeners = _this._removeListeners$0();
      _this._state = 4;
      _this._resultOrListeners = value;
      P._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2: function(error, stackTrace) {
      var _this = this,
        listeners = _this._removeListeners$0(),
        t1 = P.AsyncError$(error, stackTrace);
      _this._state = 8;
      _this._resultOrListeners = t1;
      P._Future__propagateToListeners(_this, listeners);
    },
    _asyncComplete$1: function(value) {
      if (this.$ti._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1: function(value) {
      this._state = 1;
      P._rootScheduleMicrotask(null, null, this._zone, new P._Future__asyncCompleteWithValue_closure(this, value));
    },
    _chainFuture$1: function(value) {
      var _this = this;
      if (_this.$ti._is(value)) {
        if (value._state === 8) {
          _this._state = 1;
          P._rootScheduleMicrotask(null, null, _this._zone, new P._Future__chainFuture_closure(_this, value));
        } else
          P._Future__chainCoreFuture(value, _this);
        return;
      }
      _this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2: function(error, stackTrace) {
      this._state = 1;
      P._rootScheduleMicrotask(null, null, this._zone, new P._Future__asyncCompleteError_closure(this, error, stackTrace));
    },
    $isFuture: 1
  };
  P._Future__addListener_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  P._Future__prependListeners_closure.prototype = {
    call$0: function() {
      P._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  P._Future__chainForeignFuture_closure.prototype = {
    call$1: function(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state = 0;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 5
  };
  P._Future__chainForeignFuture_closure0.prototype = {
    call$2: function(error, stackTrace) {
      this.$this._completeError$2(error, stackTrace);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 103
  };
  P._Future__chainForeignFuture_closure1.prototype = {
    call$0: function() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  P._Future__asyncCompleteWithValue_closure.prototype = {
    call$0: function() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  P._Future__chainFuture_closure.prototype = {
    call$0: function() {
      P._Future__chainCoreFuture(this.value, this.$this);
    },
    $signature: 0
  };
  P._Future__asyncCompleteError_closure.prototype = {
    call$0: function() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0: function() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1(t1.callback);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = _this.hasError && _this._box_1.source._resultOrListeners.error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = _this._box_1.source._resultOrListeners;
        else
          t2.listenerValueOrError = P.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof P._Future && completeResult._state >= 4) {
        if (completeResult._state === 8) {
          t1 = _this._box_0;
          t1.listenerValueOrError = completeResult._resultOrListeners;
          t1.listenerHasError = true;
        }
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = J.then$1$1$x(completeResult, new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  P._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1: function(_) {
      return this.originalSource;
    },
    $signature: 104
  };
  P._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0: function() {
      var e, s, t1, t2, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t1.listenerValueOrError = t2.result._zone.runUnary$2(t2.callback, this.sourceResult);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = P.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  P._Future__propagateToListeners_handleError.prototype = {
    call$0: function() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = _this._box_1.source._resultOrListeners;
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        t1 = _this._box_1.source._resultOrListeners;
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = P.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  P._AsyncCallbackEntry.prototype = {};
  P.Stream.prototype = {
    get$length: function(_) {
      var t1 = {},
        future = new P._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1, this), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  };
  P.Stream_Stream$fromIterable_closure.prototype = {
    call$0: function() {
      return new P._IterablePendingEvents(J.get$iterator$ax(this.elements));
    },
    $signature: function() {
      return this.T._eval$1("_IterablePendingEvents<0>()");
    }
  };
  P.Stream_length_closure.prototype = {
    call$1: function(_) {
      ++this._box_0.count;
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("~(1)");
    }
  };
  P.Stream_length_closure0.prototype = {
    call$0: function() {
      this.future._complete$1(this._box_0.count);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  P.StreamSubscription.prototype = {};
  P.StreamTransformerBase.prototype = {};
  P._StreamController.prototype = {
    get$_pendingEvents: function() {
      if ((this._state & 8) === 0)
        return this._varData;
      return this._varData.varData;
    },
    _ensurePendingEvents$0: function() {
      var events, state, _this = this;
      if ((_this._state & 8) === 0) {
        events = _this._varData;
        return events == null ? _this._varData = new P._StreamImplEvents() : events;
      }
      state = _this._varData;
      events = state.varData;
      return events == null ? state.varData = new P._StreamImplEvents() : events;
    },
    get$_subscription: function() {
      var varData = this._varData;
      return (this._state & 8) !== 0 ? varData.varData : varData;
    },
    _badEventState$0: function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add event after closing");
      return new P.StateError("Cannot add event while adding a stream");
    },
    addStream$2$cancelOnError: function(_, source, cancelOnError) {
      var t2, t3, t4, _this = this,
        t1 = _this._state;
      if (t1 >= 4)
        throw H.wrapException(_this._badEventState$0());
      if ((t1 & 2) !== 0) {
        t1 = new P._Future($.Zone__current, type$._Future_dynamic);
        t1._asyncComplete$1(null);
        return t1;
      }
      t1 = _this._varData;
      t2 = new P._Future($.Zone__current, type$._Future_dynamic);
      t3 = source.listen$4$cancelOnError$onDone$onError(_this.get$_async$_add(_this), false, _this.get$_close(), _this.get$_addError());
      t4 = _this._state;
      if ((t4 & 1) !== 0 ? (_this.get$_subscription()._state & 4) !== 0 : (t4 & 2) === 0)
        t3.pause$0(0);
      _this._varData = new P._StreamControllerAddStreamState(t1, t2, t3);
      _this._state |= 8;
      return t2;
    },
    _ensureDoneFuture$0: function() {
      var t1 = this._doneFuture;
      if (t1 == null)
        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new P._Future($.Zone__current, type$._Future_void);
      return t1;
    },
    add$1: function(_, value) {
      if (this._state >= 4)
        throw H.wrapException(this._badEventState$0());
      this._async$_add$1(0, value);
    },
    close$0: function(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return _this._ensureDoneFuture$0();
      if (t1 >= 4)
        throw H.wrapException(_this._badEventState$0());
      t1 = _this._state = t1 | 4;
      if ((t1 & 1) !== 0)
        _this._sendDone$0();
      else if ((t1 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, C.C__DelayedDone);
      return _this._ensureDoneFuture$0();
    },
    _async$_add$1: function(_, value) {
      var t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendData$1(value);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new P._DelayedData(value));
    },
    _addError$2: function(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendError$2(error, stackTrace);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new P._DelayedError(error, stackTrace));
    },
    _close$0: function() {
      var addState = this._varData;
      this._varData = addState.varData;
      this._state &= 4294967287;
      addState.addStreamFuture._asyncComplete$1(null);
    },
    _subscribe$4: function(onData, onError, onDone, cancelOnError) {
      var t1, t2, t3, t4, subscription, pendingEvents, addState, _this = this;
      if ((_this._state & 3) !== 0)
        throw H.wrapException(P.StateError$("Stream has already been listened to."));
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      t3 = P._BufferingStreamSubscription__registerDataHandler(t1, onData);
      t4 = P._BufferingStreamSubscription__registerErrorHandler(t1, onError);
      subscription = new P._ControllerSubscription(_this, t3, t4, onDone, t1, t2, H._instanceType(_this)._eval$1("_ControllerSubscription<1>"));
      pendingEvents = _this.get$_pendingEvents();
      t1 = _this._state |= 1;
      if ((t1 & 8) !== 0) {
        addState = _this._varData;
        addState.varData = subscription;
        addState.addSubscription.resume$0(0);
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new P._StreamController__subscribe_closure(_this));
      return subscription;
    },
    _recordCancel$1: function(subscription) {
      var onCancel, cancelResult, e, s, exception, result0, t1, _this = this, result = null;
      if ((_this._state & 8) !== 0)
        result = _this._varData.cancel$0(0);
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      onCancel = _this.onCancel;
      if (onCancel != null)
        if (result == null)
          try {
            cancelResult = onCancel.call$0();
            if (type$.Future_void._is(cancelResult))
              result = cancelResult;
          } catch (exception) {
            e = H.unwrapException(exception);
            s = H.getTraceFromException(exception);
            result0 = new P._Future($.Zone__current, type$._Future_void);
            result0._asyncCompleteError$2(e, s);
            result = result0;
          }
        else
          result = result.whenComplete$1(onCancel);
      t1 = new P._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    }
  };
  P._StreamController__subscribe_closure.prototype = {
    call$0: function() {
      P._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  P._StreamController__recordCancel_complete.prototype = {
    call$0: function() {
      var doneFuture = this.$this._doneFuture;
      if (doneFuture != null && doneFuture._state === 0)
        doneFuture._asyncComplete$1(null);
    },
    $signature: 0
  };
  P._AsyncStreamControllerDispatch.prototype = {
    _sendData$1: function(data) {
      this.get$_subscription()._addPending$1(new P._DelayedData(data));
    },
    _sendError$2: function(error, stackTrace) {
      this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace));
    },
    _sendDone$0: function() {
      this.get$_subscription()._addPending$1(C.C__DelayedDone);
    }
  };
  P._AsyncStreamController.prototype = {};
  P._ControllerStream.prototype = {
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      return this._async$_controller._subscribe$4(onData, onError, onDone, cancelOnError);
    },
    get$hashCode: function(_) {
      return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof P._ControllerStream && other._async$_controller === this._async$_controller;
    }
  };
  P._ControllerSubscription.prototype = {
    _onCancel$0: function() {
      return this._async$_controller._recordCancel$1(this);
    },
    _onPause$0: function() {
      var t1 = this._async$_controller;
      if ((t1._state & 8) !== 0)
        t1._varData.addSubscription.pause$0(0);
      P._runGuarded(t1.onPause);
    },
    _onResume$0: function() {
      var t1 = this._async$_controller;
      if ((t1._state & 8) !== 0)
        t1._varData.addSubscription.resume$0(0);
      P._runGuarded(t1.onResume);
    }
  };
  P._AddStreamState.prototype = {
    cancel$0: function(_) {
      var cancel = this.addSubscription.cancel$0(0);
      return cancel.whenComplete$1(new P._AddStreamState_cancel_closure(this));
    }
  };
  P._AddStreamState_cancel_closure.prototype = {
    call$0: function() {
      this.$this.addStreamFuture._asyncComplete$1(null);
    },
    $signature: 2
  };
  P._StreamControllerAddStreamState.prototype = {};
  P._BufferingStreamSubscription.prototype = {
    _setPendingEvents$1: function(pendingEvents) {
      var _this = this;
      if (pendingEvents == null)
        return;
      _this._pending = pendingEvents;
      if (!pendingEvents.get$isEmpty(pendingEvents)) {
        _this._state = (_this._state | 64) >>> 0;
        pendingEvents.schedule$1(_this);
      }
    },
    pause$0: function(_) {
      var t2, t3, _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t2 = (t1 + 128 | 4) >>> 0;
      _this._state = t2;
      if (t1 < 128) {
        t3 = _this._pending;
        if (t3 != null)
          if (t3._state === 1)
            t3._state = 3;
      }
      if ((t1 & 4) === 0 && (t2 & 32) === 0)
        _this._guardCallback$1(_this.get$_onPause());
    },
    resume$0: function(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 = _this._state = t1 - 128;
        if (t1 < 128) {
          if ((t1 & 64) !== 0) {
            t1 = _this._pending;
            t1 = !t1.get$isEmpty(t1);
          } else
            t1 = false;
          if (t1)
            _this._pending.schedule$1(_this);
          else {
            t1 = (_this._state & 4294967291) >>> 0;
            _this._state = t1;
            if ((t1 & 32) === 0)
              _this._guardCallback$1(_this.get$_onResume());
          }
        }
      }
    },
    cancel$0: function(_) {
      var _this = this,
        t1 = (_this._state & 4294967279) >>> 0;
      _this._state = t1;
      if ((t1 & 8) === 0)
        _this._async$_cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    _async$_cancel$0: function() {
      var t2, _this = this,
        t1 = _this._state = (_this._state | 8) >>> 0;
      if ((t1 & 64) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 32) === 0)
        _this._pending = null;
      _this._cancelFuture = _this._onCancel$0();
    },
    _onPause$0: function() {
    },
    _onResume$0: function() {
    },
    _onCancel$0: function() {
      return null;
    },
    _addPending$1: function($event) {
      var t1, _this = this,
        pending = _this._pending;
      if (pending == null)
        pending = new P._StreamImplEvents();
      _this._pending = pending;
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        _this._state = t1;
        if (t1 < 128)
          pending.schedule$1(_this);
      }
    },
    _sendData$1: function(data) {
      var _this = this,
        t1 = _this._state;
      _this._state = (t1 | 32) >>> 0;
      _this._zone.runUnaryGuarded$2(_this._async$_onData, data);
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _sendError$2: function(error, stackTrace) {
      var cancelFuture, _this = this,
        t1 = _this._state,
        t2 = new P._BufferingStreamSubscription__sendError_sendError(_this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        _this._state = (t1 | 16) >>> 0;
        _this._async$_cancel$0();
        cancelFuture = _this._cancelFuture;
        if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
          cancelFuture.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        _this._checkState$1((t1 & 4) !== 0);
      }
    },
    _sendDone$0: function() {
      var cancelFuture, _this = this,
        t1 = new P._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._async$_cancel$0();
      _this._state = (_this._state | 16) >>> 0;
      cancelFuture = _this._cancelFuture;
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1: function(callback) {
      var _this = this,
        t1 = _this._state;
      _this._state = (t1 | 32) >>> 0;
      callback.call$0();
      _this._state = (_this._state & 4294967263) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1: function(wasInputPaused) {
      var t1, isInputPaused, _this = this;
      if ((_this._state & 64) !== 0) {
        t1 = _this._pending;
        t1 = t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = _this._state = (_this._state & 4294967231) >>> 0;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t1 = _this._pending;
            t1 = t1 == null ? null : t1.get$isEmpty(t1);
            t1 = t1 !== false;
          } else
            t1 = false;
        else
          t1 = false;
        if (t1)
          _this._state = (_this._state & 4294967291) >>> 0;
      }
      for (; true; wasInputPaused = isInputPaused) {
        t1 = _this._state;
        if ((t1 & 8) !== 0) {
          _this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        _this._state = (_this._state & 4294967263) >>> 0;
      }
      t1 = _this._state;
      if ((t1 & 64) !== 0 && t1 < 128)
        _this._pending.schedule$1(_this);
    },
    $isStreamSubscription: 1
  };
  P._BufferingStreamSubscription__sendError_sendError.prototype = {
    call$0: function() {
      var onError, t3,
        t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 32) >>> 0;
      onError = t1._onError;
      t2 = this.error;
      t3 = t1._zone;
      if (type$.void_Function_Object_StackTrace._is(onError))
        t3.runBinaryGuarded$3(onError, t2, this.stackTrace);
      else
        t3.runUnaryGuarded$2(onError, t2);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    $signature: 0
  };
  P._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    },
    $signature: 0
  };
  P._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      return this._createSubscription$4(onData, onError, onDone, cancelOnError);
    },
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      return P._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError, H._instanceType(this)._precomputed1);
    }
  };
  P._GeneratedStreamImpl.prototype = {
    _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
      var t1, _this = this;
      if (_this._isUsed)
        throw H.wrapException(P.StateError$("Stream has already been listened to."));
      _this._isUsed = true;
      t1 = P._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError, _this.$ti._precomputed1);
      t1._setPendingEvents$1(_this._pending.call$0());
      return t1;
    }
  };
  P._IterablePendingEvents.prototype = {
    get$isEmpty: function(_) {
      return this._async$_iterator == null;
    },
    handleNext$1: function(dispatch) {
      var movedNext, e, s, exception,
        iterator = this._async$_iterator;
      if (iterator == null)
        throw H.wrapException(P.StateError$("No events pending."));
      movedNext = false;
      try {
        if (iterator.moveNext$0()) {
          movedNext = true;
          dispatch._sendData$1(J.get$current$z(iterator));
        } else {
          this._async$_iterator = null;
          dispatch._sendDone$0();
        }
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        if (!movedNext)
          this._async$_iterator = C.C_EmptyIterator;
        dispatch._sendError$2(e, s);
      }
    }
  };
  P._DelayedEvent.prototype = {
    get$next: function(receiver) {
      return this.next;
    },
    set$next: function(receiver, val) {
      return this.next = val;
    }
  };
  P._DelayedData.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendData$1(this.value);
    }
  };
  P._DelayedError.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }
  };
  P._DelayedDone.prototype = {
    perform$1: function(dispatch) {
      dispatch._sendDone$0();
    },
    get$next: function(_) {
      return null;
    },
    set$next: function(_, _0) {
      throw H.wrapException(P.StateError$("No events after a done."));
    }
  };
  P._PendingEvents.prototype = {
    schedule$1: function(dispatch) {
      var _this = this,
        t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    }
  };
  P._PendingEvents_schedule_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch);
    },
    $signature: 0
  };
  P._StreamImplEvents.prototype = {
    get$isEmpty: function(_) {
      return this.lastPendingEvent == null;
    },
    add$1: function(_, $event) {
      var _this = this,
        lastEvent = _this.lastPendingEvent;
      if (lastEvent == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        lastEvent.set$next(0, $event);
        _this.lastPendingEvent = $event;
      }
    },
    handleNext$1: function(dispatch) {
      var $event = this.firstPendingEvent,
        nextEvent = $event.get$next($event);
      this.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }
  };
  P._StreamIterator.prototype = {};
  P._Zone.prototype = {};
  P._rootHandleUncaughtError_closure.prototype = {
    call$0: function() {
      var error = H.wrapException(this.error);
      error.stack = this.stackTrace.toString$0(0);
      throw error;
    },
    $signature: 0
  };
  P._RootZone.prototype = {
    runGuarded$1: function(f) {
      var e, s, exception, _null = null;
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        P._rootRun(_null, _null, this, f);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, s);
      }
    },
    runUnaryGuarded$1$2: function(f, arg) {
      var e, s, exception, _null = null;
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        P._rootRunUnary(_null, _null, this, f, arg);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, s);
      }
    },
    runUnaryGuarded$2: function(f, arg) {
      return this.runUnaryGuarded$1$2(f, arg, type$.dynamic);
    },
    runBinaryGuarded$2$3: function(f, arg1, arg2) {
      var e, s, exception, _null = null;
      try {
        if (C.C__RootZone === $.Zone__current) {
          f.call$2(arg1, arg2);
          return;
        }
        P._rootRunBinary(_null, _null, this, f, arg1, arg2);
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        P._rootHandleUncaughtError(_null, _null, this, e, s);
      }
    },
    runBinaryGuarded$3: function(f, arg1, arg2) {
      return this.runBinaryGuarded$2$3(f, arg1, arg2, type$.dynamic, type$.dynamic);
    },
    bindCallbackGuarded$1: function(f) {
      return new P._RootZone_bindCallbackGuarded_closure(this, f);
    },
    bindUnaryCallbackGuarded$1$1: function(f, $T) {
      return new P._RootZone_bindUnaryCallbackGuarded_closure(this, f, $T);
    },
    $index: function(_, key) {
      return null;
    },
    run$1$1: function(f) {
      if ($.Zone__current === C.C__RootZone)
        return f.call$0();
      return P._rootRun(null, null, this, f);
    },
    run$1: function(f) {
      return this.run$1$1(f, type$.dynamic);
    },
    runUnary$2$2: function(f, arg) {
      if ($.Zone__current === C.C__RootZone)
        return f.call$1(arg);
      return P._rootRunUnary(null, null, this, f, arg);
    },
    runUnary$2: function(f, arg) {
      return this.runUnary$2$2(f, arg, type$.dynamic, type$.dynamic);
    },
    runBinary$3$3: function(f, arg1, arg2) {
      if ($.Zone__current === C.C__RootZone)
        return f.call$2(arg1, arg2);
      return P._rootRunBinary(null, null, this, f, arg1, arg2);
    },
    runBinary$3: function(f, arg1, arg2) {
      return this.runBinary$3$3(f, arg1, arg2, type$.dynamic, type$.dynamic, type$.dynamic);
    },
    registerBinaryCallback$3$1: function(f) {
      return f;
    },
    registerBinaryCallback$1: function(f) {
      return this.registerBinaryCallback$3$1(f, type$.dynamic, type$.dynamic, type$.dynamic);
    }
  };
  P._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0: function() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  P._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1: function(arg) {
      return this.$this.runUnaryGuarded$2(this.f, arg);
    },
    $signature: function() {
      return this.T._eval$1("~(0)");
    }
  };
  P._HashMap.prototype = {
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    get$keys: function(_) {
      return new P._HashMapKeyIterable(this, H._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    get$values: function(_) {
      var t1 = H._instanceType(this);
      return H.MappedIterable_MappedIterable(new P._HashMapKeyIterable(this, t1._eval$1("_HashMapKeyIterable<1>")), new P._HashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1: function(_, key) {
      var strings, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1: function(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index: function(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : P._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : P._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(0, key);
    },
    _get$1: function(_, key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet: function(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = P._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = P._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2: function(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        P._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._collection$_keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._collection$_keys = null;
        }
      }
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      var value, _this = this;
      if (_this.containsKey$1(0, key))
        return H._instanceType(_this)._rest[1]._as(_this.$index(0, key));
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1: function(_, key) {
      var _this = this;
      if (typeof key == "string" && key !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, key);
      else if (typeof key == "number" && (key & 1073741823) === key)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, key);
      else
        return _this._remove$1(0, key);
    },
    _remove$1: function(_, key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._collection$_keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    forEach$1: function(_, action) {
      var $length, t1, i, key, _this = this,
        keys = _this._computeKeys$0();
      for ($length = keys.length, t1 = H._instanceType(_this)._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        action.call$2(key, t1._as(_this.$index(0, key)));
        if (keys !== _this._collection$_keys)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0: function() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_keys;
      if (result != null)
        return result;
      result = P.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _collection$_addHashTableEntry$3: function(table, key, value) {
      if (table[key] == null) {
        ++this._collection$_length;
        this._collection$_keys = null;
      }
      P._HashMap__setTableEntry(table, key, value);
    },
    _collection$_removeHashTableEntry$2: function(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = P._HashMap__getTableEntry(table, key);
        delete table[key];
        --this._collection$_length;
        this._collection$_keys = null;
        return value;
      } else
        return null;
    },
    _computeHashCode$1: function(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2: function(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    }
  };
  P._HashMap_values_closure.prototype = {
    call$1: function(each) {
      var t1 = this.$this;
      return H._instanceType(t1)._rest[1]._as(t1.$index(0, each));
    },
    $signature: function() {
      return H._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  P._IdentityHashMap.prototype = {
    _computeHashCode$1: function(key) {
      return H.objectHashCode(key) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  P._HashMapKeyIterable.prototype = {
    get$length: function(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$iterator: function(_) {
      var t1 = this._collection$_map;
      return new P._HashMapKeyIterator(t1, t1._computeKeys$0());
    },
    contains$1: function(_, element) {
      return this._collection$_map.containsKey$1(0, element);
    },
    forEach$1: function(_, f) {
      var $length, i,
        t1 = this._collection$_map,
        keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._collection$_keys)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
      }
    }
  };
  P._HashMapKeyIterator.prototype = {
    get$current: function(_) {
      return H._instanceType(this)._precomputed1._as(this._collection$_current);
    },
    moveNext$0: function() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._collection$_keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = keys[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  P._LinkedIdentityHashMap.prototype = {
    internalComputeHashCode$1: function(key) {
      return H.objectHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2: function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].hashMapCellKey;
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  P._HashSet.prototype = {
    _newSet$0: function() {
      return new P._HashSet(H._instanceType(this)._eval$1("_HashSet<1>"));
    },
    get$iterator: function(_) {
      return new P._HashSetIterator(this, this._computeElements$0());
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    contains$1: function(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1: function(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    add$1: function(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = P._HashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = P._HashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(0, element);
    },
    _add$1: function(_, element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._HashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      ++_this._collection$_length;
      _this._elements = null;
      return true;
    },
    addAll$1: function(_, objects) {
      var t1;
      for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
        this.add$1(0, t1.get$current(t1));
    },
    remove$1: function(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(0, object);
    },
    _remove$1: function(_, object) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      --_this._collection$_length;
      _this._elements = null;
      bucket.splice(index, 1);
      if (0 === bucket.length)
        delete rest[hash];
      return true;
    },
    clear$0: function(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._elements = null;
        _this._collection$_length = 0;
      }
    },
    _computeElements$0: function() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._elements;
      if (result != null)
        return result;
      result = P.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._elements = result;
    },
    _collection$_addHashTableEntry$2: function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = 0;
      ++this._collection$_length;
      this._elements = null;
      return true;
    },
    _collection$_removeHashTableEntry$2: function(table, element) {
      if (table != null && table[element] != null) {
        delete table[element];
        --this._collection$_length;
        this._elements = null;
        return true;
      } else
        return false;
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i], element))
          return i;
      return -1;
    }
  };
  P._HashSetIterator.prototype = {
    get$current: function(_) {
      return H._instanceType(this)._precomputed1._as(this._collection$_current);
    },
    moveNext$0: function() {
      var _this = this,
        elements = _this._elements,
        offset = _this._offset,
        t1 = _this._set;
      if (elements !== t1._elements)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = elements[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  P._LinkedHashSet.prototype = {
    _newSet$0: function() {
      return new P._LinkedHashSet(H._instanceType(this)._eval$1("_LinkedHashSet<1>"));
    },
    get$iterator: function(_) {
      var t1 = new P._LinkedHashSetIterator(this, this._collection$_modifications);
      t1._collection$_cell = this._collection$_first;
      return t1;
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    contains$1: function(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1: function(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    forEach$1: function(_, action) {
      var _this = this,
        cell = _this._collection$_first,
        modifications = _this._collection$_modifications;
      for (; cell != null;) {
        action.call$1(cell._collection$_element);
        if (modifications !== _this._collection$_modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        cell = cell._collection$_next;
      }
    },
    get$first: function(_) {
      var first = this._collection$_first;
      if (first == null)
        throw H.wrapException(P.StateError$("No elements"));
      return first._collection$_element;
    },
    get$last: function(_) {
      var last = this._collection$_last;
      if (last == null)
        throw H.wrapException(P.StateError$("No elements"));
      return last._collection$_element;
    },
    add$1: function(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = P._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = P._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(0, element);
    },
    _add$1: function(_, element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = P._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1: function(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(0, object);
    },
    _remove$1: function(_, object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._collection$_unlinkCell$1(cell);
      return true;
    },
    _filterWhere$2: function(test, removeMatching) {
      var element, next, modifications, t1, _this = this,
        cell = _this._collection$_first;
      for (; cell != null; cell = next) {
        element = cell._collection$_element;
        next = cell._collection$_next;
        modifications = _this._collection$_modifications;
        t1 = test.call$1(element);
        if (modifications !== _this._collection$_modifications)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        if (true === t1)
          _this.remove$1(0, element);
      }
    },
    clear$0: function(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._collection$_first = _this._collection$_last = null;
        _this._collection$_length = 0;
        _this._collection$_modified$0();
      }
    },
    _collection$_addHashTableEntry$2: function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _collection$_removeHashTableEntry$2: function(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = table[element];
      if (cell == null)
        return false;
      this._collection$_unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0: function() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1: function(element) {
      var t1, _this = this,
        cell = new P._LinkedHashSetCell(element);
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _collection$_unlinkCell$1: function(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1: function(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2: function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._collection$_element, element))
          return i;
      return -1;
    }
  };
  P._LinkedHashSetCell.prototype = {};
  P._LinkedHashSetIterator.prototype = {
    get$current: function(_) {
      return H._instanceType(this)._precomputed1._as(this._collection$_current);
    },
    moveNext$0: function() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = cell._collection$_element;
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    }
  };
  P.HashMap_HashMap$from_closure.prototype = {
    call$2: function(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 23
  };
  P.IterableBase.prototype = {};
  P.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2: function(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 23
  };
  P.LinkedList.prototype = {
    contains$1: function(_, entry) {
      return entry instanceof P.LinkedListEntry && this === entry._list;
    },
    get$iterator: function(_) {
      return new P._LinkedListIterator(this, this._modificationCount, this._collection$_first);
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    get$first: function(_) {
      var t1;
      if (this._collection$_length === 0)
        throw H.wrapException(P.StateError$("No such element"));
      t1 = this._collection$_first;
      t1.toString;
      return t1;
    },
    get$last: function(_) {
      var t1;
      if (this._collection$_length === 0)
        throw H.wrapException(P.StateError$("No such element"));
      t1 = this._collection$_first._collection$_previous;
      t1.toString;
      return t1;
    },
    forEach$1: function(_, action) {
      var t1, current, _this = this,
        modificationCount = _this._modificationCount;
      if (_this._collection$_length === 0)
        return;
      t1 = _this._collection$_first;
      t1.toString;
      current = t1;
      do {
        action.call$1(current);
        if (modificationCount !== _this._modificationCount)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
        t1 = current._collection$_next;
        t1.toString;
        if (t1 !== _this._collection$_first) {
          current = t1;
          continue;
        } else
          break;
      } while (true);
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    _insertBefore$3$updateFirst: function(entry, newEntry, updateFirst) {
      var t1, t2, _this = this;
      if (newEntry._list != null)
        throw H.wrapException(P.StateError$("LinkedListEntry is already in a LinkedList"));
      ++_this._modificationCount;
      newEntry._list = _this;
      t1 = _this._collection$_length;
      if (t1 === 0) {
        newEntry._collection$_next = newEntry;
        _this._collection$_first = newEntry._collection$_previous = newEntry;
        _this._collection$_length = t1 + 1;
        return;
      }
      t2 = entry._collection$_previous;
      t2.toString;
      newEntry._collection$_previous = t2;
      newEntry._collection$_next = entry;
      entry._collection$_previous = t2._collection$_next = newEntry;
      _this._collection$_length = t1 + 1;
    }
  };
  P._LinkedListIterator.prototype = {
    get$current: function(_) {
      return H._instanceType(this)._precomputed1._as(this._collection$_current);
    },
    moveNext$0: function() {
      var _this = this,
        t1 = _this._list;
      if (_this._modificationCount !== t1._modificationCount)
        throw H.wrapException(P.ConcurrentModificationError$(_this));
      if (t1._collection$_length !== 0)
        t1 = _this._visitedFirst && _this._collection$_next === t1.get$first(t1);
      else
        t1 = true;
      if (t1) {
        _this._collection$_current = null;
        return false;
      }
      _this._visitedFirst = true;
      t1 = _this._collection$_next;
      _this._collection$_current = t1;
      _this._collection$_next = t1._collection$_next;
      return true;
    }
  };
  P.LinkedListEntry.prototype = {};
  P.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  P.ListMixin.prototype = {
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, this.get$length(receiver));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1: function(receiver, action) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    get$isEmpty: function(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty: function(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first: function(receiver) {
      if (this.get$length(receiver) === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    get$last: function(receiver) {
      if (this.get$length(receiver) === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      return this.$index(receiver, this.get$length(receiver) - 1);
    },
    contains$1: function(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(this.$index(receiver, i), element))
          return true;
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    firstWhere$2$orElse: function(receiver, test, orElse) {
      var i, element,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        element = this.$index(receiver, i);
        if (test.call$1(element))
          return element;
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return orElse.call$0();
    },
    lastWhere$2$orElse: function(receiver, test, orElse) {
      var i, element,
        $length = this.get$length(receiver);
      for (i = $length - 1; i >= 0; --i) {
        element = this.$index(receiver, i);
        if (test.call$1(element))
          return element;
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(H.IterableElementError_noElement());
    },
    join$1: function(receiver, separator) {
      var t1;
      if (this.get$length(receiver) === 0)
        return "";
      t1 = P.StringBuffer__writeAll("", receiver, separator);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    map$1$1: function(receiver, f, $T) {
      return new H.MappedListIterable(receiver, f, H.instanceType(receiver)._eval$1("@<ListMixin.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    fold$1$2: function(receiver, initialValue, combine) {
      var value, i,
        $length = this.get$length(receiver);
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    fold$2: function($receiver, initialValue, combine) {
      return this.fold$1$2($receiver, initialValue, combine, type$.dynamic);
    },
    skip$1: function(receiver, count) {
      return H.SubListIterable$(receiver, count, null, H.instanceType(receiver)._eval$1("ListMixin.E"));
    },
    take$1: function(receiver, count) {
      return H.SubListIterable$(receiver, 0, H.checkNotNullable(count, "count", type$.int), H.instanceType(receiver)._eval$1("ListMixin.E"));
    },
    toList$1$growable: function(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = J.JSArray_JSArray$growable(0, H.instanceType(receiver)._eval$1("ListMixin.E"));
        return t1;
      }
      first = _this.$index(receiver, 0);
      result = P.List_List$filled(_this.get$length(receiver), first, true, H.instanceType(receiver)._eval$1("ListMixin.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        result[i] = _this.$index(receiver, i);
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    toSet$0: function(receiver) {
      var i,
        result = P.LinkedHashSet_LinkedHashSet(H.instanceType(receiver)._eval$1("ListMixin.E"));
      for (i = 0; i < this.get$length(receiver); ++i)
        result.add$1(0, this.$index(receiver, i));
      return result;
    },
    add$1: function(receiver, element) {
      var t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    remove$1: function(receiver, element) {
      var i;
      for (i = 0; i < this.get$length(receiver); ++i)
        if (J.$eq$(this.$index(receiver, i), element)) {
          this._closeGap$2(receiver, i, i + 1);
          return true;
        }
      return false;
    },
    _closeGap$2: function(receiver, start, end) {
      var i, _this = this,
        $length = _this.get$length(receiver),
        size = end - start;
      for (i = end; i < $length; ++i)
        _this.$indexSet(receiver, i - size, _this.$index(receiver, i));
      _this.set$length(receiver, $length - size);
    },
    cast$1$0: function(receiver, $R) {
      return new H.CastList(receiver, H.instanceType(receiver)._eval$1("@<ListMixin.E>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    removeLast$0: function(receiver) {
      var result, _this = this;
      if (_this.get$length(receiver) === 0)
        throw H.wrapException(H.IterableElementError_noElement());
      result = _this.$index(receiver, _this.get$length(receiver) - 1);
      _this.set$length(receiver, _this.get$length(receiver) - 1);
      return result;
    },
    $add: function(receiver, other) {
      var t1 = P.List_List$of(receiver, true, H.instanceType(receiver)._eval$1("ListMixin.E"));
      C.JSArray_methods.addAll$1(t1, other);
      return t1;
    },
    sublist$2: function(receiver, start, end) {
      var listLength = this.get$length(receiver);
      P.RangeError_checkValidRange(start, listLength, listLength);
      return P.List_List$from(this.getRange$2(receiver, start, listLength), true, H.instanceType(receiver)._eval$1("ListMixin.E"));
    },
    sublist$1: function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    getRange$2: function(receiver, start, end) {
      P.RangeError_checkValidRange(start, end, this.get$length(receiver));
      return H.SubListIterable$(receiver, start, end, H.instanceType(receiver)._eval$1("ListMixin.E"));
    },
    fillRange$3: function(receiver, start, end, fill) {
      var i;
      H.instanceType(receiver)._eval$1("ListMixin.E")._as(fill);
      P.RangeError_checkValidRange(start, end, this.get$length(receiver));
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, t1, i;
      P.RangeError_checkValidRange(start, end, this.get$length(receiver));
      $length = end - start;
      if ($length === 0)
        return;
      P.RangeError_checkNotNegative(skipCount, "skipCount");
      if (H.instanceType(receiver)._eval$1("List<ListMixin.E>")._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw H.wrapException(H.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    setAll$2: function(receiver, index, iterable) {
      var t1, index0;
      if (type$.List_dynamic._is(iterable))
        this.setRange$3(receiver, index, index + iterable.length, iterable);
      else
        for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0(); index = index0) {
          index0 = index + 1;
          this.$indexSet(receiver, index, t1.get$current(t1));
        }
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  P.MapBase.prototype = {};
  P.MapBase_mapToString_closure.prototype = {
    call$2: function(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += H.S(k);
      t1._contents = t2 + ": ";
      t1._contents += H.S(v);
    },
    $signature: 52
  };
  P.MapMixin.prototype = {
    cast$2$0: function(receiver, RK, RV) {
      var t1 = H.instanceType(receiver);
      return P.Map_castFrom(receiver, t1._eval$1("MapMixin.K"), t1._eval$1("MapMixin.V"), RK, RV);
    },
    forEach$1: function(receiver, action) {
      var t1, t2, key;
      for (t1 = J.get$iterator$ax(this.get$keys(receiver)), t2 = H.instanceType(receiver)._eval$1("MapMixin.V"); t1.moveNext$0();) {
        key = t1.get$current(t1);
        action.call$2(key, t2._as(this.$index(receiver, key)));
      }
    },
    putIfAbsent$2: function(receiver, key, ifAbsent) {
      var t1;
      if (this.containsKey$1(receiver, key))
        return H.instanceType(receiver)._eval$1("MapMixin.V")._as(this.$index(receiver, key));
      t1 = ifAbsent.call$0();
      this.$indexSet(receiver, key, t1);
      return t1;
    },
    update$3$ifAbsent: function(receiver, key, update, ifAbsent) {
      var t1, _this = this;
      if (_this.containsKey$1(receiver, key)) {
        t1 = update.call$1(H.instanceType(receiver)._eval$1("MapMixin.V")._as(_this.$index(receiver, key)));
        _this.$indexSet(receiver, key, t1);
        return t1;
      }
      if (ifAbsent != null) {
        t1 = ifAbsent.call$0();
        _this.$indexSet(receiver, key, t1);
        return t1;
      }
      throw H.wrapException(P.ArgumentError$value(key, "key", "Key not in map."));
    },
    update$2: function($receiver, key, update) {
      return this.update$3$ifAbsent($receiver, key, update, null);
    },
    get$entries: function(receiver) {
      return J.map$1$1$ax(this.get$keys(receiver), new P.MapMixin_entries_closure(receiver), H.instanceType(receiver)._eval$1("MapEntry<MapMixin.K,MapMixin.V>"));
    },
    map$2$1: function(receiver, transform, K2, V2) {
      var t1, t2, key, entry,
        result = P.LinkedHashMap_LinkedHashMap$_empty(K2, V2);
      for (t1 = J.get$iterator$ax(this.get$keys(receiver)), t2 = H.instanceType(receiver)._eval$1("MapMixin.V"); t1.moveNext$0();) {
        key = t1.get$current(t1);
        entry = transform.call$2(key, t2._as(this.$index(receiver, key)));
        result.$indexSet(0, entry.key, entry.value);
      }
      return result;
    },
    removeWhere$1: function(receiver, test) {
      var t2, key, _i,
        t1 = H.instanceType(receiver),
        keysToRemove = H.setRuntimeTypeInfo([], t1._eval$1("JSArray<MapMixin.K>"));
      for (t2 = J.get$iterator$ax(this.get$keys(receiver)), t1 = t1._eval$1("MapMixin.V"); t2.moveNext$0();) {
        key = t2.get$current(t2);
        if (test.call$2(key, t1._as(this.$index(receiver, key))))
          keysToRemove.push(key);
      }
      for (t1 = keysToRemove.length, _i = 0; _i < keysToRemove.length; keysToRemove.length === t1 || (0, H.throwConcurrentModificationError)(keysToRemove), ++_i)
        this.remove$1(receiver, keysToRemove[_i]);
    },
    containsKey$1: function(receiver, key) {
      return J.contains$1$asx(this.get$keys(receiver), key);
    },
    get$length: function(receiver) {
      return J.get$length$asx(this.get$keys(receiver));
    },
    get$isEmpty: function(receiver) {
      return J.get$isEmpty$asx(this.get$keys(receiver));
    },
    get$isNotEmpty: function(receiver) {
      return J.get$isNotEmpty$asx(this.get$keys(receiver));
    },
    get$values: function(receiver) {
      var t1 = H.instanceType(receiver);
      return new P._MapBaseValueIterable(receiver, t1._eval$1("@<MapMixin.K>")._bind$1(t1._eval$1("MapMixin.V"))._eval$1("_MapBaseValueIterable<1,2>"));
    },
    toString$0: function(receiver) {
      return P.MapBase_mapToString(receiver);
    },
    $isMap: 1
  };
  P.MapMixin_entries_closure.prototype = {
    call$1: function(key) {
      var t1 = this.$this,
        t2 = H.instanceType(t1),
        t3 = t2._eval$1("MapMixin.V");
      return new P.MapEntry(key, t3._as(J.$index$asx(t1, key)), t2._eval$1("@<MapMixin.K>")._bind$1(t3)._eval$1("MapEntry<1,2>"));
    },
    $signature: function() {
      return H.instanceType(this.$this)._eval$1("MapEntry<MapMixin.K,MapMixin.V>(MapMixin.K)");
    }
  };
  P._MapBaseValueIterable.prototype = {
    get$length: function(_) {
      return J.get$length$asx(this._collection$_map);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this._collection$_map);
    },
    get$isNotEmpty: function(_) {
      return J.get$isNotEmpty$asx(this._collection$_map);
    },
    get$first: function(_) {
      var t1 = this._collection$_map,
        t2 = J.getInterceptor$x(t1);
      return this.$ti._rest[1]._as(t2.$index(t1, J.get$first$ax(t2.get$keys(t1))));
    },
    get$last: function(_) {
      var t1 = this._collection$_map,
        t2 = J.getInterceptor$x(t1);
      return this.$ti._rest[1]._as(t2.$index(t1, J.get$last$ax(t2.get$keys(t1))));
    },
    get$iterator: function(_) {
      var t1 = this._collection$_map;
      return new P._MapBaseValueIterator(J.get$iterator$ax(J.get$keys$x(t1)), t1);
    }
  };
  P._MapBaseValueIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        t1 = _this._collection$_keys;
      if (t1.moveNext$0()) {
        _this._collection$_current = J.$index$asx(_this._collection$_map, t1.get$current(t1));
        return true;
      }
      _this._collection$_current = null;
      return false;
    },
    get$current: function(_) {
      return H._instanceType(this)._rest[1]._as(this._collection$_current);
    }
  };
  P._UnmodifiableMapMixin.prototype = {
    $indexSet: function(_, key, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
    },
    remove$1: function(_, key) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
    }
  };
  P.MapView.prototype = {
    cast$2$0: function(_, RK, RV) {
      var t1 = this._collection$_map;
      return t1.cast$2$0(t1, RK, RV);
    },
    $index: function(_, key) {
      return this._collection$_map.$index(0, key);
    },
    $indexSet: function(_, key, value) {
      this._collection$_map.$indexSet(0, key, value);
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      return this._collection$_map.putIfAbsent$2(0, key, ifAbsent);
    },
    containsKey$1: function(_, key) {
      return this._collection$_map.containsKey$1(0, key);
    },
    forEach$1: function(_, action) {
      this._collection$_map.forEach$1(0, action);
    },
    get$isEmpty: function(_) {
      var t1 = this._collection$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty: function(_) {
      var t1 = this._collection$_map;
      return t1.get$isNotEmpty(t1);
    },
    get$length: function(_) {
      var t1 = this._collection$_map;
      return t1.get$length(t1);
    },
    get$keys: function(_) {
      var t1 = this._collection$_map;
      return t1.get$keys(t1);
    },
    remove$1: function(_, key) {
      return this._collection$_map.remove$1(0, key);
    },
    toString$0: function(_) {
      var t1 = this._collection$_map;
      return t1.toString$0(t1);
    },
    get$values: function(_) {
      var t1 = this._collection$_map;
      return t1.get$values(t1);
    },
    get$entries: function(_) {
      var t1 = this._collection$_map;
      return t1.get$entries(t1);
    },
    map$2$1: function(_, transform, K2, V2) {
      var t1 = this._collection$_map;
      return t1.map$2$1(t1, transform, K2, V2);
    },
    $isMap: 1
  };
  P.UnmodifiableMapView.prototype = {
    cast$2$0: function(_, RK, RV) {
      var t1 = this._collection$_map;
      return new P.UnmodifiableMapView(t1.cast$2$0(t1, RK, RV), RK._eval$1("@<0>")._bind$1(RV)._eval$1("UnmodifiableMapView<1,2>"));
    }
  };
  P._DoubleLink.prototype = {
    _link$2: function(previous, next) {
      var _this = this;
      _this._nextLink = next;
      _this._previousLink = previous;
      if (previous != null)
        previous._nextLink = H._instanceType(_this)._eval$1("_DoubleLink.0")._as(_this);
      if (next != null)
        next._previousLink = H._instanceType(_this)._eval$1("_DoubleLink.0")._as(_this);
    },
    _unlink$0: function() {
      var t2, _this = this,
        t1 = _this._previousLink;
      if (t1 != null)
        t1._nextLink = _this._nextLink;
      t2 = _this._nextLink;
      if (t2 != null)
        t2._previousLink = t1;
      _this._previousLink = _this._nextLink = null;
    }
  };
  P.DoubleLinkedQueueEntry.prototype = {
    remove$0: function(_) {
      this._unlink$0();
      return H._instanceType(this)._precomputed1._as(this.get$_collection$_element());
    }
  };
  P._DoubleLinkedQueueEntry.prototype = {
    get$_collection$_element: function() {
      return H._instanceType(this)._precomputed1._as(this._collection$_element);
    }
  };
  P._DoubleLinkedQueueElement.prototype = {
    _remove$0: function(_) {
      var _this = this;
      _this._queue = null;
      _this._unlink$0();
      return _this.$ti._precomputed1._as(_this.get$_collection$_element());
    },
    remove$0: function(_) {
      var _this = this,
        t1 = _this._queue;
      if (t1 != null)
        --t1._elementCount;
      _this._queue = null;
      _this._unlink$0();
      return _this.$ti._precomputed1._as(_this.get$_collection$_element());
    },
    _asNonSentinelEntry$0: function() {
      return this;
    }
  };
  P._DoubleLinkedQueueSentinel.prototype = {
    _asNonSentinelEntry$0: function() {
      return null;
    },
    _remove$0: function(_) {
      throw H.wrapException(H.IterableElementError_noElement());
    },
    get$_collection$_element: function() {
      throw H.wrapException(H.IterableElementError_noElement());
    }
  };
  P.DoubleLinkedQueue.prototype = {
    get$_sentinel: function() {
      var _this = this,
        t1 = _this.__DoubleLinkedQueue__sentinel;
      if (t1 == null) {
        t1 = new P._DoubleLinkedQueueSentinel(_this, null, _this.$ti._eval$1("_DoubleLinkedQueueSentinel<1>"));
        t1._previousLink = t1;
        _this.__DoubleLinkedQueue__sentinel = t1._nextLink = t1;
      }
      return t1;
    },
    get$length: function(_) {
      return this._elementCount;
    },
    addFirst$1: function(value) {
      var t1 = this.get$_sentinel();
      new P._DoubleLinkedQueueElement(t1._queue, value, t1.$ti._eval$1("_DoubleLinkedQueueElement<1>"))._link$2(t1, t1._nextLink);
      ++this._elementCount;
    },
    get$first: function(_) {
      return this.$ti._precomputed1._as(this.get$_sentinel()._nextLink.get$_collection$_element());
    },
    get$last: function(_) {
      return this.$ti._precomputed1._as(this.get$_sentinel()._previousLink.get$_collection$_element());
    },
    get$isEmpty: function(_) {
      return this.get$_sentinel()._nextLink === this.get$_sentinel();
    },
    get$iterator: function(_) {
      var t1 = this.get$_sentinel();
      return new P._DoubleLinkedQueueIterator(t1, t1._nextLink, this.$ti._eval$1("_DoubleLinkedQueueIterator<1>"));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    $isEfficientLengthIterable: 1
  };
  P._DoubleLinkedQueueIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        t1 = _this._nextEntry,
        t2 = _this._sentinel;
      if (t1 == t2) {
        _this._sentinel = _this._nextEntry = _this._collection$_current = null;
        return false;
      }
      _this.$ti._eval$1("_DoubleLinkedQueueEntry<1>")._as(t1);
      t2 = t2._queue;
      if (t2 != t1._queue)
        throw H.wrapException(P.ConcurrentModificationError$(t2));
      _this._collection$_current = t1.get$_collection$_element();
      _this._nextEntry = t1._nextLink;
      return true;
    },
    get$current: function(_) {
      return this.$ti._precomputed1._as(this._collection$_current);
    }
  };
  P.ListQueue.prototype = {
    get$iterator: function(_) {
      var _this = this;
      return new P._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head);
    },
    forEach$1: function(_, f) {
      var i, t1, _this = this,
        modificationCount = _this._modificationCount;
      for (i = _this._head, t1 = _this.$ti._precomputed1; i !== _this._tail; i = (i + 1 & _this._table.length - 1) >>> 0) {
        f.call$1(t1._as(_this._table[i]));
        if (modificationCount !== _this._modificationCount)
          H.throwExpression(P.ConcurrentModificationError$(_this));
      }
    },
    get$isEmpty: function(_) {
      return this._head === this._tail;
    },
    get$length: function(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    get$first: function(_) {
      var _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw H.wrapException(H.IterableElementError_noElement());
      return _this.$ti._precomputed1._as(_this._table[t1]);
    },
    get$last: function(_) {
      var _this = this,
        t1 = _this._head,
        t2 = _this._tail;
      if (t1 === t2)
        throw H.wrapException(H.IterableElementError_noElement());
      t1 = _this._table;
      return _this.$ti._precomputed1._as(t1[(t2 - 1 & t1.length - 1) >>> 0]);
    },
    elementAt$1: function(_, index) {
      var t1, _this = this;
      P.RangeError_checkValidIndex(index, _this, null, null);
      t1 = _this._table;
      return _this.$ti._precomputed1._as(t1[(_this._head + index & t1.length - 1) >>> 0]);
    },
    addAll$1: function(_, elements) {
      var addCount, $length, t2, t3, t4, newTable, endSpace, preSpace, _this = this,
        t1 = _this.$ti;
      if (t1._eval$1("List<1>")._is(elements)) {
        addCount = elements.length;
        $length = _this.get$length(_this);
        t2 = $length + addCount;
        t3 = _this._table;
        t4 = t3.length;
        if (t2 >= t4) {
          newTable = P.List_List$filled(P.ListQueue__nextPowerOf2(t2 + (t2 >>> 1)), null, false, t1._eval$1("1?"));
          _this._tail = _this._writeToList$1(newTable);
          _this._table = newTable;
          _this._head = 0;
          C.JSArray_methods.setRange$4(newTable, $length, t2, elements, 0);
          _this._tail += addCount;
        } else {
          t1 = _this._tail;
          endSpace = t4 - t1;
          if (addCount < endSpace) {
            C.JSArray_methods.setRange$4(t3, t1, t1 + addCount, elements, 0);
            _this._tail += addCount;
          } else {
            preSpace = addCount - endSpace;
            C.JSArray_methods.setRange$4(t3, t1, t1 + endSpace, elements, 0);
            C.JSArray_methods.setRange$4(_this._table, 0, preSpace, elements, endSpace);
            _this._tail = preSpace;
          }
        }
        ++_this._modificationCount;
      } else
        for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
          _this._add$1(0, t1.get$current(t1));
    },
    clear$0: function(_) {
      var t2, t3, _this = this,
        i = _this._head,
        t1 = _this._tail;
      if (i !== t1) {
        for (t2 = _this._table, t3 = t2.length - 1; i !== t1; i = (i + 1 & t3) >>> 0)
          t2[i] = null;
        _this._head = _this._tail = 0;
        ++_this._modificationCount;
      }
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    addFirst$1: function(value) {
      var _this = this,
        t1 = _this._head,
        t2 = _this._table;
      t1 = _this._head = (t1 - 1 & t2.length - 1) >>> 0;
      t2[t1] = value;
      if (t1 === _this._tail)
        _this._grow$0();
      ++_this._modificationCount;
    },
    removeFirst$0: function() {
      var t2, result, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw H.wrapException(H.IterableElementError_noElement());
      ++_this._modificationCount;
      t2 = _this._table;
      result = _this.$ti._precomputed1._as(t2[t1]);
      t2[t1] = null;
      _this._head = (t1 + 1 & t2.length - 1) >>> 0;
      return result;
    },
    removeLast$0: function(_) {
      var result, _this = this,
        t1 = _this._head,
        t2 = _this._tail;
      if (t1 === t2)
        throw H.wrapException(H.IterableElementError_noElement());
      ++_this._modificationCount;
      t1 = _this._table;
      t2 = _this._tail = (t2 - 1 & t1.length - 1) >>> 0;
      result = _this.$ti._precomputed1._as(t1[t2]);
      t1[t2] = null;
      return result;
    },
    _add$1: function(_, element) {
      var _this = this,
        t1 = _this._table,
        t2 = _this._tail;
      t1[t2] = element;
      t1 = (t2 + 1 & t1.length - 1) >>> 0;
      _this._tail = t1;
      if (_this._head === t1)
        _this._grow$0();
      ++_this._modificationCount;
    },
    _grow$0: function() {
      var _this = this,
        newTable = P.List_List$filled(_this._table.length * 2, null, false, _this.$ti._eval$1("1?")),
        t1 = _this._table,
        t2 = _this._head,
        split = t1.length - t2;
      C.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
      C.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
      _this._head = 0;
      _this._tail = _this._table.length;
      _this._table = newTable;
    },
    _writeToList$1: function(target) {
      var $length, firstPartSize, _this = this,
        t1 = _this._head,
        t2 = _this._tail,
        t3 = _this._table;
      if (t1 <= t2) {
        $length = t2 - t1;
        C.JSArray_methods.setRange$4(target, 0, $length, t3, t1);
        return $length;
      } else {
        firstPartSize = t3.length - t1;
        C.JSArray_methods.setRange$4(target, 0, firstPartSize, t3, t1);
        C.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + _this._tail, _this._table, 0);
        return _this._tail + firstPartSize;
      }
    }
  };
  P._ListQueueIterator.prototype = {
    get$current: function(_) {
      return H._instanceType(this)._precomputed1._as(this._collection$_current);
    },
    moveNext$0: function() {
      var t2, _this = this,
        t1 = _this._queue;
      if (_this._modificationCount !== t1._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(t1));
      t2 = _this._position;
      if (t2 === _this._end) {
        _this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      _this._collection$_current = t1[t2];
      _this._position = (t2 + 1 & t1.length - 1) >>> 0;
      return true;
    }
  };
  P.SetMixin.prototype = {
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$length(this) !== 0;
    },
    addAll$1: function(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        this.add$1(0, t1.get$current(t1));
    },
    removeAll$1: function(elements) {
      var t1, _i;
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, H.throwConcurrentModificationError)(elements), ++_i)
        this.remove$1(0, elements[_i]);
    },
    intersection$1: function(_, other) {
      var t1, element,
        result = this.toSet$0(0);
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (!other.contains$1(0, element))
          result.remove$1(0, element);
      }
      return result;
    },
    toList$1$growable: function(_, growable) {
      return P.List_List$of(this, true, H._instanceType(this)._eval$1("SetMixin.E"));
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    map$1$1: function(_, f, $T) {
      return new H.EfficientLengthMappedIterable(this, f, H._instanceType(this)._eval$1("@<SetMixin.E>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToFullString(this, "{", "}");
    },
    forEach$1: function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current(t1));
    },
    take$1: function(_, n) {
      return H.TakeIterable_TakeIterable(this, n, H._instanceType(this)._eval$1("SetMixin.E"));
    },
    skip$1: function(_, n) {
      return H.SkipIterable_SkipIterable(this, n, H._instanceType(this)._eval$1("SetMixin.E"));
    },
    get$first: function(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      return it.get$current(it);
    },
    get$last: function(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      do
        result = it.get$current(it);
      while (it.moveNext$0());
      return result;
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element, _s5_ = "index";
      H.checkNotNullable(index, _s5_, type$.int);
      P.RangeError_checkNotNegative(index, _s5_);
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, _s5_, null, elementIndex));
    }
  };
  P._SetBase.prototype = {
    difference$1: function(other) {
      var t1, element,
        result = this._newSet$0();
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (!other.contains$1(0, element))
          result.add$1(0, element);
      }
      return result;
    },
    intersection$1: function(_, other) {
      var t1, element,
        result = this._newSet$0();
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (other.contains$1(0, element))
          result.add$1(0, element);
      }
      return result;
    },
    toSet$0: function(_) {
      var t1 = this._newSet$0();
      t1.addAll$1(0, this);
      return t1;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  P._UnmodifiableSetMixin.prototype = {
    add$1: function(_, value) {
      return P._UnmodifiableSetMixin__throwUnmodifiable();
    },
    remove$1: function(_, value) {
      return P._UnmodifiableSetMixin__throwUnmodifiable();
    }
  };
  P._UnmodifiableSet.prototype = {
    _newSet$0: function() {
      return P.LinkedHashSet_LinkedHashSet(this.$ti._precomputed1);
    },
    contains$1: function(_, element) {
      return J.containsKey$1$x(this._collection$_map, element);
    },
    get$iterator: function(_) {
      return J.get$iterator$ax(J.get$keys$x(this._collection$_map));
    },
    get$length: function(_) {
      return J.get$length$asx(this._collection$_map);
    }
  };
  P._ListBase_Object_ListMixin.prototype = {};
  P._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  P.__SetBase_Object_SetMixin.prototype = {};
  P.__UnmodifiableSet__SetBase__UnmodifiableSetMixin.prototype = {};
  P._JsonMap.prototype = {
    $index: function(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length: function(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._data;
        t1 = t1.get$length(t1);
      } else
        t1 = this._convert$_computeKeys$0().length;
      return t1;
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$length(this) > 0;
    },
    get$keys: function(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._data;
        return t1.get$keys(t1);
      }
      return new P._JsonMapKeyIterable(this);
    },
    get$values: function(_) {
      var t1, _this = this;
      if (_this._processed == null) {
        t1 = _this._data;
        return t1.get$values(t1);
      }
      return H.MappedIterable_MappedIterable(_this._convert$_computeKeys$0(), new P._JsonMap_values_closure(_this), type$.String, type$.dynamic);
    },
    $indexSet: function(_, key, value) {
      var processed, original, _this = this;
      if (_this._processed == null)
        _this._data.$indexSet(0, key, value);
      else if (_this.containsKey$1(0, key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1: function(_, key) {
      if (this._processed == null)
        return this._data.containsKey$1(0, key);
      if (typeof key != "string")
        return false;
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      var value;
      if (this.containsKey$1(0, key))
        return this.$index(0, key);
      value = ifAbsent.call$0();
      this.$indexSet(0, key, value);
      return value;
    },
    remove$1: function(_, key) {
      if (this._processed != null && !this.containsKey$1(0, key))
        return null;
      return this._upgrade$0().remove$1(0, key);
    },
    forEach$1: function(_, f) {
      var keys, i, key, value, _this = this;
      if (_this._processed == null)
        return _this._data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = P._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._data)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0: function() {
      var keys = this._data;
      if (keys == null)
        keys = this._data = H.setRuntimeTypeInfo(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0: function() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._data;
      result = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        keys.push("");
      else
        C.JSArray_methods.set$length(keys, 0);
      _this._original = _this._processed = null;
      return _this._data = result;
    },
    _process$1: function(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = P._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  P._JsonMap_values_closure.prototype = {
    call$1: function(each) {
      return this.$this.$index(0, each);
    },
    $signature: 63
  };
  P._JsonMapKeyIterable.prototype = {
    get$length: function(_) {
      var t1 = this._parent;
      return t1.get$length(t1);
    },
    elementAt$1: function(_, index) {
      var t1 = this._parent;
      return t1._processed == null ? t1.get$keys(t1).elementAt$1(0, index) : t1._convert$_computeKeys$0()[index];
    },
    get$iterator: function(_) {
      var t1 = this._parent;
      if (t1._processed == null) {
        t1 = t1.get$keys(t1);
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length);
      }
      return t1;
    },
    contains$1: function(_, key) {
      return this._parent.containsKey$1(0, key);
    }
  };
  P.Utf8Decoder__decoder_closure.prototype = {
    call$0: function() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
      }
      return null;
    },
    $signature: 27
  };
  P.Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0: function() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
      }
      return null;
    },
    $signature: 27
  };
  P.Base64Codec.prototype = {
    normalize$3: function(_, source, start, end) {
      var inverseAlphabet, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, char0, value, t1, t2, endLength, $length,
        _s31_ = "Invalid base64 encoding length ";
      end = P.RangeError_checkValidRange(start, end, source.length);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        char = C.JSString_methods._codeUnitAt$1(source, i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            char0 = H.parseHexByte(source, i0);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          value = inverseAlphabet[char0];
          if (value >= 0) {
            char0 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t1 = buffer == null ? null : buffer._contents.length;
                if (t1 == null)
                  t1 = 0;
                firstPadding = t1 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new P.StringBuffer("");
              t1 = buffer;
            } else
              t1 = buffer;
            t1._contents += C.JSString_methods.substring$2(source, sliceStart, i);
            t1._contents += H.Primitives_stringFromCharCode(char);
            sliceStart = i0;
            continue;
          }
        }
        throw H.wrapException(P.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = buffer._contents += C.JSString_methods.substring$2(source, sliceStart, end);
        t2 = t1.length;
        if (firstPadding >= 0)
          P.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = C.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw H.wrapException(P.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return C.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        P.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = C.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw H.wrapException(P.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = C.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  P.Base64Encoder.prototype = {};
  P.Codec.prototype = {};
  P.Converter.prototype = {};
  P.Encoding.prototype = {};
  P.JsonUnsupportedObjectError.prototype = {
    toString$0: function(_) {
      var safeString = P.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  P.JsonCyclicError.prototype = {
    toString$0: function(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  P.JsonCodec.prototype = {
    decode$1: function(_, source) {
      var t1 = P._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    encode$2$toEncodable: function(value, toEncodable) {
      if (toEncodable == null)
        toEncodable = null;
      if (toEncodable == null)
        return P._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return P._JsonStringStringifier_stringify(value, toEncodable, null);
    },
    encode$1: function(value) {
      return this.encode$2$toEncodable(value, null);
    },
    get$encoder: function() {
      return C.JsonEncoder_null;
    },
    get$decoder: function() {
      return C.JsonDecoder_null;
    }
  };
  P.JsonEncoder.prototype = {};
  P.JsonDecoder.prototype = {};
  P._JsonStringifier.prototype = {
    writeStringContent$1: function(s) {
      var t1, offset, i, charCode, t2, t3,
        $length = s.length;
      for (t1 = this._sink, offset = 0, i = 0; i < $length; ++i) {
        charCode = C.JSString_methods._codeUnitAt$1(s, i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t2 = charCode & 64512;
            if (t2 === 55296) {
              t3 = i + 1;
              t3 = !(t3 < $length && (C.JSString_methods._codeUnitAt$1(s, t3) & 64512) === 56320);
            } else
              t3 = false;
            if (!t3)
              if (t2 === 56320) {
                t2 = i - 1;
                t2 = !(t2 >= 0 && (C.JSString_methods.codeUnitAt$1(s, t2) & 64512) === 55296);
              } else
                t2 = false;
            else
              t2 = true;
            if (t2) {
              if (i > offset)
                t1._contents += C.JSString_methods.substring$2(s, offset, i);
              offset = i + 1;
              t1._contents += H.Primitives_stringFromCharCode(92);
              t1._contents += H.Primitives_stringFromCharCode(117);
              t1._contents += H.Primitives_stringFromCharCode(100);
              t2 = charCode >>> 8 & 15;
              t1._contents += H.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
              t2 = charCode >>> 4 & 15;
              t1._contents += H.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
              t2 = charCode & 15;
              t1._contents += H.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            t1._contents += C.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t1._contents += H.Primitives_stringFromCharCode(92);
          switch (charCode) {
            case 8:
              t1._contents += H.Primitives_stringFromCharCode(98);
              break;
            case 9:
              t1._contents += H.Primitives_stringFromCharCode(116);
              break;
            case 10:
              t1._contents += H.Primitives_stringFromCharCode(110);
              break;
            case 12:
              t1._contents += H.Primitives_stringFromCharCode(102);
              break;
            case 13:
              t1._contents += H.Primitives_stringFromCharCode(114);
              break;
            default:
              t1._contents += H.Primitives_stringFromCharCode(117);
              t1._contents += H.Primitives_stringFromCharCode(48);
              t1._contents += H.Primitives_stringFromCharCode(48);
              t2 = charCode >>> 4 & 15;
              t1._contents += H.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
              t2 = charCode & 15;
              t1._contents += H.Primitives_stringFromCharCode(t2 < 10 ? 48 + t2 : 87 + t2);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            t1._contents += C.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t1._contents += H.Primitives_stringFromCharCode(92);
          t1._contents += H.Primitives_stringFromCharCode(charCode);
        }
      }
      if (offset === 0)
        t1._contents += s;
      else if (offset < $length)
        t1._contents += C.JSString_methods.substring$2(s, offset, $length);
    },
    _checkCycle$1: function(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw H.wrapException(new P.JsonCyclicError(object, null));
      }
      t1.push(object);
    },
    writeObject$1: function(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = P.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw H.wrapException(t1);
        }
        _this._seen.pop();
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw H.wrapException(t1);
      }
    },
    writeJsonValue$1: function(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this._sink._contents += C.JSNumber_methods.toString$0(object);
        return true;
      } else if (object === true) {
        _this._sink._contents += "true";
        return true;
      } else if (object === false) {
        _this._sink._contents += "false";
        return true;
      } else if (object == null) {
        _this._sink._contents += "null";
        return true;
      } else if (typeof object == "string") {
        t1 = _this._sink;
        t1._contents += '"';
        _this.writeStringContent$1(object);
        t1._contents += '"';
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        _this._seen.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        _this._seen.pop();
        return success;
      } else
        return false;
    },
    writeList$1: function(list) {
      var t2, i,
        t1 = this._sink;
      t1._contents += "[";
      t2 = J.getInterceptor$asx(list);
      if (t2.get$isNotEmpty(list)) {
        this.writeObject$1(t2.$index(list, 0));
        for (i = 1; i < t2.get$length(list); ++i) {
          t1._contents += ",";
          this.writeObject$1(t2.$index(list, i));
        }
      }
      t1._contents += "]";
    },
    writeMap$1: function(map) {
      var t2, keyValueList, i, separator, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this._sink._contents += "{}";
        return true;
      }
      t2 = t1.get$length(map) * 2;
      keyValueList = P.List_List$filled(t2, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new P._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      t1 = _this._sink;
      t1._contents += "{";
      for (separator = '"'; i < t2; i += 2, separator = ',"') {
        t1._contents += separator;
        _this.writeStringContent$1(H._asString(keyValueList[i]));
        t1._contents += '":';
        _this.writeObject$1(keyValueList[i + 1]);
      }
      t1._contents += "}";
      return true;
    }
  };
  P._JsonStringifier_writeMap_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2, t3, i;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      t3 = t2.i;
      i = t2.i = t3 + 1;
      t1[t3] = key;
      t2.i = i + 1;
      t1[i] = value;
    },
    $signature: 52
  };
  P._JsonStringStringifier.prototype = {
    get$_partialResult: function() {
      var t1 = this._sink._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P.Utf8Codec.prototype = {
    get$name: function(_) {
      return "utf-8";
    },
    decode$1: function(_, codeUnits) {
      return C.Utf8Decoder_false.convert$1(codeUnits);
    },
    get$encoder: function() {
      return C.C_Utf8Encoder;
    }
  };
  P.Utf8Encoder.prototype = {
    convert$1: function(string) {
      var t1, encoder,
        end = P.RangeError_checkValidRange(0, null, string.length),
        $length = end - 0;
      if ($length === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array($length * 3);
      encoder = new P._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end) {
        C.JSString_methods.codeUnitAt$1(string, end - 1);
        encoder._writeReplacementCharacter$0();
      }
      return C.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    }
  };
  P._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0: function() {
      var _this = this,
        t1 = _this._buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1;
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      t1[t2] = 189;
    },
    _writeSurrogate$2: function(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3: function(str, start, end) {
      var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4, _this = this;
      if (start !== end && (C.JSString_methods.codeUnitAt$1(str, end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._buffer, t2 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = C.JSString_methods._codeUnitAt$1(str, stringIndex);
        if (codeUnit <= 127) {
          t3 = _this._bufferIndex;
          if (t3 >= t2)
            break;
          _this._bufferIndex = t3 + 1;
          t1[t3] = codeUnit;
        } else {
          t3 = codeUnit & 64512;
          if (t3 === 55296) {
            if (_this._bufferIndex + 4 > t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (_this._writeSurrogate$2(codeUnit, C.JSString_methods._codeUnitAt$1(str, stringIndex0)))
              stringIndex = stringIndex0;
          } else if (t3 === 56320) {
            if (_this._bufferIndex + 3 > t2)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t3 = _this._bufferIndex;
            t4 = t3 + 1;
            if (t4 >= t2)
              break;
            _this._bufferIndex = t4;
            t1[t3] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit & 63 | 128;
          } else {
            t3 = _this._bufferIndex;
            if (t3 + 2 >= t2)
              break;
            t4 = _this._bufferIndex = t3 + 1;
            t1[t3] = codeUnit >>> 12 | 224;
            t3 = _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t3 + 1;
            t1[t3] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  P.Utf8Decoder.prototype = {
    convert$1: function(codeUnits) {
      var t1 = this._allowMalformed,
        result = P.Utf8Decoder__convertIntercepted(t1, codeUnits, 0, null);
      if (result != null)
        return result;
      return new P._Utf8Decoder(t1).convertGeneral$4(codeUnits, 0, null, true);
    }
  };
  P._Utf8Decoder.prototype = {
    convertGeneral$4: function(codeUnits, start, maybeEnd, single) {
      var bytes, errorOffset, result, t1, message, _this = this,
        end = P.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits));
      if (start === end)
        return "";
      if (type$.Uint8List._is(codeUnits)) {
        bytes = codeUnits;
        errorOffset = 0;
      } else {
        bytes = P._Utf8Decoder__makeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      result = _this._convertRecursive$4(bytes, start, end, true);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = P._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw H.wrapException(P.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _convertRecursive$4: function(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = C.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._convertRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._convertRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    decodeGeneral$4: function(bytes, start, end, single) {
      var t1, type, t2, i0, markEnd, i1, m, _this = this, _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new P.StringBuffer(""),
        i = start + 1,
        byte = bytes[start];
      $label0$0:
        for (t1 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            type = C.JSString_methods._codeUnitAt$1("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE", byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            state = C.JSString_methods._codeUnitAt$1(" \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA", state + type);
            if (state === 0) {
              buffer._contents += H.Primitives_stringFromCharCode(char);
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t1)
                switch (state) {
                  case 69:
                  case 67:
                    buffer._contents += H.Primitives_stringFromCharCode(_65533);
                    break;
                  case 65:
                    buffer._contents += H.Primitives_stringFromCharCode(_65533);
                    --i;
                    break;
                  default:
                    t2 = buffer._contents += H.Primitives_stringFromCharCode(_65533);
                    buffer._contents = t2 + H.Primitives_stringFromCharCode(_65533);
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            byte = bytes[i];
          }
          i0 = i + 1;
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m)
                buffer._contents += H.Primitives_stringFromCharCode(bytes[m]);
            else
              buffer._contents += P.String_String$fromCharCodes(bytes, i, markEnd);
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t1)
          buffer._contents += H.Primitives_stringFromCharCode(_65533);
        else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P.NoSuchMethodError_toString_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this.sb,
        t2 = this._box_0,
        t3 = t1._contents += t2.comma;
      t3 += key.__internal$_name;
      t1._contents = t3;
      t1._contents = t3 + ": ";
      t1._contents += P.Error_safeToString(value);
      t2.comma = ", ";
    },
    $signature: 107
  };
  P.Comparable.prototype = {};
  P.DateTime.prototype = {
    add$1: function(_, duration) {
      return P.DateTime$_withValue(this._core$_value + C.JSInt_methods._tdivFast$1(duration._duration, 1000), this.isUtc);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.DateTime && this._core$_value === other._core$_value && this.isUtc === other.isUtc;
    },
    compareTo$1: function(_, other) {
      return C.JSInt_methods.compareTo$1(this._core$_value, other._core$_value);
    },
    get$hashCode: function(_) {
      var t1 = this._core$_value;
      return (t1 ^ C.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0: function(_) {
      var _this = this,
        y = P.DateTime__fourDigits(H.Primitives_getYear(_this)),
        m = P.DateTime__twoDigits(H.Primitives_getMonth(_this)),
        d = P.DateTime__twoDigits(H.Primitives_getDay(_this)),
        h = P.DateTime__twoDigits(H.Primitives_getHours(_this)),
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(_this)),
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(_this)),
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(_this));
      if (_this.isUtc)
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
    }
  };
  P.Duration.prototype = {
    $add: function(_, other) {
      return new P.Duration(this._duration + other._duration);
    },
    $sub: function(_, other) {
      return new P.Duration(this._duration - other._duration);
    },
    $mul: function(_, factor) {
      return new P.Duration(C.JSNumber_methods.round$0(this._duration * factor));
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Duration && this._duration === other._duration;
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1: function(_, other) {
      return C.JSInt_methods.compareTo$1(this._duration, other._duration);
    },
    toString$0: function(_) {
      var twoDigitMinutes, twoDigitSeconds, sixDigitUs,
        t1 = new P.Duration_toString_twoDigits(),
        t2 = this._duration;
      if (t2 < 0)
        return "-" + new P.Duration(0 - t2).toString$0(0);
      twoDigitMinutes = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 60000000) % 60);
      twoDigitSeconds = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 1000000) % 60);
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(t2 % 1000000);
      return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + twoDigitMinutes + ":" + twoDigitSeconds + "." + sixDigitUs;
    }
  };
  P.Duration_toString_sixDigits.prototype = {
    call$1: function(n) {
      if (n >= 100000)
        return "" + n;
      if (n >= 10000)
        return "0" + n;
      if (n >= 1000)
        return "00" + n;
      if (n >= 100)
        return "000" + n;
      if (n >= 10)
        return "0000" + n;
      return "00000" + n;
    },
    $signature: 59
  };
  P.Duration_toString_twoDigits.prototype = {
    call$1: function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    $signature: 59
  };
  P.Error.prototype = {
    get$stackTrace: function() {
      return H.getTraceFromException(this.$thrownJsError);
    }
  };
  P.AssertionError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + P.Error_safeToString(t1);
      return "Assertion failed";
    },
    get$message: function(receiver) {
      return this.message;
    }
  };
  P.TypeError.prototype = {};
  P.NullThrownError.prototype = {
    toString$0: function(_) {
      return "Throw of null.";
    }
  };
  P.ArgumentError.prototype = {
    get$_errorName: function() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation: function() {
      return "";
    },
    toString$0: function(_) {
      var explanation, errorValue, _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + H.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      explanation = _this.get$_errorExplanation();
      errorValue = P.Error_safeToString(_this.invalidValue);
      return prefix + explanation + ": " + errorValue;
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  P.RangeError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + H.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + H.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + H.S(start) + ".." + H.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + H.S(start);
      return explanation;
    }
  };
  P.IndexError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      if (this.invalidValue < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length: function(receiver) {
      return this.length;
    }
  };
  P.NoSuchMethodError.prototype = {
    toString$0: function(_) {
      var $arguments, t1, _i, t2, t3, argument, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = new P.StringBuffer("");
      _box_0.comma = "";
      $arguments = _this._core$_arguments;
      for (t1 = $arguments.length, _i = 0, t2 = "", t3 = ""; _i < t1; ++_i, t3 = ", ") {
        argument = $arguments[_i];
        sb._contents = t2 + t3;
        t2 = sb._contents += P.Error_safeToString(argument);
        _box_0.comma = ", ";
      }
      _this._namedArguments.forEach$1(0, new P.NoSuchMethodError_toString_closure(_box_0, sb));
      receiverText = P.Error_safeToString(_this._core$_receiver);
      actualParameters = sb.toString$0(0);
      t1 = "NoSuchMethodError: method not found: '" + _this._memberName.__internal$_name + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
      return t1;
    }
  };
  P.UnsupportedError.prototype = {
    toString$0: function(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  P.UnimplementedError.prototype = {
    toString$0: function(_) {
      var message = this.message;
      return message != null ? "UnimplementedError: " + message : "UnimplementedError";
    }
  };
  P.StateError.prototype = {
    toString$0: function(_) {
      return "Bad state: " + this.message;
    }
  };
  P.ConcurrentModificationError.prototype = {
    toString$0: function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + P.Error_safeToString(t1) + ".";
    }
  };
  P.OutOfMemoryError.prototype = {
    toString$0: function(_) {
      return "Out of Memory";
    },
    get$stackTrace: function() {
      return null;
    },
    $isError: 1
  };
  P.StackOverflowError.prototype = {
    toString$0: function(_) {
      return "Stack Overflow";
    },
    get$stackTrace: function() {
      return null;
    },
    $isError: 1
  };
  P.CyclicInitializationError.prototype = {
    toString$0: function(_) {
      var t1 = "Reading static variable '" + this.variableName + "' during its initialization";
      return t1;
    }
  };
  P._Exception.prototype = {
    toString$0: function(_) {
      var message = this.message;
      if (message == null)
        return "Exception";
      return "Exception: " + H.S(message);
    },
    $isException: 1
  };
  P.FormatException.prototype = {
    toString$0: function(_) {
      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix, slice,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = C.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = C.JSString_methods._codeUnitAt$1(source, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < lineEnd; ++i) {
          char = C.JSString_methods.codeUnitAt$1(source, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        slice = C.JSString_methods.substring$2(source, start, end);
        return report + prefix + slice + postfix + "\n" + C.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + H.S(offset) + ")") : report;
    },
    $isException: 1
  };
  P.Expando.prototype = {
    $index: function(_, object) {
      var t2, values,
        t1 = this._jsWeakMapOrKey;
      if (typeof t1 != "string") {
        t2 = typeof object == "number" || typeof object == "string";
        if (t2)
          H.throwExpression(P.ArgumentError$value(object, "Expandos are not allowed on strings, numbers, booleans or null", null));
        return t1.get(object);
      }
      values = H.Primitives_getProperty(object, "expando$values");
      t1 = values == null ? null : H.Primitives_getProperty(values, t1);
      return this.$ti._eval$1("1?")._as(t1);
    },
    toString$0: function(_) {
      return "Expando:null";
    },
    get$name: function() {
      return null;
    }
  };
  P.Iterable.prototype = {
    cast$1$0: function(_, $R) {
      return H.CastIterable_CastIterable(this, H._instanceType(this)._eval$1("Iterable.E"), $R);
    },
    followedBy$1: function(_, other) {
      var _this = this,
        t1 = H._instanceType(_this);
      if (t1._eval$1("EfficientLengthIterable<Iterable.E>")._is(_this))
        return H.FollowedByIterable_FollowedByIterable$firstEfficient(_this, other, t1._eval$1("Iterable.E"));
      return new H.FollowedByIterable(_this, other, t1._eval$1("FollowedByIterable<Iterable.E>"));
    },
    map$1$1: function(_, f, $T) {
      return H.MappedIterable_MappedIterable(this, f, H._instanceType(this)._eval$1("Iterable.E"), $T);
    },
    where$1: function(_, test) {
      return new H.WhereIterable(this, test, H._instanceType(this)._eval$1("WhereIterable<Iterable.E>"));
    },
    contains$1: function(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq$(t1.get$current(t1), element))
          return true;
      return false;
    },
    forEach$1: function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current(t1));
    },
    join$1: function(_, separator) {
      var t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      if (separator === "") {
        t1 = "";
        do
          t1 += H.S(J.toString$0$(iterator.get$current(iterator)));
        while (iterator.moveNext$0());
      } else {
        t1 = "" + H.S(J.toString$0$(iterator.get$current(iterator)));
        for (; iterator.moveNext$0();)
          t1 = t1 + separator + H.S(J.toString$0$(iterator.get$current(iterator)));
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    any$1: function(_, test) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (test.call$1(t1.get$current(t1)))
          return true;
      return false;
    },
    toList$1$growable: function(_, growable) {
      return P.List_List$of(this, growable, H._instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    toSet$0: function(_) {
      return P.LinkedHashSet_LinkedHashSet$of(this, H._instanceType(this)._eval$1("Iterable.E"));
    },
    get$length: function(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty: function(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty: function(_) {
      return !this.get$isEmpty(this);
    },
    take$1: function(_, count) {
      return H.TakeIterable_TakeIterable(this, count, H._instanceType(this)._eval$1("Iterable.E"));
    },
    skip$1: function(_, count) {
      return H.SkipIterable_SkipIterable(this, count, H._instanceType(this)._eval$1("Iterable.E"));
    },
    get$first: function(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      return it.get$current(it);
    },
    get$last: function(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      do
        result = it.get$current(it);
      while (it.moveNext$0());
      return result;
    },
    get$single: function(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(H.IterableElementError_noElement());
      result = it.get$current(it);
      if (it.moveNext$0())
        throw H.wrapException(H.IterableElementError_tooMany());
      return result;
    },
    firstWhere$2$orElse: function(_, test, orElse) {
      var t1, element;
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (test.call$1(element))
          return element;
      }
      return orElse.call$0();
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element;
      P.RangeError_checkNotNegative(index, "index");
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, "index", null, elementIndex));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  P.Iterator.prototype = {};
  P.MapEntry.prototype = {
    toString$0: function(_) {
      return "MapEntry(" + H.S(this.key) + ": " + H.S(this.value) + ")";
    }
  };
  P.Null.prototype = {
    get$hashCode: function(_) {
      return P.Object.prototype.get$hashCode.call(C.JSNull_methods, this);
    },
    toString$0: function(_) {
      return "null";
    }
  };
  P.Object.prototype = {constructor: P.Object, $isObject: 1,
    $eq: function(_, other) {
      return this === other;
    },
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: function(_) {
      return "Instance of '" + H.Primitives_objectTypeName(this) + "'";
    },
    noSuchMethod$1: function(_, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
    },
    get$runtimeType: function(_) {
      return H.getRuntimeType(this);
    },
    toString: function() {
      return this.toString$0(this);
    }
  };
  P._StringStackTrace.prototype = {
    toString$0: function(_) {
      return "";
    },
    $isStackTrace: 1
  };
  P.Stopwatch.prototype = {
    get$elapsedMicroseconds: function() {
      var ticks,
        t1 = this._stop;
      if (t1 == null)
        t1 = $.Primitives_timerTicks.call$0();
      ticks = t1 - this._core$_start;
      if ($.$get$Stopwatch__frequency() === 1000000)
        return ticks;
      return ticks * 1000;
    },
    start$0: function(_) {
      var _this = this,
        $stop = _this._stop;
      if ($stop != null) {
        _this._core$_start = _this._core$_start + ($.Primitives_timerTicks.call$0() - $stop);
        _this._stop = null;
      }
    },
    reset$0: function(_) {
      var t1 = this._stop;
      this._core$_start = t1 == null ? $.Primitives_timerTicks.call$0() : t1;
    }
  };
  P.Runes.prototype = {
    get$iterator: function(_) {
      return new P.RuneIterator(this.string);
    },
    get$last: function(_) {
      var code, previousCode,
        t1 = this.string,
        t2 = t1.length;
      if (t2 === 0)
        throw H.wrapException(P.StateError$("No elements."));
      code = C.JSString_methods.codeUnitAt$1(t1, t2 - 1);
      if ((code & 64512) === 56320 && t2 > 1) {
        previousCode = C.JSString_methods.codeUnitAt$1(t1, t2 - 2);
        if ((previousCode & 64512) === 55296)
          return P._combineSurrogatePair(previousCode, code);
      }
      return code;
    }
  };
  P.RuneIterator.prototype = {
    get$current: function(_) {
      return this._currentCodePoint;
    },
    moveNext$0: function() {
      var codeUnit, nextPosition, nextCodeUnit, _this = this,
        t1 = _this._core$_position = _this._nextPosition,
        t2 = _this.string,
        t3 = t2.length;
      if (t1 === t3) {
        _this._currentCodePoint = -1;
        return false;
      }
      codeUnit = C.JSString_methods._codeUnitAt$1(t2, t1);
      nextPosition = t1 + 1;
      if ((codeUnit & 64512) === 55296 && nextPosition < t3) {
        nextCodeUnit = C.JSString_methods._codeUnitAt$1(t2, nextPosition);
        if ((nextCodeUnit & 64512) === 56320) {
          _this._nextPosition = nextPosition + 1;
          _this._currentCodePoint = P._combineSurrogatePair(codeUnit, nextCodeUnit);
          return true;
        }
      }
      _this._nextPosition = nextPosition;
      _this._currentCodePoint = codeUnit;
      return true;
    }
  };
  P.StringBuffer.prototype = {
    get$length: function(_) {
      return this._contents.length;
    },
    toString$0: function(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P.Uri__parseIPv4Address_error.prototype = {
    call$2: function(msg, position) {
      throw H.wrapException(P.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 109
  };
  P.Uri_parseIPv6Address_error.prototype = {
    call$2: function(msg, position) {
      throw H.wrapException(P.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    call$1: function(msg) {
      return this.call$2(msg, null);
    },
    $signature: 110
  };
  P.Uri_parseIPv6Address_parseHex.prototype = {
    call$2: function(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = P.int_parse(C.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 111
  };
  P._Uri.prototype = {
    get$_text: function() {
      var t2, t3, t4, _this = this,
        t1 = _this.___Uri__text;
      if (t1 == null) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? "" + t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + H.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        t1 = t1.charCodeAt(0) == 0 ? t1 : t1;
        if (_this.___Uri__text == null)
          _this.___Uri__text = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("_text"));
      }
      return t1;
    },
    get$pathSegments: function() {
      var pathToSplit, _this = this,
        t1 = _this.___Uri_pathSegments;
      if (t1 == null) {
        pathToSplit = _this.path;
        if (pathToSplit.length !== 0 && C.JSString_methods._codeUnitAt$1(pathToSplit, 0) === 47)
          pathToSplit = C.JSString_methods.substring$1(pathToSplit, 1);
        t1 = pathToSplit.length === 0 ? C.List_empty0 : P.List_List$unmodifiable(new H.MappedListIterable(H.setRuntimeTypeInfo(pathToSplit.split("/"), type$.JSArray_String), P.core_Uri_decodeComponent$closure(), type$.MappedListIterable_String_dynamic), type$.String);
        if (_this.___Uri_pathSegments == null)
          _this.___Uri_pathSegments = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("pathSegments"));
      }
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this,
        t1 = _this.___Uri_hashCode;
      if (t1 == null) {
        t1 = C.JSString_methods.get$hashCode(_this.get$_text());
        if (_this.___Uri_hashCode == null)
          _this.___Uri_hashCode = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("hashCode"));
      }
      return t1;
    },
    get$userInfo: function() {
      return this._userInfo;
    },
    get$host: function(_) {
      var host = this._host;
      if (host == null)
        return "";
      if (C.JSString_methods.startsWith$1(host, "["))
        return C.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port: function(_) {
      var t1 = this._port;
      return t1 == null ? P._Uri__defaultPort(this.scheme) : t1;
    },
    get$query: function(_) {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment: function() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    get$hasScheme: function() {
      return this.scheme.length !== 0;
    },
    get$hasAuthority: function() {
      return this._host != null;
    },
    get$hasQuery: function() {
      return this._query != null;
    },
    get$hasFragment: function() {
      return this._fragment != null;
    },
    toString$0: function(_) {
      return this.get$_text();
    },
    $eq: function(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host(_this) === other.get$host(other))
                if (_this.get$port(_this) === other.get$port(other))
                  if (_this.path === other.get$path(other)) {
                    t1 = _this._query;
                    t2 = t1 == null;
                    if (!t2 === other.get$hasQuery()) {
                      if (t2)
                        t1 = "";
                      if (t1 === other.get$query(other)) {
                        t1 = _this._fragment;
                        t2 = t1 == null;
                        if (!t2 === other.get$hasFragment()) {
                          if (t2)
                            t1 = "";
                          t1 = t1 === other.get$fragment();
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $isUri: 1,
    get$scheme: function() {
      return this.scheme;
    },
    get$path: function(receiver) {
      return this.path;
    }
  };
  P._Uri__makeQuery_writeParameter.prototype = {
    call$2: function(key, value) {
      var t1 = this.result,
        t2 = this._box_0;
      t1._contents += t2.separator;
      t2.separator = "&";
      t2 = t1._contents += P._Uri__uriEncode(C.List_nxB, key, C.C_Utf8Codec, true);
      if (value != null && value.length !== 0) {
        t1._contents = t2 + "=";
        t1._contents += P._Uri__uriEncode(C.List_nxB, value, C.C_Utf8Codec, true);
      }
    },
    $signature: 112
  };
  P._Uri__makeQuery_closure.prototype = {
    call$2: function(key, value) {
      var t1, t2;
      if (value == null || typeof value == "string")
        this.writeParameter.call$2(key, value);
      else
        for (t1 = J.get$iterator$ax(value), t2 = this.writeParameter; t1.moveNext$0();)
          t2.call$2(key, t1.get$current(t1));
    },
    $signature: 9
  };
  P.UriData.prototype = {
    get$uri: function() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._text;
        t2 = _this._separatorIndices[0] + 1;
        queryIndex = C.JSString_methods.indexOf$2(t1, "?", t2);
        end = t1.length;
        if (queryIndex >= 0) {
          query = P._Uri__normalizeOrSubstring(t1, queryIndex + 1, end, C.List_CVk, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new P._DataUri("data", "", _null, _null, P._Uri__normalizeOrSubstring(t1, t2, end, C.List_qg4, false), query, _null);
      }
      return t1;
    },
    toString$0: function(_) {
      var t1 = this._text;
      return this._separatorIndices[0] === -1 ? "data:" + t1 : t1;
    }
  };
  P._createTables_build.prototype = {
    call$2: function(state, defaultTransition) {
      var t1 = this.tables[state];
      C.NativeUint8List_methods.fillRange$3(t1, 0, 96, defaultTransition);
      return t1;
    },
    $signature: 113
  };
  P._createTables_setChars.prototype = {
    call$3: function(target, chars, transition) {
      var t1, i;
      for (t1 = chars.length, i = 0; i < t1; ++i)
        target[C.JSString_methods._codeUnitAt$1(chars, i) ^ 96] = transition;
    },
    $signature: 65
  };
  P._createTables_setRange.prototype = {
    call$3: function(target, range, transition) {
      var i, n;
      for (i = C.JSString_methods._codeUnitAt$1(range, 0), n = C.JSString_methods._codeUnitAt$1(range, 1); i <= n; ++i)
        target[(i ^ 96) >>> 0] = transition;
    },
    $signature: 65
  };
  P._SimpleUri.prototype = {
    get$hasScheme: function() {
      return this._schemeEnd > 0;
    },
    get$hasAuthority: function() {
      return this._hostStart > 0;
    },
    get$hasPort: function() {
      return this._hostStart > 0 && this._portStart + 1 < this._pathStart;
    },
    get$hasQuery: function() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment: function() {
      return this._fragmentStart < this._uri.length;
    },
    get$scheme: function() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0: function() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && C.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && C.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && C.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && C.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return C.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo: function() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? C.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host: function(_) {
      var t1 = this._hostStart;
      return t1 > 0 ? C.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port: function(_) {
      var t1, _this = this;
      if (_this.get$hasPort())
        return P.int_parse(C.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && C.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && C.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path: function(_) {
      return C.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query: function(_) {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? C.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment: function() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? C.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments: function() {
      var parts, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (C.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return C.List_empty0;
      parts = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (i = start; i < end; ++i)
        if (C.JSString_methods.codeUnitAt$1(t1, i) === 47) {
          parts.push(C.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      parts.push(C.JSString_methods.substring$2(t1, start, end));
      return P.List_List$unmodifiable(parts, type$.String);
    },
    get$hashCode: function(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = C.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    toString$0: function(_) {
      return this._uri;
    },
    $isUri: 1
  };
  P._DataUri.prototype = {};
  P.ServiceExtensionResponse.prototype = {};
  W.HtmlElement.prototype = {$isHtmlElement: 1};
  W.AccessibleNodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.AnchorElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.AreaElement.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.BaseElement.prototype = {$isBaseElement: 1};
  W.Blob.prototype = {$isBlob: 1};
  W.Body.prototype = {
    arrayBuffer$0: function(receiver) {
      return P.promiseToFuture(receiver.arrayBuffer(), type$.dynamic);
    },
    text$0: function(receiver) {
      return P.promiseToFuture(receiver.text(), type$.String);
    }
  };
  W.BodyElement.prototype = {$isBodyElement: 1};
  W.BroadcastChannel.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.ButtonElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.CanvasElement.prototype = {
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    },
    getContext$2: function(receiver, contextId, attributes) {
      if (attributes != null)
        return receiver.getContext(contextId, P.convertDartToNative_Dictionary(attributes));
      return receiver.getContext(contextId);
    },
    getContext$1: function($receiver, contextId) {
      return this.getContext$2($receiver, contextId, null);
    },
    $isCanvasElement: 1
  };
  W.CanvasRenderingContext2D.prototype = {
    fillText$3: function(receiver, text, x, y) {
      receiver.fillText(text, x, y);
    }
  };
  W.CharacterData.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Credential.prototype = {};
  W.CredentialUserData.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.CssKeyframesRule.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.CssPerspective.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssRule.prototype = {$isCssRule: 1};
  W.CssStyleDeclaration.prototype = {
    _browserPropertyName$1: function(receiver, propertyName) {
      var t1 = $.$get$CssStyleDeclaration__propertyCache(),
        $name = t1[propertyName];
      if (typeof $name == "string")
        return $name;
      $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
      t1[propertyName] = $name;
      return $name;
    },
    _supportedBrowserPropertyName$1: function(receiver, propertyName) {
      var prefixed;
      if (propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
        return letter.toUpperCase();
      }) in receiver)
        return propertyName;
      prefixed = $.$get$Device_cssPrefix() + propertyName;
      if (prefixed in receiver)
        return prefixed;
      return propertyName;
    },
    _setPropertyHelper$3: function(receiver, propertyName, value, priority) {
      if (priority == null)
        priority = "";
      receiver.setProperty(propertyName, value, priority);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    set$width: function(receiver, value) {
      receiver.width = value == null ? "" : value;
    }
  };
  W.CssStyleDeclarationBase.prototype = {
    set$height: function(receiver, value) {
      this._setPropertyHelper$3(receiver, this._browserPropertyName$1(receiver, "height"), value, "");
    },
    set$width: function(receiver, value) {
      this._setPropertyHelper$3(receiver, this._browserPropertyName$1(receiver, "width"), value, "");
    }
  };
  W.CssStyleSheet.prototype = {$isCssStyleSheet: 1};
  W.CssStyleValue.prototype = {};
  W.CssTransformComponent.prototype = {};
  W.CssTransformValue.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.CssUnparsedValue.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.DataTransferItemList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      return receiver[index];
    }
  };
  W.DivElement.prototype = {};
  W.Document.prototype = {$isDocument: 1};
  W.DomError.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.DomException.prototype = {
    get$name: function(receiver) {
      var errorName = receiver.name,
        t1 = $.$get$Device_isWebKit();
      if (t1 && errorName === "SECURITY_ERR")
        return "SecurityError";
      if (t1 && errorName === "SYNTAX_ERR")
        return "SyntaxError";
      return errorName;
    },
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isDomException: 1
  };
  W.DomRectList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.DomRectReadOnly.prototype = {
    toString$0: function(receiver) {
      var t2,
        t1 = receiver.left;
      t1.toString;
      t1 = "Rectangle (" + H.S(t1) + ", ";
      t2 = receiver.top;
      t2.toString;
      return t1 + H.S(t2) + ") " + H.S(this.get$width(receiver)) + " x " + H.S(this.get$height(receiver));
    },
    $eq: function(receiver, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other)) {
        t1 = receiver.left;
        t1.toString;
        t2 = J.getInterceptor$x(other);
        if (t1 === t2.get$left(other)) {
          t1 = receiver.top;
          t1.toString;
          t1 = t1 === t2.get$top(other) && this.get$width(receiver) === t2.get$width(other) && this.get$height(receiver) === t2.get$height(other);
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(receiver) {
      var t2,
        t1 = receiver.left;
      t1.toString;
      t1 = C.JSNumber_methods.get$hashCode(t1);
      t2 = receiver.top;
      t2.toString;
      return W._JenkinsSmiHash_hash4(t1, C.JSNumber_methods.get$hashCode(t2), C.JSNumber_methods.get$hashCode(this.get$width(receiver)), C.JSNumber_methods.get$hashCode(this.get$height(receiver)));
    },
    get$bottom: function(receiver) {
      var t1 = receiver.bottom;
      t1.toString;
      return t1;
    },
    get$_height: function(receiver) {
      return receiver.height;
    },
    get$height: function(receiver) {
      var t1 = this.get$_height(receiver);
      t1.toString;
      return t1;
    },
    get$left: function(receiver) {
      var t1 = receiver.left;
      t1.toString;
      return t1;
    },
    get$right: function(receiver) {
      var t1 = receiver.right;
      t1.toString;
      return t1;
    },
    get$top: function(receiver) {
      var t1 = receiver.top;
      t1.toString;
      return t1;
    },
    get$_width: function(receiver) {
      return receiver.width;
    },
    get$width: function(receiver) {
      var t1 = this.get$_width(receiver);
      t1.toString;
      return t1;
    },
    $isRectangle: 1
  };
  W.DomStringList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.DomTokenList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W._ChildrenElementList.prototype = {
    contains$1: function(_, element) {
      return J.contains$1$asx(this._childElements, element);
    },
    get$isEmpty: function(_) {
      return this._html$_element.firstElementChild == null;
    },
    get$length: function(_) {
      return this._childElements.length;
    },
    $index: function(_, index) {
      return type$.Element._as(this._childElements[index]);
    },
    $indexSet: function(_, index, value) {
      this._html$_element.replaceChild(value, this._childElements[index]);
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize element lists"));
    },
    add$1: function(_, value) {
      this._html$_element.appendChild(value);
      return value;
    },
    get$iterator: function(_) {
      var t1 = this.toList$0(this);
      return new J.ArrayIterator(t1, t1.length);
    },
    setRange$4: function(_, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    remove$1: function(_, object) {
      return W._ChildrenElementList__remove(this._html$_element, object);
    },
    insert$2: function(_, index, element) {
      var t3, _this = this,
        t1 = _this._childElements,
        t2 = t1.length;
      if (index > t2)
        throw H.wrapException(P.RangeError$range(index, 0, _this.get$length(_this), null, null));
      t3 = _this._html$_element;
      if (index === t2)
        t3.appendChild(element);
      else
        t3.insertBefore(element, type$.Element._as(t1[index]));
    },
    removeLast$0: function(_) {
      var result = this.get$last(this);
      this._html$_element.removeChild(result);
      return result;
    },
    get$first: function(_) {
      return W._ChildrenElementList__first(this._html$_element);
    },
    get$last: function(_) {
      var result = this._html$_element.lastElementChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    }
  };
  W._FrozenElementList.prototype = {
    get$length: function(_) {
      return this._nodeList.length;
    },
    $index: function(_, index) {
      return this.$ti._precomputed1._as(this._nodeList[index]);
    },
    $indexSet: function(_, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    get$first: function(_) {
      return this.$ti._precomputed1._as(C.NodeList_methods.get$first(this._nodeList));
    },
    get$last: function(_) {
      return this.$ti._precomputed1._as(C.NodeList_methods.get$last(this._nodeList));
    }
  };
  W.Element0.prototype = {
    get$attributes: function(receiver) {
      return new W._ElementAttributeMap(receiver);
    },
    get$children: function(receiver) {
      return new W._ChildrenElementList(receiver, receiver.children);
    },
    toString$0: function(receiver) {
      return receiver.localName;
    },
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, t2, contextElement, fragment;
      if (treeSanitizer == null) {
        t1 = $.Element__defaultValidator;
        if (t1 == null) {
          t1 = H.setRuntimeTypeInfo([], type$.JSArray_NodeValidator);
          t2 = new W.NodeValidatorBuilder(t1);
          t1.push(W._Html5NodeValidator$(null));
          t1.push(W._TemplatingNodeValidator$());
          $.Element__defaultValidator = t2;
          validator = t2;
        } else
          validator = t1;
        t1 = $.Element__defaultSanitizer;
        if (t1 == null) {
          t1 = new W._ValidatingTreeSanitizer(validator);
          $.Element__defaultSanitizer = t1;
          treeSanitizer = t1;
        } else {
          t1.validator = validator;
          treeSanitizer = t1;
        }
      }
      if ($.Element__parseDocument == null) {
        t1 = document;
        t2 = t1.implementation.createHTMLDocument("");
        $.Element__parseDocument = t2;
        $.Element__parseRange = t2.createRange();
        t2 = $.Element__parseDocument.createElement("base");
        type$.BaseElement._as(t2);
        t1 = t1.baseURI;
        t1.toString;
        t2.href = t1;
        $.Element__parseDocument.head.appendChild(t2);
      }
      t1 = $.Element__parseDocument;
      if (t1.body == null) {
        t2 = t1.createElement("body");
        t1.body = type$.BodyElement._as(t2);
      }
      t1 = $.Element__parseDocument;
      if (type$.BodyElement._is(receiver)) {
        t1 = t1.body;
        t1.toString;
        contextElement = t1;
      } else {
        t1.toString;
        contextElement = t1.createElement(receiver.tagName);
        $.Element__parseDocument.body.appendChild(contextElement);
      }
      if ("createContextualFragment" in window.Range.prototype && !C.JSArray_methods.contains$1(C.List_ego, receiver.tagName)) {
        $.Element__parseRange.selectNodeContents(contextElement);
        t1 = $.Element__parseRange;
        fragment = t1.createContextualFragment(html);
      } else {
        contextElement.innerHTML = html;
        fragment = $.Element__parseDocument.createDocumentFragment();
        for (; t1 = contextElement.firstChild, t1 != null;)
          fragment.appendChild(t1);
      }
      if (contextElement !== $.Element__parseDocument.body)
        J.remove$0$ax(contextElement);
      treeSanitizer.sanitizeTree$1(fragment);
      document.adoptNode(fragment);
      return fragment;
    },
    createFragment$2$treeSanitizer: function($receiver, html, treeSanitizer) {
      return this.createFragment$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    },
    setInnerHtml$1: function(receiver, html) {
      receiver.textContent = null;
      receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, html, null, null));
    },
    focus$0: function(receiver) {
      return receiver.focus();
    },
    get$tagName: function(receiver) {
      return receiver.tagName;
    },
    $isElement0: 1
  };
  W.Element_Element$html_closure.prototype = {
    call$1: function(e) {
      return type$.Element._is(e);
    },
    $signature: 66
  };
  W.EmbedElement.prototype = {
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    get$name: function(receiver) {
      return receiver.name;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    }
  };
  W.Entry.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    },
    _html$_remove$2: function(receiver, successCallback, errorCallback) {
      return receiver.remove(H.convertDartClosureToJS(successCallback, 0), H.convertDartClosureToJS(errorCallback, 1));
    },
    remove$0: function(receiver) {
      var t1 = new P._Future($.Zone__current, type$._Future_dynamic),
        completer = new P._AsyncCompleter(t1, type$._AsyncCompleter_dynamic);
      this._html$_remove$2(receiver, new W.Entry_remove_closure(completer), new W.Entry_remove_closure0(completer));
      return t1;
    }
  };
  W.Entry_remove_closure.prototype = {
    call$0: function() {
      this.completer.complete$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  W.Entry_remove_closure0.prototype = {
    call$1: function(error) {
      this.completer.completeError$1(error);
    },
    $signature: 116
  };
  W.Event.prototype = {
    get$target: function(receiver) {
      return W._convertNativeToDart_EventTarget(receiver.target);
    },
    $isEvent: 1
  };
  W.EventTarget.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      if (listener != null)
        this._addEventListener$3(receiver, type, listener, useCapture);
    },
    addEventListener$2: function($receiver, type, listener) {
      return this.addEventListener$3($receiver, type, listener, null);
    },
    removeEventListener$3: function(receiver, type, listener, useCapture) {
      if (listener != null)
        this._removeEventListener$3(receiver, type, listener, useCapture);
    },
    removeEventListener$2: function($receiver, type, listener) {
      return this.removeEventListener$3($receiver, type, listener, null);
    },
    _addEventListener$3: function(receiver, type, listener, options) {
      return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), options);
    },
    _removeEventListener$3: function(receiver, type, listener, options) {
      return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), options);
    }
  };
  W.FederatedCredential.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.FieldSetElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.File.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    },
    $isFile: 1
  };
  W.FileList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1,
    $isFileList: 1
  };
  W.FileSystem.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.FileWriter.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.FontFace.prototype = {$isFontFace: 1};
  W.FormElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    get$name: function(receiver) {
      return receiver.name;
    },
    $isFormElement: 1
  };
  W.Gamepad.prototype = {$isGamepad: 1};
  W.History.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.HtmlCollection.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.HttpRequest.prototype = {
    open$3$async: function(receiver, method, url, async) {
      return receiver.open(method, url, true);
    },
    $isHttpRequest: 1
  };
  W.HttpRequest_request_closure.prototype = {
    call$1: function(e) {
      var accepted, unknownRedirect, t3,
        t1 = this.xhr,
        t2 = t1.status;
      t2.toString;
      accepted = t2 >= 200 && t2 < 300;
      unknownRedirect = t2 > 307 && t2 < 400;
      t2 = accepted || t2 === 0 || t2 === 304 || unknownRedirect;
      t3 = this.completer;
      if (t2)
        t3.complete$1(0, t1);
      else
        t3.completeError$1(e);
    },
    $signature: 117
  };
  W.HttpRequestEventTarget.prototype = {};
  W.IFrameElement.prototype = {
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    get$name: function(receiver) {
      return receiver.name;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    }
  };
  W.ImageData.prototype = {$isImageData: 1};
  W.ImageElement.prototype = {
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    }
  };
  W.InputElement.prototype = {
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    get$name: function(receiver) {
      return receiver.name;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    },
    $isInputElement: 1
  };
  W.KeyboardEvent.prototype = {$isKeyboardEvent: 1};
  W.LabelElement.prototype = {};
  W.Location.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.MapElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.MediaElement.prototype = {};
  W.MediaKeySession.prototype = {
    remove$0: function(receiver) {
      return P.promiseToFuture(receiver.remove(), type$.dynamic);
    }
  };
  W.MediaList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.MediaQueryList.prototype = {
    addListener$1: function(receiver, listener) {
      return receiver.addListener(H.convertDartClosureToJS(listener, 1));
    },
    removeListener$1: function(receiver, listener) {
      return receiver.removeListener(H.convertDartClosureToJS(listener, 1));
    }
  };
  W.MediaQueryListEvent.prototype = {$isMediaQueryListEvent: 1};
  W.MessagePort.prototype = {
    addEventListener$3: function(receiver, type, listener, useCapture) {
      if (type === "message")
        receiver.start();
      this.super$EventTarget$addEventListener(receiver, type, listener, false);
    },
    $isMessagePort: 1
  };
  W.MetaElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    },
    $isMetaElement: 1
  };
  W.MidiInputMap.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1: function(receiver, f) {
      var entry,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.MidiInputMap_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_Map_dynamic_dynamic);
      this.forEach$1(receiver, new W.MidiInputMap_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.size !== 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    putIfAbsent$2: function(receiver, key, ifAbsent) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    remove$1: function(receiver, key) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  W.MidiInputMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    },
    $signature: 9
  };
  W.MidiInputMap_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    },
    $signature: 9
  };
  W.MidiOutputMap.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1: function(receiver, f) {
      var entry,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.MidiOutputMap_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_Map_dynamic_dynamic);
      this.forEach$1(receiver, new W.MidiOutputMap_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.size !== 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    putIfAbsent$2: function(receiver, key, ifAbsent) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    remove$1: function(receiver, key) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  W.MidiOutputMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    },
    $signature: 9
  };
  W.MidiOutputMap_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    },
    $signature: 9
  };
  W.MidiPort.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.MimeType.prototype = {$isMimeType: 1};
  W.MimeTypeArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.MouseEvent.prototype = {
    get$offset: function(receiver) {
      var t1, t2, target, t3, t4, t5, point;
      if (!!receiver.offsetX)
        return new P.Point(receiver.offsetX, receiver.offsetY, type$.Point_num);
      else {
        t1 = receiver.target;
        t2 = type$.Element;
        if (!t2._is(W._convertNativeToDart_EventTarget(t1)))
          throw H.wrapException(P.UnsupportedError$("offsetX is only supported on elements"));
        target = t2._as(W._convertNativeToDart_EventTarget(t1));
        t1 = receiver.clientX;
        t2 = receiver.clientY;
        t3 = type$.Point_num;
        t4 = target.getBoundingClientRect();
        t5 = t4.left;
        t5.toString;
        t4 = t4.top;
        t4.toString;
        point = new P.Point(t1, t2, t3).$sub(0, new P.Point(t5, t4, t3));
        return new P.Point(C.JSNumber_methods.toInt$0(point.x), C.JSNumber_methods.toInt$0(point.y), t3);
      }
    },
    $isMouseEvent: 1
  };
  W.NavigatorUserMediaError.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W._ChildNodeListLazy.prototype = {
    get$first: function(_) {
      var result = this._this.firstChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    },
    get$last: function(_) {
      var result = this._this.lastChild;
      if (result == null)
        throw H.wrapException(P.StateError$("No elements"));
      return result;
    },
    get$single: function(_) {
      var t1 = this._this,
        l = t1.childNodes.length;
      if (l === 0)
        throw H.wrapException(P.StateError$("No elements"));
      if (l > 1)
        throw H.wrapException(P.StateError$("More than one element"));
      t1 = t1.firstChild;
      t1.toString;
      return t1;
    },
    add$1: function(_, value) {
      this._this.appendChild(value);
    },
    addAll$1: function(_, iterable) {
      var t1, t2, len, i, t3;
      if (iterable instanceof W._ChildNodeListLazy) {
        t1 = iterable._this;
        t2 = this._this;
        if (t1 !== t2)
          for (len = t1.childNodes.length, i = 0; i < len; ++i) {
            t3 = t1.firstChild;
            t3.toString;
            t2.appendChild(t3);
          }
        return;
      }
      for (t1 = J.get$iterator$ax(iterable), t2 = this._this; t1.moveNext$0();)
        t2.appendChild(t1.get$current(t1));
    },
    removeLast$0: function(_) {
      var result = this.get$last(this);
      this._this.removeChild(result);
      return result;
    },
    remove$1: function(_, object) {
      return false;
    },
    $indexSet: function(_, index, value) {
      var t1 = this._this;
      t1.replaceChild(value, t1.childNodes[index]);
    },
    get$iterator: function(_) {
      var t1 = this._this.childNodes;
      return new W.FixedSizeListIterator(t1, t1.length);
    },
    setRange$4: function(_, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnsupportedError$("Cannot setRange on Node list"));
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    get$length: function(_) {
      return this._this.childNodes.length;
    },
    set$length: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index: function(_, index) {
      return this._this.childNodes[index];
    }
  };
  W.Node.prototype = {
    remove$0: function(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver);
    },
    replaceWith$1: function(receiver, otherNode) {
      var $parent, t1, exception;
      try {
        t1 = receiver.parentNode;
        t1.toString;
        $parent = t1;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
        H.unwrapException(exception);
      }
      return receiver;
    },
    toString$0: function(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    get$text: function(receiver) {
      return receiver.textContent;
    },
    _replaceChild$2: function(receiver, node, child) {
      return receiver.replaceChild(node, child);
    },
    $isNode: 1,
    text$0: function($receiver) {
      return this.get$text($receiver).call$0();
    }
  };
  W.NodeList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.ObjectElement.prototype = {
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    get$name: function(receiver) {
      return receiver.name;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    }
  };
  W.OffscreenCanvas.prototype = {
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    },
    getContext$2: function(receiver, contextType, attributes) {
      var t1 = receiver.getContext(contextType, P.convertDartToNative_Dictionary(attributes));
      return t1;
    }
  };
  W.OutputElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.OverconstrainedError.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.ParagraphElement.prototype = {};
  W.ParamElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.PasswordCredential.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.PerformanceEntry.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.PerformanceServerTiming.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.Plugin.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    get$name: function(receiver) {
      return receiver.name;
    },
    $isPlugin: 1
  };
  W.PluginArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.PointerEvent.prototype = {$isPointerEvent: 1};
  W.ProgressEvent.prototype = {$isProgressEvent: 1};
  W.PushMessageData.prototype = {
    arrayBuffer$0: function(receiver) {
      return receiver.arrayBuffer();
    },
    text$0: function(receiver) {
      return receiver.text();
    }
  };
  W.RtcStatsReport.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1: function(receiver, f) {
      var entry,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.RtcStatsReport_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_Map_dynamic_dynamic);
      this.forEach$1(receiver, new W.RtcStatsReport_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.size !== 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    putIfAbsent$2: function(receiver, key, ifAbsent) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    remove$1: function(receiver, key) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  W.RtcStatsReport_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    },
    $signature: 9
  };
  W.RtcStatsReport_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    },
    $signature: 9
  };
  W.ScreenOrientation.prototype = {
    unlock$0: function(receiver) {
      return receiver.unlock();
    }
  };
  W.ScriptElement.prototype = {};
  W.SelectElement.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.SharedWorkerGlobalScope.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.SlotElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.SourceBuffer.prototype = {$isSourceBuffer: 1};
  W.SourceBufferList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.SpanElement.prototype = {$isSpanElement: 1};
  W.SpeechGrammar.prototype = {$isSpeechGrammar: 1};
  W.SpeechGrammarList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.SpeechRecognitionResult.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isSpeechRecognitionResult: 1
  };
  W.SpeechSynthesisEvent.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.SpeechSynthesisUtterance.prototype = {
    get$text: function(receiver) {
      return receiver.text;
    },
    text$0: function($receiver) {
      return this.get$text($receiver).call$0();
    }
  };
  W.SpeechSynthesisVoice.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  W.Storage.prototype = {
    containsKey$1: function(receiver, key) {
      return receiver.getItem(H._asString(key)) != null;
    },
    $index: function(receiver, key) {
      return receiver.getItem(H._asString(key));
    },
    $indexSet: function(receiver, key, value) {
      receiver.setItem(key, value);
    },
    putIfAbsent$2: function(receiver, key, ifAbsent) {
      if (receiver.getItem(key) == null)
        receiver.setItem(key, ifAbsent.call$0());
      return H._asString(receiver.getItem(key));
    },
    remove$1: function(receiver, key) {
      var value;
      H._asString(key);
      value = receiver.getItem(key);
      receiver.removeItem(key);
      return value;
    },
    forEach$1: function(receiver, f) {
      var i, key, t1;
      for (i = 0; true; ++i) {
        key = receiver.key(i);
        if (key == null)
          return;
        t1 = receiver.getItem(key);
        t1.toString;
        f.call$2(key, t1);
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.Storage_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new W.Storage_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    get$isEmpty: function(receiver) {
      return receiver.key(0) == null;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.key(0) != null;
    },
    $isMap: 1
  };
  W.Storage_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    },
    $signature: 67
  };
  W.Storage_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    },
    $signature: 67
  };
  W.StyleElement.prototype = {};
  W.StyleSheet.prototype = {$isStyleSheet: 1};
  W.TableElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var table, fragment;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      table = W.Element_Element$html("<table>" + html + "</table>", treeSanitizer, validator);
      fragment = document.createDocumentFragment();
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(table));
      return fragment;
    }
  };
  W.TableRowElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, fragment;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      fragment = t1.createDocumentFragment();
      t1 = new W._ChildNodeListLazy(C.TableElement_methods.createFragment$3$treeSanitizer$validator(t1.createElement("table"), html, treeSanitizer, validator));
      t1 = new W._ChildNodeListLazy(t1.get$single(t1));
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(t1.get$single(t1)));
      return fragment;
    }
  };
  W.TableSectionElement.prototype = {
    createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
      var t1, fragment;
      if ("createContextualFragment" in window.Range.prototype)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      fragment = t1.createDocumentFragment();
      t1 = new W._ChildNodeListLazy(C.TableElement_methods.createFragment$3$treeSanitizer$validator(t1.createElement("table"), html, treeSanitizer, validator));
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(t1.get$single(t1)));
      return fragment;
    }
  };
  W.TemplateElement.prototype = {$isTemplateElement: 1};
  W.TextAreaElement.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    },
    select$0: function(receiver) {
      return receiver.select();
    },
    $isTextAreaElement: 1
  };
  W.TextTrack.prototype = {$isTextTrack: 1};
  W.TextTrackCue.prototype = {$isTextTrackCue: 1};
  W.TextTrackCueList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.TextTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.TimeRanges.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.Touch.prototype = {$isTouch: 1};
  W.TouchEvent.prototype = {$isTouchEvent: 1};
  W.TouchList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W.TrackDefaultList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.UIEvent.prototype = {};
  W.Url.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  W.VideoElement.prototype = {
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    }
  };
  W.VideoTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  W.VttCue.prototype = {
    get$text: function(receiver) {
      return receiver.text;
    },
    text$0: function($receiver) {
      return this.get$text($receiver).call$0();
    }
  };
  W.VttRegion.prototype = {
    set$width: function(receiver, value) {
      receiver.width = value;
    }
  };
  W.WheelEvent.prototype = {
    get$deltaY: function(receiver) {
      var value = receiver.deltaY;
      if (value != null)
        return value;
      throw H.wrapException(P.UnsupportedError$("deltaY is not supported"));
    },
    get$deltaX: function(receiver) {
      var value = receiver.deltaX;
      if (value != null)
        return value;
      throw H.wrapException(P.UnsupportedError$("deltaX is not supported"));
    },
    get$deltaMode: function(receiver) {
      if (!!receiver.deltaMode)
        return receiver.deltaMode;
      return 0;
    },
    $isWheelEvent: 1
  };
  W.Window.prototype = {
    requestAnimationFrame$1: function(receiver, callback) {
      var t1;
      this._ensureRequestAnimationFrame$0(receiver);
      t1 = W._wrapZone(callback, type$.num);
      t1.toString;
      return this._requestAnimationFrame$1(receiver, t1);
    },
    _requestAnimationFrame$1: function(receiver, callback) {
      return receiver.requestAnimationFrame(H.convertDartClosureToJS(callback, 1));
    },
    _ensureRequestAnimationFrame$0: function(receiver) {
      if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
        return;
      (function($this) {
        var vendors = ['ms', 'moz', 'webkit', 'o'];
        for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
          $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
          $this.cancelAnimationFrame = $this[vendors[i] + 'CancelAnimationFrame'] || $this[vendors[i] + 'CancelRequestAnimationFrame'];
        }
        if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
          return;
        $this.requestAnimationFrame = function(callback) {
          return window.setTimeout(function() {
            callback(Date.now());
          }, 16);
        };
        $this.cancelAnimationFrame = function(id) {
          clearTimeout(id);
        };
      })(receiver);
    },
    get$name: function(receiver) {
      return receiver.name;
    },
    fetch$1: function(receiver, input) {
      return P.promiseToFuture(receiver.fetch(input, null), type$.dynamic);
    },
    $isWindow: 1
  };
  W.WorkerGlobalScope.prototype = {$isWorkerGlobalScope: 1};
  W._Attr.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    },
    $is_Attr: 1
  };
  W._CssRuleList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._DomRect.prototype = {
    toString$0: function(receiver) {
      var t2,
        t1 = receiver.left;
      t1.toString;
      t1 = "Rectangle (" + H.S(t1) + ", ";
      t2 = receiver.top;
      t2.toString;
      t2 = t1 + H.S(t2) + ") ";
      t1 = receiver.width;
      t1.toString;
      t1 = t2 + H.S(t1) + " x ";
      t2 = receiver.height;
      t2.toString;
      return t1 + H.S(t2);
    },
    $eq: function(receiver, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other)) {
        t1 = receiver.left;
        t1.toString;
        t2 = J.getInterceptor$x(other);
        if (t1 === t2.get$left(other)) {
          t1 = receiver.top;
          t1.toString;
          if (t1 === t2.get$top(other)) {
            t1 = receiver.width;
            t1.toString;
            if (t1 === t2.get$width(other)) {
              t1 = receiver.height;
              t1.toString;
              t2 = t1 === t2.get$height(other);
              t1 = t2;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t1 = C.JSNumber_methods.get$hashCode(t1);
      t2 = receiver.top;
      t2.toString;
      t2 = C.JSNumber_methods.get$hashCode(t2);
      t3 = receiver.width;
      t3.toString;
      t3 = C.JSNumber_methods.get$hashCode(t3);
      t4 = receiver.height;
      t4.toString;
      return W._JenkinsSmiHash_hash4(t1, t2, t3, C.JSNumber_methods.get$hashCode(t4));
    },
    get$_height: function(receiver) {
      return receiver.height;
    },
    get$height: function(receiver) {
      var t1 = receiver.height;
      t1.toString;
      return t1;
    },
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    get$_width: function(receiver) {
      return receiver.width;
    },
    get$width: function(receiver) {
      var t1 = receiver.width;
      t1.toString;
      return t1;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    }
  };
  W._GamepadList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._NamedNodeMap.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._SpeechRecognitionResultList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._StyleSheetList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  W._AttributeMap.prototype = {
    cast$2$0: function(_, $K, $V) {
      var t1 = type$.String;
      return P.Map_castFrom(this, t1, t1, $K, $V);
    },
    putIfAbsent$2: function(_, key, ifAbsent) {
      var t1 = this._html$_element,
        t2 = t1.hasAttribute(key);
      if (!t2)
        t1.setAttribute(key, ifAbsent.call$0());
      return H._asString(t1.getAttribute(key));
    },
    forEach$1: function(_, f) {
      var t1, t2, t3, _i, t4;
      for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._html$_element, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        t4 = H._asString(t1[_i]);
        f.call$2(t4, H._asString(t3.getAttribute(t4)));
      }
    },
    get$keys: function(_) {
      var keys, len, t2, i, attr, t3,
        t1 = this._html$_element.attributes;
      t1.toString;
      keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (len = t1.length, t2 = type$._Attr, i = 0; i < len; ++i) {
        attr = t2._as(t1[i]);
        if (attr.namespaceURI == null) {
          t3 = attr.name;
          t3.toString;
          keys.push(t3);
        }
      }
      return keys;
    },
    get$values: function(_) {
      var values, len, t2, i, attr, t3,
        t1 = this._html$_element.attributes;
      t1.toString;
      values = H.setRuntimeTypeInfo([], type$.JSArray_String);
      for (len = t1.length, t2 = type$._Attr, i = 0; i < len; ++i) {
        attr = t2._as(t1[i]);
        if (attr.namespaceURI == null) {
          t3 = attr.value;
          t3.toString;
          values.push(t3);
        }
      }
      return values;
    },
    get$isEmpty: function(_) {
      return this.get$keys(this).length === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$keys(this).length !== 0;
    }
  };
  W._ElementAttributeMap.prototype = {
    containsKey$1: function(_, key) {
      return typeof key == "string" && this._html$_element.hasAttribute(key);
    },
    $index: function(_, key) {
      return this._html$_element.getAttribute(H._asString(key));
    },
    $indexSet: function(_, key, value) {
      this._html$_element.setAttribute(key, value);
    },
    remove$1: function(_, key) {
      var t1, value;
      if (typeof key == "string") {
        t1 = this._html$_element;
        value = t1.getAttribute(key);
        t1.removeAttribute(key);
        t1 = value;
      } else
        t1 = null;
      return t1;
    },
    get$length: function(_) {
      return this.get$keys(this).length;
    }
  };
  W.EventStreamProvider.prototype = {};
  W._EventStream.prototype = {
    listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
      return W._EventStreamSubscription$(this._html$_target, this._eventType, onData, false, H._instanceType(this)._precomputed1);
    }
  };
  W._ElementEventStreamImpl.prototype = {};
  W._EventStreamSubscription.prototype = {
    cancel$0: function(_) {
      var _this = this;
      if (_this._html$_target == null)
        return $.$get$nullFuture();
      _this._unlisten$0();
      _this._onData = _this._html$_target = null;
      return $.$get$nullFuture();
    },
    pause$0: function(_) {
      if (this._html$_target == null)
        return;
      ++this._pauseCount;
      this._unlisten$0();
    },
    resume$0: function(_) {
      var _this = this;
      if (_this._html$_target == null || _this._pauseCount <= 0)
        return;
      --_this._pauseCount;
      _this._tryResume$0();
    },
    _tryResume$0: function() {
      var t2, _this = this,
        t1 = _this._onData;
      if (t1 != null && _this._pauseCount <= 0) {
        t2 = _this._html$_target;
        t2.toString;
        J.addEventListener$3$x(t2, _this._eventType, t1, false);
      }
    },
    _unlisten$0: function() {
      var t2,
        t1 = this._onData;
      if (t1 != null) {
        t2 = this._html$_target;
        t2.toString;
        J.removeEventListener$3$x(t2, this._eventType, t1, false);
      }
    }
  };
  W._EventStreamSubscription_closure.prototype = {
    call$1: function(e) {
      return this.onData.call$1(e);
    },
    $signature: 3
  };
  W._Html5NodeValidator.prototype = {
    _Html5NodeValidator$1$uriPolicy: function(uriPolicy) {
      var _i;
      if ($._Html5NodeValidator__attributeValidators.get$isEmpty($._Html5NodeValidator__attributeValidators)) {
        for (_i = 0; _i < 262; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_2Zi[_i], W.html__Html5NodeValidator__standardAttributeValidator$closure());
        for (_i = 0; _i < 12; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, C.List_yrN[_i], W.html__Html5NodeValidator__uriAttributeValidator$closure());
      }
    },
    allowsElement$1: function(element) {
      return $.$get$_Html5NodeValidator__allowedElements().contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var validator = $._Html5NodeValidator__attributeValidators.$index(0, W.Element__safeTagName(element) + "::" + attributeName);
      if (validator == null)
        validator = $._Html5NodeValidator__attributeValidators.$index(0, "*::" + attributeName);
      if (validator == null)
        return false;
      return validator.call$4(element, attributeName, value, this);
    },
    $isNodeValidator: 1
  };
  W.ImmutableListMixin.prototype = {
    get$iterator: function(receiver) {
      return new W.FixedSizeListIterator(receiver, this.get$length(receiver));
    },
    add$1: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    },
    removeLast$0: function(receiver) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
    },
    remove$1: function(receiver, object) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
    },
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnsupportedError$("Cannot setRange on immutable List."));
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    }
  };
  W.NodeValidatorBuilder.prototype = {
    allowsElement$1: function(element) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsElement_closure(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      return C.JSArray_methods.any$1(this._validators, new W.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
    },
    $isNodeValidator: 1
  };
  W.NodeValidatorBuilder_allowsElement_closure.prototype = {
    call$1: function(v) {
      return v.allowsElement$1(this.element);
    },
    $signature: 68
  };
  W.NodeValidatorBuilder_allowsAttribute_closure.prototype = {
    call$1: function(v) {
      return v.allowsAttribute$3(this.element, this.attributeName, this.value);
    },
    $signature: 68
  };
  W._SimpleNodeValidator.prototype = {
    _SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes: function(uriPolicy, allowedAttributes, allowedElements, allowedUriAttributes) {
      var legalAttributes, extraUriAttributes, t1;
      this.allowedElements.addAll$1(0, allowedElements);
      legalAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure());
      extraUriAttributes = allowedAttributes.where$1(0, new W._SimpleNodeValidator_closure0());
      this.allowedAttributes.addAll$1(0, legalAttributes);
      t1 = this.allowedUriAttributes;
      t1.addAll$1(0, C.List_empty0);
      t1.addAll$1(0, extraUriAttributes);
    },
    allowsElement$1: function(element) {
      return this.allowedElements.contains$1(0, W.Element__safeTagName(element));
    },
    allowsAttribute$3: function(element, attributeName, value) {
      var _this = this,
        tagName = W.Element__safeTagName(element),
        t1 = _this.allowedUriAttributes;
      if (t1.contains$1(0, tagName + "::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else if (t1.contains$1(0, "*::" + attributeName))
        return _this.uriPolicy.allowsUri$1(value);
      else {
        t1 = _this.allowedAttributes;
        if (t1.contains$1(0, tagName + "::" + attributeName))
          return true;
        else if (t1.contains$1(0, "*::" + attributeName))
          return true;
        else if (t1.contains$1(0, tagName + "::*"))
          return true;
        else if (t1.contains$1(0, "*::*"))
          return true;
      }
      return false;
    },
    $isNodeValidator: 1
  };
  W._SimpleNodeValidator_closure.prototype = {
    call$1: function(x) {
      return !C.JSArray_methods.contains$1(C.List_yrN, x);
    },
    $signature: 22
  };
  W._SimpleNodeValidator_closure0.prototype = {
    call$1: function(x) {
      return C.JSArray_methods.contains$1(C.List_yrN, x);
    },
    $signature: 22
  };
  W._TemplatingNodeValidator.prototype = {
    allowsAttribute$3: function(element, attributeName, value) {
      if (this.super$_SimpleNodeValidator$allowsAttribute(element, attributeName, value))
        return true;
      if (attributeName === "template" && value === "")
        return true;
      if (element.getAttribute("template") === "")
        return this._templateAttrs.contains$1(0, attributeName);
      return false;
    }
  };
  W._TemplatingNodeValidator_closure.prototype = {
    call$1: function(attr) {
      return "TEMPLATE::" + attr;
    },
    $signature: 55
  };
  W._SvgNodeValidator.prototype = {
    allowsElement$1: function(element) {
      var t1;
      if (type$.ScriptElement._is(element))
        return false;
      t1 = type$.SvgElement._is(element);
      if (t1 && W.Element__safeTagName(element) === "foreignObject")
        return false;
      if (t1)
        return true;
      return false;
    },
    allowsAttribute$3: function(element, attributeName, value) {
      if (attributeName === "is" || C.JSString_methods.startsWith$1(attributeName, "on"))
        return false;
      return this.allowsElement$1(element);
    },
    $isNodeValidator: 1
  };
  W.FixedSizeListIterator.prototype = {
    moveNext$0: function() {
      var _this = this,
        nextPosition = _this._html$_position + 1,
        t1 = _this._html$_length;
      if (nextPosition < t1) {
        _this._html$_current = J.$index$asx(_this._array, nextPosition);
        _this._html$_position = nextPosition;
        return true;
      }
      _this._html$_current = null;
      _this._html$_position = t1;
      return false;
    },
    get$current: function(_) {
      return H._instanceType(this)._precomputed1._as(this._html$_current);
    }
  };
  W.Console.prototype = {
    warn$1: function(arg) {
      return typeof console != "undefined" ? window.console.warn(arg) : null;
    }
  };
  W._DOMWindowCrossFrame.prototype = {};
  W._SameOriginUriPolicy.prototype = {};
  W._ValidatingTreeSanitizer.prototype = {
    sanitizeTree$1: function(node) {
      var previousTreeModifications,
        walk = new W._ValidatingTreeSanitizer_sanitizeTree_walk(this);
      do {
        previousTreeModifications = this.numTreeModifications;
        walk.call$2(node, null);
      } while (previousTreeModifications !== this.numTreeModifications);
    },
    _removeNode$2: function(node, $parent) {
      ++this.numTreeModifications;
      if ($parent == null || $parent !== node.parentNode)
        J.remove$0$ax(node);
      else
        $parent.removeChild(node);
    },
    _sanitizeUntrustedElement$2: function(element, $parent) {
      var corruptedTest1, elementText, elementTagName, exception, t1,
        corrupted = true,
        attrs = null, isAttr = null;
      try {
        attrs = J.get$attributes$x(element);
        isAttr = attrs._html$_element.getAttribute("is");
        corruptedTest1 = function(element) {
          if (!(element.attributes instanceof NamedNodeMap))
            return true;
          if (element.id == 'lastChild' || element.name == 'lastChild' || element.id == 'previousSibling' || element.name == 'previousSibling' || element.id == 'children' || element.name == 'children')
            return true;
          var childNodes = element.childNodes;
          if (element.lastChild && element.lastChild !== childNodes[childNodes.length - 1])
            return true;
          if (element.children)
            if (!(element.children instanceof HTMLCollection || element.children instanceof NodeList))
              return true;
          var length = 0;
          if (element.children)
            length = element.children.length;
          for (var i = 0; i < length; i++) {
            var child = element.children[i];
            if (child.id == 'attributes' || child.name == 'attributes' || child.id == 'lastChild' || child.name == 'lastChild' || child.id == 'previousSibling' || child.name == 'previousSibling' || child.id == 'children' || child.name == 'children')
              return true;
          }
          return false;
        }(element);
        corrupted = corruptedTest1 ? true : !(element.attributes instanceof NamedNodeMap);
      } catch (exception) {
        H.unwrapException(exception);
      }
      elementText = "element unprintable";
      try {
        elementText = J.toString$0$(element);
      } catch (exception) {
        H.unwrapException(exception);
      }
      try {
        elementTagName = W.Element__safeTagName(element);
        this._sanitizeElement$7(element, $parent, corrupted, elementText, elementTagName, attrs, isAttr);
      } catch (exception) {
        if (H.unwrapException(exception) instanceof P.ArgumentError)
          throw exception;
        else {
          this._removeNode$2(element, $parent);
          window;
          t1 = "Removing corrupted element " + H.S(elementText);
          if (typeof console != "undefined")
            window.console.warn(t1);
        }
      }
    },
    _sanitizeElement$7: function(element, $parent, corrupted, text, tag, attrs, isAttr) {
      var t1, keys, i, $name, t2, t3, _this = this;
      if (corrupted) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing element due to corrupted attributes on <" + text + ">";
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (!_this.validator.allowsElement$1(element)) {
        _this._removeNode$2(element, $parent);
        window;
        t1 = "Removing disallowed element <" + tag + "> from " + H.S($parent);
        if (typeof console != "undefined")
          window.console.warn(t1);
        return;
      }
      if (isAttr != null)
        if (!_this.validator.allowsAttribute$3(element, "is", isAttr)) {
          _this._removeNode$2(element, $parent);
          window;
          t1 = "Removing disallowed type extension <" + tag + ' is="' + isAttr + '">';
          if (typeof console != "undefined")
            window.console.warn(t1);
          return;
        }
      t1 = attrs.get$keys(attrs);
      keys = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1));
      for (i = attrs.get$keys(attrs).length - 1, t1 = attrs._html$_element; i >= 0; --i) {
        $name = keys[i];
        t2 = _this.validator;
        t3 = J.toLowerCase$0$s($name);
        H._asString($name);
        if (!t2.allowsAttribute$3(element, t3, t1.getAttribute($name))) {
          window;
          t2 = "Removing disallowed attribute <" + tag + " " + $name + '="' + H.S(t1.getAttribute($name)) + '">';
          if (typeof console != "undefined")
            window.console.warn(t2);
          t1.removeAttribute($name);
        }
      }
      if (type$.TemplateElement._is(element)) {
        t1 = element.content;
        t1.toString;
        _this.sanitizeTree$1(t1);
      }
    }
  };
  W._ValidatingTreeSanitizer_sanitizeTree_walk.prototype = {
    call$2: function(node, $parent) {
      var child, nextChild, t2, t3, exception,
        t1 = this.$this;
      switch (node.nodeType) {
        case 1:
          t1._sanitizeUntrustedElement$2(node, $parent);
          break;
        case 8:
        case 11:
        case 3:
        case 4:
          break;
        default:
          t1._removeNode$2(node, $parent);
      }
      child = node.lastChild;
      for (; null != child;) {
        nextChild = null;
        try {
          nextChild = child.previousSibling;
          if (nextChild != null) {
            t2 = nextChild.nextSibling;
            t3 = child;
            t3 = t2 == null ? t3 != null : t2 !== t3;
            t2 = t3;
          } else
            t2 = false;
          if (t2) {
            t2 = P.StateError$("Corrupt HTML");
            throw H.wrapException(t2);
          }
        } catch (exception) {
          H.unwrapException(exception);
          t2 = child;
          ++t1.numTreeModifications;
          t3 = t2.parentNode;
          if (node !== t3) {
            if (t3 != null)
              t3.removeChild(t2);
          } else
            node.removeChild(t2);
          child = null;
          nextChild = node.lastChild;
        }
        if (child != null)
          this.call$2(child, node);
        child = nextChild;
      }
    },
    $signature: 120
  };
  W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase.prototype = {};
  W._DomRectList_Interceptor_ListMixin.prototype = {};
  W._DomRectList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._DomStringList_Interceptor_ListMixin.prototype = {};
  W._DomStringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._FileList_Interceptor_ListMixin.prototype = {};
  W._FileList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin.prototype = {};
  W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._MidiInputMap_Interceptor_MapMixin.prototype = {};
  W._MidiOutputMap_Interceptor_MapMixin.prototype = {};
  W._MimeTypeArray_Interceptor_ListMixin.prototype = {};
  W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin.prototype = {};
  W._NodeList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._PluginArray_Interceptor_ListMixin.prototype = {};
  W._PluginArray_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._RtcStatsReport_Interceptor_MapMixin.prototype = {};
  W._SourceBufferList_EventTarget_ListMixin.prototype = {};
  W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  W._SpeechGrammarList_Interceptor_ListMixin.prototype = {};
  W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._Storage_Interceptor_MapMixin.prototype = {};
  W._TextTrackCueList_Interceptor_ListMixin.prototype = {};
  W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W._TextTrackList_EventTarget_ListMixin.prototype = {};
  W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin.prototype = {};
  W._TouchList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__CssRuleList_Interceptor_ListMixin.prototype = {};
  W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__GamepadList_Interceptor_ListMixin.prototype = {};
  W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin.prototype = {};
  W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__SpeechRecognitionResultList_Interceptor_ListMixin.prototype = {};
  W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  W.__StyleSheetList_Interceptor_ListMixin.prototype = {};
  W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._StructuredClone.prototype = {
    findSlot$1: function(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      t1.push(value);
      this.copies.push(null);
      return $length;
    },
    walk$1: function(e) {
      var slot, t2, copy, _this = this, t1 = {};
      if (e == null)
        return e;
      if (H._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof P.DateTime)
        return new Date(e._core$_value);
      if (type$.RegExp._is(e))
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (type$.File._is(e))
        return e;
      if (type$.Blob._is(e))
        return e;
      if (type$.FileList._is(e))
        return e;
      if (type$.ImageData._is(e))
        return e;
      if (type$.NativeByteBuffer._is(e) || type$.NativeTypedData._is(e) || type$.MessagePort._is(e))
        return e;
      if (type$.Map_dynamic_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        t2[slot] = copy;
        J.forEach$1$ax(e, new P._StructuredClone_walk_closure(t1, _this));
        return t1.copy;
      }
      if (type$.List_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        copy = _this.copies[slot];
        if (copy != null)
          return copy;
        return _this.copyList$2(e, slot);
      }
      if (type$.JSObject._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        t2[slot] = copy;
        _this.forEachObjectKey$2(e, new P._StructuredClone_walk_closure0(t1, _this));
        return t1.copy;
      }
      throw H.wrapException(P.UnimplementedError$("structured clone of other type"));
    },
    copyList$2: function(e, slot) {
      var i,
        t1 = J.getInterceptor$asx(e),
        $length = t1.get$length(e),
        copy = new Array($length);
      this.copies[slot] = copy;
      for (i = 0; i < $length; ++i)
        copy[i] = this.walk$1(t1.$index(e, i));
      return copy;
    }
  };
  P._StructuredClone_walk_closure.prototype = {
    call$2: function(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 23
  };
  P._StructuredClone_walk_closure0.prototype = {
    call$2: function(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 121
  };
  P._AcceptStructuredClone.prototype = {
    findSlot$1: function(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      t1.push(value);
      this.copies.push(null);
      return $length;
    },
    walk$1: function(e) {
      var proto, slot, t1, copy, t2, l, $length, i, _this = this, _box_0 = {};
      if (e == null)
        return e;
      if (H._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof Date)
        return P.DateTime$fromMillisecondsSinceEpoch(e.getTime(), true);
      if (e instanceof RegExp)
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (typeof Promise != "undefined" && e instanceof Promise)
        return P.promiseToFuture(e, type$.dynamic);
      proto = Object.getPrototypeOf(e);
      if (proto === Object.prototype || proto === null) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        copy = _box_0.copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = type$.dynamic;
        copy = P.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        _box_0.copy = copy;
        t1[slot] = copy;
        _this.forEachJsField$2(e, new P._AcceptStructuredClone_walk_closure(_box_0, _this));
        return _box_0.copy;
      }
      if (e instanceof Array) {
        l = e;
        slot = _this.findSlot$1(l);
        t1 = _this.copies;
        copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = J.getInterceptor$asx(l);
        $length = t2.get$length(l);
        copy = _this.mustCopy ? new Array($length) : l;
        t1[slot] = copy;
        for (t1 = J.getInterceptor$ax(copy), i = 0; i < $length; ++i)
          t1.$indexSet(copy, i, _this.walk$1(t2.$index(l, i)));
        return copy;
      }
      return e;
    },
    convertNativeToDart_AcceptStructuredClone$2$mustCopy: function(object, mustCopy) {
      this.mustCopy = mustCopy;
      return this.walk$1(object);
    }
  };
  P._AcceptStructuredClone_walk_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this._box_0.copy,
        t2 = this.$this.walk$1(value);
      J.$indexSet$ax(t1, key, t2);
      return t2;
    },
    $signature: 122
  };
  P._convertDartToNative_Value_closure.prototype = {
    call$1: function(element) {
      this.array.push(P._convertDartToNative_Value(element));
    },
    $signature: 13
  };
  P.convertDartToNative_Dictionary_closure.prototype = {
    call$2: function(key, value) {
      this.object[key] = P._convertDartToNative_Value(value);
    },
    $signature: 23
  };
  P._StructuredCloneDart2Js.prototype = {
    forEachObjectKey$2: function(object, action) {
      var t1, t2, _i, key;
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  P._AcceptStructuredCloneDart2Js.prototype = {
    forEachJsField$2: function(object, action) {
      var t1, t2, _i, key;
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  P.FilteredElementList.prototype = {
    get$_html_common$_iterable: function() {
      var t1 = this._childNodes,
        t2 = H._instanceType(t1);
      return new H.MappedIterable(new H.WhereIterable(t1, new P.FilteredElementList__iterable_closure(), t2._eval$1("WhereIterable<ListMixin.E>")), new P.FilteredElementList__iterable_closure0(), t2._eval$1("MappedIterable<ListMixin.E,Element0>"));
    },
    forEach$1: function(_, f) {
      C.JSArray_methods.forEach$1(P.List_List$from(this.get$_html_common$_iterable(), false, type$.Element), f);
    },
    $indexSet: function(_, index, value) {
      var t1 = this.get$_html_common$_iterable();
      J.replaceWith$1$x(t1._f.call$1(J.elementAt$1$ax(t1._iterable, index)), value);
    },
    set$length: function(_, newLength) {
      var len = J.get$length$asx(this.get$_html_common$_iterable()._iterable);
      if (newLength >= len)
        return;
      else if (newLength < 0)
        throw H.wrapException(P.ArgumentError$("Invalid list length"));
      this.removeRange$2(0, newLength, len);
    },
    add$1: function(_, value) {
      this._childNodes._this.appendChild(value);
    },
    contains$1: function(_, needle) {
      if (!type$.Element._is(needle))
        return false;
      return needle.parentNode === this._html_common$_node;
    },
    setRange$4: function(_, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnsupportedError$("Cannot setRange on filtered list"));
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    removeRange$2: function(_, start, end) {
      var t1 = this.get$_html_common$_iterable();
      t1 = H.SkipIterable_SkipIterable(t1, start, t1.$ti._eval$1("Iterable.E"));
      C.JSArray_methods.forEach$1(P.List_List$from(H.TakeIterable_TakeIterable(t1, end - start, H._instanceType(t1)._eval$1("Iterable.E")), true, type$.dynamic), new P.FilteredElementList_removeRange_closure());
    },
    removeLast$0: function(_) {
      var t1 = this.get$_html_common$_iterable(),
        result = t1._f.call$1(J.get$last$ax(t1._iterable));
      J.remove$0$ax(result);
      return result;
    },
    insert$2: function(_, index, value) {
      var t1, element;
      if (index === J.get$length$asx(this.get$_html_common$_iterable()._iterable))
        this._childNodes._this.appendChild(value);
      else {
        t1 = this.get$_html_common$_iterable();
        element = t1._f.call$1(J.elementAt$1$ax(t1._iterable, index));
        element.parentNode.insertBefore(value, element);
      }
    },
    remove$1: function(_, element) {
      return false;
    },
    get$length: function(_) {
      return J.get$length$asx(this.get$_html_common$_iterable()._iterable);
    },
    $index: function(_, index) {
      var t1 = this.get$_html_common$_iterable();
      return t1._f.call$1(J.elementAt$1$ax(t1._iterable, index));
    },
    get$iterator: function(_) {
      var t1 = P.List_List$from(this.get$_html_common$_iterable(), false, type$.Element);
      return new J.ArrayIterator(t1, t1.length);
    }
  };
  P.FilteredElementList__iterable_closure.prototype = {
    call$1: function(n) {
      return type$.Element._is(n);
    },
    $signature: 66
  };
  P.FilteredElementList__iterable_closure0.prototype = {
    call$1: function(n) {
      return type$.Element._as(n);
    },
    $signature: 123
  };
  P.FilteredElementList_removeRange_closure.prototype = {
    call$1: function(el) {
      return J.remove$0$ax(el);
    },
    $signature: 13
  };
  P.Database.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  P.Index.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  P.KeyRange.prototype = {$isKeyRange: 1};
  P.ObjectStore.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  P.VersionChangeEvent.prototype = {
    get$target: function(receiver) {
      return receiver.target;
    }
  };
  P.JsObject__convertDataTree__convert.prototype = {
    call$1: function(o) {
      var convertedMap, t2, key, convertedList,
        t1 = this._convertedObjects;
      if (t1.containsKey$1(0, o))
        return t1.$index(0, o);
      if (type$.Map_dynamic_dynamic._is(o)) {
        convertedMap = {};
        t1.$indexSet(0, o, convertedMap);
        for (t1 = J.getInterceptor$x(o), t2 = J.get$iterator$ax(t1.get$keys(o)); t2.moveNext$0();) {
          key = t2.get$current(t2);
          convertedMap[key] = this.call$1(t1.$index(o, key));
        }
        return convertedMap;
      } else if (type$.Iterable_dynamic._is(o)) {
        convertedList = [];
        t1.$indexSet(0, o, convertedList);
        C.JSArray_methods.addAll$1(convertedList, J.map$1$1$ax(o, this, type$.dynamic));
        return convertedList;
      } else
        return P._convertToJS(o);
    },
    $signature: 63
  };
  P._convertToJS_closure.prototype = {
    call$1: function(o) {
      var jsFunction = function(_call, f, captureThis) {
        return function() {
          return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunction, o, false);
      P._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
      return jsFunction;
    },
    $signature: 26
  };
  P._convertToJS_closure0.prototype = {
    call$1: function(o) {
      return new this.ctor(o);
    },
    $signature: 26
  };
  P._wrapToDart_closure.prototype = {
    call$1: function(o) {
      return new P.JsFunction(o);
    },
    $signature: 124
  };
  P._wrapToDart_closure0.prototype = {
    call$1: function(o) {
      return new P.JsArray(o, type$.JsArray_dynamic);
    },
    $signature: 125
  };
  P._wrapToDart_closure1.prototype = {
    call$1: function(o) {
      return new P.JsObject(o);
    },
    $signature: 126
  };
  P.JsObject.prototype = {
    $index: function(_, property) {
      if (typeof property != "string" && typeof property != "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      return P._convertToDart(this._js$_jsObject[property]);
    },
    $indexSet: function(_, property, value) {
      if (typeof property != "string" && typeof property != "number")
        throw H.wrapException(P.ArgumentError$("property is not a String or num"));
      this._js$_jsObject[property] = P._convertToJS(value);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.JsObject && this._js$_jsObject === other._js$_jsObject;
    },
    toString$0: function(_) {
      var t1, exception;
      try {
        t1 = String(this._js$_jsObject);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        t1 = this.super$Object$toString(0);
        return t1;
      }
    },
    callMethod$2: function(method, args) {
      var t1 = this._js$_jsObject,
        t2 = args == null ? null : P.List_List$from(new H.MappedListIterable(args, P.js___convertToJS$closure(), H._arrayInstanceType(args)._eval$1("MappedListIterable<1,@>")), true, type$.dynamic);
      return P._convertToDart(t1[method].apply(t1, t2));
    },
    callMethod$1: function(method) {
      return this.callMethod$2(method, null);
    },
    get$hashCode: function(_) {
      return 0;
    }
  };
  P.JsFunction.prototype = {};
  P.JsArray.prototype = {
    _checkIndex$1: function(index) {
      var _this = this,
        t1 = index < 0 || index >= _this.get$length(_this);
      if (t1)
        throw H.wrapException(P.RangeError$range(index, 0, _this.get$length(_this), null, null));
    },
    $index: function(_, index) {
      if (H._isInt(index))
        this._checkIndex$1(index);
      return this.super$JsObject$$index(0, index);
    },
    $indexSet: function(_, index, value) {
      if (H._isInt(index))
        this._checkIndex$1(index);
      this.super$_JsArray_JsObject_ListMixin$$indexSet(0, index, value);
    },
    get$length: function(_) {
      var len = this._js$_jsObject.length;
      if (typeof len === "number" && len >>> 0 === len)
        return len;
      throw H.wrapException(P.StateError$("Bad JsArray length"));
    },
    set$length: function(_, $length) {
      this.super$_JsArray_JsObject_ListMixin$$indexSet(0, "length", $length);
    },
    add$1: function(_, value) {
      this.callMethod$2("push", [value]);
    },
    removeLast$0: function(_) {
      if (this.get$length(this) === 0)
        throw H.wrapException(P.RangeError$(-1));
      return this.callMethod$1("pop");
    },
    setRange$4: function(_, start, end, iterable, skipCount) {
      var $length, args;
      P.JsArray__checkRange(start, end, this.get$length(this));
      $length = end - start;
      if ($length === 0)
        return;
      args = [start, $length];
      C.JSArray_methods.addAll$1(args, J.skip$1$ax(iterable, skipCount).take$1(0, $length));
      this.callMethod$2("splice", args);
    },
    setRange$3: function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._JsArray_JsObject_ListMixin.prototype = {
    $indexSet: function(_, property, value) {
      return this.super$JsObject$$indexSet(0, property, value);
    }
  };
  P.NullRejectionException.prototype = {
    toString$0: function(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    },
    $isException: 1
  };
  P.promiseToFuture_closure.prototype = {
    call$1: function(r) {
      return this.completer.complete$1(0, r);
    },
    $signature: 13
  };
  P.promiseToFuture_closure0.prototype = {
    call$1: function(e) {
      if (e == null)
        return this.completer.completeError$1(new P.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 13
  };
  P.Point.prototype = {
    toString$0: function(_) {
      return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Point && this.x === other.x && this.y === other.y;
    },
    get$hashCode: function(_) {
      var t1 = C.JSNumber_methods.get$hashCode(this.x),
        t2 = C.JSNumber_methods.get$hashCode(this.y);
      return H.SystemHash_finish(H.SystemHash_combine(H.SystemHash_combine(0, t1), t2));
    },
    $add: function(_, other) {
      var t1 = this.$ti,
        t2 = t1._precomputed1;
      return new P.Point(t2._as(this.x + other.x), t2._as(this.y + other.y), t1);
    },
    $sub: function(_, other) {
      var t1 = this.$ti,
        t2 = t1._precomputed1;
      return new P.Point(t2._as(this.x - other.x), t2._as(this.y - other.y), t1);
    },
    $mul: function(_, factor) {
      var t1 = this.$ti,
        t2 = t1._precomputed1;
      return new P.Point(t2._as(this.x * factor), t2._as(this.y * factor), t1);
    }
  };
  P.Length.prototype = {$isLength: 1};
  P.LengthList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.Number.prototype = {$isNumber: 1};
  P.NumberList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.PointList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.Rect0.prototype = {
    set$height: function(receiver, value) {
      receiver.height = value;
    },
    set$width: function(receiver, value) {
      receiver.width = value;
    }
  };
  P.ScriptElement0.prototype = {$isScriptElement0: 1};
  P.StringList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P.SvgElement.prototype = {
    get$children: function(receiver) {
      return new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
    },
    createFragment$3$treeSanitizer$validator: function(receiver, svg, treeSanitizer, validator) {
      var html, t2, fragment, svgFragment, root,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_NodeValidator);
      t1.push(W._Html5NodeValidator$(null));
      t1.push(W._TemplatingNodeValidator$());
      t1.push(new W._SvgNodeValidator());
      treeSanitizer = new W._ValidatingTreeSanitizer(new W.NodeValidatorBuilder(t1));
      html = '<svg version="1.1">' + svg + "</svg>";
      t1 = document;
      t2 = t1.body;
      t2.toString;
      fragment = C.BodyElement_methods.createFragment$2$treeSanitizer(t2, html, treeSanitizer);
      svgFragment = t1.createDocumentFragment();
      t1 = new W._ChildNodeListLazy(fragment);
      root = t1.get$single(t1);
      for (; t1 = root.firstChild, t1 != null;)
        svgFragment.appendChild(t1);
      return svgFragment;
    },
    focus$0: function(receiver) {
      return receiver.focus();
    },
    $isSvgElement: 1
  };
  P.Transform.prototype = {$isTransform: 1};
  P.TransformList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      return receiver.getItem(index);
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._LengthList_Interceptor_ListMixin.prototype = {};
  P._LengthList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._NumberList_Interceptor_ListMixin.prototype = {};
  P._NumberList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._StringList_Interceptor_ListMixin.prototype = {};
  P._StringList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P._TransformList_Interceptor_ListMixin.prototype = {};
  P._TransformList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  P.Endian.prototype = {};
  P.ClipOp.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.PathFillType.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P._StoredMessage.prototype = {
    invoke$1: function(dataArg) {
      H.invoke1(this._callback, this._ui$_zone, dataArg);
    }
  };
  P._Channel.prototype = {
    get$length: function(_) {
      var t1 = this._ui$_queue;
      return t1.get$length(t1);
    },
    push$1: function(message) {
      var result,
        t1 = this._capacity;
      if (t1 <= 0)
        return true;
      result = this._dropOverflowMessages$1(t1 - 1);
      this._ui$_queue._add$1(0, message);
      return result;
    },
    _dropOverflowMessages$1: function(lengthLimit) {
      var t1, result, message;
      for (t1 = this._ui$_queue, result = false; (t1._tail - t1._head & t1._table.length - 1) >>> 0 > lengthLimit; result = true) {
        message = t1.removeFirst$0();
        H.invoke1(message._callback, message._ui$_zone, null);
      }
      return result;
    }
  };
  P.ChannelBuffers.prototype = {
    push$3: function($name, data, callback) {
      this._channels.putIfAbsent$2(0, $name, new P.ChannelBuffers_push_closure()).push$1(new P._StoredMessage(data, callback, $.Zone__current));
    },
    drain$2: function($name, callback) {
      return this.drain$body$ChannelBuffers($name, callback);
    },
    drain$body$ChannelBuffers: function($name, callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, channel, t1;
      var $async$drain$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              channel = $async$self._channels.$index(0, $name);
              t1 = channel != null;
            case 2:
              // while condition
              if (t1) {
                t2 = channel._ui$_queue;
                t2 = t2._head !== t2._tail;
              } else
                t2 = false;
              if (!t2) {
                // goto after while
                $async$goto = 3;
                break;
              }
              t2 = channel._ui$_queue.removeFirst$0();
              $async$goto = 4;
              return P._asyncAwait(callback.call$2(t2.data, t2.get$invoke()), $async$drain$2);
            case 4:
              // returning from await.
              // goto while condition
              $async$goto = 2;
              break;
            case 3:
              // after while
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$drain$2, $async$completer);
    },
    resize$2: function(_, $name, newSize) {
      var t1 = this._channels,
        channel = t1.$index(0, $name);
      if (channel == null)
        t1.$indexSet(0, $name, new P._Channel(P.ListQueue$(newSize, type$._StoredMessage), newSize));
      else {
        channel._capacity = newSize;
        channel._dropOverflowMessages$1(newSize);
      }
    }
  };
  P.ChannelBuffers_push_closure.prototype = {
    call$0: function() {
      return new P._Channel(P.ListQueue$(1, type$._StoredMessage), 1);
    },
    $signature: 127
  };
  P.OffsetBase.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.OffsetBase && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode: function(_) {
      return P.hashValues(this._dx, this._dy, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "OffsetBase(" + C.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  P.Offset.prototype = {
    get$distance: function() {
      var t1 = this._dx,
        t2 = this._dy;
      return Math.sqrt(t1 * t1 + t2 * t2);
    },
    get$distanceSquared: function() {
      var t1 = this._dx,
        t2 = this._dy;
      return t1 * t1 + t2 * t2;
    },
    $sub: function(_, other) {
      return new P.Offset(this._dx - other._dx, this._dy - other._dy);
    },
    $add: function(_, other) {
      return new P.Offset(this._dx + other._dx, this._dy + other._dy);
    },
    $mul: function(_, operand) {
      return new P.Offset(this._dx * operand, this._dy * operand);
    },
    $div: function(_, operand) {
      return new P.Offset(this._dx / operand, this._dy / operand);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Offset && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode: function(_) {
      return P.hashValues(this._dx, this._dy, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "Offset(" + C.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  P.Size.prototype = {
    get$isEmpty: function(_) {
      return this._dx <= 0 || this._dy <= 0;
    },
    $sub: function(_, other) {
      var _this = this;
      if (other instanceof P.Size)
        return new P.Offset(_this._dx - other._dx, _this._dy - other._dy);
      if (other instanceof P.Offset)
        return new P.Size(_this._dx - other._dx, _this._dy - other._dy);
      throw H.wrapException(P.ArgumentError$(other));
    },
    $add: function(_, other) {
      return new P.Size(this._dx + other._dx, this._dy + other._dy);
    },
    $mul: function(_, operand) {
      return new P.Size(this._dx * operand, this._dy * operand);
    },
    $div: function(_, operand) {
      return new P.Size(this._dx / operand, this._dy / operand);
    },
    center$1: function(origin) {
      return new P.Offset(origin._dx + this._dx / 2, origin._dy + this._dy / 2);
    },
    contains$1: function(_, offset) {
      var t1 = offset._dx;
      if (t1 >= 0)
        if (t1 < this._dx) {
          t1 = offset._dy;
          t1 = t1 >= 0 && t1 < this._dy;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.Size && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode: function(_) {
      return P.hashValues(this._dx, this._dy, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "Size(" + C.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  P.Rect.prototype = {
    get$isFinite: function(_) {
      var _this = this;
      return isFinite(_this.left) && isFinite(_this.top) && isFinite(_this.right) && isFinite(_this.bottom);
    },
    get$isEmpty: function(_) {
      var _this = this;
      return _this.left >= _this.right || _this.top >= _this.bottom;
    },
    shift$1: function(offset) {
      var _this = this,
        t1 = offset._dx,
        t2 = offset._dy;
      return new P.Rect(_this.left + t1, _this.top + t2, _this.right + t1, _this.bottom + t2);
    },
    translate$2: function(_, translateX, translateY) {
      var _this = this;
      return new P.Rect(_this.left + translateX, _this.top + translateY, _this.right + translateX, _this.bottom + translateY);
    },
    inflate$1: function(delta) {
      var _this = this;
      return new P.Rect(_this.left - delta, _this.top - delta, _this.right + delta, _this.bottom + delta);
    },
    intersect$1: function(other) {
      var _this = this;
      return new P.Rect(Math.max(_this.left, other.left), Math.max(_this.top, other.top), Math.min(_this.right, other.right), Math.min(_this.bottom, other.bottom));
    },
    expandToInclude$1: function(other) {
      var _this = this;
      return new P.Rect(Math.min(_this.left, other.left), Math.min(_this.top, other.top), Math.max(_this.right, other.right), Math.max(_this.bottom, other.bottom));
    },
    overlaps$1: function(other) {
      var _this = this;
      if (_this.right <= other.left || other.right <= _this.left)
        return false;
      if (_this.bottom <= other.top || other.bottom <= _this.top)
        return false;
      return true;
    },
    get$shortestSide: function() {
      var _this = this;
      return Math.min(Math.abs(_this.right - _this.left), Math.abs(_this.bottom - _this.top));
    },
    get$center: function() {
      var _this = this,
        t1 = _this.left,
        t2 = _this.top;
      return new P.Offset(t1 + (_this.right - t1) / 2, t2 + (_this.bottom - t2) / 2);
    },
    contains$1: function(_, offset) {
      var _this = this,
        t1 = offset._dx;
      if (t1 >= _this.left)
        if (t1 < _this.right) {
          t1 = offset._dy;
          t1 = t1 >= _this.top && t1 < _this.bottom;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (H.getRuntimeType(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof P.Rect && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.left, _this.top, _this.right, _this.bottom, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this;
      return "Rect.fromLTRB(" + C.JSNumber_methods.toStringAsFixed$1(_this.left, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.top, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.right, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1) + ")";
    }
  };
  P.Radius.prototype = {
    $sub: function(_, other) {
      return new P.Radius(this.x - other.x, this.y - other.y);
    },
    $add: function(_, other) {
      return new P.Radius(this.x + other.x, this.y + other.y);
    },
    $mul: function(_, operand) {
      return new P.Radius(this.x * operand, this.y * operand);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (H.getRuntimeType(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof P.Radius && other.x === _this.x && other.y === _this.y;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.x, this.y, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = this.x,
        t2 = this.y;
      return t1 === t2 ? "Radius.circular(" + C.JSNumber_methods.toStringAsFixed$1(t1, 1) + ")" : "Radius.elliptical(" + C.JSNumber_methods.toStringAsFixed$1(t1, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(t2, 1) + ")";
    }
  };
  P.RRect.prototype = {
    shift$1: function(offset) {
      var _this = this,
        t1 = offset._dx,
        t2 = offset._dy;
      return new P.RRect(_this.left + t1, _this.top + t2, _this.right + t1, _this.bottom + t2, _this.tlRadiusX, _this.tlRadiusY, _this.trRadiusX, _this.trRadiusY, _this.brRadiusX, _this.brRadiusY, _this.blRadiusX, _this.blRadiusY, false);
    },
    inflate$1: function(delta) {
      var _this = this;
      return new P.RRect(_this.left - delta, _this.top - delta, _this.right + delta, _this.bottom + delta, _this.tlRadiusX + delta, _this.tlRadiusY + delta, _this.trRadiusX + delta, _this.trRadiusY + delta, _this.brRadiusX + delta, _this.brRadiusY + delta, _this.blRadiusX + delta, _this.blRadiusY + delta, false);
    },
    _getMin$4: function(min, radius1, radius2, limit) {
      var sum = radius1 + radius2;
      if (sum > limit && sum !== 0)
        return Math.min(min, limit / sum);
      return min;
    },
    scaleRadii$0: function() {
      var _this = this,
        t1 = _this.right,
        t2 = _this.left,
        absWidth = Math.abs(t1 - t2),
        t3 = _this.bottom,
        t4 = _this.top,
        absHeight = Math.abs(t3 - t4),
        t5 = _this.blRadiusY,
        t6 = _this.tlRadiusY,
        t7 = _this.tlRadiusX,
        t8 = _this.trRadiusX,
        t9 = _this.trRadiusY,
        t10 = _this.brRadiusY,
        t11 = _this.brRadiusX,
        t12 = _this.blRadiusX,
        scale = _this._getMin$4(_this._getMin$4(_this._getMin$4(_this._getMin$4(1, t5, t6, absHeight), t7, t8, absWidth), t9, t10, absHeight), t11, t12, absWidth);
      if (scale < 1)
        return new P.RRect(t2, t4, t1, t3, t7 * scale, t6 * scale, t8 * scale, t9 * scale, t11 * scale, t10 * scale, t12 * scale, t5 * scale, false);
      return new P.RRect(t2, t4, t1, t3, t7, t6, t8, t9, t11, t10, t12, t5, false);
    },
    contains$1: function(_, point) {
      var t3, scaled, radiusX, x, radiusY, y, _this = this,
        t1 = point._dx,
        t2 = _this.left;
      if (!(t1 < t2))
        if (!(t1 >= _this.right)) {
          t3 = point._dy;
          t3 = t3 < _this.top || t3 >= _this.bottom;
        } else
          t3 = true;
      else
        t3 = true;
      if (t3)
        return false;
      scaled = _this.scaleRadii$0();
      radiusX = scaled.tlRadiusX;
      if (t1 < t2 + radiusX && point._dy < _this.top + scaled.tlRadiusY) {
        x = t1 - t2 - radiusX;
        radiusY = scaled.tlRadiusY;
        y = point._dy - _this.top - radiusY;
      } else {
        t3 = _this.right;
        radiusX = scaled.trRadiusX;
        if (t1 > t3 - radiusX && point._dy < _this.top + scaled.trRadiusY) {
          x = t1 - t3 + radiusX;
          radiusY = scaled.trRadiusY;
          y = point._dy - _this.top - radiusY;
        } else {
          radiusX = scaled.brRadiusX;
          if (t1 > t3 - radiusX && point._dy > _this.bottom - scaled.brRadiusY) {
            x = t1 - t3 + radiusX;
            radiusY = scaled.brRadiusY;
            y = point._dy - _this.bottom + radiusY;
          } else {
            radiusX = scaled.blRadiusX;
            if (t1 < t2 + radiusX && point._dy > _this.bottom - scaled.blRadiusY) {
              x = t1 - t2 - radiusX;
              radiusY = scaled.blRadiusY;
              y = point._dy - _this.bottom + radiusY;
            } else
              return true;
          }
        }
      }
      x /= radiusX;
      y /= radiusY;
      if (x * x + y * y > 1)
        return false;
      return true;
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (H.getRuntimeType(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof P.RRect && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom && other.tlRadiusX === _this.tlRadiusX && other.tlRadiusY === _this.tlRadiusY && other.trRadiusX === _this.trRadiusX && other.trRadiusY === _this.trRadiusY && other.blRadiusX === _this.blRadiusX && other.blRadiusY === _this.blRadiusY && other.brRadiusX === _this.brRadiusX && other.brRadiusY === _this.brRadiusY;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.left, _this.top, _this.right, _this.bottom, _this.tlRadiusX, _this.tlRadiusY, _this.trRadiusX, _this.trRadiusY, _this.blRadiusX, _this.blRadiusY, _this.brRadiusX, _this.brRadiusY, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t5, t6, _this = this,
        rect = C.JSNumber_methods.toStringAsFixed$1(_this.left, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.top, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.right, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1),
        t1 = _this.tlRadiusX,
        t2 = _this.tlRadiusY,
        t3 = _this.trRadiusX,
        t4 = _this.trRadiusY;
      if (new P.Radius(t1, t2).$eq(0, new P.Radius(t3, t4))) {
        t5 = _this.brRadiusX;
        t6 = _this.brRadiusY;
        t5 = new P.Radius(t3, t4).$eq(0, new P.Radius(t5, t6)) && new P.Radius(t5, t6).$eq(0, new P.Radius(_this.blRadiusX, _this.blRadiusY));
      } else
        t5 = false;
      if (t5) {
        if (t1 === t2)
          return "RRect.fromLTRBR(" + rect + ", " + C.JSNumber_methods.toStringAsFixed$1(t1, 1) + ")";
        return "RRect.fromLTRBXY(" + rect + ", " + C.JSNumber_methods.toStringAsFixed$1(t1, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(t2, 1) + ")";
      }
      return "RRect.fromLTRBAndCorners(" + rect + ", topLeft: " + new P.Radius(t1, t2).toString$0(0) + ", topRight: " + new P.Radius(t3, t4).toString$0(0) + ", bottomRight: " + new P.Radius(_this.brRadiusX, _this.brRadiusY).toString$0(0) + ", bottomLeft: " + new P.Radius(_this.blRadiusX, _this.blRadiusY).toString$0(0) + ")";
    }
  };
  P._HashEnd.prototype = {};
  P.webOnlyInitializePlatform_closure.prototype = {
    call$0: function() {
      $.$get$lineLookup();
    },
    $signature: 0
  };
  P.KeyEventType.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.KeyData.prototype = {
    toString$0: function(_) {
      var _this = this;
      return "KeyData(type: " + H.S(P.KeyData__typeToString(_this.type)) + ", physical: 0x" + C.JSInt_methods.toRadixString$1(_this.physical, 16) + ", logical: 0x" + C.JSInt_methods.toRadixString$1(_this.logical, 16) + ", character: " + H.S(_this.character) + ")";
    }
  };
  P.Color.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof P.Color && other.get$value(other) === _this.get$value(_this);
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this.get$value(this));
    },
    toString$0: function(_) {
      return "Color(0x" + C.JSString_methods.padLeft$2(C.JSInt_methods.toRadixString$1(this.get$value(this), 16), 8, "0") + ")";
    },
    get$value: function(receiver) {
      return this.value;
    }
  };
  P.StrokeCap.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.StrokeJoin.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.PaintingStyle.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.BlendMode.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.Clip.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.BlurStyle.prototype = {
    toString$0: function(_) {
      return "BlurStyle.normal";
    }
  };
  P.MaskFilter.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.MaskFilter && other._ui$_style === this._ui$_style && other._sigma === this._sigma;
    },
    get$hashCode: function(_) {
      return P.hashValues(this._ui$_style, this._sigma, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "MaskFilter.blur(" + this._ui$_style.toString$0(0) + ", " + C.JSNumber_methods.toStringAsFixed$1(this._sigma, 1) + ")";
    }
  };
  P.FilterQuality.prototype = {
    toString$0: function(_) {
      return "FilterQuality.none";
    }
  };
  P.PlatformDispatcher.prototype = {};
  P.PlatformConfiguration.prototype = {
    copyWith$3$locales$platformBrightness$semanticsEnabled: function(locales, platformBrightness, semanticsEnabled) {
      var _this = this,
        t1 = semanticsEnabled == null ? _this.semanticsEnabled : semanticsEnabled,
        t2 = platformBrightness == null ? _this.platformBrightness : platformBrightness,
        t3 = locales == null ? _this.locales : locales;
      return new P.PlatformConfiguration(_this.accessibilityFeatures, false, t1, t2, _this.textScaleFactor, t3, _this.defaultRouteName);
    },
    copyWith$1$locales: function(locales) {
      return this.copyWith$3$locales$platformBrightness$semanticsEnabled(locales, null, null);
    },
    copyWith$1$semanticsEnabled: function(semanticsEnabled) {
      return this.copyWith$3$locales$platformBrightness$semanticsEnabled(null, null, semanticsEnabled);
    },
    copyWith$1$platformBrightness: function(platformBrightness) {
      return this.copyWith$3$locales$platformBrightness$semanticsEnabled(null, platformBrightness, null);
    }
  };
  P.ViewConfiguration.prototype = {
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "[window: null, geometry: " + C.Rect_0_0_0_0.toString$0(0) + "]";
    }
  };
  P.FrameTiming.prototype = {
    toString$0: function(_) {
      var t1 = this._timestamps;
      return H.getRuntimeType(this).toString$0(0) + "(buildDuration: " + (H.S((P.Duration$(t1[2], 0)._duration - P.Duration$(t1[1], 0)._duration) * 0.001) + "ms") + ", rasterDuration: " + (H.S((P.Duration$(t1[4], 0)._duration - P.Duration$(t1[3], 0)._duration) * 0.001) + "ms") + ", vsyncOverhead: " + (H.S((P.Duration$(t1[1], 0)._duration - P.Duration$(t1[0], 0)._duration) * 0.001) + "ms") + ", totalSpan: " + (H.S((P.Duration$(t1[4], 0)._duration - P.Duration$(t1[0], 0)._duration) * 0.001) + "ms") + ")";
    }
  };
  P.AppLifecycleState.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.Locale.prototype = {
    get$languageCode: function(_) {
      var t1 = this._languageCode,
        t2 = C.Map_YCOho.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    get$countryCode: function() {
      var t1 = this._countryCode,
        t2 = C.Map_0Agg9.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (other instanceof P.Locale)
        if (other.get$languageCode(other) === _this.get$languageCode(_this))
          t1 = other.get$countryCode() == _this.get$countryCode();
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.get$languageCode(this), null, this.get$countryCode(), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return this._rawToString$1("_");
    },
    _rawToString$1: function(separator) {
      var _this = this,
        t1 = _this.get$languageCode(_this);
      if (_this._countryCode != null)
        t1 += separator + H.S(_this.get$countryCode());
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P.PointerChange.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.PointerDeviceKind.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.PointerSignalKind.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.PointerData.prototype = {
    toString$0: function(_) {
      return "PointerData(x: " + H.S(this.physicalX) + ", y: " + H.S(this.physicalY) + ")";
    }
  };
  P.PointerDataPacket.prototype = {};
  P.SemanticsAction.prototype = {
    toString$0: function(_) {
      switch (this.index) {
        case 1:
          return "SemanticsAction.tap";
        case 2:
          return "SemanticsAction.longPress";
        case 4:
          return "SemanticsAction.scrollLeft";
        case 8:
          return "SemanticsAction.scrollRight";
        case 16:
          return "SemanticsAction.scrollUp";
        case 32:
          return "SemanticsAction.scrollDown";
        case 64:
          return "SemanticsAction.increase";
        case 128:
          return "SemanticsAction.decrease";
        case 256:
          return "SemanticsAction.showOnScreen";
        case 512:
          return "SemanticsAction.moveCursorForwardByCharacter";
        case 1024:
          return "SemanticsAction.moveCursorBackwardByCharacter";
        case 2048:
          return "SemanticsAction.setSelection";
        case 4096:
          return "SemanticsAction.copy";
        case 8192:
          return "SemanticsAction.cut";
        case 16384:
          return "SemanticsAction.paste";
        case 32768:
          return "SemanticsAction.didGainAccessibilityFocus";
        case 65536:
          return "SemanticsAction.didLoseAccessibilityFocus";
        case 131072:
          return "SemanticsAction.customAction";
        case 262144:
          return "SemanticsAction.dismiss";
        case 524288:
          return "SemanticsAction.moveCursorForwardByWord";
        case 1048576:
          return "SemanticsAction.moveCursorBackwardByWord";
        case 2097152:
          return "SemanticsAction.setText";
      }
      return "";
    }
  };
  P.SemanticsFlag.prototype = {
    toString$0: function(_) {
      switch (this.index) {
        case 1:
          return "SemanticsFlag.hasCheckedState";
        case 2:
          return "SemanticsFlag.isChecked";
        case 4:
          return "SemanticsFlag.isSelected";
        case 8:
          return "SemanticsFlag.isButton";
        case 4194304:
          return "SemanticsFlag.isLink";
        case 16:
          return "SemanticsFlag.isTextField";
        case 2097152:
          return "SemanticsFlag.isFocusable";
        case 32:
          return "SemanticsFlag.isFocused";
        case 64:
          return "SemanticsFlag.hasEnabledState";
        case 128:
          return "SemanticsFlag.isEnabled";
        case 256:
          return "SemanticsFlag.isInMutuallyExclusiveGroup";
        case 512:
          return "SemanticsFlag.isHeader";
        case 1024:
          return "SemanticsFlag.isObscured";
        case 2048:
          return "SemanticsFlag.scopesRoute";
        case 4096:
          return "SemanticsFlag.namesRoute";
        case 8192:
          return "SemanticsFlag.isHidden";
        case 16384:
          return "SemanticsFlag.isImage";
        case 32768:
          return "SemanticsFlag.isLiveRegion";
        case 65536:
          return "SemanticsFlag.hasToggledState";
        case 131072:
          return "SemanticsFlag.isToggled";
        case 262144:
          return "SemanticsFlag.hasImplicitScrolling";
        case 524288:
          return "SemanticsFlag.isMultiline";
        case 1048576:
          return "SemanticsFlag.isReadOnly";
        case 16777216:
          return "SemanticsFlag.isKeyboardKey";
      }
      return "";
    }
  };
  P.SemanticsUpdateBuilder.prototype = {};
  P.PlaceholderAlignment.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.FontWeight.prototype = {
    toString$0: function(_) {
      var t1 = C.Map_yXAeS.$index(0, this.index);
      t1.toString;
      return t1;
    }
  };
  P.TextAlign.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextBaseline.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextDecoration.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof P.TextDecoration && other._mask === this._mask;
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this._mask);
    },
    toString$0: function(_) {
      var values,
        t1 = this._mask;
      if (t1 === 0)
        return "TextDecoration.none";
      values = H.setRuntimeTypeInfo([], type$.JSArray_String);
      if ((t1 & 1) !== 0)
        values.push("underline");
      if ((t1 & 2) !== 0)
        values.push("overline");
      if ((t1 & 4) !== 0)
        values.push("lineThrough");
      if (values.length === 1)
        return "TextDecoration." + values[0];
      return "TextDecoration.combine([" + C.JSArray_methods.join$1(values, ", ") + "])";
    }
  };
  P.TextDecorationStyle.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextDirection.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextBox.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof P.TextBox && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom && other.direction === _this.direction;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.left, _this.top, _this.right, _this.bottom, _this.direction, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this;
      return "TextBox.fromLTRBD(" + C.JSNumber_methods.toStringAsFixed$1(_this.left, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.top, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.right, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1) + ", " + _this.direction.toString$0(0) + ")";
    }
  };
  P.TextAffinity.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.TextPosition.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof P.TextPosition && other.offset === this.offset && other.affinity === this.affinity;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.offset, this.affinity, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "(offset: " + this.offset + ", affinity: " + this.affinity.toString$0(0) + ")";
    }
  };
  P.TextRange.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof P.TextRange && other.start === this.start && other.end === this.end;
    },
    get$hashCode: function(_) {
      return P.hashValues(C.JSInt_methods.get$hashCode(this.start), C.JSInt_methods.get$hashCode(this.end), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "TextRange(start: " + this.start + ", end: " + this.end + ")";
    }
  };
  P.ParagraphConstraints.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof P.ParagraphConstraints && other.width === this.width;
    },
    get$hashCode: function(_) {
      return C.JSNumber_methods.get$hashCode(this.width);
    },
    toString$0: function(_) {
      return H.getRuntimeType(this).toString$0(0) + "(width: " + H.S(this.width) + ")";
    }
  };
  P.BoxHeightStyle.prototype = {
    toString$0: function(_) {
      return "BoxHeightStyle.tight";
    }
  };
  P.BoxWidthStyle.prototype = {
    toString$0: function(_) {
      return "BoxWidthStyle.tight";
    }
  };
  P.TileMode.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.FlutterView.prototype = {};
  P.FlutterWindow.prototype = {};
  P.SingletonFlutterWindow.prototype = {};
  P.AccessibilityFeatures.prototype = {
    toString$0: function(_) {
      var features = H.setRuntimeTypeInfo([], type$.JSArray_String);
      return "AccessibilityFeatures" + H.S(features);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof P.AccessibilityFeatures && true;
    },
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(0);
    }
  };
  P.Brightness.prototype = {
    toString$0: function(_) {
      return this._ui$_name;
    }
  };
  P.CallbackHandle.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$hashCode: function(_) {
      return P.Object.prototype.get$hashCode.call(this, this);
    }
  };
  P.PlatformViewRegistry.prototype = {};
  P.AudioBuffer.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.AudioParamMap.prototype = {
    containsKey$1: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index: function(receiver, key) {
      return P.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1: function(receiver, f) {
      var entry,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        if (entry.done)
          return;
        f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys: function(receiver) {
      var keys = H.setRuntimeTypeInfo([], type$.JSArray_String);
      this.forEach$1(receiver, new P.AudioParamMap_keys_closure(keys));
      return keys;
    },
    get$values: function(receiver) {
      var values = H.setRuntimeTypeInfo([], type$.JSArray_Map_dynamic_dynamic);
      this.forEach$1(receiver, new P.AudioParamMap_values_closure(values));
      return values;
    },
    get$length: function(receiver) {
      return receiver.size;
    },
    get$isEmpty: function(receiver) {
      return receiver.size === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.size !== 0;
    },
    $indexSet: function(receiver, key, value) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    putIfAbsent$2: function(receiver, key, ifAbsent) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    remove$1: function(receiver, key) {
      throw H.wrapException(P.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  P.AudioParamMap_keys_closure.prototype = {
    call$2: function(k, v) {
      return this.keys.push(k);
    },
    $signature: 9
  };
  P.AudioParamMap_values_closure.prototype = {
    call$2: function(k, v) {
      return this.values.push(v);
    },
    $signature: 9
  };
  P.AudioTrackList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P.BaseAudioContext.prototype = {};
  P.OfflineAudioContext.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    }
  };
  P._AudioParamMap_Interceptor_MapMixin.prototype = {};
  P.ActiveInfo.prototype = {
    get$name: function(receiver) {
      return receiver.name;
    }
  };
  P.SqlResultSetRowList.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      var t1;
      if (index >>> 0 !== index || index >= receiver.length)
        throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
      t1 = P.convertNativeToDart_Dictionary(receiver.item(index));
      t1.toString;
      return t1;
    },
    $indexSet: function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(P.StateError$("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(P.StateError$("No elements"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  P._SqlResultSetRowList_Interceptor_ListMixin.prototype = {};
  P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin.prototype = {};
  Y.HeapPriorityQueue.prototype = {
    _elementAt$1: function(index) {
      var t1 = this._priority_queue$_queue[index];
      return t1 == null ? this.$ti._precomputed1._as(null) : t1;
    },
    add$1: function(_, element) {
      var t1, t2, newCapacity, newQueue, _this = this;
      ++_this._priority_queue$_modificationCount;
      t1 = _this._priority_queue$_length;
      t2 = _this._priority_queue$_queue.length;
      if (t1 === t2) {
        newCapacity = t2 * 2 + 1;
        if (newCapacity < 7)
          newCapacity = 7;
        newQueue = P.List_List$filled(newCapacity, null, false, _this.$ti._eval$1("1?"));
        C.JSArray_methods.setRange$3(newQueue, 0, _this._priority_queue$_length, _this._priority_queue$_queue);
        _this._priority_queue$_queue = newQueue;
      }
      _this._bubbleUp$2(element, _this._priority_queue$_length++);
    },
    get$length: function(_) {
      return this._priority_queue$_length;
    },
    toString$0: function(_) {
      var t1 = this._priority_queue$_queue;
      return P.IterableBase_iterableToShortString(H.SubListIterable$(t1, 0, H.checkNotNullable(this._priority_queue$_length, "count", type$.int), H._arrayInstanceType(t1)._precomputed1), "(", ")");
    },
    _bubbleUp$2: function(element, index) {
      var t1, t2, parentIndex, $parent, _this = this;
      for (t1 = _this.comparison, t2 = _this.$ti._precomputed1; index > 0; index = parentIndex) {
        parentIndex = C.JSInt_methods._tdivFast$1(index - 1, 2);
        $parent = _this._priority_queue$_queue[parentIndex];
        if ($parent == null)
          $parent = t2._as(null);
        if (t1.call$2(element, $parent) > 0)
          break;
        C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, $parent);
      }
      C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, element);
    },
    _bubbleDown$2: function(element, index) {
      var t1, t2, t3, leftChildIndex, leftChild, rightChild, minChild, minChildIndex, child, _this = this,
        rightChildIndex = index * 2 + 2;
      for (t1 = _this.comparison, t2 = _this.$ti._precomputed1; t3 = _this._priority_queue$_length, rightChildIndex < t3; index = minChildIndex) {
        leftChildIndex = rightChildIndex - 1;
        t3 = _this._priority_queue$_queue;
        leftChild = t3[leftChildIndex];
        if (leftChild == null)
          leftChild = t2._as(null);
        rightChild = t3[rightChildIndex];
        if (rightChild == null)
          rightChild = t2._as(null);
        if (t1.call$2(leftChild, rightChild) < 0) {
          minChild = leftChild;
          minChildIndex = leftChildIndex;
        } else {
          minChild = rightChild;
          minChildIndex = rightChildIndex;
        }
        if (t1.call$2(element, minChild) <= 0) {
          C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, element);
          return;
        }
        C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, minChild);
        rightChildIndex = minChildIndex * 2 + 2;
      }
      leftChildIndex = rightChildIndex - 1;
      if (leftChildIndex < t3) {
        child = _this._elementAt$1(leftChildIndex);
        if (t1.call$2(element, child) > 0) {
          C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, child);
          index = leftChildIndex;
        }
      }
      C.JSArray_methods.$indexSet(_this._priority_queue$_queue, index, element);
    }
  };
  F.MyApp.prototype = {
    build$1: function(_, context) {
      return new S.MaterialApp("Flutter Demo", X.ThemeData_ThemeData(null, C.MaterialColor_Map_JNwaj_4280391411), null);
    }
  };
  X.AnimationStatus.prototype = {
    toString$0: function(_) {
      return this._animation$_name;
    }
  };
  X.Animation0.prototype = {
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(" + H.S(this.toStringDetails$0()) + ")";
    },
    toStringDetails$0: function() {
      switch (this.get$status(this)) {
        case C.AnimationStatus_1:
          return "\u25b6";
        case C.AnimationStatus_2:
          return "\u25c0";
        case C.AnimationStatus_3:
          return "\u23ed";
        case C.AnimationStatus_0:
          return "\u23ee";
      }
    }
  };
  G._AnimationDirection.prototype = {
    toString$0: function(_) {
      return this._animation_controller$_name;
    }
  };
  G.AnimationBehavior.prototype = {
    toString$0: function(_) {
      return this._animation_controller$_name;
    }
  };
  G.AnimationController.prototype = {
    get$value: function(_) {
      return this.get$_animation_controller$_value();
    },
    get$_animation_controller$_value: function() {
      var t1 = this.__AnimationController__value;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_value")) : t1;
    },
    set$value: function(_, newValue) {
      var _this = this;
      _this.stop$0(0);
      _this._internalSetValue$1(newValue);
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    _internalSetValue$1: function(newValue) {
      var _this = this;
      _this.__AnimationController__value = C.JSNumber_methods.clamp$2(newValue, 0, 1);
      if (_this.get$_animation_controller$_value() === 0)
        _this.__AnimationController__status = C.AnimationStatus_0;
      else if (_this.get$_animation_controller$_value() === 1)
        _this.__AnimationController__status = C.AnimationStatus_3;
      else
        _this.__AnimationController__status = _this._direction === C._AnimationDirection_0 ? C.AnimationStatus_1 : C.AnimationStatus_2;
    },
    get$status: function(_) {
      var t1 = this.__AnimationController__status;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_status")) : t1;
    },
    get$_animation_controller$_status: function() {
      var t1 = this.__AnimationController__status;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_status")) : t1;
    },
    forward$0: function(_) {
      this._direction = C._AnimationDirection_0;
      return this._animateToInternal$1(1);
    },
    reverse$1$from: function(_, from) {
      this._direction = C._AnimationDirection_1;
      return this._animateToInternal$1(0);
    },
    reverse$0: function($receiver) {
      return this.reverse$1$from($receiver, null);
    },
    _animateToInternal$3$curve$duration: function(target, curve, duration) {
      var remainingFraction, t1, directionDuration, simulationDuration, t2, t3, _this = this;
      if ($.SemanticsBinding__instance.SemanticsBinding___SemanticsBinding__accessibilityFeatures == null)
        H.throwExpression(H.LateError$fieldNI("_accessibilityFeatures"));
      if (duration == null) {
        remainingFraction = isFinite(1) ? Math.abs(target - _this.get$_animation_controller$_value()) / 1 : 1;
        if (_this._direction === C._AnimationDirection_1 && _this.reverseDuration != null) {
          t1 = _this.reverseDuration;
          t1.toString;
          directionDuration = t1;
        } else
          directionDuration = _this.duration;
        simulationDuration = new P.Duration(C.JSNumber_methods.round$0(directionDuration._duration * remainingFraction));
      } else
        simulationDuration = target === _this.get$_animation_controller$_value() ? C.Duration_0 : duration;
      _this.stop$0(0);
      t1 = simulationDuration._duration;
      if (t1 === C.Duration_0._duration) {
        if (_this.get$_animation_controller$_value() !== target) {
          _this.__AnimationController__value = C.JSInt_methods.clamp$2(target, 0, 1);
          _this.notifyListeners$0();
        }
        _this.__AnimationController__status = _this._direction === C._AnimationDirection_0 ? C.AnimationStatus_3 : C.AnimationStatus_0;
        _this._checkStatusChanged$0();
        return M.TickerFuture$complete();
      }
      t1 = new G._InterpolationSimulation(t1 / 1000000, _this.get$_animation_controller$_value(), target, curve);
      _this._simulation = t1;
      _this.__AnimationController__value = C.JSNumber_methods.clamp$2(t1.x$1(0, 0), 0, 1);
      t1 = _this._ticker;
      t1._ticker$_future = new M.TickerFuture(new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      if (!t1._muted)
        t2 = t1._animationId == null;
      else
        t2 = false;
      if (t2) {
        t2 = $.SchedulerBinding__instance;
        t2.toString;
        t1._animationId = t2.scheduleFrameCallback$2$rescheduling(t1.get$_ticker$_tick(), false);
      }
      t2 = $.SchedulerBinding__instance;
      t3 = t2.SchedulerBinding__schedulerPhase.index;
      if (t3 > 0 && t3 < 4) {
        t2 = t2.SchedulerBinding__currentFrameTimeStamp;
        t2.toString;
        t1._startTime = t2;
      }
      t1 = t1._ticker$_future;
      t1.toString;
      _this.__AnimationController__status = _this._direction === C._AnimationDirection_0 ? C.AnimationStatus_1 : C.AnimationStatus_2;
      _this._checkStatusChanged$0();
      return t1;
    },
    _animateToInternal$1: function(target) {
      return this._animateToInternal$3$curve$duration(target, C.C__Linear, null);
    },
    stop$1$canceled: function(_, canceled) {
      this._simulation = null;
      this._ticker.stop$1$canceled(0, canceled);
    },
    stop$0: function($receiver) {
      return this.stop$1$canceled($receiver, true);
    },
    dispose$0: function(_) {
      this._ticker.dispose$0(0);
      this._ticker = null;
      this.super$AnimationEagerListenerMixin$dispose(0);
    },
    _checkStatusChanged$0: function() {
      var _this = this,
        newStatus = _this.get$_animation_controller$_status();
      if (_this._lastReportedStatus !== newStatus) {
        _this._lastReportedStatus = newStatus;
        _this.notifyStatusListeners$1(newStatus);
      }
    },
    _animation_controller$_tick$1: function(elapsed) {
      var _this = this,
        elapsedInSeconds = elapsed._duration / 1000000;
      _this.__AnimationController__value = C.JSNumber_methods.clamp$2(_this._simulation.x$1(0, elapsedInSeconds), 0, 1);
      if (elapsedInSeconds > _this._simulation._durationInSeconds) {
        _this.__AnimationController__status = _this._direction === C._AnimationDirection_0 ? C.AnimationStatus_3 : C.AnimationStatus_0;
        _this.stop$1$canceled(0, false);
      }
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    toStringDetails$0: function() {
      var ticker, label, _this = this,
        t1 = _this._ticker,
        t2 = t1 == null,
        paused = !t2 && t1._ticker$_future != null ? "" : "; paused";
      if (t2)
        ticker = "; DISPOSED";
      else
        ticker = t1._muted ? "; silenced" : "";
      t1 = _this.debugLabel;
      label = t1 == null ? "" : "; for " + t1;
      return H.S(_this.super$Animation$toStringDetails()) + " " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_animation_controller$_value(), 3) + paused + ticker + label;
    }
  };
  G._InterpolationSimulation.prototype = {
    x$1: function(_, timeInSeconds) {
      var t1, t2, _this = this,
        t = C.JSNumber_methods.clamp$2(timeInSeconds / _this._durationInSeconds, 0, 1);
      if (t === 0)
        return _this._begin;
      else {
        t1 = _this._animation_controller$_end;
        if (t === 1)
          return t1;
        else {
          t2 = _this._begin;
          return t2 + (t1 - t2) * _this._curve.transform$1(0, t);
        }
      }
    }
  };
  G._AnimationController_Animation_AnimationEagerListenerMixin.prototype = {};
  G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin.prototype = {};
  G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  S._AlwaysCompleteAnimation.prototype = {
    addListener$1: function(_, listener) {
    },
    removeListener$1: function(_, listener) {
    },
    addStatusListener$1: function(listener) {
    },
    removeStatusListener$1: function(listener) {
    },
    get$status: function(_) {
      return C.AnimationStatus_3;
    },
    get$value: function(_) {
      return 1;
    },
    toString$0: function(_) {
      return "kAlwaysCompleteAnimation";
    }
  };
  S._AlwaysDismissedAnimation.prototype = {
    addListener$1: function(_, listener) {
    },
    removeListener$1: function(_, listener) {
    },
    addStatusListener$1: function(listener) {
    },
    removeStatusListener$1: function(listener) {
    },
    get$status: function(_) {
      return C.AnimationStatus_0;
    },
    get$value: function(_) {
      return 0;
    },
    toString$0: function(_) {
      return "kAlwaysDismissedAnimation";
    }
  };
  S.AnimationWithParentMixin.prototype = {
    addListener$1: function(_, listener) {
      return this.get$parent(this).addListener$1(0, listener);
    },
    removeListener$1: function(_, listener) {
      return this.get$parent(this).removeListener$1(0, listener);
    },
    addStatusListener$1: function(listener) {
      return this.get$parent(this).addStatusListener$1(listener);
    },
    removeStatusListener$1: function(listener) {
      return this.get$parent(this).removeStatusListener$1(listener);
    },
    get$status: function(_) {
      var t1 = this.get$parent(this);
      return t1.get$status(t1);
    }
  };
  S.ProxyAnimation.prototype = {
    set$parent: function(_, value) {
      var t2, _this = this,
        t1 = _this._animations$_parent;
      if (value == t1)
        return;
      if (t1 != null) {
        _this._status = t1.get$status(t1);
        t1 = _this._animations$_parent;
        _this._animations$_value = t1.get$value(t1);
        if (_this.AnimationLazyListenerMixin__listenerCounter > 0)
          _this.didStopListening$0();
      }
      _this._animations$_parent = value;
      if (value != null) {
        if (_this.AnimationLazyListenerMixin__listenerCounter > 0)
          _this.didStartListening$0();
        t1 = _this._animations$_value;
        t2 = _this._animations$_parent;
        t2 = t2.get$value(t2);
        if (t1 == null ? t2 != null : t1 !== t2)
          _this.notifyListeners$0();
        t1 = _this._status;
        t2 = _this._animations$_parent;
        if (t1 != t2.get$status(t2)) {
          t1 = _this._animations$_parent;
          _this.notifyStatusListeners$1(t1.get$status(t1));
        }
        _this._animations$_value = _this._status = null;
      }
    },
    didStartListening$0: function() {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 != null) {
        t1.addListener$1(0, _this.get$notifyListeners());
        _this._animations$_parent.addStatusListener$1(_this.get$notifyStatusListeners());
      }
    },
    didStopListening$0: function() {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 != null) {
        t1.removeListener$1(0, _this.get$notifyListeners());
        _this._animations$_parent.removeStatusListener$1(_this.get$notifyStatusListeners());
      }
    },
    get$status: function(_) {
      var t1 = this._animations$_parent;
      if (t1 != null)
        t1 = t1.get$status(t1);
      else {
        t1 = this._status;
        t1.toString;
      }
      return t1;
    },
    get$value: function(_) {
      var t1 = this._animations$_parent;
      if (t1 != null)
        t1 = t1.get$value(t1);
      else {
        t1 = this._animations$_value;
        t1.toString;
      }
      return t1;
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this._animations$_parent;
      if (t1 == null)
        return "ProxyAnimation(null; " + H.S(_this.super$Animation$toStringDetails()) + " " + C.JSNumber_methods.toStringAsFixed$1(_this.get$value(_this), 3) + ")";
      return t1.toString$0(0) + "\u27a9ProxyAnimation";
    }
  };
  S.ReverseAnimation.prototype = {
    addListener$1: function(_, listener) {
      this.didRegisterListener$0();
      this.parent.parent.addListener$1(0, listener);
    },
    removeListener$1: function(_, listener) {
      this.parent.parent.removeListener$1(0, listener);
      this.didUnregisterListener$0();
    },
    didStartListening$0: function() {
      this.parent.parent.addStatusListener$1(this.get$_statusChangeHandler());
    },
    didStopListening$0: function() {
      this.parent.parent.removeStatusListener$1(this.get$_statusChangeHandler());
    },
    _statusChangeHandler$1: function($status) {
      this.notifyStatusListeners$1(this._reverseStatus$1($status));
    },
    get$status: function(_) {
      var t1 = this.parent.parent;
      return this._reverseStatus$1(t1.get$status(t1));
    },
    get$value: function(_) {
      var t1 = this.parent;
      return 1 - t1.get$value(t1);
    },
    _reverseStatus$1: function($status) {
      switch ($status) {
        case C.AnimationStatus_1:
          return C.AnimationStatus_2;
        case C.AnimationStatus_2:
          return C.AnimationStatus_1;
        case C.AnimationStatus_3:
          return C.AnimationStatus_0;
        case C.AnimationStatus_0:
          return C.AnimationStatus_3;
      }
    },
    toString$0: function(_) {
      return this.parent.toString$0(0) + "\u27aaReverseAnimation";
    }
  };
  S.CurvedAnimation.prototype = {
    _updateCurveDirection$1: function($status) {
      var _this = this;
      switch ($status) {
        case C.AnimationStatus_0:
        case C.AnimationStatus_3:
          _this._curveDirection = null;
          break;
        case C.AnimationStatus_1:
          if (_this._curveDirection == null)
            _this._curveDirection = C.AnimationStatus_1;
          break;
        case C.AnimationStatus_2:
          if (_this._curveDirection == null)
            _this._curveDirection = C.AnimationStatus_2;
          break;
      }
    },
    get$_useForwardCurve: function() {
      if (this.reverseCurve != null) {
        var t1 = this._curveDirection;
        if (t1 == null) {
          t1 = this.parent;
          t1 = t1.get$status(t1);
        }
        t1 = t1 !== C.AnimationStatus_2;
      } else
        t1 = true;
      return t1;
    },
    get$value: function(_) {
      var _this = this,
        activeCurve = _this.get$_useForwardCurve() ? _this.curve : _this.reverseCurve,
        t1 = _this.parent,
        t = t1.get$value(t1);
      if (activeCurve == null)
        return t;
      if (t === 0 || t === 1)
        return t;
      return activeCurve.transform$1(0, t);
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this.reverseCurve;
      if (t1 == null)
        return _this.parent.toString$0(0) + "\u27a9" + _this.curve.toString$0(0);
      if (_this.get$_useForwardCurve())
        return _this.parent.toString$0(0) + "\u27a9" + _this.curve.toString$0(0) + "\u2092\u2099/" + t1.toString$0(0);
      return _this.parent.toString$0(0) + "\u27a9" + _this.curve.toString$0(0) + "/" + t1.toString$0(0) + "\u2092\u2099";
    },
    get$parent: function(receiver) {
      return this.parent;
    }
  };
  S._TrainHoppingMode.prototype = {
    toString$0: function(_) {
      return this._animations$_name;
    }
  };
  S.TrainHoppingAnimation.prototype = {
    _statusChangeHandler$1: function($status) {
      if ($status !== this._lastStatus) {
        this.notifyListeners$0();
        this._lastStatus = $status;
      }
    },
    get$status: function(_) {
      var t1 = this._currentTrain;
      return t1.get$status(t1);
    },
    _valueChangeHandler$0: function() {
      var t2, hop, _this = this,
        t1 = _this._nextTrain;
      if (t1 != null) {
        t2 = _this._mode;
        t2.toString;
        switch (t2) {
          case C._TrainHoppingMode_0:
            t1 = t1.get$_animation_controller$_value();
            t2 = _this._currentTrain;
            hop = t1 <= t2.get$value(t2);
            break;
          case C._TrainHoppingMode_1:
            t1 = t1.get$_animation_controller$_value();
            t2 = _this._currentTrain;
            hop = t1 >= t2.get$value(t2);
            break;
          default:
            hop = false;
        }
        if (hop) {
          t1 = _this._currentTrain;
          t2 = _this.get$_statusChangeHandler();
          t1.removeStatusListener$1(t2);
          t1.removeListener$1(0, _this.get$_valueChangeHandler());
          t1 = _this._nextTrain;
          _this._currentTrain = t1;
          _this._nextTrain = null;
          t1.addStatusListener$1(t2);
          t2 = _this._currentTrain;
          _this._statusChangeHandler$1(t2.get$status(t2));
        }
      } else
        hop = false;
      t1 = _this._currentTrain;
      t1 = t1.get$value(t1);
      if (t1 !== _this._lastValue) {
        _this.notifyListeners$0();
        _this._lastValue = t1;
      }
      if (hop && true)
        _this.onSwitchedTrain.call$0();
    },
    get$value: function(_) {
      var t1 = this._currentTrain;
      return t1.get$value(t1);
    },
    dispose$0: function(_) {
      var t1, t2, _this = this;
      _this._currentTrain.removeStatusListener$1(_this.get$_statusChangeHandler());
      t1 = _this.get$_valueChangeHandler();
      _this._currentTrain.removeListener$1(0, t1);
      _this._currentTrain = null;
      t2 = _this._nextTrain;
      if (t2 != null)
        t2.removeListener$1(0, t1);
      _this._nextTrain = null;
      _this.super$AnimationEagerListenerMixin$dispose(0);
    },
    toString$0: function(_) {
      var _this = this;
      if (_this._nextTrain != null)
        return H.S(_this._currentTrain) + "\u27a9TrainHoppingAnimation(next: " + H.S(_this._nextTrain) + ")";
      return H.S(_this._currentTrain) + "\u27a9TrainHoppingAnimation(no next)";
    }
  };
  S._CurvedAnimation_Animation_AnimationWithParentMixin.prototype = {};
  S._ProxyAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin.prototype = {};
  S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  S._ReverseAnimation_Animation_AnimationLazyListenerMixin.prototype = {};
  S._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin.prototype = {};
  S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin.prototype = {};
  S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin.prototype = {};
  S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  Z.ParametricCurve.prototype = {
    transform$1: function(_, t) {
      return this.transformInternal$1(t);
    },
    transformInternal$1: function(t) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    toString$0: function(_) {
      return "ParametricCurve";
    }
  };
  Z.Curve.prototype = {
    transform$1: function(_, t) {
      if (t === 0 || t === 1)
        return t;
      return this.super$ParametricCurve$transform(0, t);
    }
  };
  Z._Linear.prototype = {
    transformInternal$1: function(t) {
      return t;
    }
  };
  Z.Interval.prototype = {
    transformInternal$1: function(t) {
      var t1 = this.begin;
      t = C.JSNumber_methods.clamp$2((t - t1) / (this.end - t1), 0, 1);
      if (t === 0 || t === 1)
        return t;
      return C.C__Linear.transform$1(0, t);
    },
    toString$0: function(_) {
      return "Interval(" + H.S(this.begin) + "\u22ef" + this.end + ")";
    }
  };
  Z.Cubic.prototype = {
    _evaluateCubic$3: function(a, b, m) {
      var t1 = 1 - m;
      return 3 * a * t1 * t1 * m + 3 * b * t1 * m * m + m * m * m;
    },
    transformInternal$1: function(t) {
      var t1, t2, start, end, midpoint, estimate, _this = this;
      for (t1 = _this.a, t2 = _this.c, start = 0, end = 1; true;) {
        midpoint = (start + end) / 2;
        estimate = _this._evaluateCubic$3(t1, t2, midpoint);
        if (Math.abs(t - estimate) < 0.001)
          return _this._evaluateCubic$3(_this.b, _this.d, midpoint);
        if (estimate < t)
          start = midpoint;
        else
          end = midpoint;
      }
    },
    toString$0: function(_) {
      var _this = this;
      return "Cubic(" + C.JSNumber_methods.toStringAsFixed$1(_this.a, 2) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.b, 2) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.c, 2) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.d, 2) + ")";
    }
  };
  Z.FlippedCurve.prototype = {
    transformInternal$1: function(t) {
      return 1 - this.curve.transform$1(0, 1 - t);
    },
    toString$0: function(_) {
      return "FlippedCurve(" + this.curve.toString$0(0) + ")";
    }
  };
  S.AnimationLazyListenerMixin.prototype = {
    didRegisterListener$0: function() {
      if (this.AnimationLazyListenerMixin__listenerCounter === 0)
        this.didStartListening$0();
      ++this.AnimationLazyListenerMixin__listenerCounter;
    },
    didUnregisterListener$0: function() {
      if (--this.AnimationLazyListenerMixin__listenerCounter === 0)
        this.didStopListening$0();
    }
  };
  S.AnimationEagerListenerMixin.prototype = {
    didRegisterListener$0: function() {
    },
    didUnregisterListener$0: function() {
    },
    dispose$0: function(_) {
    }
  };
  S.AnimationLocalListenersMixin.prototype = {
    addListener$1: function(_, listener) {
      var t1;
      this.didRegisterListener$0();
      t1 = this.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(listener);
    },
    removeListener$1: function(_, listener) {
      if (this.AnimationLocalListenersMixin__listeners.remove$1(0, listener))
        this.didUnregisterListener$0();
    },
    notifyListeners$0: function() {
      var listener, exception, stack, t2, _i, exception0, rti, t3, t4, _this = this,
        t1 = _this.AnimationLocalListenersMixin__listeners,
        localListeners = P.List_List$from(t1, true, type$.void_Function);
      for (t2 = localListeners.length, _i = 0; _i < t2; ++_i) {
        listener = localListeners[_i];
        try {
          if (t1.contains$1(0, listener))
            listener.call$0();
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          rti = _this instanceof H.Closure ? H.closureFunctionType(_this) : null;
          t3 = U.ErrorDescription$("while notifying listeners for " + H.createRuntimeType(rti == null ? H.instanceType(_this) : rti).toString$0(0));
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new U.FlutterErrorDetails(exception, stack, "animation library", t3, null, false));
        }
      }
    }
  };
  S.AnimationLocalStatusListenersMixin.prototype = {
    addStatusListener$1: function(listener) {
      var t1;
      this.didRegisterListener$0();
      t1 = this.AnimationLocalStatusListenersMixin__statusListeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(listener);
    },
    removeStatusListener$1: function(listener) {
      if (this.AnimationLocalStatusListenersMixin__statusListeners.remove$1(0, listener))
        this.didUnregisterListener$0();
    },
    notifyStatusListeners$1: function($status) {
      var listener, exception, stack, t2, _i, exception0, rti, t3, t4, _this = this,
        t1 = _this.AnimationLocalStatusListenersMixin__statusListeners,
        localListeners = P.List_List$from(t1, true, type$.void_Function_AnimationStatus);
      for (t2 = localListeners.length, _i = 0; _i < t2; ++_i) {
        listener = localListeners[_i];
        try {
          if (t1.contains$1(0, listener))
            listener.call$1($status);
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          rti = _this instanceof H.Closure ? H.closureFunctionType(_this) : null;
          t3 = U.ErrorDescription$("while notifying status listeners for " + H.createRuntimeType(rti == null ? H.instanceType(_this) : rti).toString$0(0));
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new U.FlutterErrorDetails(exception, stack, "animation library", t3, null, false));
        }
      }
    }
  };
  R.Animatable.prototype = {};
  R._AnimatedEvaluation.prototype = {
    get$value: function(_) {
      var t1 = this.parent;
      return this._evaluatable.transform$1(0, t1.get$value(t1));
    },
    toString$0: function(_) {
      var t1 = this.parent,
        t2 = this._evaluatable;
      return t1.toString$0(0) + "\u27a9" + t2.toString$0(0) + "\u27a9" + H.S(t2.transform$1(0, t1.get$value(t1)));
    },
    toStringDetails$0: function() {
      return H.S(this.super$Animation$toStringDetails()) + " " + this._evaluatable.toString$0(0);
    },
    get$parent: function(receiver) {
      return this.parent;
    }
  };
  R._ChainedEvaluation.prototype = {
    transform$1: function(_, t) {
      return this._evaluatable.transform$1(0, this._tween$_parent.transform$1(0, t));
    },
    toString$0: function(_) {
      return this._tween$_parent.toString$0(0) + "\u27a9" + this._evaluatable.toString$0(0);
    }
  };
  R.Tween.prototype = {
    lerp$1: function(t) {
      var t1 = this.begin;
      return H._instanceType(this)._eval$1("Tween.T")._as(J.$add$ansx(t1, J.$mul$ns(J.$sub$n(this.end, t1), t)));
    },
    transform$1: function(_, t) {
      var _this = this;
      if (t === 0)
        return H._instanceType(_this)._eval$1("Tween.T")._as(_this.begin);
      if (t === 1)
        return H._instanceType(_this)._eval$1("Tween.T")._as(_this.end);
      return _this.lerp$1(t);
    },
    toString$0: function(_) {
      return "Animatable(" + H.S(this.begin) + " \u2192 " + H.S(this.end) + ")";
    },
    set$begin: function(val) {
      return this.begin = val;
    },
    set$end: function(receiver, val) {
      return this.end = val;
    }
  };
  R.ReverseTween.prototype = {
    lerp$1: function(t) {
      return this.parent.lerp$1(1 - t);
    }
  };
  R.ColorTween.prototype = {
    lerp$1: function(t) {
      return P.Color_lerp(this.begin, this.end, t);
    }
  };
  R.RectTween.prototype = {
    lerp$1: function(t) {
      return P.Rect_lerp(this.begin, this.end, t);
    }
  };
  R.IntTween.prototype = {
    lerp$1: function(t) {
      var t2,
        t1 = this.begin;
      t1.toString;
      t2 = this.end;
      t2.toString;
      return C.JSNumber_methods.round$0(t1 + (t2 - t1) * t);
    }
  };
  R.CurveTween.prototype = {
    transform$1: function(_, t) {
      if (t === 0 || t === 1)
        return t;
      return this.curve.transform$1(0, t);
    },
    toString$0: function(_) {
      return "CurveTween(curve: " + this.curve.toString$0(0) + ")";
    }
  };
  R.__AnimatedEvaluation_Animation_AnimationWithParentMixin.prototype = {};
  E.CupertinoDynamicColor.prototype = {
    get$value: function(_) {
      return this._effectiveColor.value;
    },
    get$_isPlatformBrightnessDependent: function() {
      var _this = this;
      return !_this.color.$eq(0, _this.darkColor) || !_this.elevatedColor.$eq(0, _this.darkElevatedColor) || !_this.highContrastColor.$eq(0, _this.darkHighContrastColor) || !_this.highContrastElevatedColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    get$_isHighContrastDependent: function() {
      var _this = this;
      return !_this.color.$eq(0, _this.highContrastColor) || !_this.darkColor.$eq(0, _this.darkHighContrastColor) || !_this.elevatedColor.$eq(0, _this.highContrastElevatedColor) || !_this.darkElevatedColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    get$_isInterfaceElevationDependent: function() {
      var _this = this;
      return !_this.color.$eq(0, _this.elevatedColor) || !_this.darkColor.$eq(0, _this.darkElevatedColor) || !_this.highContrastColor.$eq(0, _this.highContrastElevatedColor) || !_this.darkHighContrastColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof E.CupertinoDynamicColor && other._effectiveColor.value === _this._effectiveColor.value && other.color.$eq(0, _this.color) && other.darkColor.$eq(0, _this.darkColor) && other.highContrastColor.$eq(0, _this.highContrastColor) && other.darkHighContrastColor.$eq(0, _this.darkHighContrastColor) && other.elevatedColor.$eq(0, _this.elevatedColor) && other.darkElevatedColor.$eq(0, _this.darkElevatedColor) && other.highContrastElevatedColor.$eq(0, _this.highContrastElevatedColor) && other.darkHighContrastElevatedColor.$eq(0, _this.darkHighContrastElevatedColor);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this._effectiveColor.value, _this.color, _this.darkColor, _this.highContrastColor, _this.elevatedColor, _this.darkElevatedColor, _this.darkHighContrastColor, _this.darkHighContrastElevatedColor, _this.highContrastElevatedColor, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this,
        t1 = new E.CupertinoDynamicColor_toString_toString(_this),
        t2 = H.setRuntimeTypeInfo([t1.call$2("color", _this.color)], type$.JSArray_String);
      if (_this.get$_isPlatformBrightnessDependent())
        t2.push(t1.call$2("darkColor", _this.darkColor));
      if (_this.get$_isHighContrastDependent())
        t2.push(t1.call$2("highContrastColor", _this.highContrastColor));
      if (_this.get$_isPlatformBrightnessDependent() && _this.get$_isHighContrastDependent())
        t2.push(t1.call$2("darkHighContrastColor", _this.darkHighContrastColor));
      if (_this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("elevatedColor", _this.elevatedColor));
      if (_this.get$_isPlatformBrightnessDependent() && _this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("darkElevatedColor", _this.darkElevatedColor));
      if (_this.get$_isHighContrastDependent() && _this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("highContrastElevatedColor", _this.highContrastElevatedColor));
      if (_this.get$_isPlatformBrightnessDependent() && _this.get$_isHighContrastDependent() && _this.get$_isInterfaceElevationDependent())
        t2.push(t1.call$2("darkHighContrastElevatedColor", _this.darkHighContrastElevatedColor));
      t1 = _this._colors$_debugLabel;
      t1 = (t1 == null ? "CupertinoDynamicColor" : t1) + "(" + C.JSArray_methods.join$1(t2, ", ");
      return t1 + ", resolved by: UNRESOLVED)";
    }
  };
  E.CupertinoDynamicColor_toString_toString.prototype = {
    call$2: function($name, color) {
      var marker = color.$eq(0, this.$this._effectiveColor) ? "*" : "";
      return marker + $name + " = " + color.toString$0(0) + marker;
    },
    $signature: 130
  };
  E._CupertinoDynamicColor_Color_Diagnosticable.prototype = {};
  T.CupertinoIconThemeData.prototype = {
    resolve$1: function(context) {
      var t1 = this.color,
        resolvedColor = E.CupertinoDynamicColor_maybeResolve(t1, context);
      return J.$eq$(resolvedColor, t1) ? this : this.copyWith$1$color(resolvedColor);
    },
    copyWith$3$color$opacity$size: function(color, opacity, size) {
      var _this = this,
        t1 = color == null ? _this.color : color,
        t2 = opacity == null ? _this.get$opacity(_this) : opacity;
      return new T.CupertinoIconThemeData(t1, t2, size == null ? _this.size : size);
    },
    copyWith$1$color: function(color) {
      return this.copyWith$3$color$opacity$size(color, null, null);
    }
  };
  T._CupertinoIconThemeData_IconThemeData_Diagnosticable.prototype = {};
  K.CupertinoUserInterfaceLevelData.prototype = {
    toString$0: function(_) {
      return this._interface_level$_name;
    }
  };
  L._CupertinoLocalizationsDelegate.prototype = {
    isSupported$1: function(locale) {
      return locale.get$languageCode(locale) === "en";
    },
    load$1: function(_, locale) {
      return new O.SynchronousFuture(C.C_DefaultCupertinoLocalizations, type$.SynchronousFuture_CupertinoLocalizations);
    },
    shouldReload$1: function(old) {
      return false;
    },
    toString$0: function(_) {
      return "DefaultCupertinoLocalizations.delegate(en_US)";
    }
  };
  L.DefaultCupertinoLocalizations.prototype = {$isCupertinoLocalizations: 1};
  D.CupertinoRouteTransitionMixin_buildPageTransitions_closure.prototype = {
    call$0: function() {
      return D.CupertinoRouteTransitionMixin__isPopGestureEnabled(this.route);
    },
    $signature: 44
  };
  D.CupertinoRouteTransitionMixin_buildPageTransitions_closure0.prototype = {
    call$0: function() {
      var t1 = this.route,
        t2 = t1._navigator$_navigator;
      t2.toString;
      t1 = t1._routes$_controller;
      t1.toString;
      t2.didStartUserGesture$0();
      return new D._CupertinoBackGestureController(t1, t2);
    },
    $signature: function() {
      return this.T._eval$1("_CupertinoBackGestureController<0>()");
    }
  };
  D.CupertinoPageTransition.prototype = {
    build$1: function(_, context) {
      var textDirection, _this = this,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      textDirection = t1.textDirection;
      t1 = _this._primaryShadowAnimation;
      return K.SlideTransition$(K.SlideTransition$(new K.DecoratedBoxTransition(t1, _this.child, t1, null), _this._primaryPositionAnimation, textDirection, true), _this._secondaryPositionAnimation, textDirection, false);
    }
  };
  D._CupertinoBackGestureDetector.prototype = {
    createState$0: function() {
      return new D._CupertinoBackGestureDetectorState(C._StateLifecycle_0, this.$ti._eval$1("_CupertinoBackGestureDetectorState<1>"));
    },
    enabledCallback$0: function() {
      return this.enabledCallback.call$0();
    },
    onStartPopGesture$0: function() {
      return this.onStartPopGesture.call$0();
    }
  };
  D._CupertinoBackGestureDetectorState.prototype = {
    get$_recognizer: function() {
      var t1 = this.___CupertinoBackGestureDetectorState__recognizer;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_recognizer")) : t1;
    },
    initState$0: function() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = O.HorizontalDragGestureRecognizer$(_this);
      t1.onStart = _this.get$_handleDragStart();
      t1.onUpdate = _this.get$_handleDragUpdate();
      t1.onEnd = _this.get$_handleDragEnd();
      t1.onCancel = _this.get$_handleDragCancel();
      _this.___CupertinoBackGestureDetectorState__recognizer = t1;
    },
    dispose$0: function(_) {
      var t1 = this.get$_recognizer();
      t1._velocityTrackers.clear$0(0);
      t1.super$OneSequenceGestureRecognizer$dispose(0);
      this.super$State$dispose(0);
    },
    _handleDragStart$1: function(details) {
      this._backGestureController = this._widget.onStartPopGesture$0();
    },
    _handleDragUpdate$1: function(details) {
      var t2, t3,
        t1 = this._backGestureController;
      t1.toString;
      t2 = details.primaryDelta;
      t2.toString;
      t3 = this._framework$_element;
      t3 = this._convertToLogical$1(t2 / t3.get$size(t3)._dx);
      t1 = t1.controller;
      t1.set$value(0, t1.get$_animation_controller$_value() - t3);
    },
    _handleDragEnd$1: function(details) {
      var t2, _this = this,
        t1 = _this._backGestureController;
      t1.toString;
      t2 = _this._framework$_element;
      t1.dragEnd$1(_this._convertToLogical$1(details.velocity.pixelsPerSecond._dx / t2.get$size(t2)._dx));
      _this._backGestureController = null;
    },
    _handleDragCancel$0: function() {
      var t1 = this._backGestureController;
      if (t1 != null)
        t1.dragEnd$1(0);
      this._backGestureController = null;
    },
    _route$_handlePointerDown$1: function($event) {
      if (this._widget.enabledCallback$0())
        this.get$_recognizer().addPointer$1($event);
    },
    _convertToLogical$1: function(value) {
      var t1 = this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      switch (t1.textDirection) {
        case C.TextDirection_0:
          return -value;
        case C.TextDirection_1:
          return value;
      }
    },
    build$1: function(_, context) {
      var t2, dragAreaWidth, _null = null,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      t2 = type$.MediaQuery;
      dragAreaWidth = t1.textDirection === C.TextDirection_1 ? context.dependOnInheritedWidgetOfExactType$1$0(t2).data.padding.left : context.dependOnInheritedWidgetOfExactType$1$0(t2).data.padding.right;
      dragAreaWidth = Math.max(dragAreaWidth, 20);
      return T.Stack$(H.setRuntimeTypeInfo([this._widget.child, new T.PositionedDirectional(0, 0, 0, dragAreaWidth, T.Listener$(C.HitTestBehavior_2, _null, _null, this.get$_route$_handlePointerDown(), _null), _null)], type$.JSArray_Widget), C.StackFit_2);
    }
  };
  D._CupertinoBackGestureController.prototype = {
    dragEnd$1: function(velocity) {
      var t2, t3, _this = this, t1 = {};
      if (Math.abs(velocity) >= 1 ? velocity <= 0 : _this.controller.get$_animation_controller$_value() > 0.5) {
        t2 = _this.controller;
        t3 = P.lerpDouble(800, 0, t2.get$_animation_controller$_value());
        t3.toString;
        t3 = P.Duration$(0, Math.min(C.JSNumber_methods.floor$0(t3), 300));
        t2._direction = C._AnimationDirection_0;
        t2._animateToInternal$3$curve$duration(1, C.Cubic_2Vk, t3);
      } else {
        _this.navigator.pop$0(0);
        t2 = _this.controller;
        t3 = t2._ticker;
        if (t3 != null && t3._ticker$_future != null) {
          t3 = P.lerpDouble(0, 800, t2.get$_animation_controller$_value());
          t3.toString;
          t3 = P.Duration$(0, C.JSNumber_methods.floor$0(t3));
          t2._direction = C._AnimationDirection_1;
          t2._animateToInternal$3$curve$duration(0, C.Cubic_2Vk, t3);
        }
      }
      t3 = t2._ticker;
      if (t3 != null && t3._ticker$_future != null) {
        t1._animationStatusCallback = null;
        t3 = new D._CupertinoBackGestureController_dragEnd__animationStatusCallback_get(t1);
        new D._CupertinoBackGestureController_dragEnd__animationStatusCallback_set(t1).call$1(new D._CupertinoBackGestureController_dragEnd_closure(_this, t3));
        t2.addStatusListener$1(t3.call$0());
      } else
        _this.navigator.didStopUserGesture$0();
    }
  };
  D._CupertinoBackGestureController_dragEnd__animationStatusCallback_set.prototype = {
    call$1: function(t1) {
      return this._box_0._animationStatusCallback = t1;
    },
    $signature: 136
  };
  D._CupertinoBackGestureController_dragEnd__animationStatusCallback_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._animationStatusCallback;
      return t1 == null ? H.throwExpression(H.LateError$localNI("animationStatusCallback")) : t1;
    },
    $signature: 137
  };
  D._CupertinoBackGestureController_dragEnd_closure.prototype = {
    call$1: function($status) {
      var t1 = this.$this;
      t1.navigator.didStopUserGesture$0();
      t1.controller.removeStatusListener$1(this._animationStatusCallback_get.call$0());
    },
    $signature: 8
  };
  D._CupertinoEdgeShadowDecoration.prototype = {
    lerpFrom$2: function(a, t) {
      var t1;
      if (a instanceof D._CupertinoEdgeShadowDecoration) {
        t1 = D._CupertinoEdgeShadowDecoration_lerp(a, this, t);
        t1.toString;
        return t1;
      }
      t1 = D._CupertinoEdgeShadowDecoration_lerp(null, this, t);
      t1.toString;
      return t1;
    },
    lerpTo$2: function(b, t) {
      var t1;
      if (b instanceof D._CupertinoEdgeShadowDecoration) {
        t1 = D._CupertinoEdgeShadowDecoration_lerp(this, b, t);
        t1.toString;
        return t1;
      }
      t1 = D._CupertinoEdgeShadowDecoration_lerp(this, null, t);
      t1.toString;
      return t1;
    },
    createBoxPainter$1: function(onChanged) {
      return new D._CupertinoEdgeShadowPainter(this, onChanged);
    },
    $eq: function(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      if (other instanceof D._CupertinoEdgeShadowDecoration) {
        t1 = other._colors;
        t2 = this._colors;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return J.get$hashCode$(this._colors);
    }
  };
  D._CupertinoEdgeShadowDecoration_lerp_closure.prototype = {
    call$1: function(color) {
      var t1 = P.Color_lerp(null, color, this.t);
      t1.toString;
      return t1;
    },
    $signature: 69
  };
  D._CupertinoEdgeShadowDecoration_lerp_closure0.prototype = {
    call$1: function(color) {
      var t1 = P.Color_lerp(null, color, 1 - this.t);
      t1.toString;
      return t1;
    },
    $signature: 69
  };
  D._CupertinoEdgeShadowPainter.prototype = {
    paint$3: function(canvas, offset, configuration) {
      var t1, t2, shadowWidth, shadowHeight, bandWidth, textDirection, start, shadowDirection, bandColorIndex, dx, t3, paint,
        colors = this._route$_decoration._colors;
      if (colors == null)
        return;
      t1 = configuration.size;
      t2 = t1._dx;
      shadowWidth = 0.05 * t2;
      shadowHeight = t1._dy;
      bandWidth = shadowWidth / (colors.length - 1);
      textDirection = configuration.textDirection;
      textDirection.toString;
      switch (textDirection) {
        case C.TextDirection_0:
          start = offset._dx + t2;
          shadowDirection = 1;
          break;
        case C.TextDirection_1:
          start = offset._dx;
          shadowDirection = -1;
          break;
        default:
          start = null;
          shadowDirection = null;
      }
      for (t1 = offset._dy, t2 = t1 + shadowHeight, bandColorIndex = 0, dx = 0; dx < shadowWidth; ++dx) {
        if (C.JSInt_methods.$tdiv(dx, bandWidth) !== bandColorIndex)
          ++bandColorIndex;
        t3 = H._detectRenderer();
        paint = t3 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
        t3 = P.Color_lerp(colors[bandColorIndex], colors[bandColorIndex + 1], C.JSInt_methods.$mod(dx, bandWidth) / bandWidth);
        t3.toString;
        paint.set$color(0, t3);
        t3 = start + shadowDirection * dx - 1;
        canvas.drawRect$2(0, new P.Rect(t3, t1, t3 + 1, t2), paint);
      }
    }
  };
  K.CupertinoTheme.prototype = {
    build$1: function(_, context) {
      var _null = null;
      return new K._InheritedCupertinoTheme(this, Y.IconTheme$(this.child, new T.CupertinoIconThemeData(this.data.get$primaryColor(), _null, _null), _null), _null);
    }
  };
  K._InheritedCupertinoTheme.prototype = {
    updateShouldNotify$1: function(old) {
      return this.theme.data !== old.theme.data;
    }
  };
  K.CupertinoThemeData.prototype = {};
  K.NoDefaultCupertinoThemeData.prototype = {};
  K._CupertinoThemeDefaults.prototype = {};
  K._CupertinoTextThemeDefaults.prototype = {};
  K._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable.prototype = {};
  U._testPlatform_closure.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 139
  };
  U._browserPlatform_closure.prototype = {
    call$0: function() {
      var t1 = window.navigator.platform,
        navigatorPlatform = t1 == null ? null : t1.toLowerCase();
      if (navigatorPlatform == null)
        navigatorPlatform = "";
      if (C.JSString_methods.startsWith$1(navigatorPlatform, "mac"))
        return C.TargetPlatform_4;
      if (C.JSString_methods.startsWith$1(navigatorPlatform, "win"))
        return C.TargetPlatform_5;
      if (C.JSString_methods.contains$1(navigatorPlatform, "iphone") || C.JSString_methods.contains$1(navigatorPlatform, "ipad") || C.JSString_methods.contains$1(navigatorPlatform, "ipod"))
        return C.TargetPlatform_2;
      if (C.JSString_methods.contains$1(navigatorPlatform, "android"))
        return C.TargetPlatform_0;
      if (window.matchMedia("only screen and (pointer: fine)").matches)
        return C.TargetPlatform_3;
      return C.TargetPlatform_0;
    },
    $signature: 140
  };
  U._ErrorDiagnostic.prototype = {
    get$value: function(_) {
      var t1 = Y.DiagnosticsProperty.prototype.get$value.call(this, this);
      t1.toString;
      return t1;
    },
    valueToString$1$parentConfiguration: function(parentConfiguration) {
      var t1 = Y.DiagnosticsProperty.prototype.get$value.call(this, this);
      t1.toString;
      return J.join$1$ax(t1, "");
    }
  };
  U.ErrorDescription.prototype = {};
  U.ErrorSummary.prototype = {};
  U.ErrorHint.prototype = {};
  U.ErrorSpacer.prototype = {};
  U.FlutterErrorDetails.prototype = {
    exceptionAsString$0: function() {
      var message, fullMessage, t1, t2, position, body, splitPoint,
        longMessage = this.exception;
      if (type$.AssertionError._is(longMessage)) {
        message = longMessage.get$message(longMessage);
        fullMessage = longMessage.toString$0(0);
        if (typeof message == "string" && message !== fullMessage) {
          t1 = fullMessage.length;
          t2 = J.getInterceptor$asx(message);
          if (t1 > t2.get$length(message)) {
            position = C.JSString_methods.lastIndexOf$1(fullMessage, message);
            if (position === t1 - t2.get$length(message) && position > 2 && C.JSString_methods.substring$2(fullMessage, position - 2, position) === ": ") {
              body = C.JSString_methods.substring$2(fullMessage, 0, position - 2);
              splitPoint = C.JSString_methods.indexOf$1(body, " Failed assertion:");
              if (splitPoint >= 0)
                body = C.JSString_methods.substring$2(body, 0, splitPoint) + "\n" + C.JSString_methods.substring$1(body, splitPoint + 1);
              longMessage = t2.trimRight$0(message) + "\n" + body;
            } else
              longMessage = null;
          } else
            longMessage = null;
        } else
          longMessage = null;
        if (longMessage == null)
          longMessage = fullMessage;
      } else if (!(typeof longMessage == "string")) {
        t1 = type$.Error._is(longMessage) || type$.Exception._is(longMessage);
        t2 = J.getInterceptor$(longMessage);
        longMessage = t1 ? t2.toString$0(longMessage) : "  " + H.S(t2.toString$0(longMessage));
      }
      longMessage = J.trimRight$0$s(longMessage);
      return longMessage.length === 0 ? "  <no message available>" : longMessage;
    },
    _exceptionToDiagnosticable$0: function() {
      var t1,
        exception = this.exception;
      if (exception instanceof U.FlutterError)
        return exception;
      if (type$.AssertionError._is(exception) && exception.get$message(exception) instanceof U.FlutterError) {
        t1 = J.get$message$z(exception);
        t1.toString;
        return type$.FlutterError._as(t1);
      }
      return null;
    },
    get$summary: function() {
      var t1, summary;
      if (this._exceptionToDiagnosticable$0() != null) {
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
        this.debugFillProperties$1(new Y.DiagnosticPropertiesBuilder(t1, C.DiagnosticsTreeStyle_1));
        t1 = new H.CastList(t1, type$.CastList_of_DiagnosticsNode_and_nullable_DiagnosticsNode);
        summary = t1.firstWhere$2$orElse(t1, new U.FlutterErrorDetails_summary_closure(), new U.FlutterErrorDetails_summary_closure0());
      } else
        summary = null;
      return summary == null ? U.ErrorSummary$(new U.FlutterErrorDetails_summary_formatException(this).call$0()) : summary;
    },
    debugFillProperties$1: function(properties) {
      var t1, verb, diagnosticable, errorName, t2, t3, prefix, message, stackFrames, _this = this;
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = _this.context;
      verb = U.ErrorDescription$("thrown" + H.S(t1 != null ? U.ErrorDescription$(" " + t1.toString$0(0)) : ""));
      diagnosticable = _this._exceptionToDiagnosticable$0();
      t1 = _this.exception;
      if (t1 instanceof P.NullThrownError)
        U.ErrorDescription$("The null value was " + verb.toString$0(0) + ".");
      else if (typeof t1 == "number")
        U.ErrorDescription$("The number " + H.S(t1) + " was " + verb.toString$0(0) + ".");
      else {
        if (type$.AssertionError._is(t1))
          errorName = U.ErrorDescription$("assertion");
        else if (typeof t1 == "string")
          errorName = U.ErrorDescription$("message");
        else {
          t2 = type$.Error._is(t1) || type$.Exception._is(t1);
          t3 = J.getInterceptor$(t1);
          errorName = t2 ? U.ErrorDescription$(t3.get$runtimeType(t1).toString$0(0)) : U.ErrorDescription$(t3.get$runtimeType(t1).toString$0(0) + " object");
        }
        U.ErrorDescription$("The following " + errorName.toString$0(0) + " was " + verb.toString$0(0) + ":");
        if (diagnosticable != null)
          C.JSArray_methods.forEach$1(diagnosticable.diagnostics, properties.get$add(properties));
        else {
          prefix = J.get$runtimeType$(t1).toString$0(0) + ": ";
          message = _this.exceptionAsString$0();
          U.ErrorSummary$(C.JSString_methods.startsWith$1(message, prefix) ? C.JSString_methods.substring$1(message, prefix.length) : message);
        }
      }
      t2 = _this.stack;
      if (t2 != null) {
        if (type$.AssertionError._is(t1) && diagnosticable == null) {
          t1 = R.StackFrame_fromStackString(U.FlutterError__defaultStackTraceDemangler(t2).toString$0(0));
          t3 = H._arrayInstanceType(t1)._eval$1("SkipWhileIterable<1>");
          stackFrames = P.List_List$of(new H.SkipWhileIterable(t1, new U.FlutterErrorDetails_debugFillProperties_closure(), t3), true, t3._eval$1("Iterable.E"));
          if (stackFrames.length >= 2 && stackFrames[0].$package === "flutter" && stackFrames[1].$package === "flutter") {
            U.ErrorSpacer$();
            U.ErrorHint$("Either the assertion indicates an error in the framework itself, or we should provide substantially more information in this error message to help you determine and fix the underlying cause.\nIn either case, please report this assertion by filing a bug on GitHub:\n  https://github.com/flutter/flutter/issues/new?template=2_bug.md");
          }
        }
        U.ErrorSpacer$();
        U.DiagnosticsStackTrace$("When the exception was thrown, this was the stack", t2, null);
      }
      t1 = _this.informationCollector;
      if (t1 != null) {
        U.ErrorSpacer$();
        J.forEach$1$ax(t1.call$0(), properties.get$add(properties));
      }
    },
    toStringShort$0: function() {
      var t1 = "Exception caught by " + this.library;
      return t1;
    },
    toString$0: function(_) {
      U._FlutterErrorDetailsNode$(null, C.DiagnosticsTreeStyle_5, this);
      return "";
    }
  };
  U.FlutterErrorDetails_summary_formatException.prototype = {
    call$0: function() {
      return J.trimLeft$0$s(this.$this.exceptionAsString$0().split("\n")[0]);
    },
    $signature: 50
  };
  U.FlutterErrorDetails_summary_closure.prototype = {
    call$1: function(node) {
      return node.get$level(node) === C.DiagnosticLevel_6;
    },
    $signature: 142
  };
  U.FlutterErrorDetails_summary_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 2
  };
  U.FlutterErrorDetails_debugFillProperties_closure.prototype = {
    call$1: function(frame) {
      return frame.packageScheme === "dart";
    },
    $signature: 143
  };
  U.FlutterError.prototype = {
    get$message: function(_) {
      return this.toString$0(0);
    },
    toStringShort$0: function() {
      return "FlutterError";
    },
    toString$0: function(_) {
      var t1 = this.diagnostics;
      return new H.MappedListIterable(t1, new U.FlutterError_toString_closure(new Y.TextTreeRenderer(4000000000, 65, C.DiagnosticLevel_2, -1)), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$1(0, "\n");
    },
    $isAssertionError: 1,
    $isDiagnosticableTree: 1
  };
  U.FlutterError_FlutterError_closure.prototype = {
    call$1: function(line) {
      return U.ErrorDescription$(line);
    },
    $signature: 144
  };
  U.FlutterError_defaultStackFilter_closure.prototype = {
    call$1: function(value) {
      return value + 1;
    },
    $signature: 70
  };
  U.FlutterError_defaultStackFilter_closure0.prototype = {
    call$1: function(value) {
      return value + 1;
    },
    $signature: 70
  };
  U.FlutterError_toString_closure.prototype = {
    call$1: function(node) {
      return C.JSString_methods.trimRight$0(this.renderer.render$1(node));
    },
    $signature: 146
  };
  U.debugPrintStack_closure.prototype = {
    call$1: function(line) {
      return C.JSString_methods.contains$1(line, "StackTrace.current") || C.JSString_methods.contains$1(line, "dart-sdk/lib/_internal") || C.JSString_methods.contains$1(line, "dart:sdk_internal");
    },
    $signature: 22
  };
  U.DiagnosticsStackTrace.prototype = {};
  U._FlutterErrorDetailsNode.prototype = {
    get$builder: function() {
      Y.DiagnosticableNode.prototype.get$builder.call(this);
      return null;
    }
  };
  U._FlutterError_Error_DiagnosticableTreeMixin.prototype = {};
  U._FlutterErrorDetails_Object_Diagnosticable.prototype = {};
  N.BindingBase.prototype = {
    BindingBase$0: function() {
      var t1, t2, t3, t4, t5, t6, _this = this;
      P.Timeline_startSync("Framework initialization", null, null);
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances();
      $.WidgetsBinding__instance = _this;
      t1 = type$.Element_2;
      t2 = P.HashSet_HashSet(t1);
      t3 = H.setRuntimeTypeInfo([], type$.JSArray_Element_2);
      t4 = P.HashSet_HashSet(t1);
      t5 = P.LinkedHashMap_LinkedHashMap(type$.void_Function_FocusHighlightMode, type$.int);
      t6 = O.FocusScopeNode$(true, "Root Focus Scope", false);
      t6 = t6._focus_manager$_manager = new O.FocusManager(new R.HashedObserverList(t5, type$.HashedObserverList_of_void_Function_FocusHighlightMode), t6, P.LinkedHashSet_LinkedHashSet$_empty(type$.FocusNode), new P.LinkedList(type$.LinkedList__ListenerEntry));
      $.$get$RawKeyboard_instance().keyEventHandler = t6.get$_handleRawKeyEvent();
      t5 = $.GestureBinding__instance;
      t5.GestureBinding_pointerRouter._globalRoutes.$indexSet(0, t6.get$_focus_manager$_handlePointerEvent(), null);
      t1 = new N.BuildOwner(new N._InactiveElements(t2), t3, t6, P.LinkedHashMap_LinkedHashMap$_empty(type$.GlobalKey_State_StatefulWidget, t1), t4, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Map_of_Element_and_GlobalKey_State_StatefulWidget));
      _this.WidgetsBinding__buildOwner = t1;
      t1.onBuildScheduled = _this.get$_handleBuildScheduled();
      $.$get$window().platformDispatcher._onLocaleChanged = _this.get$handleLocaleChanged();
      C.OptionalMethodChannel_urv.setMethodCallHandler$1(_this.get$_handleNavigationInvocation());
      $.FlutterErrorDetails_propertiesTransformers.push(N.widget_inspector__transformDebugCreator$closure());
      _this.initServiceExtensions$0();
      t1 = type$.String;
      P.postEvent("Flutter.FrameworkInitialization", P.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
      P.Timeline_finishSync();
    },
    initInstances$0: function() {
    },
    initServiceExtensions$0: function() {
    },
    lockEvents$1: function(callback) {
      var future;
      P.Timeline_startSync("Lock events", null, null);
      ++this._lockCount;
      future = callback.call$0();
      future.whenComplete$1(new N.BindingBase_lockEvents_closure(this));
      return future;
    },
    unlocked$0: function() {
    },
    registerBoolServiceExtension$3$getter$name$setter: function(getter, $name, setter) {
      this.registerServiceExtension$2$callback$name(new N.BindingBase_registerBoolServiceExtension_closure(this, setter, $name, getter), $name);
    },
    registerNumericServiceExtension$3$getter$name$setter: function(getter, $name, setter) {
      this.registerServiceExtension$2$callback$name(new N.BindingBase_registerNumericServiceExtension_closure(this, $name, setter, getter), $name);
    },
    _postExtensionStateChangedEvent$2: function($name, value) {
      P.postEvent("Flutter.ServiceExtensionStateChanged", P.LinkedHashMap_LinkedHashMap$_literal(["extension", "ext.flutter." + $name, "value", value], type$.String, type$.dynamic));
    },
    registerServiceExtension$2$callback$name: function(callback, $name) {
      var methodName = "ext.flutter." + $name;
      P.registerExtension(methodName, new N.BindingBase_registerServiceExtension_closure(methodName, callback));
    },
    toString$0: function(_) {
      return "<BindingBase>";
    }
  };
  N.BindingBase_lockEvents_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (--t1._lockCount <= 0) {
        P.Timeline_finishSync();
        t1.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$unlocked();
        if (t1.SchedulerBinding__taskQueue._priority_queue$_length !== 0)
          t1._ensureEventLoopCallback$0();
      }
    },
    $signature: 2
  };
  N.BindingBase_registerBoolServiceExtension_closure.prototype = {
    call$1: function(parameters) {
      return this.$call$body$BindingBase_registerBoolServiceExtension_closure(parameters);
    },
    $call$body$BindingBase_registerBoolServiceExtension_closure: function(parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$x(parameters);
              $async$goto = t1.containsKey$1(parameters, "enabled") ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return P._asyncAwait($async$self.setter.call$1(J.$eq$(t1.$index(parameters, "enabled"), "true")), $async$call$1);
            case 5:
              // returning from await.
              $async$goto = 6;
              return P._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 6:
              // returning from await.
              t1 = $async$result ? "true" : "false";
              $async$self.$this._postExtensionStateChangedEvent$2($async$self.name, t1);
            case 4:
              // join
              $async$temp1 = P;
              $async$goto = 7;
              return P._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$temp1.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$result ? "true" : "false"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 34
  };
  N.BindingBase_registerNumericServiceExtension_closure.prototype = {
    call$1: function(parameters) {
      return this.$call$body$BindingBase_registerNumericServiceExtension_closure(parameters);
    },
    $call$body$BindingBase_registerNumericServiceExtension_closure: function(parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1, $async$temp2, $async$temp3;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.name;
              t2 = J.getInterceptor$x(parameters);
              $async$goto = t2.containsKey$1(parameters, t1) ? 3 : 4;
              break;
            case 3:
              // then
              t2 = t2.$index(parameters, t1);
              t2.toString;
              $async$goto = 5;
              return P._asyncAwait($async$self.setter.call$1(P.double_parse(t2)), $async$call$1);
            case 5:
              // returning from await.
              $async$temp1 = $async$self.$this;
              $async$temp2 = t1;
              $async$temp3 = J;
              $async$goto = 6;
              return P._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 6:
              // returning from await.
              $async$temp1._postExtensionStateChangedEvent$2($async$temp2, $async$temp3.toString$0$($async$result));
            case 4:
              // join
              $async$temp1 = P;
              $async$temp2 = t1;
              $async$temp3 = J;
              $async$goto = 7;
              return P._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$temp1.LinkedHashMap_LinkedHashMap$_literal([$async$temp2, $async$temp3.toString$0$($async$result)], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 34
  };
  N.BindingBase_registerServiceExtension_closure.prototype = {
    call$2: function(method, parameters) {
      return this.$call$body$BindingBase_registerServiceExtension_closure(method, parameters);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $call$body$BindingBase_registerServiceExtension_closure: function(method, parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.ServiceExtensionResponse),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, caughtException, caughtStack, _result_set, exception, stack, t2, exception0, t1, $async$exception0, $async$temp1;
      var $async$call$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              $async$goto = 3;
              return P._asyncAwait(E.debugInstrumentAction("Wait for outer event loop", new N.BindingBase_registerServiceExtension__closure(), type$.void), $async$call$2);
            case 3:
              // returning from await.
              caughtException = null;
              caughtStack = null;
              t1._result0 = null;
              t2 = new N.BindingBase_registerServiceExtension_closure__result_get(t1);
              _result_set = new N.BindingBase_registerServiceExtension_closure__result_set(t1);
              $async$handler = 5;
              $async$temp1 = _result_set;
              $async$goto = 8;
              return P._asyncAwait($async$self.callback.call$1(parameters), $async$call$2);
            case 8:
              // returning from await.
              $async$temp1.call$1($async$result);
              $async$handler = 2;
              // goto after finally
              $async$goto = 7;
              break;
            case 5:
              // catch
              $async$handler = 4;
              $async$exception0 = $async$currentError;
              exception = H.unwrapException($async$exception0);
              stack = H.getTraceFromException($async$exception0);
              caughtException = exception;
              caughtStack = stack;
              // goto after finally
              $async$goto = 7;
              break;
            case 4:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 7:
              // after finally
              if (caughtException == null) {
                J.$indexSet$ax(t2.call$0(), "type", "_extensionType");
                J.$indexSet$ax(t2.call$0(), "method", method);
                $async$returnValue = P.ServiceExtensionResponse$result(C.C_JsonCodec.encode$1(t2.call$0()));
                // goto return
                $async$goto = 1;
                break;
              } else {
                U.FlutterError_reportError(new U.FlutterErrorDetails(caughtException, caughtStack, "Flutter framework", U.ErrorDescription$('during a service extension callback for "' + method + '"'), null, false));
                t1 = type$.String;
                C.C_JsonCodec.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["exception", J.toString$0$(caughtException), "stack", J.toString$0$(caughtStack), "method", method], t1, t1));
                P.ServiceExtensionResponse__validateErrorCode(-32000);
                $async$returnValue = new P.ServiceExtensionResponse();
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$2, $async$completer);
    },
    $signature: 64
  };
  N.BindingBase_registerServiceExtension_closure__result_set.prototype = {
    call$1: function(t1) {
      return this._box_0._result0 = t1;
    },
    $signature: 148
  };
  N.BindingBase_registerServiceExtension__closure.prototype = {
    call$0: function() {
      return P.Future_Future$delayed(C.Duration_0, type$.void);
    },
    $signature: 33
  };
  N.BindingBase_registerServiceExtension_closure__result_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._result0;
      return t1 == null ? H.throwExpression(H.LateError$localNI("result")) : t1;
    },
    $signature: 149
  };
  B.Listenable.prototype = {};
  B._ListenerEntry.prototype = {
    listener$0: function($receiver) {
      return this.listener.call$0();
    }
  };
  B.ChangeNotifier.prototype = {
    addListener$1: function(_, listener) {
      var t1 = this.ChangeNotifier__listeners;
      t1._insertBefore$3$updateFirst(t1._collection$_first, new B._ListenerEntry(listener), false);
    },
    removeListener$1: function(_, listener) {
      var t2, entry, t3,
        t1 = this.ChangeNotifier__listeners;
      t1.toString;
      t1 = P._LinkedListIterator$(t1);
      t2 = H._instanceType(t1)._precomputed1;
      for (; t1.moveNext$0();) {
        entry = t2._as(t1._collection$_current);
        if (J.$eq$(entry.listener, listener)) {
          t1 = entry._list;
          t1.toString;
          H._instanceType(entry)._eval$1("LinkedListEntry.E")._as(entry);
          ++t1._modificationCount;
          t2 = entry._collection$_next;
          t2._collection$_previous = entry._collection$_previous;
          entry._collection$_previous._collection$_next = t2;
          t3 = --t1._collection$_length;
          entry._list = entry._collection$_next = entry._collection$_previous = null;
          if (t3 === 0)
            t1._collection$_first = null;
          else if (entry === t1._collection$_first)
            t1._collection$_first = t2;
          return;
        }
      }
    },
    dispose$0: function(_) {
      this.ChangeNotifier__listeners = null;
    },
    notifyListeners$0: function() {
      var entry, exception, stack, localListeners, _i, exception0, rti, t2, t3, _this = this,
        t1 = _this.ChangeNotifier__listeners;
      if (t1._collection$_length === 0)
        return;
      localListeners = P.List_List$from(t1, true, type$._ListenerEntry);
      for (t1 = localListeners.length, _i = 0; _i < t1; ++_i) {
        entry = localListeners[_i];
        try {
          if (entry._list != null)
            J.listener$0$z(entry);
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          rti = _this instanceof H.Closure ? H.closureFunctionType(_this) : null;
          t2 = U.ErrorDescription$("while dispatching notifications for " + H.createRuntimeType(rti == null ? H.instanceType(_this) : rti).toString$0(0));
          t3 = $.FlutterError_onError;
          if (t3 != null)
            t3.call$1(new U.FlutterErrorDetails(exception, stack, "foundation library", t2, new B.ChangeNotifier_notifyListeners_closure(_this), false));
        }
      }
    },
    $isListenable: 1
  };
  B.ChangeNotifier_notifyListeners_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.$this;
                $async$goto = 2;
                return Y.DiagnosticsProperty$("The " + H.getRuntimeType(t1).toString$0(0) + " sending notification was", t1, true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.ChangeNotifier);
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 16
  };
  B._MergingListenable.prototype = {
    addListener$1: function(_, listener) {
      var t1, t2, _i;
      for (t1 = this._change_notifier$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].addListener$1(0, listener);
    },
    removeListener$1: function(_, listener) {
      var t1, t2, _i;
      for (t1 = this._change_notifier$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].removeListener$1(0, listener);
    },
    toString$0: function(_) {
      return "Listenable.merge([" + C.JSArray_methods.join$1(this._change_notifier$_children, ", ") + "])";
    }
  };
  B.ValueNotifier.prototype = {
    set$value: function(_, newValue) {
      var t1 = this._change_notifier$_value;
      if (t1 == null ? newValue == null : t1 === newValue)
        return;
      this._change_notifier$_value = newValue;
      this.notifyListeners$0();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(" + H.S(this._change_notifier$_value) + ")";
    }
  };
  Y.DiagnosticLevel.prototype = {
    toString$0: function(_) {
      return this._diagnostics$_name;
    }
  };
  Y.DiagnosticsTreeStyle.prototype = {
    toString$0: function(_) {
      return this._diagnostics$_name;
    }
  };
  Y.TextTreeConfiguration.prototype = {};
  Y._WordWrapParseMode.prototype = {
    toString$0: function(_) {
      return this._diagnostics$_name;
    }
  };
  Y._PrefixedStringBuilder.prototype = {
    incrementPrefixOtherLines$2$updateCurrentLine: function(suffix, updateCurrentLine) {
      var _this = this,
        t1 = _this._currentLine._contents.length === 0 || updateCurrentLine,
        t2 = _this._nextPrefixOtherLines;
      if (t1) {
        t1 = t2 == null ? _this._prefixOtherLines : t2;
        t1.toString;
        _this._prefixOtherLines = t1 + suffix;
        _this._nextPrefixOtherLines = null;
      } else {
        t1 = t2 == null ? _this._prefixOtherLines : t2;
        t1.toString;
        _this._nextPrefixOtherLines = t1 + suffix;
      }
    },
    get$requiresMultipleLines: function() {
      var t2, _this = this,
        t1 = _this._numLines;
      if (t1 <= 1)
        if (!(t1 === 1 && _this._currentLine._contents.length !== 0)) {
          t1 = _this._currentLine._contents;
          if (_this._diagnostics$_buffer._contents.length === 0)
            t2 = _this.prefixLineOne;
          else
            t2 = _this._prefixOtherLines;
          t2 = t1.length + t2.length > _this.wrapWidth;
          t1 = t2;
        } else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _finalizeLine$1: function(addTrailingLineBreak) {
      var t3, lines, $length, i, t4, _this = this,
        firstLine = _this._diagnostics$_buffer._contents.length === 0,
        t1 = _this._currentLine,
        t2 = t1._contents,
        text = t2.charCodeAt(0) == 0 ? t2 : t2;
      t1._contents = "";
      t1 = _this._wrappableRanges;
      if (t1.length === 0) {
        _this._writeLine$3$firstLine$includeLineBreak(text, firstLine, addTrailingLineBreak);
        return;
      }
      t2 = firstLine ? _this.prefixLineOne.length : _this._prefixOtherLines.length;
      t3 = _this._prefixOtherLines;
      t3 = firstLine ? t3.length : t3.length;
      lines = Y._PrefixedStringBuilder__wordWrapLine(text, t1, _this.wrapWidth, t3, t2);
      $length = lines.get$length(lines);
      for (t2 = new P._SyncStarIterator(lines._outerHelper()), t3 = !addTrailingLineBreak, i = 0; t2.moveNext$0();) {
        t4 = t2.get$current(t2);
        ++i;
        _this._writeLine$3$firstLine$includeLineBreak(t4, firstLine, !t3 || i < $length);
      }
      C.JSArray_methods.set$length(t1, 0);
    },
    write$2$allowWrap: function(_, s, allowWrap) {
      var lines, t1, t2, i, t3, line, wrapStart, wrapEnd, _this = this;
      if (s.length === 0)
        return;
      lines = s.split("\n");
      for (t1 = _this._currentLine, t2 = _this._wrappableRanges, i = 0; i < lines.length; ++i) {
        if (i > 0) {
          _this._finalizeLine$1(true);
          t3 = _this._nextPrefixOtherLines;
          if (t3 != null) {
            _this._prefixOtherLines = t3;
            _this._nextPrefixOtherLines = null;
          }
        }
        line = lines[i];
        t3 = line.length;
        if (t3 !== 0) {
          if (allowWrap && true) {
            wrapStart = t1._contents.length;
            wrapEnd = wrapStart + t3;
            if (t2.length !== 0 && C.JSArray_methods.get$last(t2) === wrapStart)
              C.JSArray_methods.set$last(t2, wrapEnd);
            else {
              t2.push(wrapStart);
              t2.push(wrapEnd);
            }
          }
          t1._contents += line;
        }
      }
    },
    write$1: function($receiver, s) {
      return this.write$2$allowWrap($receiver, s, false);
    },
    _updatePrefix$0: function() {
      var t1 = this._nextPrefixOtherLines;
      if (t1 != null) {
        this._prefixOtherLines = t1;
        this._nextPrefixOtherLines = null;
      }
    },
    _writeLine$3$firstLine$includeLineBreak: function(line, firstLine, includeLineBreak) {
      var t2, _this = this,
        t1 = _this._diagnostics$_buffer;
      if (t1._contents.length === 0)
        t2 = _this.prefixLineOne;
      else
        t2 = _this._prefixOtherLines;
      t2 = t1._contents += C.JSString_methods.trimRight$0(H.S(t2) + line);
      if (includeLineBreak)
        t1._contents = t2 + "\n";
      ++_this._numLines;
    },
    writeRawLines$1: function(lines) {
      var t1, t2, _this = this;
      if (lines.length === 0)
        return;
      if (_this._currentLine._contents.length !== 0)
        _this._finalizeLine$1(true);
      t1 = _this._diagnostics$_buffer;
      t2 = t1._contents += lines;
      if (!C.JSString_methods.endsWith$1(lines, "\n"))
        t1._contents = t2 + "\n";
      ++_this._numLines;
      _this._updatePrefix$0();
    },
    writeStretched$2: function(text, targetLineLength) {
      var t1, t2, t3, targetLength, _this = this;
      _this.write$1(0, text);
      t1 = _this._currentLine;
      t2 = t1._contents;
      if (_this._diagnostics$_buffer._contents.length === 0)
        t3 = _this.prefixLineOne;
      else
        t3 = _this._prefixOtherLines;
      targetLength = targetLineLength - (t2.length + t3.length);
      if (targetLength > 0)
        t1._contents += C.JSString_methods.$mul(text[text.length - 1], targetLength);
      C.JSArray_methods.set$length(_this._wrappableRanges, 0);
    }
  };
  Y._PrefixedStringBuilder__wordWrapLine__lastWordStart_set.prototype = {
    call$1: function(t1) {
      return this._box_0._lastWordStart = t1;
    },
    $signature: 151
  };
  Y._PrefixedStringBuilder__wordWrapLine__lastWordStart_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._lastWordStart;
      return t1 == null ? H.throwExpression(H.LateError$localNI("lastWordStart")) : t1;
    },
    $signature: 28
  };
  Y._PrefixedStringBuilder__wordWrapLine_noWrap.prototype = {
    call$1: function(index) {
      var t1, t2, t3;
      for (t1 = this._box_0, t2 = this.wrapRanges; true;) {
        t3 = t1.currentChunk;
        if (t3 >= t2.length)
          return true;
        if (index < t2[t3 + 1])
          break;
        t1.currentChunk = t3 + 2;
      }
      return index < t2[t1.currentChunk];
    },
    $signature: 21
  };
  Y._NoDefaultValue.prototype = {};
  Y.TextTreeRenderer.prototype = {
    render$4$parentConfiguration$prefixLineOne$prefixOtherLines: function(node, parentConfiguration, prefixLineOne, prefixOtherLines) {
      var t1 = this._debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, parentConfiguration, prefixLineOne, prefixOtherLines);
      return t1;
    },
    render$1: function(node) {
      return this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, null, "", null);
    },
    _debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines: function(node, parentConfiguration, prefixLineOne, prefixOtherLines) {
      var isSingleLine, t1, t2, descendants, t3, t4, t5, builder, children, description, wrapName, wrapDescription, uppercaseTitle, $name, includeName, propertiesIterable, properties, i, t6, property, propertyRender, propertyLines, t7, t8, prefixChildrenRaw, child, childStyle, lastChildPrefixLineOne, childPrefixOtherLines, nextChildStyle, childPrefixLineOne, _this = this, _s1_ = "\n", _box_0 = {};
      _box_0.prefixOtherLines = prefixOtherLines;
      if (node.get$style(node) === C.DiagnosticsTreeStyle_8)
        isSingleLine = (parentConfiguration == null ? null : parentConfiguration.lineBreakProperties) !== true;
      else
        isSingleLine = false;
      if (prefixOtherLines == null) {
        _box_0.prefixOtherLines = prefixLineOne;
        t1 = prefixLineOne;
      } else
        t1 = prefixOtherLines;
      t2 = node.get$textTreeConfiguration();
      t2.toString;
      if (t1.length === 0)
        t1 = _box_0.prefixOtherLines = t1 + t2.prefixOtherLinesRootNode;
      if (node.get$style(node) === C.DiagnosticsTreeStyle_11) {
        descendants = H.setRuntimeTypeInfo([], type$.JSArray_String);
        _box_0.lines = _box_0.depth = 0;
        new Y.TextTreeRenderer__debugRender_visitor(_box_0, descendants).call$1(node);
        if (_box_0.lines > 1)
          t1 = prefixLineOne + ("This " + H.S(node.name) + " had the following descendants (showing up to depth 5):\n");
        else {
          t1 = node.name;
          t1 = descendants.length === 1 ? prefixLineOne + ("This " + H.S(t1) + " had the following child:\n") : prefixLineOne + ("This " + H.S(t1) + " has no descendants.\n");
        }
        t1 = P.StringBuffer__writeAll(t1, descendants, _s1_);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      t3 = _this._wrapWidthProperties;
      t4 = Math.max(_this._wrapWidth, t1.length + t3);
      t5 = new P.StringBuffer("");
      builder = new Y._PrefixedStringBuilder(prefixLineOne, t1, t4, new P.StringBuffer(""), t5, H.setRuntimeTypeInfo([], type$.JSArray_int));
      children = node.getChildren$0();
      description = node.toDescription$1$parentConfiguration(parentConfiguration);
      t1 = t2.beforeName;
      if (t1.length !== 0)
        builder.write$1(0, t1);
      t1 = !isSingleLine;
      wrapName = t1 && node.get$allowNameWrap();
      wrapDescription = t1 && node.get$allowWrap();
      uppercaseTitle = node.get$style(node) === C.DiagnosticsTreeStyle_5;
      $name = node.name;
      if (uppercaseTitle)
        $name = $name == null ? null : $name.toUpperCase();
      if (description == null || description.length === 0) {
        if (node.get$showName() && $name != null)
          builder.write$2$allowWrap(0, $name, wrapName);
      } else {
        if ($name != null && $name.length !== 0 && node.get$showName()) {
          builder.write$2$allowWrap(0, $name, wrapName);
          if (node.showSeparator)
            builder.write$2$allowWrap(0, t2.afterName, wrapName);
          builder.write$2$allowWrap(0, t2.isNameOnOwnLine || J.contains$1$asx(description, _s1_) ? _s1_ : " ", wrapName);
          includeName = true;
        } else
          includeName = false;
        if (t1 && builder.get$requiresMultipleLines() && t5._contents.length !== 0)
          builder.write$1(0, _s1_);
        if (includeName)
          builder.incrementPrefixOtherLines$2$updateCurrentLine(children.length === 0 ? t2.propertyPrefixNoChildren : t2.propertyPrefixIfChildren, true);
        if (uppercaseTitle)
          description = description.toUpperCase();
        builder.write$2$allowWrap(0, J.trimRight$0$s(description), wrapDescription);
        if (!includeName)
          builder.incrementPrefixOtherLines$2$updateCurrentLine(children.length === 0 ? t2.propertyPrefixNoChildren : t2.propertyPrefixIfChildren, false);
      }
      t1 = t2.suffixLineOne;
      if (t1.length !== 0)
        builder.writeStretched$2(t1, t4);
      t1 = node.getProperties$0(0);
      t4 = H._arrayInstanceType(t1)._eval$1("WhereIterable<1>");
      propertiesIterable = new H.WhereIterable(t1, new Y.TextTreeRenderer__debugRender_closure(_this), t4);
      t1 = _this._maxDescendentsTruncatableNode;
      if (t1 >= 0 && node.get$allowTruncate()) {
        t4 = t4._eval$1("Iterable.E");
        if (propertiesIterable.get$length(propertiesIterable) < t1) {
          t4 = H.TakeIterable_TakeIterable(propertiesIterable, t1, t4);
          properties = P.List_List$of(t4, true, H._instanceType(t4)._eval$1("Iterable.E"));
          C.JSArray_methods.add$1(properties, Y.DiagnosticsNode_DiagnosticsNode$message("...", true, C.DiagnosticsTreeStyle_8));
        } else
          properties = P.List_List$of(propertiesIterable, true, t4);
        if (t1 < children.length) {
          children = H.SubListIterable$(children, 0, H.checkNotNullable(t1, "count", type$.int), H._arrayInstanceType(children)._precomputed1).toList$0(0);
          C.JSArray_methods.add$1(children, Y.DiagnosticsNode_DiagnosticsNode$message("...", true, C.DiagnosticsTreeStyle_8));
        }
      } else
        properties = P.List_List$of(propertiesIterable, true, t4._eval$1("Iterable.E"));
      if (properties.length !== 0 || children.length !== 0 || node.get$emptyBodyDescription() != null)
        if (!node.showSeparator)
          t1 = (description == null ? null : description.length !== 0) === true;
        else
          t1 = true;
      else
        t1 = false;
      if (t1)
        builder.write$1(0, t2.afterDescriptionIfBody);
      t1 = t2.lineBreakProperties;
      if (t1)
        builder.write$1(0, t2.lineBreak);
      if (properties.length !== 0)
        builder.write$1(0, t2.beforeProperties);
      t4 = t2.bodyIndent;
      builder.incrementPrefixOtherLines$2$updateCurrentLine(t4, false);
      if (node.get$emptyBodyDescription() != null && properties.length === 0 && children.length === 0 && prefixLineOne.length !== 0) {
        t5 = node.get$emptyBodyDescription();
        t5.toString;
        builder.write$1(0, t5);
        if (t1)
          builder.write$1(0, t2.lineBreak);
      }
      for (t5 = t2.propertySeparator, t1 = !t1, i = 0; t6 = properties.length, i < t6; ++i) {
        property = properties[i];
        if (i > 0)
          builder.write$1(0, t5);
        t6 = property.get$textTreeConfiguration();
        t6.toString;
        if (property.get$style(property) === C.DiagnosticsTreeStyle_8) {
          propertyRender = _this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(property, t2, t6.prefixLineOne, t6.childLinkSpace + t6.prefixOtherLines);
          propertyLines = propertyRender.split(_s1_);
          if (propertyLines.length === 1 && t1)
            builder.write$1(0, C.JSArray_methods.get$first(propertyLines));
          else {
            builder.write$2$allowWrap(0, propertyRender, false);
            if (!C.JSString_methods.endsWith$1(propertyRender, _s1_))
              builder.write$1(0, _s1_);
          }
        } else {
          t7 = builder._nextPrefixOtherLines;
          t7 = H.S(t7 == null ? builder._prefixOtherLines : t7) + t6.prefixLineOne;
          t8 = builder._nextPrefixOtherLines;
          builder.writeRawLines$1(_this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(property, t2, t7, H.S(t8 == null ? builder._prefixOtherLines : t8) + t6.childLinkSpace + t6.prefixOtherLines));
        }
      }
      if (t6 !== 0)
        builder.write$1(0, t2.afterProperties);
      builder.write$1(0, "");
      if (t1)
        builder.write$1(0, t2.lineBreak);
      prefixChildrenRaw = H.S(_box_0.prefixOtherLines) + t4;
      if (children.length === 0)
        if (t2.addBlankLineIfNoChildren)
          if (builder.get$requiresMultipleLines()) {
            t1 = builder._nextPrefixOtherLines;
            if (t1 == null)
              t1 = builder._prefixOtherLines;
            t1.toString;
            t1 = C.JSString_methods.trimRight$0(t1).length !== 0;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      if (t1)
        builder.write$1(0, t2.lineBreak);
      if (children.length !== 0 && t2.showChildren) {
        if (t2.isBlankLineBetweenPropertiesAndChildren && properties.length !== 0 && C.JSArray_methods.get$first(children).get$textTreeConfiguration().isBlankLineBetweenPropertiesAndChildren)
          builder.write$1(0, t2.lineBreak);
        builder._prefixOtherLines = _box_0.prefixOtherLines;
        builder._nextPrefixOtherLines = null;
        for (t1 = t2.lineBreak, t4 = builder.wrapWidth, i = 0; i < children.length; ++i) {
          child = children[i];
          childStyle = child.get$style(child);
          if (childStyle === C.DiagnosticsTreeStyle_8 || childStyle === C.DiagnosticsTreeStyle_9)
            t5 = t2;
          else
            t5 = child.get$textTreeConfiguration();
          t5.toString;
          if (i === children.length - 1) {
            lastChildPrefixLineOne = prefixChildrenRaw + t5.prefixLastChildLineOne;
            t6 = t5.childLinkSpace;
            childPrefixOtherLines = prefixChildrenRaw + t6 + t5.prefixOtherLines;
            builder.writeRawLines$1(_this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(child, t2, lastChildPrefixLineOne, childPrefixOtherLines));
            t7 = t5.footer;
            if (t7.length !== 0) {
              builder._prefixOtherLines = prefixChildrenRaw;
              builder._nextPrefixOtherLines = null;
              builder.write$1(0, t6 + t7);
              t5 = t5.mandatoryFooter;
              if (t5.length !== 0)
                builder.writeStretched$2(t5, Math.max(t4, t3 + childPrefixOtherLines.length));
              builder.write$1(0, t1);
            }
          } else {
            t6 = children[i + 1];
            childStyle = t6.get$style(t6);
            if (childStyle === C.DiagnosticsTreeStyle_8 || childStyle === C.DiagnosticsTreeStyle_9)
              nextChildStyle = t2;
            else
              nextChildStyle = t6.get$textTreeConfiguration();
            childPrefixLineOne = prefixChildrenRaw + t5.prefixLineOne;
            childPrefixOtherLines = prefixChildrenRaw + nextChildStyle.linkCharacter + t5.prefixOtherLines;
            builder.writeRawLines$1(_this.render$4$parentConfiguration$prefixLineOne$prefixOtherLines(child, t2, childPrefixLineOne, childPrefixOtherLines));
            t6 = t5.footer;
            if (t6.length !== 0) {
              builder._prefixOtherLines = prefixChildrenRaw;
              builder._nextPrefixOtherLines = null;
              builder.write$1(0, t5.linkCharacter + t6);
              t5 = t5.mandatoryFooter;
              if (t5.length !== 0)
                builder.writeStretched$2(t5, Math.max(t4, t3 + childPrefixOtherLines.length));
              builder.write$1(0, t1);
            }
          }
        }
      }
      if (parentConfiguration == null && t2.mandatoryFooter.length !== 0) {
        builder.writeStretched$2(t2.mandatoryFooter, builder.wrapWidth);
        builder.write$1(0, t2.lineBreak);
      }
      if (builder._currentLine._contents.length !== 0)
        builder._finalizeLine$1(false);
      t1 = builder._diagnostics$_buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  Y.TextTreeRenderer__debugRender_visitor.prototype = {
    call$1: function(node) {
      var t1, t2, t3, t4, _i, child, t5;
      for (t1 = node.getChildren$0(), t2 = t1.length, t3 = this._box_0, t4 = this.descendants, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        t5 = t3.lines;
        if (t5 < 25) {
          ++t3.depth;
          t4.push(H.S(t3.prefixOtherLines) + C.JSString_methods.$mul("  ", t3.depth) + H.S(child));
          if (t3.depth < 5)
            this.call$1(child);
          --t3.depth;
        } else if (t5 === 25)
          t4.push(H.S(t3.prefixOtherLines) + "  ...(descendants list truncated after " + t3.lines + " lines)");
        ++t3.lines;
      }
    },
    $signature: 72
  };
  Y.TextTreeRenderer__debugRender_closure.prototype = {
    call$1: function(n) {
      var t1 = n.get$level(n);
      return t1.index >= this.$this._minLevel.index;
    },
    $signature: 153
  };
  Y.DiagnosticsNode.prototype = {
    get$level: function(_) {
      return C.DiagnosticLevel_3;
    },
    get$emptyBodyDescription: function() {
      return null;
    },
    get$allowWrap: function() {
      return false;
    },
    get$allowNameWrap: function() {
      return false;
    },
    get$allowTruncate: function() {
      return false;
    },
    toString$1$minLevel: function(_, minLevel) {
      return this.super$Object$toString(0);
    },
    toString$0: function($receiver) {
      return this.toString$1$minLevel($receiver, C.DiagnosticLevel_3);
    },
    get$textTreeConfiguration: function() {
      var t1 = this.get$style(this);
      t1.toString;
      switch (t1) {
        case C.DiagnosticsTreeStyle_0:
          return null;
        case C.DiagnosticsTreeStyle_3:
          return $.$get$denseTextConfiguration();
        case C.DiagnosticsTreeStyle_1:
          return $.$get$sparseTextConfiguration();
        case C.DiagnosticsTreeStyle_2:
          return $.$get$dashedTextConfiguration();
        case C.DiagnosticsTreeStyle_6:
          return $.$get$whitespaceTextConfiguration();
        case C.DiagnosticsTreeStyle_4:
          return $.$get$transitionTextConfiguration();
        case C.DiagnosticsTreeStyle_8:
          return $.$get$singleLineTextConfiguration();
        case C.DiagnosticsTreeStyle_9:
          return $.$get$errorPropertyTextConfiguration();
        case C.DiagnosticsTreeStyle_10:
          return $.$get$shallowTextConfiguration();
        case C.DiagnosticsTreeStyle_5:
          return $.$get$errorTextConfiguration();
        case C.DiagnosticsTreeStyle_11:
          return $.$get$whitespaceTextConfiguration();
        case C.DiagnosticsTreeStyle_7:
          return $.$get$flatTextConfiguration();
      }
    },
    get$name: function(receiver) {
      return this.name;
    },
    get$showName: function() {
      return this.showName;
    },
    get$style: function(receiver) {
      return this.style;
    }
  };
  Y.DiagnosticsProperty.prototype = {
    valueToString$1$parentConfiguration: function(parentConfiguration) {
      var v = this.get$value(this);
      return type$.DiagnosticableTree._is(v) ? v.toStringShort$0() : J.toString$0$(v);
    },
    toDescription$1$parentConfiguration: function(parentConfiguration) {
      var t2, result, _this = this,
        t1 = _this._description;
      if (t1 != null) {
        t2 = _this.tooltip;
        return t2 == null ? t1 : t1 + " (" + t2 + ")";
      }
      _this._maybeCacheValue$0();
      if (_this._diagnostics$_exception != null) {
        _this._maybeCacheValue$0();
        return "EXCEPTION (" + J.get$runtimeType$(_this._diagnostics$_exception).toString$0(0) + ")";
      }
      t1 = _this.ifNull;
      if (t1 != null && _this.get$value(_this) == null) {
        t1.toString;
        t2 = _this.tooltip;
        if (!(t2 == null))
          t1 = t1 + " (" + t2 + ")";
        return t1;
      }
      result = _this.valueToString$1$parentConfiguration(parentConfiguration);
      if (result.length === 0 && _this.ifEmpty != null) {
        t1 = _this.ifEmpty;
        t1.toString;
        result = t1;
      }
      t1 = _this.tooltip;
      return t1 == null ? result : result + " (" + t1 + ")";
    },
    get$value: function(_) {
      this._maybeCacheValue$0();
      return this._value;
    },
    _maybeCacheValue$0: function() {
      return;
    },
    get$level: function(_) {
      var t2, _this = this,
        t1 = _this._defaultLevel;
      if (t1 === C.DiagnosticLevel_0)
        return t1;
      _this._maybeCacheValue$0();
      if (_this._diagnostics$_exception != null)
        return C.DiagnosticLevel_7;
      if (_this.get$value(_this) == null && _this.missingIfNull)
        return C.DiagnosticLevel_4;
      t2 = _this.defaultValue;
      if (!J.$eq$(t2, C.C__NoDefaultValue) && J.$eq$(_this.get$value(_this), t2))
        return C.DiagnosticLevel_1;
      return t1;
    },
    getProperties$0: function(_) {
      return C.List_empty;
    },
    getChildren$0: function() {
      return C.List_empty;
    },
    get$allowWrap: function() {
      return this.allowWrap;
    },
    get$allowNameWrap: function() {
      return true;
    }
  };
  Y.DiagnosticableNode.prototype = {
    get$builder: function() {
      var t1 = this._cachedBuilder;
      return t1;
    },
    get$style: function(_) {
      var t1 = this.style;
      if (t1 == null)
        t1 = this.get$builder().defaultDiagnosticsTreeStyle;
      return t1;
    },
    get$emptyBodyDescription: function() {
      return "";
    },
    getProperties$0: function(_) {
      return C.List_empty;
    },
    getChildren$0: function() {
      return C.List_empty;
    },
    toDescription$1$parentConfiguration: function(parentConfiguration) {
      return "";
    }
  };
  Y.DiagnosticableTreeNode.prototype = {
    getChildren$0: function() {
      return this.value.debugDescribeChildren$0();
    }
  };
  Y.DiagnosticPropertiesBuilder.prototype = {
    add$1: function(_, property) {
    }
  };
  Y.Diagnosticable.prototype = {
    toStringShort$0: function() {
      return "<optimized out>#" + Y.shortHash(this);
    },
    toString$1$minLevel: function(_, minLevel) {
      var t1 = this.toStringShort$0();
      return t1;
    },
    toString$0: function($receiver) {
      return this.toString$1$minLevel($receiver, C.DiagnosticLevel_3);
    },
    debugFillProperties$1: function(properties) {
    }
  };
  Y.DiagnosticableTree.prototype = {
    toStringShort$0: function() {
      return "<optimized out>#" + Y.shortHash(this);
    },
    debugDescribeChildren$0: function() {
      return C.List_empty;
    }
  };
  Y.DiagnosticableTreeMixin.prototype = {
    toString$0: function(_) {
      return this.toDiagnosticsNode$1$style(C.DiagnosticsTreeStyle_8).super$Object$toString(0);
    },
    toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines: function(minLevel, prefixLineOne, prefixOtherLines) {
      this.toDiagnosticsNode$0();
      return "";
    },
    toStringShort$0: function() {
      return "<optimized out>#" + Y.shortHash(this);
    },
    toDiagnosticsNode$2$name$style: function($name, style) {
      return Y.DiagnosticableTreeNode$($name, style, this);
    },
    toDiagnosticsNode$1$style: function(style) {
      return this.toDiagnosticsNode$2$name$style(null, style);
    },
    toDiagnosticsNode$0: function() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    },
    debugDescribeChildren$0: function() {
      return C.List_empty;
    }
  };
  Y.DiagnosticsBlock.prototype = {
    getChildren$0: function() {
      return this._diagnostics$_children;
    },
    getProperties$0: function(_) {
      return this._properties;
    },
    toDescription$1$parentConfiguration: function(parentConfiguration) {
      return null;
    },
    get$level: function() {
      return C.DiagnosticLevel_3;
    },
    get$allowTruncate: function() {
      return this.allowTruncate;
    }
  };
  Y._DiagnosticableTree_Object_Diagnosticable.prototype = {};
  D.Key.prototype = {};
  D.LocalKey.prototype = {};
  F.LicenseEntry.prototype = {};
  F.LicenseEntryWithLineBreaks.prototype = {
    text$0: function($receiver) {
      return this.text.call$0();
    }
  };
  B.AbstractNode.prototype = {
    redepthChild$1: function(child) {
      var t1 = child._node$_depth,
        t2 = this._node$_depth;
      if (t1 <= t2) {
        child._node$_depth = t2 + 1;
        child.redepthChildren$0();
      }
    },
    redepthChildren$0: function() {
    },
    get$owner: function() {
      return this._node$_owner;
    },
    attach$1: function(owner) {
      this._node$_owner = owner;
    },
    detach$0: function(_) {
      this._node$_owner = null;
    },
    get$parent: function(_) {
      return this._node$_parent;
    },
    adoptChild$1: function(child) {
      var t1;
      child._node$_parent = this;
      t1 = this._node$_owner;
      if (t1 != null)
        child.attach$1(t1);
      this.redepthChild$1(child);
    },
    dropChild$1: function(child) {
      child._node$_parent = null;
      if (this._node$_owner != null)
        child.detach$0(0);
    }
  };
  R.ObserverList.prototype = {
    get$_observer_list$_set: function() {
      var _this = this,
        t1 = _this.__ObserverList__set;
      if (t1 == null) {
        t1 = P.HashSet_HashSet(_this.$ti._precomputed1);
        if (_this.__ObserverList__set == null)
          _this.__ObserverList__set = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("_set"));
      }
      return t1;
    },
    remove$1: function(_, item) {
      this._isDirty = true;
      this.get$_observer_list$_set().clear$0(0);
      return C.JSArray_methods.remove$1(this._observer_list$_list, item);
    },
    contains$1: function(_, element) {
      var _this = this,
        t1 = _this._observer_list$_list;
      if (t1.length < 3)
        return C.JSArray_methods.contains$1(t1, element);
      if (_this._isDirty) {
        _this.get$_observer_list$_set().addAll$1(0, t1);
        _this._isDirty = false;
      }
      return _this.get$_observer_list$_set().contains$1(0, element);
    },
    get$iterator: function(_) {
      var t1 = this._observer_list$_list;
      return new J.ArrayIterator(t1, t1.length);
    },
    get$isEmpty: function(_) {
      return this._observer_list$_list.length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._observer_list$_list.length !== 0;
    }
  };
  R.HashedObserverList.prototype = {
    add$1: function(_, item) {
      var t1 = this._observer_list$_map,
        t2 = t1.$index(0, item);
      t1.$indexSet(0, item, (t2 == null ? 0 : t2) + 1);
    },
    remove$1: function(_, item) {
      var t1 = this._observer_list$_map,
        value = t1.$index(0, item);
      if (value == null)
        return false;
      if (value === 1)
        t1.remove$1(0, item);
      else
        t1.$indexSet(0, item, value - 1);
      return true;
    },
    contains$1: function(_, element) {
      return this._observer_list$_map.containsKey$1(0, element);
    },
    get$iterator: function(_) {
      var t1 = this._observer_list$_map;
      t1 = t1.get$keys(t1);
      return t1.get$iterator(t1);
    },
    get$isEmpty: function(_) {
      var t1 = this._observer_list$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty: function(_) {
      var t1 = this._observer_list$_map;
      return t1.get$isNotEmpty(t1);
    }
  };
  T.TargetPlatform.prototype = {
    toString$0: function(_) {
      return this._platform$_name;
    }
  };
  G.WriteBuffer.prototype = {
    get$_eightBytesAsList: function() {
      var t1 = this.__WriteBuffer__eightBytesAsList;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_eightBytesAsList")) : t1;
    },
    _alignTo$1: function(alignment) {
      var t1, i,
        mod = C.JSInt_methods.$mod(this._serialization$_buffer._typed_buffer$_length, alignment);
      if (mod !== 0)
        for (t1 = alignment - mod, i = 0; i < t1; ++i)
          this._serialization$_buffer._typed_buffer$_add$1(0, 0);
    },
    done$0: function() {
      var t1 = this._serialization$_buffer,
        t2 = t1._typed_buffer$_buffer,
        result = H.NativeByteData_NativeByteData$view(t2.buffer, 0, t1._typed_buffer$_length * t2.BYTES_PER_ELEMENT);
      this._serialization$_buffer = null;
      return result;
    }
  };
  G.ReadBuffer.prototype = {
    getUint8$0: function(_) {
      return this.data.getUint8(this._serialization$_position++);
    },
    getInt64$0: function(_) {
      var t1 = this._serialization$_position,
        t2 = $.$get$Endian_host();
      C.NativeByteData_methods.getInt64$2(this.data, t1, t2);
    },
    getUint8List$1: function($length) {
      var t1 = this.data,
        list = H.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + this._serialization$_position, $length);
      this._serialization$_position += $length;
      return list;
    },
    getInt64List$1: function($length) {
      var t1;
      this._alignTo$1(8);
      t1 = this.data;
      C.NativeByteBuffer_methods.asInt64List$2(t1.buffer, t1.byteOffset + this._serialization$_position, $length);
    },
    _alignTo$1: function(alignment) {
      var t1 = this._serialization$_position,
        mod = C.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this._serialization$_position = t1 + (alignment - mod);
    }
  };
  R.StackFrame.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.number, _this.$package, _this.line, _this.column, _this.className, _this.method, _this.source, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof R.StackFrame && other.number === _this.number && other.$package === _this.$package && other.line === _this.line && other.column === _this.column && other.className === _this.className && other.method === _this.method && other.source === _this.source;
    },
    toString$0: function(_) {
      var _this = this;
      return "StackFrame(#" + _this.number + ", " + _this.packageScheme + ":" + _this.$package + "/" + _this.packagePath + ":" + _this.line + ":" + _this.column + ", className: " + _this.className + ", method: " + _this.method + ")";
    }
  };
  R.StackFrame_fromStackString_closure.prototype = {
    call$1: function(line) {
      return line.length !== 0;
    },
    $signature: 22
  };
  O.SynchronousFuture.prototype = {
    then$1$2$onError: function(_, onValue, onError, $R) {
      var result = onValue.call$1(this._synchronous_future$_value);
      if ($R._eval$1("Future<0>")._is(result))
        return result;
      return new O.SynchronousFuture($R._as(result), $R._eval$1("SynchronousFuture<0>"));
    },
    then$1$1: function($receiver, onValue, $R) {
      return this.then$1$2$onError($receiver, onValue, null, $R);
    },
    whenComplete$1: function(action) {
      var result, e, stack, t1, exception, _this = this;
      try {
        result = action.call$0();
        if (type$.Future_dynamic._is(result)) {
          t1 = J.then$1$1$x(result, new O.SynchronousFuture_whenComplete_closure(_this), _this.$ti._precomputed1);
          return t1;
        }
        return _this;
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        t1 = P.Future_Future$error(e, stack, _this.$ti._precomputed1);
        return t1;
      }
    },
    $isFuture: 1
  };
  O.SynchronousFuture_whenComplete_closure.prototype = {
    call$1: function(value) {
      return this.$this._synchronous_future$_value;
    },
    $signature: function() {
      return this.$this.$ti._eval$1("1(@)");
    }
  };
  D.GestureDisposition.prototype = {
    toString$0: function(_) {
      return this._arena$_name;
    }
  };
  D.GestureArenaMember.prototype = {};
  D.GestureArenaEntry.prototype = {};
  D._GestureArena.prototype = {
    toString$0: function(_) {
      var _this = this,
        t1 = _this.members;
      t1 = t1.length === 0 ? "" + "<empty>" : "" + new H.MappedListIterable(t1, new D._GestureArena_toString_closure(_this), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$1(0, ", ");
      if (_this.isOpen)
        t1 += " [open]";
      if (_this.isHeld)
        t1 += " [held]";
      if (_this.hasPendingSweep)
        t1 += " [hasPendingSweep]";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  D._GestureArena_toString_closure.prototype = {
    call$1: function(member) {
      if (member === this.$this.eagerWinner)
        return member.toString$0(0) + " (eager winner)";
      return member.toString$0(0);
    },
    $signature: 155
  };
  D.GestureArenaManager.prototype = {
    add$2: function(_, pointer, member) {
      this._arenas.putIfAbsent$2(0, pointer, new D.GestureArenaManager_add_closure(this, pointer)).members.push(member);
      return new D.GestureArenaEntry(this, pointer, member);
    },
    close$1: function(_, pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isOpen = false;
      this._tryToResolveArena$2(pointer, state);
    },
    sweep$1: function(pointer) {
      var i,
        t1 = this._arenas,
        state = t1.$index(0, pointer);
      if (state == null)
        return;
      if (state.isHeld) {
        state.hasPendingSweep = true;
        return;
      }
      t1.remove$1(0, pointer);
      t1 = state.members;
      if (t1.length !== 0) {
        C.JSArray_methods.get$first(t1).acceptGesture$1(pointer);
        for (i = 1; i < t1.length; ++i)
          t1[i].rejectGesture$1(pointer);
      }
    },
    hold$1: function(pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isHeld = true;
    },
    release$1: function(_, pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isHeld = false;
      if (state.hasPendingSweep)
        this.sweep$1(pointer);
    },
    _resolve$3: function(pointer, member, disposition) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      if (disposition === C.GestureDisposition_1) {
        C.JSArray_methods.remove$1(state.members, member);
        member.rejectGesture$1(pointer);
        if (!state.isOpen)
          this._tryToResolveArena$2(pointer, state);
      } else if (state.isOpen) {
        if (state.eagerWinner == null)
          state.eagerWinner = member;
      } else
        this._resolveInFavorOf$3(pointer, state, member);
    },
    _tryToResolveArena$2: function(pointer, state) {
      var t1 = state.members.length;
      if (t1 === 1)
        P.scheduleMicrotask(new D.GestureArenaManager__tryToResolveArena_closure(this, pointer, state));
      else if (t1 === 0)
        this._arenas.remove$1(0, pointer);
      else {
        t1 = state.eagerWinner;
        if (t1 != null)
          this._resolveInFavorOf$3(pointer, state, t1);
      }
    },
    _resolveByDefault$2: function(pointer, state) {
      var t1 = this._arenas;
      if (!t1.containsKey$1(0, pointer))
        return;
      t1.remove$1(0, pointer);
      C.JSArray_methods.get$first(state.members).acceptGesture$1(pointer);
    },
    _resolveInFavorOf$3: function(pointer, state, member) {
      var t1, t2, _i, rejectedMember;
      this._arenas.remove$1(0, pointer);
      for (t1 = state.members, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        rejectedMember = t1[_i];
        if (rejectedMember !== member)
          rejectedMember.rejectGesture$1(pointer);
      }
      member.acceptGesture$1(pointer);
    }
  };
  D.GestureArenaManager_add_closure.prototype = {
    call$0: function() {
      return new D._GestureArena(H.setRuntimeTypeInfo([], type$.JSArray_GestureArenaMember));
    },
    $signature: 156
  };
  D.GestureArenaManager__tryToResolveArena_closure.prototype = {
    call$0: function() {
      return this.$this._resolveByDefault$2(this.pointer, this.state);
    },
    $signature: 0
  };
  N._Resampler.prototype = {
    stop$0: function(_) {
      var t1, t2, t3;
      for (t1 = this._resamplers, t2 = t1.get$values(t1), t2 = t2.get$iterator(t2), t3 = this._handlePointerEvent; t2.moveNext$0();)
        t2.get$current(t2).stop$1(0, t3);
      t1.clear$0(0);
      this._frameTime = C.Duration_0;
    }
  };
  N.GestureBinding.prototype = {
    _handlePointerDataPacket$1: function(packet) {
      var t1 = packet.data,
        t2 = $.$get$window()._debugDevicePixelRatio;
      this.GestureBinding__pendingPointerEvents.addAll$1(0, G.PointerEventConverter_expand(t1, t2 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t2));
      if (this._lockCount <= 0)
        this._flushPointerEventQueue$0();
    },
    cancelPointer$1: function(pointer) {
      var t1 = this.GestureBinding__pendingPointerEvents;
      if (t1._head === t1._tail && this._lockCount <= 0)
        P.scheduleMicrotask(this.get$_flushPointerEventQueue());
      t1.addFirst$1(F.PointerCancelEvent$(0, 0, 0, 0, 0, C.PointerDeviceKind_0, false, 0, pointer, C.Offset_0_0, 1, 1, 0, 0, 0, 0, 0, 0, C.Duration_0));
    },
    _flushPointerEventQueue$0: function() {
      for (var t1 = this.GestureBinding__pendingPointerEvents; !t1.get$isEmpty(t1);)
        this.handlePointerEvent$1(t1.removeFirst$0());
    },
    handlePointerEvent$1: function($event) {
      this.get$_resampler().stop$0(0);
      this._handlePointerEventImmediately$1($event);
    },
    _handlePointerEventImmediately$1: function($event) {
      var hitTestResult, t2, _this = this,
        t1 = type$.PointerDownEvent._is($event);
      if (t1 || type$.PointerSignalEvent._is($event) || type$.PointerHoverEvent._is($event)) {
        hitTestResult = O.HitTestResult$();
        t2 = $event.get$position($event);
        _this.get$_pipelineOwner()._rootNode.hitTest$2$position(hitTestResult, t2);
        _this.super$GestureBinding$hitTest(hitTestResult, t2);
        if (t1)
          _this.GestureBinding__hitTests.$indexSet(0, $event.get$pointer(), hitTestResult);
        t1 = hitTestResult;
      } else if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event)) {
        hitTestResult = _this.GestureBinding__hitTests.remove$1(0, $event.get$pointer());
        t1 = hitTestResult;
      } else
        t1 = $event.get$down() ? _this.GestureBinding__hitTests.$index(0, $event.get$pointer()) : null;
      if (t1 != null || type$.PointerAddedEvent._is($event) || type$.PointerRemovedEvent._is($event))
        _this.dispatchEvent$2(0, $event, t1);
    },
    hitTest$2: function(result, position) {
      var t1 = new O.HitTestEntry(this);
      result._globalizeTransforms$0();
      t1._transform = C.JSArray_methods.get$last(result._transforms);
      result._path.push(t1);
    },
    dispatchEvent$2: function(_, $event, hitTestResult) {
      var exception, stack, entry, exception0, stack0, t1, t2, _i, t3, t4,
        _s15_ = "gesture library";
      if (hitTestResult == null) {
        try {
          this.GestureBinding_pointerRouter.route$1($event);
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          U.FlutterError_reportError(N.FlutterErrorDetailsForPointerEventDispatcher$(U.ErrorDescription$("while dispatching a non-hit-tested pointer event"), $event, exception, null, new N.GestureBinding_dispatchEvent_closure($event), _s15_, stack));
        }
        return;
      }
      for (t1 = hitTestResult._path, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        try {
          J.get$target$x(entry).handleEvent$2($event.transformed$1(entry._transform), entry);
        } catch (exception) {
          exception0 = H.unwrapException(exception);
          stack0 = H.getTraceFromException(exception);
          t3 = U.ErrorDescription$("while dispatching a pointer event");
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new N.FlutterErrorDetailsForPointerEventDispatcher(exception0, stack0, _s15_, t3, new N.GestureBinding_dispatchEvent_closure0($event, entry), false));
        }
      }
    },
    handleEvent$2: function($event, entry) {
      var _this = this;
      _this.GestureBinding_pointerRouter.route$1($event);
      if (type$.PointerDownEvent._is($event))
        _this.GestureBinding_gestureArena.close$1(0, $event.get$pointer());
      else if (type$.PointerUpEvent._is($event))
        _this.GestureBinding_gestureArena.sweep$1($event.get$pointer());
      else if (type$.PointerSignalEvent._is($event))
        _this.GestureBinding_pointerSignalResolver.resolve$1($event);
    },
    _handleSampleTimeChanged$0: function() {
      if (this._lockCount <= 0)
        this.get$_resampler().stop$0(0);
    },
    get$_resampler: function() {
      var _this = this,
        t1 = _this.GestureBinding___GestureBinding__resampler;
      if (t1 == null) {
        $.$get$Stopwatch__frequency();
        t1 = _this.GestureBinding___GestureBinding__resampler = new N._Resampler(P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.PointerEventResampler), C.Duration_0, new P.Stopwatch(), C.Duration_0, C.Duration_0, _this.get$_handlePointerEventImmediately(), _this.get$_handleSampleTimeChanged(), C.Duration_16667);
      }
      return t1;
    }
  };
  N.GestureBinding_dispatchEvent_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return Y.DiagnosticsProperty$("Event", $async$self.event, true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.PointerEvent);
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 16
  };
  N.GestureBinding_dispatchEvent_closure0.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return Y.DiagnosticsProperty$("Event", $async$self.event, true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.PointerEvent);
              case 2:
                // after yield
                t1 = $async$self.entry;
                $async$goto = 3;
                return Y.DiagnosticsProperty$("Target", t1.get$target(t1), true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.HitTestTarget);
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 16
  };
  N.FlutterErrorDetailsForPointerEventDispatcher.prototype = {};
  O.DragDownDetails.prototype = {
    toString$0: function(_) {
      return "DragDownDetails(" + this.globalPosition.toString$0(0) + ")";
    }
  };
  O.DragStartDetails.prototype = {
    toString$0: function(_) {
      return "DragStartDetails(" + this.globalPosition.toString$0(0) + ")";
    }
  };
  O.DragUpdateDetails.prototype = {
    toString$0: function(_) {
      return "DragUpdateDetails(" + this.delta.toString$0(0) + ")";
    }
  };
  O.DragEndDetails.prototype = {
    toString$0: function(_) {
      return "DragEndDetails(" + this.velocity.toString$0(0) + ")";
    }
  };
  F.PointerEvent0.prototype = {
    get$localPosition: function() {
      return this.position;
    },
    get$localDelta: function() {
      return this.delta;
    },
    get$timeStamp: function(receiver) {
      return this.timeStamp;
    },
    get$pointer: function() {
      return this.pointer;
    },
    get$kind: function(receiver) {
      return this.kind;
    },
    get$device: function(receiver) {
      return this.device;
    },
    get$position: function(receiver) {
      return this.position;
    },
    get$delta: function() {
      return this.delta;
    },
    get$buttons: function(receiver) {
      return this.buttons;
    },
    get$down: function() {
      return this.down;
    },
    get$obscured: function() {
      return this.obscured;
    },
    get$pressureMin: function() {
      return this.pressureMin;
    },
    get$pressureMax: function() {
      return this.pressureMax;
    },
    get$distance: function() {
      return this.distance;
    },
    get$distanceMax: function() {
      return this.distanceMax;
    },
    get$size: function(receiver) {
      return this.size;
    },
    get$radiusMajor: function() {
      return this.radiusMajor;
    },
    get$radiusMinor: function() {
      return this.radiusMinor;
    },
    get$radiusMin: function() {
      return this.radiusMin;
    },
    get$radiusMax: function() {
      return this.radiusMax;
    },
    get$orientation: function(receiver) {
      return this.orientation;
    },
    get$tilt: function() {
      return this.tilt;
    },
    get$synthesized: function() {
      return this.synthesized;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._PointerEventDescription.prototype = {};
  F._AbstractPointerEvent.prototype = {$isPointerEvent0: 1};
  F._TransformedPointerEvent.prototype = {
    get$timeStamp: function(_) {
      return this.get$original().timeStamp;
    },
    get$pointer: function() {
      return this.get$original().pointer;
    },
    get$kind: function(_) {
      return this.get$original().kind;
    },
    get$device: function(_) {
      return this.get$original().device;
    },
    get$position: function(_) {
      return this.get$original().position;
    },
    get$delta: function() {
      return this.get$original().delta;
    },
    get$buttons: function(_) {
      return this.get$original().buttons;
    },
    get$down: function() {
      return this.get$original().down;
    },
    get$obscured: function() {
      this.get$original();
      return false;
    },
    get$pressureMin: function() {
      return this.get$original().pressureMin;
    },
    get$pressureMax: function() {
      return this.get$original().pressureMax;
    },
    get$distance: function() {
      return this.get$original().distance;
    },
    get$distanceMax: function() {
      return this.get$original().distanceMax;
    },
    get$size: function(_) {
      return this.get$original().size;
    },
    get$radiusMajor: function() {
      return this.get$original().radiusMajor;
    },
    get$radiusMinor: function() {
      return this.get$original().radiusMinor;
    },
    get$radiusMin: function() {
      return this.get$original().radiusMin;
    },
    get$radiusMax: function() {
      return this.get$original().radiusMax;
    },
    get$orientation: function(_) {
      return this.get$original().orientation;
    },
    get$tilt: function() {
      return this.get$original().tilt;
    },
    get$synthesized: function() {
      return this.get$original().synthesized;
    },
    get$localPosition: function() {
      var _this = this,
        t1 = _this.___TransformedPointerEvent_localPosition;
      if (t1 == null) {
        t1 = F.PointerEvent_transformPosition(_this.get$transform(_this), _this.get$original().position);
        if (_this.___TransformedPointerEvent_localPosition == null)
          _this.___TransformedPointerEvent_localPosition = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("localPosition"));
      }
      return t1;
    },
    get$localDelta: function() {
      var t2, t3, _this = this,
        t1 = _this.___TransformedPointerEvent_localDelta;
      if (t1 == null) {
        t1 = _this.get$transform(_this);
        t2 = _this.get$original();
        t3 = _this.get$original();
        t3 = F.PointerEvent_transformDeltaViaPositions(t1, _this.get$localPosition(), t2.delta, t3.position);
        if (_this.___TransformedPointerEvent_localDelta == null) {
          _this.___TransformedPointerEvent_localDelta = t3;
          t1 = t3;
        } else
          t1 = H.throwExpression(H.LateError$fieldADI("localDelta"));
      }
      return t1;
    }
  };
  F._CopyPointerAddedEvent.prototype = {};
  F.PointerAddedEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerAddedEvent(this, transform);
    }
  };
  F._TransformedPointerAddedEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerAddedEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._CopyPointerRemovedEvent.prototype = {};
  F.PointerRemovedEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerRemovedEvent(this, transform);
    }
  };
  F._TransformedPointerRemovedEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerRemovedEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._CopyPointerHoverEvent.prototype = {};
  F.PointerHoverEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerHoverEvent(this, transform);
    }
  };
  F._TransformedPointerHoverEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerHoverEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._CopyPointerEnterEvent.prototype = {};
  F.PointerEnterEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerEnterEvent(this, transform);
    }
  };
  F._TransformedPointerEnterEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerEnterEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._CopyPointerExitEvent.prototype = {};
  F.PointerExitEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerExitEvent(this, transform);
    }
  };
  F._TransformedPointerExitEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerExitEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._CopyPointerDownEvent.prototype = {};
  F.PointerDownEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerDownEvent(this, transform);
    }
  };
  F._TransformedPointerDownEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerDownEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._CopyPointerMoveEvent.prototype = {};
  F.PointerMoveEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerMoveEvent(this, transform);
    }
  };
  F._TransformedPointerMoveEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerMoveEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._CopyPointerUpEvent.prototype = {};
  F.PointerUpEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerUpEvent(this, transform);
    }
  };
  F._TransformedPointerUpEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerUpEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F.PointerSignalEvent.prototype = {};
  F._CopyPointerScrollEvent.prototype = {};
  F.PointerScrollEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerScrollEvent(this, transform);
    }
  };
  F._TransformedPointerScrollEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerSignalEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._CopyPointerCancelEvent.prototype = {};
  F.PointerCancelEvent.prototype = {
    transformed$1: function(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new F._TransformedPointerCancelEvent(this, transform);
    }
  };
  F._TransformedPointerCancelEvent.prototype = {
    transformed$1: function(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerCancelEvent: 1,
    get$original: function() {
      return this.original;
    },
    get$transform: function(receiver) {
      return this.transform;
    }
  };
  F._PointerAddedEvent_PointerEvent__PointerEventDescription.prototype = {};
  F._PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent.prototype = {};
  F._PointerCancelEvent_PointerEvent__PointerEventDescription.prototype = {};
  F._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent.prototype = {};
  F._PointerDownEvent_PointerEvent__PointerEventDescription.prototype = {};
  F._PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent.prototype = {};
  F._PointerEnterEvent_PointerEvent__PointerEventDescription.prototype = {};
  F._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent.prototype = {};
  F._PointerEvent_Object_Diagnosticable.prototype = {};
  F._PointerExitEvent_PointerEvent__PointerEventDescription.prototype = {};
  F._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent.prototype = {};
  F._PointerHoverEvent_PointerEvent__PointerEventDescription.prototype = {};
  F._PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent.prototype = {};
  F._PointerMoveEvent_PointerEvent__PointerEventDescription.prototype = {};
  F._PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent.prototype = {};
  F._PointerRemovedEvent_PointerEvent__PointerEventDescription.prototype = {};
  F._PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent.prototype = {};
  F._PointerScrollEvent_PointerSignalEvent__PointerEventDescription.prototype = {};
  F._PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent.prototype = {};
  F._PointerUpEvent_PointerEvent__PointerEventDescription.prototype = {};
  F._PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent.prototype = {};
  F.__TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent.prototype = {};
  F.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent.prototype = {};
  F.__TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent.prototype = {};
  F.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent.prototype = {};
  F.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable.prototype = {};
  F.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription.prototype = {};
  F.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent.prototype = {};
  F.__TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent.prototype = {};
  F.__TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent.prototype = {};
  F.__TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent.prototype = {};
  F.__TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent.prototype = {};
  F.__TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent.prototype = {};
  O.HitTestEntry.prototype = {
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(" + this.get$target(this).toString$0(0) + ")";
    },
    get$target: function(receiver) {
      return this.target;
    }
  };
  O._TransformPart.prototype = {};
  O._MatrixTransformPart.prototype = {
    multiply$1: function(_, rhs) {
      return type$.Matrix4._as(this.matrix.$mul(0, rhs));
    }
  };
  O._OffsetTransformPart.prototype = {
    multiply$1: function(_, rhs) {
      var t3, tx, ty, t4,
        t1 = new Float64Array(16),
        t2 = new E.Matrix4(t1);
      t2.setFrom$1(rhs);
      t3 = this.offset;
      tx = t3._dx;
      ty = t3._dy;
      t3 = t1[0];
      t4 = t1[3];
      t1[0] = t3 + tx * t4;
      t1[1] = t1[1] + ty * t4;
      t1[2] = t1[2] + 0 * t4;
      t1[3] = t4;
      t4 = t1[4];
      t3 = t1[7];
      t1[4] = t4 + tx * t3;
      t1[5] = t1[5] + ty * t3;
      t1[6] = t1[6] + 0 * t3;
      t1[7] = t3;
      t3 = t1[8];
      t4 = t1[11];
      t1[8] = t3 + tx * t4;
      t1[9] = t1[9] + ty * t4;
      t1[10] = t1[10] + 0 * t4;
      t1[11] = t4;
      t4 = t1[12];
      t3 = t1[15];
      t1[12] = t4 + tx * t3;
      t1[13] = t1[13] + ty * t3;
      t1[14] = t1[14] + 0 * t3;
      t1[15] = t3;
      return t2;
    }
  };
  O.HitTestResult.prototype = {
    _globalizeTransforms$0: function() {
      var t2, last, t3, _i,
        t1 = this._localTransforms;
      if (t1.length === 0)
        return;
      t2 = this._transforms;
      last = C.JSArray_methods.get$last(t2);
      for (t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        last = t1[_i].multiply$1(0, last);
        t2.push(last);
      }
      C.JSArray_methods.set$length(t1, 0);
    },
    popTransform$0: function() {
      var t1 = this._localTransforms;
      if (t1.length !== 0)
        t1.pop();
      else
        this._transforms.pop();
    },
    toString$0: function(_) {
      var t1 = this._path;
      return "HitTestResult(" + (t1.length === 0 ? "<empty path>" : C.JSArray_methods.join$1(t1, ", ")) + ")";
    }
  };
  T.LongPressGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      var t1;
      switch ($event.get$buttons($event)) {
        case 1:
          if (this.onLongPress == null)
            t1 = true;
          else
            t1 = false;
          if (t1)
            return false;
          break;
        case 2:
          return false;
        case 4:
          return false;
        default:
          return false;
      }
      return this.super$GestureRecognizer$isPointerAllowed($event);
    },
    didExceedDeadline$0: function() {
      var t1, _this = this;
      _this.resolve$1(C.GestureDisposition_0);
      _this._longPressAccepted = true;
      t1 = _this.primaryPointer;
      t1.toString;
      _this.super$PrimaryPointerGestureRecognizer$acceptGesture(t1);
      _this._checkLongPressStart$0();
    },
    handlePrimaryPointer$1: function($event) {
      var t1, _this = this;
      if (!$event.get$synthesized()) {
        if (type$.PointerDownEvent._is($event)) {
          t1 = new R.VelocityTracker($event.get$kind($event), P.List_List$filled(20, null, false, type$.nullable__PointAtTime));
          _this._velocityTracker = t1;
          t1.addPosition$2($event.get$timeStamp($event), $event.get$localPosition());
        }
        if (type$.PointerMoveEvent._is($event)) {
          t1 = _this._velocityTracker;
          t1.toString;
          t1.addPosition$2($event.get$timeStamp($event), $event.get$localPosition());
        }
      }
      if (type$.PointerUpEvent._is($event)) {
        if (_this._longPressAccepted)
          _this._checkLongPressEnd$1($event);
        else
          _this.resolve$1(C.GestureDisposition_1);
        _this._reset$0();
      } else if (type$.PointerCancelEvent._is($event))
        _this._reset$0();
      else if (type$.PointerDownEvent._is($event)) {
        _this._longPressOrigin = new S.OffsetPair($event.get$localPosition(), $event.get$position($event));
        _this._long_press$_initialButtons = $event.get$buttons($event);
      } else if (type$.PointerMoveEvent._is($event))
        if ($event.get$buttons($event) !== _this._long_press$_initialButtons) {
          _this.resolve$1(C.GestureDisposition_1);
          t1 = _this.primaryPointer;
          t1.toString;
          _this.stopTrackingPointer$1(t1);
        } else if (_this._longPressAccepted)
          _this._checkLongPressMoveUpdate$1($event);
    },
    _checkLongPressStart$0: function() {
      switch (this._long_press$_initialButtons) {
        case 1:
          var t1 = this.onLongPress;
          if (t1 != null)
            this.invokeCallback$2("onLongPress", t1);
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    _checkLongPressMoveUpdate$1: function($event) {
      $event.get$position($event);
      $event.get$localPosition();
      $event.get$position($event).$sub(0, this._longPressOrigin.global);
      $event.get$localPosition().$sub(0, this._longPressOrigin.local);
      switch (this._long_press$_initialButtons) {
        case 1:
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    _checkLongPressEnd$1: function($event) {
      this._velocityTracker.getVelocityEstimate$0();
      $event.get$position($event);
      $event.get$localPosition();
      this._velocityTracker = null;
      switch (this._long_press$_initialButtons) {
        case 1:
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    _reset$0: function() {
      var _this = this;
      _this._longPressAccepted = false;
      _this._velocityTracker = _this._long_press$_initialButtons = _this._longPressOrigin = null;
    },
    resolve$1: function(disposition) {
      if (this._longPressAccepted && disposition === C.GestureDisposition_1)
        this._reset$0();
      this.super$OneSequenceGestureRecognizer$resolve(disposition);
    },
    acceptGesture$1: function(pointer) {
    }
  };
  B._Vector.prototype = {
    $index: function(_, i) {
      return this._lsq_solver$_elements[i + this._lsq_solver$_offset];
    },
    $mul: function(_, a) {
      var t1, t2, t3, t4, t5, result, i;
      for (t1 = this._lsq_solver$_length, t2 = this._lsq_solver$_elements, t3 = this._lsq_solver$_offset, t4 = a._lsq_solver$_elements, t5 = a._lsq_solver$_offset, result = 0, i = 0; i < t1; ++i)
        result += t2[i + t3] * t4[i + t5];
      return result;
    }
  };
  B._Matrix.prototype = {};
  B.PolynomialFit.prototype = {
    get$confidence: function(_) {
      var t1 = this.__PolynomialFit_confidence;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("confidence")) : t1;
    }
  };
  B.LeastSquaresSolver.prototype = {
    solve$1: function(degree) {
      var t3, result, t4, t5, t6, t7, h, i, j, t8, t9, dot, t10, norm, inverseNorm, wy, i0, yMean, sumSquaredError, sumSquaredTotal, err, term, v,
        t1 = this.x,
        t2 = t1.length;
      if (degree > t2)
        return null;
      t3 = degree + 1;
      result = new B.PolynomialFit(new Float64Array(t3));
      t4 = t3 * t2;
      t5 = new Float64Array(t4);
      for (t6 = this.w, t7 = 0 * t2, h = 0; h < t2; ++h) {
        t5[t7 + h] = t6[h];
        for (i = 1; i < t3; ++i)
          t5[i * t2 + h] = t5[(i - 1) * t2 + h] * t1[h];
      }
      t4 = new Float64Array(t4);
      t7 = new Float64Array(t3 * t3);
      for (j = 0; j < t3; ++j) {
        for (t8 = j * t2, h = 0; h < t2; ++h) {
          t9 = t8 + h;
          t4[t9] = t5[t9];
        }
        for (i = 0; i < j; ++i) {
          t9 = i * t2;
          dot = new B._Vector(t8, t2, t4).$mul(0, new B._Vector(t9, t2, t4));
          for (h = 0; h < t2; ++h) {
            t10 = t8 + h;
            t4[t10] = t4[t10] - dot * t4[t9 + h];
          }
        }
        t9 = new B._Vector(t8, t2, t4);
        norm = Math.sqrt(t9.$mul(0, t9));
        if (norm < 1e-10)
          return null;
        inverseNorm = 1 / norm;
        for (h = 0; h < t2; ++h) {
          t9 = t8 + h;
          t4[t9] = t4[t9] * inverseNorm;
        }
        for (t9 = j * t3, i = 0; i < t3; ++i) {
          t10 = i < j ? 0 : new B._Vector(t8, t2, t4).$mul(0, new B._Vector(i * t2, t2, t5));
          t7[t9 + i] = t10;
        }
      }
      t5 = new Float64Array(t2);
      wy = new B._Vector(0, t2, t5);
      for (t8 = this.y, h = 0; h < t2; ++h)
        t5[h] = t8[h] * t6[h];
      for (i = t3 - 1, t5 = result.coefficients, i0 = i; i0 >= 0; --i0) {
        t5[i0] = new B._Vector(i0 * t2, t2, t4).$mul(0, wy);
        for (t9 = i0 * t3, j = i; j > i0; --j)
          t5[i0] = t5[i0] - t7[t9 + j] * t5[j];
        t5[i0] = t5[i0] / t7[t9 + i0];
      }
      for (yMean = 0, h = 0; h < t2; ++h)
        yMean += t8[h];
      yMean /= t2;
      for (sumSquaredError = 0, sumSquaredTotal = 0, h = 0; h < t2; ++h) {
        t4 = t8[h];
        err = t4 - t5[0];
        for (term = 1, i = 1; i < t3; ++i) {
          term *= t1[h];
          err -= term * t5[i];
        }
        t7 = t6[h];
        t7 *= t7;
        sumSquaredError += t7 * err * err;
        v = t4 - yMean;
        sumSquaredTotal += t7 * v * v;
      }
      result.__PolynomialFit_confidence = sumSquaredTotal <= 1e-10 ? 1 : 1 - sumSquaredError / sumSquaredTotal;
      return result;
    }
  };
  O._DragState.prototype = {
    toString$0: function(_) {
      return this._monodrag$_name;
    }
  };
  O.DragGestureRecognizer.prototype = {
    get$_initialPosition: function() {
      var t1 = this.__DragGestureRecognizer__initialPosition;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_initialPosition")) : t1;
    },
    get$_pendingDragOffset: function() {
      var t1 = this.__DragGestureRecognizer__pendingDragOffset;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_pendingDragOffset")) : t1;
    },
    get$_globalDistanceMoved: function() {
      var t1 = this.__DragGestureRecognizer__globalDistanceMoved;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_globalDistanceMoved")) : t1;
    },
    isPointerAllowed$1: function($event) {
      var _this = this;
      if (_this._initialButtons == null)
        switch ($event.get$buttons($event)) {
          case 1:
            if (_this.onDown == null && _this.onStart == null && _this.onUpdate == null && _this.onEnd == null && _this.onCancel == null)
              return false;
            break;
          default:
            return false;
        }
      else if ($event.get$buttons($event) !== _this._initialButtons)
        return false;
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    addAllowedPointer$1: function($event) {
      var t1, _this = this;
      _this.startTrackingPointer$2($event.get$pointer(), $event.get$transform($event));
      _this._velocityTrackers.$indexSet(0, $event.get$pointer(), O.DragGestureRecognizer__defaultBuilder($event));
      t1 = _this._monodrag$_state;
      if (t1 === C._DragState_0) {
        _this._monodrag$_state = C._DragState_1;
        t1 = $event.get$position($event);
        _this.__DragGestureRecognizer__initialPosition = new S.OffsetPair($event.get$localPosition(), t1);
        _this._initialButtons = $event.get$buttons($event);
        _this.__DragGestureRecognizer__pendingDragOffset = C.OffsetPair_G6F;
        _this.__DragGestureRecognizer__globalDistanceMoved = 0;
        _this._lastPendingEventTimestamp = $event.get$timeStamp($event);
        _this._lastTransform = $event.get$transform($event);
        _this._checkDown$0();
      } else if (t1 === C._DragState_2)
        _this.resolve$1(C.GestureDisposition_0);
    },
    handleEvent$1: function($event) {
      var t1, t2, t3, movedLocally, localToGlobalTransform, _this = this;
      if (!$event.get$synthesized())
        t1 = type$.PointerDownEvent._is($event) || type$.PointerMoveEvent._is($event);
      else
        t1 = false;
      if (t1) {
        t1 = _this._velocityTrackers.$index(0, $event.get$pointer());
        t1.toString;
        t1.addPosition$2($event.get$timeStamp($event), $event.get$localPosition());
      }
      if (type$.PointerMoveEvent._is($event)) {
        if ($event.get$buttons($event) !== _this._initialButtons) {
          _this._giveUpPointer$1($event.get$pointer());
          return;
        }
        if (_this._monodrag$_state === C._DragState_2) {
          t1 = $event.get$timeStamp($event);
          t2 = _this._getDeltaForDetails$1($event.get$localDelta());
          t3 = _this._getPrimaryValueFromOffset$1($event.get$localDelta());
          _this._checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(t2, $event.get$position($event), $event.get$localPosition(), t3, t1);
        } else {
          _this.__DragGestureRecognizer__pendingDragOffset = _this.get$_pendingDragOffset().$add(0, new S.OffsetPair($event.get$localDelta(), $event.get$delta()));
          _this._lastPendingEventTimestamp = $event.get$timeStamp($event);
          _this._lastTransform = $event.get$transform($event);
          movedLocally = _this._getDeltaForDetails$1($event.get$localDelta());
          if ($event.get$transform($event) == null)
            localToGlobalTransform = null;
          else {
            t1 = $event.get$transform($event);
            t1.toString;
            localToGlobalTransform = E.Matrix4_tryInvert(t1);
          }
          t1 = _this.get$_globalDistanceMoved();
          t2 = F.PointerEvent_transformDeltaViaPositions(localToGlobalTransform, null, movedLocally, $event.get$localPosition()).get$distance();
          t3 = _this._getPrimaryValueFromOffset$1(movedLocally);
          _this.__DragGestureRecognizer__globalDistanceMoved = t1 + t2 * J.get$sign$in(t3 == null ? 1 : t3);
          if (_this._hasSufficientGlobalDistanceToAccept$1($event.get$kind($event)))
            _this.resolve$1(C.GestureDisposition_0);
        }
      }
      if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event))
        _this._giveUpPointer$1($event.get$pointer());
    },
    acceptGesture$1: function(pointer) {
      var delta, t1, transform, localUpdateDelta, localToGlobal, globalUpdateDelta, correctedPosition, _this = this;
      _this._acceptedActivePointers.add$1(0, pointer);
      if (_this._monodrag$_state !== C._DragState_2) {
        _this._monodrag$_state = C._DragState_2;
        delta = _this.get$_pendingDragOffset();
        t1 = _this._lastPendingEventTimestamp;
        t1.toString;
        transform = _this._lastTransform;
        switch (_this.dragStartBehavior) {
          case C.DragStartBehavior_1:
            _this.__DragGestureRecognizer__initialPosition = _this.get$_initialPosition().$add(0, delta);
            localUpdateDelta = C.Offset_0_0;
            break;
          case C.DragStartBehavior_0:
            localUpdateDelta = _this._getDeltaForDetails$1(delta.local);
            break;
          default:
            localUpdateDelta = null;
        }
        _this.__DragGestureRecognizer__pendingDragOffset = C.OffsetPair_G6F;
        _this._lastTransform = _this._lastPendingEventTimestamp = null;
        _this._checkStart$2(t1, pointer);
        if (!J.$eq$(localUpdateDelta, C.Offset_0_0) && _this.onUpdate != null) {
          localToGlobal = transform != null ? E.Matrix4_tryInvert(transform) : null;
          globalUpdateDelta = F.PointerEvent_transformDeltaViaPositions(localToGlobal, null, localUpdateDelta, _this.get$_initialPosition().local.$add(0, localUpdateDelta));
          correctedPosition = _this.get$_initialPosition().$add(0, new S.OffsetPair(localUpdateDelta, globalUpdateDelta));
          _this._checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp(localUpdateDelta, correctedPosition.global, correctedPosition.local, _this._getPrimaryValueFromOffset$1(localUpdateDelta), t1);
        }
      }
    },
    rejectGesture$1: function(pointer) {
      this._giveUpPointer$1(pointer);
    },
    didStopTrackingLastPointer$1: function(pointer) {
      var t1, _this = this;
      switch (_this._monodrag$_state) {
        case C._DragState_0:
          break;
        case C._DragState_1:
          _this.resolve$1(C.GestureDisposition_1);
          t1 = _this.onCancel;
          if (t1 != null)
            _this.invokeCallback$2("onCancel", t1);
          break;
        case C._DragState_2:
          _this._checkEnd$1(pointer);
          break;
      }
      _this._velocityTrackers.clear$0(0);
      _this._initialButtons = null;
      _this._monodrag$_state = C._DragState_0;
    },
    _giveUpPointer$1: function(pointer) {
      var t1, entry;
      this.stopTrackingPointer$1(pointer);
      if (!this._acceptedActivePointers.remove$1(0, pointer)) {
        t1 = this._recognizer$_entries;
        entry = t1.$index(0, pointer);
        if (entry != null) {
          t1.remove$1(0, pointer);
          entry._arena._resolve$3(entry._arena$_pointer, entry._member, C.GestureDisposition_1);
        }
      }
    },
    _checkDown$0: function() {
      var t1, _this = this;
      if (_this.onDown != null) {
        t1 = _this.get$_initialPosition();
        _this.get$_initialPosition();
        _this.invokeCallback$2("onDown", new O.DragGestureRecognizer__checkDown_closure(_this, new O.DragDownDetails(t1.global)));
      }
    },
    _checkStart$2: function(timestamp, pointer) {
      var t1, _this = this;
      if (_this.onStart != null) {
        t1 = _this.get$_initialPosition();
        _this.get$_initialPosition();
        _this._pointerToKind.$index(0, pointer).toString;
        _this.invokeCallback$2("onStart", new O.DragGestureRecognizer__checkStart_closure(_this, new O.DragStartDetails(t1.global)));
      }
    },
    _checkUpdate$5$delta$globalPosition$localPosition$primaryDelta$sourceTimeStamp: function(delta, globalPosition, localPosition, primaryDelta, sourceTimeStamp) {
      if (this.onUpdate != null)
        this.invokeCallback$2("onUpdate", new O.DragGestureRecognizer__checkUpdate_closure(this, new O.DragUpdateDetails(delta, primaryDelta, globalPosition)));
    },
    _checkEnd$1: function(pointer) {
      var t2, estimate, velocity, debugReport, _this = this, t1 = {};
      if (_this.onEnd == null)
        return;
      t2 = _this._velocityTrackers.$index(0, pointer);
      t2.toString;
      t1.details = null;
      estimate = t2.getVelocityEstimate$0();
      if (estimate != null && _this.isFlingGesture$2(estimate, t2.kind)) {
        t2 = estimate.pixelsPerSecond;
        velocity = new R.Velocity(t2).clampMagnitude$2(50, 8000);
        _this._getPrimaryValueFromOffset$1(velocity.pixelsPerSecond);
        t1.details = new O.DragEndDetails(velocity);
        debugReport = new O.DragGestureRecognizer__checkEnd_closure(estimate, velocity);
      } else {
        t1.details = new O.DragEndDetails(C.Velocity_Offset_0_0);
        debugReport = new O.DragGestureRecognizer__checkEnd_closure0(estimate);
      }
      _this.invokeCallback$3$debugReport("onEnd", new O.DragGestureRecognizer__checkEnd_closure1(t1, _this), debugReport);
    },
    dispose$0: function(_) {
      this._velocityTrackers.clear$0(0);
      this.super$OneSequenceGestureRecognizer$dispose(0);
    }
  };
  O.DragGestureRecognizer__checkDown_closure.prototype = {
    call$0: function() {
      return this.$this.onDown.call$1(this.details);
    },
    $signature: 0
  };
  O.DragGestureRecognizer__checkStart_closure.prototype = {
    call$0: function() {
      return this.$this.onStart.call$1(this.details);
    },
    $signature: 0
  };
  O.DragGestureRecognizer__checkUpdate_closure.prototype = {
    call$0: function() {
      return this.$this.onUpdate.call$1(this.details);
    },
    $signature: 0
  };
  O.DragGestureRecognizer__checkEnd_closure.prototype = {
    call$0: function() {
      return this.estimate.toString$0(0) + "; fling at " + this.velocity.toString$0(0) + ".";
    },
    $signature: 50
  };
  O.DragGestureRecognizer__checkEnd_closure0.prototype = {
    call$0: function() {
      var t1 = this.estimate;
      if (t1 == null)
        return "Could not estimate velocity.";
      return t1.toString$0(0) + "; judged to not be a fling.";
    },
    $signature: 50
  };
  O.DragGestureRecognizer__checkEnd_closure1.prototype = {
    call$0: function() {
      return this.$this.onEnd.call$1(this._box_0.details);
    },
    $signature: 0
  };
  O.HorizontalDragGestureRecognizer.prototype = {
    isFlingGesture$2: function(estimate, kind) {
      var minDistance = F.computeHitSlop(kind);
      return Math.abs(estimate.pixelsPerSecond._dx) > 50 && Math.abs(estimate.offset._dx) > minDistance;
    },
    _hasSufficientGlobalDistanceToAccept$1: function(pointerDeviceKind) {
      return Math.abs(this.get$_globalDistanceMoved()) > F.computeHitSlop(pointerDeviceKind);
    },
    _getDeltaForDetails$1: function(delta) {
      return new P.Offset(delta._dx, 0);
    },
    _getPrimaryValueFromOffset$1: function(value) {
      return value._dx;
    }
  };
  O.PanGestureRecognizer.prototype = {
    isFlingGesture$2: function(estimate, kind) {
      var minDistance = F.computeHitSlop(kind);
      return estimate.pixelsPerSecond.get$distanceSquared() > 2500 && estimate.offset.get$distanceSquared() > minDistance * minDistance;
    },
    _hasSufficientGlobalDistanceToAccept$1: function(pointerDeviceKind) {
      return Math.abs(this.get$_globalDistanceMoved()) > F.computePanSlop(pointerDeviceKind);
    },
    _getDeltaForDetails$1: function(delta) {
      return delta;
    },
    _getPrimaryValueFromOffset$1: function(value) {
      return null;
    }
  };
  F._CountdownZoned.prototype = {
    _onTimeout$0: function() {
      this._timeout = true;
    }
  };
  F._TapTracker.prototype = {
    stopTrackingPointer$1: function(route) {
      if (this._isTrackingPointer) {
        this._isTrackingPointer = false;
        $.GestureBinding__instance.GestureBinding_pointerRouter.removeRoute$2(this.pointer, route);
      }
    },
    isWithinGlobalTolerance$2: function($event, tolerance) {
      return $event.get$position($event).$sub(0, this._initialGlobalPosition).get$distance() <= tolerance;
    }
  };
  F.DoubleTapGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      var t1;
      if (this._firstTap == null)
        switch ($event.get$buttons($event)) {
          case 1:
            t1 = this.onDoubleTap == null && true;
            if (t1)
              return false;
            break;
          default:
            return false;
        }
      return this.super$GestureRecognizer$isPointerAllowed($event);
    },
    addAllowedPointer$1: function($event) {
      var _this = this,
        t1 = _this._firstTap;
      if (t1 != null)
        if (!t1.isWithinGlobalTolerance$2($event, 100))
          return;
        else {
          t1 = _this._firstTap;
          if (!t1._doubleTapMinTimeCountdown._timeout || $event.get$buttons($event) !== t1.initialButtons) {
            _this._multitap$_reset$0();
            return _this._trackTap$1($event);
          }
        }
      _this._trackTap$1($event);
    },
    _trackTap$1: function($event) {
      var t1, t2, t3, t4, t5, tracker, _this = this;
      _this._stopDoubleTapTimer$0();
      t1 = $.GestureBinding__instance.GestureBinding_gestureArena.add$2(0, $event.get$pointer(), _this);
      t2 = $event.get$pointer();
      t3 = $event.get$position($event);
      t4 = $event.get$buttons($event);
      t5 = new F._CountdownZoned();
      P.Timer_Timer(C.Duration_40000, t5.get$_onTimeout());
      tracker = new F._TapTracker(t2, t1, t3, t4, t5);
      _this._trackers.$indexSet(0, $event.get$pointer(), tracker);
      t5 = $event.get$transform($event);
      if (!tracker._isTrackingPointer) {
        tracker._isTrackingPointer = true;
        $.GestureBinding__instance.GestureBinding_pointerRouter.addRoute$3(t2, _this.get$_handleEvent(), t5);
      }
    },
    _handleEvent$1: function($event) {
      var t3, _this = this,
        t1 = _this._trackers,
        t2 = t1.$index(0, $event.get$pointer());
      t2.toString;
      if (type$.PointerUpEvent._is($event)) {
        t3 = _this._firstTap;
        if (t3 == null) {
          if (_this._doubleTapTimer == null)
            _this._doubleTapTimer = P.Timer_Timer(C.Duration_300000, _this.get$_multitap$_reset());
          t3 = t2.pointer;
          $.GestureBinding__instance.GestureBinding_gestureArena.hold$1(t3);
          t2.stopTrackingPointer$1(_this.get$_handleEvent());
          t1.remove$1(0, t3);
          _this._clearTrackers$0();
          _this._firstTap = t2;
        } else {
          t3 = t3.entry;
          t3._arena._resolve$3(t3._arena$_pointer, t3._member, C.GestureDisposition_0);
          t3 = t2.entry;
          t3._arena._resolve$3(t3._arena$_pointer, t3._member, C.GestureDisposition_0);
          t2.stopTrackingPointer$1(_this.get$_handleEvent());
          t1.remove$1(0, t2.pointer);
          t1 = _this.onDoubleTap;
          if (t1 != null)
            _this.invokeCallback$2("onDoubleTap", t1);
          _this._multitap$_reset$0();
        }
      } else if (type$.PointerMoveEvent._is($event)) {
        if (!t2.isWithinGlobalTolerance$2($event, 18))
          _this._reject$1(t2);
      } else if (type$.PointerCancelEvent._is($event))
        _this._reject$1(t2);
    },
    acceptGesture$1: function(pointer) {
    },
    rejectGesture$1: function(pointer) {
      var t1, _this = this,
        tracker = _this._trackers.$index(0, pointer);
      if (tracker == null) {
        t1 = _this._firstTap;
        t1 = t1 != null && t1.pointer === pointer;
      } else
        t1 = false;
      if (t1)
        tracker = _this._firstTap;
      if (tracker != null)
        _this._reject$1(tracker);
    },
    _reject$1: function(tracker) {
      var t2, _this = this,
        t1 = _this._trackers;
      t1.remove$1(0, tracker.pointer);
      t2 = tracker.entry;
      t2._arena._resolve$3(t2._arena$_pointer, t2._member, C.GestureDisposition_1);
      tracker.stopTrackingPointer$1(_this.get$_handleEvent());
      t2 = _this._firstTap;
      if (t2 != null)
        if (tracker === t2)
          _this._multitap$_reset$0();
        else {
          _this._checkCancel$0();
          if (t1.get$isEmpty(t1))
            _this._multitap$_reset$0();
        }
    },
    dispose$0: function(_) {
      this._multitap$_reset$0();
      this.super$GestureRecognizer$dispose(0);
    },
    _multitap$_reset$0: function() {
      var t1, _this = this;
      _this._stopDoubleTapTimer$0();
      if (_this._firstTap != null) {
        t1 = _this._trackers;
        if (t1.get$isNotEmpty(t1))
          _this._checkCancel$0();
        t1 = _this._firstTap;
        t1.toString;
        _this._firstTap = null;
        _this._reject$1(t1);
        $.GestureBinding__instance.GestureBinding_gestureArena.release$1(0, t1.pointer);
      }
      _this._clearTrackers$0();
    },
    _clearTrackers$0: function() {
      var t1 = this._trackers;
      t1 = t1.get$values(t1);
      C.JSArray_methods.forEach$1(P.List_List$of(t1, true, H._instanceType(t1)._eval$1("Iterable.E")), this.get$_reject());
    },
    _stopDoubleTapTimer$0: function() {
      var t1 = this._doubleTapTimer;
      if (t1 != null) {
        t1.cancel$0(0);
        this._doubleTapTimer = null;
      }
    },
    _checkCancel$0: function() {
    }
  };
  O.PointerRouter.prototype = {
    addRoute$3: function(pointer, route, transform) {
      J.$indexSet$ax(this._routeMap.putIfAbsent$2(0, pointer, new O.PointerRouter_addRoute_closure()), route, transform);
    },
    removeRoute$2: function(pointer, route) {
      var t3,
        t1 = this._routeMap,
        t2 = t1.$index(0, pointer);
      t2.toString;
      t3 = J.getInterceptor$ax(t2);
      t3.remove$1(t2, route);
      if (t3.get$isEmpty(t2))
        t1.remove$1(0, pointer);
    },
    _dispatch$3: function($event, route, transform) {
      var exception, stack, exception0, t1;
      try {
        route.call$1($event.transformed$1(transform));
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stack = H.getTraceFromException(exception0);
        t1 = U.ErrorDescription$("while routing a pointer event");
        U.FlutterError_reportError(new U.FlutterErrorDetails(exception, stack, "gesture library", t1, null, false));
      }
    },
    route$1: function($event) {
      var _this = this,
        routes = _this._routeMap.$index(0, $event.get$pointer()),
        t1 = _this._globalRoutes,
        t2 = type$.void_Function_PointerEvent,
        t3 = type$.nullable_Matrix4,
        copiedGlobalRoutes = P.LinkedHashMap_LinkedHashMap$from(t1, t2, t3);
      if (routes != null)
        _this._dispatchEventToRoutes$3($event, routes, P.LinkedHashMap_LinkedHashMap$from(routes, t2, t3));
      _this._dispatchEventToRoutes$3($event, t1, copiedGlobalRoutes);
    },
    _dispatchEventToRoutes$3: function($event, referenceRoutes, copiedRoutes) {
      copiedRoutes.forEach$1(0, new O.PointerRouter__dispatchEventToRoutes_closure(this, referenceRoutes, $event));
    }
  };
  O.PointerRouter_addRoute_closure.prototype = {
    call$0: function() {
      return P.LinkedHashMap_LinkedHashMap$_empty(type$.void_Function_PointerEvent, type$.nullable_Matrix4);
    },
    $signature: 161
  };
  O.PointerRouter__dispatchEventToRoutes_closure.prototype = {
    call$2: function(route, transform) {
      if (J.containsKey$1$x(this.referenceRoutes, route))
        this.$this._dispatch$3(this.event, route, transform);
    },
    $signature: 162
  };
  G.PointerSignalResolver.prototype = {
    resolve$1: function($event) {
      return;
    }
  };
  S.DragStartBehavior.prototype = {
    toString$0: function(_) {
      return this._recognizer$_name;
    }
  };
  S.GestureRecognizer.prototype = {
    addPointer$1: function($event) {
      var _this = this;
      _this._pointerToKind.$indexSet(0, $event.get$pointer(), $event.get$kind($event));
      if (_this.isPointerAllowed$1($event))
        _this.addAllowedPointer$1($event);
      else
        _this.handleNonAllowedPointer$1($event);
    },
    addAllowedPointer$1: function($event) {
    },
    handleNonAllowedPointer$1: function($event) {
    },
    isPointerAllowed$1: function($event) {
      return true;
    },
    dispose$0: function(_) {
    },
    invokeCallback$1$3$debugReport: function($name, callback, debugReport) {
      var exception, stack, exception0, t1, result = null;
      try {
        result = callback.call$0();
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stack = H.getTraceFromException(exception0);
        t1 = U.ErrorDescription$("while handling a gesture");
        U.FlutterError_reportError(new U.FlutterErrorDetails(exception, stack, "gesture", t1, null, false));
      }
      return result;
    },
    invokeCallback$2: function($name, callback) {
      return this.invokeCallback$1$3$debugReport($name, callback, null, type$.dynamic);
    },
    invokeCallback$3$debugReport: function($name, callback, debugReport) {
      return this.invokeCallback$1$3$debugReport($name, callback, debugReport, type$.dynamic);
    },
    $isDiagnosticableTree: 1
  };
  S.OneSequenceGestureRecognizer.prototype = {
    handleNonAllowedPointer$1: function($event) {
      this.resolve$1(C.GestureDisposition_1);
    },
    acceptGesture$1: function(pointer) {
    },
    rejectGesture$1: function(pointer) {
    },
    resolve$1: function(disposition) {
      var _i, entry,
        t1 = this._recognizer$_entries,
        localEntries = P.List_List$from(t1.get$values(t1), true, type$.GestureArenaEntry);
      t1.clear$0(0);
      for (t1 = localEntries.length, _i = 0; _i < t1; ++_i) {
        entry = localEntries[_i];
        entry._arena._resolve$3(entry._arena$_pointer, entry._member, disposition);
      }
    },
    dispose$0: function(_) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _this = this;
      _this.resolve$1(C.GestureDisposition_1);
      for (t1 = _this._trackedPointers, t2 = new P._HashSetIterator(t1, t1._computeElements$0()), t3 = H._instanceType(t2)._precomputed1; t2.moveNext$0();) {
        t4 = t3._as(t2._collection$_current);
        t5 = $.GestureBinding__instance.GestureBinding_pointerRouter;
        t6 = _this.get$handleEvent();
        t5 = t5._routeMap;
        t7 = t5.$index(0, t4);
        t7.toString;
        t8 = J.getInterceptor$ax(t7);
        t8.remove$1(t7, t6);
        if (t8.get$isEmpty(t7))
          t5.remove$1(0, t4);
      }
      t1.clear$0(0);
      _this.super$GestureRecognizer$dispose(0);
    },
    _addPointerToArena$1: function(pointer) {
      return $.GestureBinding__instance.GestureBinding_gestureArena.add$2(0, pointer, this);
    },
    startTrackingPointer$2: function(pointer, transform) {
      var _this = this;
      $.GestureBinding__instance.GestureBinding_pointerRouter.addRoute$3(pointer, _this.get$handleEvent(), transform);
      _this._trackedPointers.add$1(0, pointer);
      _this._recognizer$_entries.$indexSet(0, pointer, _this._addPointerToArena$1(pointer));
    },
    stopTrackingPointer$1: function(pointer) {
      var t1 = this._trackedPointers;
      if (t1.contains$1(0, pointer)) {
        $.GestureBinding__instance.GestureBinding_pointerRouter.removeRoute$2(pointer, this.get$handleEvent());
        t1.remove$1(0, pointer);
        if (t1._collection$_length === 0)
          this.didStopTrackingLastPointer$1(pointer);
      }
    },
    stopTrackingIfPointerNoLongerDown$1: function($event) {
      if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event))
        this.stopTrackingPointer$1($event.get$pointer());
    }
  };
  S.GestureRecognizerState.prototype = {
    toString$0: function(_) {
      return this._recognizer$_name;
    }
  };
  S.PrimaryPointerGestureRecognizer.prototype = {
    addAllowedPointer$1: function($event) {
      var _this = this;
      _this.startTrackingPointer$2($event.get$pointer(), $event.get$transform($event));
      if (_this.state === C.GestureRecognizerState_0) {
        _this.state = C.GestureRecognizerState_1;
        _this.primaryPointer = $event.get$pointer();
        _this.initialPosition = new S.OffsetPair($event.get$localPosition(), $event.get$position($event));
        _this._recognizer$_timer = P.Timer_Timer(_this.deadline, new S.PrimaryPointerGestureRecognizer_addAllowedPointer_closure(_this, $event));
      }
    },
    handleEvent$1: function($event) {
      var isPreAcceptSlopPastTolerance, t1, isPostAcceptSlopPastTolerance, _this = this;
      if (_this.state === C.GestureRecognizerState_1 && $event.get$pointer() === _this.primaryPointer) {
        if (!_this._gestureAccepted)
          isPreAcceptSlopPastTolerance = _this._getGlobalDistance$1($event) > 18;
        else
          isPreAcceptSlopPastTolerance = false;
        if (_this._gestureAccepted) {
          t1 = _this.postAcceptSlopTolerance;
          isPostAcceptSlopPastTolerance = t1 != null && _this._getGlobalDistance$1($event) > t1;
        } else
          isPostAcceptSlopPastTolerance = false;
        if (type$.PointerMoveEvent._is($event))
          t1 = isPreAcceptSlopPastTolerance || isPostAcceptSlopPastTolerance;
        else
          t1 = false;
        if (t1) {
          _this.resolve$1(C.GestureDisposition_1);
          t1 = _this.primaryPointer;
          t1.toString;
          _this.stopTrackingPointer$1(t1);
        } else
          _this.handlePrimaryPointer$1($event);
      }
      _this.stopTrackingIfPointerNoLongerDown$1($event);
    },
    didExceedDeadline$0: function() {
    },
    acceptGesture$1: function(pointer) {
      if (pointer === this.primaryPointer) {
        this._stopTimer$0();
        this._gestureAccepted = true;
      }
    },
    rejectGesture$1: function(pointer) {
      var _this = this;
      if (pointer === _this.primaryPointer && _this.state === C.GestureRecognizerState_1) {
        _this._stopTimer$0();
        _this.state = C.GestureRecognizerState_2;
      }
    },
    didStopTrackingLastPointer$1: function(pointer) {
      this._stopTimer$0();
      this.state = C.GestureRecognizerState_0;
    },
    dispose$0: function(_) {
      this._stopTimer$0();
      this.super$OneSequenceGestureRecognizer$dispose(0);
    },
    _stopTimer$0: function() {
      var t1 = this._recognizer$_timer;
      if (t1 != null) {
        t1.cancel$0(0);
        this._recognizer$_timer = null;
      }
    },
    _getGlobalDistance$1: function($event) {
      return $event.get$position($event).$sub(0, this.initialPosition.global).get$distance();
    }
  };
  S.PrimaryPointerGestureRecognizer_addAllowedPointer_closure.prototype = {
    call$0: function() {
      this.$this.didExceedDeadline$0();
      return null;
    },
    $signature: 0
  };
  S.OffsetPair.prototype = {
    $add: function(_, other) {
      return new S.OffsetPair(this.local.$add(0, other.local), this.global.$add(0, other.global));
    },
    $sub: function(_, other) {
      return new S.OffsetPair(this.local.$sub(0, other.local), this.global.$sub(0, other.global));
    },
    toString$0: function(_) {
      return "OffsetPair(local: " + this.local.toString$0(0) + ", global: " + this.global.toString$0(0) + ")";
    }
  };
  S._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin.prototype = {};
  N.TapDownDetails.prototype = {};
  N.BaseTapGestureRecognizer.prototype = {
    addAllowedPointer$1: function($event) {
      var _this = this;
      if (_this.state === C.GestureRecognizerState_0) {
        if (_this._down != null && _this._up != null)
          _this._tap$_reset$0();
        _this._down = $event;
      }
      if (_this._down != null)
        _this.super$PrimaryPointerGestureRecognizer$addAllowedPointer($event);
    },
    startTrackingPointer$2: function(pointer, transform) {
      this.super$OneSequenceGestureRecognizer$startTrackingPointer(pointer, transform);
    },
    handlePrimaryPointer$1: function($event) {
      var t1, t2, _this = this;
      if (type$.PointerUpEvent._is($event)) {
        _this._up = $event;
        _this._checkUp$0();
      } else if (type$.PointerCancelEvent._is($event)) {
        _this.resolve$1(C.GestureDisposition_1);
        if (_this._sentTapDown) {
          t1 = _this._down;
          t1.toString;
          _this.handleTapCancel$3$cancel$down$reason($event, t1, "");
        }
        _this._tap$_reset$0();
      } else {
        t1 = $event.get$buttons($event);
        t2 = _this._down;
        if (t1 !== t2.get$buttons(t2)) {
          _this.resolve$1(C.GestureDisposition_1);
          t1 = _this.primaryPointer;
          t1.toString;
          _this.stopTrackingPointer$1(t1);
        }
      }
    },
    resolve$1: function(disposition) {
      var t1, _this = this;
      if (_this._wonArenaForPrimaryPointer && disposition === C.GestureDisposition_1) {
        t1 = _this._down;
        t1.toString;
        _this.handleTapCancel$3$cancel$down$reason(null, t1, "spontaneous");
        _this._tap$_reset$0();
      }
      _this.super$OneSequenceGestureRecognizer$resolve(disposition);
    },
    didExceedDeadline$0: function() {
      this._tap$_checkDown$0();
    },
    acceptGesture$1: function(pointer) {
      var _this = this;
      _this.super$PrimaryPointerGestureRecognizer$acceptGesture(pointer);
      if (pointer === _this.primaryPointer) {
        _this._tap$_checkDown$0();
        _this._wonArenaForPrimaryPointer = true;
        _this._checkUp$0();
      }
    },
    rejectGesture$1: function(pointer) {
      var t1, _this = this;
      _this.super$PrimaryPointerGestureRecognizer$rejectGesture(pointer);
      if (pointer === _this.primaryPointer) {
        if (_this._sentTapDown) {
          t1 = _this._down;
          t1.toString;
          _this.handleTapCancel$3$cancel$down$reason(null, t1, "forced");
        }
        _this._tap$_reset$0();
      }
    },
    _tap$_checkDown$0: function() {
      var t1, _this = this;
      if (_this._sentTapDown)
        return;
      t1 = _this._down;
      t1.toString;
      _this.handleTapDown$1$down(t1);
      _this._sentTapDown = true;
    },
    _checkUp$0: function() {
      var t1, t2, _this = this;
      if (!_this._wonArenaForPrimaryPointer || _this._up == null)
        return;
      t1 = _this._down;
      t1.toString;
      t2 = _this._up;
      t2.toString;
      _this.handleTapUp$2$down$up(t1, t2);
      _this._tap$_reset$0();
    },
    _tap$_reset$0: function() {
      var _this = this;
      _this._wonArenaForPrimaryPointer = _this._sentTapDown = false;
      _this._down = _this._up = null;
    }
  };
  N.TapGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      var t1, _this = this;
      switch ($event.get$buttons($event)) {
        case 1:
          if (_this.onTapDown == null)
            if (_this.onTap == null)
              t1 = _this.onTapCancel == null;
            else
              t1 = false;
          else
            t1 = false;
          if (t1)
            return false;
          break;
        case 2:
          return false;
        case 4:
          return false;
        default:
          return false;
      }
      return _this.super$GestureRecognizer$isPointerAllowed($event);
    },
    handleTapDown$1$down: function(down) {
      var _this = this,
        t1 = down.get$position(down);
      down.get$localPosition();
      _this._pointerToKind.$index(0, down.get$pointer()).toString;
      switch (down.get$buttons(down)) {
        case 1:
          if (_this.onTapDown != null)
            _this.invokeCallback$2("onTapDown", new N.TapGestureRecognizer_handleTapDown_closure(_this, new N.TapDownDetails(t1)));
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    handleTapUp$2$down$up: function(down, up) {
      var t1;
      up.get$kind(up);
      up.get$position(up);
      up.get$localPosition();
      switch (down.get$buttons(down)) {
        case 1:
          t1 = this.onTap;
          if (t1 != null)
            this.invokeCallback$2("onTap", t1);
          break;
        case 2:
          break;
        case 4:
          break;
      }
    },
    handleTapCancel$3$cancel$down$reason: function(cancel, down, reason) {
      var t1,
        note = reason === "" ? reason : reason + " ";
      switch (down.get$buttons(down)) {
        case 1:
          t1 = this.onTapCancel;
          if (t1 != null)
            this.invokeCallback$2(note + "onTapCancel", t1);
          break;
        case 2:
          break;
        case 4:
          break;
      }
    }
  };
  N.TapGestureRecognizer_handleTapDown_closure.prototype = {
    call$0: function() {
      return this.$this.onTapDown.call$1(this.details);
    },
    $signature: 0
  };
  R.Velocity.prototype = {
    $sub: function(_, other) {
      return new R.Velocity(this.pixelsPerSecond.$sub(0, other.pixelsPerSecond));
    },
    $add: function(_, other) {
      return new R.Velocity(this.pixelsPerSecond.$add(0, other.pixelsPerSecond));
    },
    clampMagnitude$2: function(minValue, maxValue) {
      var t1 = this.pixelsPerSecond,
        valueSquared = t1.get$distanceSquared();
      if (valueSquared > maxValue * maxValue)
        return new R.Velocity(t1.$div(0, t1.get$distance()).$mul(0, maxValue));
      if (valueSquared < minValue * minValue)
        return new R.Velocity(t1.$div(0, t1.get$distance()).$mul(0, minValue));
      return this;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof R.Velocity && other.pixelsPerSecond.$eq(0, this.pixelsPerSecond);
    },
    get$hashCode: function(_) {
      var t1 = this.pixelsPerSecond;
      return P.hashValues(t1._dx, t1._dy, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t1 = this.pixelsPerSecond;
      return "Velocity(" + C.JSNumber_methods.toStringAsFixed$1(t1._dx, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(t1._dy, 1) + ")";
    }
  };
  R.VelocityEstimate.prototype = {
    toString$0: function(_) {
      var _this = this,
        t1 = _this.pixelsPerSecond;
      return "VelocityEstimate(" + C.JSNumber_methods.toStringAsFixed$1(t1._dx, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(t1._dy, 1) + "; offset: " + _this.offset.toString$0(0) + ", duration: " + _this.duration.toString$0(0) + ", confidence: " + C.JSNumber_methods.toStringAsFixed$1(_this.confidence, 1) + ")";
    }
  };
  R._PointAtTime.prototype = {
    toString$0: function(_) {
      return "_PointAtTime(" + this.point.toString$0(0) + " at " + this.time.toString$0(0) + ")";
    }
  };
  R.VelocityTracker.prototype = {
    addPosition$2: function(time, position) {
      var t1 = ++this._velocity_tracker$_index;
      if (t1 === 20)
        t1 = this._velocity_tracker$_index = 0;
      this._samples[t1] = new R._PointAtTime(time, position);
    },
    getVelocityEstimate$0: function() {
      var newestSample, t2, oldestSample, previousSample, sampleCount, sample, t3, age, position, xFit, yFit,
        t1 = type$.JSArray_double,
        x = H.setRuntimeTypeInfo([], t1),
        y = H.setRuntimeTypeInfo([], t1),
        w = H.setRuntimeTypeInfo([], t1),
        time = H.setRuntimeTypeInfo([], t1),
        index = this._velocity_tracker$_index;
      t1 = this._samples;
      newestSample = t1[index];
      if (newestSample == null)
        return null;
      t2 = newestSample.time._duration;
      oldestSample = newestSample;
      previousSample = oldestSample;
      sampleCount = 0;
      do {
        sample = t1[index];
        if (sample == null)
          break;
        t3 = sample.time._duration;
        age = (t2 - t3) / 1000;
        if (age > 100 || Math.abs(t3 - previousSample.time._duration) / 1000 > 40)
          break;
        position = sample.point;
        x.push(position._dx);
        y.push(position._dy);
        w.push(1);
        time.push(-age);
        index = (index === 0 ? 20 : index) - 1;
        ++sampleCount;
        if (sampleCount < 20) {
          oldestSample = sample;
          previousSample = oldestSample;
          continue;
        } else {
          oldestSample = sample;
          break;
        }
      } while (true);
      if (sampleCount >= 3) {
        xFit = new B.LeastSquaresSolver(time, x, w).solve$1(2);
        if (xFit != null) {
          yFit = new B.LeastSquaresSolver(time, y, w).solve$1(2);
          if (yFit != null)
            return new R.VelocityEstimate(new P.Offset(xFit.coefficients[1] * 1000, yFit.coefficients[1] * 1000), xFit.get$confidence(xFit) * yFit.get$confidence(yFit), new P.Duration(t2 - oldestSample.time._duration), newestSample.point.$sub(0, oldestSample.point));
        }
      }
      return new R.VelocityEstimate(C.Offset_0_0, 1, new P.Duration(t2 - oldestSample.time._duration), newestSample.point.$sub(0, oldestSample.point));
    }
  };
  S.ThemeMode.prototype = {
    toString$0: function(_) {
      return this._app0$_name;
    }
  };
  S.MaterialApp.prototype = {
    createState$0: function() {
      return new S._MaterialAppState(C._StateLifecycle_0);
    }
  };
  S.MaterialApp_createMaterialHeroController_closure.prototype = {
    call$2: function(begin, end) {
      return new D.MaterialRectArcTween(begin, end);
    },
    $signature: 163
  };
  S.MaterialScrollBehavior.prototype = {};
  S._MaterialAppState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this.___MaterialAppState__heroController = S.MaterialApp_createMaterialHeroController();
    },
    get$_localizationsDelegates: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$get$_localizationsDelegates($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$self._widget.toString;
                $async$goto = 2;
                return C.C__MaterialLocalizationsDelegate;
              case 2:
                // after yield
                $async$goto = 3;
                return C.C__CupertinoLocalizationsDelegate;
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.LocalizationsDelegate_dynamic);
    },
    _inspectorSelectButtonBuilder$2: function(context, onPressed) {
      return new E.FloatingActionButton(C.Icon_null, onPressed, C.BoxConstraints_40_40_40_40, null);
    },
    _materialBuilder$2: function(context, child) {
      var t1, platformBrightness, useDarkTheme, highContrast, theme, _this = this, _null = null;
      _this._widget.toString;
      t1 = F.MediaQuery_maybeOf(context);
      platformBrightness = t1 == null ? _null : t1.platformBrightness;
      if (platformBrightness == null)
        platformBrightness = C.Brightness_1;
      useDarkTheme = platformBrightness === C.Brightness_0;
      t1 = F.MediaQuery_maybeOf(context);
      t1 = t1 == null ? _null : t1.highContrast;
      highContrast = t1 === true;
      if (useDarkTheme)
        if (highContrast)
          _this._widget.toString;
      if (useDarkTheme)
        _this._widget.toString;
      if (highContrast)
        _this._widget.toString;
      t1 = _this._widget;
      theme = t1.theme;
      t1.toString;
      child.toString;
      t1 = child;
      return new M.ScaffoldMessenger(new K.AnimatedTheme(theme, t1, C.C__Linear, C.Duration_200000, _null, _null), _null);
    },
    _buildWidgetApp$1: function(context) {
      var materialColor, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.theme;
      t2 = t2.primaryColor;
      materialColor = t2;
      t1 = t1.title;
      t2 = _this.get$_localizationsDelegates();
      _this._widget.toString;
      return new S.WidgetsApp(_null, _null, _null, new S._MaterialAppState__buildWidgetApp_closure(), _null, _null, _null, _null, _null, C.Map_empty0, _null, _null, C.List_empty3, _this.get$_materialBuilder(), t1, _null, C.TextStyle_jrF, materialColor, _null, t2, _null, _null, C.List_Locale_en_US, false, false, false, false, _this.get$_inspectorSelectButtonBuilder(), true, _null, _null, _null, new N.GlobalObjectKey(_this, type$.GlobalObjectKey_State_StatefulWidget));
    },
    build$1: function(_, context) {
      var t1,
        result = this._buildWidgetApp$1(context);
      this._widget.toString;
      t1 = this.___MaterialAppState__heroController;
      return new K.ScrollConfiguration(C.C_MaterialScrollBehavior, new K.HeroControllerScope(t1 == null ? H.throwExpression(H.LateError$fieldNI("_heroController")) : t1, result, null), null);
    }
  };
  S._MaterialAppState__buildWidgetApp_closure.prototype = {
    call$1$2: function(settings, builder, $T) {
      var _null = null,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_of_Future_bool_Function),
        t2 = $.Zone__current,
        t3 = S.ProxyAnimation$(C.C__AlwaysDismissedAnimation),
        t4 = H.setRuntimeTypeInfo([], type$.JSArray_OverlayEntry),
        t5 = $.Zone__current;
      return new V.MaterialPageRoute(builder, false, t1, new N.LabeledGlobalKey(_null, $T._eval$1("LabeledGlobalKey<_ModalScopeState<0>>")), new N.LabeledGlobalKey(_null, type$.LabeledGlobalKey_State_StatefulWidget), new S.PageStorageBucket(), _null, new P._AsyncCompleter(new P._Future(t2, $T._eval$1("_Future<0?>")), $T._eval$1("_AsyncCompleter<0?>")), t3, t4, settings, new B.ValueNotifier(_null, new P.LinkedList(type$.LinkedList__ListenerEntry)), new P._AsyncCompleter(new P._Future(t5, $T._eval$1("_Future<0?>")), $T._eval$1("_AsyncCompleter<0?>")), $T._eval$1("MaterialPageRoute<0>"));
    },
    call$2: function(settings, builder) {
      return this.call$1$2(settings, builder, type$.dynamic);
    },
    $signature: 166
  };
  V.AppBarTheme.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.brightness, _this.backgroundColor, _this.foregroundColor, _this.elevation, _this.shadowColor, _this.iconTheme, _this.actionsIconTheme, _this.textTheme, _this.centerTitle, _this.titleSpacing, _this.toolbarTextStyle, _this.titleTextStyle, _this.systemOverlayStyle, _this.backwardsCompatibility, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof V.AppBarTheme)
        if (J.$eq$(other.backgroundColor, _this.backgroundColor))
          if (J.$eq$(other.foregroundColor, _this.foregroundColor))
            if (other.elevation == _this.elevation)
              if (J.$eq$(other.shadowColor, _this.shadowColor))
                if (J.$eq$(other.iconTheme, _this.iconTheme))
                  if (J.$eq$(other.actionsIconTheme, _this.actionsIconTheme))
                    if (J.$eq$(other.textTheme, _this.textTheme))
                      if (other.titleSpacing == _this.titleSpacing)
                        if (J.$eq$(other.toolbarTextStyle, _this.toolbarTextStyle))
                          if (J.$eq$(other.titleTextStyle, _this.titleTextStyle))
                            t1 = true;
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  V._AppBarTheme_Object_Diagnosticable.prototype = {};
  D.MaterialPointArcTween.prototype = {
    _initialize$0: function() {
      var t2, delta, deltaX, deltaY, distanceFromAtoB, t3, t4, c, t5, t6, t7, t8, _this = this,
        t1 = _this.begin;
      t1.toString;
      t2 = _this.end;
      t2.toString;
      delta = t2.$sub(0, t1);
      deltaX = Math.abs(delta._dx);
      deltaY = Math.abs(delta._dy);
      distanceFromAtoB = delta.get$distance();
      t3 = t2._dx;
      t4 = t1._dy;
      c = new P.Offset(t3, t4);
      t5 = new D.MaterialPointArcTween__initialize_sweepAngle(_this, distanceFromAtoB);
      if (deltaX > 2 && deltaY > 2) {
        t6 = distanceFromAtoB * distanceFromAtoB;
        t7 = t1._dx;
        t8 = t2._dy;
        if (deltaX < deltaY) {
          t1 = t6 / c.$sub(0, t1).get$distance() / 2;
          _this._radius = t1;
          _this._center = new P.Offset(t3 + t1 * J.get$sign$in(t7 - t3), t8);
          if (t7 < t3) {
            _this._beginAngle = t5.call$0() * J.get$sign$in(t4 - t8);
            _this._endAngle = 0;
          } else {
            _this._beginAngle = 3.141592653589793 + t5.call$0() * J.get$sign$in(t8 - t4);
            _this._endAngle = 3.141592653589793;
          }
        } else {
          _this._radius = t6 / c.$sub(0, t2).get$distance() / 2;
          t1 = J.get$sign$in(t8 - t4);
          t2 = _this._radius;
          t2.toString;
          _this._center = new P.Offset(t7, t4 + t1 * t2);
          if (t4 < t8) {
            _this._beginAngle = -1.5707963267948966;
            _this._endAngle = -1.5707963267948966 + t5.call$0() * J.get$sign$in(t3 - t7);
          } else {
            _this._beginAngle = 1.5707963267948966;
            _this._endAngle = 1.5707963267948966 + t5.call$0() * J.get$sign$in(t7 - t3);
          }
        }
      } else
        _this._endAngle = _this._beginAngle = null;
      _this._arc$_dirty = false;
    },
    get$center: function() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._center;
    },
    get$radius: function() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._radius;
    },
    get$beginAngle: function() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._beginAngle;
    },
    get$endAngle: function() {
      var _this = this;
      if (_this.begin == null || _this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this._beginAngle;
    },
    set$begin: function(value) {
      if (!J.$eq$(value, this.begin)) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end: function(_, value) {
      if (!value.$eq(0, this.end)) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1: function(t) {
      var t1, t2, t3, t4, _this = this;
      if (_this._arc$_dirty)
        _this._initialize$0();
      if (t === 0) {
        t1 = _this.begin;
        t1.toString;
        return t1;
      }
      if (t === 1) {
        t1 = _this.end;
        t1.toString;
        return t1;
      }
      t1 = _this._beginAngle;
      if (t1 == null || _this._endAngle == null) {
        t1 = P.Offset_lerp(_this.begin, _this.end, t);
        t1.toString;
        return t1;
      }
      t1 = P.lerpDouble(t1, _this._endAngle, t);
      t1.toString;
      t2 = Math.cos(t1);
      t3 = _this._radius;
      t3.toString;
      t1 = Math.sin(t1);
      t4 = _this._radius;
      t4.toString;
      return _this._center.$add(0, new P.Offset(t2 * t3, t1 * t4));
    },
    toString$0: function(_) {
      var _this = this;
      return "MaterialPointArcTween(" + H.S(_this.begin) + " \u2192 " + H.S(_this.end) + "; center=" + H.S(_this.get$center()) + ", radius=" + H.S(_this.get$radius()) + ", beginAngle=" + H.S(_this.get$beginAngle()) + ", endAngle=" + H.S(_this.get$endAngle()) + ")";
    }
  };
  D.MaterialPointArcTween__initialize_sweepAngle.prototype = {
    call$0: function() {
      var t1 = this.$this._radius;
      t1.toString;
      return 2 * Math.asin(this.distanceFromAtoB / (2 * t1));
    },
    $signature: 54
  };
  D._CornerId.prototype = {
    toString$0: function(_) {
      return this._arc$_name;
    }
  };
  D._Diagonal.prototype = {};
  D._maxBy__maxValue_set.prototype = {
    call$1: function(t1) {
      return this._box_0._maxValue = t1;
    },
    $signature: function() {
      return this.T._eval$1("@(0)");
    }
  };
  D._maxBy__maxValue_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._maxValue;
      return t1 === $ ? H.throwExpression(H.LateError$localNI("maxValue")) : t1;
    },
    $signature: function() {
      return this.T._eval$1("0()");
    }
  };
  D.MaterialRectArcTween.prototype = {
    _initialize$0: function() {
      var t2, t3, _this = this,
        diagonal = D._maxBy(C.List_yvP, new D.MaterialRectArcTween__initialize_closure(_this, _this.end.get$center().$sub(0, _this.begin.get$center())), type$._Diagonal),
        t1 = _this.begin;
      t1.toString;
      t2 = diagonal.beginId;
      t1 = _this._cornerFor$2(t1, t2);
      t3 = _this.end;
      t3.toString;
      _this.__MaterialRectArcTween__beginArc = new D.MaterialPointArcTween(t1, _this._cornerFor$2(t3, t2));
      t2 = _this.begin;
      t2.toString;
      t3 = diagonal.endId;
      t2 = _this._cornerFor$2(t2, t3);
      t1 = _this.end;
      t1.toString;
      _this.__MaterialRectArcTween__endArc = new D.MaterialPointArcTween(t2, _this._cornerFor$2(t1, t3));
      _this._arc$_dirty = false;
    },
    _cornerFor$2: function(rect, id) {
      switch (id) {
        case C._CornerId_0:
          return new P.Offset(rect.left, rect.top);
        case C._CornerId_1:
          return new P.Offset(rect.right, rect.top);
        case C._CornerId_2:
          return new P.Offset(rect.left, rect.bottom);
        case C._CornerId_3:
          return new P.Offset(rect.right, rect.bottom);
      }
    },
    get$beginArc: function() {
      var _this = this;
      if (_this.begin == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this.get$_beginArc();
    },
    get$_beginArc: function() {
      var t1 = this.__MaterialRectArcTween__beginArc;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_beginArc")) : t1;
    },
    get$endArc: function() {
      var _this = this;
      if (_this.end == null)
        return null;
      if (_this._arc$_dirty)
        _this._initialize$0();
      return _this.get$_endArc();
    },
    get$_endArc: function() {
      var t1 = this.__MaterialRectArcTween__endArc;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_endArc")) : t1;
    },
    set$begin: function(value) {
      if (!J.$eq$(value, this.begin)) {
        this.begin = value;
        this._arc$_dirty = true;
      }
    },
    set$end: function(_, value) {
      if (!value.$eq(0, this.end)) {
        this.end = value;
        this._arc$_dirty = true;
      }
    },
    lerp$1: function(t) {
      var t1, _this = this;
      if (_this._arc$_dirty)
        _this._initialize$0();
      if (t === 0) {
        t1 = _this.begin;
        t1.toString;
        return t1;
      }
      if (t === 1) {
        t1 = _this.end;
        t1.toString;
        return t1;
      }
      return P.Rect$fromPoints(_this.get$_beginArc().lerp$1(t), _this.get$_endArc().lerp$1(t));
    },
    toString$0: function(_) {
      var _this = this;
      return "MaterialRectArcTween(" + H.S(_this.begin) + " \u2192 " + H.S(_this.end) + "; beginArc=" + H.S(_this.get$beginArc()) + ", endArc=" + H.S(_this.get$endArc()) + ")";
    }
  };
  D.MaterialRectArcTween__initialize_closure.prototype = {
    call$1: function(d) {
      var t4, delta, $length,
        t1 = this.$this,
        t2 = this.centersVector,
        t3 = t1.begin;
      t3.toString;
      t3 = t1._cornerFor$2(t3, d.endId);
      t4 = t1.begin;
      t4.toString;
      delta = t3.$sub(0, t1._cornerFor$2(t4, d.beginId));
      $length = delta.get$distance();
      return t2._dx * delta._dx / $length + t2._dy * delta._dy / $length;
    },
    $signature: 168
  };
  Q.MaterialBannerThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.contentTextStyle, _this.padding, _this.leadingPadding, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof Q.MaterialBannerThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.contentTextStyle, _this.contentTextStyle) && J.$eq$(other.padding, _this.padding) && J.$eq$(other.leadingPadding, _this.leadingPadding);
    }
  };
  Q._MaterialBannerThemeData_Object_Diagnosticable.prototype = {};
  D.BottomAppBarTheme.prototype = {
    get$hashCode: function(_) {
      return P.hashValues(this.color, this.elevation, this.shape, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof D.BottomAppBarTheme && J.$eq$(other.color, _this.color) && other.elevation == _this.elevation && true;
    }
  };
  D._BottomAppBarTheme_Object_Diagnosticable.prototype = {};
  M.BottomNavigationBarThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.elevation, _this.selectedIconTheme, _this.unselectedIconTheme, _this.selectedItemColor, _this.unselectedItemColor, _this.selectedLabelStyle, _this.unselectedLabelStyle, _this.showSelectedLabels, _this.showUnselectedLabels, _this.type, _this.enableFeedback, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof M.BottomNavigationBarThemeData)
        if (J.$eq$(other.backgroundColor, _this.backgroundColor))
          if (other.elevation == _this.elevation)
            if (J.$eq$(other.selectedIconTheme, _this.selectedIconTheme))
              if (J.$eq$(other.unselectedIconTheme, _this.unselectedIconTheme))
                if (J.$eq$(other.selectedItemColor, _this.selectedItemColor))
                  if (J.$eq$(other.unselectedItemColor, _this.unselectedItemColor))
                    if (J.$eq$(other.selectedLabelStyle, _this.selectedLabelStyle))
                      if (J.$eq$(other.unselectedLabelStyle, _this.unselectedLabelStyle))
                        t1 = true;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  M._BottomNavigationBarThemeData_Object_Diagnosticable.prototype = {};
  X.BottomSheetThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.elevation, _this.modalBackgroundColor, _this.modalElevation, _this.shape, _this.clipBehavior, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof X.BottomSheetThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.modalBackgroundColor, _this.modalBackgroundColor) && other.modalElevation == _this.modalElevation && J.$eq$(other.shape, _this.shape) && true;
    }
  };
  X._BottomSheetThemeData_Object_Diagnosticable.prototype = {};
  Z.RawMaterialButton.prototype = {
    createState$0: function() {
      return new Z._RawMaterialButtonState(P.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState), C._StateLifecycle_0);
    }
  };
  Z._RawMaterialButtonState.prototype = {
    _handleHighlightChanged$1: function(value) {
      if (this._states.contains$1(0, C.MaterialState_2) !== value)
        this.setState$1(new Z._RawMaterialButtonState__handleHighlightChanged_closure(this, value));
    },
    _handleHoveredChanged$1: function(value) {
      if (this._states.contains$1(0, C.MaterialState_0) !== value)
        this.setState$1(new Z._RawMaterialButtonState__handleHoveredChanged_closure(this, value));
    },
    _handleFocusedChanged$1: function(value) {
      if (this._states.contains$1(0, C.MaterialState_1) !== value)
        this.setState$1(new Z._RawMaterialButtonState__handleFocusedChanged_closure(this, value));
    },
    initState$0: function() {
      this.super$State$initState();
      this._widget.toString;
      this._states.remove$1(0, C.MaterialState_5);
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      _this._widget.toString;
      t1 = _this._states;
      t1.remove$1(0, C.MaterialState_5);
      if (t1.contains$1(0, C.MaterialState_5) && t1.contains$1(0, C.MaterialState_2))
        _this._handleHighlightChanged$1(false);
    },
    get$_effectiveElevation: function() {
      var _this = this,
        t1 = _this._states;
      if (t1.contains$1(0, C.MaterialState_5))
        return _this._widget.disabledElevation;
      if (t1.contains$1(0, C.MaterialState_2))
        return _this._widget.highlightElevation;
      if (t1.contains$1(0, C.MaterialState_0))
        return _this._widget.hoverElevation;
      if (t1.contains$1(0, C.MaterialState_1))
        return _this._widget.focusElevation;
      return _this._widget.elevation;
    },
    build$1: function(_, context) {
      var densityAdjustment, t3, t4, effectiveMouseCursor, t5, padding, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, minSize, _this = this, _null = null,
        t1 = _this._widget.textStyle,
        t2 = _this._states,
        effectiveTextColor = V.MaterialStateProperty_resolveAs(t1.color, t2, type$.nullable_Color),
        effectiveShape = V.MaterialStateProperty_resolveAs(_this._widget.shape, t2, type$.nullable_ShapeBorder);
      _this._widget.toString;
      densityAdjustment = new P.Offset(0, 0).$mul(0, 4);
      t1 = _this._widget.constraints;
      t3 = C.JSNumber_methods.clamp$2(t1.minWidth + new P.Offset(0, 0).$mul(0, 4)._dx, 0, 1 / 0);
      t4 = C.JSNumber_methods.clamp$2(t1.minHeight + new P.Offset(0, 0).$mul(0, 4)._dy, 0, 1 / 0);
      _this._widget.toString;
      effectiveMouseCursor = V.MaterialStateProperty_resolveAs(C.C__EnabledAndDisabledMouseCursor, t2, type$.nullable_MouseCursor);
      _this._widget.toString;
      t2 = densityAdjustment._dx;
      t5 = densityAdjustment._dy;
      padding = C.EdgeInsets_0_0_0_0.add$1(0, new V.EdgeInsets(t2, t5, t2, t5)).clamp$2(0, C.EdgeInsets_0_0_0_0, C._MixedEdgeInsets_QWq);
      t6 = _this.get$_effectiveElevation();
      t7 = _this._widget.textStyle.copyWith$1$color(effectiveTextColor);
      t8 = _this._widget;
      t9 = t8.fillColor;
      t10 = t8.clipBehavior;
      t11 = t8.focusNode;
      t12 = t8.splashColor;
      t13 = t8.focusColor;
      t14 = t8.hoverColor;
      t15 = t8.onPressed;
      t16 = Y.IconTheme_merge(M.Container$(T.Center$(t8.child, 1, 1), _null, _null, padding), new T.IconThemeData(effectiveTextColor, _null, _null));
      switch (t8.materialTapTargetSize) {
        case C.MaterialTapTargetSize_0:
          minSize = new P.Size(48 + t2, 48 + t5);
          break;
        case C.MaterialTapTargetSize_1:
          minSize = C.Size_0_0;
          break;
        default:
          minSize = _null;
      }
      return T.Semantics$(true, new Z._InputPadding(minSize, new T.ConstrainedBox(new S.BoxConstraints(t3, t1.maxWidth, t4, t1.maxHeight), new M.Material(new R.InkWell(t16, t15, _null, _null, _null, _null, _this.get$_handleHighlightChanged(), _this.get$_handleHoveredChanged(), effectiveMouseCursor, true, C.BoxShape_0, _null, _null, effectiveShape, t13, t14, _null, _null, t12, _null, true, false, _this.get$_handleFocusedChanged(), false, t11, true, _null), C.MaterialType_3, t6, t9, t7, effectiveShape, t10, C.Duration_200000, _null), _null), _null), true, true, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  Z._RawMaterialButtonState__handleHighlightChanged_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        t2 = t1._states;
      if (this.value)
        t2.add$1(0, C.MaterialState_2);
      else
        t2.remove$1(0, C.MaterialState_2);
      t1._widget.toString;
    },
    $signature: 0
  };
  Z._RawMaterialButtonState__handleHoveredChanged_closure.prototype = {
    call$0: function() {
      var t1 = this.$this._states;
      if (this.value)
        t1.add$1(0, C.MaterialState_0);
      else
        t1.remove$1(0, C.MaterialState_0);
    },
    $signature: 0
  };
  Z._RawMaterialButtonState__handleFocusedChanged_closure.prototype = {
    call$0: function() {
      var t1 = this.$this._states;
      if (this.value)
        t1.add$1(0, C.MaterialState_1);
      else
        t1.remove$1(0, C.MaterialState_1);
    },
    $signature: 0
  };
  Z._InputPadding.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new Z._RenderInputPadding(this.minSize, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$minSize(this.minSize);
    }
  };
  Z._RenderInputPadding.prototype = {
    set$minSize: function(value) {
      if (this._minSize.$eq(0, value))
        return;
      this._minSize = value;
      this.markNeedsLayout$0();
    },
    _computeSize$2$constraints$layoutChild: function(constraints, layoutChild) {
      var childSize, t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childSize = layoutChild.call$2(t1, constraints);
        t1 = childSize._dx;
        t2 = this._minSize;
        return constraints.constrain$1(new P.Size(Math.max(t1, t2._dx), Math.max(childSize._dy, t2._dy)));
      }
      return C.Size_0_0;
    },
    computeDryLayout$1: function(constraints) {
      return this._computeSize$2$constraints$layoutChild(constraints, N.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    performLayout$0: function() {
      var t2, t3, _this = this,
        t1 = _this._computeSize$2$constraints$layoutChild(K.RenderObject.prototype.get$constraints.call(_this), N.layout_helper_ChildLayoutHelper_layoutChild$closure());
      _this._size = t1;
      t2 = _this.RenderObjectWithChildMixin__child;
      if (t2 != null) {
        t3 = t2.parentData;
        t3.toString;
        type$.BoxParentData._as(t3);
        t2 = t2._size;
        t2.toString;
        t3.offset = C.Alignment_0_0.alongOffset$1(type$.Offset._as(t1.$sub(0, t2)));
      }
    },
    hitTest$2$position: function(result, position) {
      var center, t1, t2;
      if (this.super$RenderBox$hitTest(result, position))
        return true;
      center = this.RenderObjectWithChildMixin__child._size.center$1(C.Offset_0_0);
      t1 = new E.Matrix4(new Float64Array(16));
      t1.setIdentity$0();
      t2 = new E.Vector4(new Float64Array(4));
      t2.setValues$4(0, 0, 0, center._dx);
      t1.setRow$2(0, t2);
      t2 = new E.Vector4(new Float64Array(4));
      t2.setValues$4(0, 0, 0, center._dy);
      t1.setRow$2(1, t2);
      return result.addWithRawTransform$3$hitTest$position$transform(new Z._RenderInputPadding_hitTest_closure(this, center), center, t1);
    }
  };
  Z._RenderInputPadding_hitTest_closure.prototype = {
    call$2: function(result, position) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, this.center);
    },
    $signature: 20
  };
  M.ButtonBarThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.alignment, _this.mainAxisSize, _this.buttonTextTheme, _this.buttonMinWidth, _this.buttonHeight, _this.buttonPadding, _this.buttonAlignedDropdown, _this.layoutBehavior, _this.overflowDirection, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof M.ButtonBarThemeData)
        if (other.buttonMinWidth == _this.buttonMinWidth)
          if (other.buttonHeight == _this.buttonHeight)
            if (J.$eq$(other.buttonPadding, _this.buttonPadding))
              t1 = true;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  M._ButtonBarThemeData_Object_Diagnosticable.prototype = {};
  A.ButtonStyle.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.textStyle, _this.backgroundColor, _this.foregroundColor, _this.overlayColor, _this.shadowColor, _this.elevation, _this.padding, _this.minimumSize, _this.fixedSize, _this.side, _this.shape, _this.mouseCursor, _this.visualDensity, _this.tapTargetSize, _this.animationDuration, _this.enableFeedback, _this.alignment, _this.splashFactory, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof A.ButtonStyle)
        if (other.textStyle == _this.textStyle)
          if (other.backgroundColor == _this.backgroundColor)
            if (other.foregroundColor == _this.foregroundColor)
              if (other.overlayColor == _this.overlayColor)
                if (other.shadowColor == _this.shadowColor)
                  if (other.elevation == _this.elevation)
                    if (other.padding == _this.padding)
                      if (other.minimumSize == _this.minimumSize)
                        if (other.fixedSize == _this.fixedSize)
                          if (other.side == _this.side)
                            if (other.shape == _this.shape)
                              t1 = J.$eq$(other.alignment, _this.alignment) && true;
                            else
                              t1 = false;
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  A._LerpProperties3.prototype = {
    resolve$1: function(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  A._LerpSides.prototype = {
    resolve$1: function(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      t1 = resolvedA == null;
      if (t1 && resolvedB == null)
        return null;
      if (t1) {
        t1 = resolvedB.color.value;
        return Y.BorderSide_lerp(new Y.BorderSide(P.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, C.BorderStyle_1), resolvedB, _this.t);
      }
      if (resolvedB == null) {
        t1 = resolvedA.color.value;
        return Y.BorderSide_lerp(resolvedA, new Y.BorderSide(P.Color$fromARGB(0, t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255), 0, C.BorderStyle_1), _this.t);
      }
      return Y.BorderSide_lerp(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  A._LerpShapes.prototype = {
    resolve$1: function(states) {
      var resolvedB,
        t1 = this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return type$.nullable_OutlinedBorder._as(Y.ShapeBorder_lerp(resolvedA, resolvedB, this.t));
    },
    $isMaterialStateProperty: 1
  };
  A._ButtonStyle_Object_Diagnosticable.prototype = {};
  M.ButtonTextTheme.prototype = {
    toString$0: function(_) {
      return this._button_theme$_name;
    }
  };
  M.ButtonThemeData.prototype = {
    get$padding: function(_) {
      switch (C.ButtonTextTheme_0) {
        case C.ButtonTextTheme_0:
        case C.ButtonTextTheme_1:
          return C.EdgeInsets_16_0_16_0;
        case C.ButtonTextTheme_2:
          return C.EdgeInsets_24_0_24_0;
      }
    },
    get$shape: function(_) {
      switch (C.ButtonTextTheme_0) {
        case C.ButtonTextTheme_0:
        case C.ButtonTextTheme_1:
          return C.RoundedRectangleBorder_a510;
        case C.ButtonTextTheme_2:
          return C.RoundedRectangleBorder_a511;
      }
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof M.ButtonThemeData)
        if (J.$eq$(other.get$padding(other), _this.get$padding(_this)))
          if (J.$eq$(other.get$shape(other), _this.get$shape(_this)))
            if (J.$eq$(other._buttonColor, _this._buttonColor))
              if (J.$eq$(other._focusColor, _this._focusColor))
                if (J.$eq$(other._hoverColor, _this._hoverColor))
                  t1 = J.$eq$(other.colorScheme, _this.colorScheme) && other._materialTapTargetSize == _this._materialTapTargetSize;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(C.ButtonTextTheme_0, 88, 36, _this.get$padding(_this), _this.get$shape(_this), false, _this._buttonColor, _this._disabledColor, _this._focusColor, _this._hoverColor, _this._highlightColor, _this._splashColor, _this.colorScheme, _this._materialTapTargetSize, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  M._ButtonThemeData_Object_Diagnosticable.prototype = {};
  A.CardTheme.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.clipBehavior, _this.color, _this.shadowColor, _this.elevation, _this.margin, _this.shape, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof A.CardTheme)
        t1 = J.$eq$(other.color, _this.color) && J.$eq$(other.shadowColor, _this.shadowColor) && other.elevation == _this.elevation && J.$eq$(other.margin, _this.margin) && J.$eq$(other.shape, _this.shape);
      else
        t1 = false;
      return t1;
    }
  };
  A._CardTheme_Object_Diagnosticable.prototype = {};
  F.CheckboxThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.mouseCursor, _this.fillColor, _this.checkColor, _this.overlayColor, _this.splashRadius, _this.materialTapTargetSize, _this.visualDensity, _this.shape, _this.side, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof F.CheckboxThemeData)
        if (other.fillColor == _this.fillColor)
          if (other.checkColor == _this.checkColor)
            if (other.overlayColor == _this.overlayColor)
              if (other.splashRadius == _this.splashRadius)
                t1 = J.$eq$(other.shape, _this.shape) && J.$eq$(other.side, _this.side);
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  F._LerpProperties1.prototype = {
    resolve$1: function(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  F._CheckboxThemeData_Object_Diagnosticable.prototype = {};
  K.ChipThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.deleteIconColor, _this.disabledColor, _this.selectedColor, _this.secondarySelectedColor, _this.shadowColor, _this.selectedShadowColor, _this.checkmarkColor, _this.labelPadding, _this.padding, _this.side, _this.shape, _this.labelStyle, _this.secondaryLabelStyle, _this.brightness, _this.elevation, _this.pressElevation, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof K.ChipThemeData && other.backgroundColor.$eq(0, _this.backgroundColor) && J.$eq$(other.deleteIconColor, _this.deleteIconColor) && other.disabledColor.$eq(0, _this.disabledColor) && other.selectedColor.$eq(0, _this.selectedColor) && other.secondarySelectedColor.$eq(0, _this.secondarySelectedColor) && J.$eq$(other.shadowColor, _this.shadowColor) && J.$eq$(other.selectedShadowColor, _this.selectedShadowColor) && J.$eq$(other.checkmarkColor, _this.checkmarkColor) && J.$eq$(other.labelPadding, _this.labelPadding) && other.padding.$eq(0, _this.padding) && J.$eq$(other.side, _this.side) && J.$eq$(other.shape, _this.shape) && other.labelStyle.$eq(0, _this.labelStyle) && other.secondaryLabelStyle.$eq(0, _this.secondaryLabelStyle) && other.brightness === _this.brightness && other.elevation == _this.elevation && other.pressElevation == _this.pressElevation;
    }
  };
  K._ChipThemeData_Object_Diagnosticable.prototype = {};
  A.ColorScheme.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof A.ColorScheme && other.primary.$eq(0, _this.primary) && other.primaryVariant.$eq(0, _this.primaryVariant) && other.secondary.$eq(0, _this.secondary) && other.secondaryVariant.$eq(0, _this.secondaryVariant) && other.surface.$eq(0, _this.surface) && other.background.$eq(0, _this.background) && other.error.$eq(0, _this.error) && other.onPrimary.$eq(0, _this.onPrimary) && other.onSecondary.$eq(0, _this.onSecondary) && other.onSurface.$eq(0, _this.onSurface) && other.onBackground.$eq(0, _this.onBackground) && other.onError.$eq(0, _this.onError) && other.brightness === _this.brightness;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.primary, _this.primaryVariant, _this.secondary, _this.secondaryVariant, _this.surface, _this.background, _this.error, _this.onPrimary, _this.onSecondary, _this.onSurface, _this.onBackground, _this.onError, _this.brightness, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  A._ColorScheme_Object_Diagnosticable.prototype = {};
  E.MaterialColor.prototype = {};
  Z.DataTableThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.decoration, _this.dataRowColor, _this.dataRowHeight, _this.dataTextStyle, _this.headingRowColor, _this.headingRowHeight, _this.headingTextStyle, _this.horizontalMargin, _this.columnSpacing, _this.dividerThickness, _this.checkboxHorizontalMargin, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof Z.DataTableThemeData && J.$eq$(other.decoration, _this.decoration) && other.dataRowColor == _this.dataRowColor && other.dataRowHeight == _this.dataRowHeight && J.$eq$(other.dataTextStyle, _this.dataTextStyle) && other.headingRowColor == _this.headingRowColor && other.headingRowHeight == _this.headingRowHeight && J.$eq$(other.headingTextStyle, _this.headingTextStyle) && other.horizontalMargin == _this.horizontalMargin && other.columnSpacing == _this.columnSpacing && other.dividerThickness == _this.dividerThickness && other.checkboxHorizontalMargin == _this.checkboxHorizontalMargin;
    }
  };
  Z._LerpProperties2.prototype = {
    resolve$1: function(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  Z._DataTableThemeData_Object_Diagnosticable.prototype = {};
  Y.DialogTheme.prototype = {
    get$hashCode: function(_) {
      return J.get$hashCode$(this.shape);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof Y.DialogTheme && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.shape, _this.shape) && J.$eq$(other.titleTextStyle, _this.titleTextStyle) && J.$eq$(other.contentTextStyle, _this.contentTextStyle);
    }
  };
  Y._DialogTheme_Object_Diagnosticable.prototype = {};
  G.DividerThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.color, _this.space, _this.thickness, _this.indent, _this.endIndent, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof G.DividerThemeData && J.$eq$(other.color, _this.color) && other.space == _this.space && other.thickness == _this.thickness && other.indent == _this.indent && other.endIndent == _this.endIndent;
    }
  };
  G._DividerThemeData_Object_Diagnosticable.prototype = {};
  T.ElevatedButtonThemeData.prototype = {
    get$hashCode: function(_) {
      return J.get$hashCode$(this.style);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof T.ElevatedButtonThemeData && J.$eq$(other.style, this.style);
    }
  };
  T._ElevatedButtonThemeData_Object_Diagnosticable.prototype = {};
  E._DefaultHeroTag.prototype = {
    toString$0: function(_) {
      return "<default FloatingActionButton tag>";
    }
  };
  E.FloatingActionButton.prototype = {
    build$1: function(_, context) {
      var backgroundColor, focusColor, hoverColor, splashColor, elevation, focusElevation, hoverElevation, disabledElevation, highlightElevation, textStyle, shape, _null = null,
        theme = K.Theme_of(context),
        floatingActionButtonTheme = theme.floatingActionButtonTheme,
        foregroundColor = floatingActionButtonTheme.foregroundColor;
      if (foregroundColor == null)
        foregroundColor = theme.colorScheme.onSecondary;
      backgroundColor = floatingActionButtonTheme.backgroundColor;
      if (backgroundColor == null)
        backgroundColor = theme.colorScheme.secondary;
      focusColor = floatingActionButtonTheme.focusColor;
      if (focusColor == null)
        focusColor = theme.focusColor;
      hoverColor = floatingActionButtonTheme.hoverColor;
      if (hoverColor == null)
        hoverColor = theme.hoverColor;
      splashColor = floatingActionButtonTheme.splashColor;
      if (splashColor == null)
        splashColor = theme.splashColor;
      elevation = floatingActionButtonTheme.elevation;
      if (elevation == null)
        elevation = 6;
      focusElevation = floatingActionButtonTheme.focusElevation;
      if (focusElevation == null)
        focusElevation = 6;
      hoverElevation = floatingActionButtonTheme.hoverElevation;
      if (hoverElevation == null)
        hoverElevation = 8;
      disabledElevation = floatingActionButtonTheme.disabledElevation;
      if (disabledElevation == null)
        disabledElevation = elevation;
      highlightElevation = floatingActionButtonTheme.highlightElevation;
      if (highlightElevation == null)
        highlightElevation = 12;
      textStyle = theme.textTheme.button.copyWith$2$color$letterSpacing(foregroundColor, 1.2);
      shape = floatingActionButtonTheme.shape;
      if (shape == null)
        shape = C.CircleBorder_61T;
      return new T.MergeSemantics(new T.Hero(C.C__DefaultHeroTag, new Z.RawMaterialButton(this.onPressed, _null, textStyle, backgroundColor, focusColor, hoverColor, splashColor, elevation, hoverElevation, focusElevation, highlightElevation, disabledElevation, this._sizeConstraints, shape, this.child, theme.materialTapTargetSize, _null, false, C.Clip_0, _null), _null), _null);
    }
  };
  S.FloatingActionButtonThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.foregroundColor, _this.backgroundColor, _this.focusColor, _this.hoverColor, _this.splashColor, _this.elevation, _this.focusElevation, _this.hoverElevation, _this.disabledElevation, _this.highlightElevation, _this.shape, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof S.FloatingActionButtonThemeData && J.$eq$(other.foregroundColor, _this.foregroundColor) && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.focusColor, _this.focusColor) && J.$eq$(other.hoverColor, _this.hoverColor) && J.$eq$(other.splashColor, _this.splashColor) && other.elevation == _this.elevation && other.focusElevation == _this.focusElevation && other.hoverElevation == _this.hoverElevation && other.disabledElevation == _this.disabledElevation && other.highlightElevation == _this.highlightElevation && J.$eq$(other.shape, _this.shape);
    }
  };
  S._FloatingActionButtonThemeData_Object_Diagnosticable.prototype = {};
  Y.InkHighlight.prototype = {
    get$_alphaController: function() {
      var t1 = this.__InkHighlight__alphaController;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_alphaController")) : t1;
    },
    _handleAlphaStatusChanged$1: function($status) {
      if ($status === C.AnimationStatus_0 && !this._active) {
        this.get$_alphaController().dispose$0(0);
        this.super$InkFeature$dispose(0);
      }
    },
    dispose$0: function(_) {
      this.get$_alphaController().dispose$0(0);
      this.super$InkFeature$dispose(0);
    },
    _paintHighlight$3: function(canvas, rect, paint) {
      var t1, _this = this;
      canvas.save$0(0);
      t1 = _this._ink_highlight$_customBorder;
      if (t1 != null)
        canvas.clipPath$1(0, t1.getOuterPath$2$textDirection(rect, _this._ink_highlight$_textDirection));
      switch (_this._ink_highlight$_shape) {
        case C.BoxShape_1:
          t1 = rect.get$center();
          canvas.drawCircle$3(0, t1, 35, paint);
          break;
        case C.BoxShape_0:
          t1 = _this._ink_highlight$_borderRadius;
          if (!t1.$eq(0, C.BorderRadius_tLn))
            canvas.drawRRect$2(0, P.RRect$fromRectAndCorners(rect, t1.bottomLeft, t1.bottomRight, t1.topLeft, t1.topRight), paint);
          else
            canvas.drawRect$2(0, rect, paint);
          break;
      }
      canvas.restore$0(0);
    },
    paintFeature$2: function(canvas, transform) {
      var t2, t3, originOffset, rect, _this = this,
        t1 = H._detectRenderer(),
        paint = t1 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
      t1 = _this._ink_well$_color;
      t2 = _this.__InkHighlight__alpha;
      if (t2 == null)
        t2 = H.throwExpression(H.LateError$fieldNI("_alpha"));
      t3 = t2.parent;
      t1 = t1.value;
      paint.set$color(0, P.Color$fromARGB(t2._evaluatable.transform$1(0, t3.get$value(t3)), t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255));
      originOffset = T.MatrixUtils_getAsTranslation(transform);
      t1 = _this._rectCallback;
      if (t1 != null)
        rect = t1.call$0();
      else {
        t1 = _this.referenceBox._size;
        rect = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      if (originOffset == null) {
        canvas.save$0(0);
        canvas.transform$1(0, transform._m4storage);
        _this._paintHighlight$3(canvas, rect, paint);
        canvas.restore$0(0);
      } else
        _this._paintHighlight$3(canvas, rect.shift$1(originOffset), paint);
    }
  };
  U._getClipCallback_closure.prototype = {
    call$0: function() {
      var t1 = this.referenceBox._size;
      return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    $signature: 170
  };
  U._InkSplashFactory.prototype = {};
  U.InkSplash.prototype = {
    get$_radiusController: function() {
      var t1 = this.__InkSplash__radiusController;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_radiusController")) : t1;
    },
    confirm$0: function(_) {
      var duration = C.JSNumber_methods.floor$0(this._targetRadius / 1),
        t1 = this.get$_radiusController();
      t1.duration = P.Duration$(0, duration);
      t1.forward$0(0);
      this._ink_splash$_alphaController.forward$0(0);
    },
    _ink_splash$_handleAlphaStatusChanged$1: function($status) {
      if ($status === C.AnimationStatus_3)
        this.dispose$0(0);
    },
    dispose$0: function(_) {
      var _this = this;
      _this.get$_radiusController().dispose$0(0);
      _this._ink_splash$_alphaController.dispose$0(0);
      _this._ink_splash$_alphaController = null;
      _this.super$InkFeature$dispose(0);
    },
    paintFeature$2: function(canvas, transform) {
      var t2, t3, center, t4, originOffset, rect, _this = this,
        t1 = H._detectRenderer(),
        paint = t1 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
      t1 = _this._ink_well$_color;
      t2 = _this.__InkSplash__alpha;
      if (t2 == null)
        t2 = H.throwExpression(H.LateError$fieldNI("_alpha"));
      t3 = t2.parent;
      t1 = t1.value;
      paint.set$color(0, P.Color$fromARGB(t2._evaluatable.transform$1(0, t3.get$value(t3)), t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255));
      center = _this._ink_splash$_position;
      if (_this._repositionToReferenceBox)
        center = P.Offset_lerp(center, _this.referenceBox._size.center$1(C.Offset_0_0), _this.get$_radiusController().get$_animation_controller$_value());
      center.toString;
      t1 = _this.__InkSplash__radius;
      if (t1 == null)
        t1 = H.throwExpression(H.LateError$fieldNI("_radius"));
      t2 = t1.parent;
      t2 = t1._evaluatable.transform$1(0, t2.get$value(t2));
      t1 = _this._customBorder;
      t3 = _this._ink_splash$_borderRadius;
      t4 = _this._clipCallback;
      originOffset = T.MatrixUtils_getAsTranslation(transform);
      canvas.save$0(0);
      if (originOffset == null)
        canvas.transform$1(0, transform._m4storage);
      else
        canvas.translate$2(0, originOffset._dx, originOffset._dy);
      if (t4 != null) {
        rect = t4.call$0();
        if (t1 != null)
          canvas.clipPath$1(0, t1.getOuterPath$2$textDirection(rect, _this._ink_splash$_textDirection));
        else if (!t3.$eq(0, C.BorderRadius_tLn))
          canvas.clipRRect$1(0, P.RRect$fromRectAndCorners(rect, t3.bottomLeft, t3.bottomRight, t3.topLeft, t3.topRight));
        else
          canvas.clipRect$1(0, rect);
      }
      canvas.drawCircle$3(0, center, t2, paint);
      canvas.restore$0(0);
    }
  };
  R.InteractiveInkFeature.prototype = {
    set$color: function(_, value) {
      if (value.$eq(0, this._ink_well$_color))
        return;
      this._ink_well$_color = value;
      this._material$_controller.markNeedsPaint$0();
    }
  };
  R.InteractiveInkFeatureFactory.prototype = {};
  R._ParentInkResponseProvider.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return this.state !== oldWidget.state;
    }
  };
  R.InkResponse.prototype = {
    getRectCallback$1: function(referenceBox) {
      return null;
    },
    build$1: function(_, context) {
      var _this = this,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$._ParentInkResponseProvider),
        parentState = t1 == null ? null : t1.state;
      return new R._InkResponseStateWidget(_this.child, _this.onTap, _this.onTapDown, _this.onTapCancel, _this.onDoubleTap, _this.onLongPress, _this.onHighlightChanged, _this.onHover, _this.mouseCursor, true, _this.highlightShape, _this.radius, _this.borderRadius, _this.customBorder, _this.focusColor, _this.hoverColor, _this.highlightColor, _this.overlayColor, _this.splashColor, _this.splashFactory, true, false, _this.onFocusChange, false, _this.focusNode, _this.canRequestFocus, parentState, _this.get$getRectCallback(), _this.get$debugCheckContext(), null);
    },
    debugCheckContext$1: function(context) {
      return true;
    }
  };
  R._InkResponseStateWidget.prototype = {
    createState$0: function() {
      return new R._InkResponseState(P.LinkedHashMap_LinkedHashMap$_empty(type$._HighlightType, type$.nullable_InkHighlight), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray__ParentInkResponseState), type$.ObserverList__ParentInkResponseState), null, C._StateLifecycle_0);
    }
  };
  R._HighlightType.prototype = {
    toString$0: function(_) {
      return this._ink_well$_name;
    }
  };
  R._InkResponseState.prototype = {
    get$highlightsExist: function() {
      var t1 = this._highlights;
      t1 = t1.get$values(t1);
      t1 = new H.WhereIterable(t1, new R._InkResponseState_highlightsExist_closure(), H._instanceType(t1)._eval$1("WhereIterable<Iterable.E>"));
      return !t1.get$isEmpty(t1);
    },
    markChildInkResponsePressed$2: function(childState, value) {
      var nowAnyPressed,
        t1 = this._activeChildren,
        t2 = t1._observer_list$_list,
        t3 = t2.length;
      if (value) {
        t1._isDirty = true;
        t2.push(childState);
      } else
        t1.remove$1(0, childState);
      nowAnyPressed = t2.length !== 0;
      if (nowAnyPressed !== (t3 !== 0)) {
        t1 = this._widget.parentState;
        if (t1 != null)
          t1.markChildInkResponsePressed$2(this, nowAnyPressed);
      }
    },
    _simulateTap$1: function(intent) {
      var t1 = this._framework$_element;
      t1.toString;
      this._startSplash$1$context(t1);
      this._handleTap$0();
    },
    _simulateTap$0: function() {
      return this._simulateTap$1(null);
    },
    initState$0: function() {
      this.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$initState();
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._focus_manager$_listeners.add$1(0, this.get$_handleFocusHighlightModeChange());
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      t1.toString;
      if (_this._isWidgetEnabled$1(t1) !== _this._isWidgetEnabled$1(oldWidget)) {
        t1 = _this._widget;
        t1.toString;
        if (_this._isWidgetEnabled$1(t1))
          _this.updateHighlight$3$callOnHover$value(C._HighlightType_1, false, _this._hovering);
        _this._updateFocusHighlights$0();
      }
    },
    dispose$0: function(_) {
      $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._focus_manager$_listeners.remove$1(0, this.get$_handleFocusHighlightModeChange());
      this.super$State$dispose(0);
    },
    get$wantKeepAlive: function() {
      if (!this.get$highlightsExist()) {
        var t1 = this._splashes;
        t1 = t1 != null && t1._collection$_length !== 0;
      } else
        t1 = true;
      return t1;
    },
    getHighlightColorForType$1: function(type) {
      var t1, _this = this;
      switch (type) {
        case C._HighlightType_0:
          _this._widget.toString;
          t1 = _this._framework$_element;
          t1.toString;
          t1 = K.Theme_of(t1).highlightColor;
          return t1;
        case C._HighlightType_2:
          t1 = _this._widget;
          t1 = t1.focusColor;
          return t1;
        case C._HighlightType_1:
          t1 = _this._widget;
          t1 = t1.hoverColor;
          return t1;
      }
    },
    getFadeDurationForType$1: function(type) {
      switch (type) {
        case C._HighlightType_0:
          return C.Duration_200000;
        case C._HighlightType_1:
        case C._HighlightType_2:
          return C.Duration_50000;
      }
    },
    updateHighlight$3$callOnHover$value: function(type, callOnHover, value) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, _this = this,
        t1 = _this._highlights,
        highlight = t1.$index(0, type);
      if (type === C._HighlightType_0) {
        t2 = _this._widget.parentState;
        if (t2 != null)
          t2.markChildInkResponsePressed$2(_this, value);
      }
      t2 = highlight == null;
      if (value === (!t2 && highlight._active))
        return;
      if (value)
        if (t2) {
          t2 = _this._framework$_element.get$renderObject();
          t2.toString;
          type$.RenderBox._as(t2);
          t3 = _this._framework$_element.findAncestorRenderObjectOfType$1$0(type$._RenderInkFeatures);
          t3.toString;
          t4 = _this.getHighlightColorForType$1(type);
          t5 = _this._widget;
          t6 = t5.highlightShape;
          t7 = t5.radius;
          t8 = t5.customBorder;
          t5 = t5.getRectCallback.call$1(t2);
          t9 = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
          t9.toString;
          t10 = _this.getFadeDurationForType$1(type);
          t2 = new Y.InkHighlight(t6, t7, C.BorderRadius_tLn, t8, t5, t9.textDirection, t4, t3, t2, new R._InkResponseState_updateHighlight_handleInkRemoval(_this, type));
          t10 = G.AnimationController$(null, t10, null, t3.vsync);
          t10.didRegisterListener$0();
          t5 = t10.AnimationLocalListenersMixin__listeners;
          t5._isDirty = true;
          t5._observer_list$_list.push(t3.get$markNeedsPaint());
          t10.addStatusListener$1(t2.get$_handleAlphaStatusChanged());
          t10.forward$0(0);
          t2.__InkHighlight__alphaController = t10;
          t10 = t2.get$_alphaController();
          t4 = t4.value;
          t2.__InkHighlight__alpha = new R._AnimatedEvaluation(type$.Animation_double._as(t10), new R.IntTween(0, t4 >>> 24 & 255), type$.IntTween._eval$1("_AnimatedEvaluation<Animatable.T>"));
          t3.addInkFeature$1(t2);
          t1.$indexSet(0, type, t2);
          _this.updateKeepAlive$0();
        } else {
          highlight._active = true;
          highlight.get$_alphaController().forward$0(0);
        }
      else {
        highlight._active = false;
        highlight.get$_alphaController().reverse$0(0);
      }
      switch (type) {
        case C._HighlightType_0:
          _this._widget.onHighlightChanged.call$1(value);
          break;
        case C._HighlightType_1:
          if (callOnHover)
            _this._widget.onHover.call$1(value);
          break;
        case C._HighlightType_2:
          break;
      }
    },
    updateHighlight$2$value: function(type, value) {
      return this.updateHighlight$3$callOnHover$value(type, true, value);
    },
    _createInkFeature$1: function(globalPosition) {
      var t3, position, t4, color, rectCallback, customBorder, t5, splash, t6, t7, _this = this, _null = null, t1 = {},
        t2 = _this._framework$_element.findAncestorRenderObjectOfType$1$0(type$._RenderInkFeatures);
      t2.toString;
      t3 = _this._framework$_element.get$renderObject();
      t3.toString;
      type$.RenderBox._as(t3);
      position = t3.globalToLocal$1(globalPosition);
      t4 = _this._widget;
      color = t4.splashColor;
      rectCallback = t4.getRectCallback.call$1(t3);
      customBorder = _this._widget.customBorder;
      t1.splash = null;
      t4 = _this._framework$_element;
      t4.toString;
      K.Theme_of(t4);
      _this._widget.toString;
      t4 = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t4.toString;
      t5 = U._getTargetRadius(t3, true, rectCallback, position);
      splash = new U.InkSplash(position, C.BorderRadius_tLn, customBorder, t5, U._getClipCallback(t3, true, rectCallback), false, t4.textDirection, color, t2, t3, new R._InkResponseState__createInkFeature_onRemoved(t1, _this));
      t3 = t2.vsync;
      t4 = G.AnimationController$(_null, C.Duration_1000000, _null, t3);
      t6 = t2.get$markNeedsPaint();
      t4.didRegisterListener$0();
      t7 = t4.AnimationLocalListenersMixin__listeners;
      t7._isDirty = true;
      t7._observer_list$_list.push(t6);
      t4.forward$0(0);
      splash.__InkSplash__radiusController = t4;
      t4 = type$.Tween_double;
      t7 = type$.Animation_double;
      splash.__InkSplash__radius = new R._AnimatedEvaluation(t7._as(splash.get$_radiusController()), new R.Tween(0, t5, t4), t4._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t3 = G.AnimationController$(_null, C.Duration_200000, _null, t3);
      t3.didRegisterListener$0();
      t4 = t3.AnimationLocalListenersMixin__listeners;
      t4._isDirty = true;
      t4._observer_list$_list.push(t6);
      t3.addStatusListener$1(splash.get$_ink_splash$_handleAlphaStatusChanged());
      splash._ink_splash$_alphaController = t3;
      splash.__InkSplash__alpha = new R._AnimatedEvaluation(t7._as(t3), new R.IntTween(color.value >>> 24 & 255, 0), type$.IntTween._eval$1("_AnimatedEvaluation<Animatable.T>"));
      t2.addInkFeature$1(splash);
      return t1.splash = splash;
    },
    _handleFocusHighlightModeChange$1: function(mode) {
      if (this._framework$_element == null)
        return;
      this.setState$1(new R._InkResponseState__handleFocusHighlightModeChange_closure(this));
    },
    get$_shouldShowFocus: function() {
      var mode, _this = this,
        t1 = _this._framework$_element;
      t1.toString;
      t1 = F.MediaQuery_maybeOf(t1);
      mode = t1 == null ? null : t1.navigationMode;
      switch (mode == null ? C.NavigationMode_0 : mode) {
        case C.NavigationMode_0:
          t1 = _this._widget;
          t1.toString;
          return _this._isWidgetEnabled$1(t1) && _this._hasFocus;
        case C.NavigationMode_1:
          return _this._hasFocus;
      }
    },
    _updateFocusHighlights$0: function() {
      var showFocus,
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._highlightMode;
      switch (t1 == null ? O.FocusManager__defaultModeForPlatform() : t1) {
        case C.FocusHighlightMode_0:
          showFocus = false;
          break;
        case C.FocusHighlightMode_1:
          showFocus = this.get$_shouldShowFocus();
          break;
        default:
          showFocus = null;
      }
      this.updateHighlight$2$value(C._HighlightType_2, showFocus);
    },
    _handleFocusUpdate$1: function(hasFocus) {
      this._hasFocus = hasFocus;
      this._updateFocusHighlights$0();
      this._widget.onFocusChange.call$1(hasFocus);
    },
    _handleTapDown$1: function(details) {
      if (this._activeChildren._observer_list$_list.length !== 0)
        return;
      this._startSplash$1$details(details);
      this._widget.toString;
    },
    _startSplash$2$context$details: function(context, details) {
      var t1, t2, globalPosition, splash, _this = this;
      if (context != null) {
        t1 = context.get$renderObject();
        t1.toString;
        type$.RenderBox._as(t1);
        t2 = t1._size;
        t2 = new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy).get$center();
        globalPosition = T.MatrixUtils_transformPoint(t1.getTransformTo$1(0, null), t2);
      } else
        globalPosition = details.globalPosition;
      splash = _this._createInkFeature$1(globalPosition);
      t1 = _this._splashes;
      (t1 == null ? _this._splashes = P.HashSet_HashSet(type$.InteractiveInkFeature) : t1).add$1(0, splash);
      _this._currentSplash = splash;
      _this.updateKeepAlive$0();
      _this.updateHighlight$2$value(C._HighlightType_0, true);
    },
    _startSplash$1$details: function(details) {
      return this._startSplash$2$context$details(null, details);
    },
    _startSplash$1$context: function(context) {
      return this._startSplash$2$context$details(context, null);
    },
    _handleTap$0: function() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null)
        t1.confirm$0(0);
      _this._currentSplash = null;
      _this.updateHighlight$2$value(C._HighlightType_0, false);
      _this._widget.toString;
      t1 = _this._framework$_element;
      t1.toString;
      M.Feedback_forTap(t1);
      _this._widget.onTap.call$0();
    },
    _handleTapCancel$0: function() {
      var _this = this,
        t1 = _this._currentSplash;
      if (t1 != null) {
        t1 = t1._ink_splash$_alphaController;
        if (t1 != null)
          t1.forward$0(0);
      }
      _this._currentSplash = null;
      _this._widget.toString;
      _this.updateHighlight$2$value(C._HighlightType_0, false);
    },
    deactivate$0: function() {
      var t2, t3, t4, t5, _this = this,
        t1 = _this._splashes;
      if (t1 != null) {
        _this._splashes = null;
        for (t1 = new P._HashSetIterator(t1, t1._computeElements$0()), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
          t2._as(t1._collection$_current).dispose$0(0);
        _this._currentSplash = null;
      }
      for (t1 = _this._highlights, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = t1.$index(0, t3);
        if (t4 != null) {
          t5 = t4.__InkHighlight__alphaController;
          if (t5 == null)
            t5 = H.throwExpression(H.LateError$fieldNI("_alphaController"));
          t5._ticker.dispose$0(0);
          t5._ticker = null;
          t5.super$AnimationEagerListenerMixin$dispose(0);
          t4.super$InkFeature$dispose(0);
        }
        t1.$indexSet(0, t3, null);
      }
      t1 = _this._widget.parentState;
      if (t1 != null)
        t1.markChildInkResponsePressed$2(_this, false);
      _this.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$deactivate();
    },
    _isWidgetEnabled$1: function(widget) {
      return true;
    },
    _handleMouseEnter$1: function($event) {
      var t1, _this = this;
      _this._hovering = true;
      t1 = _this._widget;
      t1.toString;
      if (_this._isWidgetEnabled$1(t1))
        _this.updateHighlight$2$value(C._HighlightType_1, _this._hovering);
    },
    _handleMouseExit$1: function($event) {
      this._hovering = false;
      this.updateHighlight$2$value(C._HighlightType_1, false);
    },
    get$_ink_well$_canRequestFocus: function() {
      var mode, _this = this,
        t1 = _this._framework$_element;
      t1.toString;
      t1 = F.MediaQuery_maybeOf(t1);
      mode = t1 == null ? null : t1.navigationMode;
      switch (mode == null ? C.NavigationMode_0 : mode) {
        case C.NavigationMode_0:
          t1 = _this._widget;
          t1.toString;
          return _this._isWidgetEnabled$1(t1) && _this._widget.canRequestFocus;
        case C.NavigationMode_1:
          return true;
      }
    },
    build$1: function(_, context) {
      var t1, t2, t3, t4, effectiveMouseCursor, t5, t6, t7, _this = this, _null = null;
      _this.super$AutomaticKeepAliveClientMixin$build(0, context);
      for (t1 = _this._highlights, t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = t1.$index(0, t3);
        if (t4 != null)
          t4.set$color(0, _this.getHighlightColorForType$1(t3));
      }
      t1 = _this._currentSplash;
      if (t1 != null) {
        t2 = _this._widget;
        t2 = t2.splashColor;
        t1.set$color(0, t2);
      }
      t1 = _this._widget;
      t2 = t1.mouseCursor;
      if (t2 == null)
        t2 = C.C__EnabledAndDisabledMouseCursor;
      t3 = P.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState);
      if (!_this._isWidgetEnabled$1(t1))
        t3.add$1(0, C.MaterialState_5);
      if (_this._hovering) {
        t1 = _this._widget;
        t1.toString;
        t1 = _this._isWidgetEnabled$1(t1);
      } else
        t1 = false;
      if (t1)
        t3.add$1(0, C.MaterialState_0);
      if (_this._hasFocus)
        t3.add$1(0, C.MaterialState_1);
      effectiveMouseCursor = V.MaterialStateProperty_resolveAs(t2, t3, type$.MouseCursor);
      t1 = _this.___InkResponseState__actionMap;
      if (t1 == null) {
        t1 = _this.get$_simulateTap();
        t2 = type$.JSArray_of_void_Function_Action_Intent;
        t3 = type$.ObserverList_of_void_Function_Action_Intent;
        t3 = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_ActivateIntent_OT9, new U.CallbackAction(t1, new R.ObserverList(H.setRuntimeTypeInfo([], t2), t3), type$.CallbackAction_ActivateIntent), C.Type_ButtonActivateIntent_6Ij, new U.CallbackAction(t1, new R.ObserverList(H.setRuntimeTypeInfo([], t2), t3), type$.CallbackAction_ButtonActivateIntent)], type$.Type, type$.Action_Intent);
        if (_this.___InkResponseState__actionMap == null) {
          _this.___InkResponseState__actionMap = t3;
          t1 = t3;
        } else
          t1 = H.throwExpression(H.LateError$fieldADI("_actionMap"));
      }
      t2 = _this._widget.focusNode;
      t3 = _this.get$_ink_well$_canRequestFocus();
      t4 = _this._widget;
      t4.toString;
      t4 = _this._isWidgetEnabled$1(t4) ? _this.get$_handleTapDown() : _null;
      t5 = _this._widget;
      t5.toString;
      t5 = _this._isWidgetEnabled$1(t5) ? _this.get$_handleTap() : _null;
      t6 = _this._widget;
      t6.toString;
      t6 = _this._isWidgetEnabled$1(t6) ? _this.get$_handleTapCancel() : _null;
      t7 = _this._widget;
      return new R._ParentInkResponseProvider(_this, new U.Actions(t1, L.Focus$(false, t3, T.MouseRegion$(T.Semantics$(_null, D.GestureDetector$(C.HitTestBehavior_1, t7.child, true, _null, _null, _null, _null, _null, t5, t6, t4), false, _null, false, _null, _null, _null, _null, _null, _this.get$_simulateTap(), _null, _null, _null, _null), effectiveMouseCursor, _this.get$_handleMouseEnter(), _this.get$_handleMouseExit(), true), _null, true, t2, true, _null, _this.get$_handleFocusUpdate(), _null, _null), _null), _null);
    },
    $is_ParentInkResponseState: 1
  };
  R._InkResponseState_highlightsExist_closure.prototype = {
    call$1: function(highlight) {
      return highlight != null;
    },
    $signature: 178
  };
  R._InkResponseState_updateHighlight_handleInkRemoval.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._highlights.$indexSet(0, this.type, null);
      t1.updateKeepAlive$0();
    },
    $signature: 0
  };
  R._InkResponseState__createInkFeature_onRemoved.prototype = {
    call$0: function() {
      var t3,
        t1 = this.$this,
        t2 = t1._splashes;
      if (t2 != null) {
        t3 = this._box_0;
        t2.remove$1(0, t3.splash);
        if (t1._currentSplash == t3.splash)
          t1._currentSplash = null;
        t1.updateKeepAlive$0();
      }
    },
    $signature: 0
  };
  R._InkResponseState__handleFocusHighlightModeChange_closure.prototype = {
    call$0: function() {
      this.$this._updateFocusHighlights$0();
    },
    $signature: 0
  };
  R.InkWell.prototype = {};
  R.__InkResponseState_State_AutomaticKeepAliveClientMixin.prototype = {
    initState$0: function() {
      this.super$State$initState();
      if (this.get$wantKeepAlive())
        this._ensureKeepAlive$0();
    },
    deactivate$0: function() {
      var t1 = this.AutomaticKeepAliveClientMixin__keepAliveHandle;
      if (t1 != null) {
        t1.notifyListeners$0();
        this.AutomaticKeepAliveClientMixin__keepAliveHandle = null;
      }
      this.super$State$deactivate();
    }
  };
  L.FloatingLabelBehavior.prototype = {
    toString$0: function(_) {
      return "FloatingLabelBehavior.auto";
    }
  };
  L.InputDecorationTheme.prototype = {
    get$hashCode: function(_) {
      return P.hashList([null, null, null, null, null, null, true, C.FloatingLabelBehavior_1, false, null, false, null, null, null, false, null, null, null, null, null, null, null, null, null, false]);
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      if (other instanceof L.InputDecorationTheme)
        t1 = true;
      else
        t1 = false;
      return t1;
    }
  };
  L._InputDecorationTheme_Object_Diagnosticable.prototype = {};
  M.MaterialType.prototype = {
    toString$0: function(_) {
      return this._material$_name;
    }
  };
  M.Material.prototype = {
    createState$0: function() {
      return new M._MaterialState(new N.LabeledGlobalKey("ink renderer", type$.LabeledGlobalKey_State_StatefulWidget), null, C._StateLifecycle_0);
    }
  };
  M._MaterialState.prototype = {
    build$1: function(_, context) {
      var t1, color, contents, t2, t3, t4, shape, _this = this, _null = null;
      K.Theme_of(context);
      t1 = _this._widget;
      color = t1.color;
      contents = t1.child;
      t1 = t1.textStyle;
      if (t1 == null) {
        t1 = K.Theme_of(context).textTheme.bodyText2;
        t1.toString;
      }
      t2 = _this._widget;
      contents = new G.AnimatedDefaultTextStyle(contents, t1, C.C__Linear, t2.animationDuration, _null, _null);
      t1 = t2;
      t2 = t1.type;
      contents = new U.NotificationListener(new M._InkFeatures(color, _this, t2 !== C.MaterialType_4, contents, _this._inkFeatureRenderer), new M._MaterialState_build_closure(_this), _null, type$.NotificationListener_LayoutChangedNotification);
      if (t2 === C.MaterialType_0 && t1.shape == null && true) {
        t2 = t1.elevation;
        t3 = R.ElevationOverlay_applyOverlay(context, color, t2);
        _this._widget.toString;
        t4 = K.Theme_of(context);
        return new G.AnimatedPhysicalModel(contents, C.BoxShape_0, t1.clipBehavior, C.BorderRadius_tLn, t2, t3, false, t4.shadowColor, C.Cubic_ifx, t1.animationDuration, _null, _null);
      }
      shape = _this._getShape$0();
      t1 = _this._widget;
      if (t1.type === C.MaterialType_4)
        return M._MaterialState__transparentInterior(t1.clipBehavior, contents, context, shape);
      t2 = t1.animationDuration;
      t3 = t1.clipBehavior;
      t1 = t1.elevation;
      t4 = K.Theme_of(context);
      return new M._MaterialInterior(contents, shape, true, t3, t1, color, t4.shadowColor, C.Cubic_ifx, t2, _null, _null);
    },
    _getShape$0: function() {
      var t1 = this._widget,
        t2 = t1.shape;
      if (t2 != null)
        return t2;
      t1 = t1.type;
      switch (t1) {
        case C.MaterialType_0:
        case C.MaterialType_4:
          return C.RoundedRectangleBorder_a51;
        case C.MaterialType_1:
        case C.MaterialType_3:
          t1 = $.$get$kMaterialEdges().$index(0, t1);
          t1.toString;
          return new X.RoundedRectangleBorder(t1, C.BorderSide_m7u);
        case C.MaterialType_2:
          return C.CircleBorder_61T;
      }
    }
  };
  M._MaterialState_build_closure.prototype = {
    call$1: function(notification) {
      var t2,
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this.$this._inkFeatureRenderer).get$renderObject();
      t1.toString;
      type$._RenderInkFeatures._as(t1);
      t2 = t1._inkFeatures;
      if (t2 != null && J.get$isNotEmpty$asx(t2))
        t1.markNeedsPaint$0();
      return false;
    },
    $signature: 179
  };
  M._RenderInkFeatures.prototype = {
    addInkFeature$1: function(feature) {
      var t1 = this._inkFeatures;
      J.add$1$ax(t1 == null ? this._inkFeatures = H.setRuntimeTypeInfo([], type$.JSArray_InkFeature) : t1, feature);
      this.markNeedsPaint$0();
    },
    hitTestSelf$1: function(position) {
      return this.absorbHitTest;
    },
    paint$2: function(context, offset) {
      var canvas, _this = this,
        t1 = _this._inkFeatures;
      if (t1 != null && J.get$isNotEmpty$asx(t1)) {
        canvas = context.get$canvas(context);
        canvas.save$0(0);
        canvas.translate$2(0, offset._dx, offset._dy);
        t1 = _this._size;
        canvas.clipRect$1(0, new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy));
        t1 = _this._inkFeatures;
        t1.toString;
        t1 = J.get$iterator$ax(t1);
        for (; t1.moveNext$0();)
          t1.get$current(t1)._material$_paint$1(canvas);
        canvas.restore$0(0);
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
    }
  };
  M._InkFeatures.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new M._RenderInkFeatures(this.vsync, this.absorbHitTest, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.absorbHitTest = this.absorbHitTest;
    }
  };
  M.InkFeature.prototype = {
    dispose$0: function(_) {
      var t1 = this._material$_controller,
        t2 = t1._inkFeatures;
      t2.toString;
      J.remove$1$ax(t2, this);
      t1.markNeedsPaint$0();
      this.onRemoved.call$0();
    },
    _material$_paint$1: function(canvas) {
      var t1, t2, t3, transform, index, index0,
        node = this.referenceBox,
        descendants = H.setRuntimeTypeInfo([node], type$.JSArray_RenderObject);
      for (t1 = this._material$_controller, t2 = type$.RenderObject; node !== t1; node = t3) {
        t3 = node._node$_parent;
        t3.toString;
        t2._as(t3);
        descendants.push(t3);
      }
      transform = new E.Matrix4(new Float64Array(16));
      transform.setIdentity$0();
      for (index = descendants.length - 1; index > 0; index = index0) {
        index0 = index - 1;
        descendants[index].applyPaintTransform$2(descendants[index0], transform);
      }
      this.paintFeature$2(canvas, transform);
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this);
    }
  };
  M.ShapeBorderTween.prototype = {
    lerp$1: function(t) {
      return Y.ShapeBorder_lerp(this.begin, this.end, t);
    }
  };
  M._MaterialInterior.prototype = {
    createState$0: function() {
      return new M._MaterialInteriorState(null, C._StateLifecycle_0);
    }
  };
  M._MaterialInteriorState.prototype = {
    forEachTween$1: function(visitor) {
      var _this = this;
      _this._elevation = type$.nullable_Tween_double._as(visitor.call$3(_this._elevation, _this._widget.elevation, new M._MaterialInteriorState_forEachTween_closure()));
      _this._shadowColor = type$.nullable_ColorTween._as(visitor.call$3(_this._shadowColor, _this._widget.shadowColor, new M._MaterialInteriorState_forEachTween_closure0()));
      _this._border = type$.nullable_ShapeBorderTween._as(visitor.call$3(_this._border, _this._widget.shape, new M._MaterialInteriorState_forEachTween_closure1()));
    },
    build$1: function(_, context) {
      var t2, t3, elevation, t4, t5, t6, t7, _this = this,
        t1 = _this._border;
      t1.toString;
      t2 = _this.get$_animation();
      t2 = t1.transform$1(0, t2.get$value(t2));
      t2.toString;
      t1 = _this._elevation;
      t1.toString;
      t3 = _this.get$_animation();
      elevation = t1.transform$1(0, t3.get$value(t3));
      t3 = _this._widget.child;
      t1 = T.Directionality_maybeOf(context);
      t4 = _this._widget;
      t5 = t4.clipBehavior;
      t4 = R.ElevationOverlay_applyOverlay(context, t4.color, elevation);
      t6 = _this._shadowColor;
      t6.toString;
      t7 = _this.get$_animation();
      t7 = t6.transform$1(0, t7.get$value(t7));
      t7.toString;
      return new T.PhysicalShape(new E.ShapeBorderClipper(t2, t1), t5, elevation, t4, t7, new M._ShapeBorderPaint(t3, t2, true, null), null);
    }
  };
  M._MaterialInteriorState_forEachTween_closure.prototype = {
    call$1: function(value) {
      return new R.Tween(H._asDouble(value), null, type$.Tween_double);
    },
    $signature: 77
  };
  M._MaterialInteriorState_forEachTween_closure0.prototype = {
    call$1: function(value) {
      return new R.ColorTween(type$.Color._as(value), null);
    },
    $signature: 56
  };
  M._MaterialInteriorState_forEachTween_closure1.prototype = {
    call$1: function(value) {
      return new M.ShapeBorderTween(type$.ShapeBorder._as(value), null);
    },
    $signature: 182
  };
  M._ShapeBorderPaint.prototype = {
    build$1: function(_, context) {
      var t1 = T.Directionality_maybeOf(context);
      return T.CustomPaint$(this.child, new M._ShapeBorderPainter(this.shape, t1, null), null);
    }
  };
  M._ShapeBorderPainter.prototype = {
    paint$2: function(canvas, size) {
      this.border.paint$3$textDirection(canvas, new P.Rect(0, 0, 0 + size._dx, 0 + size._dy), this.textDirection);
    },
    shouldRepaint$1: function(oldDelegate) {
      return !oldDelegate.border.$eq(0, this.border);
    }
  };
  M.__MaterialState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function(_) {
      this.super$State$dispose(0);
    },
    didChangeDependencies$0: function() {
      var muted, t2,
        t1 = this._framework$_element;
      t1.toString;
      muted = !U.TickerMode_of(t1);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
          t2._as(t1._collection$_current).set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  U._MaterialLocalizationsDelegate.prototype = {
    isSupported$1: function(locale) {
      return locale.get$languageCode(locale) === "en";
    },
    load$1: function(_, locale) {
      return new O.SynchronousFuture(C.C_DefaultMaterialLocalizations, type$.SynchronousFuture_MaterialLocalizations);
    },
    shouldReload$1: function(old) {
      return false;
    },
    toString$0: function(_) {
      return "DefaultMaterialLocalizations.delegate(en_US)";
    }
  };
  U.DefaultMaterialLocalizations.prototype = {$isMaterialLocalizations: 1};
  V.MaterialState.prototype = {
    toString$0: function(_) {
      return this._material_state$_name;
    }
  };
  V.MaterialStateMouseCursor.prototype = {
    createSession$1: function(device) {
      return new A._SystemMouseCursorSession(this.resolve$1(P.LinkedHashSet_LinkedHashSet$_empty(type$.MaterialState)), device);
    },
    $isMaterialStateProperty: 1
  };
  V._EnabledAndDisabledMouseCursor.prototype = {
    resolve$1: function(states) {
      if (states.contains$1(0, C.MaterialState_5))
        return C.SystemMouseCursor_basic;
      return C.SystemMouseCursor_click;
    },
    get$debugDescription: function() {
      return "MaterialStateMouseCursor(clickable)";
    },
    get$name: function() {
      return "clickable";
    }
  };
  E.NavigationRailThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.elevation, _this.unselectedLabelTextStyle, _this.selectedLabelTextStyle, _this.unselectedIconTheme, _this.selectedIconTheme, _this.groupAlignment, _this.labelType, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof E.NavigationRailThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && other.elevation == _this.elevation && J.$eq$(other.unselectedLabelTextStyle, _this.unselectedLabelTextStyle) && J.$eq$(other.selectedLabelTextStyle, _this.selectedLabelTextStyle) && J.$eq$(other.unselectedIconTheme, _this.unselectedIconTheme) && J.$eq$(other.selectedIconTheme, _this.selectedIconTheme) && other.groupAlignment == _this.groupAlignment && true;
    }
  };
  E._NavigationRailThemeData_Object_Diagnosticable.prototype = {};
  U.OutlinedButtonThemeData.prototype = {
    get$hashCode: function(_) {
      return J.get$hashCode$(this.style);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof U.OutlinedButtonThemeData && J.$eq$(other.style, this.style);
    }
  };
  U._OutlinedButtonThemeData_Object_Diagnosticable.prototype = {};
  V.MaterialPageRoute.prototype = {};
  V.MaterialRouteTransitionMixin.prototype = {};
  V._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin.prototype = {};
  K._FadeUpwardsPageTransition.prototype = {
    build$1: function(_, context) {
      return K.SlideTransition$(K.FadeTransition$(this.child, this._opacityAnimation), this._positionAnimation, null, true);
    }
  };
  K.PageTransitionsBuilder.prototype = {};
  K.FadeUpwardsPageTransitionsBuilder.prototype = {
    buildTransitions$1$5: function(route, context, animation, secondaryAnimation, child) {
      var t4,
        t1 = $.$get$_FadeUpwardsPageTransition__bottomUpTween(),
        t2 = $.$get$_FadeUpwardsPageTransition__fastOutSlowInTween(),
        t3 = H._instanceType(t1)._eval$1("_ChainedEvaluation<Animatable.T>");
      type$.Animation_double._as(animation);
      t4 = $.$get$_FadeUpwardsPageTransition__easeInTween();
      return new K._FadeUpwardsPageTransition(new R._AnimatedEvaluation(animation, new R._ChainedEvaluation(t2, t1, t3), t3._eval$1("_AnimatedEvaluation<Animatable.T>")), new R._AnimatedEvaluation(animation, t4, H._instanceType(t4)._eval$1("_AnimatedEvaluation<Animatable.T>")), child, null);
    }
  };
  K.CupertinoPageTransitionsBuilder.prototype = {
    buildTransitions$1$5: function(route, context, animation, secondaryAnimation, child, $T) {
      return D.CupertinoRouteTransitionMixin_buildPageTransitions(route, context, animation, secondaryAnimation, child, $T);
    }
  };
  K.PageTransitionsTheme.prototype = {
    _all$1: function(builders) {
      var t1 = type$.MappedListIterable_of_TargetPlatform_and_nullable_PageTransitionsBuilder;
      return P.List_List$of(new H.MappedListIterable(C.List_uDp, new K.PageTransitionsTheme__all_closure(builders), t1), true, t1._eval$1("ListIterable.E"));
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      t1 = other instanceof K.PageTransitionsTheme;
      if (t1 && true)
        return true;
      return t1 && S.listEquals(_this._all$1(C.Map_23gMT), _this._all$1(C.Map_23gMT));
    },
    get$hashCode: function(_) {
      return P.hashList(this._all$1(C.Map_23gMT));
    }
  };
  K.PageTransitionsTheme__all_closure.prototype = {
    call$1: function(platform) {
      return this.builders.$index(0, platform);
    },
    $signature: 183
  };
  K._PageTransitionsTheme_Object_Diagnosticable.prototype = {};
  R.PopupMenuThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.color, _this.shape, _this.elevation, _this.textStyle, _this.enableFeedback, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof R.PopupMenuThemeData && other.elevation == _this.elevation && J.$eq$(other.color, _this.color) && J.$eq$(other.shape, _this.shape) && J.$eq$(other.textStyle, _this.textStyle) && true;
    }
  };
  R._PopupMenuThemeData_Object_Diagnosticable.prototype = {};
  T.RadioThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.mouseCursor, _this.fillColor, _this.overlayColor, _this.splashRadius, _this.materialTapTargetSize, _this.visualDensity, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof T.RadioThemeData)
        if (other.fillColor == _this.fillColor)
          if (other.overlayColor == _this.overlayColor)
            if (other.splashRadius == _this.splashRadius)
              t1 = true;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  T._LerpProperties0.prototype = {
    resolve$1: function(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  T._RadioThemeData_Object_Diagnosticable.prototype = {};
  M.ScaffoldMessenger.prototype = {
    createState$0: function() {
      return new M.ScaffoldMessengerState(P.LinkedHashSet_LinkedHashSet(type$.ScaffoldState), P.ListQueue$(null, type$.ScaffoldFeatureController_SnackBar_SnackBarClosedReason), null, C._StateLifecycle_0);
    }
  };
  M.ScaffoldMessengerState.prototype = {
    didChangeDependencies$0: function() {
      var t1, _this = this,
        mediaQuery = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data;
      if (_this._accessibleNavigation === true)
        if (!mediaQuery.accessibleNavigation) {
          t1 = _this._snackBarTimer;
          t1 = t1 != null && t1._handle == null;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1)
        _this.hideCurrentSnackBar$1$reason(C.SnackBarClosedReason_5);
      _this._accessibleNavigation = mediaQuery.accessibleNavigation;
      _this.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$didChangeDependencies();
    },
    hideCurrentSnackBar$1$reason: function(reason) {
      var t2, completer, _this = this, _null = null,
        t1 = _this._snackBars;
      if (t1._head !== t1._tail) {
        _null.get$status(_null);
        t2 = false;
      } else
        t2 = true;
      if (t2)
        return;
      completer = t1.get$first(t1).get$_completer();
      t1 = _this._accessibleNavigation;
      t1.toString;
      if (t1) {
        _null.set$value(0, 0);
        completer.complete$1(0, reason);
      } else
        _null.reverse$0(0).then$1$1(0, new M.ScaffoldMessengerState_hideCurrentSnackBar_closure(_this, completer, reason), type$.void);
      t1 = _this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0(0);
      _this._snackBarTimer = null;
    },
    build$1: function(_, context) {
      var t1, route, _this = this;
      _this._accessibleNavigation = context.dependOnInheritedWidgetOfExactType$1$0(type$.MediaQuery).data.accessibleNavigation;
      t1 = _this._snackBars;
      if (!t1.get$isEmpty(t1)) {
        route = T.ModalRoute_of(context, type$.nullable_Object);
        if (route == null || route.get$isCurrent())
          null.get$isCompleted();
      }
      return new M._ScaffoldMessengerScope(_this, _this._widget.child, null);
    },
    dispose$0: function(_) {
      var t1 = this._snackBarTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._snackBarTimer = null;
      this.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$dispose(0);
    }
  };
  M.ScaffoldMessengerState_hideCurrentSnackBar_closure.prototype = {
    call$1: function(value) {
      var t1 = this.completer;
      if (!t1.get$isCompleted())
        t1.complete$1(0, this.reason);
    },
    $signature: 17
  };
  M._ScaffoldMessengerScope.prototype = {
    updateShouldNotify$1: function(old) {
      return this._scaffoldMessengerState !== old._scaffoldMessengerState;
    }
  };
  M._ScaffoldMessengerState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function(_) {
      this.super$State$dispose(0);
    },
    didChangeDependencies$0: function() {
      var muted, t2,
        t1 = this._framework$_element;
      t1.toString;
      muted = !U.TickerMode_of(t1);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
          t2._as(t1._collection$_current).set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  X.ScrollbarThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.thickness, _this.showTrackOnHover, _this.isAlwaysShown, _this.interactive, _this.radius, _this.thumbColor, _this.trackColor, _this.trackBorderColor, _this.crossAxisMargin, _this.mainAxisMargin, _this.minThumbLength, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof X.ScrollbarThemeData)
        if (other.thickness == _this.thickness)
          t1 = J.$eq$(other.radius, _this.radius) && other.thumbColor == _this.thumbColor && other.trackColor == _this.trackColor && other.trackBorderColor == _this.trackBorderColor && other.crossAxisMargin == _this.crossAxisMargin && other.mainAxisMargin == _this.mainAxisMargin && other.minThumbLength == _this.minThumbLength;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  X._LerpProperties4.prototype = {
    resolve$1: function(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  X._ScrollbarThemeData_Object_Diagnosticable.prototype = {};
  Q.SliderThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashList([_this.trackHeight, _this.activeTrackColor, _this.inactiveTrackColor, _this.disabledActiveTrackColor, _this.disabledInactiveTrackColor, _this.activeTickMarkColor, _this.inactiveTickMarkColor, _this.disabledActiveTickMarkColor, _this.disabledInactiveTickMarkColor, _this.thumbColor, _this.overlappingShapeStrokeColor, _this.disabledThumbColor, _this.overlayColor, _this.valueIndicatorColor, _this.overlayShape, _this.tickMarkShape, _this.thumbShape, _this.trackShape, _this.valueIndicatorShape, _this.rangeTickMarkShape, _this.rangeThumbShape, _this.rangeTrackShape, _this.rangeValueIndicatorShape, _this.showValueIndicator, _this.valueIndicatorTextStyle, _this.minThumbSeparation, _this.thumbSelector]);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof Q.SliderThemeData)
        if (other.trackHeight == _this.trackHeight)
          if (J.$eq$(other.activeTrackColor, _this.activeTrackColor))
            if (J.$eq$(other.inactiveTrackColor, _this.inactiveTrackColor))
              if (J.$eq$(other.disabledActiveTrackColor, _this.disabledActiveTrackColor))
                if (J.$eq$(other.disabledInactiveTrackColor, _this.disabledInactiveTrackColor))
                  if (J.$eq$(other.activeTickMarkColor, _this.activeTickMarkColor))
                    if (J.$eq$(other.inactiveTickMarkColor, _this.inactiveTickMarkColor))
                      if (J.$eq$(other.disabledActiveTickMarkColor, _this.disabledActiveTickMarkColor))
                        if (J.$eq$(other.disabledInactiveTickMarkColor, _this.disabledInactiveTickMarkColor))
                          if (J.$eq$(other.thumbColor, _this.thumbColor))
                            if (J.$eq$(other.overlappingShapeStrokeColor, _this.overlappingShapeStrokeColor))
                              if (J.$eq$(other.disabledThumbColor, _this.disabledThumbColor))
                                if (J.$eq$(other.overlayColor, _this.overlayColor))
                                  if (J.$eq$(other.valueIndicatorColor, _this.valueIndicatorColor))
                                    t1 = J.$eq$(other.valueIndicatorTextStyle, _this.valueIndicatorTextStyle) && other.minThumbSeparation == _this.minThumbSeparation && true;
                                  else
                                    t1 = false;
                                else
                                  t1 = false;
                              else
                                t1 = false;
                            else
                              t1 = false;
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  Q._SliderThemeData_Object_Diagnosticable.prototype = {};
  N.SnackBarClosedReason.prototype = {
    toString$0: function(_) {
      return this._snack_bar$_name;
    }
  };
  K.SnackBarThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.actionTextColor, _this.disabledActionTextColor, _this.contentTextStyle, _this.elevation, _this.shape, _this.behavior, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof K.SnackBarThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.actionTextColor, _this.actionTextColor) && J.$eq$(other.disabledActionTextColor, _this.disabledActionTextColor) && J.$eq$(other.contentTextStyle, _this.contentTextStyle) && other.elevation == _this.elevation && J.$eq$(other.shape, _this.shape) && true;
    }
  };
  K._SnackBarThemeData_Object_Diagnosticable.prototype = {};
  R.SwitchThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.thumbColor, _this.trackColor, _this.materialTapTargetSize, _this.mouseCursor, _this.overlayColor, _this.splashRadius, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof R.SwitchThemeData)
        if (other.thumbColor == _this.thumbColor)
          if (other.trackColor == _this.trackColor)
            t1 = other.overlayColor == _this.overlayColor && other.splashRadius == _this.splashRadius;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  R._LerpProperties.prototype = {
    resolve$1: function(states) {
      var resolvedB, _this = this,
        t1 = _this.a,
        resolvedA = t1 == null ? null : t1.resolve$1(states);
      t1 = _this.b;
      resolvedB = t1 == null ? null : t1.resolve$1(states);
      return _this.lerpFunction.call$3(resolvedA, resolvedB, _this.t);
    },
    $isMaterialStateProperty: 1
  };
  R._SwitchThemeData_Object_Diagnosticable.prototype = {};
  U.TabBarTheme.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.indicator, _this.indicatorSize, _this.labelColor, _this.labelPadding, _this.labelStyle, _this.unselectedLabelColor, _this.unselectedLabelStyle, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof U.TabBarTheme)
        if (J.$eq$(other.indicator, _this.indicator))
          t1 = J.$eq$(other.labelColor, _this.labelColor) && J.$eq$(other.labelPadding, _this.labelPadding) && J.$eq$(other.labelStyle, _this.labelStyle) && J.$eq$(other.unselectedLabelColor, _this.unselectedLabelColor) && J.$eq$(other.unselectedLabelStyle, _this.unselectedLabelStyle);
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  U._TabBarTheme_Object_Diagnosticable.prototype = {};
  T.TextButtonThemeData.prototype = {
    get$hashCode: function(_) {
      return J.get$hashCode$(this.style);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof T.TextButtonThemeData && J.$eq$(other.style, this.style);
    }
  };
  T._TextButtonThemeData_Object_Diagnosticable.prototype = {};
  R.TextSelectionThemeData.prototype = {
    get$hashCode: function(_) {
      return P.hashValues(this.cursorColor, this.selectionColor, this.selectionHandleColor, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof R.TextSelectionThemeData && J.$eq$(other.cursorColor, _this.cursorColor) && J.$eq$(other.selectionColor, _this.selectionColor) && J.$eq$(other.selectionHandleColor, _this.selectionHandleColor);
    }
  };
  R._TextSelectionThemeData_Object_Diagnosticable.prototype = {};
  R.TextTheme.prototype = {
    merge$1: function(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, _this = this, _null = null;
      if (other == null)
        return _this;
      t1 = _this.headline1;
      t2 = t1 == null ? _null : t1.merge$1(other.headline1);
      if (t2 == null)
        t2 = other.headline1;
      t3 = _this.headline2;
      t4 = t3 == null ? _null : t3.merge$1(other.headline2);
      if (t4 == null)
        t4 = other.headline2;
      t5 = _this.headline3;
      t6 = t5 == null ? _null : t5.merge$1(other.headline3);
      if (t6 == null)
        t6 = other.headline3;
      t7 = _this.headline4;
      t8 = t7 == null ? _null : t7.merge$1(other.headline4);
      if (t8 == null)
        t8 = other.headline4;
      t9 = _this.headline5;
      t10 = t9 == null ? _null : t9.merge$1(other.headline5);
      if (t10 == null)
        t10 = other.headline5;
      t11 = _this.headline6;
      t12 = t11 == null ? _null : t11.merge$1(other.headline6);
      if (t12 == null)
        t12 = other.headline6;
      t13 = _this.subtitle1;
      t14 = t13 == null ? _null : t13.merge$1(other.subtitle1);
      if (t14 == null)
        t14 = other.subtitle1;
      t15 = _this.subtitle2;
      t16 = t15 == null ? _null : t15.merge$1(other.subtitle2);
      if (t16 == null)
        t16 = other.subtitle2;
      t17 = _this.bodyText1;
      t18 = t17 == null ? _null : t17.merge$1(other.bodyText1);
      if (t18 == null)
        t18 = other.bodyText1;
      t19 = _this.bodyText2;
      t20 = t19 == null ? _null : t19.merge$1(other.bodyText2);
      if (t20 == null)
        t20 = other.bodyText2;
      t21 = _this.caption;
      t22 = t21 == null ? _null : t21.merge$1(other.caption);
      if (t22 == null)
        t22 = other.caption;
      t23 = _this.button;
      t24 = t23 == null ? _null : t23.merge$1(other.button);
      if (t24 == null)
        t24 = other.button;
      t25 = _this.overline;
      t26 = t25 == null ? _null : t25.merge$1(other.overline);
      if (t26 == null)
        t26 = other.overline;
      if (t2 == null)
        t2 = _null;
      t1 = t2 == null ? t1 : t2;
      t2 = t4 == null ? _null : t4;
      if (t2 == null)
        t2 = t3;
      t3 = t6 == null ? _null : t6;
      if (t3 == null)
        t3 = t5;
      t4 = t8 == null ? _null : t8;
      if (t4 == null)
        t4 = t7;
      t5 = t10 == null ? _null : t10;
      if (t5 == null)
        t5 = t9;
      t6 = t12 == null ? _null : t12;
      if (t6 == null)
        t6 = t11;
      t7 = t14 == null ? _null : t14;
      if (t7 == null)
        t7 = t13;
      t8 = t16 == null ? _null : t16;
      if (t8 == null)
        t8 = t15;
      t9 = t18 == null ? _null : t18;
      if (t9 == null)
        t9 = t17;
      t10 = t20 == null ? _null : t20;
      if (t10 == null)
        t10 = t19;
      t11 = t22 == null ? t21 : t22;
      t12 = t24 == null ? t23 : t24;
      return R.TextTheme$(t9, t10, t12, t11, t1, t2, t3, t4, t5, t6, t26 == null ? t25 : t26, t7, t8);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof R.TextTheme && J.$eq$(_this.headline1, other.headline1) && J.$eq$(_this.headline2, other.headline2) && J.$eq$(_this.headline3, other.headline3) && J.$eq$(_this.headline4, other.headline4) && J.$eq$(_this.headline5, other.headline5) && J.$eq$(_this.headline6, other.headline6) && J.$eq$(_this.subtitle1, other.subtitle1) && J.$eq$(_this.subtitle2, other.subtitle2) && J.$eq$(_this.bodyText1, other.bodyText1) && J.$eq$(_this.bodyText2, other.bodyText2) && J.$eq$(_this.caption, other.caption) && J.$eq$(_this.button, other.button) && J.$eq$(_this.overline, other.overline);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.headline1, _this.headline2, _this.headline3, _this.headline4, _this.headline5, _this.headline6, _this.subtitle1, _this.subtitle2, _this.bodyText1, _this.bodyText2, _this.caption, _this.button, _this.overline, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  R._TextTheme_Object_Diagnosticable.prototype = {};
  K.Theme.prototype = {
    build$1: function(_, context) {
      var t1 = this.data,
        t2 = C.CupertinoThemeData_Npb.brightness,
        t3 = C.CupertinoThemeData_Npb.primaryColor,
        t4 = C.CupertinoThemeData_Npb.primaryContrastingColor,
        t5 = C.CupertinoThemeData_Npb.textTheme,
        t6 = C.CupertinoThemeData_Npb.barBackgroundColor,
        t7 = C.CupertinoThemeData_Npb.scaffoldBackgroundColor;
      return new K._InheritedTheme(this, new K.CupertinoTheme(new X.MaterialBasedCupertinoThemeData(t1, new K.NoDefaultCupertinoThemeData(t2, t3, t4, t5, t6, t7), C.C__CupertinoThemeDefaults, t2, t3, t4, t5, t6, t7), Y.IconTheme$(this.child, t1.iconTheme, null), null), null);
    }
  };
  K._InheritedTheme.prototype = {
    updateShouldNotify$1: function(old) {
      return !this.theme.data.$eq(0, old.theme.data);
    }
  };
  K.ThemeDataTween.prototype = {
    lerp$1: function(t) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t106, t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t117, t118, t119, t120, t121, t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t134, t135, t136, t137, t138, t139, t140, t141, t142, t143, t144, t145, t146, t147, t148, t149, t150, t151, t152, t153, t154, t155, t156, t157, t158, t159, t160, t161, t162, t163, t164, t165, t166, t167, t168, t169, t170, t171, t172, t173, t174, t175, t176, t177, t178, lerpedBorderSide, t179, t180, t181, t182, t183, t184, t185, t186, t187, t188, t189, t190, t191, t192, t193, t194, t195, t196, t197, t198, t199, t200, t201, t202, t203, t204, t205, t206, t207, t208, t209, t210, t211, t212, t213, t214, t215, t216, t217, t218, t219, t220, t221, t222, t223, t224, t225,
        t1 = this.begin;
      t1.toString;
      t2 = this.end;
      t2.toString;
      t3 = t1.visualDensity.horizontal;
      t4 = t2.visualDensity.horizontal;
      t5 = P.lerpDouble(t3, t4, t);
      t5.toString;
      t4 = P.lerpDouble(t3, t4, t);
      t4.toString;
      t3 = P.Color_lerp(t1.primaryColor, t2.primaryColor, t);
      t3.toString;
      t6 = t < 0.5;
      t7 = t6 ? t1.primaryColorBrightness : t2.primaryColorBrightness;
      t8 = P.Color_lerp(t1.primaryColorLight, t2.primaryColorLight, t);
      t8.toString;
      t9 = P.Color_lerp(t1.primaryColorDark, t2.primaryColorDark, t);
      t9.toString;
      t10 = P.Color_lerp(t1.canvasColor, t2.canvasColor, t);
      t10.toString;
      t11 = P.Color_lerp(t1.shadowColor, t2.shadowColor, t);
      t11.toString;
      t12 = P.Color_lerp(t1.accentColor, t2.accentColor, t);
      t12.toString;
      t13 = t6 ? t1.accentColorBrightness : t2.accentColorBrightness;
      t14 = P.Color_lerp(t1.scaffoldBackgroundColor, t2.scaffoldBackgroundColor, t);
      t14.toString;
      t15 = P.Color_lerp(t1.bottomAppBarColor, t2.bottomAppBarColor, t);
      t15.toString;
      t16 = P.Color_lerp(t1.cardColor, t2.cardColor, t);
      t16.toString;
      t17 = P.Color_lerp(t1.dividerColor, t2.dividerColor, t);
      t17.toString;
      t18 = P.Color_lerp(t1.focusColor, t2.focusColor, t);
      t18.toString;
      t19 = P.Color_lerp(t1.hoverColor, t2.hoverColor, t);
      t19.toString;
      t20 = P.Color_lerp(t1.highlightColor, t2.highlightColor, t);
      t20.toString;
      t21 = P.Color_lerp(t1.splashColor, t2.splashColor, t);
      t21.toString;
      t22 = t6 ? t1.splashFactory : t2.splashFactory;
      t23 = P.Color_lerp(t1.selectedRowColor, t2.selectedRowColor, t);
      t23.toString;
      t24 = P.Color_lerp(t1.unselectedWidgetColor, t2.unselectedWidgetColor, t);
      t24.toString;
      t25 = P.Color_lerp(t1.disabledColor, t2.disabledColor, t);
      t25.toString;
      t26 = t6 ? t1.buttonTheme : t2.buttonTheme;
      t27 = S.ToggleButtonsThemeData_lerp(t1.toggleButtonsTheme, t2.toggleButtonsTheme, t);
      t27.toString;
      t28 = P.Color_lerp(t1.buttonColor, t2.buttonColor, t);
      t28.toString;
      t29 = P.Color_lerp(t1.secondaryHeaderColor, t2.secondaryHeaderColor, t);
      t29.toString;
      t30 = P.Color_lerp(t1.textSelectionColor, t2.textSelectionColor, t);
      t30.toString;
      t31 = P.Color_lerp(t1.cursorColor, t2.cursorColor, t);
      t31.toString;
      t32 = P.Color_lerp(t1.textSelectionHandleColor, t2.textSelectionHandleColor, t);
      t32.toString;
      t33 = P.Color_lerp(t1.backgroundColor, t2.backgroundColor, t);
      t33.toString;
      t34 = P.Color_lerp(t1.dialogBackgroundColor, t2.dialogBackgroundColor, t);
      t34.toString;
      t35 = P.Color_lerp(t1.indicatorColor, t2.indicatorColor, t);
      t35.toString;
      t36 = P.Color_lerp(t1.hintColor, t2.hintColor, t);
      t36.toString;
      t37 = P.Color_lerp(t1.errorColor, t2.errorColor, t);
      t37.toString;
      t38 = P.Color_lerp(t1.toggleableActiveColor, t2.toggleableActiveColor, t);
      t38.toString;
      t39 = R.TextTheme_lerp(t1.textTheme, t2.textTheme, t);
      t40 = R.TextTheme_lerp(t1.primaryTextTheme, t2.primaryTextTheme, t);
      t41 = R.TextTheme_lerp(t1.accentTextTheme, t2.accentTextTheme, t);
      t42 = t6 ? t1.inputDecorationTheme : t2.inputDecorationTheme;
      t43 = T.IconThemeData_lerp(t1.iconTheme, t2.iconTheme, t);
      t44 = T.IconThemeData_lerp(t1.primaryIconTheme, t2.primaryIconTheme, t);
      t45 = T.IconThemeData_lerp(t1.accentIconTheme, t2.accentIconTheme, t);
      t46 = t1.sliderTheme;
      t47 = t2.sliderTheme;
      t48 = P.lerpDouble(t46.trackHeight, t47.trackHeight, t);
      t49 = P.Color_lerp(t46.activeTrackColor, t47.activeTrackColor, t);
      t50 = P.Color_lerp(t46.inactiveTrackColor, t47.inactiveTrackColor, t);
      t51 = P.Color_lerp(t46.disabledActiveTrackColor, t47.disabledActiveTrackColor, t);
      t52 = P.Color_lerp(t46.disabledInactiveTrackColor, t47.disabledInactiveTrackColor, t);
      t53 = P.Color_lerp(t46.activeTickMarkColor, t47.activeTickMarkColor, t);
      t54 = P.Color_lerp(t46.inactiveTickMarkColor, t47.inactiveTickMarkColor, t);
      t55 = P.Color_lerp(t46.disabledActiveTickMarkColor, t47.disabledActiveTickMarkColor, t);
      t56 = P.Color_lerp(t46.disabledInactiveTickMarkColor, t47.disabledInactiveTickMarkColor, t);
      t57 = P.Color_lerp(t46.thumbColor, t47.thumbColor, t);
      t58 = P.Color_lerp(t46.overlappingShapeStrokeColor, t47.overlappingShapeStrokeColor, t);
      t59 = P.Color_lerp(t46.disabledThumbColor, t47.disabledThumbColor, t);
      t60 = P.Color_lerp(t46.overlayColor, t47.overlayColor, t);
      t61 = P.Color_lerp(t46.valueIndicatorColor, t47.valueIndicatorColor, t);
      t62 = t6 ? t46.overlayShape : t47.overlayShape;
      t63 = t6 ? t46.tickMarkShape : t47.tickMarkShape;
      t64 = t6 ? t46.thumbShape : t47.thumbShape;
      t65 = t6 ? t46.trackShape : t47.trackShape;
      t66 = t6 ? t46.valueIndicatorShape : t47.valueIndicatorShape;
      t67 = t6 ? t46.rangeTickMarkShape : t47.rangeTickMarkShape;
      t68 = t6 ? t46.rangeThumbShape : t47.rangeThumbShape;
      t69 = t6 ? t46.rangeTrackShape : t47.rangeTrackShape;
      t70 = t6 ? t46.rangeValueIndicatorShape : t47.rangeValueIndicatorShape;
      t71 = t6 ? t46.showValueIndicator : t47.showValueIndicator;
      t72 = A.TextStyle_lerp(t46.valueIndicatorTextStyle, t47.valueIndicatorTextStyle, t);
      t73 = P.lerpDouble(t46.minThumbSeparation, t47.minThumbSeparation, t);
      t46 = t6 ? t46.thumbSelector : t47.thumbSelector;
      t47 = t1.tabBarTheme;
      t74 = t2.tabBarTheme;
      t75 = Z.Decoration_lerp(t47.indicator, t74.indicator, t);
      t76 = t6 ? t47.indicatorSize : t74.indicatorSize;
      t77 = P.Color_lerp(t47.labelColor, t74.labelColor, t);
      t78 = V.EdgeInsetsGeometry_lerp(t47.labelPadding, t74.labelPadding, t);
      t79 = A.TextStyle_lerp(t47.labelStyle, t74.labelStyle, t);
      t80 = P.Color_lerp(t47.unselectedLabelColor, t74.unselectedLabelColor, t);
      t74 = A.TextStyle_lerp(t47.unselectedLabelStyle, t74.unselectedLabelStyle, t);
      t47 = T.TooltipThemeData_lerp(t1.tooltipTheme, t2.tooltipTheme, t);
      t47.toString;
      t81 = t1.cardTheme;
      t82 = t2.cardTheme;
      if (t6)
        t83 = t81.clipBehavior;
      else
        t83 = t82.clipBehavior;
      t84 = P.Color_lerp(t81.color, t82.color, t);
      t85 = P.Color_lerp(t81.shadowColor, t82.shadowColor, t);
      t86 = P.lerpDouble(t81.elevation, t82.elevation, t);
      t87 = V.EdgeInsetsGeometry_lerp(t81.margin, t82.margin, t);
      t81 = Y.ShapeBorder_lerp(t81.shape, t82.shape, t);
      t82 = K.ChipThemeData_lerp(t1.chipTheme, t2.chipTheme, t);
      t82.toString;
      t88 = t6 ? t1.platform : t2.platform;
      t89 = t6 ? t1.materialTapTargetSize : t2.materialTapTargetSize;
      t90 = t6 ? t1.pageTransitionsTheme : t2.pageTransitionsTheme;
      t91 = t1.appBarTheme;
      t92 = t2.appBarTheme;
      if (t6)
        t93 = t91.brightness;
      else
        t93 = t92.brightness;
      t94 = P.Color_lerp(t91.backgroundColor, t92.backgroundColor, t);
      t95 = P.Color_lerp(t91.foregroundColor, t92.foregroundColor, t);
      t96 = P.lerpDouble(t91.elevation, t92.elevation, t);
      t97 = P.Color_lerp(t91.shadowColor, t92.shadowColor, t);
      t98 = T.IconThemeData_lerp(t91.iconTheme, t92.iconTheme, t);
      t99 = T.IconThemeData_lerp(t91.actionsIconTheme, t92.actionsIconTheme, t);
      t100 = R.TextTheme_lerp(t91.textTheme, t92.textTheme, t);
      if (t6)
        t101 = t91.centerTitle;
      else
        t101 = t92.centerTitle;
      t102 = P.lerpDouble(t91.titleSpacing, t92.titleSpacing, t);
      t103 = A.TextStyle_lerp(t91.toolbarTextStyle, t92.toolbarTextStyle, t);
      t104 = A.TextStyle_lerp(t91.titleTextStyle, t92.titleTextStyle, t);
      if (t6)
        t105 = t91.systemOverlayStyle;
      else
        t105 = t92.systemOverlayStyle;
      if (t6)
        t91 = t91.backwardsCompatibility;
      else
        t91 = t92.backwardsCompatibility;
      t92 = t94 == null ? null : t94;
      t94 = t1.scrollbarTheme;
      t106 = t2.scrollbarTheme;
      t107 = X.ScrollbarThemeData__lerpProperties(t94.thickness, t106.thickness, t, P.ui__lerpDouble$closure(), type$.nullable_double);
      if (t6)
        t108 = t94.showTrackOnHover;
      else
        t108 = t106.showTrackOnHover;
      if (t6)
        t109 = t94.isAlwaysShown;
      else
        t109 = t106.isAlwaysShown;
      if (t6)
        t110 = t94.interactive;
      else
        t110 = t106.interactive;
      t111 = P.Radius_lerp(t94.radius, t106.radius, t);
      t112 = type$.nullable_Color;
      t113 = X.ScrollbarThemeData__lerpProperties(t94.thumbColor, t106.thumbColor, t, P.ui_Color_lerp$closure(), t112);
      t114 = X.ScrollbarThemeData__lerpProperties(t94.trackColor, t106.trackColor, t, P.ui_Color_lerp$closure(), t112);
      t115 = X.ScrollbarThemeData__lerpProperties(t94.trackBorderColor, t106.trackBorderColor, t, P.ui_Color_lerp$closure(), t112);
      t116 = P.lerpDouble(t94.crossAxisMargin, t106.crossAxisMargin, t);
      t117 = P.lerpDouble(t94.mainAxisMargin, t106.mainAxisMargin, t);
      t94 = P.lerpDouble(t94.minThumbLength, t106.minThumbLength, t);
      t106 = t1.bottomAppBarTheme;
      t118 = t2.bottomAppBarTheme;
      t119 = P.Color_lerp(t106.color, t118.color, t);
      t120 = P.lerpDouble(t106.elevation, t118.elevation, t);
      if (t6)
        t106 = t106.shape;
      else
        t106 = t118.shape;
      t118 = t1.colorScheme;
      t121 = t2.colorScheme;
      t122 = P.Color_lerp(t118.primary, t121.primary, t);
      t122.toString;
      t123 = P.Color_lerp(t118.primaryVariant, t121.primaryVariant, t);
      t123.toString;
      t124 = P.Color_lerp(t118.secondary, t121.secondary, t);
      t124.toString;
      t125 = P.Color_lerp(t118.secondaryVariant, t121.secondaryVariant, t);
      t125.toString;
      t126 = P.Color_lerp(t118.surface, t121.surface, t);
      t126.toString;
      t127 = P.Color_lerp(t118.background, t121.background, t);
      t127.toString;
      t128 = P.Color_lerp(t118.error, t121.error, t);
      t128.toString;
      t129 = P.Color_lerp(t118.onPrimary, t121.onPrimary, t);
      t129.toString;
      t130 = P.Color_lerp(t118.onSecondary, t121.onSecondary, t);
      t130.toString;
      t131 = P.Color_lerp(t118.onSurface, t121.onSurface, t);
      t131.toString;
      t132 = P.Color_lerp(t118.onBackground, t121.onBackground, t);
      t132.toString;
      t133 = P.Color_lerp(t118.onError, t121.onError, t);
      t133.toString;
      t118 = t6 ? t118.brightness : t121.brightness;
      t121 = t1.dialogTheme;
      t134 = t2.dialogTheme;
      t135 = P.Color_lerp(t121.backgroundColor, t134.backgroundColor, t);
      t136 = P.lerpDouble(t121.elevation, t134.elevation, t);
      t137 = Y.ShapeBorder_lerp(t121.shape, t134.shape, t);
      t138 = A.TextStyle_lerp(t121.titleTextStyle, t134.titleTextStyle, t);
      t121 = A.TextStyle_lerp(t121.contentTextStyle, t134.contentTextStyle, t);
      t134 = S.FloatingActionButtonThemeData_lerp(t1.floatingActionButtonTheme, t2.floatingActionButtonTheme, t);
      t134.toString;
      t139 = E.NavigationRailThemeData_lerp(t1.navigationRailTheme, t2.navigationRailTheme, t);
      t139.toString;
      t140 = t1.typography;
      t141 = t2.typography;
      t142 = R.TextTheme_lerp(t140.black, t141.black, t);
      t143 = R.TextTheme_lerp(t140.white, t141.white, t);
      t144 = R.TextTheme_lerp(t140.englishLike, t141.englishLike, t);
      t145 = R.TextTheme_lerp(t140.dense, t141.dense, t);
      t141 = R.TextTheme_lerp(t140.tall, t141.tall, t);
      t140 = t6 ? t1.cupertinoOverrideTheme : t2.cupertinoOverrideTheme;
      t146 = t1.snackBarTheme;
      t147 = t2.snackBarTheme;
      t148 = P.Color_lerp(t146.backgroundColor, t147.backgroundColor, t);
      t149 = P.Color_lerp(t146.actionTextColor, t147.actionTextColor, t);
      t150 = P.Color_lerp(t146.disabledActionTextColor, t147.disabledActionTextColor, t);
      t151 = A.TextStyle_lerp(t146.contentTextStyle, t147.contentTextStyle, t);
      t152 = P.lerpDouble(t146.elevation, t147.elevation, t);
      t153 = Y.ShapeBorder_lerp(t146.shape, t147.shape, t);
      if (t6)
        t146 = t146.behavior;
      else
        t146 = t147.behavior;
      t147 = X.BottomSheetThemeData_lerp(t1.bottomSheetTheme, t2.bottomSheetTheme, t);
      t147.toString;
      t154 = R.PopupMenuThemeData_lerp(t1.popupMenuTheme, t2.popupMenuTheme, t);
      t154.toString;
      t155 = t1.bannerTheme;
      t156 = t2.bannerTheme;
      t157 = P.Color_lerp(t155.backgroundColor, t156.backgroundColor, t);
      t158 = A.TextStyle_lerp(t155.contentTextStyle, t156.contentTextStyle, t);
      t159 = V.EdgeInsetsGeometry_lerp(t155.padding, t156.padding, t);
      t155 = V.EdgeInsetsGeometry_lerp(t155.leadingPadding, t156.leadingPadding, t);
      t156 = t1.dividerTheme;
      t160 = t2.dividerTheme;
      t161 = P.Color_lerp(t156.color, t160.color, t);
      t162 = P.lerpDouble(t156.space, t160.space, t);
      t163 = P.lerpDouble(t156.thickness, t160.thickness, t);
      t164 = P.lerpDouble(t156.indent, t160.indent, t);
      t156 = P.lerpDouble(t156.endIndent, t160.endIndent, t);
      t160 = M.ButtonBarThemeData_lerp(t1.buttonBarTheme, t2.buttonBarTheme, t);
      t160.toString;
      t165 = t1.bottomNavigationBarTheme;
      t166 = t2.bottomNavigationBarTheme;
      t167 = P.Color_lerp(t165.backgroundColor, t166.backgroundColor, t);
      t168 = P.lerpDouble(t165.elevation, t166.elevation, t);
      t169 = T.IconThemeData_lerp(t165.selectedIconTheme, t166.selectedIconTheme, t);
      t170 = T.IconThemeData_lerp(t165.unselectedIconTheme, t166.unselectedIconTheme, t);
      t171 = P.Color_lerp(t165.selectedItemColor, t166.selectedItemColor, t);
      t172 = P.Color_lerp(t165.unselectedItemColor, t166.unselectedItemColor, t);
      t173 = A.TextStyle_lerp(t165.selectedLabelStyle, t166.selectedLabelStyle, t);
      t174 = A.TextStyle_lerp(t165.unselectedLabelStyle, t166.unselectedLabelStyle, t);
      if (t6)
        t175 = t165.showSelectedLabels;
      else
        t175 = t166.showSelectedLabels;
      if (t6)
        t176 = t165.showUnselectedLabels;
      else
        t176 = t166.showUnselectedLabels;
      if (t6)
        t177 = t165.type;
      else
        t177 = t166.type;
      if (t6)
        t165 = t165.enableFeedback;
      else
        t165 = t166.enableFeedback;
      t166 = t1.timePickerTheme;
      t178 = t2.timePickerTheme;
      lerpedBorderSide = t166.dayPeriodBorderSide;
      t179 = lerpedBorderSide == null;
      if (t179)
        t180 = t178.dayPeriodBorderSide == null;
      else
        t180 = false;
      if (t180)
        lerpedBorderSide = null;
      else if (t179)
        lerpedBorderSide = t178.dayPeriodBorderSide;
      else {
        t179 = t178.dayPeriodBorderSide;
        if (!(t179 == null))
          lerpedBorderSide = Y.BorderSide_lerp(lerpedBorderSide, t179, t);
      }
      t179 = P.Color_lerp(t166.backgroundColor, t178.backgroundColor, t);
      t180 = P.Color_lerp(t166.hourMinuteTextColor, t178.hourMinuteTextColor, t);
      t181 = P.Color_lerp(t166.hourMinuteColor, t178.hourMinuteColor, t);
      t182 = P.Color_lerp(t166.dayPeriodTextColor, t178.dayPeriodTextColor, t);
      t183 = P.Color_lerp(t166.dayPeriodColor, t178.dayPeriodColor, t);
      t184 = P.Color_lerp(t166.dialHandColor, t178.dialHandColor, t);
      t185 = P.Color_lerp(t166.dialBackgroundColor, t178.dialBackgroundColor, t);
      t186 = P.Color_lerp(t166.dialTextColor, t178.dialTextColor, t);
      t187 = P.Color_lerp(t166.entryModeIconColor, t178.entryModeIconColor, t);
      t188 = A.TextStyle_lerp(t166.hourMinuteTextStyle, t178.hourMinuteTextStyle, t);
      t189 = A.TextStyle_lerp(t166.dayPeriodTextStyle, t178.dayPeriodTextStyle, t);
      t190 = A.TextStyle_lerp(t166.helpTextStyle, t178.helpTextStyle, t);
      t191 = Y.ShapeBorder_lerp(t166.shape, t178.shape, t);
      t192 = Y.ShapeBorder_lerp(t166.hourMinuteShape, t178.hourMinuteShape, t);
      t193 = type$.nullable_OutlinedBorder;
      t194 = t193._as(Y.ShapeBorder_lerp(t166.dayPeriodShape, t178.dayPeriodShape, t));
      if (t6)
        t166 = t166.inputDecorationTheme;
      else
        t166 = t178.inputDecorationTheme;
      t178 = T.TextButtonThemeData_lerp(t1.textButtonTheme, t2.textButtonTheme, t);
      t178.toString;
      t195 = T.ElevatedButtonThemeData_lerp(t1.elevatedButtonTheme, t2.elevatedButtonTheme, t);
      t195.toString;
      t196 = U.OutlinedButtonThemeData_lerp(t1.outlinedButtonTheme, t2.outlinedButtonTheme, t);
      t196.toString;
      t197 = R.TextSelectionThemeData_lerp(t1.textSelectionTheme, t2.textSelectionTheme, t);
      t197.toString;
      t198 = t1.dataTableTheme;
      t199 = t2.dataTableTheme;
      t200 = Z.Decoration_lerp(t198.decoration, t199.decoration, t);
      t201 = Z.DataTableThemeData__lerpProperties(t198.dataRowColor, t199.dataRowColor, t, P.ui_Color_lerp$closure(), t112);
      t202 = P.lerpDouble(t198.dataRowHeight, t199.dataRowHeight, t);
      t203 = A.TextStyle_lerp(t198.dataTextStyle, t199.dataTextStyle, t);
      t204 = Z.DataTableThemeData__lerpProperties(t198.headingRowColor, t199.headingRowColor, t, P.ui_Color_lerp$closure(), t112);
      t205 = P.lerpDouble(t198.headingRowHeight, t199.headingRowHeight, t);
      t206 = A.TextStyle_lerp(t198.headingTextStyle, t199.headingTextStyle, t);
      t207 = P.lerpDouble(t198.horizontalMargin, t199.horizontalMargin, t);
      t208 = P.lerpDouble(t198.columnSpacing, t199.columnSpacing, t);
      t209 = P.lerpDouble(t198.dividerThickness, t199.dividerThickness, t);
      t199 = P.lerpDouble(t198.checkboxHorizontalMargin, t199.checkboxHorizontalMargin, t);
      t198 = t1.checkboxTheme;
      t210 = t2.checkboxTheme;
      if (t6)
        t211 = t198.mouseCursor;
      else
        t211 = t210.mouseCursor;
      t212 = F.CheckboxThemeData__lerpProperties(t198.fillColor, t210.fillColor, t, P.ui_Color_lerp$closure(), t112);
      t213 = F.CheckboxThemeData__lerpProperties(t198.checkColor, t210.checkColor, t, P.ui_Color_lerp$closure(), t112);
      t214 = F.CheckboxThemeData__lerpProperties(t198.overlayColor, t210.overlayColor, t, P.ui_Color_lerp$closure(), t112);
      t215 = P.lerpDouble(t198.splashRadius, t210.splashRadius, t);
      if (t6)
        t216 = t198.materialTapTargetSize;
      else
        t216 = t210.materialTapTargetSize;
      if (t6)
        t217 = t198.visualDensity;
      else
        t217 = t210.visualDensity;
      t193 = t193._as(Y.ShapeBorder_lerp(t198.shape, t210.shape, t));
      t198 = F.CheckboxThemeData__lerpSides(t198.side, t210.side, t);
      t210 = t1.radioTheme;
      t218 = t2.radioTheme;
      if (t6)
        t219 = t210.mouseCursor;
      else
        t219 = t218.mouseCursor;
      t220 = T.RadioThemeData__lerpProperties(t210.fillColor, t218.fillColor, t, P.ui_Color_lerp$closure(), t112);
      if (t6)
        t221 = t210.materialTapTargetSize;
      else
        t221 = t218.materialTapTargetSize;
      t222 = T.RadioThemeData__lerpProperties(t210.overlayColor, t218.overlayColor, t, P.ui_Color_lerp$closure(), t112);
      t223 = P.lerpDouble(t210.splashRadius, t218.splashRadius, t);
      if (t6)
        t210 = t210.visualDensity;
      else
        t210 = t218.visualDensity;
      t1 = t1.switchTheme;
      t2 = t2.switchTheme;
      t218 = R.SwitchThemeData__lerpProperties(t1.thumbColor, t2.thumbColor, t, P.ui_Color_lerp$closure(), t112);
      t224 = R.SwitchThemeData__lerpProperties(t1.trackColor, t2.trackColor, t, P.ui_Color_lerp$closure(), t112);
      if (t6)
        t225 = t1.materialTapTargetSize;
      else
        t225 = t2.materialTapTargetSize;
      if (t6)
        t6 = t1.mouseCursor;
      else
        t6 = t2.mouseCursor;
      t112 = R.SwitchThemeData__lerpProperties(t1.overlayColor, t2.overlayColor, t, P.ui_Color_lerp$closure(), t112);
      t1 = P.lerpDouble(t1.splashRadius, t2.splashRadius, t);
      return X.ThemeData$raw(t12, t13, t45, t41, new V.AppBarTheme(t93, t92, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t91), false, t33, new Q.MaterialBannerThemeData(t157, t158, t159, t155), t15, new D.BottomAppBarTheme(t119, t120, t106), new M.BottomNavigationBarThemeData(t167, t168, t169, t170, t171, t172, t173, t174, t175, t176, t177, t165), t147, t160, t28, t26, t10, t16, new A.CardTheme(t83, t84, t85, t86, t87, t81), new F.CheckboxThemeData(t211, t212, t213, t214, t215, t216, t217, t193, t198), t82, new A.ColorScheme(t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t118), t140, t31, new Z.DataTableThemeData(t200, t201, t202, t203, t204, t205, t206, t207, t208, t209, t199), t34, new Y.DialogTheme(t135, t136, t137, t138, t121), t25, t17, new G.DividerThemeData(t161, t162, t163, t164, t156), t195, t37, false, t134, t18, t20, t36, t19, t43, t35, t42, t89, t139, t196, t90, t88, t154, t3, t7, t9, t8, t44, t40, new T.RadioThemeData(t219, t220, t222, t223, t221, t210), t14, new X.ScrollbarThemeData(t107, t108, t109, t110, t111, t113, t114, t115, t116, t117, t94), t29, t23, t11, new Q.SliderThemeData(t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t46), new K.SnackBarThemeData(t148, t149, t150, t151, t152, t153, t146), t21, t22, new R.SwitchThemeData(t218, t224, t225, t6, t112, t1), new U.TabBarTheme(t75, t76, t77, t78, t79, t80, t74), t178, t30, t32, t197, t39, new A.TimePickerThemeData(t179, t180, t181, t182, t183, t184, t185, t186, t187, t188, t189, t190, t191, t192, t194, lerpedBorderSide, t166), t27, t38, t47, new U.Typography(t142, t143, t144, t145, t141), t24, true, new X.VisualDensity(t5, t4));
    }
  };
  K.AnimatedTheme.prototype = {
    createState$0: function() {
      return new K._AnimatedThemeState(null, C._StateLifecycle_0);
    }
  };
  K._AnimatedThemeState.prototype = {
    forEachTween$1: function(visitor) {
      var t1 = visitor.call$3(this._theme$_data, this._widget.data, new K._AnimatedThemeState_forEachTween_closure());
      t1.toString;
      this._theme$_data = type$.ThemeDataTween._as(t1);
    },
    build$1: function(_, context) {
      var t3,
        t1 = this._widget.child,
        t2 = this._theme$_data;
      t2.toString;
      t3 = this.get$_animation();
      return new K.Theme(t2.transform$1(0, t3.get$value(t3)), t1, null);
    }
  };
  K._AnimatedThemeState_forEachTween_closure.prototype = {
    call$1: function(value) {
      return new K.ThemeDataTween(type$.ThemeData._as(value), null);
    },
    $signature: 184
  };
  X.MaterialTapTargetSize.prototype = {
    toString$0: function(_) {
      return this._theme_data$_name;
    }
  };
  X.ThemeData.prototype = {
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof X.ThemeData)
        if (other.visualDensity.$eq(0, _this.visualDensity))
          if (other.primaryColor.$eq(0, _this.primaryColor))
            if (other.primaryColorBrightness === _this.primaryColorBrightness)
              if (other.primaryColorLight.$eq(0, _this.primaryColorLight))
                if (other.primaryColorDark.$eq(0, _this.primaryColorDark))
                  if (other.accentColor.$eq(0, _this.accentColor))
                    if (other.accentColorBrightness === _this.accentColorBrightness)
                      if (other.canvasColor.$eq(0, _this.canvasColor))
                        if (other.scaffoldBackgroundColor.$eq(0, _this.scaffoldBackgroundColor))
                          if (other.bottomAppBarColor.$eq(0, _this.bottomAppBarColor))
                            if (other.cardColor.$eq(0, _this.cardColor))
                              if (other.shadowColor.$eq(0, _this.shadowColor))
                                if (other.dividerColor.$eq(0, _this.dividerColor))
                                  if (other.highlightColor.$eq(0, _this.highlightColor))
                                    if (other.splashColor.$eq(0, _this.splashColor))
                                      if (other.splashFactory === _this.splashFactory)
                                        if (other.selectedRowColor.$eq(0, _this.selectedRowColor))
                                          if (other.unselectedWidgetColor.$eq(0, _this.unselectedWidgetColor))
                                            if (other.disabledColor.$eq(0, _this.disabledColor))
                                              if (other.buttonTheme.$eq(0, _this.buttonTheme))
                                                if (other.buttonColor.$eq(0, _this.buttonColor))
                                                  if (other.toggleButtonsTheme.$eq(0, _this.toggleButtonsTheme))
                                                    if (other.secondaryHeaderColor.$eq(0, _this.secondaryHeaderColor))
                                                      if (other.textSelectionColor.$eq(0, _this.textSelectionColor))
                                                        if (other.cursorColor.$eq(0, _this.cursorColor))
                                                          if (other.textSelectionHandleColor.$eq(0, _this.textSelectionHandleColor))
                                                            if (other.backgroundColor.$eq(0, _this.backgroundColor))
                                                              if (other.dialogBackgroundColor.$eq(0, _this.dialogBackgroundColor))
                                                                if (other.indicatorColor.$eq(0, _this.indicatorColor))
                                                                  if (other.hintColor.$eq(0, _this.hintColor))
                                                                    if (other.errorColor.$eq(0, _this.errorColor))
                                                                      if (other.toggleableActiveColor.$eq(0, _this.toggleableActiveColor))
                                                                        if (other.textTheme.$eq(0, _this.textTheme))
                                                                          if (other.primaryTextTheme.$eq(0, _this.primaryTextTheme))
                                                                            if (other.accentTextTheme.$eq(0, _this.accentTextTheme))
                                                                              if (other.inputDecorationTheme.$eq(0, _this.inputDecorationTheme))
                                                                                if (other.iconTheme.$eq(0, _this.iconTheme))
                                                                                  if (other.primaryIconTheme.$eq(0, _this.primaryIconTheme))
                                                                                    if (other.accentIconTheme.$eq(0, _this.accentIconTheme))
                                                                                      if (other.sliderTheme.$eq(0, _this.sliderTheme))
                                                                                        if (other.tabBarTheme.$eq(0, _this.tabBarTheme))
                                                                                          if (other.tooltipTheme.$eq(0, _this.tooltipTheme))
                                                                                            if (other.cardTheme.$eq(0, _this.cardTheme))
                                                                                              if (other.chipTheme.$eq(0, _this.chipTheme))
                                                                                                if (other.platform === _this.platform)
                                                                                                  if (other.materialTapTargetSize === _this.materialTapTargetSize)
                                                                                                    if (other.pageTransitionsTheme.$eq(0, _this.pageTransitionsTheme))
                                                                                                      if (other.appBarTheme.$eq(0, _this.appBarTheme))
                                                                                                        if (other.scrollbarTheme.$eq(0, _this.scrollbarTheme))
                                                                                                          if (other.bottomAppBarTheme.$eq(0, _this.bottomAppBarTheme))
                                                                                                            if (other.colorScheme.$eq(0, _this.colorScheme))
                                                                                                              if (other.dialogTheme.$eq(0, _this.dialogTheme))
                                                                                                                if (other.floatingActionButtonTheme.$eq(0, _this.floatingActionButtonTheme))
                                                                                                                  if (other.navigationRailTheme.$eq(0, _this.navigationRailTheme))
                                                                                                                    if (other.typography.$eq(0, _this.typography))
                                                                                                                      if (other.snackBarTheme.$eq(0, _this.snackBarTheme))
                                                                                                                        if (other.bottomSheetTheme.$eq(0, _this.bottomSheetTheme))
                                                                                                                          if (other.popupMenuTheme.$eq(0, _this.popupMenuTheme))
                                                                                                                            if (other.bannerTheme.$eq(0, _this.bannerTheme))
                                                                                                                              if (other.dividerTheme.$eq(0, _this.dividerTheme))
                                                                                                                                if (other.buttonBarTheme.$eq(0, _this.buttonBarTheme))
                                                                                                                                  if (other.bottomNavigationBarTheme.$eq(0, _this.bottomNavigationBarTheme))
                                                                                                                                    if (other.timePickerTheme.$eq(0, _this.timePickerTheme))
                                                                                                                                      if (other.textButtonTheme.$eq(0, _this.textButtonTheme))
                                                                                                                                        if (other.elevatedButtonTheme.$eq(0, _this.elevatedButtonTheme))
                                                                                                                                          if (other.outlinedButtonTheme.$eq(0, _this.outlinedButtonTheme))
                                                                                                                                            if (other.textSelectionTheme.$eq(0, _this.textSelectionTheme))
                                                                                                                                              if (other.dataTableTheme.$eq(0, _this.dataTableTheme))
                                                                                                                                                if (other.checkboxTheme.$eq(0, _this.checkboxTheme))
                                                                                                                                                  if (other.radioTheme.$eq(0, _this.radioTheme))
                                                                                                                                                    if (other.switchTheme.$eq(0, _this.switchTheme))
                                                                                                                                                      t1 = true;
                                                                                                                                                    else
                                                                                                                                                      t1 = false;
                                                                                                                                                  else
                                                                                                                                                    t1 = false;
                                                                                                                                                else
                                                                                                                                                  t1 = false;
                                                                                                                                              else
                                                                                                                                                t1 = false;
                                                                                                                                            else
                                                                                                                                              t1 = false;
                                                                                                                                          else
                                                                                                                                            t1 = false;
                                                                                                                                        else
                                                                                                                                          t1 = false;
                                                                                                                                      else
                                                                                                                                        t1 = false;
                                                                                                                                    else
                                                                                                                                      t1 = false;
                                                                                                                                  else
                                                                                                                                    t1 = false;
                                                                                                                                else
                                                                                                                                  t1 = false;
                                                                                                                              else
                                                                                                                                t1 = false;
                                                                                                                            else
                                                                                                                              t1 = false;
                                                                                                                          else
                                                                                                                            t1 = false;
                                                                                                                        else
                                                                                                                          t1 = false;
                                                                                                                      else
                                                                                                                        t1 = false;
                                                                                                                    else
                                                                                                                      t1 = false;
                                                                                                                  else
                                                                                                                    t1 = false;
                                                                                                                else
                                                                                                                  t1 = false;
                                                                                                              else
                                                                                                                t1 = false;
                                                                                                            else
                                                                                                              t1 = false;
                                                                                                          else
                                                                                                            t1 = false;
                                                                                                        else
                                                                                                          t1 = false;
                                                                                                      else
                                                                                                        t1 = false;
                                                                                                    else
                                                                                                      t1 = false;
                                                                                                  else
                                                                                                    t1 = false;
                                                                                                else
                                                                                                  t1 = false;
                                                                                              else
                                                                                                t1 = false;
                                                                                            else
                                                                                              t1 = false;
                                                                                          else
                                                                                            t1 = false;
                                                                                        else
                                                                                          t1 = false;
                                                                                      else
                                                                                        t1 = false;
                                                                                    else
                                                                                      t1 = false;
                                                                                  else
                                                                                    t1 = false;
                                                                                else
                                                                                  t1 = false;
                                                                              else
                                                                                t1 = false;
                                                                            else
                                                                              t1 = false;
                                                                          else
                                                                            t1 = false;
                                                                        else
                                                                          t1 = false;
                                                                      else
                                                                        t1 = false;
                                                                    else
                                                                      t1 = false;
                                                                  else
                                                                    t1 = false;
                                                                else
                                                                  t1 = false;
                                                              else
                                                                t1 = false;
                                                            else
                                                              t1 = false;
                                                          else
                                                            t1 = false;
                                                        else
                                                          t1 = false;
                                                      else
                                                        t1 = false;
                                                    else
                                                      t1 = false;
                                                  else
                                                    t1 = false;
                                                else
                                                  t1 = false;
                                              else
                                                t1 = false;
                                            else
                                              t1 = false;
                                          else
                                            t1 = false;
                                        else
                                          t1 = false;
                                      else
                                        t1 = false;
                                    else
                                      t1 = false;
                                  else
                                    t1 = false;
                                else
                                  t1 = false;
                              else
                                t1 = false;
                            else
                              t1 = false;
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashList([_this.visualDensity, _this.primaryColor, _this.primaryColorBrightness, _this.primaryColorLight, _this.primaryColorDark, _this.accentColor, _this.accentColorBrightness, _this.canvasColor, _this.shadowColor, _this.scaffoldBackgroundColor, _this.bottomAppBarColor, _this.cardColor, _this.dividerColor, _this.focusColor, _this.hoverColor, _this.highlightColor, _this.splashColor, _this.splashFactory, _this.selectedRowColor, _this.unselectedWidgetColor, _this.disabledColor, _this.buttonTheme, _this.buttonColor, _this.toggleButtonsTheme, _this.toggleableActiveColor, _this.secondaryHeaderColor, _this.textSelectionColor, _this.cursorColor, _this.textSelectionHandleColor, _this.backgroundColor, _this.dialogBackgroundColor, _this.indicatorColor, _this.hintColor, _this.errorColor, _this.textTheme, _this.primaryTextTheme, _this.accentTextTheme, _this.inputDecorationTheme, _this.iconTheme, _this.primaryIconTheme, _this.accentIconTheme, _this.sliderTheme, _this.tabBarTheme, _this.tooltipTheme, _this.cardTheme, _this.chipTheme, _this.platform, _this.materialTapTargetSize, false, _this.pageTransitionsTheme, _this.appBarTheme, _this.scrollbarTheme, _this.bottomAppBarTheme, _this.colorScheme, _this.dialogTheme, _this.floatingActionButtonTheme, _this.navigationRailTheme, _this.typography, _this.cupertinoOverrideTheme, _this.snackBarTheme, _this.bottomSheetTheme, _this.popupMenuTheme, _this.bannerTheme, _this.dividerTheme, _this.buttonBarTheme, _this.bottomNavigationBarTheme, _this.timePickerTheme, _this.textButtonTheme, _this.elevatedButtonTheme, _this.outlinedButtonTheme, _this.textSelectionTheme, _this.dataTableTheme, _this.checkboxTheme, _this.radioTheme, _this.switchTheme, false, true]);
    }
  };
  X.ThemeData_localize_closure.prototype = {
    call$0: function() {
      var t5,
        t1 = this.baseTheme,
        t2 = this.localTextGeometry,
        t3 = t2.merge$1(t1.primaryTextTheme),
        t4 = t2.merge$1(t1.accentTextTheme);
      t2 = t2.merge$1(t1.textTheme);
      t5 = t1.colorScheme;
      return X.ThemeData$raw(t1.accentColor, t1.accentColorBrightness, t1.accentIconTheme, t4, t1.appBarTheme, false, t1.backgroundColor, t1.bannerTheme, t1.bottomAppBarColor, t1.bottomAppBarTheme, t1.bottomNavigationBarTheme, t1.bottomSheetTheme, t1.buttonBarTheme, t1.buttonColor, t1.buttonTheme, t1.canvasColor, t1.cardColor, t1.cardTheme, t1.checkboxTheme, t1.chipTheme, new A.ColorScheme(t5.primary, t5.primaryVariant, t5.secondary, t5.secondaryVariant, t5.surface, t5.background, t5.error, t5.onPrimary, t5.onSecondary, t5.onSurface, t5.onBackground, t5.onError, t5.brightness), t1.cupertinoOverrideTheme, t1.cursorColor, t1.dataTableTheme, t1.dialogBackgroundColor, t1.dialogTheme, t1.disabledColor, t1.dividerColor, t1.dividerTheme, t1.elevatedButtonTheme, t1.errorColor, false, t1.floatingActionButtonTheme, t1.focusColor, t1.highlightColor, t1.hintColor, t1.hoverColor, t1.iconTheme, t1.indicatorColor, t1.inputDecorationTheme, t1.materialTapTargetSize, t1.navigationRailTheme, t1.outlinedButtonTheme, t1.pageTransitionsTheme, t1.platform, t1.popupMenuTheme, t1.primaryColor, t1.primaryColorBrightness, t1.primaryColorDark, t1.primaryColorLight, t1.primaryIconTheme, t3, t1.radioTheme, t1.scaffoldBackgroundColor, t1.scrollbarTheme, t1.secondaryHeaderColor, t1.selectedRowColor, t1.shadowColor, t1.sliderTheme, t1.snackBarTheme, t1.splashColor, t1.splashFactory, t1.switchTheme, t1.tabBarTheme, t1.textButtonTheme, t1.textSelectionColor, t1.textSelectionHandleColor, t1.textSelectionTheme, t2, t1.timePickerTheme, t1.toggleButtonsTheme, t1.toggleableActiveColor, t1.tooltipTheme, t1.typography, t1.unselectedWidgetColor, true, t1.visualDensity);
    },
    $signature: 185
  };
  X.MaterialBasedCupertinoThemeData.prototype = {
    get$brightness: function() {
      return this._materialTheme.colorScheme.brightness;
    },
    get$primaryColor: function() {
      return this._materialTheme.colorScheme.primary;
    }
  };
  X._IdentityThemeDataCacheKey.prototype = {
    get$hashCode: function(_) {
      return (H.objectHashCode(this.baseTheme) ^ H.objectHashCode(this.localTextGeometry)) >>> 0;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return other instanceof X._IdentityThemeDataCacheKey && other.baseTheme === this.baseTheme && other.localTextGeometry === this.localTextGeometry;
    }
  };
  X._FifoCache.prototype = {
    putIfAbsent$2: function(_, key, loader) {
      var t2,
        t1 = this._cache,
        result = t1.$index(0, key);
      if (result != null)
        return result;
      if (t1.get$length(t1) === this._maximumSize) {
        t2 = t1.get$keys(t1);
        t1.remove$1(0, t2.get$first(t2));
      }
      t2 = loader.call$0();
      t1.$indexSet(0, key, t2);
      return t2;
    }
  };
  X.VisualDensity.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof X.VisualDensity && other.horizontal === this.horizontal && other.vertical === this.vertical;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.horizontal, this.vertical, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toStringShort$0: function() {
      return this.super$Diagnosticable$toStringShort() + "(h: " + E.debugFormatDouble(this.horizontal) + ", v: " + E.debugFormatDouble(this.vertical) + ")";
    }
  };
  X._ThemeData_Object_Diagnosticable.prototype = {};
  X._VisualDensity_Object_Diagnosticable.prototype = {};
  A.TimePickerThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.backgroundColor, _this.hourMinuteTextColor, _this.hourMinuteColor, _this.dayPeriodTextColor, _this.dayPeriodColor, _this.dialHandColor, _this.dialBackgroundColor, _this.dialTextColor, _this.entryModeIconColor, _this.hourMinuteTextStyle, _this.dayPeriodTextStyle, _this.helpTextStyle, _this.shape, _this.hourMinuteShape, _this.dayPeriodShape, _this.dayPeriodBorderSide, _this.inputDecorationTheme, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof A.TimePickerThemeData && J.$eq$(other.backgroundColor, _this.backgroundColor) && J.$eq$(other.hourMinuteTextColor, _this.hourMinuteTextColor) && J.$eq$(other.hourMinuteColor, _this.hourMinuteColor) && J.$eq$(other.dayPeriodTextColor, _this.dayPeriodTextColor) && J.$eq$(other.dayPeriodColor, _this.dayPeriodColor) && J.$eq$(other.dialHandColor, _this.dialHandColor) && J.$eq$(other.dialBackgroundColor, _this.dialBackgroundColor) && J.$eq$(other.dialTextColor, _this.dialTextColor) && J.$eq$(other.entryModeIconColor, _this.entryModeIconColor) && J.$eq$(other.hourMinuteTextStyle, _this.hourMinuteTextStyle) && J.$eq$(other.dayPeriodTextStyle, _this.dayPeriodTextStyle) && J.$eq$(other.helpTextStyle, _this.helpTextStyle) && J.$eq$(other.shape, _this.shape) && J.$eq$(other.hourMinuteShape, _this.hourMinuteShape) && J.$eq$(other.dayPeriodShape, _this.dayPeriodShape) && J.$eq$(other.dayPeriodBorderSide, _this.dayPeriodBorderSide) && true;
    }
  };
  A._TimePickerThemeData_Object_Diagnosticable.prototype = {};
  S.ToggleButtonsThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.textStyle, _this.constraints, _this.color, _this.selectedColor, _this.disabledColor, _this.fillColor, _this.focusColor, _this.highlightColor, _this.hoverColor, _this.splashColor, _this.borderColor, _this.selectedBorderColor, _this.disabledBorderColor, _this.borderRadius, _this.borderWidth, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof S.ToggleButtonsThemeData && J.$eq$(other.textStyle, _this.textStyle) && J.$eq$(other.constraints, _this.constraints) && J.$eq$(other.color, _this.color) && J.$eq$(other.selectedColor, _this.selectedColor) && J.$eq$(other.disabledColor, _this.disabledColor) && J.$eq$(other.fillColor, _this.fillColor) && J.$eq$(other.focusColor, _this.focusColor) && J.$eq$(other.highlightColor, _this.highlightColor) && J.$eq$(other.hoverColor, _this.hoverColor) && J.$eq$(other.splashColor, _this.splashColor) && J.$eq$(other.borderColor, _this.borderColor) && J.$eq$(other.selectedBorderColor, _this.selectedBorderColor) && J.$eq$(other.disabledBorderColor, _this.disabledBorderColor) && J.$eq$(other.borderRadius, _this.borderRadius) && other.borderWidth == _this.borderWidth;
    }
  };
  S._ToggleButtonsThemeData_Object_Diagnosticable.prototype = {};
  T.TooltipThemeData.prototype = {
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.height, _this.padding, _this.margin, _this.verticalOffset, _this.preferBelow, _this.excludeFromSemantics, _this.decoration, _this.textStyle, null, null, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof T.TooltipThemeData)
        if (other.height == _this.height)
          if (J.$eq$(other.padding, _this.padding))
            if (J.$eq$(other.margin, _this.margin))
              if (other.verticalOffset == _this.verticalOffset)
                if (J.$eq$(other.decoration, _this.decoration))
                  if (J.$eq$(other.textStyle, _this.textStyle))
                    t1 = true;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }
  };
  T._TooltipThemeData_Object_Diagnosticable.prototype = {};
  U.ScriptCategory.prototype = {
    toString$0: function(_) {
      return this._typography$_name;
    }
  };
  U.Typography.prototype = {
    geometryThemeFor$1: function(category) {
      switch (category) {
        case C.ScriptCategory_0:
          return this.englishLike;
        case C.ScriptCategory_1:
          return this.dense;
        case C.ScriptCategory_2:
          return this.tall;
      }
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof U.Typography && other.black.$eq(0, _this.black) && other.white.$eq(0, _this.white) && other.englishLike.$eq(0, _this.englishLike) && other.dense.$eq(0, _this.dense) && other.tall.$eq(0, _this.tall);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.black, _this.white, _this.englishLike, _this.dense, _this.tall, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  U._Typography_Object_Diagnosticable.prototype = {};
  K.AlignmentGeometry.prototype = {
    toString$0: function(_) {
      var _this = this;
      if (_this.get$_alignment$_start(_this) === 0)
        return K.Alignment__stringify(_this.get$_x(), _this.get$_y());
      if (_this.get$_x() === 0)
        return K.AlignmentDirectional__stringify(_this.get$_alignment$_start(_this), _this.get$_y());
      return K.Alignment__stringify(_this.get$_x(), _this.get$_y()) + " + " + K.AlignmentDirectional__stringify(_this.get$_alignment$_start(_this), 0);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof K.AlignmentGeometry && other.get$_x() === _this.get$_x() && other.get$_alignment$_start(other) === _this.get$_alignment$_start(_this) && other.get$_y() === _this.get$_y();
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.get$_x(), _this.get$_alignment$_start(_this), _this.get$_y(), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  K.Alignment.prototype = {
    get$_x: function() {
      return this.x;
    },
    get$_alignment$_start: function(_) {
      return 0;
    },
    get$_y: function() {
      return this.y;
    },
    $sub: function(_, other) {
      return new K.Alignment(this.x - other.x, this.y - other.y);
    },
    $add: function(_, other) {
      return new K.Alignment(this.x + other.x, this.y + other.y);
    },
    $mul: function(_, other) {
      return new K.Alignment(this.x * other, this.y * other);
    },
    alongOffset$1: function(other) {
      var centerX = other._dx / 2,
        centerY = other._dy / 2;
      return new P.Offset(centerX + this.x * centerX, centerY + this.y * centerY);
    },
    toString$0: function(_) {
      return K.Alignment__stringify(this.x, this.y);
    }
  };
  K.AlignmentDirectional.prototype = {
    get$_x: function() {
      return 0;
    },
    get$_alignment$_start: function(_) {
      return this.start;
    },
    get$_y: function() {
      return this.y;
    },
    $sub: function(_, other) {
      return new K.AlignmentDirectional(this.start - other.start, this.y - other.y);
    },
    $add: function(_, other) {
      return new K.AlignmentDirectional(this.start + other.start, this.y + other.y);
    },
    $mul: function(_, other) {
      return new K.AlignmentDirectional(this.start * other, this.y * other);
    },
    resolve$1: function(direction) {
      var _this = this;
      direction.toString;
      switch (direction) {
        case C.TextDirection_0:
          return new K.Alignment(-_this.start, _this.y);
        case C.TextDirection_1:
          return new K.Alignment(_this.start, _this.y);
      }
    },
    toString$0: function(_) {
      return K.AlignmentDirectional__stringify(this.start, this.y);
    }
  };
  K._MixedAlignment.prototype = {
    $mul: function(_, other) {
      return new K._MixedAlignment(this._x * other, this._alignment$_start * other, this._y * other);
    },
    get$_x: function() {
      return this._x;
    },
    get$_alignment$_start: function(receiver) {
      return this._alignment$_start;
    },
    get$_y: function() {
      return this._y;
    }
  };
  G.RenderComparison.prototype = {
    toString$0: function(_) {
      return this._basic_types$_name;
    }
  };
  G.AxisDirection.prototype = {
    toString$0: function(_) {
      return this._basic_types$_name;
    }
  };
  N.PaintingBinding.prototype = {};
  N._SystemFontsNotifier.prototype = {
    notifyListeners$0: function() {
      var t1, t2;
      for (t1 = this._systemFontsCallbacks, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
        t2._as(t1._collection$_current).call$0();
    }
  };
  K.BorderRadiusGeometry.prototype = {
    subtract$1: function(other) {
      var _this = this;
      return new K._MixedBorderRadius(_this.get$_topLeft().$sub(0, other.get$_topLeft()), _this.get$_topRight().$sub(0, other.get$_topRight()), _this.get$_bottomLeft().$sub(0, other.get$_bottomLeft()), _this.get$_bottomRight().$sub(0, other.get$_bottomRight()), _this.get$_topStart().$sub(0, other.get$_topStart()), _this.get$_topEnd().$sub(0, other.get$_topEnd()), _this.get$_bottomStart().$sub(0, other.get$_bottomStart()), _this.get$_bottomEnd().$sub(0, other.get$_bottomEnd()));
    },
    add$1: function(_, other) {
      var _this = this;
      return new K._MixedBorderRadius(_this.get$_topLeft().$add(0, other.get$_topLeft()), _this.get$_topRight().$add(0, other.get$_topRight()), _this.get$_bottomLeft().$add(0, other.get$_bottomLeft()), _this.get$_bottomRight().$add(0, other.get$_bottomRight()), _this.get$_topStart().$add(0, other.get$_topStart()), _this.get$_topEnd().$add(0, other.get$_topEnd()), _this.get$_bottomStart().$add(0, other.get$_bottomStart()), _this.get$_bottomEnd().$add(0, other.get$_bottomEnd()));
    },
    toString$0: function(_) {
      var visual, t1, comma, logical, _this = this;
      if (_this.get$_topLeft().$eq(0, _this.get$_topRight()) && _this.get$_topRight().$eq(0, _this.get$_bottomLeft()) && _this.get$_bottomLeft().$eq(0, _this.get$_bottomRight()))
        if (!_this.get$_topLeft().$eq(0, C.Radius_0_0))
          visual = _this.get$_topLeft().x === _this.get$_topLeft().y ? "BorderRadius.circular(" + C.JSNumber_methods.toStringAsFixed$1(_this.get$_topLeft().x, 1) + ")" : "BorderRadius.all(" + _this.get$_topLeft().toString$0(0) + ")";
        else
          visual = null;
      else {
        t1 = "" + "BorderRadius.only(";
        if (!_this.get$_topLeft().$eq(0, C.Radius_0_0)) {
          t1 += "topLeft: " + _this.get$_topLeft().toString$0(0);
          comma = true;
        } else
          comma = false;
        if (!_this.get$_topRight().$eq(0, C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "topRight: " + _this.get$_topRight().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomLeft().$eq(0, C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomLeft: " + _this.get$_bottomLeft().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomRight().$eq(0, C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomRight: " + _this.get$_bottomRight().toString$0(0);
        }
        t1 += ")";
        visual = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (_this.get$_topStart().$eq(0, _this.get$_topEnd()) && _this.get$_topEnd().$eq(0, _this.get$_bottomEnd()) && _this.get$_bottomEnd().$eq(0, _this.get$_bottomStart()))
        if (!_this.get$_topStart().$eq(0, C.Radius_0_0))
          logical = _this.get$_topStart().x === _this.get$_topStart().y ? "BorderRadiusDirectional.circular(" + C.JSNumber_methods.toStringAsFixed$1(_this.get$_topStart().x, 1) + ")" : "BorderRadiusDirectional.all(" + _this.get$_topStart().toString$0(0) + ")";
        else
          logical = null;
      else {
        t1 = "" + "BorderRadiusDirectional.only(";
        if (!_this.get$_topStart().$eq(0, C.Radius_0_0)) {
          t1 += "topStart: " + _this.get$_topStart().toString$0(0);
          comma = true;
        } else
          comma = false;
        if (!_this.get$_topEnd().$eq(0, C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "topEnd: " + _this.get$_topEnd().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomStart().$eq(0, C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomStart: " + _this.get$_bottomStart().toString$0(0);
          comma = true;
        }
        if (!_this.get$_bottomEnd().$eq(0, C.Radius_0_0)) {
          if (comma)
            t1 += ", ";
          t1 += "bottomEnd: " + _this.get$_bottomEnd().toString$0(0);
        }
        t1 += ")";
        logical = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      t1 = visual != null;
      if (t1 && logical != null)
        return H.S(visual) + " + " + logical;
      if (t1)
        return visual;
      if (logical != null)
        return logical;
      return "BorderRadius.zero";
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof K.BorderRadiusGeometry && other.get$_topLeft().$eq(0, _this.get$_topLeft()) && other.get$_topRight().$eq(0, _this.get$_topRight()) && other.get$_bottomLeft().$eq(0, _this.get$_bottomLeft()) && other.get$_bottomRight().$eq(0, _this.get$_bottomRight()) && other.get$_topStart().$eq(0, _this.get$_topStart()) && other.get$_topEnd().$eq(0, _this.get$_topEnd()) && other.get$_bottomStart().$eq(0, _this.get$_bottomStart()) && other.get$_bottomEnd().$eq(0, _this.get$_bottomEnd());
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.get$_topLeft(), _this.get$_topRight(), _this.get$_bottomLeft(), _this.get$_bottomRight(), _this.get$_topStart(), _this.get$_topEnd(), _this.get$_bottomStart(), _this.get$_bottomEnd(), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  K.BorderRadius.prototype = {
    get$_topLeft: function() {
      return this.topLeft;
    },
    get$_topRight: function() {
      return this.topRight;
    },
    get$_bottomLeft: function() {
      return this.bottomLeft;
    },
    get$_bottomRight: function() {
      return this.bottomRight;
    },
    get$_topStart: function() {
      return C.Radius_0_0;
    },
    get$_topEnd: function() {
      return C.Radius_0_0;
    },
    get$_bottomStart: function() {
      return C.Radius_0_0;
    },
    get$_bottomEnd: function() {
      return C.Radius_0_0;
    },
    toRRect$1: function(rect) {
      var _this = this;
      return P.RRect$fromRectAndCorners(rect, _this.bottomLeft, _this.bottomRight, _this.topLeft, _this.topRight);
    },
    subtract$1: function(other) {
      if (other instanceof K.BorderRadius)
        return this.$sub(0, other);
      return this.super$BorderRadiusGeometry$subtract(other);
    },
    add$1: function(_, other) {
      if (other instanceof K.BorderRadius)
        return this.$add(0, other);
      return this.super$BorderRadiusGeometry$add(0, other);
    },
    $sub: function(_, other) {
      var _this = this;
      return new K.BorderRadius(_this.topLeft.$sub(0, other.topLeft), _this.topRight.$sub(0, other.topRight), _this.bottomLeft.$sub(0, other.bottomLeft), _this.bottomRight.$sub(0, other.bottomRight));
    },
    $add: function(_, other) {
      var _this = this;
      return new K.BorderRadius(_this.topLeft.$add(0, other.topLeft), _this.topRight.$add(0, other.topRight), _this.bottomLeft.$add(0, other.bottomLeft), _this.bottomRight.$add(0, other.bottomRight));
    },
    $mul: function(_, other) {
      var _this = this;
      return new K.BorderRadius(_this.topLeft.$mul(0, other), _this.topRight.$mul(0, other), _this.bottomLeft.$mul(0, other), _this.bottomRight.$mul(0, other));
    },
    resolve$1: function(direction) {
      return this;
    }
  };
  K._MixedBorderRadius.prototype = {
    $mul: function(_, other) {
      var _this = this;
      return new K._MixedBorderRadius(_this._topLeft.$mul(0, other), _this._topRight.$mul(0, other), _this._bottomLeft.$mul(0, other), _this._bottomRight.$mul(0, other), _this._topStart.$mul(0, other), _this._topEnd.$mul(0, other), _this._bottomStart.$mul(0, other), _this._bottomEnd.$mul(0, other));
    },
    resolve$1: function(direction) {
      var _this = this;
      direction.toString;
      switch (direction) {
        case C.TextDirection_0:
          return new K.BorderRadius(_this._topLeft.$add(0, _this._topEnd), _this._topRight.$add(0, _this._topStart), _this._bottomLeft.$add(0, _this._bottomEnd), _this._bottomRight.$add(0, _this._bottomStart));
        case C.TextDirection_1:
          return new K.BorderRadius(_this._topLeft.$add(0, _this._topStart), _this._topRight.$add(0, _this._topEnd), _this._bottomLeft.$add(0, _this._bottomStart), _this._bottomRight.$add(0, _this._bottomEnd));
      }
    },
    get$_topLeft: function() {
      return this._topLeft;
    },
    get$_topRight: function() {
      return this._topRight;
    },
    get$_bottomLeft: function() {
      return this._bottomLeft;
    },
    get$_bottomRight: function() {
      return this._bottomRight;
    },
    get$_topStart: function() {
      return this._topStart;
    },
    get$_topEnd: function() {
      return this._topEnd;
    },
    get$_bottomStart: function() {
      return this._bottomStart;
    },
    get$_bottomEnd: function() {
      return this._bottomEnd;
    }
  };
  Y.BorderStyle.prototype = {
    toString$0: function(_) {
      return this._borders$_name;
    }
  };
  Y.BorderSide.prototype = {
    scale$1: function(_, t) {
      var t1 = Math.max(0, this.width * t),
        t2 = t <= 0 ? C.BorderStyle_0 : this.style;
      return new Y.BorderSide(this.color, t1, t2);
    },
    toPaint$0: function() {
      switch (this.style) {
        case C.BorderStyle_1:
          var t1 = H._detectRenderer();
          t1 = t1 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
          t1.set$color(0, this.color);
          t1.set$strokeWidth(this.width);
          t1.set$style(0, C.PaintingStyle_1);
          return t1;
        case C.BorderStyle_0:
          t1 = H._detectRenderer();
          t1 = t1 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
          t1.set$color(0, C.Color_0);
          t1.set$strokeWidth(0);
          t1.set$style(0, C.PaintingStyle_1);
          return t1;
      }
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof Y.BorderSide && other.color.$eq(0, _this.color) && other.width === _this.width && other.style === _this.style;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.color, this.width, this.style, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "BorderSide(" + this.color.toString$0(0) + ", " + C.JSNumber_methods.toStringAsFixed$1(this.width, 1) + ", " + this.style.toString$0(0) + ")";
    }
  };
  Y.ShapeBorder.prototype = {
    add$2$reversed: function(_, other, reversed) {
      return null;
    },
    add$1: function($receiver, other) {
      return this.add$2$reversed($receiver, other, false);
    },
    $add: function(_, other) {
      var t1 = this.add$1(0, other);
      if (t1 == null)
        t1 = other.add$2$reversed(0, this, true);
      return t1 == null ? new Y._CompoundBorder(H.setRuntimeTypeInfo([other, this], type$.JSArray_ShapeBorder)) : t1;
    },
    lerpFrom$2: function(a, t) {
      if (a == null)
        return this.scale$1(0, t);
      return null;
    },
    lerpTo$2: function(b, t) {
      if (b == null)
        return this.scale$1(0, 1 - t);
      return null;
    },
    toString$0: function(_) {
      return "ShapeBorder()";
    }
  };
  Y.OutlinedBorder.prototype = {};
  Y._CompoundBorder.prototype = {
    get$dimensions: function() {
      return C.JSArray_methods.fold$2(this.borders, C.EdgeInsets_0_0_0_0, new Y._CompoundBorder_dimensions_closure());
    },
    add$2$reversed: function(_, other, reversed) {
      var t2, ours, merged,
        t1 = other instanceof Y._CompoundBorder;
      if (!t1) {
        t2 = this.borders;
        ours = reversed ? C.JSArray_methods.get$last(t2) : C.JSArray_methods.get$first(t2);
        merged = ours.add$2$reversed(0, other, reversed);
        if (merged == null)
          merged = other.add$2$reversed(0, ours, !reversed);
        if (merged != null) {
          t1 = P.List_List$of(t2, true, type$.ShapeBorder);
          t1[reversed ? t1.length - 1 : 0] = merged;
          return new Y._CompoundBorder(t1);
        }
      }
      t2 = H.setRuntimeTypeInfo([], type$.JSArray_ShapeBorder);
      if (reversed)
        C.JSArray_methods.addAll$1(t2, this.borders);
      if (t1)
        C.JSArray_methods.addAll$1(t2, other.borders);
      else
        t2.push(other);
      if (!reversed)
        C.JSArray_methods.addAll$1(t2, this.borders);
      return new Y._CompoundBorder(t2);
    },
    add$1: function($receiver, other) {
      return this.add$2$reversed($receiver, other, false);
    },
    scale$1: function(_, t) {
      var t1 = this.borders,
        t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ShapeBorder>");
      return new Y._CompoundBorder(P.List_List$of(new H.MappedListIterable(t1, new Y._CompoundBorder_scale_closure(t), t2), true, t2._eval$1("ListIterable.E")));
    },
    lerpFrom$2: function(a, t) {
      return Y._CompoundBorder_lerp(a, this, t);
    },
    lerpTo$2: function(b, t) {
      return Y._CompoundBorder_lerp(this, b, t);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      return C.JSArray_methods.get$first(this.borders).getOuterPath$2$textDirection(rect, textDirection);
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var t1, t2, _i, border, t3;
      for (t1 = this.borders, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        border = t1[_i];
        border.paint$3$textDirection(canvas, rect, textDirection);
        t3 = border.get$dimensions().resolve$1(textDirection);
        rect = new P.Rect(rect.left + t3.left, rect.top + t3.top, rect.right - t3.right, rect.bottom - t3.bottom);
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof Y._CompoundBorder && S.listEquals(other.borders, this.borders);
    },
    get$hashCode: function(_) {
      return P.hashList(this.borders);
    },
    toString$0: function(_) {
      var t1 = this.borders,
        t2 = H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>");
      return new H.MappedListIterable(new H.ReversedListIterable(t1, t2), new Y._CompoundBorder_toString_closure(), t2._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, " + ");
    }
  };
  Y._CompoundBorder_dimensions_closure.prototype = {
    call$2: function(previousValue, border) {
      return previousValue.add$1(0, border.get$dimensions());
    },
    $signature: 186
  };
  Y._CompoundBorder_scale_closure.prototype = {
    call$1: function(border) {
      return border.scale$1(0, this.t);
    },
    $signature: 187
  };
  Y._CompoundBorder_toString_closure.prototype = {
    call$1: function(border) {
      return border.toString$0(0);
    },
    $signature: 188
  };
  F.BoxShape.prototype = {
    toString$0: function(_) {
      return this._box_border$_name;
    }
  };
  X.CircleBorder.prototype = {
    get$dimensions: function() {
      var t1 = this.side.width;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    scale$1: function(_, t) {
      return new X.CircleBorder(this.side.scale$1(0, t));
    },
    lerpFrom$2: function(a, t) {
      if (a instanceof X.CircleBorder)
        return new X.CircleBorder(Y.BorderSide_lerp(a.side, this.side, t));
      return this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      if (b instanceof X.CircleBorder)
        return new X.CircleBorder(Y.BorderSide_lerp(this.side, b.side, t));
      return this.super$ShapeBorder$lerpTo(b, t);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = P.Path_Path();
      t1.addOval$1(0, P.Rect$fromCircle(rect.get$center(), rect.get$shortestSide() / 2));
      return t1;
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          canvas.drawCircle$3(0, rect.get$center(), (rect.get$shortestSide() - t1.width) / 2, t1.toPaint$0());
          break;
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof X.CircleBorder && other.side.$eq(0, this.side);
    },
    get$hashCode: function(_) {
      var t1 = this.side;
      return P.hashValues(t1.color, t1.width, t1.style, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "CircleBorder(" + this.side.toString$0(0) + ")";
    }
  };
  Z.ClipContext.prototype = {
    _clipAndPaint$4: function(canvasClipCall, clipBehavior, bounds, painter) {
      var t1, t2, _this = this;
      _this.get$canvas(_this).save$0(0);
      switch (clipBehavior) {
        case C.Clip_0:
          break;
        case C.Clip_1:
          canvasClipCall.call$1(false);
          break;
        case C.Clip_2:
          canvasClipCall.call$1(true);
          break;
        case C.Clip_3:
          canvasClipCall.call$1(true);
          t1 = _this.get$canvas(_this);
          t2 = H._detectRenderer();
          t1.saveLayer$2(0, bounds, t2 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData()));
          break;
      }
      painter.call$0();
      if (clipBehavior === C.Clip_3)
        _this.get$canvas(_this).restore$0(0);
      _this.get$canvas(_this).restore$0(0);
    },
    clipPathAndPaint$4: function(path, clipBehavior, bounds, painter) {
      this._clipAndPaint$4(new Z.ClipContext_clipPathAndPaint_closure(this, path), clipBehavior, bounds, painter);
    },
    clipRectAndPaint$4: function(rect, clipBehavior, bounds, painter) {
      this._clipAndPaint$4(new Z.ClipContext_clipRectAndPaint_closure(this, rect), clipBehavior, bounds, painter);
    }
  };
  Z.ClipContext_clipPathAndPaint_closure.prototype = {
    call$1: function(doAntiAias) {
      var t1 = this.$this;
      return t1.get$canvas(t1).clipPath$2$doAntiAlias(0, this.path, doAntiAias);
    },
    $signature: 15
  };
  Z.ClipContext_clipRectAndPaint_closure.prototype = {
    call$1: function(doAntiAias) {
      var t1 = this.$this;
      return t1.get$canvas(t1).clipRect$2$doAntiAlias(0, this.rect, doAntiAias);
    },
    $signature: 15
  };
  E.ColorSwatch.prototype = {
    $index: function(_, index) {
      return this._swatch.$index(0, index);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return _this.super$Color$$eq(0, other) && H._instanceType(_this)._eval$1("ColorSwatch<ColorSwatch.T>")._is(other) && S.mapEquals(other._swatch, _this._swatch);
    },
    get$hashCode: function(_) {
      return P.hashValues(H.getRuntimeType(this), this.value, this._swatch, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "ColorSwatch(primary value: " + this.super$Color$toString(0) + ")";
    }
  };
  Z.Decoration.prototype = {
    toStringShort$0: function() {
      return "Decoration";
    },
    get$padding: function(_) {
      return C.EdgeInsets_0_0_0_0;
    },
    get$isComplex: function() {
      return false;
    },
    lerpFrom$2: function(a, t) {
      return null;
    },
    lerpTo$2: function(b, t) {
      return null;
    },
    hitTest$3$textDirection: function(size, position, textDirection) {
      return true;
    }
  };
  Z.BoxPainter.prototype = {
    dispose$0: function(_) {
    }
  };
  Z._Decoration_Object_Diagnosticable.prototype = {};
  V.EdgeInsetsGeometry.prototype = {
    add$1: function(_, other) {
      var _this = this;
      return new V._MixedEdgeInsets(_this.get$_left(_this) + other.get$_left(other), _this.get$_right(_this) + other.get$_right(other), _this.get$_edge_insets$_start(_this) + other.get$_edge_insets$_start(other), _this.get$_edge_insets$_end() + other.get$_edge_insets$_end(), _this.get$_top(_this) + other.get$_top(other), _this.get$_bottom(_this) + other.get$_bottom(other));
    },
    clamp$2: function(_, min, max) {
      var _this = this;
      return new V._MixedEdgeInsets(C.JSNumber_methods.clamp$2(_this.get$_left(_this), min.left, max._left), C.JSNumber_methods.clamp$2(_this.get$_right(_this), min.right, max._right), C.JSNumber_methods.clamp$2(_this.get$_edge_insets$_start(_this), 0, max._edge_insets$_start), C.JSNumber_methods.clamp$2(_this.get$_edge_insets$_end(), 0, max._edge_insets$_end), C.JSNumber_methods.clamp$2(_this.get$_top(_this), min.top, max._top), C.JSNumber_methods.clamp$2(_this.get$_bottom(_this), min.bottom, max._bottom));
    },
    toString$0: function(_) {
      var _this = this;
      if (_this.get$_edge_insets$_start(_this) === 0 && _this.get$_edge_insets$_end() === 0) {
        if (_this.get$_left(_this) === 0 && _this.get$_right(_this) === 0 && _this.get$_top(_this) === 0 && _this.get$_bottom(_this) === 0)
          return "EdgeInsets.zero";
        if (_this.get$_left(_this) === _this.get$_right(_this) && _this.get$_right(_this) === _this.get$_top(_this) && _this.get$_top(_this) === _this.get$_bottom(_this))
          return "EdgeInsets.all(" + C.JSNumber_methods.toStringAsFixed$1(_this.get$_left(_this), 1) + ")";
        return "EdgeInsets(" + C.JSNumber_methods.toStringAsFixed$1(_this.get$_left(_this), 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_top(_this), 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_right(_this), 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_bottom(_this), 1) + ")";
      }
      if (_this.get$_left(_this) === 0 && _this.get$_right(_this) === 0)
        return "EdgeInsetsDirectional(" + C.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_start(_this), 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_top(_this), 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_end(), 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_bottom(_this), 1) + ")";
      return "EdgeInsets(" + C.JSNumber_methods.toStringAsFixed$1(_this.get$_left(_this), 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_top(_this), 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_right(_this), 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_bottom(_this), 1) + ") + EdgeInsetsDirectional(" + C.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_start(_this), 1) + ", 0.0, " + C.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_end(), 1) + ", 0.0)";
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof V.EdgeInsetsGeometry && other.get$_left(other) === _this.get$_left(_this) && other.get$_right(other) === _this.get$_right(_this) && other.get$_edge_insets$_start(other) === _this.get$_edge_insets$_start(_this) && other.get$_edge_insets$_end() === _this.get$_edge_insets$_end() && other.get$_top(other) === _this.get$_top(_this) && other.get$_bottom(other) === _this.get$_bottom(_this);
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.get$_left(_this), _this.get$_right(_this), _this.get$_edge_insets$_start(_this), _this.get$_edge_insets$_end(), _this.get$_top(_this), _this.get$_bottom(_this), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  V.EdgeInsets.prototype = {
    get$_left: function(_) {
      return this.left;
    },
    get$_top: function(_) {
      return this.top;
    },
    get$_right: function(_) {
      return this.right;
    },
    get$_bottom: function(_) {
      return this.bottom;
    },
    get$_edge_insets$_start: function(_) {
      return 0;
    },
    get$_edge_insets$_end: function() {
      return 0;
    },
    add$1: function(_, other) {
      if (other instanceof V.EdgeInsets)
        return this.$add(0, other);
      return this.super$EdgeInsetsGeometry$add(0, other);
    },
    clamp$2: function(_, min, max) {
      var _this = this;
      return new V.EdgeInsets(C.JSNumber_methods.clamp$2(_this.left, min.left, max._left), C.JSNumber_methods.clamp$2(_this.top, min.top, max._top), C.JSNumber_methods.clamp$2(_this.right, min.right, max._right), C.JSNumber_methods.clamp$2(_this.bottom, min.bottom, max._bottom));
    },
    $sub: function(_, other) {
      var _this = this;
      return new V.EdgeInsets(_this.left - other.left, _this.top - other.top, _this.right - other.right, _this.bottom - other.bottom);
    },
    $add: function(_, other) {
      var _this = this;
      return new V.EdgeInsets(_this.left + other.left, _this.top + other.top, _this.right + other.right, _this.bottom + other.bottom);
    },
    $mul: function(_, other) {
      var _this = this;
      return new V.EdgeInsets(_this.left * other, _this.top * other, _this.right * other, _this.bottom * other);
    },
    resolve$1: function(direction) {
      return this;
    }
  };
  V.EdgeInsetsDirectional.prototype = {
    get$_edge_insets$_start: function(_) {
      return this.start;
    },
    get$_top: function(_) {
      return this.top;
    },
    get$_edge_insets$_end: function() {
      return this.end;
    },
    get$_bottom: function(_) {
      return this.bottom;
    },
    get$_left: function(_) {
      return 0;
    },
    get$_right: function(_) {
      return 0;
    },
    add$1: function(_, other) {
      if (other instanceof V.EdgeInsetsDirectional)
        return this.$add(0, other);
      return this.super$EdgeInsetsGeometry$add(0, other);
    },
    $sub: function(_, other) {
      var _this = this;
      return new V.EdgeInsetsDirectional(_this.start - other.start, _this.top - other.top, _this.end - other.end, _this.bottom - other.bottom);
    },
    $add: function(_, other) {
      var _this = this;
      return new V.EdgeInsetsDirectional(_this.start + other.start, _this.top + other.top, _this.end + other.end, _this.bottom + other.bottom);
    },
    $mul: function(_, other) {
      var _this = this;
      return new V.EdgeInsetsDirectional(_this.start * other, _this.top * other, _this.end * other, _this.bottom * other);
    },
    resolve$1: function(direction) {
      var _this = this;
      direction.toString;
      switch (direction) {
        case C.TextDirection_0:
          return new V.EdgeInsets(_this.end, _this.top, _this.start, _this.bottom);
        case C.TextDirection_1:
          return new V.EdgeInsets(_this.start, _this.top, _this.end, _this.bottom);
      }
    }
  };
  V._MixedEdgeInsets.prototype = {
    $mul: function(_, other) {
      var _this = this;
      return new V._MixedEdgeInsets(_this._left * other, _this._right * other, _this._edge_insets$_start * other, _this._edge_insets$_end * other, _this._top * other, _this._bottom * other);
    },
    resolve$1: function(direction) {
      var _this = this;
      direction.toString;
      switch (direction) {
        case C.TextDirection_0:
          return new V.EdgeInsets(_this._edge_insets$_end + _this._left, _this._top, _this._edge_insets$_start + _this._right, _this._bottom);
        case C.TextDirection_1:
          return new V.EdgeInsets(_this._edge_insets$_start + _this._left, _this._top, _this._edge_insets$_end + _this._right, _this._bottom);
      }
    },
    get$_left: function(receiver) {
      return this._left;
    },
    get$_right: function(receiver) {
      return this._right;
    },
    get$_edge_insets$_start: function(receiver) {
      return this._edge_insets$_start;
    },
    get$_edge_insets$_end: function() {
      return this._edge_insets$_end;
    },
    get$_top: function(receiver) {
      return this._top;
    },
    get$_bottom: function(receiver) {
      return this._bottom;
    }
  };
  E.ImageCache.prototype = {
    clear$0: function(_) {
      var _this = this,
        t1 = _this._pendingImages,
        t2 = _this._image_cache$_cache,
        t3 = _this._liveImages;
      P.Timeline_instantSync("ImageCache.clear", P.LinkedHashMap_LinkedHashMap$_literal(["pendingImages", t1.get$length(t1), "keepAliveImages", t2.get$length(t2), "liveImages", t3.get$length(t3), "currentSizeInBytes", _this._currentSizeBytes], type$.String, type$.dynamic));
      for (t3 = t2.get$values(t2), t3 = t3.get$iterator(t3); t3.moveNext$0();)
        t3.get$current(t3).dispose$0(0);
      t2.clear$0(0);
      t1.clear$0(0);
      _this._currentSizeBytes = 0;
    }
  };
  M.ImageConfiguration.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof M.ImageConfiguration && other.bundle == _this.bundle && other.devicePixelRatio == _this.devicePixelRatio && J.$eq$(other.locale, _this.locale) && other.textDirection == _this.textDirection && J.$eq$(other.size, _this.size) && other.platform == _this.platform;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.bundle, _this.devicePixelRatio, _this.locale, _this.size, _this.platform, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var hasArguments, _this = this,
        t1 = "" + "ImageConfiguration(",
        t2 = _this.bundle;
      if (t2 != null) {
        t1 += "bundle: " + t2.toString$0(0);
        hasArguments = true;
      } else
        hasArguments = false;
      t2 = _this.devicePixelRatio;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("devicePixelRatio: " + C.JSNumber_methods.toStringAsFixed$1(t2, 1));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.locale;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("locale: " + t2.toString$0(0));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.textDirection;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("textDirection: " + t2.toString$0(0));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.size;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("size: " + t2.toString$0(0));
        t1 = t2;
        hasArguments = true;
      }
      t2 = _this.platform;
      if (t2 != null) {
        if (hasArguments)
          t1 += ", ";
        t2 = t1 + ("platform: " + Y.describeEnum(t2));
        t1 = t2;
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  G.Accumulator.prototype = {};
  G.InlineSpanSemanticsInformation.prototype = {
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof G.InlineSpanSemanticsInformation)
        if (other.text === this.text)
          if (other.semanticsLabel == this.semanticsLabel)
            t1 = true;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.text, this.semanticsLabel, this.recognizer, false, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "InlineSpanSemanticsInformation{text: " + this.text + ", semanticsLabel: " + H.S(this.semanticsLabel) + ", recognizer: " + H.S(this.recognizer) + "}";
    },
    text$0: function($receiver) {
      return this.text.call$0();
    }
  };
  G.InlineSpan.prototype = {
    getSpanForPosition$1: function(position) {
      var t1 = {};
      t1.result = null;
      this.visitChildren$1(new G.InlineSpan_getSpanForPosition_closure(t1, position, new G.Accumulator()));
      return t1.result;
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof G.InlineSpan && other.style.$eq(0, this.style);
    },
    get$hashCode: function(_) {
      var t1 = this.style;
      return t1.get$hashCode(t1);
    }
  };
  G.InlineSpan_getSpanForPosition_closure.prototype = {
    call$1: function(span) {
      var result = span.getSpanForPositionVisitor$2(this.position, this.offset);
      this._box_0.result = result;
      return result == null;
    },
    $signature: 57
  };
  X.RoundedRectangleBorder.prototype = {
    get$dimensions: function() {
      var t1 = this.side.width;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    scale$1: function(_, t) {
      var t1 = this.side.scale$1(0, t);
      return new X.RoundedRectangleBorder(this.borderRadius.$mul(0, t), t1);
    },
    lerpFrom$2: function(a, t) {
      var t1, t2, _this = this;
      if (a instanceof X.RoundedRectangleBorder) {
        t1 = Y.BorderSide_lerp(a.side, _this.side, t);
        t2 = K.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        return new X.RoundedRectangleBorder(t2, t1);
      }
      if (a instanceof X.CircleBorder)
        return new X._RoundedRectangleToCircleBorder(_this.borderRadius, 1 - t, Y.BorderSide_lerp(a.side, _this.side, t));
      return _this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      var t1, t2, _this = this;
      if (b instanceof X.RoundedRectangleBorder) {
        t1 = Y.BorderSide_lerp(_this.side, b.side, t);
        t2 = K.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        return new X.RoundedRectangleBorder(t2, t1);
      }
      if (b instanceof X.CircleBorder)
        return new X._RoundedRectangleToCircleBorder(_this.borderRadius, t, Y.BorderSide_lerp(_this.side, b.side, t));
      return _this.super$ShapeBorder$lerpTo(b, t);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = P.Path_Path();
      t1.addRRect$1(0, this.borderRadius.resolve$1(textDirection).toRRect$1(rect));
      return t1;
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var width, t2, outer, inner, paint,
        t1 = this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          width = t1.width;
          t2 = this.borderRadius;
          if (width === 0)
            canvas.drawRRect$2(0, t2.resolve$1(textDirection).toRRect$1(rect), t1.toPaint$0());
          else {
            outer = t2.resolve$1(textDirection).toRRect$1(rect);
            inner = outer.inflate$1(-width);
            t2 = H._detectRenderer();
            paint = t2 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
            paint.set$color(0, t1.color);
            canvas.drawDRRect$3(0, outer, inner, paint);
          }
          break;
      }
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof X.RoundedRectangleBorder && other.side.$eq(0, this.side) && other.borderRadius.$eq(0, this.borderRadius);
    },
    get$hashCode: function(_) {
      return P.hashValues(this.side, this.borderRadius, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "RoundedRectangleBorder(" + this.side.toString$0(0) + ", " + this.borderRadius.toString$0(0) + ")";
    }
  };
  X._RoundedRectangleToCircleBorder.prototype = {
    get$dimensions: function() {
      var t1 = this.side.width;
      return new V.EdgeInsets(t1, t1, t1, t1);
    },
    scale$1: function(_, t) {
      var t1 = this.side.scale$1(0, t);
      return new X._RoundedRectangleToCircleBorder(this.borderRadius.$mul(0, t), t, t1);
    },
    lerpFrom$2: function(a, t) {
      var t1, t2, t3, _this = this;
      if (a instanceof X.RoundedRectangleBorder) {
        t1 = Y.BorderSide_lerp(a.side, _this.side, t);
        t2 = K.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        return new X._RoundedRectangleToCircleBorder(t2, _this.circleness * t, t1);
      }
      if (a instanceof X.CircleBorder) {
        t1 = _this.circleness;
        return new X._RoundedRectangleToCircleBorder(_this.borderRadius, t1 + (1 - t1) * (1 - t), Y.BorderSide_lerp(a.side, _this.side, t));
      }
      if (a instanceof X._RoundedRectangleToCircleBorder) {
        t1 = Y.BorderSide_lerp(a.side, _this.side, t);
        t2 = K.BorderRadiusGeometry_lerp(a.borderRadius, _this.borderRadius, t);
        t2.toString;
        t3 = P.lerpDouble(a.circleness, _this.circleness, t);
        t3.toString;
        return new X._RoundedRectangleToCircleBorder(t2, t3, t1);
      }
      return _this.super$ShapeBorder$lerpFrom(a, t);
    },
    lerpTo$2: function(b, t) {
      var t1, t2, t3, _this = this;
      if (b instanceof X.RoundedRectangleBorder) {
        t1 = Y.BorderSide_lerp(_this.side, b.side, t);
        t2 = K.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        return new X._RoundedRectangleToCircleBorder(t2, _this.circleness * (1 - t), t1);
      }
      if (b instanceof X.CircleBorder) {
        t1 = _this.circleness;
        return new X._RoundedRectangleToCircleBorder(_this.borderRadius, t1 + (1 - t1) * t, Y.BorderSide_lerp(_this.side, b.side, t));
      }
      if (b instanceof X._RoundedRectangleToCircleBorder) {
        t1 = Y.BorderSide_lerp(_this.side, b.side, t);
        t2 = K.BorderRadiusGeometry_lerp(_this.borderRadius, b.borderRadius, t);
        t2.toString;
        t3 = P.lerpDouble(_this.circleness, b.circleness, t);
        t3.toString;
        return new X._RoundedRectangleToCircleBorder(t2, t3, t1);
      }
      return _this.super$ShapeBorder$lerpTo(b, t);
    },
    _adjustRect$1: function(rect) {
      var t2, t3, t4, t5, t6, t7, delta,
        t1 = this.circleness;
      if (t1 === 0 || rect.right - rect.left === rect.bottom - rect.top)
        return rect;
      t2 = rect.right;
      t3 = rect.left;
      t4 = t2 - t3;
      t5 = rect.bottom;
      t6 = rect.top;
      t7 = t5 - t6;
      if (t4 < t7) {
        delta = t1 * (t7 - t4) / 2;
        return new P.Rect(t3, t6 + delta, t2, t5 - delta);
      } else {
        delta = t1 * (t4 - t7) / 2;
        return new P.Rect(t3 + delta, t6, t2 - delta, t5);
      }
    },
    _adjustBorderRadius$2: function(rect, textDirection) {
      var resolvedRadius = this.borderRadius.resolve$1(textDirection),
        t1 = this.circleness;
      if (t1 === 0)
        return resolvedRadius;
      return K.BorderRadius_lerp(resolvedRadius, K.BorderRadius$circular(rect.get$shortestSide() / 2), t1);
    },
    getOuterPath$2$textDirection: function(rect, textDirection) {
      var t1 = P.Path_Path(),
        t2 = this._adjustBorderRadius$2(rect, textDirection);
      t2.toString;
      t1.addRRect$1(0, t2.toRRect$1(this._adjustRect$1(rect)));
      return t1;
    },
    paint$3$textDirection: function(canvas, rect, textDirection) {
      var width, t2, outer, inner, paint, _this = this,
        t1 = _this.side;
      switch (t1.style) {
        case C.BorderStyle_0:
          break;
        case C.BorderStyle_1:
          width = t1.width;
          if (width === 0) {
            t2 = _this._adjustBorderRadius$2(rect, textDirection);
            t2.toString;
            canvas.drawRRect$2(0, t2.toRRect$1(_this._adjustRect$1(rect)), t1.toPaint$0());
          } else {
            t2 = _this._adjustBorderRadius$2(rect, textDirection);
            t2.toString;
            outer = t2.toRRect$1(_this._adjustRect$1(rect));
            inner = outer.inflate$1(-width);
            t2 = H._detectRenderer();
            paint = t2 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
            paint.set$color(0, t1.color);
            canvas.drawDRRect$3(0, outer, inner, paint);
          }
          break;
      }
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof X._RoundedRectangleToCircleBorder && other.side.$eq(0, _this.side) && other.borderRadius.$eq(0, _this.borderRadius) && other.circleness === _this.circleness;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.side, this.borderRadius, this.circleness, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "RoundedRectangleBorder(" + this.side.toString$0(0) + ", " + this.borderRadius.toString$0(0) + ", " + C.JSNumber_methods.toStringAsFixed$1(this.circleness * 100, 1) + "% of the way to being a CircleBorder)";
    }
  };
  D.ShaderWarmUp.prototype = {
    execute$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, picture, recorder;
      var $async$execute$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              recorder = P.PictureRecorder_PictureRecorder();
              $async$goto = 2;
              return P._asyncAwait($async$self.warmUpOnCanvas$1(P.Canvas_Canvas(recorder, null)), $async$execute$0);
            case 2:
              // returning from await.
              picture = recorder.endRecording$0();
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$execute$0, $async$completer);
    }
  };
  D.DefaultShaderWarmUp.prototype = {
    warmUpOnCanvas$1: function(canvas) {
      return this.warmUpOnCanvas$body$DefaultShaderWarmUp(canvas);
    },
    warmUpOnCanvas$body$DefaultShaderWarmUp: function(canvas) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        circlePath, path, convexPath, paths, t1, t2, t3, t4, paints, i, _i, paint, paragraphBuilder, paragraph, fraction, rrectPath;
      var $async$warmUpOnCanvas$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              rrectPath = P.Path_Path();
              rrectPath.addRRect$1(0, C.RRect_GZS);
              circlePath = P.Path_Path();
              circlePath.addOval$1(0, P.Rect$fromCircle(C.Offset_40_40, 20));
              path = P.Path_Path();
              path.moveTo$2(0, 20, 60);
              path.quadraticBezierTo$4(60, 20, 60, 60);
              path.close$0(0);
              path.moveTo$2(0, 60, 20);
              path.quadraticBezierTo$4(60, 60, 20, 60);
              convexPath = P.Path_Path();
              convexPath.moveTo$2(0, 20, 30);
              convexPath.lineTo$2(0, 40, 20);
              convexPath.lineTo$2(0, 60, 30);
              convexPath.lineTo$2(0, 60, 60);
              convexPath.lineTo$2(0, 20, 60);
              convexPath.close$0(0);
              paths = [rrectPath, circlePath, path, convexPath];
              t1 = H._detectRenderer();
              t1 = t1 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
              t1.set$isAntiAlias(true);
              t1.set$style(0, C.PaintingStyle_0);
              t2 = H._detectRenderer();
              t2 = t2 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
              t2.set$isAntiAlias(false);
              t2.set$style(0, C.PaintingStyle_0);
              t3 = H._detectRenderer();
              t3 = t3 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
              t3.set$isAntiAlias(true);
              t3.set$style(0, C.PaintingStyle_1);
              t3.set$strokeWidth(10);
              t4 = H._detectRenderer();
              t4 = t4 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
              t4.set$isAntiAlias(true);
              t4.set$style(0, C.PaintingStyle_1);
              t4.set$strokeWidth(0.1);
              paints = [t1, t2, t3, t4];
              for (i = 0; i < 4; ++i) {
                canvas.save$0(0);
                for (_i = 0; _i < 4; ++_i) {
                  paint = paints[_i];
                  canvas.drawPath$2(0, paths[i], paint);
                  canvas.translate$2(0, 0, 0);
                }
                canvas.restore$0(0);
                canvas.translate$2(0, 0, 0);
              }
              canvas.save$0(0);
              canvas.drawShadow$4(0, rrectPath, C.Color_4278190080, 10, true);
              canvas.translate$2(0, 0, 0);
              canvas.drawShadow$4(0, rrectPath, C.Color_4278190080, 10, false);
              canvas.restore$0(0);
              canvas.translate$2(0, 0, 0);
              paragraphBuilder = P.ParagraphBuilder_ParagraphBuilder(P.ParagraphStyle_ParagraphStyle(null, null, null, null, null, null, null, null, null, null, C.TextDirection_1, null));
              paragraphBuilder.pushStyle$1(0, P.TextStyle_TextStyle(null, C.Color_4278190080, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null));
              paragraphBuilder.addText$1(0, "_");
              paragraph = paragraphBuilder.build$0(0);
              paragraph.layout$1(0, C.ParagraphConstraints_60);
              canvas.drawParagraph$2(0, paragraph, C.Offset_20_20);
              for (t1 = [0, 0.5], _i = 0; _i < 2; ++_i) {
                fraction = t1[_i];
                canvas.save$0(0);
                canvas.translate$2(0, fraction, fraction);
                canvas.clipRRect$1(0, new P.RRect(8, 8, 328, 248, 16, 16, 16, 16, 16, 16, 16, 16, true));
                t2 = H._detectRenderer();
                canvas.drawRect$2(0, C.Rect_10_10_320_240, t2 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData()));
                canvas.restore$0(0);
                canvas.translate$2(0, 0, 0);
              }
              canvas.translate$2(0, 0, 0);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$warmUpOnCanvas$1, $async$completer);
    }
  };
  U.PlaceholderDimensions.prototype = {
    toString$0: function(_) {
      return "PlaceholderDimensions(" + this.size.toString$0(0) + ", " + H.S(this.baseline) + ")";
    }
  };
  U.TextWidthBasis.prototype = {
    toString$0: function(_) {
      return this._text_painter$_name;
    }
  };
  U.TextPainter.prototype = {
    markNeedsLayout$0: function() {
      this._text_painter$_paragraph = null;
      this._text_painter$_needsLayout = true;
    },
    get$text: function(_) {
      return this._text_painter$_text;
    },
    set$text: function(_, value) {
      var t1, _this = this;
      if (J.$eq$(_this._text_painter$_text, value))
        return;
      t1 = _this._text_painter$_text;
      t1 = t1 == null ? null : t1.style;
      J.$eq$(t1, value.style);
      _this._text_painter$_text = value;
      _this.markNeedsLayout$0();
    },
    set$textAlign: function(_, value) {
      if (this._text_painter$_textAlign === value)
        return;
      this._text_painter$_textAlign = value;
      this.markNeedsLayout$0();
    },
    set$textDirection: function(_, value) {
      if (this._text_painter$_textDirection === value)
        return;
      this._text_painter$_textDirection = value;
      this.markNeedsLayout$0();
    },
    set$textScaleFactor: function(value) {
      if (this._textScaleFactor === value)
        return;
      this._textScaleFactor = value;
      this.markNeedsLayout$0();
    },
    set$ellipsis: function(_, value) {
      if (this._text_painter$_ellipsis == value)
        return;
      this._text_painter$_ellipsis = value;
      this.markNeedsLayout$0();
    },
    set$locale: function(_, value) {
      if (J.$eq$(this._text_painter$_locale, value))
        return;
      this._text_painter$_locale = value;
      this.markNeedsLayout$0();
    },
    set$maxLines: function(_, value) {
      if (this._text_painter$_maxLines == value)
        return;
      this._text_painter$_maxLines = value;
      this.markNeedsLayout$0();
    },
    set$textWidthBasis: function(value) {
      if (this._textWidthBasis === value)
        return;
      this._textWidthBasis = value;
      this.markNeedsLayout$0();
    },
    setPlaceholderDimensions$1: function(value) {
      if (value == null || value.length === 0 || S.listEquals(value, this._text_painter$_placeholderDimensions))
        return;
      this._text_painter$_placeholderDimensions = value;
      this.markNeedsLayout$0();
    },
    get$width: function(_) {
      var t1 = this._textWidthBasis,
        t2 = this._text_painter$_paragraph;
      t1 = t1 === C.TextWidthBasis_1 ? t2.get$longestLine() : t2.get$width(t2);
      return Math.ceil(t1);
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      var t1;
      switch (baseline) {
        case C.TextBaseline_0:
          t1 = this._text_painter$_paragraph;
          return t1.get$alphabeticBaseline(t1);
        case C.TextBaseline_1:
          t1 = this._text_painter$_paragraph;
          return t1.get$ideographicBaseline(t1);
      }
    },
    layout$2$maxWidth$minWidth: function(_, maxWidth, minWidth) {
      var t1, t2, t3, t4, t5, t6, t7, t8, builder, newWidth, _this = this, _null = null;
      if (!_this._text_painter$_needsLayout && minWidth === _this._lastMinWidth && maxWidth === _this._lastMaxWidth)
        return;
      _this._text_painter$_needsLayout = false;
      t1 = _this._text_painter$_paragraph;
      if (t1 == null) {
        t1 = _this._text_painter$_text.style;
        t2 = _this._text_painter$_textAlign;
        t3 = _this._text_painter$_textDirection;
        if (t3 == null)
          t3 = _null;
        t4 = _this._textScaleFactor;
        t5 = _this._text_painter$_maxLines;
        t6 = _this._text_painter$_ellipsis;
        t7 = _this._text_painter$_locale;
        t8 = t1.fontSize;
        if (t8 == null)
          t8 = 14;
        t1 = P.ParagraphStyle_ParagraphStyle(t6, t1.fontFamily, t8 * t4, t1.fontStyle, t1.fontWeight, t1.height, t7, t5, _null, t2, t3, _null);
        builder = P.ParagraphBuilder_ParagraphBuilder(t1);
        t1 = _this._text_painter$_text;
        t2 = _this._textScaleFactor;
        t1.build$3$dimensions$textScaleFactor(0, builder, _this._text_painter$_placeholderDimensions, t2);
        _this._inlinePlaceholderScales = builder.get$placeholderScales();
        t2 = _this._text_painter$_paragraph = builder.build$0(0);
        t1 = t2;
      }
      _this._lastMinWidth = minWidth;
      _this._lastMaxWidth = maxWidth;
      t1.layout$1(0, new P.ParagraphConstraints(maxWidth));
      if (minWidth !== maxWidth) {
        switch (_this._textWidthBasis) {
          case C.TextWidthBasis_1:
            newWidth = Math.ceil(_this._text_painter$_paragraph.get$longestLine());
            break;
          case C.TextWidthBasis_0:
            newWidth = Math.ceil(_this._text_painter$_paragraph.get$maxIntrinsicWidth());
            break;
          default:
            newWidth = _null;
        }
        newWidth = J.clamp$2$n(newWidth, minWidth, maxWidth);
        t1 = _this._text_painter$_paragraph;
        if (newWidth !== Math.ceil(t1.get$width(t1)))
          _this._text_painter$_paragraph.layout$1(0, new P.ParagraphConstraints(newWidth));
      }
      _this._inlinePlaceholderBoxes = _this._text_painter$_paragraph.getBoxesForPlaceholders$0();
    },
    layout$0: function($receiver) {
      return this.layout$2$maxWidth$minWidth($receiver, 1 / 0, 0);
    },
    text$0: function($receiver) {
      return this.get$text(this).call$0();
    }
  };
  Q.TextSpan.prototype = {
    get$cursor: function(_) {
      return this.mouseCursor;
    },
    get$validForMouseTracker: function() {
      return true;
    },
    handleEvent$2: function($event, entry) {
      type$.PointerDownEvent._is($event);
    },
    build$3$dimensions$textScaleFactor: function(_, builder, dimensions, textScaleFactor) {
      var t4, t5, _i,
        t1 = this.style,
        t2 = t1.get$fontFamilyFallback(),
        t3 = t1.fontSize;
      t3 = t3 == null ? null : t3 * textScaleFactor;
      t4 = t1.background;
      if (t4 == null) {
        t4 = t1.backgroundColor;
        if (t4 != null) {
          t5 = H._detectRenderer();
          t5 = t5 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
          t5.set$color(0, t4);
          t4 = t5;
        } else
          t4 = null;
      }
      builder.pushStyle$1(0, P.TextStyle_TextStyle(t4, t1.color, t1.decoration, t1.decorationColor, t1.decorationStyle, t1.decorationThickness, t1.fontFamily, t2, t1.fontFeatures, t3, t1.fontStyle, t1.fontWeight, t1.foreground, t1.height, t1.leadingDistribution, t1.letterSpacing, t1.locale, t1.shadows, t1.textBaseline, t1.wordSpacing));
      builder.addText$1(0, this.text);
      t1 = this.children;
      if (t1 != null)
        for (_i = 0; _i < 1; ++_i)
          t1[_i].build$3$dimensions$textScaleFactor(0, builder, dimensions, textScaleFactor);
      builder.pop$0(0);
    },
    visitChildren$1: function(visitor) {
      var t1, _i;
      if (!visitor.call$1(this))
        return false;
      t1 = this.children;
      if (t1 != null)
        for (_i = 0; _i < 1; ++_i)
          if (!t1[_i].visitChildren$1(visitor))
            return false;
      return true;
    },
    getSpanForPositionVisitor$2: function(position, offset) {
      var affinity = position.affinity,
        targetOffset = position.offset,
        t1 = offset._inline_span$_value,
        endOffset = t1 + this.text.length;
      if (!(t1 === targetOffset && affinity === C.TextAffinity_1))
        if (!(t1 < targetOffset && targetOffset < endOffset))
          t1 = endOffset === targetOffset && affinity === C.TextAffinity_0;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return this;
      offset._inline_span$_value = endOffset;
      return null;
    },
    computeSemanticsInformation$1: function(collector) {
      var t1, _i;
      collector.push(new G.InlineSpanSemanticsInformation(this.text, null, null, false));
      t1 = this.children;
      if (t1 != null)
        for (_i = 0; _i < 1; ++_i)
          t1[_i].computeSemanticsInformation$1(collector);
    },
    compareTo$1: function(_, other) {
      var t1, candidate, result, t2, index, _this = this;
      if (_this === other)
        return C.RenderComparison_0;
      if (H.getRuntimeType(other) !== H.getRuntimeType(_this))
        return C.RenderComparison_3;
      if (other.text === _this.text) {
        t1 = _this.children == null ? null : 1;
        t1 = t1 != (other.children == null ? null : 1) || false;
      } else
        t1 = true;
      if (t1)
        return C.RenderComparison_3;
      candidate = _this.style.compareTo$1(0, other.style);
      result = candidate.index > 0 ? candidate : C.RenderComparison_0;
      if (result === C.RenderComparison_3)
        return result;
      t1 = _this.children;
      if (t1 != null)
        for (t2 = other.children, index = 0; index < 1; ++index) {
          candidate = t1[index].compareTo$1(0, t2[index]);
          if (candidate.get$index(candidate).$gt(0, result.index))
            result = candidate;
          if (result === C.RenderComparison_3)
            return result;
        }
      return result;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (!_this.super$InlineSpan$$eq(0, other))
        return false;
      if (other instanceof Q.TextSpan)
        if (other.text === _this.text)
          t1 = _this.mouseCursor.$eq(0, other.mouseCursor) && S.listEquals(other.children, _this.children);
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this, _null = null;
      return P.hashValues(G.InlineSpan.prototype.get$hashCode.call(_this, _this), _this.text, _null, _null, _null, _null, _this.mouseCursor, P.hashList(_this.children), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toStringShort$0: function() {
      return "TextSpan";
    },
    debugDescribeChildren$0: function() {
      var t2,
        t1 = this.children;
      if (t1 == null)
        return C.List_empty;
      t2 = H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,DiagnosticsNode>");
      return P.List_List$of(new H.MappedListIterable(t1, new Q.TextSpan_debugDescribeChildren_closure(), t2), true, t2._eval$1("ListIterable.E"));
    },
    $isHitTestTarget: 1,
    $isMouseTrackerAnnotation: 1,
    text$0: function($receiver) {
      return this.text.call$0();
    },
    get$onEnter: function() {
      return null;
    },
    get$onExit: function() {
      return null;
    }
  };
  Q.TextSpan_debugDescribeChildren_closure.prototype = {
    call$1: function(child) {
      var t1 = Y.DiagnosticableTreeNode$(null, null, child);
      return t1;
    },
    $signature: 190
  };
  A.TextStyle.prototype = {
    get$fontFamilyFallback: function() {
      return this._text_style$_fontFamilyFallback;
    },
    copyWith$22$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$shadows$textBaseline$wordSpacing: function(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _this = this, _null = null,
        t1 = _this.foreground;
      if (t1 == null && foreground == null)
        t2 = color == null ? _this.color : color;
      else
        t2 = _null;
      t3 = _this.background;
      if (t3 == null && background == null)
        t4 = backgroundColor == null ? _this.backgroundColor : backgroundColor;
      else
        t4 = _null;
      t5 = fontFamily == null ? _this.fontFamily : fontFamily;
      t6 = fontFamilyFallback == null ? _this.get$fontFamilyFallback() : fontFamilyFallback;
      t7 = fontSize == null ? _this.fontSize : fontSize;
      t8 = fontWeight == null ? _this.fontWeight : fontWeight;
      t9 = letterSpacing == null ? _this.letterSpacing : letterSpacing;
      t10 = wordSpacing == null ? _this.wordSpacing : wordSpacing;
      t11 = textBaseline == null ? _this.textBaseline : textBaseline;
      t12 = height == null ? _this.height : height;
      t1 = foreground == null ? t1 : foreground;
      t3 = background == null ? t3 : background;
      t13 = decoration == null ? _this.decoration : decoration;
      t14 = decorationColor == null ? _this.decorationColor : decorationColor;
      t15 = decorationStyle == null ? _this.decorationStyle : decorationStyle;
      t16 = decorationThickness == null ? _this.decorationThickness : decorationThickness;
      return A.TextStyle$(t3, t4, t2, _null, t13, t14, t15, t16, t5, t6, _this.fontFeatures, t7, _this.fontStyle, t8, t1, t12, _this.inherit, _this.leadingDistribution, t9, _this.locale, _null, _this.shadows, t11, t10);
    },
    copyWith$2$color$letterSpacing: function(color, letterSpacing) {
      return this.copyWith$22$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$shadows$textBaseline$wordSpacing(null, null, color, null, null, null, null, null, null, null, null, null, null, null, null, null, null, letterSpacing, null, null, null, null);
    },
    copyWith$1$color: function(color) {
      return this.copyWith$22$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$shadows$textBaseline$wordSpacing(null, null, color, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    },
    merge$1: function(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
      if (other == null)
        return this;
      if (!other.inherit)
        return other;
      t1 = other.color;
      t2 = other.backgroundColor;
      t3 = other.fontFamily;
      t4 = other.get$fontFamilyFallback();
      t5 = other.fontSize;
      t6 = other.fontWeight;
      t7 = other.fontStyle;
      t8 = other.letterSpacing;
      t9 = other.wordSpacing;
      t10 = other.textBaseline;
      t11 = other.height;
      t12 = other.leadingDistribution;
      t13 = other.locale;
      t14 = other.foreground;
      t15 = other.background;
      t16 = other.shadows;
      t17 = other.fontFeatures;
      return this.copyWith$22$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$shadows$textBaseline$wordSpacing(t15, t2, t1, null, other.decoration, other.decorationColor, other.decorationStyle, other.decorationThickness, t3, t4, t17, t5, t7, t6, t14, t11, t12, t8, t13, t16, t10, t9);
    },
    compareTo$1: function(_, other) {
      var t1, _this = this;
      if (_this === other)
        return C.RenderComparison_0;
      if (_this.inherit === other.inherit)
        if (_this.fontFamily == other.fontFamily)
          if (_this.fontSize == other.fontSize)
            if (_this.fontWeight == other.fontWeight)
              if (_this.letterSpacing == other.letterSpacing)
                if (_this.wordSpacing == other.wordSpacing)
                  if (_this.textBaseline == other.textBaseline)
                    if (_this.height == other.height)
                      t1 = _this.foreground != other.foreground || _this.background != other.background || !S.listEquals(_this.shadows, other.shadows) || !S.listEquals(_this.fontFeatures, other.fontFeatures) || !S.listEquals(_this.get$fontFamilyFallback(), other.get$fontFamilyFallback());
                    else
                      t1 = true;
                  else
                    t1 = true;
                else
                  t1 = true;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return C.RenderComparison_3;
      if (!J.$eq$(_this.color, other.color) || !J.$eq$(_this.backgroundColor, other.backgroundColor) || !J.$eq$(_this.decoration, other.decoration) || !J.$eq$(_this.decorationColor, other.decorationColor) || _this.decorationStyle != other.decorationStyle || _this.decorationThickness != other.decorationThickness)
        return C.RenderComparison_2;
      return C.RenderComparison_0;
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof A.TextStyle)
        if (other.inherit === _this.inherit)
          if (J.$eq$(other.color, _this.color))
            if (J.$eq$(other.backgroundColor, _this.backgroundColor))
              if (other.fontFamily == _this.fontFamily)
                if (other.fontSize == _this.fontSize)
                  if (other.fontWeight == _this.fontWeight)
                    if (other.letterSpacing == _this.letterSpacing)
                      if (other.wordSpacing == _this.wordSpacing)
                        if (other.textBaseline == _this.textBaseline)
                          if (other.height == _this.height)
                            t1 = other.foreground == _this.foreground && other.background == _this.background && J.$eq$(other.decoration, _this.decoration) && J.$eq$(other.decorationColor, _this.decorationColor) && other.decorationStyle == _this.decorationStyle && other.decorationThickness == _this.decorationThickness && S.listEquals(other.shadows, _this.shadows) && S.listEquals(other.fontFeatures, _this.fontFeatures) && S.listEquals(other.get$fontFamilyFallback(), _this.get$fontFamilyFallback());
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashList([_this.inherit, _this.color, _this.backgroundColor, _this.fontFamily, _this.fontSize, _this.fontWeight, _this.fontStyle, _this.letterSpacing, _this.wordSpacing, _this.textBaseline, _this.height, _this.leadingDistribution, _this.locale, _this.foreground, _this.background, _this.decoration, _this.decorationColor, _this.decorationStyle, P.hashList(_this.shadows), P.hashList(_this.fontFeatures), P.hashList(_this.get$fontFamilyFallback())]);
    },
    toStringShort$0: function() {
      return "TextStyle";
    }
  };
  A._TextStyle_Object_Diagnosticable.prototype = {};
  T.Simulation.prototype = {
    toString$0: function(_) {
      return "Simulation";
    }
  };
  N.RendererBinding.prototype = {
    get$_pipelineOwner: function() {
      var t1 = this.RendererBinding___RendererBinding__pipelineOwner;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_pipelineOwner")) : t1;
    },
    handleMetricsChanged$0: function() {
      var t1 = this.get$_pipelineOwner()._rootNode;
      t1.toString;
      t1.set$configuration(this.createViewConfiguration$0());
      this.scheduleForcedFrame$0();
    },
    handlePlatformBrightnessChanged$0: function() {
    },
    createViewConfiguration$0: function() {
      var t1 = $.$get$window(),
        devicePixelRatio = t1._debugDevicePixelRatio;
      if (devicePixelRatio == null)
        devicePixelRatio = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      return new A.ViewConfiguration0(t1.get$physicalSize().$div(0, devicePixelRatio), devicePixelRatio);
    },
    _handleSemanticsEnabledChanged$0: function() {
      var t1, _this = this;
      if ($.$get$window().platformDispatcher._configuration.semanticsEnabled) {
        if (_this.RendererBinding__semanticsHandle == null)
          _this.RendererBinding__semanticsHandle = _this.get$_pipelineOwner().ensureSemantics$0();
      } else {
        t1 = _this.RendererBinding__semanticsHandle;
        if (t1 != null)
          t1.dispose$0(0);
        _this.RendererBinding__semanticsHandle = null;
      }
    },
    setSemanticsEnabled$1: function(enabled) {
      var t1, _this = this;
      if (enabled) {
        if (_this.RendererBinding__semanticsHandle == null)
          _this.RendererBinding__semanticsHandle = _this.get$_pipelineOwner().ensureSemantics$0();
      } else {
        t1 = _this.RendererBinding__semanticsHandle;
        if (t1 != null)
          t1.dispose$0(0);
        _this.RendererBinding__semanticsHandle = null;
      }
    },
    _handleWebFirstFrame$1: function(_) {
      C.MethodChannel_Gpa._invokeMethod$1$3$arguments$missingOk("first-frame", null, false, type$.void);
    },
    _handleSemanticsAction$3: function(id, action, args) {
      var t1 = this.get$_pipelineOwner()._semanticsOwner;
      if (t1 != null)
        t1.performAction$3(id, action, null);
    },
    _handleSemanticsOwnerCreated$0: function() {
      var t2,
        t1 = this.get$_pipelineOwner()._rootNode;
      t1.toString;
      t2 = type$.nullable_PipelineOwner;
      t2._as(B.AbstractNode.prototype.get$owner.call(t1))._nodesNeedingSemantics.add$1(0, t1);
      t2._as(B.AbstractNode.prototype.get$owner.call(t1)).requestVisualUpdate$0();
    },
    _handleSemanticsOwnerDisposed$0: function() {
      this.get$_pipelineOwner()._rootNode.clearSemantics$0();
    },
    _handlePersistentFrameCallback$1: function(timeStamp) {
      this.drawFrame$0();
      this._scheduleMouseTrackerUpdate$0();
    },
    _scheduleMouseTrackerUpdate$0: function() {
      $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new N.RendererBinding__scheduleMouseTrackerUpdate_closure(this));
    },
    allowFirstFrame$0: function() {
      --this.RendererBinding__firstFrameDeferredCount;
      if (!this.RendererBinding__firstFrameSent)
        this.scheduleWarmUpFrame$0();
    },
    drawFrame$0: function() {
      var _this = this;
      _this.get$_pipelineOwner().flushLayout$0();
      _this.get$_pipelineOwner().flushCompositingBits$0();
      _this.get$_pipelineOwner().flushPaint$0();
      if (_this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0) {
        _this.get$_pipelineOwner()._rootNode.compositeFrame$0();
        _this.get$_pipelineOwner().flushSemantics$0();
        _this.RendererBinding__firstFrameSent = true;
      }
    }
  };
  N.RendererBinding__scheduleMouseTrackerUpdate_closure.prototype = {
    call$1: function(duration) {
      var t1 = this.$this,
        t2 = t1.RendererBinding__mouseTracker;
      t2.toString;
      t2.updateAllDevices$1(t1.get$_pipelineOwner()._rootNode.get$hitTestMouseTrackers());
    },
    $signature: 6
  };
  S.BoxConstraints.prototype = {
    deflate$1: function(edges) {
      var _this = this,
        horizontal = edges.get$_left(edges) + edges.get$_right(edges) + edges.get$_edge_insets$_start(edges) + edges.get$_edge_insets$_end(),
        vertical = edges.get$_top(edges) + edges.get$_bottom(edges),
        deflatedMinWidth = Math.max(0, _this.minWidth - horizontal),
        deflatedMinHeight = Math.max(0, _this.minHeight - vertical);
      return new S.BoxConstraints(deflatedMinWidth, Math.max(deflatedMinWidth, _this.maxWidth - horizontal), deflatedMinHeight, Math.max(deflatedMinHeight, _this.maxHeight - vertical));
    },
    loosen$0: function() {
      return new S.BoxConstraints(0, this.maxWidth, 0, this.maxHeight);
    },
    enforce$1: function(constraints) {
      var _this = this,
        t1 = constraints.minWidth,
        t2 = constraints.maxWidth,
        t3 = constraints.minHeight,
        t4 = constraints.maxHeight;
      return new S.BoxConstraints(C.JSNumber_methods.clamp$2(_this.minWidth, t1, t2), C.JSNumber_methods.clamp$2(_this.maxWidth, t1, t2), C.JSNumber_methods.clamp$2(_this.minHeight, t3, t4), C.JSNumber_methods.clamp$2(_this.maxHeight, t3, t4));
    },
    tighten$2$height$width: function(height, width) {
      var t5, t6, _this = this,
        t1 = width == null,
        t2 = _this.minWidth,
        t3 = t1 ? t2 : C.JSNumber_methods.clamp$2(width, t2, _this.maxWidth),
        t4 = _this.maxWidth;
      t1 = t1 ? t4 : C.JSNumber_methods.clamp$2(width, t2, t4);
      t2 = height == null;
      t4 = _this.minHeight;
      t5 = t2 ? t4 : C.JSNumber_methods.clamp$2(height, t4, _this.maxHeight);
      t6 = _this.maxHeight;
      return new S.BoxConstraints(t3, t1, t5, t2 ? t6 : C.JSNumber_methods.clamp$2(height, t4, t6));
    },
    tighten$1$width: function(width) {
      return this.tighten$2$height$width(null, width);
    },
    tighten$1$height: function(height) {
      return this.tighten$2$height$width(height, null);
    },
    constrain$1: function(size) {
      var _this = this;
      return new P.Size(C.JSNumber_methods.clamp$2(size._dx, _this.minWidth, _this.maxWidth), C.JSNumber_methods.clamp$2(size._dy, _this.minHeight, _this.maxHeight));
    },
    $mul: function(_, factor) {
      var _this = this;
      return new S.BoxConstraints(_this.minWidth * factor, _this.maxWidth * factor, _this.minHeight * factor, _this.maxHeight * factor);
    },
    get$isNormalized: function() {
      var _this = this,
        t1 = _this.minWidth;
      if (t1 >= 0)
        if (t1 <= _this.maxWidth) {
          t1 = _this.minHeight;
          t1 = t1 >= 0 && t1 <= _this.maxHeight;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof S.BoxConstraints && other.minWidth === _this.minWidth && other.maxWidth === _this.maxWidth && other.minHeight === _this.minHeight && other.maxHeight === _this.maxHeight;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.minWidth, _this.maxWidth, _this.minHeight, _this.maxHeight, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var t2, width, height, _this = this,
        annotation = _this.get$isNormalized() ? "" : "; NOT NORMALIZED",
        t1 = _this.minWidth;
      if (t1 === 1 / 0 && _this.minHeight === 1 / 0)
        return "BoxConstraints(biggest" + annotation + ")";
      if (t1 === 0 && _this.maxWidth === 1 / 0 && _this.minHeight === 0 && _this.maxHeight === 1 / 0)
        return "BoxConstraints(unconstrained" + annotation + ")";
      t2 = new S.BoxConstraints_toString_describe();
      width = t2.call$3(t1, _this.maxWidth, "w");
      height = t2.call$3(_this.minHeight, _this.maxHeight, "h");
      return "BoxConstraints(" + width + ", " + height + annotation + ")";
    }
  };
  S.BoxConstraints_toString_describe.prototype = {
    call$3: function(min, max, dim) {
      if (min === max)
        return dim + "=" + C.JSNumber_methods.toStringAsFixed$1(min, 1);
      return C.JSNumber_methods.toStringAsFixed$1(min, 1) + "<=" + dim + "<=" + C.JSNumber_methods.toStringAsFixed$1(max, 1);
    },
    $signature: 192
  };
  S.BoxHitTestResult.prototype = {
    addWithPaintTransform$3$hitTest$position$transform: function(hitTest, position, transform) {
      if (transform != null) {
        transform = E.Matrix4_tryInvert(F.PointerEvent_removePerspectiveTransform(transform));
        if (transform == null)
          return false;
      }
      return this.addWithRawTransform$3$hitTest$position$transform(hitTest, position, transform);
    },
    addWithPaintOffset$3$hitTest$offset$position: function(hitTest, offset, position) {
      var isHit,
        t1 = offset == null,
        transformedPosition = t1 ? position : position.$sub(0, offset);
      t1 = !t1;
      if (t1)
        this._localTransforms.push(new O._OffsetTransformPart(new P.Offset(-offset._dx, -offset._dy)));
      isHit = hitTest.call$2(this, transformedPosition);
      if (t1)
        this.popTransform$0();
      return isHit;
    },
    addWithRawTransform$3$hitTest$position$transform: function(hitTest, position, transform) {
      var isHit,
        t1 = transform == null,
        transformedPosition = t1 ? position : T.MatrixUtils_transformPoint(transform, position);
      t1 = !t1;
      if (t1)
        this._localTransforms.push(new O._MatrixTransformPart(transform));
      isHit = hitTest.call$2(this, transformedPosition);
      if (t1)
        this.popTransform$0();
      return isHit;
    }
  };
  S.BoxHitTestEntry.prototype = {
    get$target: function(_) {
      return type$.RenderBox._as(this.target);
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(type$.RenderBox._as(this.target)) + "@" + this.localPosition.toString$0(0);
    }
  };
  S.BoxParentData.prototype = {
    toString$0: function(_) {
      return "offset=" + this.offset.toString$0(0);
    }
  };
  S.ContainerBoxParentData.prototype = {};
  S.RenderBox.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof S.BoxParentData))
        child.parentData = new S.BoxParentData(C.Offset_0_0);
    },
    getDryLayout$1: function(constraints) {
      var t1 = this._cachedDryLayoutSizes;
      if (t1 == null)
        t1 = this._cachedDryLayoutSizes = P.LinkedHashMap_LinkedHashMap$_empty(type$.BoxConstraints, type$.Size);
      return t1.putIfAbsent$2(0, constraints, new S.RenderBox_getDryLayout_closure(this, constraints));
    },
    computeDryLayout$1: function(constraints) {
      return C.Size_0_0;
    },
    get$semanticBounds: function() {
      var t1 = this._size;
      return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    getDistanceToBaseline$2$onlyReal: function(baseline, onlyReal) {
      var result = this.getDistanceToActualBaseline$1(baseline);
      if (result == null && true)
        return this._size._dy;
      return result;
    },
    getDistanceToBaseline$1: function(baseline) {
      return this.getDistanceToBaseline$2$onlyReal(baseline, false);
    },
    getDistanceToActualBaseline$1: function(baseline) {
      var _this = this,
        t1 = _this._cachedBaselines;
      if (t1 == null)
        t1 = _this._cachedBaselines = P.LinkedHashMap_LinkedHashMap$_empty(type$.TextBaseline, type$.nullable_double);
      t1.putIfAbsent$2(0, baseline, new S.RenderBox_getDistanceToActualBaseline_closure(_this, baseline));
      return _this._cachedBaselines.$index(0, baseline);
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      return null;
    },
    markNeedsLayout$0: function() {
      var _this = this,
        t1 = _this._cachedBaselines;
      if (!(t1 != null && t1.get$isNotEmpty(t1))) {
        t1 = _this._cachedIntrinsicDimensions;
        if (!(t1 != null && t1.get$isNotEmpty(t1))) {
          t1 = _this._cachedDryLayoutSizes;
          t1 = t1 != null && t1.get$isNotEmpty(t1);
        } else
          t1 = true;
      } else
        t1 = true;
      if (t1) {
        t1 = _this._cachedBaselines;
        if (t1 != null)
          t1.clear$0(0);
        t1 = _this._cachedIntrinsicDimensions;
        if (t1 != null)
          t1.clear$0(0);
        t1 = _this._cachedDryLayoutSizes;
        if (t1 != null)
          t1.clear$0(0);
        if (_this._node$_parent instanceof K.RenderObject) {
          _this.markParentNeedsLayout$0();
          return;
        }
      }
      _this.super$RenderObject$markNeedsLayout();
    },
    performResize$0: function() {
      this._size = this.computeDryLayout$1(K.RenderObject.prototype.get$constraints.call(this));
    },
    performLayout$0: function() {
    },
    hitTest$2$position: function(result, position) {
      var t1, _this = this;
      if (_this._size.contains$1(0, position))
        if (_this.hitTestChildren$2$position(result, position) || _this.hitTestSelf$1(position)) {
          t1 = new S.BoxHitTestEntry(position, _this);
          result._globalizeTransforms$0();
          t1._transform = C.JSArray_methods.get$last(result._transforms);
          result._path.push(t1);
          return true;
        }
      return false;
    },
    hitTestSelf$1: function(position) {
      return false;
    },
    hitTestChildren$2$position: function(result, position) {
      return false;
    },
    applyPaintTransform$2: function(child, transform) {
      var offset,
        t1 = child.parentData;
      t1.toString;
      offset = type$.BoxParentData._as(t1).offset;
      transform.translate$2(0, offset._dx, offset._dy);
    },
    globalToLocal$1: function(point) {
      var n, t1, i, d, s,
        transform = this.getTransformTo$1(0, null);
      if (transform.copyInverse$1(transform) === 0)
        return C.Offset_0_0;
      n = new E.Vector3(new Float64Array(3));
      n.setValues$3(0, 0, 1);
      t1 = new E.Vector3(new Float64Array(3));
      t1.setValues$3(0, 0, 0);
      i = transform.perspectiveTransform$1(t1);
      t1 = new E.Vector3(new Float64Array(3));
      t1.setValues$3(0, 0, 1);
      d = transform.perspectiveTransform$1(t1).$sub(0, i);
      t1 = new E.Vector3(new Float64Array(3));
      t1.setValues$3(point._dx, point._dy, 0);
      s = transform.perspectiveTransform$1(t1);
      t1 = s.$sub(0, d.scaled$1(n.dot$1(s) / n.dot$1(d)))._v3storage;
      return new P.Offset(t1[0], t1[1]);
    },
    get$paintBounds: function() {
      var t1 = this._size;
      return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    handleEvent$2: function($event, entry) {
      this.super$RenderObject$handleEvent($event, entry);
    }
  };
  S.RenderBox_getDryLayout_closure.prototype = {
    call$0: function() {
      return this.$this.computeDryLayout$1(this.constraints);
    },
    $signature: 193
  };
  S.RenderBox_getDistanceToActualBaseline_closure.prototype = {
    call$0: function() {
      return this.$this.computeDistanceToActualBaseline$1(this.baseline);
    },
    $signature: 194
  };
  S.RenderBoxContainerDefaultsMixin.prototype = {
    defaultComputeDistanceToHighestActualBaseline$1: function(baseline) {
      var t1, result, t2, candidate,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"), result = null; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        candidate = child.getDistanceToActualBaseline$1(baseline);
        if (candidate != null) {
          candidate += t2.offset._dy;
          result = result != null ? Math.min(result, candidate) : candidate;
        }
        child = t2.ContainerParentDataMixin_nextSibling;
      }
      return result;
    },
    defaultHitTestChildren$2$position: function(result, position) {
      var t2, child, _box_0 = {},
        t1 = _box_0.child = this.ContainerRenderObjectMixin__lastChild;
      for (t2 = H._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"); t1 != null; t1 = child) {
        t1 = t1.parentData;
        t1.toString;
        t2._as(t1);
        if (result.addWithPaintOffset$3$hitTest$offset$position(new S.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure(_box_0, position, t1), t1.offset, position))
          return true;
        child = t1.ContainerParentDataMixin_previousSibling;
        _box_0.child = child;
      }
      return false;
    },
    defaultPaint$2: function(context, offset) {
      var t1, t2, t3, t4, t5,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("RenderBoxContainerDefaultsMixin.1"), t2 = offset._dx, t3 = offset._dy; child != null;) {
        t4 = child.parentData;
        t4.toString;
        t1._as(t4);
        t5 = t4.offset;
        context.paintChild$2(child, new P.Offset(t5._dx + t2, t5._dy + t3));
        child = t4.ContainerParentDataMixin_nextSibling;
      }
    }
  };
  S.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure.prototype = {
    call$2: function(result, transformed) {
      return this._box_0.child.hitTest$2$position(result, transformed);
    },
    $signature: 20
  };
  S._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin.prototype = {
    detach$0: function(_) {
      this.super$ParentData$detach(0);
    }
  };
  V.CustomPainter.prototype = {
    addListener$1: function(_, listener) {
      var t1 = this._repaint;
      if (t1 != null)
        t1._systemFontsCallbacks.add$1(0, listener);
      return null;
    },
    removeListener$1: function(_, listener) {
      var t1 = this._repaint;
      if (t1 != null)
        t1._systemFontsCallbacks.remove$1(0, listener);
      return null;
    },
    hitTest$1: function(position) {
      return null;
    },
    toString$0: function(_) {
      var t1 = "<optimized out>#" + Y.shortHash(this) + "(",
        t2 = this._repaint;
      t2 = t2 == null ? null : "Instance of '" + H.Primitives_objectTypeName(t2) + "'";
      return t1 + (t2 == null ? "" : t2) + ")";
    }
  };
  V.RenderCustomPaint.prototype = {
    set$painter: function(value) {
      var t1 = this._custom_paint$_painter;
      if (t1 == value)
        return;
      this._custom_paint$_painter = value;
      this._didUpdatePainter$2(value, t1);
    },
    set$foregroundPainter: function(value) {
      var t1 = this._foregroundPainter;
      if (t1 == value)
        return;
      this._foregroundPainter = value;
      this._didUpdatePainter$2(value, t1);
    },
    _didUpdatePainter$2: function(newPainter, oldPainter) {
      var _this = this,
        t1 = newPainter == null;
      if (t1)
        _this.markNeedsPaint$0();
      else if (oldPainter == null || H.getRuntimeType(newPainter) !== H.getRuntimeType(oldPainter) || newPainter.shouldRepaint$1(oldPainter))
        _this.markNeedsPaint$0();
      if (_this._node$_owner != null) {
        if (oldPainter != null)
          oldPainter.removeListener$1(0, _this.get$markNeedsPaint());
        if (!t1)
          newPainter.addListener$1(0, _this.get$markNeedsPaint());
      }
      if (t1) {
        if (_this._node$_owner != null)
          _this.markNeedsSemanticsUpdate$0();
      } else if (oldPainter == null || H.getRuntimeType(newPainter) !== H.getRuntimeType(oldPainter) || newPainter.shouldRepaint$1(oldPainter))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$preferredSize: function(value) {
      if (this._preferredSize.$eq(0, value))
        return;
      this._preferredSize = value;
      this.markNeedsLayout$0();
    },
    attach$1: function(owner) {
      var t1, _this = this;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      t1 = _this._custom_paint$_painter;
      if (t1 != null)
        t1.addListener$1(0, _this.get$markNeedsPaint());
      t1 = _this._foregroundPainter;
      if (t1 != null)
        t1.addListener$1(0, _this.get$markNeedsPaint());
    },
    detach$0: function(_) {
      var _this = this,
        t1 = _this._custom_paint$_painter;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$markNeedsPaint());
      t1 = _this._foregroundPainter;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$markNeedsPaint());
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    hitTestChildren$2$position: function(result, position) {
      var t1 = this._foregroundPainter;
      if (t1 != null) {
        t1 = t1.hitTest$1(position);
        t1 = t1 === true;
      } else
        t1 = false;
      if (t1)
        return true;
      return this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    hitTestSelf$1: function(position) {
      var t1;
      if (this._custom_paint$_painter != null)
        t1 = true;
      else
        t1 = false;
      return t1;
    },
    performLayout$0: function() {
      this.super$RenderProxyBoxMixin$performLayout();
      this.markNeedsSemanticsUpdate$0();
    },
    computeSizeForNoChild$1: function(constraints) {
      return constraints.constrain$1(this._preferredSize);
    },
    _paintWithPainter$3: function(canvas, offset, painter) {
      var t1;
      canvas.save$0(0);
      if (!offset.$eq(0, C.Offset_0_0))
        canvas.translate$2(0, offset._dx, offset._dy);
      t1 = this._size;
      t1.toString;
      painter.paint$2(canvas, t1);
      canvas.restore$0(0);
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (_this._custom_paint$_painter != null) {
        t1 = context.get$canvas(context);
        t2 = _this._custom_paint$_painter;
        t2.toString;
        _this._paintWithPainter$3(t1, offset, t2);
        _this._setRasterCacheHints$1(context);
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (_this._foregroundPainter != null) {
        t1 = context.get$canvas(context);
        t2 = _this._foregroundPainter;
        t2.toString;
        _this._paintWithPainter$3(t1, offset, t2);
        _this._setRasterCacheHints$1(context);
      }
    },
    _setRasterCacheHints$1: function(context) {
    },
    describeSemanticsConfiguration$1: function(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      this._backgroundSemanticsBuilder = null;
      this._foregroundSemanticsBuilder = null;
      config._isSemanticBoundary = false;
    },
    assembleSemanticsNode$3: function(node, config, children) {
      var t1, hasBackgroundSemantics, hasForegroundSemantics, t2, _this = this;
      _this._backgroundSemanticsNodes = V.RenderCustomPaint__updateSemanticsChildren(_this._backgroundSemanticsNodes, C.List_empty8);
      _this._foregroundSemanticsNodes = V.RenderCustomPaint__updateSemanticsChildren(_this._foregroundSemanticsNodes, C.List_empty8);
      t1 = _this._backgroundSemanticsNodes;
      hasBackgroundSemantics = t1 != null && !t1.get$isEmpty(t1);
      t1 = _this._foregroundSemanticsNodes;
      hasForegroundSemantics = t1 != null && !t1.get$isEmpty(t1);
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNode);
      if (hasBackgroundSemantics) {
        t2 = _this._backgroundSemanticsNodes;
        t2.toString;
        C.JSArray_methods.addAll$1(t1, t2);
      }
      C.JSArray_methods.addAll$1(t1, children);
      if (hasForegroundSemantics) {
        t2 = _this._foregroundSemanticsNodes;
        t2.toString;
        C.JSArray_methods.addAll$1(t1, t2);
      }
      _this.super$RenderObject$assembleSemanticsNode(node, config, t1);
    },
    clearSemantics$0: function() {
      this.super$RenderObject$clearSemantics();
      this._foregroundSemanticsNodes = this._backgroundSemanticsNodes = null;
    }
  };
  V.RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_set.prototype = {
    call$1: function(t1) {
      var t2 = this._box_0;
      if (t2._oldKeyedChildren == null)
        return t2._oldKeyedChildren = t1;
      else
        throw H.wrapException(H.LateError$localAI("oldKeyedChildren"));
    },
    $signature: 195
  };
  V.RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._oldKeyedChildren;
      return t1 == null ? H.throwExpression(H.LateError$localNI("oldKeyedChildren")) : t1;
    },
    $signature: 196
  };
  V.RenderErrorBox.prototype = {
    RenderErrorBox$1: function(message) {
      var builder, t1, exception;
      try {
        t1 = this.message;
        if (t1 !== "") {
          builder = P.ParagraphBuilder_ParagraphBuilder($.$get$RenderErrorBox_paragraphStyle());
          J.pushStyle$1$x(builder, $.$get$RenderErrorBox_textStyle());
          J.addText$1$x(builder, t1);
          this._paragraph = J.build$0$x(builder);
        } else
          this._paragraph = null;
      } catch (exception) {
        H.unwrapException(exception);
      }
    },
    get$sizedByParent: function() {
      return true;
    },
    hitTestSelf$1: function(position) {
      return true;
    },
    computeDryLayout$1: function(constraints) {
      return constraints.constrain$1(C.Size_100000_100000);
    },
    paint$2: function(context, offset) {
      var width, left, $top, t1, t2, t3, t4, t5, t6, exception, _this = this;
      try {
        t1 = context.get$canvas(context);
        t2 = _this._size;
        t3 = offset._dx;
        t4 = offset._dy;
        t5 = t2._dx;
        t2 = t2._dy;
        t6 = H._detectRenderer();
        t6 = t6 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
        t6.set$color(0, $.$get$RenderErrorBox_backgroundColor());
        t1.drawRect$2(0, new P.Rect(t3, t4, t3 + t5, t4 + t2), t6);
        t1 = _this._paragraph;
        if (t1 != null) {
          width = _this._size._dx;
          left = 0;
          $top = 0;
          if (width > 328) {
            width -= 128;
            left += 64;
          }
          t1.layout$1(0, new P.ParagraphConstraints(width));
          t1 = _this._size._dy;
          t2 = _this._paragraph;
          if (t1 > 96 + t2.get$height(t2) + 12)
            $top += 96;
          t1 = context.get$canvas(context);
          t2 = _this._paragraph;
          t2.toString;
          t1.drawParagraph$2(0, t2, offset.$add(0, new P.Offset(left, $top)));
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
    }
  };
  T.AnnotationResult.prototype = {};
  T.Layer0.prototype = {
    markNeedsAddToScene$0: function() {
      if (this._needsAddToScene)
        return;
      this._needsAddToScene = true;
    },
    set$engineLayer: function(value) {
      var t1, t2, _this = this;
      _this._engineLayer = value;
      t1 = type$.nullable_ContainerLayer;
      if (t1._as(B.AbstractNode.prototype.get$parent.call(_this, _this)) != null) {
        t1._as(B.AbstractNode.prototype.get$parent.call(_this, _this)).toString;
        t2 = true;
      } else
        t2 = false;
      if (t2)
        t1._as(B.AbstractNode.prototype.get$parent.call(_this, _this)).markNeedsAddToScene$0();
    },
    updateSubtreeNeedsAddToScene$0: function() {
      this._needsAddToScene = this._needsAddToScene || false;
    },
    dropChild$1: function(child) {
      this.markNeedsAddToScene$0();
      this.super$AbstractNode$dropChild(child);
    },
    remove$0: function(_) {
      var t2, t3, _this = this,
        t1 = type$.nullable_ContainerLayer._as(B.AbstractNode.prototype.get$parent.call(_this, _this));
      if (t1 != null) {
        t2 = _this._previousSibling;
        t3 = _this._nextSibling;
        if (t2 == null)
          t1._firstChild = t3;
        else
          t2._nextSibling = t3;
        t3 = _this._nextSibling;
        if (t3 == null)
          t1._lastChild = t2;
        else
          t3._previousSibling = t2;
        _this._nextSibling = _this._previousSibling = null;
        t1.dropChild$1(_this);
      }
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return false;
    },
    findAnnotations$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    },
    find$1$1: function(_, localPosition, $S) {
      var t1 = H.setRuntimeTypeInfo([], $S._eval$1("JSArray<AnnotationEntry<0>>"));
      this.findAnnotations$3$onlyFirst(new T.AnnotationResult(t1, $S._eval$1("AnnotationResult<0>")), localPosition, true);
      return t1.length === 0 ? null : C.JSArray_methods.get$first(t1).get$annotation();
    },
    _addToSceneWithRetainedRendering$1: function(builder) {
      var t1, _this = this;
      if (!_this._needsAddToScene && _this._engineLayer != null) {
        t1 = _this._engineLayer;
        t1.toString;
        builder.addRetained$1(t1);
        return;
      }
      _this.addToScene$1(builder);
      _this._needsAddToScene = false;
    },
    toStringShort$0: function() {
      var t1 = this.super$DiagnosticableTreeMixin$toStringShort();
      return t1 + (this._node$_owner == null ? " DETACHED" : "");
    },
    $isDiagnosticableTree: 1
  };
  T.PictureLayer.prototype = {
    addToScene$2: function(builder, layerOffset) {
      var t1 = this._picture;
      t1.toString;
      builder.addPicture$4$isComplexHint$willChangeHint(layerOffset, t1, this._isComplexHint, this._willChangeHint);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return false;
    },
    findAnnotations$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    }
  };
  T.PerformanceOverlayLayer.prototype = {
    addToScene$2: function(builder, layerOffset) {
      var shiftedOverlayRect = this._overlayRect;
      shiftedOverlayRect = layerOffset.$eq(0, C.Offset_0_0) ? shiftedOverlayRect : shiftedOverlayRect.shift$1(layerOffset);
      builder.addPerformanceOverlay$2(this.optionsMask, shiftedOverlayRect);
      builder.setRasterizerTracingThreshold$1(this.rasterizerThreshold);
      builder.setCheckerboardRasterCacheImages$1(false);
      builder.setCheckerboardOffscreenLayers$1(false);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return false;
    },
    findAnnotations$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    }
  };
  T.ContainerLayer0.prototype = {
    buildScene$1: function(builder) {
      this.updateSubtreeNeedsAddToScene$0();
      this.addToScene$1(builder);
      this._needsAddToScene = false;
      return builder.build$0(0);
    },
    updateSubtreeNeedsAddToScene$0: function() {
      var child, _this = this;
      _this.super$Layer$updateSubtreeNeedsAddToScene();
      child = _this._firstChild;
      for (; child != null;) {
        child.updateSubtreeNeedsAddToScene$0();
        _this._needsAddToScene = _this._needsAddToScene || child._needsAddToScene;
        child = child._nextSibling;
      }
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      var child, t1, t2;
      for (child = this._lastChild, t1 = result._layer$_entries; child != null; child = child._previousSibling) {
        if (child.findAnnotations$3$onlyFirst(result, localPosition, true))
          return true;
        t2 = t1.length;
        if (t2 !== 0)
          return false;
      }
      return false;
    },
    findAnnotations$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    },
    attach$1: function(owner) {
      var child;
      this.super$AbstractNode$attach(owner);
      child = this._firstChild;
      for (; child != null;) {
        child.attach$1(owner);
        child = child._nextSibling;
      }
    },
    detach$0: function(_) {
      var child;
      this.super$AbstractNode$detach(0);
      child = this._firstChild;
      for (; child != null;) {
        child.detach$0(0);
        child = child._nextSibling;
      }
    },
    append$1: function(_, child) {
      var t1, _this = this;
      _this.markNeedsAddToScene$0();
      _this.super$AbstractNode$adoptChild(child);
      t1 = child._previousSibling = _this._lastChild;
      if (t1 != null)
        t1._nextSibling = child;
      _this._lastChild = child;
      if (_this._firstChild == null)
        _this._firstChild = child;
    },
    removeAllChildren$0: function() {
      var next, _this = this,
        child = _this._firstChild;
      for (; child != null; child = next) {
        next = child._nextSibling;
        child._nextSibling = child._previousSibling = null;
        _this.markNeedsAddToScene$0();
        _this.super$AbstractNode$dropChild(child);
      }
      _this._lastChild = _this._firstChild = null;
    },
    addToScene$2: function(builder, layerOffset) {
      this.addChildrenToScene$2(builder, layerOffset);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    },
    addChildrenToScene$2: function(builder, childOffset) {
      var t1, t2, t3,
        child = this._firstChild;
      for (t1 = childOffset._dx, t2 = childOffset._dy; child != null;) {
        t3 = C.Offset_0_0._dx === t1 && C.Offset_0_0._dy === t2;
        if (t3)
          child._addToSceneWithRetainedRendering$1(builder);
        else
          child.addToScene$2(builder, childOffset);
        child = child._nextSibling;
      }
    },
    addChildrenToScene$1: function(builder) {
      return this.addChildrenToScene$2(builder, C.Offset_0_0);
    },
    debugDescribeChildren$0: function() {
      var count,
        children = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode),
        child = this._firstChild;
      if (child == null)
        return children;
      for (count = 1; true;) {
        child.toString;
        children.push(new Y.DiagnosticableTreeNode(child, "child " + count, true, true, null, null));
        if (child === this._lastChild)
          break;
        ++count;
        child = child._nextSibling;
      }
      return children;
    }
  };
  T.OffsetLayer.prototype = {
    set$offset: function(_, value) {
      if (!value.$eq(0, this._layer$_offset))
        this.markNeedsAddToScene$0();
      this._layer$_offset = value;
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.super$ContainerLayer$findAnnotations(result, localPosition.$sub(0, this._layer$_offset), true);
    },
    findAnnotations$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    },
    addToScene$2: function(builder, layerOffset) {
      var _this = this,
        t1 = _this._layer$_offset;
      _this.set$engineLayer(builder.pushOffset$3$oldLayer(layerOffset._dx + t1._dx, layerOffset._dy + t1._dy, type$.nullable_OffsetEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0(0);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T.ClipRectLayer.prototype = {
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      if (!this._layer$_clipRect.contains$1(0, localPosition))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, true);
    },
    findAnnotations$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    },
    addToScene$2: function(builder, layerOffset) {
      var shiftedClipRect, _this = this,
        t1 = layerOffset.$eq(0, C.Offset_0_0),
        t2 = _this._layer$_clipRect;
      if (t1) {
        t2.toString;
        shiftedClipRect = t2;
      } else
        shiftedClipRect = t2.shift$1(layerOffset);
      _this.set$engineLayer(builder.pushClipRect$3$clipBehavior$oldLayer(shiftedClipRect, _this._layer$_clipBehavior, type$.nullable_ClipRectEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$2(builder, layerOffset);
      builder.pop$0(0);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T.ClipPathLayer.prototype = {
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      if (!this._clipPath.contains$1(0, localPosition))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, true);
    },
    findAnnotations$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    },
    addToScene$2: function(builder, layerOffset) {
      var shiftedPath, _this = this,
        t1 = layerOffset.$eq(0, C.Offset_0_0),
        t2 = _this._clipPath;
      if (t1) {
        t2.toString;
        shiftedPath = t2;
      } else
        shiftedPath = t2.shift$1(layerOffset);
      _this.set$engineLayer(builder.pushClipPath$3$clipBehavior$oldLayer(shiftedPath, _this._layer$_clipBehavior, type$.nullable_ClipPathEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$2(builder, layerOffset);
      builder.pop$0(0);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T.TransformLayer.prototype = {
    set$transform: function(_, value) {
      var _this = this;
      if (value.$eq(0, _this._layer$_transform))
        return;
      _this._layer$_transform = value;
      _this._inverseDirty = true;
      _this.markNeedsAddToScene$0();
    },
    addToScene$2: function(builder, layerOffset) {
      var totalOffset, t1, t2, _this = this;
      _this._lastEffectiveTransform = _this._layer$_transform;
      totalOffset = _this._layer$_offset.$add(0, layerOffset);
      if (!totalOffset.$eq(0, C.Offset_0_0)) {
        t1 = E.Matrix4_Matrix4$translationValues(totalOffset._dx, totalOffset._dy, 0);
        t2 = _this._lastEffectiveTransform;
        t2.toString;
        t1.multiply$1(0, t2);
        _this._lastEffectiveTransform = t1;
      }
      _this.set$engineLayer(builder.pushTransform$2$oldLayer(_this._lastEffectiveTransform._m4storage, type$.nullable_TransformEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0(0);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    },
    _transformOffset$1: function(localPosition) {
      var t1, _this = this;
      if (_this._inverseDirty) {
        t1 = _this._layer$_transform;
        t1.toString;
        _this._invertedTransform = E.Matrix4_tryInvert(F.PointerEvent_removePerspectiveTransform(t1));
        _this._inverseDirty = false;
      }
      t1 = _this._invertedTransform;
      if (t1 == null)
        return null;
      return T.MatrixUtils_transformPoint(t1, localPosition);
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      var transformedOffset = this._transformOffset$1(localPosition);
      if (transformedOffset == null)
        return false;
      return this.super$OffsetLayer$findAnnotations(result, transformedOffset, true);
    },
    findAnnotations$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    }
  };
  T.OpacityLayer.prototype = {
    addToScene$2: function(builder, layerOffset) {
      var t1, _this = this,
        enabled = _this._firstChild != null;
      if (enabled) {
        t1 = _this._layer$_alpha;
        t1.toString;
        _this.set$engineLayer(builder.pushOpacity$3$offset$oldLayer(t1, _this._layer$_offset.$add(0, layerOffset), type$.nullable_OpacityEngineLayer._as(_this._engineLayer)));
      } else
        _this.set$engineLayer(null);
      _this.addChildrenToScene$1(builder);
      if (enabled)
        builder.pop$0(0);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T.PhysicalModelLayer.prototype = {
    set$clipPath: function(_, value) {
      if (value !== this._clipPath) {
        this._clipPath = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$clipBehavior: function(value) {
      if (value !== this._layer$_clipBehavior) {
        this._layer$_clipBehavior = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$elevation: function(_, value) {
      if (value !== this._layer$_elevation) {
        this._layer$_elevation = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$color: function(_, value) {
      if (!value.$eq(0, this._layer$_color)) {
        this._layer$_color = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$shadowColor: function(_, value) {
      if (!value.$eq(0, this._layer$_shadowColor)) {
        this._layer$_shadowColor = value;
        this.markNeedsAddToScene$0();
      }
    },
    findAnnotations$1$3$onlyFirst: function(result, localPosition, onlyFirst) {
      if (!this._clipPath.contains$1(0, localPosition))
        return false;
      return this.super$ContainerLayer$findAnnotations(result, localPosition, true);
    },
    findAnnotations$3$onlyFirst: function(result, localPosition, onlyFirst) {
      return this.findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, type$.Object);
    },
    addToScene$2: function(builder, layerOffset) {
      var t3, t4, _this = this,
        t1 = layerOffset.$eq(0, C.Offset_0_0),
        t2 = _this._clipPath;
      if (t1) {
        t2.toString;
        t1 = t2;
      } else
        t1 = t2.shift$1(layerOffset);
      t2 = _this._layer$_elevation;
      t2.toString;
      t3 = _this._layer$_color;
      t3.toString;
      t4 = _this._layer$_shadowColor;
      _this.set$engineLayer(builder.pushPhysicalShape$6$clipBehavior$color$elevation$oldLayer$path$shadowColor(_this._layer$_clipBehavior, t3, t2, type$.nullable_PhysicalShapeEngineLayer._as(_this._engineLayer), t1, t4));
      _this.addChildrenToScene$2(builder, layerOffset);
      builder.pop$0(0);
    },
    addToScene$1: function(builder) {
      return this.addToScene$2(builder, C.Offset_0_0);
    }
  };
  T._Layer_AbstractNode_DiagnosticableTreeMixin.prototype = {};
  A._MouseState.prototype = {
    replaceAnnotations$1: function(value) {
      var previous = this._annotations;
      this._annotations = value;
      return previous;
    },
    toString$0: function(_) {
      var _s16_ = "<optimized out>#",
        describeLatestEvent = "latestEvent: " + (_s16_ + Y.shortHash(this._latestEvent)),
        t1 = this._annotations,
        describeAnnotations = "annotations: [list of " + t1.get$length(t1) + "]";
      return _s16_ + Y.shortHash(this) + "(" + describeLatestEvent + ", " + describeAnnotations + ")";
    }
  };
  A._MouseTrackerUpdateDetails.prototype = {
    get$device: function(_) {
      var t1 = this.previousEvent;
      return t1.get$device(t1);
    }
  };
  A.MouseTracker.prototype = {
    _hitTestResultToAnnotations$1: function(result) {
      var t2, t3, _i, entry, t4, t5,
        t1 = type$.MouseTrackerAnnotation,
        annotations = type$.LinkedHashMap_MouseTrackerAnnotation_Matrix4._as(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Matrix4));
      for (t2 = result._path, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        entry = t2[_i];
        if (t1._is(entry.get$target(entry))) {
          t4 = t1._as(entry.get$target(entry));
          t5 = entry._transform;
          t5.toString;
          annotations.$indexSet(0, t4, t5);
        }
      }
      return annotations;
    },
    _findAnnotations$2: function(state, hitTest) {
      var t1 = state._latestEvent,
        globalPosition = t1.get$position(t1);
      t1 = state._latestEvent;
      if (!this._mouseStates.containsKey$1(0, t1.get$device(t1)))
        return type$.LinkedHashMap_MouseTrackerAnnotation_Matrix4._as(P.LinkedHashMap_LinkedHashMap$_empty(type$.MouseTrackerAnnotation, type$.Matrix4));
      return this._hitTestResultToAnnotations$1(hitTest.call$1(globalPosition));
    },
    _handleDeviceUpdate$1: function(details) {
      var t1, t2;
      A.MouseTracker__handleDeviceUpdateMouseEvents(details);
      t1 = details.get$device(details);
      t2 = details.nextAnnotations;
      t2 = t2.get$keys(t2);
      this._mouseCursorMixin.handleDeviceCursorUpdate$3(t1, details.triggeringEvent, H.MappedIterable_MappedIterable(t2, new A.MouseTracker__handleDeviceUpdate_closure(), H._instanceType(t2)._eval$1("Iterable.E"), type$.MouseCursor));
    },
    updateWithEvent$2: function($event, getResult) {
      var device, t1, existingState, mouseWasConnected,
        result = type$.PointerRemovedEvent._is($event) ? O.HitTestResult$() : getResult.call$0();
      if ($event.get$kind($event) !== C.PointerDeviceKind_1)
        return;
      if (type$.PointerSignalEvent._is($event))
        return;
      device = $event.get$device($event);
      t1 = this._mouseStates;
      existingState = t1.$index(0, device);
      if (!A.MouseTracker__shouldMarkStateDirty(existingState, $event))
        return;
      mouseWasConnected = t1.get$isNotEmpty(t1);
      new A.MouseTracker_updateWithEvent_closure(this, existingState, $event, device, result).call$0();
      if (mouseWasConnected !== t1.get$isNotEmpty(t1))
        this.notifyListeners$0();
    },
    updateAllDevices$1: function(hitTest) {
      new A.MouseTracker_updateAllDevices_closure(this, hitTest).call$0();
    }
  };
  A.MouseTracker__handleDeviceUpdate_closure.prototype = {
    call$1: function(annotaion) {
      return annotaion.get$cursor(annotaion);
    },
    $signature: 197
  };
  A.MouseTracker_updateWithEvent_closure.prototype = {
    call$0: function() {
      var _this = this;
      new A.MouseTracker_updateWithEvent__closure(_this.$this, _this.existingState, _this.event, _this.device, _this.result).call$0();
    },
    $signature: 0
  };
  A.MouseTracker_updateWithEvent__closure.prototype = {
    call$0: function() {
      var t2, t3, targetState, previous, nextAnnotations, _this = this,
        t1 = _this.existingState;
      if (t1 == null) {
        t2 = _this.event;
        _this.$this._mouseStates.$indexSet(0, _this.device, new A._MouseState(P.LinkedHashMap_LinkedHashMap(type$.MouseTrackerAnnotation, type$.Matrix4), t2));
      } else {
        t2 = _this.event;
        if (type$.PointerRemovedEvent._is(t2))
          _this.$this._mouseStates.remove$1(0, t2.get$device(t2));
      }
      t3 = _this.$this;
      targetState = t3._mouseStates.$index(0, _this.device);
      if (targetState == null) {
        t1.toString;
        targetState = t1;
      }
      previous = targetState._latestEvent;
      targetState._latestEvent = t2;
      nextAnnotations = type$.PointerRemovedEvent._is(t2) ? type$.LinkedHashMap_MouseTrackerAnnotation_Matrix4._as(P.LinkedHashMap_LinkedHashMap$_empty(type$.MouseTrackerAnnotation, type$.Matrix4)) : t3._hitTestResultToAnnotations$1(_this.result);
      t3._handleDeviceUpdate$1(new A._MouseTrackerUpdateDetails(targetState.replaceAnnotations$1(nextAnnotations), nextAnnotations, previous, t2));
    },
    $signature: 0
  };
  A.MouseTracker_updateAllDevices_closure.prototype = {
    call$0: function() {
      var t1, t2, t3, t4, lastEvent, nextAnnotations, previous;
      for (t1 = this.$this, t2 = t1._mouseStates, t2 = t2.get$values(t2), t2 = t2.get$iterator(t2), t3 = this.hitTest; t2.moveNext$0();) {
        t4 = t2.get$current(t2);
        lastEvent = t4._latestEvent;
        nextAnnotations = t1._findAnnotations$2(t4, t3);
        previous = t4._annotations;
        t4._annotations = nextAnnotations;
        t1._handleDeviceUpdate$1(new A._MouseTrackerUpdateDetails(previous, nextAnnotations, lastEvent, null));
      }
    },
    $signature: 0
  };
  A.MouseTracker__handleDeviceUpdateMouseEvents_closure.prototype = {
    call$2: function(annotation, transform) {
      var t1;
      if (!this.nextAnnotations.containsKey$1(0, annotation))
        if (annotation.get$validForMouseTracker() && annotation.get$onExit(annotation) != null) {
          t1 = annotation.get$onExit(annotation);
          t1.toString;
          t1.call$1(this.baseExitEvent.transformed$1(this.lastAnnotations.$index(0, annotation)));
        }
    },
    $signature: 198
  };
  A.MouseTracker__handleDeviceUpdateMouseEvents_closure0.prototype = {
    call$1: function(annotation) {
      return !this.lastAnnotations.containsKey$1(0, annotation);
    },
    $signature: 199
  };
  A.__MouseTrackerUpdateDetails_Object_Diagnosticable.prototype = {};
  K.ParentData.prototype = {
    detach$0: function(_) {
    },
    toString$0: function(_) {
      return "<none>";
    }
  };
  K.PaintingContext.prototype = {
    paintChild$2: function(child, offset) {
      var t1;
      if (child.get$isRepaintBoundary()) {
        this.stopRecordingIfNeeded$0();
        if (child._needsPaint)
          K.PaintingContext__repaintCompositedChild(child, null, true);
        t1 = child._layer;
        t1.toString;
        type$.OffsetLayer._as(t1).set$offset(0, offset);
        t1 = child._layer;
        t1.toString;
        this.appendLayer$1(t1);
      } else
        child._paintWithContext$2(this, offset);
    },
    appendLayer$1: function(layer) {
      layer.remove$0(0);
      this._containerLayer.append$1(0, layer);
    },
    get$canvas: function(_) {
      var t1, _this = this;
      if (_this._canvas == null) {
        _this._currentLayer = new T.PictureLayer(_this.estimatedBounds);
        t1 = P.PictureRecorder_PictureRecorder();
        _this._recorder = t1;
        _this._canvas = P.Canvas_Canvas(t1, null);
        t1 = _this._currentLayer;
        t1.toString;
        _this._containerLayer.append$1(0, t1);
      }
      t1 = _this._canvas;
      t1.toString;
      return t1;
    },
    stopRecordingIfNeeded$0: function() {
      var t1, t2, _this = this;
      if (_this._canvas == null)
        return;
      t1 = _this._currentLayer;
      t1.toString;
      t2 = _this._recorder.endRecording$0();
      t1.markNeedsAddToScene$0();
      t1._picture = t2;
      _this._canvas = _this._recorder = _this._currentLayer = null;
    },
    setIsComplexHint$0: function() {
      var t1 = this._currentLayer;
      if (t1 != null)
        if (!t1._isComplexHint) {
          t1._isComplexHint = true;
          t1.markNeedsAddToScene$0();
        }
    },
    pushLayer$4$childPaintBounds: function(childLayer, painter, offset, childPaintBounds) {
      var childContext, _this = this;
      if (childLayer._firstChild != null)
        childLayer.removeAllChildren$0();
      _this.stopRecordingIfNeeded$0();
      _this.appendLayer$1(childLayer);
      childContext = _this.createChildContext$2(childLayer, childPaintBounds == null ? _this.estimatedBounds : childPaintBounds);
      painter.call$2(childContext, offset);
      childContext.stopRecordingIfNeeded$0();
    },
    pushLayer$3: function(childLayer, painter, offset) {
      return this.pushLayer$4$childPaintBounds(childLayer, painter, offset, null);
    },
    createChildContext$2: function(childLayer, bounds) {
      return new K.PaintingContext(childLayer, bounds);
    },
    pushClipRect$6$clipBehavior$oldLayer: function(needsCompositing, offset, clipRect, painter, clipBehavior, oldLayer) {
      var layer,
        offsetClipRect = clipRect.shift$1(offset);
      if (needsCompositing) {
        layer = oldLayer == null ? new T.ClipRectLayer(C.Clip_1) : oldLayer;
        if (!offsetClipRect.$eq(0, layer._layer$_clipRect)) {
          layer._layer$_clipRect = offsetClipRect;
          layer.markNeedsAddToScene$0();
        }
        if (clipBehavior !== layer._layer$_clipBehavior) {
          layer._layer$_clipBehavior = clipBehavior;
          layer.markNeedsAddToScene$0();
        }
        this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetClipRect);
        return layer;
      } else {
        this.clipRectAndPaint$4(offsetClipRect, clipBehavior, offsetClipRect, new K.PaintingContext_pushClipRect_closure(this, painter, offset));
        return null;
      }
    },
    pushClipPath$7$clipBehavior$oldLayer: function(needsCompositing, offset, bounds, clipPath, painter, clipBehavior, oldLayer) {
      var layer,
        offsetBounds = bounds.shift$1(offset),
        offsetClipPath = clipPath.shift$1(offset);
      if (needsCompositing) {
        layer = oldLayer == null ? new T.ClipPathLayer(C.Clip_2) : oldLayer;
        if (offsetClipPath !== layer._clipPath) {
          layer._clipPath = offsetClipPath;
          layer.markNeedsAddToScene$0();
        }
        if (clipBehavior !== layer._layer$_clipBehavior) {
          layer._layer$_clipBehavior = clipBehavior;
          layer.markNeedsAddToScene$0();
        }
        this.pushLayer$4$childPaintBounds(layer, painter, offset, offsetBounds);
        return layer;
      } else {
        this.clipPathAndPaint$4(offsetClipPath, clipBehavior, offsetBounds, new K.PaintingContext_pushClipPath_closure(this, painter, offset));
        return null;
      }
    },
    pushTransform$5$oldLayer: function(needsCompositing, offset, transform, painter, oldLayer) {
      var layer, _this = this,
        t1 = offset._dx,
        t2 = offset._dy,
        effectiveTransform = E.Matrix4_Matrix4$translationValues(t1, t2, 0);
      effectiveTransform.multiply$1(0, transform);
      effectiveTransform.translate$2(0, -t1, -t2);
      if (needsCompositing) {
        layer = oldLayer == null ? new T.TransformLayer(null, C.Offset_0_0) : oldLayer;
        layer.set$transform(0, effectiveTransform);
        _this.pushLayer$4$childPaintBounds(layer, painter, offset, T.MatrixUtils_inverseTransformRect(effectiveTransform, _this.estimatedBounds));
        return layer;
      } else {
        t1 = _this.get$canvas(_this);
        t1.save$0(0);
        t1.transform$1(0, effectiveTransform._m4storage);
        painter.call$2(_this, offset);
        _this.get$canvas(_this).restore$0(0);
        return null;
      }
    },
    pushTransform$4: function(needsCompositing, offset, transform, painter) {
      return this.pushTransform$5$oldLayer(needsCompositing, offset, transform, painter, null);
    },
    pushOpacity$4$oldLayer: function(offset, alpha, painter, oldLayer) {
      var layer = oldLayer == null ? new T.OpacityLayer(C.Offset_0_0) : oldLayer;
      if (alpha !== layer._layer$_alpha) {
        layer._layer$_alpha = alpha;
        layer.markNeedsAddToScene$0();
      }
      if (!offset.$eq(0, layer._layer$_offset)) {
        layer._layer$_offset = offset;
        layer.markNeedsAddToScene$0();
      }
      this.pushLayer$3(layer, painter, C.Offset_0_0);
      return layer;
    },
    toString$0: function(_) {
      return "PaintingContext#" + H.Primitives_objectHashCode(this) + "(layer: " + this._containerLayer.toString$0(0) + ", canvas bounds: " + this.estimatedBounds.toString$0(0) + ")";
    }
  };
  K.PaintingContext_pushClipRect_closure.prototype = {
    call$0: function() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 0
  };
  K.PaintingContext_pushClipPath_closure.prototype = {
    call$0: function() {
      return this.painter.call$2(this.$this, this.offset);
    },
    $signature: 0
  };
  K.Constraints.prototype = {};
  K.SemanticsHandle.prototype = {
    dispose$0: function(_) {
      var t2,
        t1 = this.listener;
      if (t1 != null)
        this._object$_owner._semanticsOwner.removeListener$1(0, t1);
      t1 = this._object$_owner;
      if (--t1._outstandingSemanticsHandles === 0) {
        t2 = t1._semanticsOwner;
        t2._semantics$_dirtyNodes.clear$0(0);
        t2._nodes.clear$0(0);
        t2._detachedNodes.clear$0(0);
        t2.super$ChangeNotifier$dispose(0);
        t1._semanticsOwner = null;
        t1.onSemanticsOwnerDisposed.call$0();
      }
    }
  };
  K.PipelineOwner.prototype = {
    requestVisualUpdate$0: function() {
      this.onNeedVisualUpdate.call$0();
    },
    set$rootNode: function(value) {
      var t1 = this._rootNode;
      if (t1 === value)
        return;
      if (t1 != null)
        t1.detach$0(0);
      this._rootNode = value;
      value.attach$1(this);
    },
    flushLayout$0: function() {
      var dirtyNodes, node, t1, t2, t3, t4, t5, _i;
      P.Timeline_startSync("Layout", C.Map_9aZ6I, null);
      try {
        for (t1 = type$.nullable_PipelineOwner, t2 = type$.JSArray_RenderObject; t3 = this._nodesNeedingLayout, t3.length !== 0;) {
          dirtyNodes = t3;
          this._nodesNeedingLayout = H.setRuntimeTypeInfo([], t2);
          t3 = dirtyNodes;
          t4 = new K.PipelineOwner_flushLayout_closure();
          if (!!t3.immutable$list)
            H.throwExpression(P.UnsupportedError$("sort"));
          t5 = t3.length - 1;
          if (t5 - 0 <= 32)
            H.Sort__insertionSort(t3, 0, t5, t4);
          else
            H.Sort__dualPivotQuicksort(t3, 0, t5, t4);
          t4 = t3.length;
          _i = 0;
          for (; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i) {
            node = t3[_i];
            if (node._needsLayout) {
              t5 = node;
              t5 = t1._as(B.AbstractNode.prototype.get$owner.call(t5)) === this;
            } else
              t5 = false;
            if (t5)
              node._layoutWithoutResize$0();
          }
        }
      } finally {
        P.Timeline_finishSync();
      }
    },
    flushCompositingBits$0: function() {
      var t1, t2, t3, _i, node;
      P.Timeline_startSync("Compositing bits", null, null);
      t1 = this._nodesNeedingCompositingBitsUpdate;
      C.JSArray_methods.sort$1(t1, new K.PipelineOwner_flushCompositingBits_closure());
      for (t2 = t1.length, t3 = type$.nullable_PipelineOwner, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        if (node._needsCompositingBitsUpdate && t3._as(B.AbstractNode.prototype.get$owner.call(node)) === this)
          node._updateCompositingBits$0();
      }
      C.JSArray_methods.set$length(t1, 0);
      P.Timeline_finishSync();
    },
    flushPaint$0: function() {
      var dirtyNodes, node, t1, t2, t3, _i, t4;
      P.Timeline_startSync("Paint", C.Map_9aZ6I, null);
      try {
        dirtyNodes = this._nodesNeedingPaint;
        this._nodesNeedingPaint = H.setRuntimeTypeInfo([], type$.JSArray_RenderObject);
        for (t1 = dirtyNodes, J.sort$1$ax(t1, new K.PipelineOwner_flushPaint_closure()), t2 = t1.length, t3 = type$.nullable_PipelineOwner, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          if (node._needsPaint) {
            t4 = node;
            t4 = t3._as(B.AbstractNode.prototype.get$owner.call(t4)) === this;
          } else
            t4 = false;
          if (t4)
            if (node._layer._node$_owner != null)
              K.PaintingContext__repaintCompositedChild(node, null, false);
            else
              node._skippedPaintingOnLayer$0();
        }
      } finally {
        P.Timeline_finishSync();
      }
    },
    ensureSemantics$1$listener: function(listener) {
      var t1, _this = this;
      if (++_this._outstandingSemanticsHandles === 1) {
        t1 = type$.SemanticsNode;
        _this._semanticsOwner = new A.SemanticsOwner(P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1), P.LinkedHashSet_LinkedHashSet$_empty(t1), new P.LinkedList(type$.LinkedList__ListenerEntry));
        _this.onSemanticsOwnerCreated.call$0();
      }
      if (listener != null) {
        t1 = _this._semanticsOwner.ChangeNotifier__listeners;
        t1._insertBefore$3$updateFirst(t1._collection$_first, new B._ListenerEntry(listener), false);
      }
      return new K.SemanticsHandle(_this, listener);
    },
    ensureSemantics$0: function() {
      return this.ensureSemantics$1$listener(null);
    },
    flushSemantics$0: function() {
      var nodesToProcess, node, t1, nodesToProcess0, t2, t3, _i, t4, _this = this;
      if (_this._semanticsOwner == null)
        return;
      P.Timeline_startSync("Semantics", null, null);
      try {
        t1 = _this._nodesNeedingSemantics;
        nodesToProcess0 = P.List_List$of(t1, true, H._instanceType(t1)._eval$1("SetMixin.E"));
        C.JSArray_methods.sort$1(nodesToProcess0, new K.PipelineOwner_flushSemantics_closure());
        nodesToProcess = nodesToProcess0;
        t1.clear$0(0);
        for (t1 = nodesToProcess, t2 = t1.length, t3 = type$.nullable_PipelineOwner, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          if (node._needsSemanticsUpdate) {
            t4 = node;
            t4 = t3._as(B.AbstractNode.prototype.get$owner.call(t4)) === _this;
          } else
            t4 = false;
          if (t4)
            node._updateSemantics$0();
        }
        _this._semanticsOwner.sendSemanticsUpdate$0();
      } finally {
        P.Timeline_finishSync();
      }
    }
  };
  K.PipelineOwner_flushLayout_closure.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 36
  };
  K.PipelineOwner_flushCompositingBits_closure.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 36
  };
  K.PipelineOwner_flushPaint_closure.prototype = {
    call$2: function(a, b) {
      return b._node$_depth - a._node$_depth;
    },
    $signature: 36
  };
  K.PipelineOwner_flushSemantics_closure.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 36
  };
  K.RenderObject.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof K.ParentData))
        child.parentData = new K.ParentData();
    },
    adoptChild$1: function(child) {
      var _this = this;
      _this.setupParentData$1(child);
      _this.markNeedsLayout$0();
      _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsSemanticsUpdate$0();
      _this.super$AbstractNode$adoptChild(child);
    },
    dropChild$1: function(child) {
      var _this = this;
      child._cleanRelayoutBoundary$0();
      child.parentData.detach$0(0);
      child.parentData = null;
      _this.super$AbstractNode$dropChild(child);
      _this.markNeedsLayout$0();
      _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    visitChildren$1: function(visitor) {
    },
    _debugReportException$3: function(method, exception, stack) {
      U.FlutterError_reportError(new U.FlutterErrorDetails(exception, stack, "rendering library", U.ErrorDescription$("during " + method + "()"), new K.RenderObject__debugReportException_closure(this), false));
    },
    attach$1: function(owner) {
      var _this = this;
      _this.super$AbstractNode$attach(owner);
      if (_this._needsLayout && _this._relayoutBoundary != null) {
        _this._needsLayout = false;
        _this.markNeedsLayout$0();
      }
      if (_this._needsCompositingBitsUpdate) {
        _this._needsCompositingBitsUpdate = false;
        _this.markNeedsCompositingBitsUpdate$0();
      }
      if (_this._needsPaint && _this._layer != null) {
        _this._needsPaint = false;
        _this.markNeedsPaint$0();
      }
      if (_this._needsSemanticsUpdate && _this.get$_semanticsConfiguration()._isSemanticBoundary) {
        _this._needsSemanticsUpdate = false;
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    get$constraints: function() {
      var t1 = this._constraints;
      if (t1 == null)
        throw H.wrapException(P.StateError$("A RenderObject does not have any constraints before it has been laid out."));
      return t1;
    },
    markNeedsLayout$0: function() {
      var t1, _this = this;
      if (_this._needsLayout)
        return;
      if (_this._relayoutBoundary !== _this)
        _this.markParentNeedsLayout$0();
      else {
        _this._needsLayout = true;
        t1 = type$.nullable_PipelineOwner;
        if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingLayout.push(_this);
          t1._as(B.AbstractNode.prototype.get$owner.call(_this)).requestVisualUpdate$0();
        }
      }
    },
    markParentNeedsLayout$0: function() {
      this._needsLayout = true;
      var t1 = this._node$_parent;
      t1.toString;
      type$.RenderObject._as(t1).markNeedsLayout$0();
    },
    _cleanRelayoutBoundary$0: function() {
      var _this = this;
      if (_this._relayoutBoundary !== _this) {
        _this._relayoutBoundary = null;
        _this._needsLayout = true;
        _this.visitChildren$1(K.object_RenderObject__cleanChildRelayoutBoundary$closure());
      }
    },
    _layoutWithoutResize$0: function() {
      var e, stack, exception, _this = this;
      try {
        _this.performLayout$0();
        _this.markNeedsSemanticsUpdate$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        _this._debugReportException$3("performLayout", e, stack);
      }
      _this._needsLayout = false;
      _this.markNeedsPaint$0();
    },
    layout$2$parentUsesSize: function(_, constraints, parentUsesSize) {
      var e, stack, e0, stack0, t1, relayoutBoundary, exception, _this = this;
      if (parentUsesSize)
        if (!_this.get$sizedByParent())
          t1 = constraints.minWidth >= constraints.maxWidth && constraints.minHeight >= constraints.maxHeight || !(_this._node$_parent instanceof K.RenderObject);
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        relayoutBoundary = _this;
      else {
        t1 = _this._node$_parent;
        t1.toString;
        relayoutBoundary = type$.RenderObject._as(t1)._relayoutBoundary;
      }
      if (!_this._needsLayout && constraints.$eq(0, _this._constraints) && relayoutBoundary == _this._relayoutBoundary)
        return;
      _this._constraints = constraints;
      t1 = _this._relayoutBoundary;
      if (t1 != null && relayoutBoundary !== t1)
        _this.visitChildren$1(K.object_RenderObject__cleanChildRelayoutBoundary$closure());
      _this._relayoutBoundary = relayoutBoundary;
      if (_this.get$sizedByParent())
        try {
          _this.performResize$0();
        } catch (exception) {
          e = H.unwrapException(exception);
          stack = H.getTraceFromException(exception);
          _this._debugReportException$3("performResize", e, stack);
        }
      try {
        _this.performLayout$0();
        _this.markNeedsSemanticsUpdate$0();
      } catch (exception) {
        e0 = H.unwrapException(exception);
        stack0 = H.getTraceFromException(exception);
        _this._debugReportException$3("performLayout", e0, stack0);
      }
      _this._needsLayout = false;
      _this.markNeedsPaint$0();
    },
    layout$1: function($receiver, constraints) {
      return this.layout$2$parentUsesSize($receiver, constraints, false);
    },
    get$sizedByParent: function() {
      return false;
    },
    get$isRepaintBoundary: function() {
      return false;
    },
    get$alwaysNeedsCompositing: function() {
      return false;
    },
    get$layer: function(_) {
      return this._layer;
    },
    markNeedsCompositingBitsUpdate$0: function() {
      var t1, _this = this;
      if (_this._needsCompositingBitsUpdate)
        return;
      _this._needsCompositingBitsUpdate = true;
      t1 = _this._node$_parent;
      if (t1 instanceof K.RenderObject) {
        if (t1._needsCompositingBitsUpdate)
          return;
        if (!_this.get$isRepaintBoundary() && !t1.get$isRepaintBoundary()) {
          t1.markNeedsCompositingBitsUpdate$0();
          return;
        }
      }
      t1 = type$.nullable_PipelineOwner;
      if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null)
        t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingCompositingBitsUpdate.push(_this);
    },
    get$_needsCompositing: function() {
      var t1 = this.__RenderObject__needsCompositing;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_needsCompositing")) : t1;
    },
    _updateCompositingBits$0: function() {
      var oldNeedsCompositing, _this = this;
      if (!_this._needsCompositingBitsUpdate)
        return;
      oldNeedsCompositing = _this.get$_needsCompositing();
      _this.__RenderObject__needsCompositing = false;
      _this.visitChildren$1(new K.RenderObject__updateCompositingBits_closure(_this));
      if (_this.get$isRepaintBoundary() || _this.get$alwaysNeedsCompositing())
        _this.__RenderObject__needsCompositing = true;
      if (oldNeedsCompositing !== _this.get$_needsCompositing())
        _this.markNeedsPaint$0();
      _this._needsCompositingBitsUpdate = false;
    },
    markNeedsPaint$0: function() {
      var t1, _this = this;
      if (_this._needsPaint)
        return;
      _this._needsPaint = true;
      if (_this.get$isRepaintBoundary()) {
        t1 = type$.nullable_PipelineOwner;
        if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingPaint.push(_this);
          t1._as(B.AbstractNode.prototype.get$owner.call(_this)).requestVisualUpdate$0();
        }
      } else {
        t1 = _this._node$_parent;
        if (t1 instanceof K.RenderObject)
          t1.markNeedsPaint$0();
        else {
          t1 = type$.nullable_PipelineOwner;
          if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null)
            t1._as(B.AbstractNode.prototype.get$owner.call(_this)).requestVisualUpdate$0();
        }
      }
    },
    _skippedPaintingOnLayer$0: function() {
      var t1,
        node = this._node$_parent;
      for (; node instanceof K.RenderObject;) {
        if (node.get$isRepaintBoundary()) {
          t1 = node._layer;
          if (t1 == null)
            break;
          if (t1._node$_owner != null)
            break;
          node._needsPaint = true;
        }
        node = node._node$_parent;
      }
    },
    _paintWithContext$2: function(context, offset) {
      var e, stack, exception, _this = this;
      if (_this._needsLayout)
        return;
      _this._needsPaint = false;
      try {
        _this.paint$2(context, offset);
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        _this._debugReportException$3("paint", e, stack);
      }
    },
    paint$2: function(context, offset) {
    },
    applyPaintTransform$2: function(child, transform) {
    },
    getTransformTo$1: function(_, ancestor) {
      var rootNode, renderers, t2, renderer, t3, transform, index, index0,
        t1 = ancestor == null;
      if (t1) {
        rootNode = type$.nullable_PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(this))._rootNode;
        if (rootNode instanceof K.RenderObject)
          ancestor = rootNode;
      }
      renderers = H.setRuntimeTypeInfo([], type$.JSArray_RenderObject);
      t2 = type$.RenderObject;
      renderer = this;
      while (renderer !== ancestor) {
        renderers.push(renderer);
        t3 = renderer._node$_parent;
        t3.toString;
        t2._as(t3);
        renderer = t3;
      }
      if (!t1) {
        ancestor.toString;
        renderers.push(ancestor);
      }
      transform = new E.Matrix4(new Float64Array(16));
      transform.setIdentity$0();
      for (index = renderers.length - 1; index > 0; index = index0) {
        index0 = index - 1;
        renderers[index].applyPaintTransform$2(renderers[index0], transform);
      }
      return transform;
    },
    describeApproximatePaintClip$1: function(child) {
      return null;
    },
    describeSemanticsConfiguration$1: function(config) {
    },
    sendSemanticsEvent$1: function(semanticsEvent) {
      var t1;
      if (type$.nullable_PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(this))._semanticsOwner == null)
        return;
      t1 = this._semantics;
      if (t1 != null && !t1._isMergedIntoParent)
        t1.sendEvent$1(semanticsEvent);
      else {
        t1 = this._node$_parent;
        if (t1 != null)
          type$.RenderObject._as(t1).sendSemanticsEvent$1(semanticsEvent);
      }
    },
    get$_semanticsConfiguration: function() {
      var t1, _this = this;
      if (_this._cachedSemanticsConfiguration == null) {
        t1 = A.SemanticsConfiguration$();
        _this._cachedSemanticsConfiguration = t1;
        _this.describeSemanticsConfiguration$1(t1);
      }
      t1 = _this._cachedSemanticsConfiguration;
      t1.toString;
      return t1;
    },
    get$debugSemantics: function() {
      var t1 = this._semantics;
      return t1;
    },
    clearSemantics$0: function() {
      this._needsSemanticsUpdate = true;
      this._semantics = null;
      this.visitChildren$1(new K.RenderObject_clearSemantics_closure());
    },
    markNeedsSemanticsUpdate$0: function() {
      var t1, wasSemanticsBoundary, isEffectiveSemanticsBoundary, t2, t3, t4, t5, node, t6, t7, _this = this;
      if (_this._node$_owner == null || type$.nullable_PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(_this))._semanticsOwner == null) {
        _this._cachedSemanticsConfiguration = null;
        return;
      }
      if (_this._semantics != null) {
        t1 = _this._cachedSemanticsConfiguration;
        wasSemanticsBoundary = (t1 == null ? null : t1._isSemanticBoundary) === true;
      } else
        wasSemanticsBoundary = false;
      _this._cachedSemanticsConfiguration = null;
      isEffectiveSemanticsBoundary = _this.get$_semanticsConfiguration()._isSemanticBoundary && wasSemanticsBoundary;
      t1 = type$.RenderObject;
      t2 = type$.SemanticsAction;
      t3 = type$.void_Function_nullable_Object;
      t4 = type$.CustomSemanticsAction;
      t5 = type$.void_Function;
      node = _this;
      while (true) {
        if (!(!isEffectiveSemanticsBoundary && node._node$_parent instanceof K.RenderObject))
          break;
        if (node !== _this && node._needsSemanticsUpdate)
          break;
        node._needsSemanticsUpdate = true;
        t6 = node._node$_parent;
        t6.toString;
        t1._as(t6);
        if (t6._cachedSemanticsConfiguration == null) {
          t7 = new A.SemanticsConfiguration(P.LinkedHashMap_LinkedHashMap$_empty(t2, t3), P.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
          t6._cachedSemanticsConfiguration = t7;
          t6.describeSemanticsConfiguration$1(t7);
        }
        isEffectiveSemanticsBoundary = t6._cachedSemanticsConfiguration._isSemanticBoundary;
        if (isEffectiveSemanticsBoundary && t6._semantics == null)
          return;
        node = t6;
      }
      if (node !== _this && _this._semantics != null && _this._needsSemanticsUpdate)
        type$.nullable_PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingSemantics.remove$1(0, _this);
      if (!node._needsSemanticsUpdate) {
        node._needsSemanticsUpdate = true;
        t1 = type$.nullable_PipelineOwner;
        if (t1._as(B.AbstractNode.prototype.get$owner.call(_this)) != null) {
          t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodesNeedingSemantics.add$1(0, node);
          t1._as(B.AbstractNode.prototype.get$owner.call(_this)).requestVisualUpdate$0();
        }
      }
    },
    _updateSemantics$0: function() {
      var t1, interestingFragment, result, t2, t3, t4, _this = this, _null = null;
      if (_this._needsLayout)
        return;
      t1 = _this._semantics;
      if (t1 == null)
        t1 = _null;
      else {
        t1 = type$.nullable_SemanticsNode._as(B.AbstractNode.prototype.get$parent.call(t1, t1));
        if (t1 == null)
          t1 = _null;
        else
          t1 = t1._mergeAllDescendantsIntoThisNode || t1._isMergedIntoParent;
      }
      interestingFragment = type$._InterestingSemanticsFragment._as(_this._getSemanticsForParent$1$mergeIntoParent(t1 === true));
      result = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNode);
      t1 = _this._semantics;
      t2 = t1 == null;
      t3 = t2 ? _null : t1.parentSemanticsClipRect;
      t4 = t2 ? _null : t1.parentPaintClipRect;
      t1 = t2 ? _null : t1.elevationAdjustment;
      interestingFragment.compileChildren$4$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result(t1 == null ? 0 : t1, t4, t3, result);
      C.JSArray_methods.get$single(result);
    },
    _getSemanticsForParent$1$mergeIntoParent: function(mergeIntoParent) {
      var producesForkingFragment, t1, fragments, toBeMarkedExplicit, childrenMergeIntoParent, t2, t3, result, _this = this, _box_0 = {},
        config = _this.get$_semanticsConfiguration();
      _box_0.dropSemanticsOfPreviousSiblings = config.isBlockingSemanticsOfPreviouslyPaintedNodes;
      producesForkingFragment = !config._hasBeenAnnotated && !config._isSemanticBoundary;
      t1 = type$.JSArray__InterestingSemanticsFragment;
      fragments = H.setRuntimeTypeInfo([], t1);
      toBeMarkedExplicit = P.LinkedHashSet_LinkedHashSet$_empty(type$._InterestingSemanticsFragment);
      childrenMergeIntoParent = mergeIntoParent || config._isMergingSemanticsOfDescendants;
      _box_0.abortWalk = false;
      _this.visitChildrenForSemantics$1(new K.RenderObject__getSemanticsForParent_closure(_box_0, _this, childrenMergeIntoParent, fragments, toBeMarkedExplicit, config, producesForkingFragment));
      if (_box_0.abortWalk)
        return new K._AbortingSemanticsFragment(H.setRuntimeTypeInfo([_this], type$.JSArray_RenderObject), false);
      for (t2 = P._LinkedHashSetIterator$(toBeMarkedExplicit, toBeMarkedExplicit._collection$_modifications), t3 = H._instanceType(t2)._precomputed1; t2.moveNext$0();)
        t3._as(t2._collection$_current).markAsExplicit$0();
      _this._needsSemanticsUpdate = false;
      if (!(_this._node$_parent instanceof K.RenderObject)) {
        t2 = _box_0.dropSemanticsOfPreviousSiblings;
        result = new K._RootSemanticsFragment(H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([_this], type$.JSArray_RenderObject), t2);
      } else {
        t2 = _box_0.dropSemanticsOfPreviousSiblings;
        if (producesForkingFragment)
          result = new K._ContainerSemanticsFragment(H.setRuntimeTypeInfo([], t1), t2);
        else {
          result = new K._SwitchableSemanticsFragment(mergeIntoParent, config, H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([_this], type$.JSArray_RenderObject), t2);
          if (config._isSemanticBoundary)
            result._isExplicit = true;
        }
      }
      result.addAll$1(0, fragments);
      return result;
    },
    visitChildrenForSemantics$1: function(visitor) {
      this.visitChildren$1(visitor);
    },
    assembleSemanticsNode$3: function(node, config, children) {
      node.updateWith$2$childrenInInversePaintOrder$config(0, type$.List_SemanticsNode._as(children), config);
    },
    handleEvent$2: function($event, entry) {
    },
    toStringShort$0: function() {
      var t2, target, count, _this = this,
        header = "<optimized out>#" + Y.shortHash(_this),
        t1 = _this._relayoutBoundary;
      if (t1 != null && t1 !== _this) {
        t2 = type$.nullable_RenderObject;
        target = t2._as(_this._node$_parent);
        count = 1;
        while (true) {
          if (!(target != null && target !== t1))
            break;
          target = t2._as(target._node$_parent);
          ++count;
        }
        header += " relayoutBoundary=up" + count;
      }
      if (_this._needsLayout)
        header += " NEEDS-LAYOUT";
      if (_this._needsPaint)
        header += " NEEDS-PAINT";
      if (_this._needsCompositingBitsUpdate)
        header += " NEEDS-COMPOSITING-BITS-UPDATE";
      return _this._node$_owner == null ? header + " DETACHED" : header;
    },
    toString$0: function(_) {
      return this.toStringShort$0();
    },
    debugDescribeChildren$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
    },
    showOnScreen$4$curve$descendant$duration$rect: function(curve, descendant, duration, rect) {
      var t1 = this._node$_parent;
      if (t1 instanceof K.RenderObject)
        t1.showOnScreen$4$curve$descendant$duration$rect(curve, descendant == null ? this : descendant, duration, rect);
    },
    showOnScreen$0: function() {
      return this.showOnScreen$4$curve$descendant$duration$rect(C.Cubic_JUR, null, C.Duration_0, null);
    },
    $isDiagnosticableTree: 1,
    $isHitTestTarget: 1
  };
  K.RenderObject__debugReportException_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.$this;
                $async$goto = 2;
                return Y.DiagnosticableTreeNode$("The following RenderObject was being processed when the exception was fired", C.DiagnosticsTreeStyle_10, t1);
              case 2:
                // after yield
                $async$goto = 3;
                return Y.DiagnosticableTreeNode$("RenderObject", C.DiagnosticsTreeStyle_11, t1);
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 16
  };
  K.RenderObject__updateCompositingBits_closure.prototype = {
    call$1: function(child) {
      child._updateCompositingBits$0();
      if (child.get$_needsCompositing())
        this.$this.__RenderObject__needsCompositing = true;
    },
    $signature: 37
  };
  K.RenderObject_clearSemantics_closure.prototype = {
    call$1: function(child) {
      child.clearSemantics$0();
    },
    $signature: 37
  };
  K.RenderObject__getSemanticsForParent_closure.prototype = {
    call$1: function(renderChild) {
      var parentFragment, t2, t3, t4, t5, t6, t7, _i, fragment, siblingLength, i, siblingFragment, t8, _this = this,
        t1 = _this._box_0;
      if (t1.abortWalk || _this.$this._needsLayout) {
        t1.abortWalk = true;
        return;
      }
      parentFragment = renderChild._getSemanticsForParent$1$mergeIntoParent(_this.childrenMergeIntoParent);
      if (parentFragment.get$abortsWalk()) {
        t1.abortWalk = true;
        return;
      }
      if (parentFragment.dropsSemanticsOfPreviousSiblings) {
        C.JSArray_methods.set$length(_this.fragments, 0);
        _this.toBeMarkedExplicit.clear$0(0);
        if (!_this.config._isSemanticBoundary)
          t1.dropSemanticsOfPreviousSiblings = true;
      }
      for (t1 = parentFragment.get$interestingFragments(), t2 = t1.length, t3 = _this.fragments, t4 = _this.toBeMarkedExplicit, t5 = _this.config, t6 = _this.$this, t7 = _this.producesForkingFragment, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        fragment = t1[_i];
        t3.push(fragment);
        fragment._ancestorChain.push(t6);
        fragment.addTags$1(t5._tagsForChildren);
        if (t5.explicitChildNodes || !(t6._node$_parent instanceof K.RenderObject)) {
          fragment.markAsExplicit$0();
          continue;
        }
        if (fragment.get$config() == null || t7)
          continue;
        if (!t5.isCompatibleWith$1(fragment.get$config()))
          t4.add$1(0, fragment);
        siblingLength = t3.length - 1;
        for (i = 0; i < siblingLength; ++i) {
          siblingFragment = t3[i];
          t8 = fragment.get$config();
          t8.toString;
          if (!t8.isCompatibleWith$1(siblingFragment.get$config())) {
            t4.add$1(0, fragment);
            t4.add$1(0, siblingFragment);
          }
        }
      }
    },
    $signature: 37
  };
  K.RenderObjectWithChildMixin.prototype = {
    set$child: function(value) {
      var _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        _this.dropChild$1(t1);
      _this.RenderObjectWithChildMixin__child = value;
      if (value != null)
        _this.adoptChild$1(value);
    },
    redepthChildren$0: function() {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        this.redepthChild$1(t1);
    },
    visitChildren$1: function(visitor) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    debugDescribeChildren$0: function() {
      var t1 = this.RenderObjectWithChildMixin__child,
        t2 = type$.JSArray_DiagnosticsNode;
      return t1 != null ? H.setRuntimeTypeInfo([Y.DiagnosticableTreeNode$("child", null, t1)], t2) : H.setRuntimeTypeInfo([], t2);
    }
  };
  K.ContainerParentDataMixin.prototype = {};
  K.ContainerRenderObjectMixin.prototype = {
    get$childCount: function() {
      return this.ContainerRenderObjectMixin__childCount;
    },
    _insertIntoChildList$2$after: function(child, after) {
      var t2, t3, t4, _this = this,
        t1 = child.parentData;
      t1.toString;
      t2 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
      t2._as(t1);
      ++_this.ContainerRenderObjectMixin__childCount;
      if (after == null) {
        t1 = t1.ContainerParentDataMixin_nextSibling = _this.ContainerRenderObjectMixin__firstChild;
        if (t1 != null) {
          t1 = t1.parentData;
          t1.toString;
          t2._as(t1).ContainerParentDataMixin_previousSibling = child;
        }
        _this.ContainerRenderObjectMixin__firstChild = child;
        if (_this.ContainerRenderObjectMixin__lastChild == null)
          _this.ContainerRenderObjectMixin__lastChild = child;
      } else {
        t3 = after.parentData;
        t3.toString;
        t2._as(t3);
        t4 = t3.ContainerParentDataMixin_nextSibling;
        if (t4 == null) {
          t1.ContainerParentDataMixin_previousSibling = after;
          _this.ContainerRenderObjectMixin__lastChild = t3.ContainerParentDataMixin_nextSibling = child;
        } else {
          t1.ContainerParentDataMixin_nextSibling = t4;
          t1.ContainerParentDataMixin_previousSibling = after;
          t1 = t4.parentData;
          t1.toString;
          t2._as(t1).ContainerParentDataMixin_previousSibling = t3.ContainerParentDataMixin_nextSibling = child;
        }
      }
    },
    addAll$1: function(_, children) {
    },
    _removeFromChildList$1: function(child) {
      var t2, t3, t4, t5, _this = this,
        t1 = child.parentData;
      t1.toString;
      t2 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
      t2._as(t1);
      t3 = t1.ContainerParentDataMixin_previousSibling;
      t4 = t1.ContainerParentDataMixin_nextSibling;
      if (t3 == null)
        _this.ContainerRenderObjectMixin__firstChild = t4;
      else {
        t5 = t3.parentData;
        t5.toString;
        t2._as(t5).ContainerParentDataMixin_nextSibling = t4;
      }
      t4 = t1.ContainerParentDataMixin_nextSibling;
      if (t4 == null)
        _this.ContainerRenderObjectMixin__lastChild = t3;
      else {
        t4 = t4.parentData;
        t4.toString;
        t2._as(t4).ContainerParentDataMixin_previousSibling = t3;
      }
      t1.ContainerParentDataMixin_nextSibling = t1.ContainerParentDataMixin_previousSibling = null;
      --_this.ContainerRenderObjectMixin__childCount;
    },
    move$2$after: function(child, after) {
      var _this = this,
        t1 = child.parentData;
      t1.toString;
      if (H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1")._as(t1).ContainerParentDataMixin_previousSibling == after)
        return;
      _this._removeFromChildList$1(child);
      _this._insertIntoChildList$2$after(child, after);
      _this.markNeedsLayout$0();
    },
    redepthChildren$0: function() {
      var t1, t2, t3,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        t2 = child._node$_depth;
        t3 = this._node$_depth;
        if (t2 <= t3) {
          child._node$_depth = t3 + 1;
          child.redepthChildren$0();
        }
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    visitChildren$1: function(visitor) {
      var t1, t2,
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"); child != null;) {
        visitor.call$1(child);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    get$firstChild: function(_) {
      return this.ContainerRenderObjectMixin__firstChild;
    },
    debugDescribeChildren$0: function() {
      var t1, count, t2,
        children = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode),
        child = this.ContainerRenderObjectMixin__firstChild;
      if (child != null)
        for (t1 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"), count = 1; true; child = t2) {
          children.push(new Y.DiagnosticableTreeNode(child, "child " + count, true, true, null, null));
          if (child === this.ContainerRenderObjectMixin__lastChild)
            break;
          ++count;
          t2 = child.parentData;
          t2.toString;
          t2 = t1._as(t2).ContainerParentDataMixin_nextSibling;
          t2.toString;
        }
      return children;
    }
  };
  K.RelayoutWhenSystemFontsChangeMixin.prototype = {
    systemFontsDidChange$0: function() {
      this.markNeedsLayout$0();
    }
  };
  K._SemanticsFragment.prototype = {
    get$abortsWalk: function() {
      return false;
    }
  };
  K._ContainerSemanticsFragment.prototype = {
    addAll$1: function(_, fragments) {
      C.JSArray_methods.addAll$1(this.interestingFragments, fragments);
    },
    get$interestingFragments: function() {
      return this.interestingFragments;
    }
  };
  K._InterestingSemanticsFragment.prototype = {
    get$interestingFragments: function() {
      return H.setRuntimeTypeInfo([this], type$.JSArray__InterestingSemanticsFragment);
    },
    addTags$1: function(tags) {
      var t1;
      if (tags == null || tags._collection$_length === 0)
        return;
      t1 = this._object$_tagsForChildren;
      (t1 == null ? this._object$_tagsForChildren = P.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag) : t1).addAll$1(0, tags);
    }
  };
  K._RootSemanticsFragment.prototype = {
    compileChildren$4$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result: function(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect, result) {
      var t3, t4, t5, children, _i,
        t1 = this._ancestorChain,
        t2 = C.JSArray_methods.get$first(t1);
      if (t2._semantics == null) {
        t3 = C.JSArray_methods.get$first(t1).get$showOnScreen();
        t4 = C.JSArray_methods.get$first(t1);
        t4 = type$.nullable_PipelineOwner._as(B.AbstractNode.prototype.get$owner.call(t4))._semanticsOwner;
        t4.toString;
        t5 = $.$get$SemanticsNode__kEmptyConfig();
        t5 = new A.SemanticsNode(null, 0, t3, C.Rect_0_0_0_0, t5._isMergingSemanticsOfDescendants, t5._actions, t5._customSemanticsActions, t5._actionsAsBits, t5._flags, t5._label, t5._semantics$_value, t5._decreasedValue, t5._increasedValue, t5._hint, t5._semantics$_elevation, t5._thickness, t5._semantics$_textDirection);
        t5.attach$1(t4);
        t2._semantics = t5;
      }
      t2 = C.JSArray_methods.get$first(t1)._semantics;
      t2.toString;
      t2.set$rect(0, C.JSArray_methods.get$first(t1).get$semanticBounds());
      children = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNode);
      for (t1 = this._object$_children, t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].compileChildren$4$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result(0, parentPaintClipRect, parentSemanticsClipRect, children);
      t2.updateWith$2$childrenInInversePaintOrder$config(0, children, null);
      result.push(t2);
    },
    get$config: function() {
      return null;
    },
    markAsExplicit$0: function() {
    },
    addAll$1: function(_, fragments) {
      C.JSArray_methods.addAll$1(this._object$_children, fragments);
    }
  };
  K._SwitchableSemanticsFragment.prototype = {
    compileChildren$4$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result: function(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect, result) {
      var t1, t2, t3, t4, t5, _i, fragment, t6, geometry, node, children, _this = this, _null = null;
      if (!_this._isExplicit) {
        t1 = _this._ancestorChain;
        C.JSArray_methods.get$first(t1)._semantics = null;
        for (t2 = _this._object$_children, t3 = t2.length, t4 = H._arrayInstanceType(t1), t5 = t4._precomputed1, t4 = t4._eval$1("SubListIterable<1>"), _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
          fragment = t2[_i];
          t6 = new H.SubListIterable(t1, 1, _null, t4);
          t6.SubListIterable$3(t1, 1, _null, t5);
          C.JSArray_methods.addAll$1(fragment._ancestorChain, t6);
          fragment.compileChildren$4$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result(elevationAdjustment + _this._config._semantics$_elevation, parentPaintClipRect, parentSemanticsClipRect, result);
        }
        return;
      }
      t1 = _this._ancestorChain;
      if (t1.length > 1) {
        geometry = new K._SemanticsGeometry();
        geometry._computeValues$3(parentSemanticsClipRect, parentPaintClipRect, t1);
      } else
        geometry = _null;
      t2 = _this._mergeIntoParent;
      t3 = !t2;
      if (t3) {
        if (geometry == null)
          t4 = _null;
        else {
          t4 = geometry.get$_object$_rect();
          t4 = t4.get$isEmpty(t4);
        }
        t4 = t4 === true;
      } else
        t4 = false;
      if (t4)
        return;
      t4 = C.JSArray_methods.get$first(t1);
      if (t4._semantics == null)
        t4._semantics = A.SemanticsNode$(_null, C.JSArray_methods.get$first(t1).get$showOnScreen());
      node = C.JSArray_methods.get$first(t1)._semantics;
      node.set$isMergedIntoParent(t2);
      node.tags = _this._object$_tagsForChildren;
      node.elevationAdjustment = elevationAdjustment;
      if (elevationAdjustment !== 0) {
        _this._ensureConfigIsWritable$0();
        t2 = _this._config;
        t2.set$elevation(0, t2._semantics$_elevation + elevationAdjustment);
      }
      if (geometry != null) {
        node.set$rect(0, geometry.get$_object$_rect());
        node.set$transform(0, geometry.get$_object$_transform());
        node.parentSemanticsClipRect = geometry._semanticsClipRect;
        node.parentPaintClipRect = geometry._paintClipRect;
        if (t3 && geometry._markAsHidden) {
          _this._ensureConfigIsWritable$0();
          _this._config._setFlag$2(C.SemanticsFlag_8192, true);
        }
      }
      children = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNode);
      for (t2 = _this._object$_children, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        fragment = t2[_i];
        t4 = node.parentSemanticsClipRect;
        fragment.compileChildren$4$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result(0, node.parentPaintClipRect, t4, children);
      }
      t2 = _this._config;
      if (t2._isSemanticBoundary)
        C.JSArray_methods.get$first(t1).assembleSemanticsNode$3(node, _this._config, children);
      else
        node.updateWith$2$childrenInInversePaintOrder$config(0, children, t2);
      result.push(node);
    },
    get$config: function() {
      return this._isExplicit ? null : this._config;
    },
    addAll$1: function(_, fragments) {
      var t1, t2, _i, fragment, t3, t4, _this = this;
      for (t1 = fragments.length, t2 = _this._object$_children, _i = 0; _i < fragments.length; fragments.length === t1 || (0, H.throwConcurrentModificationError)(fragments), ++_i) {
        fragment = fragments[_i];
        t2.push(fragment);
        if (fragment.get$config() == null)
          continue;
        if (!_this._isConfigWritable) {
          _this._config = _this._config.copy$0(0);
          _this._isConfigWritable = true;
        }
        t3 = _this._config;
        t4 = fragment.get$config();
        t4.toString;
        t3.absorb$1(t4);
      }
    },
    _ensureConfigIsWritable$0: function() {
      var t1, t2, _this = this;
      if (!_this._isConfigWritable) {
        t1 = _this._config;
        t2 = A.SemanticsConfiguration$();
        t2._isSemanticBoundary = t1._isSemanticBoundary;
        t2.explicitChildNodes = t1.explicitChildNodes;
        t2.isBlockingSemanticsOfPreviouslyPaintedNodes = t1.isBlockingSemanticsOfPreviouslyPaintedNodes;
        t2._hasBeenAnnotated = t1._hasBeenAnnotated;
        t2._isMergingSemanticsOfDescendants = t1._isMergingSemanticsOfDescendants;
        t2._semantics$_textDirection = t1._semantics$_textDirection;
        t2._semantics$_sortKey = t1._semantics$_sortKey;
        t2._label = t1._label;
        t2._increasedValue = t1._increasedValue;
        t2._semantics$_value = t1._semantics$_value;
        t2._decreasedValue = t1._decreasedValue;
        t2._hint = t1._hint;
        t2._semantics$_hintOverrides = t1._semantics$_hintOverrides;
        t2._semantics$_elevation = t1._semantics$_elevation;
        t2._thickness = t1._thickness;
        t2._flags = t1._flags;
        t2._tagsForChildren = t1._tagsForChildren;
        t2._textSelection = t1._textSelection;
        t2._scrollPosition = t1._scrollPosition;
        t2._scrollExtentMax = t1._scrollExtentMax;
        t2._scrollExtentMin = t1._scrollExtentMin;
        t2._actionsAsBits = t1._actionsAsBits;
        t2._indexInParent = t1._indexInParent;
        t2._scrollIndex = t1._scrollIndex;
        t2._scrollChildCount = t1._scrollChildCount;
        t2._platformViewId = t1._platformViewId;
        t2._maxValueLength = t1._maxValueLength;
        t2._currentValueLength = t1._currentValueLength;
        t2._actions.addAll$1(0, t1._actions);
        t2._customSemanticsActions.addAll$1(0, t1._customSemanticsActions);
        _this._config = t2;
        _this._isConfigWritable = true;
      }
    },
    markAsExplicit$0: function() {
      this._isExplicit = true;
    }
  };
  K._AbortingSemanticsFragment.prototype = {
    get$abortsWalk: function() {
      return true;
    },
    get$config: function() {
      return null;
    },
    compileChildren$4$elevationAdjustment$parentPaintClipRect$parentSemanticsClipRect$result: function(elevationAdjustment, parentPaintClipRect, parentSemanticsClipRect, result) {
      var t1 = C.JSArray_methods.get$first(this._ancestorChain)._semantics;
      t1.toString;
      result.push(t1);
    },
    markAsExplicit$0: function() {
    }
  };
  K._SemanticsGeometry.prototype = {
    get$_object$_transform: function() {
      var t1 = this.___SemanticsGeometry__transform;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_transform")) : t1;
    },
    get$_object$_rect: function() {
      var t1 = this.___SemanticsGeometry__rect;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_rect")) : t1;
    },
    _computeValues$3: function(parentSemanticsClipRect, parentPaintClipRect, ancestors) {
      var index, $parent, child, t2, owner, paintRect, _this = this,
        t1 = new E.Matrix4(new Float64Array(16));
      t1.setIdentity$0();
      _this.___SemanticsGeometry__transform = t1;
      _this._semanticsClipRect = parentSemanticsClipRect;
      _this._paintClipRect = parentPaintClipRect;
      for (index = ancestors.length - 1; index > 0;) {
        $parent = ancestors[index];
        --index;
        child = ancestors[index];
        _this._semanticsClipRect = K._SemanticsGeometry__intersectRects(_this._semanticsClipRect, $parent.describeApproximatePaintClip$1(child));
        t1 = $.$get$_SemanticsGeometry__temporaryTransformHolder();
        t1.setIdentity$0();
        t2 = _this.___SemanticsGeometry__transform;
        K._SemanticsGeometry__applyIntermediatePaintTransforms($parent, child, t2 == null ? H.throwExpression(H.LateError$fieldNI("_transform")) : t2, t1);
        _this._semanticsClipRect = K._SemanticsGeometry__transformRect(_this._semanticsClipRect, t1);
        _this._paintClipRect = K._SemanticsGeometry__transformRect(_this._paintClipRect, t1);
      }
      owner = C.JSArray_methods.get$first(ancestors);
      t1 = _this._semanticsClipRect;
      _this.___SemanticsGeometry__rect = t1 == null ? owner.get$semanticBounds() : t1.intersect$1(owner.get$semanticBounds());
      t1 = _this._paintClipRect;
      if (t1 != null) {
        paintRect = t1.intersect$1(_this.get$_object$_rect());
        if (paintRect.get$isEmpty(paintRect)) {
          t1 = _this.get$_object$_rect();
          t1 = !t1.get$isEmpty(t1);
        } else
          t1 = false;
        _this._markAsHidden = t1;
        if (!t1)
          _this.___SemanticsGeometry__rect = paintRect;
      }
    }
  };
  K.DiagnosticsDebugCreator.prototype = {};
  K._RenderObject_AbstractNode_DiagnosticableTreeMixin.prototype = {};
  Q.TextOverflow.prototype = {
    toString$0: function(_) {
      return this._paragraph$_name;
    }
  };
  Q.TextParentData.prototype = {
    toString$0: function(_) {
      var t1 = H.setRuntimeTypeInfo(["offset=" + this.offset.toString$0(0)], type$.JSArray_String);
      t1.push(this.super$BoxParentData$toString(0));
      return C.JSArray_methods.join$1(t1, "; ");
    }
  };
  Q.RenderParagraph.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof Q.TextParentData))
        child.parentData = new Q.TextParentData(null, null, C.Offset_0_0);
    },
    get$text: function(_) {
      var t1 = this._textPainter._text_painter$_text;
      t1.toString;
      return t1;
    },
    set$text: function(_, value) {
      var _this = this,
        t1 = _this._textPainter;
      switch (t1._text_painter$_text.compareTo$1(0, value)) {
        case C.RenderComparison_0:
        case C.RenderComparison_1:
          return;
        case C.RenderComparison_2:
          t1.set$text(0, value);
          _this._extractPlaceholderSpans$1(value);
          _this.markNeedsPaint$0();
          _this.markNeedsSemanticsUpdate$0();
          break;
        case C.RenderComparison_3:
          t1.set$text(0, value);
          _this._overflowShader = null;
          _this._extractPlaceholderSpans$1(value);
          _this.markNeedsLayout$0();
          break;
      }
    },
    get$_placeholderSpans: function() {
      var t1 = this.__RenderParagraph__placeholderSpans;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_placeholderSpans")) : t1;
    },
    _extractPlaceholderSpans$1: function(span) {
      this.__RenderParagraph__placeholderSpans = H.setRuntimeTypeInfo([], type$.JSArray_PlaceholderSpan);
      span.visitChildren$1(new Q.RenderParagraph__extractPlaceholderSpans_closure(this));
    },
    set$textAlign: function(_, value) {
      var t1 = this._textPainter;
      if (t1._text_painter$_textAlign === value)
        return;
      t1.set$textAlign(0, value);
      this.markNeedsPaint$0();
    },
    set$textDirection: function(_, value) {
      var t1 = this._textPainter;
      if (t1._text_painter$_textDirection === value)
        return;
      t1.set$textDirection(0, value);
      this.markNeedsLayout$0();
    },
    set$softWrap: function(value) {
      return;
    },
    set$overflow: function(_, value) {
      var t1, _this = this;
      if (_this._overflow === value)
        return;
      _this._overflow = value;
      t1 = value === C.TextOverflow_2 ? "\u2026" : null;
      _this._textPainter.set$ellipsis(0, t1);
      _this.markNeedsLayout$0();
    },
    set$textScaleFactor: function(value) {
      var t1 = this._textPainter;
      if (t1._textScaleFactor === value)
        return;
      t1.set$textScaleFactor(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$maxLines: function(_, value) {
      var t1 = this._textPainter,
        t2 = t1._text_painter$_maxLines;
      if (t2 == null ? value == null : t2 === value)
        return;
      t1.set$maxLines(0, value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$locale: function(_, value) {
      var t1 = this._textPainter;
      if (J.$eq$(t1._text_painter$_locale, value))
        return;
      t1.set$locale(0, value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$strutStyle: function(_, value) {
      return;
    },
    set$textWidthBasis: function(value) {
      var t1 = this._textPainter;
      if (t1._textWidthBasis === value)
        return;
      t1.set$textWidthBasis(value);
      this._overflowShader = null;
      this.markNeedsLayout$0();
    },
    set$textHeightBehavior: function(_, value) {
      return;
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      this._layoutTextWithConstraints$1(K.RenderObject.prototype.get$constraints.call(this));
      return this._textPainter.computeDistanceToActualBaseline$1(C.TextBaseline_0);
    },
    hitTestSelf$1: function(position) {
      return true;
    },
    hitTestChildren$2$position: function(result, position) {
      var _hitText_set, t1, textPosition, span, t2, t3, t4, childIndex, t5, t6, transform, child, _box_0 = {};
      _box_0._hitText = null;
      _hitText_set = new Q.RenderParagraph_hitTestChildren__hitText_set(_box_0);
      t1 = this._textPainter;
      textPosition = t1._text_painter$_paragraph.getPositionForOffset$1(position);
      span = t1._text_painter$_text.getSpanForPosition$1(textPosition);
      if (span != null && true) {
        t2 = new O.HitTestEntry(type$.HitTestTarget._as(span));
        result._globalizeTransforms$0();
        t2._transform = C.JSArray_methods.get$last(result._transforms);
        result._path.push(t2);
        _hitText_set.call$1(true);
      } else
        _hitText_set.call$1(false);
      t2 = _box_0.child = this.ContainerRenderObjectMixin__firstChild;
      t3 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1");
      t4 = type$.TextParentData;
      childIndex = 0;
      while (true) {
        if (!(t2 != null && childIndex < t1._inlinePlaceholderBoxes.length))
          break;
        t2 = t2.parentData;
        t2.toString;
        t4._as(t2);
        t5 = t2.offset;
        t6 = new Float64Array(16);
        transform = new E.Matrix4(t6);
        transform.setIdentity$0();
        t6[14] = 0;
        t6[13] = t5._dy;
        t6[12] = t5._dx;
        t5 = t2.scale;
        transform.scale$3(0, t5, t5, t5);
        if (result.addWithPaintTransform$3$hitTest$position$transform(new Q.RenderParagraph_hitTestChildren_closure(_box_0, position, t2), position, transform))
          return true;
        t2 = _box_0.child.parentData;
        t2.toString;
        child = t3._as(t2).ContainerParentDataMixin_nextSibling;
        _box_0.child = child;
        ++childIndex;
        t2 = child;
      }
      return new Q.RenderParagraph_hitTestChildren__hitText_get(_box_0).call$0();
    },
    _layoutText$2$maxWidth$minWidth: function(maxWidth, minWidth) {
      this._textPainter.layout$2$maxWidth$minWidth(0, maxWidth, minWidth);
    },
    systemFontsDidChange$0: function() {
      this.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange();
      this._textPainter.markNeedsLayout$0();
    },
    _layoutTextWithConstraints$1: function(constraints) {
      this._textPainter.setPlaceholderDimensions$1(this._placeholderDimensions);
      this._layoutText$2$maxWidth$minWidth(constraints.maxWidth, constraints.minWidth);
    },
    _layoutChildren$2$dry: function(constraints, dry) {
      var child, placeholderDimensions, t2, boxConstraints, childIndex, t3, t4, childSize, _this = this,
        _s17_ = "_placeholderSpans",
        t1 = _this.ContainerRenderObjectMixin__childCount;
      if (t1 === 0)
        return H.setRuntimeTypeInfo([], type$.JSArray_PlaceholderDimensions);
      child = _this.ContainerRenderObjectMixin__firstChild;
      placeholderDimensions = P.List_List$filled(t1, C.PlaceholderDimensions_Size_0_0_null, false, type$.PlaceholderDimensions);
      t1 = _this._textPainter._textScaleFactor;
      t2 = 0 / t1;
      boxConstraints = new S.BoxConstraints(t2, constraints.maxWidth / t1, t2, 1 / 0 / t1);
      for (t1 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1"), t2 = !dry, childIndex = 0; child != null;) {
        if (t2) {
          child.layout$2$parentUsesSize(0, boxConstraints, true);
          t3 = child._size;
          t3.toString;
          t4 = _this.__RenderParagraph__placeholderSpans;
          switch ((t4 == null ? H.throwExpression(H.LateError$fieldNI(_s17_)) : t4)[childIndex].get$alignment()) {
            case C.PlaceholderAlignment_0:
              t4 = _this.__RenderParagraph__placeholderSpans;
              t4 = (t4 == null ? H.throwExpression(H.LateError$fieldNI(_s17_)) : t4)[childIndex];
              child.getDistanceToBaseline$1(t4.get$baseline(t4));
              break;
            default:
              break;
          }
          childSize = t3;
        } else
          childSize = child.getDryLayout$1(boxConstraints);
        t3 = _this.__RenderParagraph__placeholderSpans;
        (t3 == null ? H.throwExpression(H.LateError$fieldNI(_s17_)) : t3)[childIndex].get$alignment();
        t3 = _this.__RenderParagraph__placeholderSpans;
        t3 = (t3 == null ? H.throwExpression(H.LateError$fieldNI(_s17_)) : t3)[childIndex];
        placeholderDimensions[childIndex] = new U.PlaceholderDimensions(childSize, t3.get$baseline(t3));
        t3 = child.parentData;
        t3.toString;
        child = t1._as(t3).ContainerParentDataMixin_nextSibling;
        ++childIndex;
      }
      return placeholderDimensions;
    },
    _layoutChildren$1: function(constraints) {
      return this._layoutChildren$2$dry(constraints, false);
    },
    _setParentData$0: function() {
      var t4, t5,
        child = this.ContainerRenderObjectMixin__firstChild,
        t1 = type$.TextParentData,
        t2 = this._textPainter,
        t3 = H._instanceType(this)._eval$1("ContainerRenderObjectMixin.1"),
        childIndex = 0;
      while (true) {
        if (!(child != null && childIndex < t2._inlinePlaceholderBoxes.length))
          break;
        t4 = child.parentData;
        t4.toString;
        t1._as(t4);
        t5 = t2._inlinePlaceholderBoxes[childIndex];
        t4.offset = new P.Offset(t5.left, t5.top);
        t4.scale = t2._inlinePlaceholderScales[childIndex];
        child = t3._as(t4).ContainerParentDataMixin_nextSibling;
        ++childIndex;
      }
    },
    _canComputeDryLayout$0: function() {
      var t1, t2, _i;
      for (t1 = this.get$_placeholderSpans(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        switch (t1[_i].get$alignment()) {
          case C.PlaceholderAlignment_0:
          case C.PlaceholderAlignment_1:
          case C.PlaceholderAlignment_2:
            return false;
          case C.PlaceholderAlignment_3:
          case C.PlaceholderAlignment_5:
          case C.PlaceholderAlignment_4:
            continue;
        }
      return true;
    },
    computeDryLayout$1: function(constraints) {
      var t1, t2, _this = this;
      if (!_this._canComputeDryLayout$0())
        return C.Size_0_0;
      t1 = _this._textPainter;
      t1.setPlaceholderDimensions$1(_this._layoutChildren$2$dry(constraints, true));
      _this._layoutText$2$maxWidth$minWidth(constraints.maxWidth, constraints.minWidth);
      t2 = t1.get$width(t1);
      t1 = t1._text_painter$_paragraph;
      return constraints.constrain$1(new P.Size(t2, Math.ceil(t1.get$height(t1))));
    },
    performLayout$0: function() {
      var t1, t2, t3, t4, didOverflowHeight, didOverflowWidth, fadeSizePainter, fadeStart, fadeEnd, _this = this, _null = null,
        constraints = K.RenderObject.prototype.get$constraints.call(_this);
      _this._placeholderDimensions = _this._layoutChildren$1(constraints);
      _this._layoutTextWithConstraints$1(constraints);
      _this._setParentData$0();
      t1 = _this._textPainter;
      t2 = t1.get$width(t1);
      t3 = t1._text_painter$_paragraph;
      t3 = Math.ceil(t3.get$height(t3));
      t4 = t1._text_painter$_paragraph;
      didOverflowHeight = t4.get$didExceedMaxLines(t4);
      t4 = _this._size = constraints.constrain$1(new P.Size(t2, t3));
      didOverflowHeight = t4._dy < t3 || didOverflowHeight;
      didOverflowWidth = t4._dx < t2;
      if (didOverflowWidth || didOverflowHeight)
        switch (_this._overflow) {
          case C.TextOverflow_3:
            _this._needsClipping = false;
            _this._overflowShader = null;
            break;
          case C.TextOverflow_0:
          case C.TextOverflow_2:
            _this._needsClipping = true;
            _this._overflowShader = null;
            break;
          case C.TextOverflow_1:
            _this._needsClipping = true;
            t2 = Q.TextSpan$(_null, t1._text_painter$_text.style, "\u2026");
            t3 = t1._text_painter$_textDirection;
            t3.toString;
            fadeSizePainter = new U.TextPainter(t2, C.TextAlign_4, t3, t1._textScaleFactor, _null, t1._text_painter$_locale, _null, _null, C.TextWidthBasis_0, _null);
            fadeSizePainter.layout$0(0);
            if (didOverflowWidth) {
              t1 = t1._text_painter$_textDirection;
              t1.toString;
              switch (t1) {
                case C.TextDirection_0:
                  fadeStart = fadeSizePainter.get$width(fadeSizePainter);
                  fadeEnd = 0;
                  break;
                case C.TextDirection_1:
                  fadeEnd = _this._size._dx;
                  fadeStart = fadeEnd - fadeSizePainter.get$width(fadeSizePainter);
                  break;
                default:
                  fadeStart = _null;
                  fadeEnd = fadeStart;
              }
              _this._overflowShader = P.Gradient_Gradient$linear(new P.Offset(fadeStart, 0), new P.Offset(fadeEnd, 0), H.setRuntimeTypeInfo([C.Color_4294967295, C.Color_16777215], type$.JSArray_Color), _null, C.TileMode_0);
            } else {
              fadeEnd = _this._size._dy;
              t1 = fadeSizePainter._text_painter$_paragraph;
              _this._overflowShader = P.Gradient_Gradient$linear(new P.Offset(0, fadeEnd - Math.ceil(t1.get$height(t1)) / 2), new P.Offset(0, fadeEnd), H.setRuntimeTypeInfo([C.Color_4294967295, C.Color_16777215], type$.JSArray_Color), _null, C.TileMode_0);
            }
            break;
        }
      else {
        _this._needsClipping = false;
        _this._overflowShader = null;
      }
    },
    paint$2: function(context, offset) {
      var t1, t2, t3, bounds, t4, t5, t6, childIndex, t7, t8, child, paint, _this = this, _box_0 = {};
      _this._layoutTextWithConstraints$1(K.RenderObject.prototype.get$constraints.call(_this));
      if (_this._needsClipping) {
        t1 = _this._size;
        t2 = offset._dx;
        t3 = offset._dy;
        bounds = new P.Rect(t2, t3, t2 + t1._dx, t3 + t1._dy);
        if (_this._overflowShader != null) {
          t1 = context.get$canvas(context);
          t2 = H._detectRenderer();
          t1.saveLayer$2(0, bounds, t2 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData()));
        } else
          context.get$canvas(context).save$0(0);
        context.get$canvas(context).clipRect$1(0, bounds);
      }
      t1 = _this._textPainter;
      t2 = context.get$canvas(context);
      t3 = t1._text_painter$_paragraph;
      t3.toString;
      t2.drawParagraph$2(0, t3, offset);
      t3 = _box_0.child = _this.ContainerRenderObjectMixin__firstChild;
      t2 = offset._dx;
      t4 = offset._dy;
      t5 = H._instanceType(_this)._eval$1("ContainerRenderObjectMixin.1");
      t6 = type$.TextParentData;
      childIndex = 0;
      while (true) {
        if (!(t3 != null && childIndex < t1._inlinePlaceholderBoxes.length))
          break;
        t3 = t3.parentData;
        t3.toString;
        t6._as(t3);
        t7 = t3.scale;
        t7.toString;
        t8 = _this.__RenderObject__needsCompositing;
        if (t8 == null)
          t8 = H.throwExpression(H.LateError$fieldNI("_needsCompositing"));
        t3 = t3.offset;
        context.pushTransform$4(t8, new P.Offset(t2 + t3._dx, t4 + t3._dy), E.Matrix4_Matrix4$diagonal3Values(t7, t7, t7), new Q.RenderParagraph_paint_closure(_box_0));
        t7 = _box_0.child.parentData;
        t7.toString;
        child = t5._as(t7).ContainerParentDataMixin_nextSibling;
        _box_0.child = child;
        ++childIndex;
        t3 = child;
      }
      if (_this._needsClipping) {
        if (_this._overflowShader != null) {
          context.get$canvas(context).translate$2(0, t2, t4);
          t1 = H._detectRenderer();
          paint = t1 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
          paint.set$blendMode(C.BlendMode_13);
          paint.set$shader(_this._overflowShader);
          t1 = context.get$canvas(context);
          t2 = _this._size;
          t1.drawRect$2(0, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), paint);
        }
        context.get$canvas(context).restore$0(0);
      }
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1, t2, collector, t3, _i, t4, info, t5, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      t1 = _this._textPainter;
      t2 = t1._text_painter$_text;
      t2.toString;
      collector = H.setRuntimeTypeInfo([], type$.JSArray_InlineSpanSemanticsInformation);
      t2.computeSemanticsInformation$1(collector);
      _this._semanticsInfo = collector;
      if (C.JSArray_methods.any$1(collector, new Q.RenderParagraph_describeSemanticsConfiguration_closure()))
        config._isSemanticBoundary = config.explicitChildNodes = true;
      else {
        for (t2 = _this._semanticsInfo, t3 = t2.length, _i = 0, t4 = ""; _i < t3; ++_i) {
          info = t2[_i];
          t5 = info.semanticsLabel;
          t4 += t5 == null ? info.text : t5;
        }
        config._label = t4.charCodeAt(0) == 0 ? t4 : t4;
        config._hasBeenAnnotated = true;
        t1 = t1._text_painter$_textDirection;
        t1.toString;
        config._semantics$_textDirection = t1;
      }
    },
    assembleSemanticsNode$3: function(node, config, children) {
      var newChildCache, t3, t4, t5, t6, t7, t8, currentRect, currentDirection, ordinal, start, _i, info, start0, t9, t10, t11, rects, rect, currentDirection0, t12, configuration, ordinal0, newChild, _this = this, _null = null,
        newChildren = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNode),
        t1 = _this._textPainter,
        t2 = t1._text_painter$_textDirection;
      t2.toString;
      newChildCache = P.ListQueue$(_null, type$.SemanticsNode);
      t3 = _this._semanticsInfo;
      t3.toString;
      t3 = G.combineSemanticsInfo(t3);
      t4 = t3.length;
      t5 = type$.SemanticsAction;
      t6 = type$.void_Function_nullable_Object;
      t7 = type$.CustomSemanticsAction;
      t8 = type$.void_Function;
      currentRect = _null;
      currentDirection = t2;
      ordinal = 0;
      start = 0;
      _i = 0;
      for (; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i, start = start0) {
        info = t3[_i];
        t2 = info.text;
        start0 = start + t2.length;
        t9 = start < start0;
        t10 = t9 ? start0 : start;
        t9 = t9 ? start : start0;
        t11 = K.RenderObject.prototype.get$constraints.call(_this);
        t1.setPlaceholderDimensions$1(_this._placeholderDimensions);
        t1.layout$2$maxWidth$minWidth(0, t11.maxWidth, t11.minWidth);
        rects = t1._text_painter$_paragraph.getBoxesForRange$4$boxHeightStyle$boxWidthStyle(t9, t10, C.BoxHeightStyle_0, C.BoxWidthStyle_0);
        if (rects.length === 0)
          continue;
        t9 = C.JSArray_methods.get$first(rects);
        rect = new P.Rect(t9.left, t9.top, t9.right, t9.bottom);
        currentDirection0 = C.JSArray_methods.get$first(rects).direction;
        for (t9 = H._arrayInstanceType(rects), t10 = new H.SubListIterable(rects, 1, _null, t9._eval$1("SubListIterable<1>")), t10.SubListIterable$3(rects, 1, _null, t9._precomputed1), t10 = new H.ListIterator(t10, t10.get$length(t10)), t9 = H._instanceType(t10)._precomputed1; t10.moveNext$0();) {
          t11 = t9._as(t10._current);
          rect = rect.expandToInclude$1(new P.Rect(t11.left, t11.top, t11.right, t11.bottom));
          currentDirection0 = t11.direction;
        }
        t9 = rect.left;
        t10 = Math.max(0, t9);
        t11 = rect.top;
        t12 = Math.max(0, t11);
        t9 = Math.min(rect.right - t9, K.RenderObject.prototype.get$constraints.call(_this).maxWidth);
        t11 = Math.min(rect.bottom - t11, K.RenderObject.prototype.get$constraints.call(_this).maxHeight);
        currentRect = new P.Rect(Math.floor(t10) - 4, Math.floor(t12) - 4, Math.ceil(t10 + t9) + 4, Math.ceil(t12 + t11) + 4);
        configuration = new A.SemanticsConfiguration(P.LinkedHashMap_LinkedHashMap$_empty(t5, t6), P.LinkedHashMap_LinkedHashMap$_empty(t7, t8));
        ordinal0 = ordinal + 1;
        configuration._semantics$_sortKey = new A.OrdinalSortKey(ordinal, _null);
        configuration._hasBeenAnnotated = true;
        configuration._semantics$_textDirection = currentDirection;
        t11 = info.semanticsLabel;
        configuration._label = t11 == null ? t2 : t11;
        t2 = _this._cachedChildNodes;
        newChild = (t2 == null ? _null : !t2.get$isEmpty(t2)) === true ? _this._cachedChildNodes.removeFirst$0() : A.SemanticsNode$(_null, _null);
        newChild.updateWith$1$config(0, configuration);
        if (!newChild._semantics$_rect.$eq(0, currentRect)) {
          newChild._semantics$_rect = currentRect;
          newChild._semantics$_markDirty$0();
        }
        newChildCache._add$1(0, newChild);
        newChildren.push(newChild);
        ordinal = ordinal0;
        currentDirection = currentDirection0;
      }
      _this._cachedChildNodes = newChildCache;
      node.updateWith$2$childrenInInversePaintOrder$config(0, newChildren, config);
    },
    clearSemantics$0: function() {
      this.super$RenderObject$clearSemantics();
      this._cachedChildNodes = null;
    },
    debugDescribeChildren$0: function() {
      var t1 = this._textPainter._text_painter$_text;
      t1.toString;
      return H.setRuntimeTypeInfo([Y.DiagnosticableTreeNode$("text", C.DiagnosticsTreeStyle_4, t1)], type$.JSArray_DiagnosticsNode);
    },
    text$0: function($receiver) {
      return this.get$text(this).call$0();
    }
  };
  Q.RenderParagraph__extractPlaceholderSpans_closure.prototype = {
    call$1: function(span) {
      return true;
    },
    $signature: 57
  };
  Q.RenderParagraph_hitTestChildren__hitText_set.prototype = {
    call$1: function(t1) {
      var t2 = this._box_0;
      if (t2._hitText == null)
        return t2._hitText = t1;
      else
        throw H.wrapException(H.LateError$localAI("hitText"));
    },
    $signature: 203
  };
  Q.RenderParagraph_hitTestChildren__hitText_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._hitText;
      return t1 == null ? H.throwExpression(H.LateError$localNI("hitText")) : t1;
    },
    $signature: 44
  };
  Q.RenderParagraph_hitTestChildren_closure.prototype = {
    call$2: function(result, transformed) {
      return this._box_0.child.hitTest$2$position(result, transformed);
    },
    $signature: 20
  };
  Q.RenderParagraph_paint_closure.prototype = {
    call$2: function(context, offset) {
      var t1 = this._box_0.child;
      t1.toString;
      context.paintChild$2(t1, offset);
    },
    $signature: 38
  };
  Q.RenderParagraph_describeSemanticsConfiguration_closure.prototype = {
    call$1: function(info) {
      return false;
    },
    $signature: 205
  };
  Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.TextParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1, t2;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.TextParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin.prototype = {
    attach$1: function(owner) {
      this.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$attach(owner);
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, this.get$systemFontsDidChange());
    },
    detach$0: function(_) {
      $.PaintingBinding__instance.PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, this.get$systemFontsDidChange());
      this.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$detach(0);
    }
  };
  L.RenderPerformanceOverlay.prototype = {
    set$optionsMask: function(value) {
      if (value === this._optionsMask)
        return;
      this._optionsMask = value;
      this.markNeedsPaint$0();
    },
    set$rasterizerThreshold: function(value) {
      if (value === this._rasterizerThreshold)
        return;
      this._rasterizerThreshold = value;
      this.markNeedsPaint$0();
    },
    get$sizedByParent: function() {
      return true;
    },
    get$alwaysNeedsCompositing: function() {
      return true;
    },
    get$_intrinsicHeight: function() {
      var t1 = this._optionsMask,
        result = (t1 | 1) >>> 0 > 0 || (t1 | 2) >>> 0 > 0 ? 80 : 0;
      return (t1 | 4) >>> 0 > 0 || (t1 | 8) >>> 0 > 0 ? result + 80 : result;
    },
    computeDryLayout$1: function(constraints) {
      return constraints.constrain$1(new P.Size(1 / 0, this.get$_intrinsicHeight()));
    },
    paint$2: function(context, offset) {
      var t5, t6,
        t1 = offset._dx,
        t2 = offset._dy,
        t3 = this._size,
        t4 = t3._dx;
      t3 = t3._dy;
      t5 = this._optionsMask;
      t6 = this._rasterizerThreshold;
      context.stopRecordingIfNeeded$0();
      context.appendLayer$1(new T.PerformanceOverlayLayer(new P.Rect(t1, t2, t1 + t4, t2 + t3), t5, t6, false, false));
    }
  };
  E.RenderProxyBox.prototype = {};
  E.RenderProxyBoxMixin.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof K.ParentData))
        child.parentData = new K.ParentData();
    },
    computeDryLayout$1: function(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return t1.getDryLayout$1(constraints);
      return this.computeSizeForNoChild$1(constraints);
    },
    performLayout$0: function() {
      var _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(0, K.RenderObject.prototype.get$constraints.call(_this), true);
        t1 = _this.RenderObjectWithChildMixin__child._size;
        t1.toString;
        _this._size = t1;
      } else
        _this._size = _this.computeSizeForNoChild$1(K.RenderObject.prototype.get$constraints.call(_this));
    },
    computeSizeForNoChild$1: function(constraints) {
      return new P.Size(C.JSInt_methods.clamp$2(0, constraints.minWidth, constraints.maxWidth), C.JSInt_methods.clamp$2(0, constraints.minHeight, constraints.maxHeight));
    },
    hitTestChildren$2$position: function(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.hitTest$2$position(result, position);
      return t1 === true;
    },
    applyPaintTransform$2: function(child, transform) {
    },
    paint$2: function(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    }
  };
  E.HitTestBehavior.prototype = {
    toString$0: function(_) {
      return this._proxy_box$_name;
    }
  };
  E.RenderProxyBoxWithHitTestBehavior.prototype = {
    hitTest$2$position: function(result, position) {
      var hitTarget, t1, _this = this;
      if (_this._size.contains$1(0, position)) {
        hitTarget = _this.hitTestChildren$2$position(result, position) || _this.behavior === C.HitTestBehavior_1;
        if (hitTarget || _this.behavior === C.HitTestBehavior_2) {
          t1 = new S.BoxHitTestEntry(position, _this);
          result._globalizeTransforms$0();
          t1._transform = C.JSArray_methods.get$last(result._transforms);
          result._path.push(t1);
        }
      } else
        hitTarget = false;
      return hitTarget;
    },
    hitTestSelf$1: function(position) {
      return this.behavior === C.HitTestBehavior_1;
    }
  };
  E.RenderConstrainedBox.prototype = {
    set$additionalConstraints: function(value) {
      if (this._additionalConstraints.$eq(0, value))
        return;
      this._additionalConstraints = value;
      this.markNeedsLayout$0();
    },
    performLayout$0: function() {
      var _this = this,
        constraints = K.RenderObject.prototype.get$constraints.call(_this),
        t1 = _this.RenderObjectWithChildMixin__child,
        t2 = _this._additionalConstraints;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(0, t2.enforce$1(constraints), true);
        t1 = _this.RenderObjectWithChildMixin__child._size;
        t1.toString;
        _this._size = t1;
      } else
        _this._size = t2.enforce$1(constraints).constrain$1(C.Size_0_0);
    },
    computeDryLayout$1: function(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child,
        t2 = this._additionalConstraints;
      if (t1 != null)
        return t1.getDryLayout$1(t2.enforce$1(constraints));
      else
        return t2.enforce$1(constraints).constrain$1(C.Size_0_0);
    }
  };
  E.RenderLimitedBox.prototype = {
    set$maxWidth: function(_, value) {
      if (this._maxWidth === value)
        return;
      this._maxWidth = value;
      this.markNeedsLayout$0();
    },
    set$maxHeight: function(_, value) {
      if (this._maxHeight === value)
        return;
      this._maxHeight = value;
      this.markNeedsLayout$0();
    },
    _limitConstraints$1: function(constraints) {
      var t3, t4,
        t1 = constraints.minWidth,
        t2 = constraints.maxWidth;
      t2 = t2 < 1 / 0 ? t2 : C.JSInt_methods.clamp$2(this._maxWidth, t1, t2);
      t3 = constraints.minHeight;
      t4 = constraints.maxHeight;
      return new S.BoxConstraints(t1, t2, t3, t4 < 1 / 0 ? t4 : C.JSInt_methods.clamp$2(this._maxHeight, t3, t4));
    },
    _proxy_box$_computeSize$2$constraints$layoutChild: function(constraints, layoutChild) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return constraints.constrain$1(layoutChild.call$2(t1, this._limitConstraints$1(constraints)));
      return this._limitConstraints$1(constraints).constrain$1(C.Size_0_0);
    },
    computeDryLayout$1: function(constraints) {
      return this._proxy_box$_computeSize$2$constraints$layoutChild(constraints, N.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    performLayout$0: function() {
      this._size = this._proxy_box$_computeSize$2$constraints$layoutChild(K.RenderObject.prototype.get$constraints.call(this), N.layout_helper_ChildLayoutHelper_layoutChild$closure());
    }
  };
  E.RenderOpacity.prototype = {
    get$alwaysNeedsCompositing: function() {
      if (this.RenderObjectWithChildMixin__child != null) {
        var t1 = this._alpha;
        t1 = t1 !== 0 && t1 !== 255;
      } else
        t1 = false;
      return t1;
    },
    set$opacity: function(_, value) {
      var didNeedCompositing, t1, _this = this;
      if (_this._proxy_box$_opacity === value)
        return;
      didNeedCompositing = _this.get$alwaysNeedsCompositing();
      t1 = _this._alpha;
      _this._proxy_box$_opacity = value;
      _this._alpha = C.JSNumber_methods.round$0(C.JSNumber_methods.clamp$2(value, 0, 1) * 255);
      if (didNeedCompositing !== _this.get$alwaysNeedsCompositing())
        _this.markNeedsCompositingBitsUpdate$0();
      _this.markNeedsPaint$0();
      if (t1 !== 0 !== (_this._alpha !== 0) && true)
        _this.markNeedsSemanticsUpdate$0();
    },
    set$alwaysIncludeSemantics: function(value) {
      return;
    },
    paint$2: function(context, offset) {
      var t2, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = _this._alpha;
        if (t2 === 0) {
          _this._layer = null;
          return;
        }
        if (t2 === 255) {
          _this._layer = null;
          context.paintChild$2(t1, offset);
          return;
        }
        _this._layer = context.pushOpacity$4$oldLayer(offset, t2, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), type$.nullable_OpacityLayer._as(_this._layer));
      }
    },
    visitChildrenForSemantics$1: function(visitor) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t2 = this._alpha !== 0 || false;
      else
        t2 = false;
      if (t2) {
        t1.toString;
        visitor.call$1(t1);
      }
    }
  };
  E.RenderAnimatedOpacityMixin.prototype = {
    get$alwaysNeedsCompositing: function() {
      if (this.RenderObjectWithChildMixin__child != null) {
        var t1 = this.RenderAnimatedOpacityMixin__currentlyNeedsCompositing;
        t1.toString;
      } else
        t1 = false;
      return t1;
    },
    set$opacity: function(_, value) {
      var _this = this,
        t1 = _this.RenderAnimatedOpacityMixin__opacity;
      if (t1 === value)
        return;
      if (_this._node$_owner != null && t1 != null)
        t1.get$parent(t1).removeListener$1(0, _this.get$_updateOpacity());
      _this.RenderAnimatedOpacityMixin__opacity = value;
      if (_this._node$_owner != null)
        value.get$parent(value).addListener$1(0, _this.get$_updateOpacity());
      _this._updateOpacity$0();
    },
    set$alwaysIncludeSemantics: function(value) {
      if (false === this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics)
        return;
      this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics = false;
      this.markNeedsSemanticsUpdate$0();
    },
    _updateOpacity$0: function() {
      var didNeedCompositing, _this = this,
        oldAlpha = _this.RenderAnimatedOpacityMixin__alpha,
        t1 = _this.RenderAnimatedOpacityMixin__opacity;
      t1 = _this.RenderAnimatedOpacityMixin__alpha = C.JSNumber_methods.round$0(C.JSNumber_methods.clamp$2(t1.get$value(t1), 0, 1) * 255);
      if (oldAlpha !== t1) {
        didNeedCompositing = _this.RenderAnimatedOpacityMixin__currentlyNeedsCompositing;
        t1 = t1 > 0 && t1 < 255;
        _this.RenderAnimatedOpacityMixin__currentlyNeedsCompositing = t1;
        if (_this.RenderObjectWithChildMixin__child != null && didNeedCompositing !== t1)
          _this.markNeedsCompositingBitsUpdate$0();
        _this.markNeedsPaint$0();
        if (oldAlpha === 0 || _this.RenderAnimatedOpacityMixin__alpha === 0)
          _this.markNeedsSemanticsUpdate$0();
      }
    },
    visitChildrenForSemantics$1: function(visitor) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        if (this.RenderAnimatedOpacityMixin__alpha === 0) {
          t2 = this.RenderAnimatedOpacityMixin__alwaysIncludeSemantics;
          t2.toString;
        } else
          t2 = true;
      else
        t2 = false;
      if (t2) {
        t1.toString;
        visitor.call$1(t1);
      }
    }
  };
  E.RenderAnimatedOpacity.prototype = {};
  E.CustomClipper.prototype = {
    addListener$1: function(_, listener) {
      return null;
    },
    removeListener$1: function(_, listener) {
      return null;
    },
    toString$0: function(_) {
      return "CustomClipper";
    }
  };
  E.ShapeBorderClipper.prototype = {
    getClip$1: function(size) {
      return this.shape.getOuterPath$2$textDirection(new P.Rect(0, 0, 0 + size._dx, 0 + size._dy), this.textDirection);
    },
    shouldReclip$1: function(oldClipper) {
      if (H.getRuntimeType(oldClipper) !== C.Type_ShapeBorderClipper_QWG)
        return true;
      type$.ShapeBorderClipper._as(oldClipper);
      return !oldClipper.shape.$eq(0, this.shape) || oldClipper.textDirection != this.textDirection;
    }
  };
  E._RenderCustomClip.prototype = {
    set$clipper: function(newClipper) {
      var t2, _this = this,
        t1 = _this._clipper;
      if (t1 == newClipper)
        return;
      _this._clipper = newClipper;
      t2 = newClipper == null;
      if (t2 || t1 == null || H.getRuntimeType(newClipper) !== H.getRuntimeType(t1) || newClipper.shouldReclip$1(t1))
        _this._markNeedsClip$0();
      if (_this._node$_owner != null) {
        if (t1 != null)
          t1.removeListener$1(0, _this.get$_markNeedsClip());
        if (!t2)
          newClipper.addListener$1(0, _this.get$_markNeedsClip());
      }
    },
    attach$1: function(owner) {
      var t1;
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      t1 = this._clipper;
      if (t1 != null)
        t1.addListener$1(0, this.get$_markNeedsClip());
    },
    detach$0: function(_) {
      var t1 = this._clipper;
      if (t1 != null)
        t1.removeListener$1(0, this.get$_markNeedsClip());
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    _markNeedsClip$0: function() {
      this._clip = null;
      this.markNeedsPaint$0();
      this.markNeedsSemanticsUpdate$0();
    },
    set$clipBehavior: function(value) {
      if (value !== this._clipBehavior) {
        this._clipBehavior = value;
        this.markNeedsPaint$0();
      }
    },
    performLayout$0: function() {
      var t1, _this = this,
        oldSize = _this._size;
      oldSize = oldSize != null ? oldSize : null;
      _this.super$RenderProxyBoxMixin$performLayout();
      t1 = _this._size;
      t1.toString;
      if (!J.$eq$(oldSize, t1))
        _this._clip = null;
    },
    _updateClip$0: function() {
      var t1, t2, _this = this;
      if (_this._clip == null) {
        t1 = _this._clipper;
        if (t1 == null)
          t1 = null;
        else {
          t2 = _this._size;
          t2.toString;
          t2 = t1.getClip$1(t2);
          t1 = t2;
        }
        _this._clip = t1 == null ? _this.get$_defaultClip() : t1;
      }
    },
    describeApproximatePaintClip$1: function(child) {
      var t1;
      if (this._clipper == null)
        t1 = null;
      else {
        t1 = this._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      if (t1 == null) {
        t1 = this._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      }
      return t1;
    }
  };
  E.RenderClipPath.prototype = {
    get$_defaultClip: function() {
      var t1 = P.Path_Path(),
        t2 = this._size;
      t1.addRect$1(0, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
      return t1;
    },
    hitTest$2$position: function(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2: function(context, offset) {
      var t1, t2, t3, t4, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        _this._updateClip$0();
        t1 = _this.get$_needsCompositing();
        t2 = _this._size;
        t3 = t2._dx;
        t2 = t2._dy;
        t4 = _this._clip;
        t4.toString;
        _this._layer = context.pushClipPath$7$clipBehavior$oldLayer(t1, offset, new P.Rect(0, 0, 0 + t3, 0 + t2), t4, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), _this._clipBehavior, type$.nullable_ClipPathLayer._as(_this._layer));
      } else
        _this._layer = null;
    }
  };
  E._RenderPhysicalModelBase.prototype = {
    set$elevation: function(_, value) {
      if (this._proxy_box$_elevation === value)
        return;
      this._proxy_box$_elevation = value;
      this.markNeedsPaint$0();
    },
    set$shadowColor: function(_, value) {
      if (this._proxy_box$_shadowColor.$eq(0, value))
        return;
      this._proxy_box$_shadowColor = value;
      this.markNeedsPaint$0();
    },
    set$color: function(_, value) {
      if (this._proxy_box$_color.$eq(0, value))
        return;
      this._proxy_box$_color = value;
      this.markNeedsPaint$0();
    },
    get$alwaysNeedsCompositing: function() {
      return true;
    },
    describeSemanticsConfiguration$1: function(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.set$elevation(0, this._proxy_box$_elevation);
    }
  };
  E.RenderPhysicalModel.prototype = {
    set$shape: function(_, value) {
      if (this._shape === value)
        return;
      this._shape = value;
      this._markNeedsClip$0();
    },
    set$borderRadius: function(_, value) {
      if (this._proxy_box$_borderRadius.$eq(0, value))
        return;
      this._proxy_box$_borderRadius = value;
      this._markNeedsClip$0();
    },
    get$_defaultClip: function() {
      var t1, t2, t3, t4, _this = this;
      switch (_this._shape) {
        case C.BoxShape_0:
          t1 = _this._proxy_box$_borderRadius;
          t2 = _this._size;
          return t1.toRRect$1(new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
        case C.BoxShape_1:
          t1 = _this._size;
          t2 = 0 + t1._dx;
          t1 = 0 + t1._dy;
          t3 = (t2 - 0) / 2;
          t4 = (t1 - 0) / 2;
          return new P.RRect(0, 0, t2, t1, t3, t4, t3, t4, t3, t4, t3, t4, t3 === t4);
      }
    },
    hitTest$2$position: function(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2: function(context, offset) {
      var offsetRRect, offsetRRectAsPath, t1, t2, t3, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        _this._updateClip$0();
        offsetRRect = _this._clip.shift$1(offset);
        offsetRRectAsPath = P.Path_Path();
        offsetRRectAsPath.addRRect$1(0, offsetRRect);
        t1 = type$.nullable_PhysicalModelLayer;
        if (t1._as(K.RenderObject.prototype.get$layer.call(_this, _this)) == null)
          _this._layer = T.PhysicalModelLayer$();
        t2 = t1._as(K.RenderObject.prototype.get$layer.call(_this, _this));
        t2.set$clipPath(0, offsetRRectAsPath);
        t2.set$clipBehavior(_this._clipBehavior);
        t3 = _this._proxy_box$_elevation;
        t2.set$elevation(0, t3);
        t2.set$color(0, _this._proxy_box$_color);
        t2.set$shadowColor(0, _this._proxy_box$_shadowColor);
        t1 = t1._as(K.RenderObject.prototype.get$layer.call(_this, _this));
        t1.toString;
        context.pushLayer$4$childPaintBounds(t1, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset, new P.Rect(offsetRRect.left, offsetRRect.top, offsetRRect.right, offsetRRect.bottom));
      } else
        _this._layer = null;
    }
  };
  E.RenderPhysicalShape.prototype = {
    get$_defaultClip: function() {
      var t1 = P.Path_Path(),
        t2 = this._size;
      t1.addRect$1(0, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
      return t1;
    },
    hitTest$2$position: function(result, position) {
      var _this = this;
      if (_this._clipper != null) {
        _this._updateClip$0();
        if (!_this._clip.contains$1(0, position))
          return false;
      }
      return _this.super$RenderBox$hitTest(result, position);
    },
    paint$2: function(context, offset) {
      var t1, t2, t3, t4, offsetPath, t5, t6, t7, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        _this._updateClip$0();
        t1 = _this._size;
        t2 = offset._dx;
        t3 = offset._dy;
        t4 = t1._dx;
        t1 = t1._dy;
        offsetPath = _this._clip.shift$1(offset);
        t5 = type$.nullable_PhysicalModelLayer;
        if (t5._as(K.RenderObject.prototype.get$layer.call(_this, _this)) == null)
          _this._layer = T.PhysicalModelLayer$();
        t6 = t5._as(K.RenderObject.prototype.get$layer.call(_this, _this));
        t6.set$clipPath(0, offsetPath);
        t6.set$clipBehavior(_this._clipBehavior);
        t7 = _this._proxy_box$_elevation;
        t6.set$elevation(0, t7);
        t6.set$color(0, _this._proxy_box$_color);
        t6.set$shadowColor(0, _this._proxy_box$_shadowColor);
        t5 = t5._as(K.RenderObject.prototype.get$layer.call(_this, _this));
        t5.toString;
        context.pushLayer$4$childPaintBounds(t5, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset, new P.Rect(t2, t3, t2 + t4, t3 + t1));
      } else
        _this._layer = null;
    }
  };
  E.DecorationPosition.prototype = {
    toString$0: function(_) {
      return this._proxy_box$_name;
    }
  };
  E.RenderDecoratedBox.prototype = {
    set$decoration: function(_, value) {
      var t1, _this = this;
      if (value.$eq(0, _this._proxy_box$_decoration))
        return;
      t1 = _this._painter;
      if (t1 != null)
        t1.dispose$0(0);
      _this._painter = null;
      _this._proxy_box$_decoration = value;
      _this.markNeedsPaint$0();
    },
    set$position: function(_, value) {
      if (value === this._proxy_box$_position)
        return;
      this._proxy_box$_position = value;
      this.markNeedsPaint$0();
    },
    set$configuration: function(value) {
      if (value.$eq(0, this._proxy_box$_configuration))
        return;
      this._proxy_box$_configuration = value;
      this.markNeedsPaint$0();
    },
    detach$0: function(_) {
      var _this = this,
        t1 = _this._painter;
      if (t1 != null)
        t1.dispose$0(0);
      _this._painter = null;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
      _this.markNeedsPaint$0();
    },
    hitTestSelf$1: function(position) {
      var t1 = this._proxy_box$_decoration,
        t2 = this._size;
      t2.toString;
      return t1.hitTest$3$textDirection(t2, position, this._proxy_box$_configuration.textDirection);
    },
    paint$2: function(context, offset) {
      var t2, t3, filledConfiguration, _this = this,
        t1 = _this._painter;
      if (t1 == null)
        t1 = _this._painter = _this._proxy_box$_decoration.createBoxPainter$1(_this.get$markNeedsPaint());
      t2 = _this._proxy_box$_configuration;
      t3 = _this._size;
      t3.toString;
      filledConfiguration = new M.ImageConfiguration(t2.bundle, t2.devicePixelRatio, t2.locale, t2.textDirection, t3, t2.platform);
      if (_this._proxy_box$_position === C.DecorationPosition_0) {
        t1.paint$3(context.get$canvas(context), offset, filledConfiguration);
        if (_this._proxy_box$_decoration.get$isComplex())
          context.setIsComplexHint$0();
      }
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (_this._proxy_box$_position === C.DecorationPosition_1) {
        t1 = _this._painter;
        t1.toString;
        t1.paint$3(context.get$canvas(context), offset, filledConfiguration);
        if (_this._proxy_box$_decoration.get$isComplex())
          context.setIsComplexHint$0();
      }
    }
  };
  E.RenderFractionalTranslation.prototype = {
    set$translation: function(value) {
      var _this = this;
      if (_this._translation.$eq(0, value))
        return;
      _this._translation = value;
      _this.markNeedsPaint$0();
      _this.markNeedsSemanticsUpdate$0();
    },
    hitTest$2$position: function(result, position) {
      return this.hitTestChildren$2$position(result, position);
    },
    hitTestChildren$2$position: function(result, position) {
      var t1, t2, _this = this;
      if (_this.transformHitTests) {
        t1 = _this._translation;
        t2 = _this._size;
        t2 = new P.Offset(t1._dx * t2._dx, t1._dy * t2._dy);
        t1 = t2;
      } else
        t1 = null;
      return result.addWithPaintOffset$3$hitTest$offset$position(new E.RenderFractionalTranslation_hitTestChildren_closure(_this), t1, position);
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        t1 = _this._translation;
        t2 = _this._size;
        _this.super$RenderProxyBoxMixin$paint(context, new P.Offset(offset._dx + t1._dx * t2._dx, offset._dy + t1._dy * t2._dy));
      }
    },
    applyPaintTransform$2: function(child, transform) {
      var t1 = this._translation,
        t2 = this._size;
      transform.translate$2(0, t1._dx * t2._dx, t1._dy * t2._dy);
    }
  };
  E.RenderFractionalTranslation_hitTestChildren_closure.prototype = {
    call$2: function(result, position) {
      return this.$this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    $signature: 20
  };
  E.RenderPointerListener.prototype = {
    computeSizeForNoChild$1: function(constraints) {
      return new P.Size(C.JSInt_methods.clamp$2(1 / 0, constraints.minWidth, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    handleEvent$2: function($event, entry) {
      var t1, _null = null;
      if (type$.PointerDownEvent._is($event)) {
        t1 = this.onPointerDown.call$1($event);
        return t1;
      }
      if (type$.PointerMoveEvent._is($event))
        return _null;
      if (type$.PointerUpEvent._is($event)) {
        t1 = this.onPointerUp;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerHoverEvent._is($event))
        return _null;
      if (type$.PointerCancelEvent._is($event)) {
        t1 = this.onPointerCancel;
        return t1 == null ? _null : t1.call$1($event);
      }
      if (type$.PointerSignalEvent._is($event))
        return _null;
    }
  };
  E.RenderMouseRegion.prototype = {
    hitTestSelf$1: function(position) {
      return true;
    },
    hitTest$2$position: function(result, position) {
      return this.super$RenderBox$hitTest(result, position) && true;
    },
    handleEvent$2: function($event, entry) {
    },
    get$cursor: function(_) {
      return this._cursor;
    },
    get$validForMouseTracker: function() {
      return this._validForMouseTracker;
    },
    attach$1: function(owner) {
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      this._validForMouseTracker = true;
    },
    detach$0: function(_) {
      this._validForMouseTracker = false;
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    computeSizeForNoChild$1: function(constraints) {
      return new P.Size(C.JSInt_methods.clamp$2(1 / 0, constraints.minWidth, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    $isMouseTrackerAnnotation: 1,
    get$onEnter: function(receiver) {
      return this.onEnter;
    },
    get$onExit: function(receiver) {
      return this.onExit;
    }
  };
  E.RenderRepaintBoundary.prototype = {
    get$isRepaintBoundary: function() {
      return true;
    }
  };
  E.RenderIgnorePointer.prototype = {
    set$ignoring: function(value) {
      var t1, _this = this;
      if (value === _this._ignoring)
        return;
      _this._ignoring = value;
      t1 = _this._ignoringSemantics;
      if (t1 == null || !t1)
        _this.markNeedsSemanticsUpdate$0();
    },
    set$ignoringSemantics: function(value) {
      var _this = this,
        oldEffectiveValue = _this._ignoringSemantics;
      if (value == oldEffectiveValue)
        return;
      if (oldEffectiveValue == null)
        oldEffectiveValue = _this._ignoring;
      _this._ignoringSemantics = value;
      if (oldEffectiveValue !== (value == null ? _this._ignoring : value))
        _this.markNeedsSemanticsUpdate$0();
    },
    hitTest$2$position: function(result, position) {
      return !this._ignoring && this.super$RenderBox$hitTest(result, position);
    },
    visitChildrenForSemantics$1: function(visitor) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = this._ignoringSemantics;
        t2 = !(t2 == null ? this._ignoring : t2);
      } else
        t2 = false;
      if (t2) {
        t1.toString;
        visitor.call$1(t1);
      }
    }
  };
  E.RenderOffstage.prototype = {
    set$offstage: function(value) {
      var _this = this;
      if (value === _this._offstage)
        return;
      _this._offstage = value;
      _this.markNeedsLayout$0();
      _this.markParentNeedsLayout$0();
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      if (this._offstage)
        return null;
      return this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline(baseline);
    },
    get$sizedByParent: function() {
      return this._offstage;
    },
    computeDryLayout$1: function(constraints) {
      if (this._offstage)
        return new P.Size(C.JSInt_methods.clamp$2(0, constraints.minWidth, constraints.maxWidth), C.JSInt_methods.clamp$2(0, constraints.minHeight, constraints.maxHeight));
      return this.super$RenderProxyBoxMixin$computeDryLayout(constraints);
    },
    performResize$0: function() {
      this.super$RenderBox$performResize();
    },
    performLayout$0: function() {
      var t1, _this = this;
      if (_this._offstage) {
        t1 = _this.RenderObjectWithChildMixin__child;
        if (t1 != null)
          t1.layout$1(0, K.RenderObject.prototype.get$constraints.call(_this));
      } else
        _this.super$RenderProxyBoxMixin$performLayout();
    },
    hitTest$2$position: function(result, position) {
      return !this._offstage && this.super$RenderBox$hitTest(result, position);
    },
    paint$2: function(context, offset) {
      if (this._offstage)
        return;
      this.super$RenderProxyBoxMixin$paint(context, offset);
    },
    visitChildrenForSemantics$1: function(visitor) {
      if (this._offstage)
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    debugDescribeChildren$0: function() {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 == null)
        return H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
      return H.setRuntimeTypeInfo([Y.DiagnosticableTreeNode$("child", this._offstage ? C.DiagnosticsTreeStyle_2 : C.DiagnosticsTreeStyle_1, t1)], type$.JSArray_DiagnosticsNode);
    }
  };
  E.RenderAbsorbPointer.prototype = {
    set$absorbing: function(value) {
      if (this._absorbing === value)
        return;
      this._absorbing = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$ignoringSemantics: function(value) {
      return;
    },
    hitTest$2$position: function(result, position) {
      return this._absorbing ? this._size.contains$1(0, position) : this.super$RenderBox$hitTest(result, position);
    },
    visitChildrenForSemantics$1: function(visitor) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = this._absorbing;
        t2 = !t2;
      } else
        t2 = false;
      if (t2) {
        t1.toString;
        visitor.call$1(t1);
      }
    }
  };
  E.RenderSemanticsGestureHandler.prototype = {
    set$onTap: function(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onTap, value))
        return;
      t1 = _this._onTap;
      _this._onTap = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onLongPress: function(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onLongPress, value))
        return;
      t1 = _this._onLongPress;
      _this._onLongPress = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onHorizontalDragUpdate: function(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onHorizontalDragUpdate, value))
        return;
      t1 = _this._onHorizontalDragUpdate;
      _this._onHorizontalDragUpdate = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onVerticalDragUpdate: function(value) {
      var t1, _this = this;
      if (J.$eq$(_this._onVerticalDragUpdate, value))
        return;
      t1 = _this._onVerticalDragUpdate;
      _this._onVerticalDragUpdate = value;
      if (value != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1, t2, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      t1 = _this._onTap;
      if (t1 != null)
        t2 = true;
      else
        t2 = false;
      if (t2)
        config.set$onTap(t1);
      t1 = _this._onLongPress;
      if (t1 != null)
        t2 = true;
      else
        t2 = false;
      if (t2)
        config.set$onLongPress(t1);
      if (_this._onHorizontalDragUpdate != null) {
        config.set$onScrollRight(_this.get$_performSemanticScrollRight());
        config.set$onScrollLeft(_this.get$_performSemanticScrollLeft());
      }
      if (_this._onVerticalDragUpdate != null) {
        config.set$onScrollUp(_this.get$_performSemanticScrollUp());
        config.set$onScrollDown(_this.get$_performSemanticScrollDown());
      }
    },
    _performSemanticScrollLeft$0: function() {
      var t2, primaryDelta,
        t1 = this._onHorizontalDragUpdate;
      if (t1 != null) {
        t2 = this._size;
        primaryDelta = t2._dx * -0.8;
        t2 = t2.center$1(C.Offset_0_0);
        t2 = T.MatrixUtils_transformPoint(this.getTransformTo$1(0, null), t2);
        t1.call$1(new O.DragUpdateDetails(new P.Offset(primaryDelta, 0), primaryDelta, t2));
      }
    },
    _performSemanticScrollRight$0: function() {
      var t2, primaryDelta,
        t1 = this._onHorizontalDragUpdate;
      if (t1 != null) {
        t2 = this._size;
        primaryDelta = t2._dx * 0.8;
        t2 = t2.center$1(C.Offset_0_0);
        t2 = T.MatrixUtils_transformPoint(this.getTransformTo$1(0, null), t2);
        t1.call$1(new O.DragUpdateDetails(new P.Offset(primaryDelta, 0), primaryDelta, t2));
      }
    },
    _performSemanticScrollUp$0: function() {
      var t2, primaryDelta,
        t1 = this._onVerticalDragUpdate;
      if (t1 != null) {
        t2 = this._size;
        primaryDelta = t2._dy * -0.8;
        t2 = t2.center$1(C.Offset_0_0);
        t2 = T.MatrixUtils_transformPoint(this.getTransformTo$1(0, null), t2);
        t1.call$1(new O.DragUpdateDetails(new P.Offset(0, primaryDelta), primaryDelta, t2));
      }
    },
    _performSemanticScrollDown$0: function() {
      var t2, primaryDelta,
        t1 = this._onVerticalDragUpdate;
      if (t1 != null) {
        t2 = this._size;
        primaryDelta = t2._dy * 0.8;
        t2 = t2.center$1(C.Offset_0_0);
        t2 = T.MatrixUtils_transformPoint(this.getTransformTo$1(0, null), t2);
        t1.call$1(new O.DragUpdateDetails(new P.Offset(0, primaryDelta), primaryDelta, t2));
      }
    }
  };
  E.RenderSemanticsAnnotations.prototype = {
    set$container: function(value) {
      if (this._container === value)
        return;
      this._container = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$explicitChildNodes: function(value) {
      if (this._explicitChildNodes === value)
        return;
      this._explicitChildNodes = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$excludeSemantics: function(value) {
      return;
    },
    set$checked: function(_, value) {
      return;
    },
    set$enabled: function(_, value) {
      if (this._enabled == value)
        return;
      this._enabled = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$selected: function(_, value) {
      return;
    },
    set$button: function(_, value) {
      if (this._button == value)
        return;
      this._button = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$slider: function(value) {
      return;
    },
    set$keyboardKey: function(value) {
      return;
    },
    set$link: function(value) {
      return;
    },
    set$header: function(value) {
      return;
    },
    set$textField: function(value) {
      return;
    },
    set$readOnly: function(_, value) {
      return;
    },
    set$focusable: function(value) {
      if (this._focusable == value)
        return;
      this._focusable = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$focused: function(_, value) {
      if (this._focused == value)
        return;
      this._focused = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$inMutuallyExclusiveGroup: function(value) {
      return;
    },
    set$obscured: function(value) {
      return;
    },
    set$multiline: function(_, value) {
      return;
    },
    set$scopesRoute: function(value) {
      if (this._scopesRoute == value)
        return;
      this._scopesRoute = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$namesRoute: function(value) {
      return;
    },
    set$hidden: function(_, value) {
      return;
    },
    set$image: function(_, value) {
      return;
    },
    set$liveRegion: function(value) {
      return;
    },
    set$maxValueLength: function(value) {
      return;
    },
    set$currentValueLength: function(value) {
      return;
    },
    set$toggled: function(value) {
      return;
    },
    set$label: function(_, value) {
      return;
    },
    set$value: function(_, value) {
      return;
    },
    set$increasedValue: function(value) {
      return;
    },
    set$decreasedValue: function(value) {
      return;
    },
    set$hint: function(_, value) {
      return;
    },
    set$hintOverrides: function(value) {
      if (J.$eq$(this._hintOverrides, value))
        return;
      this._hintOverrides = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$textDirection: function(_, value) {
      if (this._proxy_box$_textDirection == value)
        return;
      this._proxy_box$_textDirection = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$sortKey: function(value) {
      if (this._sortKey == value)
        return;
      this._sortKey = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$tagForChildren: function(value) {
      if (J.$eq$(this._tagForChildren, value))
        return;
      this.markNeedsSemanticsUpdate$0();
      this._tagForChildren = value;
    },
    set$onTap: function(handler) {
      var t1, _this = this;
      if (J.$eq$(_this._onTap, handler))
        return;
      t1 = _this._onTap;
      _this._onTap = handler;
      if (handler != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onDismiss: function(handler) {
      var t1, _this = this;
      if (J.$eq$(_this._onDismiss, handler))
        return;
      t1 = _this._onDismiss;
      _this._onDismiss = handler;
      if (handler != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onLongPress: function(handler) {
      var t1, _this = this;
      if (J.$eq$(_this._onLongPress, handler))
        return;
      t1 = _this._onLongPress;
      _this._onLongPress = handler;
      if (handler != null !== (t1 != null))
        _this.markNeedsSemanticsUpdate$0();
    },
    set$onScrollLeft: function(handler) {
      return;
    },
    set$onScrollRight: function(handler) {
      return;
    },
    set$onScrollUp: function(handler) {
      return;
    },
    set$onScrollDown: function(handler) {
      return;
    },
    set$onIncrease: function(handler) {
      return;
    },
    set$onDecrease: function(handler) {
      return;
    },
    set$onCopy: function(_, handler) {
      return;
    },
    set$onCut: function(_, handler) {
      return;
    },
    set$onPaste: function(_, handler) {
      return;
    },
    set$onMoveCursorForwardByCharacter: function(handler) {
      return;
    },
    set$onMoveCursorBackwardByCharacter: function(handler) {
      return;
    },
    set$onMoveCursorForwardByWord: function(handler) {
      return;
    },
    set$onMoveCursorBackwardByWord: function(handler) {
      return;
    },
    set$onSetSelection: function(handler) {
      return;
    },
    set$onSetText: function(handler) {
      return;
    },
    set$onDidGainAccessibilityFocus: function(handler) {
      return;
    },
    set$onDidLoseAccessibilityFocus: function(handler) {
      return;
    },
    set$customSemanticsActions: function(value) {
      return;
    },
    visitChildrenForSemantics$1: function(visitor) {
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    },
    describeSemanticsConfiguration$1: function(config) {
      var t1, t2, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      config._isSemanticBoundary = _this._container;
      config.explicitChildNodes = _this._explicitChildNodes;
      t1 = _this._enabled;
      if (t1 != null) {
        config._setFlag$2(C.SemanticsFlag_64, true);
        config._setFlag$2(C.SemanticsFlag_128, t1);
      }
      t1 = _this._button;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_8, t1);
      t1 = _this._focusable;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_2097152, t1);
      t1 = _this._focused;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_32, t1);
      _this._hintOverrides != null;
      t1 = _this._scopesRoute;
      if (t1 != null)
        config._setFlag$2(C.SemanticsFlag_2048, t1);
      t1 = _this._proxy_box$_textDirection;
      if (t1 != null) {
        config._semantics$_textDirection = t1;
        config._hasBeenAnnotated = true;
      }
      t1 = _this._sortKey;
      if (t1 != null) {
        config._semantics$_sortKey = t1;
        config._hasBeenAnnotated = true;
      }
      t1 = _this._tagForChildren;
      if (t1 != null) {
        t2 = config._tagsForChildren;
        (t2 == null ? config._tagsForChildren = P.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag) : t2).add$1(0, t1);
      }
      if (_this._onTap != null)
        config.set$onTap(_this.get$_performTap());
      if (_this._onLongPress != null)
        config.set$onLongPress(_this.get$_performLongPress());
      if (_this._onDismiss != null)
        config.set$onDismiss(_this.get$_performDismiss());
    },
    _performTap$0: function() {
      var t1 = this._onTap;
      if (t1 != null)
        t1.call$0();
    },
    _performLongPress$0: function() {
      var t1 = this._onLongPress;
      if (t1 != null)
        t1.call$0();
    },
    _performDismiss$0: function() {
      var t1 = this._onDismiss;
      if (t1 != null)
        t1.call$0();
    }
  };
  E.RenderBlockSemantics.prototype = {
    set$blocking: function(value) {
      return;
    },
    describeSemanticsConfiguration$1: function(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config.isBlockingSemanticsOfPreviouslyPaintedNodes = true;
    }
  };
  E.RenderMergeSemantics.prototype = {
    describeSemanticsConfiguration$1: function(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config._hasBeenAnnotated = config._isMergingSemanticsOfDescendants = config._isSemanticBoundary = true;
    }
  };
  E.RenderExcludeSemantics.prototype = {
    set$excluding: function(value) {
      if (value === this._excluding)
        return;
      this._excluding = value;
      this.markNeedsSemanticsUpdate$0();
    },
    visitChildrenForSemantics$1: function(visitor) {
      if (this._excluding)
        return;
      this.super$RenderObject$visitChildrenForSemantics(visitor);
    }
  };
  E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin.prototype = {
    computeDistanceToActualBaseline$1: function(baseline) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return t1.getDistanceToActualBaseline$1(baseline);
      return this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline(baseline);
    }
  };
  E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin.prototype = {
    attach$1: function(owner) {
      var t1, _this = this;
      _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach(owner);
      t1 = _this.RenderAnimatedOpacityMixin__opacity;
      t1.get$parent(t1).addListener$1(0, _this.get$_updateOpacity());
      _this._updateOpacity$0();
    },
    detach$0: function(_) {
      var t1 = this.RenderAnimatedOpacityMixin__opacity;
      t1.get$parent(t1).removeListener$1(0, this.get$_updateOpacity());
      this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach(0);
    },
    paint$2: function(context, offset) {
      var t2, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = _this.RenderAnimatedOpacityMixin__alpha;
        if (t2 === 0) {
          _this._layer = null;
          return;
        }
        if (t2 === 255) {
          _this._layer = null;
          context.paintChild$2(t1, offset);
          return;
        }
        t2.toString;
        _this._layer = context.pushOpacity$4$oldLayer(offset, t2, E.RenderProxyBoxMixin.prototype.get$paint.call(_this), type$.nullable_OpacityLayer._as(_this._layer));
      }
    }
  };
  E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1: function(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0: function(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin.prototype = {
    computeDistanceToActualBaseline$1: function(baseline) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        return t1.getDistanceToActualBaseline$1(baseline);
      return this.super$RenderBox$computeDistanceToActualBaseline(baseline);
    }
  };
  T.RenderShiftedBox.prototype = {
    computeDistanceToActualBaseline$1: function(baseline) {
      var result,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        result = t1.getDistanceToActualBaseline$1(baseline);
        t1 = this.RenderObjectWithChildMixin__child.parentData;
        t1.toString;
        type$.BoxParentData._as(t1);
        if (result != null)
          result += t1.offset._dy;
      } else
        result = this.super$RenderBox$computeDistanceToActualBaseline(baseline);
      return result;
    },
    paint$2: function(context, offset) {
      var t2,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t2 = t1.parentData;
        t2.toString;
        context.paintChild$2(t1, type$.BoxParentData._as(t2).offset.$add(0, offset));
      }
    },
    hitTestChildren$2$position: function(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1 = t1.parentData;
        t1.toString;
        type$.BoxParentData._as(t1);
        return result.addWithPaintOffset$3$hitTest$offset$position(new T.RenderShiftedBox_hitTestChildren_closure(this, position, t1), t1.offset, position);
      }
      return false;
    }
  };
  T.RenderShiftedBox_hitTestChildren_closure.prototype = {
    call$2: function(result, transformed) {
      return this.$this.RenderObjectWithChildMixin__child.hitTest$2$position(result, transformed);
    },
    $signature: 20
  };
  T.RenderPadding.prototype = {
    _shifted_box$_resolve$0: function() {
      var _this = this;
      if (_this._resolvedPadding != null)
        return;
      _this._resolvedPadding = _this._padding.resolve$1(_this._shifted_box$_textDirection);
    },
    set$padding: function(_, value) {
      var _this = this;
      if (_this._padding.$eq(0, value))
        return;
      _this._padding = value;
      _this._resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection: function(_, value) {
      var _this = this;
      if (_this._shifted_box$_textDirection == value)
        return;
      _this._shifted_box$_textDirection = value;
      _this._resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    computeDryLayout$1: function(constraints) {
      var t1, innerConstraints, childSize, _this = this;
      _this._shifted_box$_resolve$0();
      if (_this.RenderObjectWithChildMixin__child == null) {
        t1 = _this._resolvedPadding;
        return constraints.constrain$1(new P.Size(t1.left + t1.right, t1.top + t1.bottom));
      }
      t1 = _this._resolvedPadding;
      t1.toString;
      innerConstraints = constraints.deflate$1(t1);
      childSize = _this.RenderObjectWithChildMixin__child.getDryLayout$1(innerConstraints);
      t1 = _this._resolvedPadding;
      return constraints.constrain$1(new P.Size(t1.left + childSize._dx + t1.right, t1.top + childSize._dy + t1.bottom));
    },
    performLayout$0: function() {
      var t1, innerConstraints, t2, t3, t4, t5, _this = this,
        constraints = K.RenderObject.prototype.get$constraints.call(_this);
      _this._shifted_box$_resolve$0();
      if (_this.RenderObjectWithChildMixin__child == null) {
        t1 = _this._resolvedPadding;
        _this._size = constraints.constrain$1(new P.Size(t1.left + t1.right, t1.top + t1.bottom));
        return;
      }
      t1 = _this._resolvedPadding;
      t1.toString;
      innerConstraints = constraints.deflate$1(t1);
      _this.RenderObjectWithChildMixin__child.layout$2$parentUsesSize(0, innerConstraints, true);
      t1 = _this.RenderObjectWithChildMixin__child;
      t2 = t1.parentData;
      t2.toString;
      type$.BoxParentData._as(t2);
      t3 = _this._resolvedPadding;
      t4 = t3.left;
      t5 = t3.top;
      t2.offset = new P.Offset(t4, t5);
      t1 = t1._size;
      _this._size = constraints.constrain$1(new P.Size(t4 + t1._dx + t3.right, t5 + t1._dy + t3.bottom));
    }
  };
  T.RenderAligningShiftedBox.prototype = {
    _shifted_box$_resolve$0: function() {
      if (this._resolvedAlignment != null)
        return;
      this._resolvedAlignment = this._alignment;
    },
    set$alignment: function(value) {
      var _this = this;
      if (_this._alignment.$eq(0, value))
        return;
      _this._alignment = value;
      _this._resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection: function(_, value) {
      var _this = this;
      if (_this._shifted_box$_textDirection == value)
        return;
      _this._shifted_box$_textDirection = value;
      _this._resolvedAlignment = null;
      _this.markNeedsLayout$0();
    }
  };
  T.RenderPositionedBox.prototype = {
    set$widthFactor: function(value) {
      if (this._widthFactor == value)
        return;
      this._widthFactor = value;
      this.markNeedsLayout$0();
    },
    set$heightFactor: function(value) {
      if (this._heightFactor == value)
        return;
      this._heightFactor = value;
      this.markNeedsLayout$0();
    },
    computeDryLayout$1: function(constraints) {
      var childSize, t2, _this = this,
        shrinkWrapWidth = _this._widthFactor != null || constraints.maxWidth === 1 / 0,
        shrinkWrapHeight = _this._heightFactor != null || constraints.maxHeight === 1 / 0,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childSize = t1.getDryLayout$1(constraints.loosen$0());
        if (shrinkWrapWidth) {
          t1 = _this._widthFactor;
          if (t1 == null)
            t1 = 1;
          t1 = childSize._dx * t1;
        } else
          t1 = 1 / 0;
        if (shrinkWrapHeight) {
          t2 = _this._heightFactor;
          if (t2 == null)
            t2 = 1;
          t2 = childSize._dy * t2;
        } else
          t2 = 1 / 0;
        return constraints.constrain$1(new P.Size(t1, t2));
      }
      t1 = shrinkWrapWidth ? 0 : 1 / 0;
      return constraints.constrain$1(new P.Size(t1, shrinkWrapHeight ? 0 : 1 / 0));
    },
    performLayout$0: function() {
      var t2, t3, t4, _this = this,
        constraints = K.RenderObject.prototype.get$constraints.call(_this),
        shrinkWrapWidth = _this._widthFactor != null || constraints.maxWidth === 1 / 0,
        shrinkWrapHeight = _this._heightFactor != null || constraints.maxHeight === 1 / 0,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(0, constraints.loosen$0(), true);
        if (shrinkWrapWidth) {
          t1 = _this.RenderObjectWithChildMixin__child._size._dx;
          t2 = _this._widthFactor;
          t1 *= t2 == null ? 1 : t2;
        } else
          t1 = 1 / 0;
        if (shrinkWrapHeight) {
          t2 = _this.RenderObjectWithChildMixin__child._size._dy;
          t3 = _this._heightFactor;
          t2 *= t3 == null ? 1 : t3;
        } else
          t2 = 1 / 0;
        _this._size = constraints.constrain$1(new P.Size(t1, t2));
        _this._shifted_box$_resolve$0();
        t2 = _this.RenderObjectWithChildMixin__child;
        t1 = t2.parentData;
        t1.toString;
        type$.BoxParentData._as(t1);
        t3 = _this._resolvedAlignment;
        t3.toString;
        t4 = _this._size;
        t4.toString;
        t2 = t2._size;
        t2.toString;
        t1.offset = t3.alongOffset$1(type$.Offset._as(t4.$sub(0, t2)));
      } else {
        t1 = shrinkWrapWidth ? 0 : 1 / 0;
        _this._size = constraints.constrain$1(new P.Size(t1, shrinkWrapHeight ? 0 : 1 / 0));
      }
    }
  };
  T._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1: function(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0: function(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  K.RelativeRect.prototype = {
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof K.RelativeRect && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.left, _this.top, _this.right, _this.bottom, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this;
      return "RelativeRect.fromLTRB(" + C.JSNumber_methods.toStringAsFixed$1(_this.left, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.top, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.right, 1) + ", " + C.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1) + ")";
    }
  };
  K.StackParentData.prototype = {
    get$isPositioned: function() {
      var _this = this;
      return _this.top != null || _this.right != null || _this.bottom != null || _this.left != null || _this.width != null || _this.height != null;
    },
    toString$0: function(_) {
      var _this = this,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_String),
        t2 = _this.top;
      if (t2 != null)
        t1.push("top=" + E.debugFormatDouble(t2));
      t2 = _this.right;
      if (t2 != null)
        t1.push("right=" + E.debugFormatDouble(t2));
      t2 = _this.bottom;
      if (t2 != null)
        t1.push("bottom=" + E.debugFormatDouble(t2));
      t2 = _this.left;
      if (t2 != null)
        t1.push("left=" + E.debugFormatDouble(t2));
      t2 = _this.width;
      if (t2 != null)
        t1.push("width=" + E.debugFormatDouble(t2));
      t2 = _this.height;
      if (t2 != null)
        t1.push("height=" + E.debugFormatDouble(t2));
      if (t1.length === 0)
        t1.push("not positioned");
      t1.push(_this.super$BoxParentData$toString(0));
      return C.JSArray_methods.join$1(t1, "; ");
    },
    set$width: function(receiver, val) {
      return this.width = val;
    },
    set$height: function(receiver, val) {
      return this.height = val;
    }
  };
  K.StackFit.prototype = {
    toString$0: function(_) {
      return this._stack$_name;
    }
  };
  K.Overflow.prototype = {
    toString$0: function(_) {
      return this._stack$_name;
    }
  };
  K.RenderStack.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof K.StackParentData))
        child.parentData = new K.StackParentData(null, null, C.Offset_0_0);
    },
    _stack$_resolve$0: function() {
      var _this = this;
      if (_this._stack$_resolvedAlignment != null)
        return;
      _this._stack$_resolvedAlignment = _this._stack$_alignment.resolve$1(_this._stack$_textDirection);
    },
    set$alignment: function(value) {
      var _this = this;
      if (_this._stack$_alignment.$eq(0, value))
        return;
      _this._stack$_alignment = value;
      _this._stack$_resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    set$textDirection: function(_, value) {
      var _this = this;
      if (_this._stack$_textDirection == value)
        return;
      _this._stack$_textDirection = value;
      _this._stack$_resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      return this.defaultComputeDistanceToHighestActualBaseline$1(baseline);
    },
    computeDryLayout$1: function(constraints) {
      return this._stack$_computeSize$2$constraints$layoutChild(constraints, N.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
    },
    _stack$_computeSize$2$constraints$layoutChild: function(constraints, layoutChild) {
      var width, height, nonPositionedConstraints, child, t1, height0, width0, hasNonPositionedChildren, t2, childSize, _this = this;
      _this._stack$_resolve$0();
      if (_this.ContainerRenderObjectMixin__childCount === 0)
        return new P.Size(C.JSInt_methods.clamp$2(1 / 0, constraints.minWidth, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, constraints.minHeight, constraints.maxHeight));
      width = constraints.minWidth;
      height = constraints.minHeight;
      switch (_this._fit) {
        case C.StackFit_0:
          nonPositionedConstraints = constraints.loosen$0();
          break;
        case C.StackFit_1:
          nonPositionedConstraints = S.BoxConstraints$tight(new P.Size(C.JSInt_methods.clamp$2(1 / 0, width, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, height, constraints.maxHeight)));
          break;
        case C.StackFit_2:
          nonPositionedConstraints = constraints;
          break;
        default:
          nonPositionedConstraints = null;
      }
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData, height0 = height, width0 = width, hasNonPositionedChildren = false; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        if (!t2.get$isPositioned()) {
          childSize = layoutChild.call$2(child, nonPositionedConstraints);
          width0 = Math.max(width0, childSize._dx);
          height0 = Math.max(height0, childSize._dy);
          hasNonPositionedChildren = true;
        }
        child = t2.ContainerParentDataMixin_nextSibling;
      }
      return hasNonPositionedChildren ? new P.Size(width0, height0) : new P.Size(C.JSInt_methods.clamp$2(1 / 0, width, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, height, constraints.maxHeight));
    },
    performLayout$0: function() {
      var child, t1, t2, t3, t4, t5, t6, _this = this,
        constraints = K.RenderObject.prototype.get$constraints.call(_this);
      _this._stack$_hasVisualOverflow = false;
      _this._size = _this._stack$_computeSize$2$constraints$layoutChild(constraints, N.layout_helper_ChildLayoutHelper_layoutChild$closure());
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData, t2 = type$.Offset; child != null;) {
        t3 = child.parentData;
        t3.toString;
        t1._as(t3);
        if (!t3.get$isPositioned()) {
          t4 = _this._stack$_resolvedAlignment;
          t4.toString;
          t5 = _this._size;
          t5.toString;
          t6 = child._size;
          t6.toString;
          t3.offset = t4.alongOffset$1(t2._as(t5.$sub(0, t6)));
        } else {
          t4 = _this._size;
          t4.toString;
          t5 = _this._stack$_resolvedAlignment;
          t5.toString;
          _this._stack$_hasVisualOverflow = K.RenderStack_layoutPositionedChild(child, t3, t4, t5) || _this._stack$_hasVisualOverflow;
        }
        child = t3.ContainerParentDataMixin_nextSibling;
      }
    },
    hitTestChildren$2$position: function(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paintStack$2: function(context, offset) {
      this.defaultPaint$2(context, offset);
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (_this._stack$_clipBehavior !== C.Clip_0 && _this._stack$_hasVisualOverflow) {
        t1 = _this.get$_needsCompositing();
        t2 = _this._size;
        _this._stack$_clipRectLayer = context.pushClipRect$6$clipBehavior$oldLayer(t1, offset, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$paintStack(), _this._stack$_clipBehavior, _this._stack$_clipRectLayer);
      } else {
        _this._stack$_clipRectLayer = null;
        _this.defaultPaint$2(context, offset);
      }
    },
    describeApproximatePaintClip$1: function(child) {
      var t1;
      if (this._stack$_hasVisualOverflow) {
        t1 = this._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      } else
        t1 = null;
      return t1;
    }
  };
  K.RenderStack_layoutPositionedChild__x_set.prototype = {
    call$1: function(t1) {
      var t2 = this._box_0;
      if (t2._x0 == null)
        return t2._x0 = t1;
      else
        throw H.wrapException(H.LateError$localAI("x"));
    },
    $signature: 79
  };
  K.RenderStack_layoutPositionedChild__y_set.prototype = {
    call$1: function(t1) {
      var t2 = this._box_0;
      if (t2._y0 == null)
        return t2._y0 = t1;
      else
        throw H.wrapException(H.LateError$localAI("y"));
    },
    $signature: 79
  };
  K.RenderStack_layoutPositionedChild__x_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._x0;
      return t1 == null ? H.throwExpression(H.LateError$localNI("x")) : t1;
    },
    $signature: 54
  };
  K.RenderStack_layoutPositionedChild__y_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._y0;
      return t1 == null ? H.throwExpression(H.LateError$localNI("y")) : t1;
    },
    $signature: 54
  };
  K._RenderStack_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1, t2;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  K._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A.ViewConfiguration0.prototype = {
    toString$0: function(_) {
      return this.size.toString$0(0) + " at " + E.debugFormatDouble(this.devicePixelRatio) + "x";
    }
  };
  A.RenderView.prototype = {
    set$configuration: function(value) {
      var t1, _this = this;
      if (_this._view$_configuration === value)
        return;
      _this._view$_configuration = value;
      t1 = _this._updateMatricesAndCreateNewRootLayer$0();
      _this._layer.detach$0(0);
      _this._layer = t1;
      _this.markNeedsPaint$0();
      _this.markNeedsLayout$0();
    },
    _updateMatricesAndCreateNewRootLayer$0: function() {
      var rootLayer,
        t1 = this._view$_configuration.devicePixelRatio;
      t1 = E.Matrix4_Matrix4$diagonal3Values(t1, t1, 1);
      this._rootTransform = t1;
      rootLayer = new T.TransformLayer(t1, C.Offset_0_0);
      rootLayer.attach$1(this);
      return rootLayer;
    },
    performResize$0: function() {
    },
    performLayout$0: function() {
      var t2,
        t1 = this._view$_configuration.size;
      this._view$_size = t1;
      t2 = this.RenderObjectWithChildMixin__child;
      if (t2 != null)
        t2.layout$1(0, S.BoxConstraints$tight(t1));
    },
    hitTest$2$position: function(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.hitTest$2$position(new S.BoxHitTestResult(result._path, result._transforms, result._localTransforms), position);
      t1 = new O.HitTestEntry(this);
      result._globalizeTransforms$0();
      t1._transform = C.JSArray_methods.get$last(result._transforms);
      result._path.push(t1);
      return true;
    },
    hitTestMouseTrackers$1: function(position) {
      var result,
        t1 = H.setRuntimeTypeInfo([], type$.JSArray_HitTestEntry),
        t2 = new E.Matrix4(new Float64Array(16));
      t2.setIdentity$0();
      result = new S.BoxHitTestResult(t1, H.setRuntimeTypeInfo([t2], type$.JSArray_Matrix4), H.setRuntimeTypeInfo([], type$.JSArray__TransformPart));
      this.hitTest$2$position(result, position);
      return result;
    },
    get$isRepaintBoundary: function() {
      return true;
    },
    paint$2: function(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    },
    applyPaintTransform$2: function(child, transform) {
      var t1 = this._rootTransform;
      t1.toString;
      transform.multiply$1(0, t1);
      this.super$RenderObject$applyPaintTransform(child, transform);
    },
    compositeFrame$0: function() {
      var builder, scene, bounds, t1, t2, t3, t4, t5, _this = this;
      P.Timeline_startSync("Compositing", C.Map_9aZ6I, null);
      try {
        builder = P.SceneBuilder_SceneBuilder();
        scene = _this._layer.buildScene$1(builder);
        bounds = _this.get$paintBounds();
        t1 = bounds.get$center();
        t2 = _this._window;
        t2.get$viewConfiguration();
        t3 = bounds.get$center();
        t2.get$viewConfiguration();
        t4 = _this._layer;
        t5 = type$.SystemUiOverlayStyle;
        t4.find$1$1(0, new P.Offset(t1._dx, 0), t5);
        switch (U.defaultTargetPlatform()) {
          case C.TargetPlatform_0:
            _this._layer.find$1$1(0, new P.Offset(t3._dx, bounds.bottom - 1 - 0), t5);
            break;
          case C.TargetPlatform_1:
          case C.TargetPlatform_2:
          case C.TargetPlatform_3:
          case C.TargetPlatform_4:
          case C.TargetPlatform_5:
            break;
        }
        t2.platformDispatcher.render$2(scene, t2);
        J.dispose$0$x(scene);
      } finally {
        P.Timeline_finishSync();
      }
    },
    get$paintBounds: function() {
      var t1 = this._view$_size.$mul(0, this._view$_configuration.devicePixelRatio);
      return new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
    },
    get$semanticBounds: function() {
      var t2,
        t1 = this._rootTransform;
      t1.toString;
      t2 = this._view$_size;
      return T.MatrixUtils_transformRect(t1, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
    }
  };
  A._RenderView_RenderObject_RenderObjectWithChildMixin.prototype = {
    attach$1: function(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0: function(_) {
      var t1;
      this.super$AbstractNode$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  N._TaskEntry.prototype = {
    run$0: function() {
      P.Timeline_timeSync("Scheduled Task", new N._TaskEntry_run_closure(this), null);
    }
  };
  N._TaskEntry_run_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1.completer.complete$1(0, t1.task.call$0());
    },
    $signature: 2
  };
  N._FrameCallbackEntry.prototype = {};
  N.SchedulerPhase.prototype = {
    toString$0: function(_) {
      return this._name;
    }
  };
  N.SchedulerBinding.prototype = {
    addTimingsCallback$1: function(callback) {
      var t1 = this.SchedulerBinding__timingsCallbacks;
      t1.push(callback);
      if (t1.length === 1) {
        t1 = $.$get$window().platformDispatcher;
        t1._onReportTimings = this.get$_executeTimingsCallbacks();
        t1._onReportTimingsZone = $.Zone__current;
      }
    },
    removeTimingsCallback$1: function(callback) {
      var t1 = this.SchedulerBinding__timingsCallbacks;
      C.JSArray_methods.remove$1(t1, callback);
      if (t1.length === 0) {
        t1 = $.$get$window().platformDispatcher;
        t1._onReportTimings = null;
        t1._onReportTimingsZone = $.Zone__current;
      }
    },
    _executeTimingsCallbacks$1: function(timings) {
      var callback, exception, stack, t2, _i, exception0, t3, t4,
        t1 = this.SchedulerBinding__timingsCallbacks,
        clonedCallbacks = P.List_List$from(t1, true, type$.void_Function_List_FrameTiming);
      for (t2 = clonedCallbacks.length, _i = 0; _i < t2; ++_i) {
        callback = clonedCallbacks[_i];
        try {
          if (C.JSArray_methods.contains$1(t1, callback))
            callback.call$1(timings);
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          t3 = U.ErrorDescription$("while executing callbacks for FrameTiming");
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new U.FlutterErrorDetails(exception, stack, "Flutter framework", t3, null, false));
        }
      }
    },
    handleAppLifecycleStateChanged$1: function(state) {
      this.SchedulerBinding__lifecycleState = state;
      switch (state) {
        case C.AppLifecycleState_0:
        case C.AppLifecycleState_1:
          this._setFramesEnabledState$1(true);
          break;
        case C.AppLifecycleState_2:
        case C.AppLifecycleState_3:
          this._setFramesEnabledState$1(false);
          break;
      }
    },
    scheduleTask$1$2: function(task, priority, $T) {
      var t1 = this.SchedulerBinding__taskQueue,
        t2 = t1._priority_queue$_length,
        t3 = new P._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1.add$1(0, new N._TaskEntry(task, priority._priority$_value, null, null, new P._AsyncCompleter(t3, $T._eval$1("_AsyncCompleter<0>")), $T._eval$1("_TaskEntry<0>")));
      if (t2 === 0 && this._lockCount <= 0)
        this._ensureEventLoopCallback$0();
      return t3;
    },
    _ensureEventLoopCallback$0: function() {
      if (this.SchedulerBinding__hasRequestedAnEventLoopCallback)
        return;
      this.SchedulerBinding__hasRequestedAnEventLoopCallback = true;
      P.Timer_Timer(C.Duration_0, this.get$_runTasks());
    },
    _runTasks$0: function() {
      this.SchedulerBinding__hasRequestedAnEventLoopCallback = false;
      if (this.handleEventLoopCallback$0())
        this._ensureEventLoopCallback$0();
    },
    handleEventLoopCallback$0: function() {
      var entry, exception, exceptionStack, newLength, last, exception0, _this = this,
        _s10_ = "No element",
        t1 = _this.SchedulerBinding__taskQueue,
        t2 = t1._priority_queue$_length === 0;
      if (t2 || _this._lockCount > 0)
        return false;
      if (t2)
        H.throwExpression(P.StateError$(_s10_));
      entry = t1._elementAt$1(0);
      t2 = entry.priority;
      if (_this.SchedulerBinding_schedulingStrategy.call$2$priority$scheduler(t2, _this)) {
        try {
          if (t1._priority_queue$_length === 0)
            H.throwExpression(P.StateError$(_s10_));
          ++t1._priority_queue$_modificationCount;
          t1._elementAt$1(0);
          newLength = t1._priority_queue$_length - 1;
          last = t1._elementAt$1(newLength);
          C.JSArray_methods.$indexSet(t1._priority_queue$_queue, newLength, null);
          t1._priority_queue$_length = newLength;
          if (newLength > 0)
            t1._bubbleDown$2(last, 0);
          entry.run$0();
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          exceptionStack = H.getTraceFromException(exception0);
          t2 = U.ErrorDescription$("during a task callback");
          U.FlutterError_reportError(new U.FlutterErrorDetails(exception, exceptionStack, "scheduler library", t2, null, false));
        }
        return t1._priority_queue$_length !== 0;
      }
      return false;
    },
    scheduleFrameCallback$2$rescheduling: function(callback, rescheduling) {
      var t1, _this = this;
      _this.scheduleFrame$0();
      t1 = ++_this.SchedulerBinding__nextFrameCallbackId;
      _this.SchedulerBinding__transientCallbacks.$indexSet(0, t1, new N._FrameCallbackEntry(callback));
      return _this.SchedulerBinding__nextFrameCallbackId;
    },
    get$endOfFrame: function() {
      var _this = this;
      if (_this.SchedulerBinding__nextFrameCompleter == null) {
        if (_this.SchedulerBinding__schedulerPhase === C.SchedulerPhase_0)
          _this.scheduleFrame$0();
        _this.SchedulerBinding__nextFrameCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
        _this.SchedulerBinding__postFrameCallbacks.push(new N.SchedulerBinding_endOfFrame_closure(_this));
      }
      return _this.SchedulerBinding__nextFrameCompleter.future;
    },
    get$framesEnabled: function() {
      return this.SchedulerBinding__framesEnabled;
    },
    _setFramesEnabledState$1: function(enabled) {
      if (this.SchedulerBinding__framesEnabled === enabled)
        return;
      this.SchedulerBinding__framesEnabled = enabled;
      if (enabled)
        this.scheduleFrame$0();
    },
    ensureVisualUpdate$0: function() {
      switch (this.SchedulerBinding__schedulerPhase) {
        case C.SchedulerPhase_0:
        case C.SchedulerPhase_4:
          this.scheduleFrame$0();
          return;
        case C.SchedulerPhase_1:
        case C.SchedulerPhase_2:
        case C.SchedulerPhase_3:
          return;
      }
    },
    scheduleFrame$0: function() {
      var t1, _this = this;
      if (!_this.SchedulerBinding__hasScheduledFrame)
        t1 = !(N.SchedulerBinding.prototype.get$framesEnabled.call(_this) && _this.WidgetsBinding__readyToProduceFrames);
      else
        t1 = true;
      if (t1)
        return;
      t1 = $.$get$window().platformDispatcher;
      if (t1._onBeginFrame == null) {
        t1._onBeginFrame = _this.get$_handleBeginFrame();
        t1._onBeginFrameZone = $.Zone__current;
      }
      if (t1._onDrawFrame == null) {
        t1._onDrawFrame = _this.get$_handleDrawFrame();
        t1._onDrawFrameZone = $.Zone__current;
      }
      t1.scheduleFrame$0();
      _this.SchedulerBinding__hasScheduledFrame = true;
    },
    scheduleForcedFrame$0: function() {
      var _this = this;
      if (!(N.SchedulerBinding.prototype.get$framesEnabled.call(_this) && _this.WidgetsBinding__readyToProduceFrames))
        return;
      if (_this.SchedulerBinding__hasScheduledFrame)
        return;
      $.$get$window().platformDispatcher.scheduleFrame$0();
      _this.SchedulerBinding__hasScheduledFrame = true;
    },
    scheduleWarmUpFrame$0: function() {
      var hadScheduledFrame, _this = this;
      if (_this.SchedulerBinding__warmUpFrame || _this.SchedulerBinding__schedulerPhase !== C.SchedulerPhase_0)
        return;
      _this.SchedulerBinding__warmUpFrame = true;
      P.Timeline_startSync("Warm-up frame", null, null);
      hadScheduledFrame = _this.SchedulerBinding__hasScheduledFrame;
      P.Timer_Timer(C.Duration_0, new N.SchedulerBinding_scheduleWarmUpFrame_closure(_this));
      P.Timer_Timer(C.Duration_0, new N.SchedulerBinding_scheduleWarmUpFrame_closure0(_this, hadScheduledFrame));
      _this.lockEvents$1(new N.SchedulerBinding_scheduleWarmUpFrame_closure1(_this));
    },
    resetEpoch$0: function() {
      var _this = this;
      _this.SchedulerBinding__epochStart = _this._adjustForEpoch$1(_this.SchedulerBinding__lastRawTimeStamp);
      _this.SchedulerBinding__firstRawTimeStampInEpoch = null;
    },
    _adjustForEpoch$1: function(rawTimeStamp) {
      var t1 = this.SchedulerBinding__firstRawTimeStampInEpoch,
        rawDurationSinceEpoch = t1 == null ? C.Duration_0 : new P.Duration(rawTimeStamp._duration - t1._duration);
      return P.Duration$(C.JSNumber_methods.round$0(rawDurationSinceEpoch._duration / $._timeDilation) + this.SchedulerBinding__epochStart._duration, 0);
    },
    _handleBeginFrame$1: function(rawTimeStamp) {
      if (this.SchedulerBinding__warmUpFrame) {
        this.SchedulerBinding__rescheduleAfterWarmUpFrame = true;
        return;
      }
      this.handleBeginFrame$1(rawTimeStamp);
    },
    _handleDrawFrame$0: function() {
      var _this = this;
      if (_this.SchedulerBinding__rescheduleAfterWarmUpFrame) {
        _this.SchedulerBinding__rescheduleAfterWarmUpFrame = false;
        _this.SchedulerBinding__postFrameCallbacks.push(new N.SchedulerBinding__handleDrawFrame_closure(_this));
        return;
      }
      _this.handleDrawFrame$0();
    },
    handleBeginFrame$1: function(rawTimeStamp) {
      var callbacks, t1, _this = this;
      P.Timeline_startSync("Frame", C.Map_9aZ6I, null);
      if (_this.SchedulerBinding__firstRawTimeStampInEpoch == null)
        _this.SchedulerBinding__firstRawTimeStampInEpoch = rawTimeStamp;
      t1 = rawTimeStamp == null;
      _this.SchedulerBinding__currentFrameTimeStamp = _this._adjustForEpoch$1(t1 ? _this.SchedulerBinding__lastRawTimeStamp : rawTimeStamp);
      if (!t1)
        _this.SchedulerBinding__lastRawTimeStamp = rawTimeStamp;
      _this.SchedulerBinding__hasScheduledFrame = false;
      try {
        P.Timeline_startSync("Animate", C.Map_9aZ6I, null);
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_1;
        callbacks = _this.SchedulerBinding__transientCallbacks;
        _this.SchedulerBinding__transientCallbacks = P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._FrameCallbackEntry);
        J.forEach$1$ax(callbacks, new N.SchedulerBinding_handleBeginFrame_closure(_this));
        _this.SchedulerBinding__removedIds.clear$0(0);
      } finally {
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_2;
      }
    },
    handleDrawFrame$0: function() {
      var callback, localPostFrameCallbacks, callback0, t1, t2, _i, t3, _this = this;
      P.Timeline_finishSync();
      try {
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_3;
        for (t1 = _this.SchedulerBinding__persistentCallbacks, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          callback = t1[_i];
          t3 = _this.SchedulerBinding__currentFrameTimeStamp;
          t3.toString;
          _this._invokeFrameCallback$2(callback, t3);
        }
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_4;
        t1 = _this.SchedulerBinding__postFrameCallbacks;
        localPostFrameCallbacks = P.List_List$from(t1, true, type$.void_Function_Duration);
        C.JSArray_methods.set$length(t1, 0);
        for (t1 = localPostFrameCallbacks, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          callback0 = t1[_i];
          t3 = _this.SchedulerBinding__currentFrameTimeStamp;
          t3.toString;
          _this._invokeFrameCallback$2(callback0, t3);
        }
      } finally {
        _this.SchedulerBinding__schedulerPhase = C.SchedulerPhase_0;
        P.Timeline_finishSync();
        _this.SchedulerBinding__currentFrameTimeStamp = null;
      }
    },
    _invokeFrameCallback$3: function(callback, timeStamp, callbackStack) {
      var exception, exceptionStack, exception0, t1;
      try {
        callback.call$1(timeStamp);
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        exceptionStack = H.getTraceFromException(exception0);
        t1 = U.ErrorDescription$("during a scheduler callback");
        U.FlutterError_reportError(new U.FlutterErrorDetails(exception, exceptionStack, "scheduler library", t1, null, false));
      }
    },
    _invokeFrameCallback$2: function(callback, timeStamp) {
      return this._invokeFrameCallback$3(callback, timeStamp, null);
    }
  };
  N.SchedulerBinding_endOfFrame_closure.prototype = {
    call$1: function(timeStamp) {
      var t1 = this.$this;
      t1.SchedulerBinding__nextFrameCompleter.complete$0(0);
      t1.SchedulerBinding__nextFrameCompleter = null;
    },
    $signature: 6
  };
  N.SchedulerBinding_scheduleWarmUpFrame_closure.prototype = {
    call$0: function() {
      this.$this.handleBeginFrame$1(null);
    },
    $signature: 0
  };
  N.SchedulerBinding_scheduleWarmUpFrame_closure0.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1.handleDrawFrame$0();
      t1.resetEpoch$0();
      t1.SchedulerBinding__warmUpFrame = false;
      if (this.hadScheduledFrame)
        t1.scheduleFrame$0();
    },
    $signature: 0
  };
  N.SchedulerBinding_scheduleWarmUpFrame_closure1.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait($async$self.$this.get$endOfFrame(), $async$call$0);
            case 2:
              // returning from await.
              P.Timeline_finishSync();
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 33
  };
  N.SchedulerBinding__handleDrawFrame_closure.prototype = {
    call$1: function(timeStamp) {
      var t1 = this.$this;
      t1.SchedulerBinding__hasScheduledFrame = false;
      t1.scheduleFrame$0();
    },
    $signature: 6
  };
  N.SchedulerBinding_handleBeginFrame_closure.prototype = {
    call$2: function(id, callbackEntry) {
      var t2, t3,
        t1 = this.$this;
      if (!t1.SchedulerBinding__removedIds.contains$1(0, id)) {
        t2 = callbackEntry.callback;
        t3 = t1.SchedulerBinding__currentFrameTimeStamp;
        t3.toString;
        t1._invokeFrameCallback$3(t2, t3, callbackEntry.debugStack);
      }
    },
    $signature: 209
  };
  V.Priority.prototype = {
    $add: function(_, offset) {
      if (Math.abs(offset) > 10000)
        offset = 10000 * C.JSInt_methods.get$sign(offset);
      return new V.Priority(this._priority$_value + offset);
    },
    $sub: function(_, offset) {
      return this.$add(0, -offset);
    }
  };
  M.Ticker.prototype = {
    set$muted: function(_, value) {
      var t1, _this = this;
      if (value === _this._muted)
        return;
      _this._muted = value;
      if (value)
        _this.unscheduleTick$0();
      else {
        t1 = _this._ticker$_future != null && _this._animationId == null;
        if (t1)
          _this._animationId = $.SchedulerBinding__instance.scheduleFrameCallback$2$rescheduling(_this.get$_ticker$_tick(), false);
      }
    },
    stop$1$canceled: function(_, canceled) {
      var _this = this,
        t1 = _this._ticker$_future;
      if (t1 == null)
        return;
      _this._startTime = _this._ticker$_future = null;
      _this.unscheduleTick$0();
      if (canceled)
        t1._cancel$1(_this);
      else
        t1._ticker$_complete$0();
    },
    _ticker$_tick$1: function(timeStamp) {
      var t1, _this = this;
      _this._animationId = null;
      t1 = _this._startTime;
      if (t1 == null)
        t1 = _this._startTime = timeStamp;
      _this._onTick.call$1(new P.Duration(timeStamp._duration - t1._duration));
      if (!_this._muted && _this._ticker$_future != null && _this._animationId == null)
        _this._animationId = $.SchedulerBinding__instance.scheduleFrameCallback$2$rescheduling(_this.get$_ticker$_tick(), true);
    },
    unscheduleTick$0: function() {
      var t2,
        t1 = this._animationId;
      if (t1 != null) {
        t2 = $.SchedulerBinding__instance;
        t2.SchedulerBinding__transientCallbacks.remove$1(0, t1);
        t2.SchedulerBinding__removedIds.add$1(0, t1);
        this._animationId = null;
      }
    },
    dispose$0: function(_) {
      var _this = this,
        t1 = _this._ticker$_future;
      if (t1 != null) {
        _this._ticker$_future = null;
        _this.unscheduleTick$0();
        t1._cancel$1(_this);
      }
    },
    toString$1$debugIncludeStack: function(_, debugIncludeStack) {
      var t1;
      "" + "Ticker(";
      t1 = "" + "Ticker()";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toString$0: function($receiver) {
      return this.toString$1$debugIncludeStack($receiver, false);
    }
  };
  M.TickerFuture.prototype = {
    _ticker$_complete$0: function() {
      this._completed = true;
      this._primaryCompleter.complete$0(0);
      var t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.complete$0(0);
    },
    _cancel$1: function(ticker) {
      var t1;
      this._completed = false;
      t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.completeError$1(new M.TickerCanceled(ticker));
    },
    whenCompleteOrCancel$1: function(callback) {
      var t2, t3, _this = this,
        t1 = new M.TickerFuture_whenCompleteOrCancel_thunk(callback);
      if (_this._secondaryCompleter == null) {
        t2 = _this._secondaryCompleter = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
        t3 = _this._completed;
        if (t3 != null)
          if (t3)
            t2.complete$0(0);
          else
            t2.completeError$1(C.TickerCanceled_null);
      }
      _this._secondaryCompleter.future.then$1$2$onError(0, t1, t1, type$.void);
    },
    then$1$2$onError: function(_, onValue, onError, $R) {
      return this._primaryCompleter.future.then$1$2$onError(0, onValue, onError, $R);
    },
    then$1$1: function($receiver, onValue, $R) {
      return this.then$1$2$onError($receiver, onValue, null, $R);
    },
    whenComplete$1: function(action) {
      return this._primaryCompleter.future.whenComplete$1(action);
    },
    toString$0: function(_) {
      var t1 = "<optimized out>#" + Y.shortHash(this) + "(",
        t2 = this._completed;
      if (t2 == null)
        t2 = "active";
      else
        t2 = t2 ? "complete" : "canceled";
      return t1 + t2 + ")";
    },
    $isFuture: 1
  };
  M.TickerFuture_whenCompleteOrCancel_thunk.prototype = {
    call$1: function(value) {
      this.callback.call$0();
    },
    $signature: 13
  };
  M.TickerCanceled.prototype = {
    toString$0: function(_) {
      var t1 = this.ticker;
      if (t1 != null)
        return "This ticker was canceled: " + t1.toString$0(0);
      return 'The ticker was canceled before the "orCancel" property was first used.';
    },
    $isException: 1
  };
  N.SemanticsBinding.prototype = {};
  A.SemanticsData.prototype = {
    toStringShort$0: function() {
      return "SemanticsData";
    },
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.SemanticsData)
        if (other.flags === _this.flags)
          if (other.actions === _this.actions)
            if (other.label === _this.label)
              if (other.value === _this.value)
                if (other.increasedValue === _this.increasedValue)
                  if (other.decreasedValue === _this.decreasedValue)
                    if (other.hint === _this.hint)
                      if (other.textDirection == _this.textDirection)
                        if (other.rect.$eq(0, _this.rect))
                          if (S.setEquals(other.tags, _this.tags))
                            t1 = J.$eq$(other.transform, _this.transform) && other.elevation === _this.elevation && other.thickness === _this.thickness && A.SemanticsData__sortedListsEqual(other.customSemanticsActionIds, _this.customSemanticsActionIds);
                          else
                            t1 = false;
                        else
                          t1 = false;
                      else
                        t1 = false;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(P.hashValues(_this.flags, _this.actions, _this.label, _this.value, _this.increasedValue, _this.decreasedValue, _this.hint, _this.textDirection, _this.rect, _this.tags, _this.textSelection, _this.scrollChildCount, _this.scrollIndex, _this.scrollPosition, _this.scrollExtentMax, _this.scrollExtentMin, _this.platformViewId, _this.maxValueLength, _this.currentValueLength, _this.transform), _this.elevation, _this.thickness, P.hashList(_this.customSemanticsActionIds), C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  A._SemanticsDiagnosticableNode.prototype = {
    getChildren$0: function() {
      return this.value.debugDescribeChildren$1$childOrder(this.childOrder);
    }
  };
  A.SemanticsProperties.prototype = {
    toStringShort$0: function() {
      return "SemanticsProperties";
    }
  };
  A.SemanticsNode.prototype = {
    set$transform: function(_, value) {
      var t1;
      if (!T.MatrixUtils_matrixEquals(this._semantics$_transform, value)) {
        t1 = T.MatrixUtils_isIdentity(value);
        this._semantics$_transform = t1 ? null : value;
        this._semantics$_markDirty$0();
      }
    },
    set$rect: function(_, value) {
      if (!this._semantics$_rect.$eq(0, value)) {
        this._semantics$_rect = value;
        this._semantics$_markDirty$0();
      }
    },
    set$isMergedIntoParent: function(value) {
      if (this._isMergedIntoParent === value)
        return;
      this._isMergedIntoParent = value;
      this._semantics$_markDirty$0();
    },
    _replaceChildren$1: function(newChildren) {
      var t2, _i, t3, sawChange, child, t4, i, _this = this,
        t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t2; ++_i)
          t1[_i]._dead = true;
      for (t1 = newChildren.length, _i = 0; _i < t1; ++_i)
        newChildren[_i]._dead = false;
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, t3 = type$.nullable_SemanticsNode, sawChange = false, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          if (child._dead) {
            t4 = J.getInterceptor$x(child);
            if (t3._as(B.AbstractNode.prototype.get$parent.call(t4, child)) === _this) {
              child._node$_parent = null;
              if (_this._node$_owner != null)
                child.detach$0(0);
            }
            sawChange = true;
          }
        }
      else
        sawChange = false;
      for (t1 = newChildren.length, t2 = type$.nullable_SemanticsNode, _i = 0; _i < newChildren.length; newChildren.length === t1 || (0, H.throwConcurrentModificationError)(newChildren), ++_i) {
        child = newChildren[_i];
        t3 = J.getInterceptor$x(child);
        if (t2._as(B.AbstractNode.prototype.get$parent.call(t3, child)) !== _this) {
          if (t2._as(B.AbstractNode.prototype.get$parent.call(t3, child)) != null) {
            t3 = t2._as(B.AbstractNode.prototype.get$parent.call(t3, child));
            if (t3 != null) {
              child._node$_parent = null;
              if (t3._node$_owner != null)
                child.detach$0(0);
            }
          }
          child._node$_parent = _this;
          t3 = _this._node$_owner;
          if (t3 != null)
            child.attach$1(t3);
          t3 = child._node$_depth;
          t4 = _this._node$_depth;
          if (t3 <= t4) {
            child._node$_depth = t4 + 1;
            child.redepthChildren$0();
          }
          sawChange = true;
        }
      }
      if (!sawChange && _this._semantics$_children != null)
        for (t1 = _this._semantics$_children, t2 = t1.length, i = 0; i < t2; ++i)
          if (t1[i]._id !== newChildren[i]._id) {
            sawChange = true;
            break;
          }
      _this._semantics$_children = newChildren;
      if (sawChange)
        _this._semantics$_markDirty$0();
    },
    get$hasChildren: function() {
      var t1 = this._semantics$_children;
      t1 = t1 == null ? null : t1.length !== 0;
      return t1 === true;
    },
    _visitDescendants$1: function(visitor) {
      var t2, _i, child,
        t1 = this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          if (!visitor.call$1(child) || !child._visitDescendants$1(visitor))
            return false;
        }
      return true;
    },
    redepthChildren$0: function() {
      var t1 = this._semantics$_children;
      if (t1 != null)
        C.JSArray_methods.forEach$1(t1, this.get$redepthChild());
    },
    attach$1: function(owner) {
      var t1, t2, _i, _this = this;
      _this.super$AbstractNode$attach(owner);
      for (t1 = owner._nodes; t1.containsKey$1(0, _this._id);)
        _this._id = $.SemanticsNode__lastIdentifier = ($.SemanticsNode__lastIdentifier + 1) % 65535;
      t1.$indexSet(0, _this._id, _this);
      owner._detachedNodes.remove$1(0, _this);
      if (_this._semantics$_dirty) {
        _this._semantics$_dirty = false;
        _this._semantics$_markDirty$0();
      }
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].attach$1(owner);
    },
    detach$0: function(_) {
      var t2, t3, _i, child, t4, _this = this,
        t1 = type$.nullable_SemanticsOwner;
      t1._as(B.AbstractNode.prototype.get$owner.call(_this))._nodes.remove$1(0, _this._id);
      t1._as(B.AbstractNode.prototype.get$owner.call(_this))._detachedNodes.add$1(0, _this);
      _this.super$AbstractNode$detach(0);
      t1 = _this._semantics$_children;
      if (t1 != null)
        for (t2 = t1.length, t3 = type$.nullable_SemanticsNode, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          t4 = J.getInterceptor$x(child);
          if (t3._as(B.AbstractNode.prototype.get$parent.call(t4, child)) === _this)
            t4.detach$0(child);
        }
      _this._semantics$_markDirty$0();
    },
    _semantics$_markDirty$0: function() {
      var _this = this;
      if (_this._semantics$_dirty)
        return;
      _this._semantics$_dirty = true;
      if (_this._node$_owner != null)
        type$.nullable_SemanticsOwner._as(B.AbstractNode.prototype.get$owner.call(_this))._semantics$_dirtyNodes.add$1(0, _this);
    },
    updateWith$2$childrenInInversePaintOrder$config: function(_, childrenInInversePaintOrder, config) {
      var t1, _this = this;
      if (config == null)
        config = $.$get$SemanticsNode__kEmptyConfig();
      if (_this._label === config._label)
        if (_this._hint === config._hint)
          if (_this._semantics$_elevation === config._semantics$_elevation)
            if (_this._thickness === config._thickness)
              if (_this._decreasedValue === config._decreasedValue)
                if (_this._semantics$_value === config._semantics$_value)
                  if (_this._increasedValue === config._increasedValue)
                    if (_this._flags === config._flags)
                      if (_this._semantics$_textDirection == config._semantics$_textDirection)
                        if (_this._semantics$_sortKey == config._semantics$_sortKey)
                          if (_this._actionsAsBits === config._actionsAsBits)
                            t1 = _this._mergeAllDescendantsIntoThisNode !== config._isMergingSemanticsOfDescendants;
                          else
                            t1 = true;
                        else
                          t1 = true;
                      else
                        t1 = true;
                    else
                      t1 = true;
                  else
                    t1 = true;
                else
                  t1 = true;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        _this._semantics$_markDirty$0();
      _this._label = config._label;
      _this._decreasedValue = config._decreasedValue;
      _this._semantics$_value = config._semantics$_value;
      _this._increasedValue = config._increasedValue;
      _this._hint = config._hint;
      _this._semantics$_hintOverrides = config._semantics$_hintOverrides;
      _this._semantics$_elevation = config._semantics$_elevation;
      _this._thickness = config._thickness;
      _this._flags = config._flags;
      _this._semantics$_textDirection = config._semantics$_textDirection;
      _this._semantics$_sortKey = config._semantics$_sortKey;
      _this._actions = P.LinkedHashMap_LinkedHashMap$from(config._actions, type$.SemanticsAction, type$.void_Function_nullable_Object);
      _this._customSemanticsActions = P.LinkedHashMap_LinkedHashMap$from(config._customSemanticsActions, type$.CustomSemanticsAction, type$.void_Function);
      _this._actionsAsBits = config._actionsAsBits;
      _this._textSelection = config._textSelection;
      _this._scrollPosition = config._scrollPosition;
      _this._scrollExtentMax = config._scrollExtentMax;
      _this._scrollExtentMin = config._scrollExtentMin;
      _this._mergeAllDescendantsIntoThisNode = config._isMergingSemanticsOfDescendants;
      _this._scrollChildCount = config._scrollChildCount;
      _this._scrollIndex = config._scrollIndex;
      _this.indexInParent = config._indexInParent;
      _this._platformViewId = config._platformViewId;
      _this._maxValueLength = config._maxValueLength;
      _this._currentValueLength = config._currentValueLength;
      _this._replaceChildren$1(childrenInInversePaintOrder == null ? C.List_empty7 : childrenInInversePaintOrder);
    },
    updateWith$1$config: function($receiver, config) {
      return this.updateWith$2$childrenInInversePaintOrder$config($receiver, null, config);
    },
    getSemanticsData$0: function() {
      var t1, elevation, customSemanticsActionIds, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, _this = this, _box_0 = {};
      _box_0.flags = _this._flags;
      _box_0.actions = _this._actionsAsBits;
      _box_0.label = _this._label;
      _box_0.hint = _this._hint;
      _box_0.value = _this._semantics$_value;
      _box_0.increasedValue = _this._increasedValue;
      _box_0.decreasedValue = _this._decreasedValue;
      _box_0.textDirection = _this._semantics$_textDirection;
      t1 = _this.tags;
      _box_0.mergedTags = t1 == null ? null : P.LinkedHashSet_LinkedHashSet$from(t1, type$.SemanticsTag);
      _box_0.textSelection = _this._textSelection;
      _box_0.scrollChildCount = _this._scrollChildCount;
      _box_0.scrollIndex = _this._scrollIndex;
      _box_0.scrollPosition = _this._scrollPosition;
      _box_0.scrollExtentMax = _this._scrollExtentMax;
      _box_0.scrollExtentMin = _this._scrollExtentMin;
      _box_0.platformViewId = _this._platformViewId;
      _box_0.maxValueLength = _this._maxValueLength;
      _box_0.currentValueLength = _this._currentValueLength;
      elevation = _this._semantics$_elevation;
      _box_0.thickness = _this._thickness;
      customSemanticsActionIds = P.LinkedHashSet_LinkedHashSet$_empty(type$.int);
      for (t1 = _this._customSemanticsActions, t1 = t1.get$keys(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        customSemanticsActionIds.add$1(0, A.CustomSemanticsAction_getIdentifier(t1.get$current(t1)));
      _this._semantics$_hintOverrides != null;
      if (_this._mergeAllDescendantsIntoThisNode)
        _this._visitDescendants$1(new A.SemanticsNode_getSemanticsData_closure(_box_0, _this, customSemanticsActionIds));
      t1 = _box_0.flags;
      t2 = _box_0.actions;
      t3 = _box_0.label;
      t4 = _box_0.value;
      t5 = _box_0.increasedValue;
      t6 = _box_0.decreasedValue;
      t7 = _box_0.hint;
      t8 = _box_0.textDirection;
      t9 = _this._semantics$_rect;
      t10 = _this._semantics$_transform;
      t11 = _box_0.thickness;
      t12 = _box_0.mergedTags;
      t13 = _box_0.textSelection;
      t14 = _box_0.scrollChildCount;
      t15 = _box_0.scrollIndex;
      t16 = _box_0.scrollPosition;
      t17 = _box_0.scrollExtentMax;
      t18 = _box_0.scrollExtentMin;
      t19 = _box_0.platformViewId;
      t20 = _box_0.maxValueLength;
      t21 = _box_0.currentValueLength;
      t22 = P.List_List$of(customSemanticsActionIds, true, customSemanticsActionIds.$ti._eval$1("SetMixin.E"));
      C.JSArray_methods.sort$0(t22);
      return new A.SemanticsData(t1, t2, t3, t4, t5, t6, t7, t8, t13, t14, t15, t16, t17, t18, t19, t20, t21, t9, t12, t10, elevation, t11, t22);
    },
    _addToUpdate$2: function(builder, customSemanticsActionIdsUpdate) {
      var childrenInTraversalOrder, childrenInHitTestOrder, childCount, sortedChildren, i, t1, t2, customSemanticsActionIds, t3, _this = this,
        data = _this.getSemanticsData$0();
      if (!_this.get$hasChildren() || _this._mergeAllDescendantsIntoThisNode) {
        childrenInTraversalOrder = $.$get$SemanticsNode__kEmptyChildList();
        childrenInHitTestOrder = childrenInTraversalOrder;
      } else {
        childCount = _this._semantics$_children.length;
        sortedChildren = _this._childrenInTraversalOrder$0();
        childrenInTraversalOrder = new Int32Array(childCount);
        for (i = 0; i < childCount; ++i)
          childrenInTraversalOrder[i] = sortedChildren[i]._id;
        childrenInHitTestOrder = new Int32Array(childCount);
        for (i = childCount - 1, t1 = _this._semantics$_children; i >= 0; --i)
          childrenInHitTestOrder[i] = t1[childCount - i - 1]._id;
      }
      t1 = data.customSemanticsActionIds;
      t2 = t1.length;
      if (t2 !== 0) {
        customSemanticsActionIds = new Int32Array(t2);
        for (i = 0; i < t1.length; ++i) {
          t2 = t1[i];
          customSemanticsActionIds[i] = t2;
          customSemanticsActionIdsUpdate.add$1(0, t2);
        }
      } else
        customSemanticsActionIds = null;
      t1 = _this._id;
      t2 = data.transform;
      t2 = t2 == null ? null : t2._m4storage;
      if (t2 == null)
        t2 = $.$get$SemanticsNode__kIdentityTransform();
      t3 = customSemanticsActionIds == null ? $.$get$SemanticsNode__kEmptyCustomSemanticsActionsList() : customSemanticsActionIds;
      builder._nodeUpdates.push(new H.SemanticsNodeUpdate(t1, data.flags, data.actions, -1, -1, 0, 0, 0 / 0, 0 / 0, 0 / 0, data.rect, data.label, data.hint, data.value, data.increasedValue, data.decreasedValue, data.textDirection, H.toMatrix32(t2), childrenInTraversalOrder, childrenInHitTestOrder, t3));
      _this._semantics$_dirty = false;
    },
    _childrenInTraversalOrder$0: function() {
      var t2, childrenInDefaultOrder, everythingSorted, sortNodes, lastSortKey, position, child, sortKey, isCompatibleWithPreviousSortKey, _this = this,
        inheritedTextDirection = _this._semantics$_textDirection,
        t1 = type$.nullable_SemanticsNode,
        ancestor = t1._as(B.AbstractNode.prototype.get$parent.call(_this, _this));
      while (true) {
        t2 = inheritedTextDirection == null;
        if (!(t2 && ancestor != null))
          break;
        inheritedTextDirection = ancestor._semantics$_textDirection;
        ancestor = t1._as(B.AbstractNode.prototype.get$parent.call(ancestor, ancestor));
      }
      childrenInDefaultOrder = _this._semantics$_children;
      if (!t2) {
        childrenInDefaultOrder.toString;
        childrenInDefaultOrder = A._childrenInDefaultOrder(childrenInDefaultOrder, inheritedTextDirection);
      }
      t1 = type$.JSArray__TraversalSortNode;
      everythingSorted = H.setRuntimeTypeInfo([], t1);
      sortNodes = H.setRuntimeTypeInfo([], t1);
      for (lastSortKey = null, position = 0; position < childrenInDefaultOrder.length; ++position) {
        child = childrenInDefaultOrder[position];
        sortKey = child._semantics$_sortKey;
        lastSortKey = position > 0 ? childrenInDefaultOrder[position - 1]._semantics$_sortKey : null;
        if (position !== 0)
          if (J.get$runtimeType$(sortKey) === J.get$runtimeType$(lastSortKey)) {
            if (sortKey != null)
              lastSortKey.toString;
            isCompatibleWithPreviousSortKey = true;
          } else
            isCompatibleWithPreviousSortKey = false;
        else
          isCompatibleWithPreviousSortKey = true;
        if (!isCompatibleWithPreviousSortKey && sortNodes.length !== 0) {
          if (lastSortKey != null) {
            if (!!sortNodes.immutable$list)
              H.throwExpression(P.UnsupportedError$("sort"));
            t1 = sortNodes.length - 1;
            if (t1 - 0 <= 32)
              H.Sort__insertionSort(sortNodes, 0, t1, J._interceptors_JSArray__compareAny$closure());
            else
              H.Sort__dualPivotQuicksort(sortNodes, 0, t1, J._interceptors_JSArray__compareAny$closure());
          }
          C.JSArray_methods.addAll$1(everythingSorted, sortNodes);
          C.JSArray_methods.set$length(sortNodes, 0);
        }
        sortNodes.push(new A._TraversalSortNode(child, sortKey, position));
      }
      if (lastSortKey != null)
        C.JSArray_methods.sort$0(sortNodes);
      C.JSArray_methods.addAll$1(everythingSorted, sortNodes);
      t1 = type$.MappedListIterable__TraversalSortNode_SemanticsNode;
      return P.List_List$of(new H.MappedListIterable(everythingSorted, new A.SemanticsNode__childrenInTraversalOrder_closure(), t1), true, t1._eval$1("ListIterable.E"));
    },
    sendEvent$1: function($event) {
      if (this._node$_owner == null)
        return;
      C.BasicMessageChannel_8hp.send$1(0, $event.toMap$1$nodeId(this._id));
    },
    toStringShort$0: function() {
      return "SemanticsNode#" + this._id;
    },
    toStringDeep$1$childOrder: function(childOrder) {
      A._SemanticsDiagnosticableNode$(childOrder, null, C.DiagnosticsTreeStyle_1, this);
      return "";
    },
    toDiagnosticsNode$3$childOrder$name$style: function(childOrder, $name, style) {
      return new A._SemanticsDiagnosticableNode(childOrder, this, $name, true, true, null, style);
    },
    toDiagnosticsNode$1$style: function(style) {
      return this.toDiagnosticsNode$3$childOrder$name$style(C.DebugSemanticsDumpOrder_1, null, style);
    },
    toDiagnosticsNode$0: function() {
      return this.toDiagnosticsNode$3$childOrder$name$style(C.DebugSemanticsDumpOrder_1, null, C.DiagnosticsTreeStyle_1);
    },
    debugDescribeChildren$1$childOrder: function(childOrder) {
      var t1 = this.debugListChildrenInOrder$1(childOrder),
        t2 = H.instanceType(t1)._eval$1("MappedListIterable<1,DiagnosticsNode>");
      return P.List_List$of(new H.MappedListIterable(t1, new A.SemanticsNode_debugDescribeChildren_closure(childOrder), t2), true, t2._eval$1("ListIterable.E"));
    },
    debugDescribeChildren$0: function() {
      return this.debugDescribeChildren$1$childOrder(C.DebugSemanticsDumpOrder_0);
    },
    debugListChildrenInOrder$1: function(childOrder) {
      var t1 = this._semantics$_children;
      if (t1 == null)
        return C.List_empty7;
      switch (childOrder) {
        case C.DebugSemanticsDumpOrder_0:
          return t1;
        case C.DebugSemanticsDumpOrder_1:
          return this._childrenInTraversalOrder$0();
      }
    },
    $isDiagnosticableTree: 1
  };
  A.SemanticsNode_getSemanticsData_closure.prototype = {
    call$1: function(node) {
      var t2, t3,
        t1 = this._box_0;
      t1.flags = t1.flags | node._flags;
      t1.actions = t1.actions | node._actionsAsBits;
      if (t1.textDirection == null)
        t1.textDirection = node._semantics$_textDirection;
      t1.textSelection = node._textSelection;
      t1.scrollChildCount = node._scrollChildCount;
      t1.scrollIndex = node._scrollIndex;
      t1.scrollPosition = node._scrollPosition;
      t1.scrollExtentMax = node._scrollExtentMax;
      t1.scrollExtentMin = node._scrollExtentMin;
      t1.platformViewId = node._platformViewId;
      t1.maxValueLength = node._maxValueLength;
      t1.currentValueLength = node._currentValueLength;
      if (t1.value === "" || false)
        t1.value = node._semantics$_value;
      if (t1.increasedValue === "" || false)
        t1.increasedValue = node._increasedValue;
      if (t1.decreasedValue === "" || false)
        t1.decreasedValue = node._decreasedValue;
      t2 = node.tags;
      if (t2 != null) {
        t3 = t1.mergedTags;
        (t3 == null ? t1.mergedTags = P.LinkedHashSet_LinkedHashSet$_empty(type$.SemanticsTag) : t3).addAll$1(0, t2);
      }
      for (t2 = this.$this._customSemanticsActions, t2 = t2.get$keys(t2), t2 = t2.get$iterator(t2), t3 = this.customSemanticsActionIds; t2.moveNext$0();)
        t3.add$1(0, A.CustomSemanticsAction_getIdentifier(t2.get$current(t2)));
      node._semantics$_hintOverrides != null;
      t2 = t1.label;
      t3 = t1.textDirection;
      t1.label = A._concatStrings(node._label, node._semantics$_textDirection, t2, t3);
      t3 = t1.hint;
      t2 = t1.textDirection;
      t1.hint = A._concatStrings(node._hint, node._semantics$_textDirection, t3, t2);
      t1.thickness = Math.max(t1.thickness, node._thickness + node._semantics$_elevation);
      return true;
    },
    $signature: 48
  };
  A.SemanticsNode__childrenInTraversalOrder_closure.prototype = {
    call$1: function(sortNode) {
      return sortNode.node;
    },
    $signature: 211
  };
  A.SemanticsNode_debugDescribeChildren_closure.prototype = {
    call$1: function(node) {
      return A._SemanticsDiagnosticableNode$(this.childOrder, null, C.DiagnosticsTreeStyle_1, node);
    },
    $signature: 212
  };
  A._BoxEdge.prototype = {
    compareTo$1: function(_, other) {
      return C.JSNumber_methods.toInt$0(J.get$sign$in(this.offset - other.offset));
    }
  };
  A._SemanticsSortGroup.prototype = {
    compareTo$1: function(_, other) {
      return C.JSNumber_methods.toInt$0(J.get$sign$in(this.startOffset - other.startOffset));
    },
    sortedWithinVerticalGroup$0: function() {
      var t1, t2, _i, child, t3, horizontalGroups, group, depth, edge,
        edges = H.setRuntimeTypeInfo([], type$.JSArray__BoxEdge);
      for (t1 = this.nodes, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        t3 = child._semantics$_rect;
        edges.push(new A._BoxEdge(true, A._pointInParentCoordinates(child, new P.Offset(t3.left - -0.1, t3.top - -0.1))._dx, child));
        edges.push(new A._BoxEdge(false, A._pointInParentCoordinates(child, new P.Offset(t3.right + -0.1, t3.bottom + -0.1))._dx, child));
      }
      C.JSArray_methods.sort$0(edges);
      horizontalGroups = H.setRuntimeTypeInfo([], type$.JSArray__SemanticsSortGroup);
      for (t1 = edges.length, t2 = this.textDirection, t3 = type$.JSArray_SemanticsNode, group = null, depth = 0, _i = 0; _i < edges.length; edges.length === t1 || (0, H.throwConcurrentModificationError)(edges), ++_i) {
        edge = edges[_i];
        if (edge.isLeadingEdge) {
          ++depth;
          if (group == null)
            group = new A._SemanticsSortGroup(edge.offset, t2, H.setRuntimeTypeInfo([], t3));
          group.nodes.push(edge.node);
        } else
          --depth;
        if (depth === 0) {
          group.toString;
          horizontalGroups.push(group);
          group = null;
        }
      }
      C.JSArray_methods.sort$0(horizontalGroups);
      if (t2 === C.TextDirection_0) {
        t1 = type$.ReversedListIterable__SemanticsSortGroup;
        horizontalGroups = P.List_List$of(new H.ReversedListIterable(horizontalGroups, t1), true, t1._eval$1("ListIterable.E"));
      }
      t1 = H._arrayInstanceType(horizontalGroups)._eval$1("ExpandIterable<1,SemanticsNode>");
      return P.List_List$of(new H.ExpandIterable(horizontalGroups, new A._SemanticsSortGroup_sortedWithinVerticalGroup_closure(), t1), true, t1._eval$1("Iterable.E"));
    },
    sortedWithinKnot$0: function() {
      var t3, nodeMap, edges, t4, t5, t6, _i, node, t7, t8, center, _i0, t9, nextNode, t10, t11, nextCenter, direction, isLtrAndForward, isRtlAndForward, sortedIds, startNodes,
        t1 = this.nodes,
        t2 = t1.length;
      if (t2 <= 1)
        return t1;
      t3 = type$.int;
      nodeMap = P.LinkedHashMap_LinkedHashMap$_empty(t3, type$.SemanticsNode);
      edges = P.LinkedHashMap_LinkedHashMap$_empty(t3, t3);
      for (t4 = this.textDirection, t5 = t4 === C.TextDirection_0, t4 = t4 === C.TextDirection_1, t6 = t2, _i = 0; _i < t6; t9 === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i, t6 = t9) {
        node = t1[_i];
        nodeMap.$indexSet(0, node._id, node);
        t6 = node._semantics$_rect;
        t7 = t6.left;
        t8 = t6.top;
        center = A._pointInParentCoordinates(node, new P.Offset(t7 + (t6.right - t7) / 2, t8 + (t6.bottom - t8) / 2));
        for (t6 = t1.length, t7 = center._dx, t8 = center._dy, _i0 = 0; t9 = t1.length, _i0 < t9; t1.length === t6 || (0, H.throwConcurrentModificationError)(t1), ++_i0) {
          nextNode = t1[_i0];
          if ((node == null ? nextNode == null : node === nextNode) || edges.$index(0, nextNode._id) === node._id)
            continue;
          t9 = nextNode._semantics$_rect;
          t10 = t9.left;
          t11 = t9.top;
          nextCenter = A._pointInParentCoordinates(nextNode, new P.Offset(t10 + (t9.right - t10) / 2, t11 + (t9.bottom - t11) / 2));
          direction = Math.atan2(nextCenter._dy - t8, nextCenter._dx - t7);
          isLtrAndForward = t4 && -0.7853981633974483 < direction && direction < 2.356194490192345;
          if (t5)
            isRtlAndForward = direction < -2.356194490192345 || direction > 2.356194490192345;
          else
            isRtlAndForward = false;
          if (isLtrAndForward || isRtlAndForward)
            edges.$indexSet(0, node._id, nextNode._id);
        }
      }
      sortedIds = H.setRuntimeTypeInfo([], type$.JSArray_int);
      startNodes = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1));
      C.JSArray_methods.sort$1(startNodes, new A._SemanticsSortGroup_sortedWithinKnot_closure());
      new H.MappedListIterable(startNodes, new A._SemanticsSortGroup_sortedWithinKnot_closure0(), H._arrayInstanceType(startNodes)._eval$1("MappedListIterable<1,int>")).forEach$1(0, new A._SemanticsSortGroup_sortedWithinKnot_search(P.LinkedHashSet_LinkedHashSet$_empty(t3), edges, sortedIds));
      t1 = type$.MappedListIterable_int_SemanticsNode;
      t1 = P.List_List$of(new H.MappedListIterable(sortedIds, new A._SemanticsSortGroup_sortedWithinKnot_closure1(nodeMap), t1), true, t1._eval$1("ListIterable.E"));
      t2 = H._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>");
      return P.List_List$of(new H.ReversedListIterable(t1, t2), true, t2._eval$1("ListIterable.E"));
    }
  };
  A._SemanticsSortGroup_sortedWithinVerticalGroup_closure.prototype = {
    call$1: function(group) {
      return group.sortedWithinKnot$0();
    },
    $signature: 81
  };
  A._SemanticsSortGroup_sortedWithinKnot_closure.prototype = {
    call$2: function(a, b) {
      var bTopLeft, verticalDiff,
        t1 = a._semantics$_rect,
        aTopLeft = A._pointInParentCoordinates(a, new P.Offset(t1.left, t1.top));
      t1 = b._semantics$_rect;
      bTopLeft = A._pointInParentCoordinates(b, new P.Offset(t1.left, t1.top));
      verticalDiff = C.JSNumber_methods.compareTo$1(aTopLeft._dy, bTopLeft._dy);
      if (verticalDiff !== 0)
        return -verticalDiff;
      return -C.JSNumber_methods.compareTo$1(aTopLeft._dx, bTopLeft._dx);
    },
    $signature: 49
  };
  A._SemanticsSortGroup_sortedWithinKnot_search.prototype = {
    call$1: function(id) {
      var _this = this,
        t1 = _this.visitedIds;
      if (t1.contains$1(0, id))
        return;
      t1.add$1(0, id);
      t1 = _this.edges;
      if (t1.containsKey$1(0, id)) {
        t1 = t1.$index(0, id);
        t1.toString;
        _this.call$1(t1);
      }
      _this.sortedIds.push(id);
    },
    $signature: 73
  };
  A._SemanticsSortGroup_sortedWithinKnot_closure0.prototype = {
    call$1: function(node) {
      return node._id;
    },
    $signature: 215
  };
  A._SemanticsSortGroup_sortedWithinKnot_closure1.prototype = {
    call$1: function(id) {
      var t1 = this.nodeMap.$index(0, id);
      t1.toString;
      return t1;
    },
    $signature: 324
  };
  A._childrenInDefaultOrder_closure.prototype = {
    call$1: function(group) {
      return group.sortedWithinVerticalGroup$0();
    },
    $signature: 81
  };
  A._TraversalSortNode.prototype = {
    compareTo$1: function(_, other) {
      var t2,
        t1 = this.sortKey;
      if (t1 == null || other.sortKey == null)
        return this.position - other.position;
      t1.toString;
      t2 = other.sortKey;
      t2.toString;
      return t1.compareTo$1(0, t2);
    }
  };
  A.SemanticsOwner.prototype = {
    sendSemanticsUpdate$0: function() {
      var customSemanticsActionIds, visitedNodes, t2, t3, t4, t5, localDirtyNodes, t6, t7, _i, node, t8, builder, _this = this,
        t1 = _this._semantics$_dirtyNodes;
      if (t1._collection$_length === 0)
        return;
      customSemanticsActionIds = P.LinkedHashSet_LinkedHashSet$_empty(type$.int);
      visitedNodes = H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNode);
      for (t2 = type$.nullable_SemanticsNode, t3 = H._instanceType(t1)._eval$1("WhereIterable<SetMixin.E>"), t4 = t3._eval$1("Iterable.E"), t5 = _this._detachedNodes; t1._collection$_length !== 0;) {
        localDirtyNodes = P.List_List$of(new H.WhereIterable(t1, new A.SemanticsOwner_sendSemanticsUpdate_closure(_this), t3), true, t4);
        t1.clear$0(0);
        t5.clear$0(0);
        t6 = new A.SemanticsOwner_sendSemanticsUpdate_closure0();
        if (!!localDirtyNodes.immutable$list)
          H.throwExpression(P.UnsupportedError$("sort"));
        t7 = localDirtyNodes.length - 1;
        if (t7 - 0 <= 32)
          H.Sort__insertionSort(localDirtyNodes, 0, t7, t6);
        else
          H.Sort__dualPivotQuicksort(localDirtyNodes, 0, t7, t6);
        C.JSArray_methods.addAll$1(visitedNodes, localDirtyNodes);
        for (t6 = localDirtyNodes.length, _i = 0; _i < localDirtyNodes.length; localDirtyNodes.length === t6 || (0, H.throwConcurrentModificationError)(localDirtyNodes), ++_i) {
          node = localDirtyNodes[_i];
          if (node._mergeAllDescendantsIntoThisNode || node._isMergedIntoParent) {
            t7 = J.getInterceptor$x(node);
            if (t2._as(B.AbstractNode.prototype.get$parent.call(t7, node)) != null) {
              t8 = t2._as(B.AbstractNode.prototype.get$parent.call(t7, node));
              t8 = t8._mergeAllDescendantsIntoThisNode || t8._isMergedIntoParent;
            } else
              t8 = false;
            if (t8) {
              t2._as(B.AbstractNode.prototype.get$parent.call(t7, node))._semantics$_markDirty$0();
              node._semantics$_dirty = false;
            }
          }
        }
      }
      C.JSArray_methods.sort$1(visitedNodes, new A.SemanticsOwner_sendSemanticsUpdate_closure1());
      $.SemanticsBinding__instance.toString;
      builder = new P.SemanticsUpdateBuilder(H.setRuntimeTypeInfo([], type$.JSArray_SemanticsNodeUpdate));
      for (t2 = visitedNodes.length, _i = 0; _i < visitedNodes.length; visitedNodes.length === t2 || (0, H.throwConcurrentModificationError)(visitedNodes), ++_i) {
        node = visitedNodes[_i];
        if (node._semantics$_dirty && node._node$_owner != null)
          node._addToUpdate$2(builder, customSemanticsActionIds);
      }
      t1.clear$0(0);
      for (t1 = P._LinkedHashSetIterator$(customSemanticsActionIds, customSemanticsActionIds._collection$_modifications), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
        $.CustomSemanticsAction__actions.$index(0, t2._as(t1._collection$_current)).toString;
      $.SemanticsBinding__instance.toString;
      $.$get$window();
      t1 = $.EngineSemanticsOwner__instance;
      if (t1 == null)
        t1 = $.EngineSemanticsOwner__instance = H.EngineSemanticsOwner$_();
      t1.updateSemantics$1(new H.SemanticsUpdate(builder._nodeUpdates));
      _this.notifyListeners$0();
    },
    _getSemanticsActionHandlerForId$2: function(id, action) {
      var t2, t1 = {},
        result = t1.result = this._nodes.$index(0, id);
      if (result != null)
        t2 = (result._mergeAllDescendantsIntoThisNode || result._isMergedIntoParent) && !result._actions.containsKey$1(0, action);
      else
        t2 = false;
      if (t2)
        result._visitDescendants$1(new A.SemanticsOwner__getSemanticsActionHandlerForId_closure(t1, action));
      t2 = t1.result;
      if (t2 == null || !t2._actions.containsKey$1(0, action))
        return null;
      return t1.result._actions.$index(0, action);
    },
    performAction$3: function(id, action, args) {
      var handler = this._getSemanticsActionHandlerForId$2(id, action);
      if (handler != null) {
        handler.call$1(args);
        return;
      }
      if (action === C.SemanticsAction_256 && this._nodes.$index(0, id)._showOnScreen != null)
        this._nodes.$index(0, id)._showOnScreen.call$0();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this);
    }
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure.prototype = {
    call$1: function(node) {
      return !this.$this._detachedNodes.contains$1(0, node);
    },
    $signature: 48
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure0.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 49
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure1.prototype = {
    call$2: function(a, b) {
      return a._node$_depth - b._node$_depth;
    },
    $signature: 49
  };
  A.SemanticsOwner__getSemanticsActionHandlerForId_closure.prototype = {
    call$1: function(node) {
      if (node._actions.containsKey$1(0, this.action)) {
        this._box_0.result = node;
        return false;
      }
      return true;
    },
    $signature: 48
  };
  A.SemanticsConfiguration.prototype = {
    _addAction$2: function(action, handler) {
      var _this = this;
      _this._actions.$indexSet(0, action, handler);
      _this._actionsAsBits = _this._actionsAsBits | action.index;
      _this._hasBeenAnnotated = true;
    },
    _addArgumentlessAction$2: function(action, handler) {
      this._addAction$2(action, new A.SemanticsConfiguration__addArgumentlessAction_closure(handler));
    },
    set$onTap: function(value) {
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_1, value);
    },
    set$onLongPress: function(value) {
      value.toString;
      this._addArgumentlessAction$2(C.SemanticsAction_2, value);
    },
    set$onScrollLeft: function(value) {
      this._addArgumentlessAction$2(C.SemanticsAction_4, value);
    },
    set$onDismiss: function(value) {
      this._addArgumentlessAction$2(C.SemanticsAction_262144, value);
    },
    set$onScrollRight: function(value) {
      this._addArgumentlessAction$2(C.SemanticsAction_8, value);
    },
    set$onScrollUp: function(value) {
      this._addArgumentlessAction$2(C.SemanticsAction_16, value);
    },
    set$onScrollDown: function(value) {
      this._addArgumentlessAction$2(C.SemanticsAction_32, value);
    },
    set$onIncrease: function(value) {
      this._addArgumentlessAction$2(C.SemanticsAction_64, value);
    },
    set$onDecrease: function(value) {
      this._addArgumentlessAction$2(C.SemanticsAction_128, value);
    },
    set$onCopy: function(_, value) {
      this._addArgumentlessAction$2(C.SemanticsAction_4096, value);
    },
    set$onCut: function(_, value) {
      this._addArgumentlessAction$2(C.SemanticsAction_8192, value);
    },
    set$onPaste: function(_, value) {
      this._addArgumentlessAction$2(C.SemanticsAction_16384, value);
    },
    set$onMoveCursorForwardByCharacter: function(value) {
      this._addAction$2(C.SemanticsAction_512, new A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure(value));
    },
    set$onMoveCursorBackwardByCharacter: function(value) {
      this._addAction$2(C.SemanticsAction_1024, new A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure(value));
    },
    set$onMoveCursorForwardByWord: function(value) {
      this._addAction$2(C.SemanticsAction_524288, new A.SemanticsConfiguration_onMoveCursorForwardByWord_closure(value));
    },
    set$onMoveCursorBackwardByWord: function(value) {
      this._addAction$2(C.SemanticsAction_1048576, new A.SemanticsConfiguration_onMoveCursorBackwardByWord_closure(value));
    },
    set$onSetSelection: function(value) {
      this._addAction$2(C.SemanticsAction_2048, new A.SemanticsConfiguration_onSetSelection_closure(value));
    },
    set$onSetText: function(value) {
      this._addAction$2(C.SemanticsAction_2097152, new A.SemanticsConfiguration_onSetText_closure(value));
    },
    set$onDidGainAccessibilityFocus: function(value) {
      this._addArgumentlessAction$2(C.SemanticsAction_32768, value);
    },
    set$onDidLoseAccessibilityFocus: function(value) {
      this._addArgumentlessAction$2(C.SemanticsAction_65536, value);
    },
    set$maxValueLength: function(value) {
      return;
    },
    set$currentValueLength: function(value) {
      return;
    },
    set$elevation: function(_, value) {
      if (value === this._semantics$_elevation)
        return;
      this._semantics$_elevation = value;
      this._hasBeenAnnotated = true;
    },
    _setFlag$2: function(flag, value) {
      var _this = this,
        t1 = _this._flags,
        t2 = flag.index;
      if (value)
        _this._flags = t1 | t2;
      else
        _this._flags = t1 & ~t2;
      _this._hasBeenAnnotated = true;
    },
    isCompatibleWith$1: function(other) {
      var t1, _this = this;
      if (other == null || !other._hasBeenAnnotated || !_this._hasBeenAnnotated)
        return true;
      if ((_this._actionsAsBits & other._actionsAsBits) !== 0)
        return false;
      if ((_this._flags & other._flags) !== 0)
        return false;
      if (_this._semantics$_value.length !== 0)
        t1 = other._semantics$_value.length !== 0;
      else
        t1 = false;
      if (t1)
        return false;
      return true;
    },
    absorb$1: function(child) {
      var t1, t2, _this = this;
      if (!child._hasBeenAnnotated)
        return;
      _this._actions.addAll$1(0, child._actions);
      _this._customSemanticsActions.addAll$1(0, child._customSemanticsActions);
      _this._actionsAsBits = _this._actionsAsBits | child._actionsAsBits;
      _this._flags = _this._flags | child._flags;
      _this._textSelection = child._textSelection;
      _this._scrollPosition = child._scrollPosition;
      _this._scrollExtentMax = child._scrollExtentMax;
      _this._scrollExtentMin = child._scrollExtentMin;
      if (_this._semantics$_hintOverrides == null)
        _this._semantics$_hintOverrides = child._semantics$_hintOverrides;
      _this._indexInParent = child._indexInParent;
      _this._scrollIndex = child._scrollIndex;
      _this._scrollChildCount = child._scrollChildCount;
      _this._platformViewId = child._platformViewId;
      _this._maxValueLength = child._maxValueLength;
      _this._currentValueLength = child._currentValueLength;
      t1 = _this._semantics$_textDirection;
      if (t1 == null) {
        t1 = _this._semantics$_textDirection = child._semantics$_textDirection;
        _this._hasBeenAnnotated = true;
      }
      if (_this._semantics$_sortKey == null)
        _this._semantics$_sortKey = child._semantics$_sortKey;
      t2 = _this._label;
      _this._label = A._concatStrings(child._label, child._semantics$_textDirection, t2, t1);
      if (_this._decreasedValue === "" || false)
        _this._decreasedValue = child._decreasedValue;
      if (_this._semantics$_value === "" || false)
        _this._semantics$_value = child._semantics$_value;
      if (_this._increasedValue === "" || false)
        _this._increasedValue = child._increasedValue;
      t1 = _this._hint;
      t2 = _this._semantics$_textDirection;
      _this._hint = A._concatStrings(child._hint, child._semantics$_textDirection, t1, t2);
      _this._thickness = Math.max(_this._thickness, child._thickness + child._semantics$_elevation);
      _this._hasBeenAnnotated = _this._hasBeenAnnotated || child._hasBeenAnnotated;
    },
    copy$0: function(_) {
      var _this = this,
        t1 = A.SemanticsConfiguration$();
      t1._isSemanticBoundary = _this._isSemanticBoundary;
      t1.explicitChildNodes = _this.explicitChildNodes;
      t1.isBlockingSemanticsOfPreviouslyPaintedNodes = _this.isBlockingSemanticsOfPreviouslyPaintedNodes;
      t1._hasBeenAnnotated = _this._hasBeenAnnotated;
      t1._isMergingSemanticsOfDescendants = _this._isMergingSemanticsOfDescendants;
      t1._semantics$_textDirection = _this._semantics$_textDirection;
      t1._semantics$_sortKey = _this._semantics$_sortKey;
      t1._label = _this._label;
      t1._increasedValue = _this._increasedValue;
      t1._semantics$_value = _this._semantics$_value;
      t1._decreasedValue = _this._decreasedValue;
      t1._hint = _this._hint;
      t1._semantics$_hintOverrides = _this._semantics$_hintOverrides;
      t1._semantics$_elevation = _this._semantics$_elevation;
      t1._thickness = _this._thickness;
      t1._flags = _this._flags;
      t1._tagsForChildren = _this._tagsForChildren;
      t1._textSelection = _this._textSelection;
      t1._scrollPosition = _this._scrollPosition;
      t1._scrollExtentMax = _this._scrollExtentMax;
      t1._scrollExtentMin = _this._scrollExtentMin;
      t1._actionsAsBits = _this._actionsAsBits;
      t1._indexInParent = _this._indexInParent;
      t1._scrollIndex = _this._scrollIndex;
      t1._scrollChildCount = _this._scrollChildCount;
      t1._platformViewId = _this._platformViewId;
      t1._maxValueLength = _this._maxValueLength;
      t1._currentValueLength = _this._currentValueLength;
      t1._actions.addAll$1(0, _this._actions);
      t1._customSemanticsActions.addAll$1(0, _this._customSemanticsActions);
      return t1;
    }
  };
  A.SemanticsConfiguration__addArgumentlessAction_closure.prototype = {
    call$1: function(args) {
      this.handler.call$0();
    },
    $signature: 7
  };
  A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure.prototype = {
    call$1: function(args) {
      args.toString;
      this.value.call$1(H._asBool(args));
    },
    $signature: 7
  };
  A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure.prototype = {
    call$1: function(args) {
      args.toString;
      this.value.call$1(H._asBool(args));
    },
    $signature: 7
  };
  A.SemanticsConfiguration_onMoveCursorForwardByWord_closure.prototype = {
    call$1: function(args) {
      args.toString;
      this.value.call$1(H._asBool(args));
    },
    $signature: 7
  };
  A.SemanticsConfiguration_onMoveCursorBackwardByWord_closure.prototype = {
    call$1: function(args) {
      args.toString;
      this.value.call$1(H._asBool(args));
    },
    $signature: 7
  };
  A.SemanticsConfiguration_onSetSelection_closure.prototype = {
    call$1: function(args) {
      var selection, t1, t2;
      args.toString;
      selection = J.cast$2$0$ax(type$.Map_dynamic_dynamic._as(args), type$.String, type$.int);
      t1 = selection.$index(0, "base");
      t1.toString;
      t2 = selection.$index(0, "extent");
      t2.toString;
      this.value.call$1(X.TextSelection$(t1, t2));
    },
    $signature: 7
  };
  A.SemanticsConfiguration_onSetText_closure.prototype = {
    call$1: function(args) {
      args.toString;
      this.value.call$1(H._asString(args));
    },
    $signature: 7
  };
  A.DebugSemanticsDumpOrder.prototype = {
    toString$0: function(_) {
      return this._semantics$_name;
    }
  };
  A.SemanticsSortKey.prototype = {
    compareTo$1: function(_, other) {
      var t1 = this.doCompare$1(other);
      return t1;
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  A.OrdinalSortKey.prototype = {
    doCompare$1: function(other) {
      var t1 = other.order === this.order;
      if (t1)
        return 0;
      return C.JSInt_methods.compareTo$1(this.order, other.order);
    }
  };
  A._SemanticsData_Object_Diagnosticable.prototype = {};
  A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin.prototype = {};
  A._SemanticsSortKey_Object_Diagnosticable.prototype = {};
  E.SemanticsEvent.prototype = {
    toMap$1$nodeId: function(nodeId) {
      var $event = P.LinkedHashMap_LinkedHashMap$_literal(["type", this.type, "data", this.getDataMap$0()], type$.String, type$.dynamic);
      if (nodeId != null)
        $event.$indexSet(0, "nodeId", nodeId);
      return $event;
    },
    toString$0: function(_) {
      var _i, key,
        pairs = H.setRuntimeTypeInfo([], type$.JSArray_String),
        dataMap = this.getDataMap$0(),
        t1 = dataMap.get$keys(dataMap),
        sortedKeys = P.List_List$of(t1, true, H._instanceType(t1)._eval$1("Iterable.E"));
      C.JSArray_methods.sort$0(sortedKeys);
      for (t1 = sortedKeys.length, _i = 0; _i < sortedKeys.length; sortedKeys.length === t1 || (0, H.throwConcurrentModificationError)(sortedKeys), ++_i) {
        key = sortedKeys[_i];
        pairs.push(H.S(key) + ": " + H.S(dataMap.$index(0, key)));
      }
      return "SemanticsEvent(" + C.JSArray_methods.join$1(pairs, ", ") + ")";
    }
  };
  E.TapSemanticEvent.prototype = {
    getDataMap$0: function() {
      return C.Map_empty3;
    }
  };
  Q.AssetBundle.prototype = {
    loadString$2$cache: function(key, cache) {
      return this.loadString$body$AssetBundle(key, true);
    },
    loadString$body$AssetBundle: function(key, cache) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, data;
      var $async$loadString$2$cache = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.load$1(0, key), $async$loadString$2$cache);
            case 3:
              // returning from await.
              data = $async$result;
              if (data.byteLength < 51200) {
                $async$returnValue = C.C_Utf8Codec.decode$1(0, H.NativeUint8List_NativeUint8List$view(data.buffer, 0, null));
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = U.compute(Q.asset_bundle_AssetBundle__utf8decode$closure(), data, 'UTF8 decode for "' + key + '"', type$.ByteData, type$.String);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$loadString$2$cache, $async$completer);
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "()";
    }
  };
  Q.CachingAssetBundle.prototype = {
    loadString$2$cache: function(key, cache) {
      return this.super$AssetBundle$loadString(key, true);
    }
  };
  Q.PlatformAssetBundle.prototype = {
    load$1: function(_, key) {
      return this.load$body$PlatformAssetBundle(_, key);
    },
    load$body$PlatformAssetBundle: function(_, key) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.ByteData),
        $async$returnValue, port, t2, hasAuthority, path, encoded, asset, t1, userInfo, host;
      var $async$load$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = P._Uri__uriEncode(C.List_gnE, key, C.C_Utf8Codec, false);
              userInfo = P._Uri__makeUserInfo(null, 0, 0);
              host = P._Uri__makeHost(null, 0, 0, false);
              P._Uri__makeQuery(null, 0, 0, null);
              P._Uri__makeFragment(null, 0, 0);
              port = P._Uri__makePort(null, "");
              if (host == null)
                t2 = userInfo.length !== 0 || port != null || false;
              else
                t2 = false;
              if (t2)
                host = "";
              t2 = host == null;
              hasAuthority = !t2;
              path = P._Uri__makePath(t1, 0, t1.length, null, "", hasAuthority);
              t1 = t2 && !C.JSString_methods.startsWith$1(path, "/");
              if (t1)
                path = P._Uri__normalizeRelativePath(path, hasAuthority);
              else
                path = P._Uri__removeDotSegments(path);
              t2 && C.JSString_methods.startsWith$1(path, "//") ? "" : host;
              encoded = C.C_Utf8Encoder.convert$1(path);
              $async$goto = 3;
              return P._asyncAwait($.ServicesBinding__instance.get$_defaultBinaryMessenger().send$2(0, "flutter/assets", H.NativeByteData_NativeByteData$view(encoded.buffer, 0, null)), $async$load$1);
            case 3:
              // returning from await.
              asset = $async$result;
              if (asset == null)
                throw H.wrapException(U.FlutterError_FlutterError("Unable to load asset: " + key));
              $async$returnValue = asset;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$load$1, $async$completer);
    }
  };
  Q.BinaryMessenger.prototype = {};
  N.ServicesBinding.prototype = {
    get$_defaultBinaryMessenger: function() {
      var t1 = this.ServicesBinding___ServicesBinding__defaultBinaryMessenger;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_defaultBinaryMessenger")) : t1;
    },
    handleMemoryPressure$0: function() {
    },
    handleSystemMessage$1: function(systemMessage) {
      return this.handleSystemMessage$body$ServicesBinding(systemMessage);
    },
    handleSystemMessage$body$ServicesBinding: function(systemMessage) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$handleSystemMessage$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              switch (H._asString(J.$index$asx(type$.Map_String_dynamic._as(systemMessage), "type"))) {
                case "memoryPressure":
                  $async$self.handleMemoryPressure$0();
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handleSystemMessage$1, $async$completer);
    },
    _addLicenses$0: function() {
      var $async$_addLicenses$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        switch ($async$errorCode) {
          case 2:
            $async$next = $async$nextWhenCanceled;
            $async$goto = $async$next.pop();
            break;
          case 1:
            $async$currentError = $async$result;
            $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new P._Future($.Zone__current, type$._Future_String);
              rawLicenses = new P._AsyncCompleter(t1, type$._AsyncCompleter_String);
              t2 = type$.Future_Null;
              $async$self.scheduleTask$1$2(new N.ServicesBinding__addLicenses_closure(rawLicenses), C.Priority_100000, t2);
              $async$goto = 3;
              return P._asyncStarHelper(t1, $async$_addLicenses$0, $async$controller);
            case 3:
              // returning from await.
              t1 = new P._Future($.Zone__current, type$._Future_List_LicenseEntry);
              $async$self.scheduleTask$1$2(new N.ServicesBinding__addLicenses_closure0(new P._AsyncCompleter(t1, type$._AsyncCompleter_List_LicenseEntry), rawLicenses), C.Priority_100000, t2);
              $async$goto = 4;
              return P._asyncStarHelper(t1, $async$_addLicenses$0, $async$controller);
            case 4:
              // returning from await.
              $async$temp1 = P;
              $async$goto = 6;
              return P._asyncStarHelper(t1, $async$_addLicenses$0, $async$controller);
            case 6:
              // returning from await.
              $async$goto = 5;
              $async$nextWhenCanceled = [1];
              return P._asyncStarHelper(P._IterationMarker_yieldStar($async$temp1.Stream_Stream$fromIterable($async$result, type$.LicenseEntry)), $async$_addLicenses$0, $async$controller);
            case 5:
              // after yield
            case 1:
              // return
              return P._asyncStarHelper(null, 0, $async$controller);
            case 2:
              // rethrow
              return P._asyncStarHelper($async$currentError, 1, $async$controller);
          }
      });
      var $async$goto = 0,
        $async$controller = P._makeAsyncStarStreamController($async$_addLicenses$0, type$.LicenseEntry),
        $async$nextWhenCanceled, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, rawLicenses, t2, $async$temp1;
      return P._streamOfController($async$controller);
    },
    readInitialLifecycleStateFromNativeWindow$0: function() {
      if (this.SchedulerBinding__lifecycleState != null)
        return;
      $.$get$window();
      var state = N.ServicesBinding__parseAppLifecycleMessage("AppLifecycleState.resumed");
      if (state != null)
        this.handleAppLifecycleStateChanged$1(state);
    },
    _handleLifecycleMessage$1: function(message) {
      return this._handleLifecycleMessage$body$ServicesBinding(message);
    },
    _handleLifecycleMessage$body$ServicesBinding: function(message) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.nullable_String),
        $async$returnValue, $async$self = this, t1;
      var $async$_handleLifecycleMessage$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              message.toString;
              t1 = N.ServicesBinding__parseAppLifecycleMessage(message);
              t1.toString;
              $async$self.handleAppLifecycleStateChanged$1(t1);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handleLifecycleMessage$1, $async$completer);
    },
    get$_restorationManager: function() {
      var t1 = this.ServicesBinding___ServicesBinding__restorationManager;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_restorationManager")) : t1;
    }
  };
  N.ServicesBinding__addLicenses_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, $async$temp1;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = $async$self.rawLicenses;
              $async$goto = 2;
              return P._asyncAwait($.$get$rootBundle().loadString$2$cache("NOTICES", false), $async$call$0);
            case 2:
              // returning from await.
              $async$temp1.complete$1(0, $async$result);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 45
  };
  N.ServicesBinding__addLicenses_closure0.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, $async$temp1, $async$temp2, $async$temp3;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = $async$self.parsedLicenses;
              $async$temp2 = U;
              $async$temp3 = N.binding0_ServicesBinding__parseLicenses$closure();
              $async$goto = 2;
              return P._asyncAwait($async$self.rawLicenses.future, $async$call$0);
            case 2:
              // returning from await.
              $async$temp1.complete$1(0, $async$temp2.compute($async$temp3, $async$result, "parseLicenses", type$.String, type$.List_LicenseEntry));
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 45
  };
  N._DefaultBinaryMessenger.prototype = {
    _sendPlatformMessage$2: function(channel, message) {
      var t1 = new P._Future($.Zone__current, type$._Future_nullable_ByteData);
      $.$get$EnginePlatformDispatcher__instance().__engine$_sendPlatformMessage$3(channel, message, H.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback(new N._DefaultBinaryMessenger__sendPlatformMessage_closure(new P._AsyncCompleter(t1, type$._AsyncCompleter_nullable_ByteData))));
      return t1;
    },
    handlePlatformMessage$3: function(channel, data, callback) {
      return this.handlePlatformMessage$body$_DefaultBinaryMessenger(channel, data, callback);
    },
    handlePlatformMessage$body$_DefaultBinaryMessenger: function(channel, data, callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$next = [], response, handler, exception, stack, t1, t2, exception0, $async$exception0;
      var $async$handlePlatformMessage$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              callback = callback;
              response = null;
              $async$handler = 3;
              handler = $._DefaultBinaryMessenger__handlers.$index(0, channel);
              $async$goto = handler != null ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return P._asyncAwait(handler.call$1(data), $async$handlePlatformMessage$3);
            case 9:
              // returning from await.
              response = $async$result;
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              t1 = $.$get$channelBuffers();
              t2 = callback;
              t2.toString;
              t1.push$3(channel, data, t2);
              callback = null;
            case 7:
              // join
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception0 = $async$currentError;
              exception = H.unwrapException($async$exception0);
              stack = H.getTraceFromException($async$exception0);
              t1 = U.ErrorDescription$("during a platform message callback");
              U.FlutterError_reportError(new U.FlutterErrorDetails(exception, stack, "services library", t1, null, false));
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              if (callback != null)
                callback.call$1(response);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              // implicit return
              return P._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$handlePlatformMessage$3, $async$completer);
    },
    send$2: function(_, channel, message) {
      $._DefaultBinaryMessenger__mockHandlers.$index(0, channel);
      return this._sendPlatformMessage$2(channel, message);
    },
    setMessageHandler$2: function(channel, handler) {
      if (handler == null)
        $._DefaultBinaryMessenger__handlers.remove$1(0, channel);
      else {
        $._DefaultBinaryMessenger__handlers.$indexSet(0, channel, handler);
        $.$get$channelBuffers().drain$2(channel, new N._DefaultBinaryMessenger_setMessageHandler_closure(this, channel));
      }
    }
  };
  N._DefaultBinaryMessenger__sendPlatformMessage_closure.prototype = {
    call$1: function(reply) {
      var exception, stack, exception0, t1;
      try {
        this.completer.complete$1(0, reply);
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stack = H.getTraceFromException(exception0);
        t1 = U.ErrorDescription$("during a platform message response callback");
        U.FlutterError_reportError(new U.FlutterErrorDetails(exception, stack, "services library", t1, null, false));
      }
    },
    $signature: 10
  };
  N._DefaultBinaryMessenger_setMessageHandler_closure.prototype = {
    call$2: function(data, callback) {
      return this.$call$body$_DefaultBinaryMessenger_setMessageHandler_closure(data, callback);
    },
    $call$body$_DefaultBinaryMessenger_setMessageHandler_closure: function(data, callback) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$call$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return P._asyncAwait($async$self.$this.handlePlatformMessage$3($async$self.channel, data, callback), $async$call$2);
            case 2:
              // returning from await.
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$2, $async$completer);
    },
    $signature: 220
  };
  G.KeyboardKey.prototype = {};
  G.LogicalKeyboardKey.prototype = {
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this.keyId);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof G.LogicalKeyboardKey && other.keyId === this.keyId;
    }
  };
  G.PhysicalKeyboardKey.prototype = {
    get$hashCode: function(_) {
      return C.JSInt_methods.get$hashCode(this.usbHidUsage);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof G.PhysicalKeyboardKey && other.usbHidUsage === this.usbHidUsage;
    }
  };
  G._KeyboardKey_Object_Diagnosticable.prototype = {};
  F.MethodCall.prototype = {
    toString$0: function(_) {
      return "MethodCall(" + this.method + ", " + H.S(this.$arguments) + ")";
    }
  };
  F.PlatformException.prototype = {
    toString$0: function(_) {
      var _this = this;
      return "PlatformException(" + _this.code + ", " + H.S(_this.message) + ", " + H.S(_this.details) + ", " + H.S(_this.stacktrace) + ")";
    },
    $isException: 1
  };
  F.MissingPluginException.prototype = {
    toString$0: function(_) {
      return "MissingPluginException(" + this.message + ")";
    },
    $isException: 1
  };
  U.StringCodec.prototype = {
    decodeMessage$1: function(message) {
      if (message == null)
        return null;
      return C.Utf8Decoder_false.convert$1(H.NativeUint8List_NativeUint8List$view(message.buffer, message.byteOffset, message.byteLength));
    },
    encodeMessage$1: function(message) {
      if (message == null)
        return null;
      return H.NativeByteData_NativeByteData$view(C.C_Utf8Encoder.convert$1(message).buffer, 0, null);
    }
  };
  U.JSONMessageCodec0.prototype = {
    encodeMessage$1: function(message) {
      if (message == null)
        return null;
      return C.C_StringCodec.encodeMessage$1(C.C_JsonCodec.encode$1(message));
    },
    decodeMessage$1: function(message) {
      var t1;
      if (message == null)
        return message;
      t1 = C.C_StringCodec.decodeMessage$1(message);
      t1.toString;
      return C.C_JsonCodec.decode$1(0, t1);
    }
  };
  U.JSONMethodCodec0.prototype = {
    encodeMethodCall$1: function($call) {
      var t1 = C.C_JSONMessageCodec0.encodeMessage$1(P.LinkedHashMap_LinkedHashMap$_literal(["method", $call.method, "args", $call.$arguments], type$.String, type$.nullable_Object));
      t1.toString;
      return t1;
    },
    decodeMethodCall$1: function(methodCall) {
      var t1, method, $arguments, _null = null,
        decoded = C.C_JSONMessageCodec0.decodeMessage$1(methodCall);
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw H.wrapException(P.FormatException$("Expected method call Map, got " + H.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      method = t1.$index(decoded, "method");
      $arguments = t1.$index(decoded, "args");
      if (typeof method == "string")
        return new F.MethodCall(method, $arguments);
      throw H.wrapException(P.FormatException$("Invalid method call: " + H.S(decoded), _null, _null));
    },
    decodeEnvelope$1: function(envelope) {
      var t1, t2, t3, _null = null,
        decoded = C.C_JSONMessageCodec0.decodeMessage$1(envelope);
      if (!type$.List_dynamic._is(decoded))
        throw H.wrapException(P.FormatException$("Expected envelope List, got " + H.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      if (t1.get$length(decoded) === 1)
        return t1.$index(decoded, 0);
      if (t1.get$length(decoded) === 3)
        if (typeof t1.$index(decoded, 0) == "string")
          t2 = t1.$index(decoded, 1) == null || typeof t1.$index(decoded, 1) == "string";
        else
          t2 = false;
      else
        t2 = false;
      if (t2) {
        t2 = H._asString(t1.$index(decoded, 0));
        t3 = H._asString(t1.$index(decoded, 1));
        throw H.wrapException(F.PlatformException$(t2, t1.$index(decoded, 2), t3, _null));
      }
      if (t1.get$length(decoded) === 4)
        if (typeof t1.$index(decoded, 0) == "string")
          if (t1.$index(decoded, 1) == null || typeof t1.$index(decoded, 1) == "string")
            t2 = t1.$index(decoded, 3) == null || typeof t1.$index(decoded, 3) == "string";
          else
            t2 = false;
        else
          t2 = false;
      else
        t2 = false;
      if (t2) {
        t2 = H._asString(t1.$index(decoded, 0));
        t3 = H._asString(t1.$index(decoded, 1));
        throw H.wrapException(F.PlatformException$(t2, t1.$index(decoded, 2), t3, H._asString(t1.$index(decoded, 3))));
      }
      throw H.wrapException(P.FormatException$("Invalid envelope: " + H.S(decoded), _null, _null));
    },
    encodeSuccessEnvelope$1: function(result) {
      var t1 = C.C_JSONMessageCodec0.encodeMessage$1([result]);
      t1.toString;
      return t1;
    },
    encodeErrorEnvelope$3$code$details$message: function(code, details, message) {
      var t1 = C.C_JSONMessageCodec0.encodeMessage$1([code, message, details]);
      t1.toString;
      return t1;
    }
  };
  U.StandardMessageCodec0.prototype = {
    encodeMessage$1: function(message) {
      var buffer;
      if (message == null)
        return null;
      buffer = G.WriteBuffer$();
      this.writeValue$2(0, buffer, message);
      return buffer.done$0();
    },
    decodeMessage$1: function(message) {
      var buffer, result;
      if (message == null)
        return null;
      buffer = new G.ReadBuffer(message);
      result = this.readValue$1(0, buffer);
      if (buffer._serialization$_position < message.byteLength)
        throw H.wrapException(C.FormatException_oCg);
      return result;
    },
    writeValue$2: function(_, buffer, value) {
      var t1, t2, t3, bytes, _this = this;
      if (value == null)
        buffer._serialization$_buffer._typed_buffer$_add$1(0, 0);
      else if (H._isBool(value)) {
        t1 = value ? 1 : 2;
        buffer._serialization$_buffer._typed_buffer$_add$1(0, t1);
      } else if (typeof value == "number") {
        buffer._serialization$_buffer._typed_buffer$_add$1(0, 6);
        buffer._alignTo$1(8);
        t1 = $.$get$Endian_host();
        buffer._eightBytes.setFloat64(0, value, C.C_Endian === t1);
        t1 = buffer._serialization$_buffer;
        t1.toString;
        t1.addAll$1(0, buffer.get$_eightBytesAsList());
      } else if (H._isInt(value)) {
        t1 = -2147483648 <= value && value <= 2147483647;
        t2 = buffer._serialization$_buffer;
        t3 = buffer._eightBytes;
        if (t1) {
          t2._typed_buffer$_add$1(0, 3);
          t1 = $.$get$Endian_host();
          t3.setInt32(0, value, C.C_Endian === t1);
          t1 = buffer._serialization$_buffer;
          t1.toString;
          t1.addAll$3(0, buffer.get$_eightBytesAsList(), 0, 4);
        } else {
          t2._typed_buffer$_add$1(0, 4);
          t1 = $.$get$Endian_host();
          C.NativeByteData_methods.setInt64$3(t3, 0, value, t1);
        }
      } else if (typeof value == "string") {
        buffer._serialization$_buffer._typed_buffer$_add$1(0, 7);
        bytes = C.C_Utf8Encoder.convert$1(value);
        _this.writeSize$2(buffer, bytes.length);
        buffer._serialization$_buffer.addAll$1(0, bytes);
      } else if (type$.Uint8List._is(value)) {
        buffer._serialization$_buffer._typed_buffer$_add$1(0, 8);
        _this.writeSize$2(buffer, value.length);
        buffer._serialization$_buffer.addAll$1(0, value);
      } else if (type$.Int32List._is(value)) {
        buffer._serialization$_buffer._typed_buffer$_add$1(0, 9);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(4);
        t2 = buffer._serialization$_buffer;
        t2.toString;
        t2.addAll$1(0, H.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t1));
      } else if (type$.Float64List._is(value)) {
        buffer._serialization$_buffer._typed_buffer$_add$1(0, 11);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(8);
        t2 = buffer._serialization$_buffer;
        t2.toString;
        t2.addAll$1(0, H.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 8 * t1));
      } else if (type$.List_dynamic._is(value)) {
        buffer._serialization$_buffer._typed_buffer$_add$1(0, 12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); t1.moveNext$0();)
          _this.writeValue$2(0, buffer, t1.get$current(t1));
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer._serialization$_buffer._typed_buffer$_add$1(0, 13);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        t1.forEach$1(value, new U.StandardMessageCodec_writeValue_closure(_this, buffer));
      } else
        throw H.wrapException(P.ArgumentError$value(value, null, null));
    },
    readValue$1: function(_, buffer) {
      if (buffer._serialization$_position >= buffer.data.byteLength)
        throw H.wrapException(C.FormatException_oCg);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2: function(type, buffer) {
      var t1, t2, value, $length, list, result, i, t3, _this = this;
      switch (type) {
        case 0:
          return null;
        case 1:
          return true;
        case 2:
          return false;
        case 3:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getInt32(t1, C.C_Endian === t2);
          buffer._serialization$_position += 4;
          return value;
        case 4:
          return buffer.getInt64$0(0);
        case 6:
          buffer._alignTo$1(8);
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getFloat64(t1, C.C_Endian === t2);
          buffer._serialization$_position += 8;
          return value;
        case 5:
        case 7:
          $length = _this.readSize$1(buffer);
          return C.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length));
        case 8:
          return buffer.getUint8List$1(_this.readSize$1(buffer));
        case 9:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(4);
          t1 = buffer.data;
          list = H.NativeInt32List_NativeInt32List$view(t1.buffer, t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 4 * $length;
          return list;
        case 10:
          return buffer.getInt64List$1(_this.readSize$1(buffer));
        case 11:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(8);
          t1 = buffer.data;
          list = H.NativeFloat64List_NativeFloat64List$view(t1.buffer, t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 8 * $length;
          return list;
        case 12:
          $length = _this.readSize$1(buffer);
          result = P.List_List$filled($length, null, false, type$.nullable_Object);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (t2 >= t1.byteLength)
              H.throwExpression(C.FormatException_oCg);
            buffer._serialization$_position = t2 + 1;
            result[i] = _this.readValueOfType$2(t1.getUint8(t2), buffer);
          }
          return result;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.nullable_Object;
          result = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (t2 >= t1.byteLength)
              H.throwExpression(C.FormatException_oCg);
            buffer._serialization$_position = t2 + 1;
            t2 = _this.readValueOfType$2(t1.getUint8(t2), buffer);
            t3 = buffer._serialization$_position;
            if (t3 >= t1.byteLength)
              H.throwExpression(C.FormatException_oCg);
            buffer._serialization$_position = t3 + 1;
            result.$indexSet(0, t2, _this.readValueOfType$2(t1.getUint8(t3), buffer));
          }
          return result;
        default:
          throw H.wrapException(C.FormatException_oCg);
      }
    },
    writeSize$2: function(buffer, value) {
      var t1, t2;
      if (value < 254)
        buffer._serialization$_buffer._typed_buffer$_add$1(0, value);
      else {
        t1 = buffer._serialization$_buffer;
        t2 = buffer._eightBytes;
        if (value <= 65535) {
          t1._typed_buffer$_add$1(0, 254);
          t1 = $.$get$Endian_host();
          t2.setUint16(0, value, C.C_Endian === t1);
          t1 = buffer._serialization$_buffer;
          t1.toString;
          t1.addAll$3(0, buffer.get$_eightBytesAsList(), 0, 2);
        } else {
          t1._typed_buffer$_add$1(0, 255);
          t1 = $.$get$Endian_host();
          t2.setUint32(0, value, C.C_Endian === t1);
          t1 = buffer._serialization$_buffer;
          t1.toString;
          t1.addAll$3(0, buffer.get$_eightBytesAsList(), 0, 4);
        }
      }
    },
    readSize$1: function(buffer) {
      var t1, t2,
        value = buffer.getUint8$0(0);
      switch (value) {
        case 254:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint16(t1, C.C_Endian === t2);
          buffer._serialization$_position += 2;
          return value;
        case 255:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint32(t1, C.C_Endian === t2);
          buffer._serialization$_position += 4;
          return value;
        default:
          return value;
      }
    }
  };
  U.StandardMessageCodec_writeValue_closure.prototype = {
    call$2: function(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(0, t2, key);
      t1.writeValue$2(0, t2, value);
    },
    $signature: 52
  };
  U.StandardMethodCodec0.prototype = {
    encodeMethodCall$1: function($call) {
      var buffer = G.WriteBuffer$();
      C.C_StandardMessageCodec.writeValue$2(0, buffer, $call.method);
      C.C_StandardMessageCodec.writeValue$2(0, buffer, $call.$arguments);
      return buffer.done$0();
    },
    decodeMethodCall$1: function(methodCall) {
      var buffer, method, $arguments;
      methodCall.toString;
      buffer = new G.ReadBuffer(methodCall);
      method = C.C_StandardMessageCodec.readValue$1(0, buffer);
      $arguments = C.C_StandardMessageCodec.readValue$1(0, buffer);
      if (typeof method == "string" && buffer._serialization$_position >= methodCall.byteLength)
        return new F.MethodCall(method, $arguments);
      else
        throw H.wrapException(C.FormatException_Qi2);
    },
    encodeSuccessEnvelope$1: function(result) {
      var buffer = G.WriteBuffer$();
      buffer._serialization$_buffer._typed_buffer$_add$1(0, 0);
      C.C_StandardMessageCodec.writeValue$2(0, buffer, result);
      return buffer.done$0();
    },
    encodeErrorEnvelope$3$code$details$message: function(code, details, message) {
      var buffer = G.WriteBuffer$();
      buffer._serialization$_buffer._typed_buffer$_add$1(0, 1);
      C.C_StandardMessageCodec.writeValue$2(0, buffer, code);
      C.C_StandardMessageCodec.writeValue$2(0, buffer, message);
      C.C_StandardMessageCodec.writeValue$2(0, buffer, details);
      return buffer.done$0();
    },
    decodeEnvelope$1: function(envelope) {
      var buffer, errorCode, errorMessage, errorDetails, errorStacktrace, t1;
      if (envelope.byteLength === 0)
        throw H.wrapException(C.FormatException_iDw);
      buffer = new G.ReadBuffer(envelope);
      if (buffer.getUint8$0(0) === 0)
        return C.C_StandardMessageCodec.readValue$1(0, buffer);
      errorCode = C.C_StandardMessageCodec.readValue$1(0, buffer);
      errorMessage = C.C_StandardMessageCodec.readValue$1(0, buffer);
      errorDetails = C.C_StandardMessageCodec.readValue$1(0, buffer);
      errorStacktrace = buffer._serialization$_position < envelope.byteLength ? H._asStringQ(C.C_StandardMessageCodec.readValue$1(0, buffer)) : null;
      if (typeof errorCode == "string")
        t1 = (errorMessage == null || typeof errorMessage == "string") && buffer._serialization$_position >= envelope.byteLength;
      else
        t1 = false;
      if (t1)
        throw H.wrapException(F.PlatformException$(errorCode, errorDetails, H._asStringQ(errorMessage), errorStacktrace));
      else
        throw H.wrapException(C.FormatException_pSr);
    }
  };
  A.MouseCursorManager.prototype = {
    handleDeviceCursorUpdate$3: function(device, triggeringEvent, cursorCandidates) {
      var t1, lastSession, nextCursor, nextSession;
      if (type$.PointerRemovedEvent._is(triggeringEvent)) {
        this._lastSession.remove$1(0, device);
        return;
      }
      t1 = this._lastSession;
      lastSession = t1.$index(0, device);
      nextCursor = A._DeferringMouseCursor_firstNonDeferred(cursorCandidates);
      if (nextCursor == null)
        nextCursor = this.fallbackMouseCursor;
      if (J.$eq$(lastSession == null ? null : type$.SystemMouseCursor._as(lastSession.cursor), nextCursor))
        return;
      nextSession = nextCursor.createSession$1(device);
      t1.$indexSet(0, device, nextSession);
      C.OptionalMethodChannel_meQ.invokeMethod$1$2("activateSystemCursor", P.LinkedHashMap_LinkedHashMap$_literal(["device", nextSession.device, "kind", type$.SystemMouseCursor._as(nextSession.cursor).kind], type$.String, type$.dynamic), type$.void);
    }
  };
  A.MouseCursorSession.prototype = {};
  A.MouseCursor0.prototype = {
    toString$0: function(_) {
      var debugDescription = this.get$debugDescription();
      return debugDescription;
    }
  };
  A._DeferringMouseCursor.prototype = {
    createSession$1: function(device) {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    get$debugDescription: function() {
      return "defer";
    }
  };
  A._SystemMouseCursorSession.prototype = {};
  A.SystemMouseCursor.prototype = {
    get$debugDescription: function() {
      return "SystemMouseCursor(" + this.kind + ")";
    },
    createSession$1: function(device) {
      return new A._SystemMouseCursorSession(this, device);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof A.SystemMouseCursor && other.kind === this.kind;
    },
    get$hashCode: function(_) {
      return C.JSString_methods.get$hashCode(this.kind);
    }
  };
  A._MouseCursor_Object_Diagnosticable.prototype = {};
  A.BasicMessageChannel.prototype = {
    get$binaryMessenger: function() {
      var t1 = $.ServicesBinding__instance;
      return t1.get$_defaultBinaryMessenger();
    },
    send$1: function(_, message) {
      return this.send$body$BasicMessageChannel(_, message, this.$ti._eval$1("1?"));
    },
    send$body$BasicMessageChannel: function(_, message, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$send$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              $async$temp1 = t1;
              $async$goto = 3;
              return P._asyncAwait($async$self.get$binaryMessenger().send$2(0, $async$self.name, t1.encodeMessage$1(message)), $async$send$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.decodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$send$1, $async$completer);
    },
    setMessageHandler$1: function(handler) {
      this.get$binaryMessenger().setMessageHandler$2(this.name, new A.BasicMessageChannel_setMessageHandler_closure(this, handler));
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  A.BasicMessageChannel_setMessageHandler_closure.prototype = {
    call$1: function(message) {
      return this.$call$body$BasicMessageChannel_setMessageHandler_closure(message);
    },
    $call$body$BasicMessageChannel_setMessageHandler_closure: function(message) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this.codec;
              $async$temp1 = t1;
              $async$goto = 3;
              return P._asyncAwait($async$self.handler.call$1(t1.decodeMessage$1(message)), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.encodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 84
  };
  A.MethodChannel.prototype = {
    get$binaryMessenger: function() {
      var t1 = $.ServicesBinding__instance;
      return t1.get$_defaultBinaryMessenger();
    },
    _invokeMethod$1$3$arguments$missingOk: function(method, $arguments, missingOk, $T) {
      return this._invokeMethod$body$MethodChannel(method, $arguments, missingOk, $T, $T._eval$1("0?"));
    },
    _invokeMethod$body$MethodChannel: function(method, $arguments, missingOk, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, t2, result;
      var $async$_invokeMethod$1$3$arguments$missingOk = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.name;
              t2 = $async$self.codec;
              $async$goto = 3;
              return P._asyncAwait($async$self.get$binaryMessenger().send$2(0, t1, t2.encodeMethodCall$1(new F.MethodCall(method, $arguments))), $async$_invokeMethod$1$3$arguments$missingOk);
            case 3:
              // returning from await.
              result = $async$result;
              if (result == null) {
                if (missingOk) {
                  $async$returnValue = null;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                throw H.wrapException(new F.MissingPluginException("No implementation found for method " + method + " on channel " + t1));
              }
              $async$returnValue = $T._eval$1("0?")._as(t2.decodeEnvelope$1(result));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_invokeMethod$1$3$arguments$missingOk, $async$completer);
    },
    setMethodCallHandler$1: function(handler) {
      var values, _this = this,
        _s14_ = "expando$values",
        t1 = $.$get$_methodChannelHandlers()._jsWeakMapOrKey;
      if (typeof t1 != "string")
        t1.set(_this, handler);
      else {
        values = H.Primitives_getProperty(_this, _s14_);
        if (values == null) {
          values = new P.Object();
          H.Primitives_setProperty(_this, _s14_, values);
        }
        H.Primitives_setProperty(values, t1, handler);
      }
      t1 = _this.get$binaryMessenger();
      t1.setMessageHandler$2(_this.name, new A.MethodChannel_setMethodCallHandler_closure(_this, handler));
    },
    _handleAsMethodCall$2: function(message, handler) {
      return this._handleAsMethodCall$body$MethodChannel(message, handler);
    },
    _handleAsMethodCall$body$MethodChannel: function(message, handler) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, e, e0, t2, exception, t3, t1, $call, $async$exception, $async$temp1;
      var $async$_handleAsMethodCall$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              $call = t1.decodeMethodCall$1(message);
              $async$handler = 4;
              $async$temp1 = t1;
              $async$goto = 7;
              return P._asyncAwait(handler.call$1($call), $async$_handleAsMethodCall$2);
            case 7:
              // returning from await.
              t2 = $async$temp1.encodeSuccessEnvelope$1($async$result);
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t2 = H.unwrapException($async$exception);
              if (t2 instanceof F.PlatformException) {
                e = t2;
                t2 = e.code;
                t3 = e.message;
                $async$returnValue = t1.encodeErrorEnvelope$3$code$details$message(t2, e.details, t3);
                // goto return
                $async$goto = 1;
                break;
              } else if (t2 instanceof F.MissingPluginException) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              } else {
                e0 = t2;
                t1 = t1.encodeErrorEnvelope$3$code$details$message("error", null, J.toString$0$(e0));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handleAsMethodCall$2, $async$completer);
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  A.MethodChannel_setMethodCallHandler_closure.prototype = {
    call$1: function(message) {
      return this.$this._handleAsMethodCall$2(message, this.handler);
    },
    $signature: 84
  };
  A.OptionalMethodChannel.prototype = {
    invokeMethod$1$2: function(method, $arguments, $T) {
      return this.invokeMethod$body$OptionalMethodChannel(method, $arguments, $T, $T._eval$1("0?"));
    },
    invokeMethod$1$1: function(method, $T) {
      return this.invokeMethod$1$2(method, null, $T);
    },
    invokeMethod$body$OptionalMethodChannel: function(method, $arguments, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this;
      var $async$invokeMethod$1$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self.super$MethodChannel$_invokeMethod(method, $arguments, true, $T);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$invokeMethod$1$2, $async$completer);
    }
  };
  B.KeyboardSide.prototype = {
    toString$0: function(_) {
      return this._raw_keyboard$_name;
    }
  };
  B.ModifierKey.prototype = {
    toString$0: function(_) {
      return this._raw_keyboard$_name;
    }
  };
  B.RawKeyEventData.prototype = {
    get$modifiersPressed: function() {
      var _i, key, side,
        result = P.LinkedHashMap_LinkedHashMap$_empty(type$.ModifierKey, type$.KeyboardSide);
      for (_i = 0; _i < 9; ++_i) {
        key = C.List_0[_i];
        if (this.isModifierPressed$1(key)) {
          side = this.getModifierSide$1(key);
          if (side != null)
            result.$indexSet(0, key, side);
        }
      }
      return result;
    },
    shouldDispatchEvent$0: function() {
      return true;
    }
  };
  B.RawKeyEvent.prototype = {};
  B.RawKeyDownEvent.prototype = {};
  B.RawKeyUpEvent.prototype = {};
  B.RawKeyboard.prototype = {
    _handleKeyEvent$1: function(message) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, shouldDispatch, t2, t3, _i, listener, $event;
      var $async$_handleKeyEvent$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $event = B.RawKeyEvent_RawKeyEvent$fromMessage(type$.Map_String_dynamic._as(message));
              if ($event instanceof B.RawKeyDownEvent) {
                t1 = $event.data;
                if (t1.shouldDispatchEvent$0()) {
                  $async$self._keysPressed.$indexSet(0, t1.get$physicalKey(), t1.get$logicalKey());
                  shouldDispatch = true;
                } else {
                  $async$self._hiddenKeysPressed.add$1(0, t1.get$physicalKey());
                  shouldDispatch = false;
                }
              } else if ($event instanceof B.RawKeyUpEvent) {
                t1 = $async$self._hiddenKeysPressed;
                t2 = $event.data;
                if (!t1.contains$1(0, t2.get$physicalKey())) {
                  $async$self._keysPressed.remove$1(0, t2.get$physicalKey());
                  shouldDispatch = true;
                } else {
                  t1.remove$1(0, t2.get$physicalKey());
                  shouldDispatch = false;
                }
              } else
                shouldDispatch = true;
              if (!shouldDispatch) {
                $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["handled", true], type$.String, type$.dynamic);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._synchronizeModifiers$1($event);
              for (t1 = $async$self._raw_keyboard$_listeners, t2 = P.List_List$from(t1, true, type$.void_Function_RawKeyEvent), t3 = t2.length, _i = 0; _i < t3; ++_i) {
                listener = t2[_i];
                if (C.JSArray_methods.contains$1(t1, listener))
                  listener.call$1($event);
              }
              t1 = $async$self.keyEventHandler;
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["handled", t1 != null && t1.call$1($event)], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handleKeyEvent$1, $async$completer);
    },
    _synchronizeModifiers$1: function($event) {
      var t2, t3, mappedKeys, t4, t5, t6,
        t1 = $event.data,
        modifiersPressed = t1.get$modifiersPressed(),
        modifierKeys = P.LinkedHashMap_LinkedHashMap$_empty(type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey);
      for (t2 = modifiersPressed.get$keys(modifiersPressed), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        mappedKeys = $.RawKeyboard__modifierKeyMap.$index(0, new B._ModifierSidePair(t3, modifiersPressed.$index(0, t3)));
        if (mappedKeys == null)
          continue;
        for (t3 = new P._LinkedHashSetIterator(mappedKeys, mappedKeys._collection$_modifications), t3._collection$_cell = mappedKeys._collection$_first, t4 = H._instanceType(t3)._precomputed1; t3.moveNext$0();) {
          t5 = t4._as(t3._collection$_current);
          t6 = $.$get$RawKeyboard__allModifiers().$index(0, t5);
          t6.toString;
          modifierKeys.$indexSet(0, t5, t6);
        }
      }
      t2 = this._keysPressed;
      $.RawKeyboard__allModifiersExceptFn.get$keys($.RawKeyboard__allModifiersExceptFn).forEach$1(0, t2.get$remove(t2));
      if (!(t1 instanceof Q.RawKeyEventDataFuchsia) && !(t1 instanceof B.RawKeyEventDataMacOs))
        t2.remove$1(0, C.PhysicalKeyboardKey_18);
      t2.addAll$1(0, modifierKeys);
    }
  };
  B._ModifierSidePair.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof B._ModifierSidePair && other.modifier === this.modifier && other.side == this.side;
    },
    get$hashCode: function(_) {
      return P.hashValues(this.modifier, this.side, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  B._RawKeyEvent_Object_Diagnosticable.prototype = {};
  Q.RawKeyEventDataFuchsia.prototype = {};
  B.RawKeyEventDataMacOs.prototype = {};
  A.RawKeyEventDataWeb.prototype = {
    get$physicalKey: function() {
      var t1 = C.Map_YV2No.$index(0, this.code);
      return t1 == null ? C.PhysicalKeyboardKey_0 : t1;
    },
    get$logicalKey: function() {
      var newKey,
        t1 = this.code,
        numPadKey = C.Map_oWkr3.$index(0, t1);
      if (numPadKey != null)
        return numPadKey;
      newKey = C.Map_YVCB9.$index(0, t1);
      if (newKey != null)
        return newKey;
      return new G.LogicalKeyboardKey((C.JSString_methods.get$hashCode(t1) | 0) >>> 0);
    },
    isModifierPressed$1: function(key) {
      var _this = this;
      switch (key) {
        case C.ModifierKey_0:
          return (_this.metaState & 4) !== 0;
        case C.ModifierKey_1:
          return (_this.metaState & 1) !== 0;
        case C.ModifierKey_2:
          return (_this.metaState & 2) !== 0;
        case C.ModifierKey_3:
          return (_this.metaState & 8) !== 0;
        case C.ModifierKey_5:
          return (_this.metaState & 16) !== 0;
        case C.ModifierKey_4:
          return (_this.metaState & 32) !== 0;
        case C.ModifierKey_6:
          return (_this.metaState & 64) !== 0;
        case C.ModifierKey_7:
        case C.ModifierKey_8:
          return false;
      }
    },
    getModifierSide$1: function(key) {
      return C.KeyboardSide_3;
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this.key;
      return "RawKeyEventDataWeb(keyLabel: " + (t1 === "Unidentified" ? "" : t1) + ", code: " + _this.code + ", metaState: " + _this.metaState + ", modifiers down: " + _this.get$modifiersPressed().toString$0(0) + ")";
    }
  };
  K.RestorationManager.prototype = {
    get$rootBucket: function() {
      var _this = this;
      if (_this._rootBucketIsValid)
        return new O.SynchronousFuture(_this._restoration$_rootBucket, type$.SynchronousFuture_nullable_RestorationBucket);
      if (_this._pendingRootBucket == null) {
        _this._pendingRootBucket = new P._AsyncCompleter(new P._Future($.Zone__current, type$._Future_nullable_RestorationBucket), type$._AsyncCompleter_nullable_RestorationBucket);
        _this._getRootBucketFromEngine$0();
      }
      return _this._pendingRootBucket.future;
    },
    _getRootBucketFromEngine$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, config;
      var $async$_getRootBucketFromEngine$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait(C.OptionalMethodChannel_fgL.invokeMethod$1$1("get", type$.Map_of_nullable_Object_and_nullable_Object), $async$_getRootBucketFromEngine$0);
            case 3:
              // returning from await.
              config = $async$result;
              if ($async$self._pendingRootBucket == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._parseAndHandleRestorationUpdateFromEngine$1(config);
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_getRootBucketFromEngine$0, $async$completer);
    },
    _parseAndHandleRestorationUpdateFromEngine$1: function(update) {
      var t2,
        t1 = update == null;
      if (!t1) {
        t2 = J.$index$asx(update, "enabled");
        t2.toString;
        H._asBool(t2);
      } else
        t2 = false;
      this.handleRestorationUpdateFromEngine$2$data$enabled(t1 ? null : type$.nullable_Uint8List._as(J.$index$asx(update, "data")), t2);
    },
    handleRestorationUpdateFromEngine$2$data$enabled: function(data, enabled) {
      var oldRoot, t2, _this = this,
        t1 = _this._rootBucketIsValid && enabled;
      _this._isReplacing = t1;
      if (t1)
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new K.RestorationManager_handleRestorationUpdateFromEngine_closure(_this));
      oldRoot = _this._restoration$_rootBucket;
      if (enabled) {
        t1 = _this._decodeRestorationData$1(data);
        t2 = type$.String;
        if (t1 == null) {
          t1 = type$.nullable_Object;
          t1 = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        }
        t2 = new K.RestorationBucket(t1, _this, null, "root", P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.RestorationBucket), P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.List_RestorationBucket));
        t1 = t2;
      } else
        t1 = null;
      _this._restoration$_rootBucket = t1;
      _this._rootBucketIsValid = true;
      t2 = _this._pendingRootBucket;
      if (t2 != null)
        t2.complete$1(0, t1);
      _this._pendingRootBucket = null;
      if (_this._restoration$_rootBucket != oldRoot) {
        _this.notifyListeners$0();
        if (oldRoot != null)
          oldRoot.dispose$0(0);
      }
    },
    _methodHandler$1: function($call) {
      return this._methodHandler$body$RestorationManager($call);
    },
    _methodHandler$body$RestorationManager: function($call) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.nullable_Object),
        $async$self = this, t1;
      var $async$_methodHandler$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $call.method;
              switch (t1) {
                case "push":
                  $async$self._parseAndHandleRestorationUpdateFromEngine$1(type$.Map_of_nullable_Object_and_nullable_Object._as($call.$arguments));
                  break;
                default:
                  throw H.wrapException(P.UnimplementedError$(t1 + " was invoked but isn't implemented by " + H.getRuntimeType($async$self).toString$0(0)));
              }
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$_methodHandler$1, $async$completer);
    },
    _decodeRestorationData$1: function(data) {
      if (data == null)
        return null;
      return type$.nullable_Map_of_nullable_Object_and_nullable_Object._as(C.C_StandardMessageCodec.decodeMessage$1(H.NativeByteData_NativeByteData$view(data.buffer, data.byteOffset, data.byteLength)));
    },
    scheduleSerializationFor$1: function(bucket) {
      var _this = this;
      _this._bucketsNeedingSerialization.add$1(0, bucket);
      if (!_this._serializationScheduled) {
        _this._serializationScheduled = true;
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new K.RestorationManager_scheduleSerializationFor_closure(_this));
      }
    },
    _doSerialization$0: function() {
      var t1, t2, t3, encoded, _this = this;
      if (!_this._serializationScheduled)
        return;
      _this._serializationScheduled = false;
      for (t1 = _this._bucketsNeedingSerialization, t2 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t3 = H._instanceType(t2)._precomputed1; t2.moveNext$0();)
        t3._as(t2._collection$_current)._needsSerialization = false;
      t1.clear$0(0);
      encoded = C.C_StandardMessageCodec.encodeMessage$1(_this._restoration$_rootBucket._rawData);
      C.OptionalMethodChannel_fgL.invokeMethod$1$2("put", H.NativeUint8List_NativeUint8List$view(encoded.buffer, encoded.byteOffset, encoded.byteLength), type$.void);
    }
  };
  K.RestorationManager_handleRestorationUpdateFromEngine_closure.prototype = {
    call$1: function(_) {
      this.$this._isReplacing = false;
    },
    $signature: 6
  };
  K.RestorationManager_scheduleSerializationFor_closure.prototype = {
    call$1: function(_) {
      return this.$this._doSerialization$0();
    },
    $signature: 6
  };
  K.RestorationBucket.prototype = {
    get$_rawChildren: function() {
      var t1 = J.putIfAbsent$2$x(this._rawData, "c", new K.RestorationBucket__rawChildren_closure());
      t1.toString;
      return type$.Map_of_nullable_Object_and_nullable_Object._as(t1);
    },
    get$_rawValues: function() {
      var t1 = J.putIfAbsent$2$x(this._rawData, "v", new K.RestorationBucket__rawValues_closure());
      t1.toString;
      return type$.Map_of_nullable_Object_and_nullable_Object._as(t1);
    },
    remove$1$1: function(_, restorationId, $P) {
      var _this = this,
        needsUpdate = J.containsKey$1$x(_this.get$_rawValues(), restorationId),
        result = $P._eval$1("0?")._as(J.remove$1$ax(_this.get$_rawValues(), restorationId));
      if (J.get$isEmpty$asx(_this.get$_rawValues()))
        J.remove$1$ax(_this._rawData, "v");
      if (needsUpdate)
        _this._markNeedsSerialization$0();
      return result;
    },
    claimChild$2$debugOwner: function(restorationId, debugOwner) {
      var child, t2, t3, t4, _this = this,
        t1 = _this._claimedChildren;
      if (t1.containsKey$1(0, restorationId) || !J.containsKey$1$x(_this.get$_rawChildren(), restorationId)) {
        t1 = type$.String;
        child = new K.RestorationBucket(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.nullable_Object), null, null, restorationId, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.RestorationBucket), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_RestorationBucket));
        _this.adoptChild$1(child);
        return child;
      }
      t2 = type$.String;
      t3 = _this._manager;
      t4 = J.$index$asx(_this.get$_rawChildren(), restorationId);
      t4.toString;
      child = new K.RestorationBucket(type$.Map_of_nullable_Object_and_nullable_Object._as(t4), t3, _this, restorationId, P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.RestorationBucket), P.LinkedHashMap_LinkedHashMap$_empty(t2, type$.List_RestorationBucket));
      t1.$indexSet(0, restorationId, child);
      return child;
    },
    adoptChild$1: function(child) {
      var _this = this,
        t1 = child._restoration$_parent;
      if (t1 !== _this) {
        if (t1 != null)
          t1._removeChildData$1(child);
        child._restoration$_parent = _this;
        _this._addChildData$1(child);
        if (child._manager != _this._manager)
          _this._recursivelyUpdateManager$1(child);
      }
    },
    _dropChild$1: function(child) {
      this._removeChildData$1(child);
      child._restoration$_parent = null;
      if (child._manager != null) {
        child._updateManager$1(null);
        child._visitChildren$1(this.get$_recursivelyUpdateManager());
      }
    },
    _markNeedsSerialization$0: function() {
      var t1, _this = this;
      if (!_this._needsSerialization) {
        _this._needsSerialization = true;
        t1 = _this._manager;
        if (t1 != null)
          t1.scheduleSerializationFor$1(_this);
      }
    },
    _recursivelyUpdateManager$1: function(bucket) {
      bucket._updateManager$1(this._manager);
      bucket._visitChildren$1(this.get$_recursivelyUpdateManager());
    },
    _updateManager$1: function(newManager) {
      var _this = this,
        t1 = _this._manager;
      if (t1 == newManager)
        return;
      if (_this._needsSerialization)
        if (t1 != null)
          t1._bucketsNeedingSerialization.remove$1(0, _this);
      _this._manager = newManager;
      if (_this._needsSerialization && newManager != null) {
        _this._needsSerialization = false;
        _this._markNeedsSerialization$0();
      }
    },
    _removeChildData$1: function(child) {
      var t1, pendingChildren, t2, _this = this;
      if (J.$eq$(_this._claimedChildren.remove$1(0, child._restorationId), child)) {
        J.remove$1$ax(_this.get$_rawChildren(), child._restorationId);
        t1 = _this._childrenToAdd;
        pendingChildren = t1.$index(0, child._restorationId);
        if (pendingChildren != null) {
          t2 = J.getInterceptor$ax(pendingChildren);
          _this._finalizeAddChildData$1(t2.removeLast$0(pendingChildren));
          if (t2.get$isEmpty(pendingChildren))
            t1.remove$1(0, child._restorationId);
        }
        if (J.get$isEmpty$asx(_this.get$_rawChildren()))
          J.remove$1$ax(_this._rawData, "c");
        _this._markNeedsSerialization$0();
        return;
      }
      t1 = _this._childrenToAdd;
      t2 = t1.$index(0, child._restorationId);
      if (t2 != null)
        J.remove$1$ax(t2, child);
      t2 = t1.$index(0, child._restorationId);
      if ((t2 == null ? null : J.get$isEmpty$asx(t2)) === true)
        t1.remove$1(0, child._restorationId);
    },
    _addChildData$1: function(child) {
      var _this = this;
      if (_this._claimedChildren.containsKey$1(0, child._restorationId)) {
        J.add$1$ax(_this._childrenToAdd.putIfAbsent$2(0, child._restorationId, new K.RestorationBucket__addChildData_closure()), child);
        _this._markNeedsSerialization$0();
        return;
      }
      _this._finalizeAddChildData$1(child);
      _this._markNeedsSerialization$0();
    },
    _finalizeAddChildData$1: function(child) {
      this._claimedChildren.$indexSet(0, child._restorationId, child);
      J.$indexSet$ax(this.get$_rawChildren(), child._restorationId, child._rawData);
    },
    _visitChildren$2$concurrentModification: function(visitor, concurrentModification) {
      var t2, children,
        t1 = this._claimedChildren;
      t1 = t1.get$values(t1);
      t2 = this._childrenToAdd;
      t2 = t2.get$values(t2);
      children = t1.followedBy$1(0, new H.ExpandIterable(t2, new K.RestorationBucket__visitChildren_closure(), H._instanceType(t2)._eval$1("ExpandIterable<Iterable.E,RestorationBucket>")));
      J.forEach$1$ax(concurrentModification ? P.List_List$of(children, false, H._instanceType(children)._eval$1("Iterable.E")) : children, visitor);
    },
    _visitChildren$1: function(visitor) {
      return this._visitChildren$2$concurrentModification(visitor, false);
    },
    rename$1: function(newRestorationId) {
      var t1, _this = this;
      if (newRestorationId === _this._restorationId)
        return;
      t1 = _this._restoration$_parent;
      if (t1 != null)
        t1._removeChildData$1(_this);
      _this._restorationId = newRestorationId;
      t1 = _this._restoration$_parent;
      if (t1 != null)
        t1._addChildData$1(_this);
    },
    dispose$0: function(_) {
      var t1, _this = this;
      _this._visitChildren$2$concurrentModification(_this.get$_dropChild(), true);
      _this._claimedChildren.clear$0(0);
      _this._childrenToAdd.clear$0(0);
      t1 = _this._restoration$_parent;
      if (t1 != null)
        t1._removeChildData$1(_this);
      _this._restoration$_parent = null;
      _this._updateManager$1(null);
      _this._debugDisposed = true;
    },
    toString$0: function(_) {
      return "RestorationBucket(restorationId: " + this._restorationId + ", owner: " + H.S(this._debugOwner) + ")";
    }
  };
  K.RestorationBucket__rawChildren_closure.prototype = {
    call$0: function() {
      var t1 = type$.nullable_Object;
      return P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
    },
    $signature: 86
  };
  K.RestorationBucket__rawValues_closure.prototype = {
    call$0: function() {
      var t1 = type$.nullable_Object;
      return P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
    },
    $signature: 86
  };
  K.RestorationBucket__addChildData_closure.prototype = {
    call$0: function() {
      return H.setRuntimeTypeInfo([], type$.JSArray_RestorationBucket);
    },
    $signature: 226
  };
  K.RestorationBucket__visitChildren_closure.prototype = {
    call$1: function(buckets) {
      return buckets;
    },
    $signature: 227
  };
  X.ApplicationSwitcherDescription.prototype = {};
  V.SystemSoundType.prototype = {
    toString$0: function(_) {
      return this._system_sound$_name;
    }
  };
  X.TextSelection.prototype = {
    toString$0: function(_) {
      return "TextSelection(baseOffset: " + this.baseOffset + ", extentOffset: " + this.extentOffset + ", affinity: " + C.TextAffinity_1.toString$0(0) + ", isDirectional: false)";
    },
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof X.TextSelection)
        if (other.baseOffset === this.baseOffset)
          if (other.extentOffset === this.extentOffset)
            t1 = true;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var t1 = C.JSInt_methods.get$hashCode(this.baseOffset),
        t2 = C.JSInt_methods.get$hashCode(this.extentOffset),
        t3 = H.Primitives_objectHashCode(C.TextAffinity_1);
      return P.hashValues(t1, t2, t3, 218159, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  N.SelectionChangedCause.prototype = {
    toString$0: function(_) {
      return "SelectionChangedCause.keyboard";
    }
  };
  U._getParent__parent_set.prototype = {
    call$1: function(t1) {
      var t2 = this._box_0;
      if (t2._parent0 == null)
        return t2._parent0 = t1;
      else
        throw H.wrapException(H.LateError$localAI("parent"));
    },
    $signature: 228
  };
  U._getParent__parent_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._parent0;
      return t1 == null ? H.throwExpression(H.LateError$localNI("parent")) : t1;
    },
    $signature: 229
  };
  U._getParent_closure.prototype = {
    call$1: function(ancestor) {
      this._parent_set.call$1(ancestor);
      return false;
    },
    $signature: 39
  };
  U.Intent.prototype = {};
  U.Action.prototype = {
    isEnabled$1: function(_, intent) {
      return true;
    },
    consumesKey$1: function(intent) {
      return true;
    }
  };
  U.ContextAction.prototype = {};
  U.CallbackAction.prototype = {
    invoke$1: function(intent) {
      return this.onInvoke.call$1(intent);
    }
  };
  U.ActionDispatcher.prototype = {
    invokeAction$3: function(action, intent, context) {
      if (action instanceof U.ContextAction)
        return action.invoke$2(intent, context);
      else
        return action.invoke$1(intent);
    }
  };
  U.Actions.prototype = {
    createState$0: function() {
      return new U._ActionsState(P.LinkedHashSet_LinkedHashSet$_empty(type$.Action_Intent), new P.Object(), C._StateLifecycle_0);
    }
  };
  U.Actions__findDispatcher_closure.prototype = {
    call$1: function(element) {
      type$._ActionsMarker._as(element.get$widget());
      return false;
    },
    $signature: 87
  };
  U.Actions_maybeFind_closure.prototype = {
    call$1: function(element) {
      var _this = this,
        result = _this.T._eval$1("Action<0>?")._as(type$._ActionsMarker._as(element.get$widget()).actions.$index(0, _this.type));
      if (result != null) {
        _this.context.super$Element$dependOnInheritedElement(element, null);
        _this._box_0.action = result;
        return true;
      }
      return false;
    },
    $signature: 87
  };
  U._ActionsState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this._updateActionListeners$0();
    },
    _handleActionChanged$1: function(action) {
      this.setState$1(new U._ActionsState__handleActionChanged_closure(this));
    },
    _updateActionListeners$0: function() {
      var widgetActions, removedActions, addedActions, t2, t3, t4, _this = this,
        t1 = _this._widget.actions;
      t1 = t1.get$values(t1);
      widgetActions = P.LinkedHashSet_LinkedHashSet$of(t1, H._instanceType(t1)._eval$1("Iterable.E"));
      removedActions = _this.listenedActions.difference$1(widgetActions);
      t1 = _this.listenedActions;
      t1.toString;
      addedActions = widgetActions.difference$1(t1);
      for (t1 = removedActions.get$iterator(removedActions), t2 = _this.get$_handleActionChanged(); t1.moveNext$0();) {
        t3 = t1.get$current(t1)._actions$_listeners;
        t3._isDirty = true;
        t4 = t3.get$_observer_list$_set();
        if (t4._collection$_length > 0) {
          t4._collection$_strings = t4._collection$_nums = t4._collection$_rest = t4._elements = null;
          t4._collection$_length = 0;
        }
        C.JSArray_methods.remove$1(t3._observer_list$_list, t2);
      }
      for (t1 = addedActions.get$iterator(addedActions); t1.moveNext$0();) {
        t3 = t1.get$current(t1)._actions$_listeners;
        t3._isDirty = true;
        t3._observer_list$_list.push(t2);
      }
      _this.listenedActions = widgetActions;
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateActionListeners$0();
    },
    dispose$0: function(_) {
      var t1, t2, t3, t4, t5, _this = this;
      _this.super$State$dispose(0);
      for (t1 = _this.listenedActions, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = H._instanceType(t1)._precomputed1, t3 = _this.get$_handleActionChanged(); t1.moveNext$0();) {
        t4 = t2._as(t1._collection$_current)._actions$_listeners;
        t4._isDirty = true;
        t5 = t4.get$_observer_list$_set();
        if (t5._collection$_length > 0) {
          t5._collection$_strings = t5._collection$_nums = t5._collection$_rest = t5._elements = null;
          t5._collection$_length = 0;
        }
        C.JSArray_methods.remove$1(t4._observer_list$_list, t3);
      }
      _this.listenedActions = null;
    },
    build$1: function(_, context) {
      var t1 = this._widget;
      return new U._ActionsMarker(null, t1.actions, this.rebuildKey, t1.child, null);
    }
  };
  U._ActionsState__handleActionChanged_closure.prototype = {
    call$0: function() {
      this.$this.rebuildKey = new P.Object();
    },
    $signature: 0
  };
  U._ActionsMarker.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      var t1;
      if (this.rebuildKey === oldWidget.rebuildKey)
        t1 = !S.mapEquals(oldWidget.actions, this.actions);
      else
        t1 = true;
      return t1;
    }
  };
  U.DoNothingAction.prototype = {
    consumesKey$1: function(intent) {
      return this._consumesKey;
    },
    invoke$1: function(intent) {
    }
  };
  U.ActivateIntent.prototype = {};
  U.ButtonActivateIntent.prototype = {};
  U.DismissIntent.prototype = {};
  U.DismissAction.prototype = {};
  U.PrioritizedIntents.prototype = {};
  U.PrioritizedAction.prototype = {
    isEnabled$1: function(_, intent) {
      var t1, _i, candidateIntent, t2, candidateAction,
        $focus = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      if ($focus == null || $focus._context == null)
        return false;
      for (t1 = type$.Intent, _i = 0; _i < 2; ++_i) {
        candidateIntent = C.List_L3K[_i];
        t2 = $focus._context;
        t2.toString;
        candidateAction = U.Actions_maybeFind(t2, candidateIntent, t1);
        if (candidateAction != null && candidateAction.isEnabled$1(0, candidateIntent)) {
          this.__PrioritizedAction__selectedAction = candidateAction;
          this.__PrioritizedAction__selectedIntent = candidateIntent;
          return true;
        }
      }
      return false;
    },
    invoke$1: function(intent) {
      var t2,
        t1 = this.__PrioritizedAction__selectedAction;
      if (t1 == null)
        t1 = H.throwExpression(H.LateError$fieldNI("_selectedAction"));
      t2 = this.__PrioritizedAction__selectedIntent;
      t1.invoke$1(t2 == null ? H.throwExpression(H.LateError$fieldNI("_selectedIntent")) : t2);
    }
  };
  U._Action_Object_Diagnosticable.prototype = {};
  U._ActionDispatcher_Object_Diagnosticable.prototype = {};
  U._Intent_Object_Diagnosticable.prototype = {};
  S.WidgetsApp.prototype = {
    createState$0: function() {
      return new S._WidgetsAppState(C._StateLifecycle_0);
    }
  };
  S._WidgetsAppState.prototype = {
    get$_initialRouteName: function() {
      var t1, t2;
      $.WidgetsBinding__instance.toString;
      t1 = $.$get$window().platformDispatcher;
      if (t1.get$defaultRouteName() !== "/") {
        $.WidgetsBinding__instance.toString;
        t1 = t1.get$defaultRouteName();
      } else {
        this._widget.toString;
        t2 = $.WidgetsBinding__instance;
        t2.toString;
        t1 = t1.get$defaultRouteName();
      }
      return t1;
    },
    initState$0: function() {
      var _this = this;
      _this.super$State$initState();
      _this._updateRouting$0();
      $.WidgetsBinding__instance.toString;
      _this._app$_locale = _this._resolveLocales$2($.$get$window().platformDispatcher._configuration.locales, _this._widget.supportedLocales);
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(_this);
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._updateRouting$1$oldWidget(oldWidget);
    },
    dispose$0: function(_) {
      var t1;
      C.JSArray_methods.remove$1($.WidgetsBinding__instance.WidgetsBinding__observers, this);
      t1 = this._defaultRouteInformationProvider;
      if (t1 != null)
        t1.dispose$0(0);
      this.super$State$dispose(0);
    },
    _updateRouting$1$oldWidget: function(oldWidget) {
      var t1, _this = this;
      _this._widget.toString;
      if (_this.get$_usesNavigator()) {
        t1 = _this._defaultRouteInformationProvider;
        if (t1 != null)
          t1.dispose$0(0);
        _this._defaultRouteInformationProvider = null;
        if (oldWidget != null) {
          _this._widget.toString;
          t1 = false;
        } else
          t1 = true;
        if (t1) {
          _this._widget.toString;
          _this._navigator = new N.GlobalObjectKey(_this, type$.GlobalObjectKey_NavigatorState);
        }
      } else {
        _this._navigator = null;
        t1 = _this._defaultRouteInformationProvider;
        if (t1 != null)
          t1.dispose$0(0);
        _this._defaultRouteInformationProvider = null;
      }
    },
    _updateRouting$0: function() {
      return this._updateRouting$1$oldWidget(null);
    },
    get$_usesNavigator: function() {
      var t1 = this._widget;
      t1 = t1.routes;
      if ((t1 == null ? null : t1.get$isNotEmpty(t1)) !== true) {
        this._widget.toString;
        t1 = false;
      } else
        t1 = true;
      return t1;
    },
    _onGenerateRoute$1: function(settings) {
      var t1,
        $name = settings.name;
      if ($name === "/")
        this._widget.toString;
      t1 = this._widget;
      this._widget.toString;
      return null;
    },
    _onUnknownRoute$1: function(settings) {
      return this._widget.onUnknownRoute.call$1(settings);
    },
    didPopRoute$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, $navigator;
      var $async$didPopRoute$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              t1 = $async$self._navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $navigator.maybePop$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$didPopRoute$0, $async$completer);
    },
    didPushRoute$1: function(route) {
      return this.didPushRoute$body$_WidgetsAppState(route);
    },
    didPushRoute$body$_WidgetsAppState: function(route) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, $navigator;
      var $async$didPushRoute$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              t1 = $async$self._navigator;
              $navigator = t1 == null ? null : t1.get$currentState();
              if ($navigator == null) {
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $navigator._routeNamed$1$2$arguments(route, null, type$.nullable_Object);
              t1.toString;
              t1 = K._RouteEntry$(t1, C._RouteLifecycle_3, null);
              $navigator._history.push(t1);
              $navigator._flushHistoryUpdates$0();
              $navigator._afterNavigation$1(t1.route);
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$didPushRoute$1, $async$completer);
    },
    _resolveLocales$2: function(preferredLocales, supportedLocales) {
      this._widget.toString;
      return S._WidgetsAppState_basicLocaleListResolution(preferredLocales, supportedLocales);
    },
    didChangeLocales$1: function(locales) {
      var _this = this,
        newLocale = _this._resolveLocales$2(locales, _this._widget.supportedLocales);
      if (!newLocale.$eq(0, _this._app$_locale))
        _this.setState$1(new S._WidgetsAppState_didChangeLocales_closure(_this, newLocale));
    },
    get$_app$_localizationsDelegates: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$get$_app$_localizationsDelegates($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return P._IterationMarker_yieldStar($async$self._widget.localizationsDelegates);
              case 2:
                // after yield
                $async$goto = 3;
                return C.C__WidgetsLocalizationsDelegate;
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.LocalizationsDelegate_dynamic);
    },
    build$1: function(_, context) {
      var t2, t3, t4, result, performanceOverlay, t5, appLocale, t6, t7, t8, _this = this, _null = null, t1 = {};
      t1.routing = null;
      _this._widget.toString;
      if (_this.get$_usesNavigator()) {
        t2 = _this._navigator;
        t3 = _this.get$_initialRouteName();
        t4 = _this._widget;
        t4 = t4.navigatorObservers;
        t4.toString;
        t1.routing = new K.Navigator(t3, _this.get$_onGenerateRoute(), _this.get$_onUnknownRoute(), t4, "nav", K.navigator_Navigator_defaultGenerateInitialRoutes$closure(), true, t2);
      }
      t1.result = null;
      t2 = _this._widget;
      t2.toString;
      result = new T.Builder(new S._WidgetsAppState_build_closure(t1, _this), _null);
      t1.result = result;
      result = t1.result = L.DefaultTextStyle$(result, _null, C.TextOverflow_0, true, t2.textStyle, _null, _null, C.TextWidthBasis_0);
      t2 = $.WidgetsApp_showPerformanceOverlayOverride;
      if (t2)
        performanceOverlay = new L.PerformanceOverlay(15, false, false, _null);
      else
        performanceOverlay = _null;
      t1 = performanceOverlay != null ? t1.result = T.Stack$(H.setRuntimeTypeInfo([result, T.Positioned$(_null, performanceOverlay, _null, _null, 0, 0, 0, _null)], type$.JSArray_Widget), C.StackFit_0) : result;
      t2 = _this._widget;
      t3 = t2.title;
      t4 = t2.color;
      t5 = _this._app$_locale;
      t5.toString;
      appLocale = t5;
      t2 = t2.restorationScopeId;
      t5 = S.WidgetsApp_defaultShortcuts();
      t6 = $.$get$WidgetsApp_defaultActions();
      t7 = _this.get$_app$_localizationsDelegates();
      t7 = P.List_List$of(t7, true, t7.$ti._eval$1("Iterable.E"));
      t8 = $.$get$DefaultTextEditingActions__shortcutsActions();
      return new K.RootRestorationScope(new X.Shortcuts(t5, new E.DefaultTextEditingShortcuts(E.DefaultTextEditingShortcuts__shortcuts(), new U.Actions(t6, new E.DefaultTextEditingActions(t8, new U.FocusTraversalGroup(new U.ReadingOrderTraversalPolicy(P.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData)), new S._MediaQueryFromWindow(new L.Localizations(appLocale, t7, new U.Title(t3, t4, t1, _null), _null), _null), _null), _null), _null), "<Default Text Editing Shortcuts>", _null), "<Default WidgetsApp Shortcuts>", _null), t2, _null);
    }
  };
  S._WidgetsAppState_didChangeLocales_closure.prototype = {
    call$0: function() {
      this.$this._app$_locale = this.newLocale;
    },
    $signature: 0
  };
  S._WidgetsAppState_build_closure.prototype = {
    call$1: function(context) {
      return this.$this._widget.builder.call$2(context, this._box_0.routing);
    },
    $signature: 29
  };
  S._MediaQueryFromWindow.prototype = {
    createState$0: function() {
      return new S._MediaQueryFromWindowsState(C._StateLifecycle_0);
    }
  };
  S._MediaQueryFromWindowsState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(this);
    },
    didChangeMetrics$0: function() {
      this.setState$1(new S._MediaQueryFromWindowsState_didChangeMetrics_closure());
    },
    didChangePlatformBrightness$0: function() {
      this.setState$1(new S._MediaQueryFromWindowsState_didChangePlatformBrightness_closure());
    },
    build$1: function(_, context) {
      var t1, t2, t3, t4, t5, t6, t7, t8, data;
      $.WidgetsBinding__instance.toString;
      t1 = $.$get$window();
      t2 = t1.get$physicalSize();
      t3 = t1._debugDevicePixelRatio;
      t2 = t2.$div(0, t3 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t3);
      t3 = t1._debugDevicePixelRatio;
      if (t3 == null)
        t3 = H.EnginePlatformDispatcher_browserDevicePixelRatio();
      t4 = t1.platformDispatcher._configuration;
      t1.get$viewConfiguration();
      t5 = t1._debugDevicePixelRatio;
      t5 = V.EdgeInsets$fromWindowPadding(C.WindowPadding_0_0_0_0, t5 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t5);
      t1.get$viewConfiguration();
      t6 = t1._debugDevicePixelRatio;
      t6 = V.EdgeInsets$fromWindowPadding(C.WindowPadding_0_0_0_0, t6 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t6);
      t7 = t1._viewInsets;
      t8 = t1._debugDevicePixelRatio;
      t7 = V.EdgeInsets$fromWindowPadding(t7, t8 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t8);
      t1.get$viewConfiguration();
      t1 = t1._debugDevicePixelRatio;
      t1 = V.EdgeInsets$fromWindowPadding(C.WindowPadding_0_0_0_0, t1 == null ? H.EnginePlatformDispatcher_browserDevicePixelRatio() : t1);
      data = new F.MediaQueryData(t2, t3, t4.textScaleFactor, t4.platformBrightness, t7, t5, t6, t1, false, false, false, false, false, false, C.NavigationMode_0);
      return new F.MediaQuery(data, this._widget.child, null);
    },
    dispose$0: function(_) {
      C.JSArray_methods.remove$1($.WidgetsBinding__instance.WidgetsBinding__observers, this);
      this.super$State$dispose(0);
    }
  };
  S._MediaQueryFromWindowsState_didChangeMetrics_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  S._MediaQueryFromWindowsState_didChangePlatformBrightness_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  S.__MediaQueryFromWindowsState_State_WidgetsBindingObserver.prototype = {};
  S.__WidgetsAppState_State_WidgetsBindingObserver.prototype = {};
  L.KeepAliveNotification.prototype = {};
  L.KeepAliveHandle.prototype = {};
  L.AutomaticKeepAliveClientMixin.prototype = {
    _ensureKeepAlive$0: function() {
      this.AutomaticKeepAliveClientMixin__keepAliveHandle = new L.KeepAliveHandle(new P.LinkedList(type$.LinkedList__ListenerEntry));
      this._framework$_element.visitAncestorElements$1(new L.KeepAliveNotification().get$visitAncestor());
    },
    updateKeepAlive$0: function() {
      var t1, _this = this;
      if (_this.get$wantKeepAlive()) {
        if (_this.AutomaticKeepAliveClientMixin__keepAliveHandle == null)
          _this._ensureKeepAlive$0();
      } else {
        t1 = _this.AutomaticKeepAliveClientMixin__keepAliveHandle;
        if (t1 != null) {
          t1.notifyListeners$0();
          _this.AutomaticKeepAliveClientMixin__keepAliveHandle = null;
        }
      }
    },
    build$1: function(_, context) {
      if (this.get$wantKeepAlive() && this.AutomaticKeepAliveClientMixin__keepAliveHandle == null)
        this._ensureKeepAlive$0();
      return C._NullWidget_null;
    }
  };
  L._NullWidget0.prototype = {
    build$1: function(_, context) {
      throw H.wrapException(U.FlutterError_FlutterError("Widgets that mix AutomaticKeepAliveClientMixin into their State must call super.build() but must ignore the return value of the superclass."));
    }
  };
  T.Directionality.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return this.textDirection !== oldWidget.textDirection;
    }
  };
  T.Opacity.prototype = {
    createRenderObject$1: function(context) {
      var t2,
        t1 = this.opacity;
      t1 = new E.RenderOpacity(C.JSNumber_methods.round$0(C.JSNumber_methods.clamp$2(t1, 0, 1) * 255), t1, false, null);
      t1.get$isRepaintBoundary();
      t2 = t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = t2;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$opacity(0, this.opacity);
      renderObject.set$alwaysIncludeSemantics(false);
    }
  };
  T.CustomPaint.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new V.RenderCustomPaint(this.painter, this.foregroundPainter, C.Size_0_0, false, false, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$painter(this.painter);
      renderObject.set$foregroundPainter(this.foregroundPainter);
      renderObject.set$preferredSize(C.Size_0_0);
      renderObject.willChange = renderObject.isComplex = false;
    },
    didUnmountRenderObject$1: function(renderObject) {
      renderObject.set$painter(null);
      renderObject.set$foregroundPainter(null);
    }
  };
  T.ClipPath.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderClipPath(this.clipper, this.clipBehavior, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$clipper(this.clipper);
      renderObject.set$clipBehavior(this.clipBehavior);
    },
    didUnmountRenderObject$1: function(renderObject) {
      renderObject.set$clipper(null);
    }
  };
  T.PhysicalModel.prototype = {
    createRenderObject$1: function(context) {
      var _this = this,
        t1 = new E.RenderPhysicalModel(_this.shape, _this.borderRadius, _this.elevation, _this.shadowColor, _this.color, null, _this.clipBehavior, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = true;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var _this = this;
      renderObject.set$shape(0, _this.shape);
      renderObject.set$clipBehavior(_this.clipBehavior);
      renderObject.set$borderRadius(0, _this.borderRadius);
      renderObject.set$elevation(0, _this.elevation);
      renderObject.set$color(0, _this.color);
      renderObject.set$shadowColor(0, _this.shadowColor);
    }
  };
  T.PhysicalShape.prototype = {
    createRenderObject$1: function(context) {
      var _this = this,
        t1 = new E.RenderPhysicalShape(_this.elevation, _this.shadowColor, _this.color, _this.clipper, _this.clipBehavior, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = true;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var _this = this;
      renderObject.set$clipper(_this.clipper);
      renderObject.set$clipBehavior(_this.clipBehavior);
      renderObject.set$elevation(0, _this.elevation);
      renderObject.set$color(0, _this.color);
      renderObject.set$shadowColor(0, _this.shadowColor);
    }
  };
  T.FractionalTranslation.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderFractionalTranslation(this.translation, this.transformHitTests, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$translation(this.translation);
      renderObject.transformHitTests = this.transformHitTests;
    }
  };
  T.Padding.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new T.RenderPadding(this.padding, T.Directionality_maybeOf(context), null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$padding(0, this.padding);
      renderObject.set$textDirection(0, T.Directionality_maybeOf(context));
    }
  };
  T.Align.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new T.RenderPositionedBox(this.widthFactor, this.heightFactor, this.alignment, T.Directionality_maybeOf(context), null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$alignment(this.alignment);
      renderObject.set$widthFactor(this.widthFactor);
      renderObject.set$heightFactor(this.heightFactor);
      renderObject.set$textDirection(0, T.Directionality_maybeOf(context));
    }
  };
  T.Center.prototype = {};
  T.SizedBox.prototype = {
    createRenderObject$1: function(context) {
      return E.RenderConstrainedBox$(S.BoxConstraints$tightFor(this.height, this.width));
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$additionalConstraints(S.BoxConstraints$tightFor(this.height, this.width));
    },
    toStringShort$0: function() {
      var type, _this = this,
        t1 = _this.width;
      if (t1 === 1 / 0 && _this.height === 1 / 0)
        type = "SizedBox.expand";
      else
        type = t1 === 0 && _this.height === 0 ? "SizedBox.shrink" : "SizedBox";
      t1 = _this.key;
      return t1 == null ? type : type + "-" + t1.toString$0(0);
    }
  };
  T.ConstrainedBox.prototype = {
    createRenderObject$1: function(context) {
      return E.RenderConstrainedBox$(this.constraints);
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$additionalConstraints(this.constraints);
    }
  };
  T.LimitedBox.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderLimitedBox(this.maxWidth, this.maxHeight, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$maxWidth(0, this.maxWidth);
      renderObject.set$maxHeight(0, this.maxHeight);
    }
  };
  T.Offstage.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderOffstage(this.offstage, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$offstage(this.offstage);
    },
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new T._OffstageElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
    }
  };
  T._OffstageElement.prototype = {
    get$widget: function() {
      return type$.Offstage._as(N.SingleChildRenderObjectElement.prototype.get$widget.call(this));
    }
  };
  T.Stack.prototype = {
    createRenderObject$1: function(context) {
      var t1 = T.Directionality_maybeOf(context);
      t1 = new K.RenderStack(C.AlignmentDirectional_m1_m1, t1, this.fit, C.Clip_1, 0, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1;
      renderObject.set$alignment(C.AlignmentDirectional_m1_m1);
      t1 = T.Directionality_maybeOf(context);
      renderObject.set$textDirection(0, t1);
      t1 = this.fit;
      if (renderObject._fit !== t1) {
        renderObject._fit = t1;
        renderObject.markNeedsLayout$0();
      }
      if (C.Clip_1 !== renderObject._stack$_clipBehavior) {
        renderObject._stack$_clipBehavior = C.Clip_1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    }
  };
  T.Positioned.prototype = {
    applyParentData$1: function(renderObject) {
      var t2, needsLayout, t3, targetParent, _this = this,
        t1 = renderObject.parentData;
      t1.toString;
      type$.StackParentData._as(t1);
      t2 = _this.left;
      if (t1.left != t2) {
        t1.left = t2;
        needsLayout = true;
      } else
        needsLayout = false;
      t2 = _this.top;
      if (t1.top != t2) {
        t1.top = t2;
        needsLayout = true;
      }
      t2 = _this.right;
      if (t1.right != t2) {
        t1.right = t2;
        needsLayout = true;
      }
      t2 = _this.bottom;
      if (t1.bottom != t2) {
        t1.bottom = t2;
        needsLayout = true;
      }
      t2 = _this.width;
      if (t1.width != t2) {
        t1.width = t2;
        needsLayout = true;
      }
      t2 = t1.height;
      t3 = _this.height;
      if (t2 == null ? t3 != null : t2 !== t3) {
        t1.height = t3;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject._node$_parent;
        if (targetParent instanceof K.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  T.PositionedDirectional.prototype = {
    build$1: function(_, context) {
      var right, left, _this = this, _null = null,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      right = _this.start;
      switch (t1.textDirection) {
        case C.TextDirection_0:
          left = _null;
          break;
        case C.TextDirection_1:
          left = right;
          right = _null;
          break;
        default:
          right = _null;
          left = right;
      }
      return T.Positioned$(_this.bottom, _this.child, _null, _null, left, right, _this.top, _this.width);
    }
  };
  T.RichText.prototype = {
    createRenderObject$1: function(context) {
      var t3, t4, t5, _this = this, _null = null,
        t1 = _this.text,
        t2 = _this.textDirection;
      if (t2 == null) {
        t2 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
        t2.toString;
        t2 = t2.textDirection;
      }
      t3 = _this.overflow;
      t4 = L.Localizations_maybeLocaleOf(context);
      t5 = t3 === C.TextOverflow_2 ? "\u2026" : _null;
      t3 = new Q.RenderParagraph(new U.TextPainter(t1, _this.textAlign, t2, _this.textScaleFactor, t5, t4, _this.maxLines, _this.strutStyle, _this.textWidthBasis, _this.textHeightBehavior), true, t3, 0, _null, _null);
      t3.get$isRepaintBoundary();
      t3.get$alwaysNeedsCompositing();
      t3.__RenderObject__needsCompositing = false;
      t3.addAll$1(0, _null);
      t3._extractPlaceholderSpans$1(t1);
      return t3;
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1, _this = this;
      renderObject.set$text(0, _this.text);
      renderObject.set$textAlign(0, _this.textAlign);
      t1 = _this.textDirection;
      if (t1 == null) {
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
        t1.toString;
        t1 = t1.textDirection;
      }
      renderObject.set$textDirection(0, t1);
      renderObject.set$softWrap(true);
      renderObject.set$overflow(0, _this.overflow);
      renderObject.set$textScaleFactor(_this.textScaleFactor);
      renderObject.set$maxLines(0, _this.maxLines);
      renderObject.set$strutStyle(0, _this.strutStyle);
      renderObject.set$textWidthBasis(_this.textWidthBasis);
      renderObject.set$textHeightBehavior(0, _this.textHeightBehavior);
      t1 = L.Localizations_maybeLocaleOf(context);
      renderObject.set$locale(0, t1);
    },
    text$0: function($receiver) {
      return this.text.call$0();
    }
  };
  T.RichText__extractChildren_closure.prototype = {
    call$1: function(span) {
      return true;
    },
    $signature: 57
  };
  T.Listener.prototype = {
    createRenderObject$1: function(context) {
      var _this = this, _null = null,
        t1 = new E.RenderPointerListener(_this.onPointerDown, _null, _this.onPointerUp, _null, _this.onPointerCancel, _null, _this.behavior, _null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(_null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var _this = this;
      renderObject.onPointerDown = _this.onPointerDown;
      renderObject.onPointerMove = null;
      renderObject.onPointerUp = _this.onPointerUp;
      renderObject.onPointerHover = null;
      renderObject.onPointerCancel = _this.onPointerCancel;
      renderObject.onPointerSignal = null;
      renderObject.behavior = _this.behavior;
    }
  };
  T.MouseRegion.prototype = {
    createState$0: function() {
      return new T._MouseRegionState(C._StateLifecycle_0);
    }
  };
  T._MouseRegionState.prototype = {
    handleExit$1: function($event) {
      var t1 = this._widget.onExit;
      if (t1 != null && this._framework$_element != null)
        t1.call$1($event);
    },
    getHandleExit$0: function() {
      return this._widget.onExit == null ? null : this.get$handleExit();
    },
    build$1: function(_, context) {
      return new T._RawMouseRegion(this, this._widget.child, null);
    }
  };
  T._RawMouseRegion.prototype = {
    createRenderObject$1: function(context) {
      var t1 = this.owner,
        t2 = t1._widget;
      t2.toString;
      t2 = new E.RenderMouseRegion(true, t2.onEnter, null, t1.getHandleExit$0(), t2.cursor, null);
      t2.get$isRepaintBoundary();
      t2.get$alwaysNeedsCompositing();
      t2.__RenderObject__needsCompositing = false;
      t2.set$child(null);
      return t2;
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1 = this.owner,
        t2 = t1._widget;
      t2.toString;
      renderObject.onEnter = t2.onEnter;
      renderObject.onHover = null;
      renderObject.onExit = t1.getHandleExit$0();
      t2 = t2.cursor;
      if (!renderObject._cursor.$eq(0, t2)) {
        renderObject._cursor = t2;
        renderObject.markNeedsPaint$0();
      }
    }
  };
  T.RepaintBoundary.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderRepaintBoundary(null);
      t1.get$isRepaintBoundary();
      t1.__RenderObject__needsCompositing = true;
      t1.set$child(null);
      return t1;
    }
  };
  T.IgnorePointer.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderIgnorePointer(this.ignoring, this.ignoringSemantics, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$ignoring(this.ignoring);
      renderObject.set$ignoringSemantics(this.ignoringSemantics);
    }
  };
  T.AbsorbPointer.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderAbsorbPointer(false, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$absorbing(false);
      renderObject.set$ignoringSemantics(null);
    }
  };
  T.Semantics.prototype = {
    createRenderObject$1: function(context) {
      var _this = this, _null = null,
        t1 = _this.properties;
      t1 = new E.RenderSemanticsAnnotations(_this.container, _this.explicitChildNodes, false, t1.checked, t1.enabled, t1.selected, t1.button, t1.slider, t1.keyboardKey, t1.link, t1.header, t1.textField, t1.readOnly, t1.focusable, t1.focused, t1.inMutuallyExclusiveGroup, t1.obscured, t1.multiline, t1.scopesRoute, t1.namesRoute, t1.hidden, t1.image, t1.liveRegion, t1.maxValueLength, t1.currentValueLength, t1.toggled, t1.label, t1.value, t1.increasedValue, t1.decreasedValue, t1.hint, t1.hintOverrides, _this._getTextDirection$1(context), t1.sortKey, t1.tagForChildren, t1.onTap, t1.onDismiss, t1.onLongPress, t1.onScrollLeft, t1.onScrollRight, t1.onScrollUp, t1.onScrollDown, t1.onIncrease, t1.onDecrease, t1.onCopy, t1.onCut, t1.onPaste, t1.onMoveCursorForwardByCharacter, t1.onMoveCursorBackwardByCharacter, _null, _null, t1.onSetSelection, t1.onSetText, t1.onDidGainAccessibilityFocus, t1.onDidLoseAccessibilityFocus, t1.customSemanticsActions, _null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(_null);
      return t1;
    },
    _getTextDirection$1: function(context) {
      var t1 = this.properties.textDirection;
      if (t1 != null)
        return t1;
      return null;
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1, t2, _this = this;
      renderObject.set$container(_this.container);
      renderObject.set$explicitChildNodes(_this.explicitChildNodes);
      renderObject.set$excludeSemantics(false);
      t1 = _this.properties;
      renderObject.set$scopesRoute(t1.scopesRoute);
      renderObject.set$enabled(0, t1.enabled);
      renderObject.set$checked(0, t1.checked);
      renderObject.set$toggled(t1.toggled);
      renderObject.set$selected(0, t1.selected);
      renderObject.set$button(0, t1.button);
      renderObject.set$slider(t1.slider);
      renderObject.set$keyboardKey(t1.keyboardKey);
      renderObject.set$link(t1.link);
      renderObject.set$header(t1.header);
      renderObject.set$textField(t1.textField);
      renderObject.set$readOnly(0, t1.readOnly);
      renderObject.set$focusable(t1.focusable);
      renderObject.set$focused(0, t1.focused);
      renderObject.set$inMutuallyExclusiveGroup(t1.inMutuallyExclusiveGroup);
      renderObject.set$obscured(t1.obscured);
      renderObject.set$multiline(0, t1.multiline);
      renderObject.set$hidden(0, t1.hidden);
      renderObject.set$image(0, t1.image);
      renderObject.set$liveRegion(t1.liveRegion);
      renderObject.set$maxValueLength(t1.maxValueLength);
      renderObject.set$currentValueLength(t1.currentValueLength);
      renderObject.set$label(0, t1.label);
      renderObject.set$value(0, t1.value);
      renderObject.set$increasedValue(t1.increasedValue);
      renderObject.set$decreasedValue(t1.decreasedValue);
      renderObject.set$hint(0, t1.hint);
      renderObject.set$hintOverrides(t1.hintOverrides);
      renderObject.set$namesRoute(t1.namesRoute);
      renderObject.set$textDirection(0, _this._getTextDirection$1(context));
      renderObject.set$sortKey(t1.sortKey);
      renderObject.set$tagForChildren(t1.tagForChildren);
      renderObject.set$onTap(t1.onTap);
      renderObject.set$onLongPress(t1.onLongPress);
      renderObject.set$onScrollLeft(t1.onScrollLeft);
      renderObject.set$onScrollRight(t1.onScrollRight);
      renderObject.set$onScrollUp(t1.onScrollUp);
      renderObject.set$onScrollDown(t1.onScrollDown);
      renderObject.set$onIncrease(t1.onIncrease);
      renderObject.set$onDismiss(t1.onDismiss);
      renderObject.set$onDecrease(t1.onDecrease);
      renderObject.set$onCopy(0, t1.onCopy);
      renderObject.set$onCut(0, t1.onCut);
      renderObject.set$onPaste(0, t1.onPaste);
      t2 = t1.onMoveCursorForwardByCharacter;
      renderObject.set$onMoveCursorForwardByCharacter(t2);
      renderObject.set$onMoveCursorBackwardByCharacter(t2);
      renderObject.set$onMoveCursorForwardByWord(null);
      renderObject.set$onMoveCursorBackwardByWord(null);
      renderObject.set$onSetSelection(t1.onSetSelection);
      renderObject.set$onSetText(t1.onSetText);
      renderObject.set$onDidGainAccessibilityFocus(t1.onDidGainAccessibilityFocus);
      renderObject.set$onDidLoseAccessibilityFocus(t1.onDidLoseAccessibilityFocus);
      renderObject.set$customSemanticsActions(t1.customSemanticsActions);
    }
  };
  T.MergeSemantics.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderMergeSemantics(null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    }
  };
  T.BlockSemantics.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderBlockSemantics(true, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$blocking(true);
    }
  };
  T.ExcludeSemantics.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderExcludeSemantics(this.excluding, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$excluding(this.excluding);
    }
  };
  T.KeyedSubtree.prototype = {
    build$1: function(_, context) {
      return this.child;
    }
  };
  T.Builder.prototype = {
    build$1: function(_, context) {
      return this.builder.call$1(context);
    }
  };
  T.ColoredBox.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new T._RenderColoredBox(this.color, C.HitTestBehavior_1, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$color(0, this.color);
    }
  };
  T._RenderColoredBox.prototype = {
    set$color: function(_, value) {
      if (value.$eq(0, this._basic$_color))
        return;
      this._basic$_color = value;
      this.markNeedsPaint$0();
    },
    paint$2: function(context, offset) {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this._size;
      if (t1._dx > 0 && t1._dy > 0) {
        t1 = context.get$canvas(context);
        t2 = _this._size;
        t3 = offset._dx;
        t4 = offset._dy;
        t5 = t2._dx;
        t2 = t2._dy;
        t6 = H._detectRenderer();
        t6 = t6 ? H.CkPaint$() : new H.SurfacePaint(new H.SurfacePaintData());
        t6.set$color(0, _this._basic$_color);
        t1.drawRect$2(0, new P.Rect(t3, t4, t3 + t5, t4 + t2), t6);
      }
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure.prototype = {
    call$1: function(parameters) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1(parameters);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1: function(parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_Object),
        $async$returnValue, data, result, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.RendererBinding__instance;
              if (t1 == null)
                data = null;
              else {
                t1 = t1.get$_pipelineOwner()._rootNode;
                t1.toString;
                result = t1.super$DiagnosticableTreeMixin$toStringDeep(C.DiagnosticLevel_2, "", "");
                data = result;
              }
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["data", data == null ? "Render tree unavailable." : data], type$.String, type$.Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 40
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0.prototype = {
    call$1: function(parameters) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0(parameters);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0: function(parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_Object),
        $async$returnValue, data, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.RendererBinding__instance;
              if (t1 == null)
                data = null;
              else {
                t1 = t1.get$_pipelineOwner()._rootNode.get$debugSemantics();
                t1 = t1 == null ? null : t1.toStringDeep$1$childOrder(C.DebugSemanticsDumpOrder_1);
                data = t1;
              }
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["data", data == null ? "Semantics not collected." : data], type$.String, type$.Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 40
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1.prototype = {
    call$1: function(parameters) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure(parameters);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure: function(parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_Object),
        $async$returnValue, data, t1;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.RendererBinding__instance;
              if (t1 == null)
                data = null;
              else {
                t1 = t1.get$_pipelineOwner()._rootNode.get$debugSemantics();
                t1 = t1 == null ? null : t1.toStringDeep$1$childOrder(C.DebugSemanticsDumpOrder_0);
                data = t1;
              }
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["data", data == null ? "Semantics not collected." : data], type$.String, type$.Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 40
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure.prototype = {
    call$0: function() {
      var t2, result,
        t1 = this.hitTestResult;
      if (t1 == null) {
        t1 = this.$this.get$_pipelineOwner()._rootNode;
        t1.toString;
        t2 = this.event;
        t2 = t2.get$position(t2);
        result = S.BoxHitTestResult$();
        t1.hitTest$2$position(result, t2);
        t1 = result;
      }
      return t1;
    },
    $signature: 237
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure.prototype = {
    call$1: function(timings) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      for (t1 = J.get$iterator$ax(timings), t2 = this._box_0, t3 = type$.String, t4 = type$.dynamic; t1.moveNext$0();) {
        t5 = t1.get$current(t1);
        t6 = ++t2.frameNumber;
        t5 = t5._timestamps;
        t7 = t5[1];
        t8 = t5[4];
        t9 = t5[0];
        t9 = P.LinkedHashMap_LinkedHashMap$_literal(["number", t6, "startTime", t7, "elapsed", t8 - t9, "build", t5[2] - t7, "raster", t8 - t5[3], "vsyncOverhead", t7 - t9], t3, t4);
        C.C_JsonCodec.encode$1(t9);
      }
    },
    $signature: 47
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.double),
        $async$returnValue;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $._timeDilation;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 238
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0.prototype = {
    call$1: function(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              N.timeDilation(value);
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 239
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure.prototype = {
    call$1: function(message) {
      return this.$this.handleSystemMessage$1(type$.Object._as(message));
    },
    $signature: 240
  };
  N.WidgetsBindingObserver.prototype = {
    didPopRoute$0: function() {
      return P.Future_Future$value(false, type$.bool);
    },
    didPushRoute$1: function(route) {
      return P.Future_Future$value(false, type$.bool);
    },
    didPushRouteInformation$1: function(routeInformation) {
      return this.didPushRoute$1(routeInformation.location);
    },
    didChangeMetrics$0: function() {
    },
    didChangePlatformBrightness$0: function() {
    },
    didChangeLocales$1: function(locales) {
    }
  };
  N.WidgetsBinding.prototype = {
    handleLocaleChanged$0: function() {
      this.dispatchLocalesChanged$1($.$get$window().platformDispatcher._configuration.locales);
    },
    dispatchLocalesChanged$1: function(locales) {
      var t1, t2, _i;
      for (t1 = this.WidgetsBinding__observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].didChangeLocales$1(locales);
    },
    handlePopRoute$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$handlePopRoute$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = P.List_List$from($async$self.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t1[_i].didPopRoute$0(), $async$handlePopRoute$0);
            case 6:
              // returning from await.
              if ($async$result) {
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              M.SystemNavigator_pop();
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handlePopRoute$0, $async$completer);
    },
    handlePushRoute$1: function(route) {
      return this.handlePushRoute$body$WidgetsBinding(route);
    },
    handlePushRoute$body$WidgetsBinding: function(route) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$handlePushRoute$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = P.List_List$from($async$self.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t1[_i].didPushRoute$1(route), $async$handlePushRoute$1);
            case 6:
              // returning from await.
              if ($async$result) {
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handlePushRoute$1, $async$completer);
    },
    _handlePushRouteInformation$1: function(routeArguments) {
      return this._handlePushRouteInformation$body$WidgetsBinding(routeArguments);
    },
    _handlePushRouteInformation$body$WidgetsBinding: function(routeArguments) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, t3, _i;
      var $async$_handlePushRouteInformation$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = P.List_List$from($async$self.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, t3 = J.getInterceptor$asx(routeArguments), _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return P._asyncAwait(t1[_i].didPushRouteInformation$1(new Z.RouteInformation(H._asString(t3.$index(routeArguments, "location")), t3.$index(routeArguments, "state"))), $async$_handlePushRouteInformation$1);
            case 6:
              // returning from await.
              if ($async$result) {
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$_handlePushRouteInformation$1, $async$completer);
    },
    _handleNavigationInvocation$1: function(methodCall) {
      switch (methodCall.method) {
        case "popRoute":
          return this.handlePopRoute$0();
        case "pushRoute":
          return this.handlePushRoute$1(H._asString(methodCall.$arguments));
        case "pushRouteInformation":
          return this._handlePushRouteInformation$1(type$.Map_dynamic_dynamic._as(methodCall.$arguments));
      }
      return P.Future_Future$value(null, type$.dynamic);
    },
    _handleBuildScheduled$0: function() {
      this.ensureVisualUpdate$0();
    },
    scheduleAttachRootWidget$1: function(rootWidget) {
      P.Timer_Timer(C.Duration_0, new N.WidgetsBinding_scheduleAttachRootWidget_closure(this, rootWidget));
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure.prototype = {
    call$1: function(parameters) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3(parameters);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3: function(parameters) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_Object),
        $async$returnValue, t1, t2;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = "" + (J.get$runtimeType$($.WidgetsBinding__instance).toString$0(0) + " - PROFILE MODE\n");
              t2 = $.WidgetsBinding__instance.WidgetsBinding__renderViewElement;
              if (t2 != null) {
                t2.toDiagnosticsNode$0();
                t1 += "\n";
              } else
                t1 += "<no tree currently mounted>\n";
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["data", t1.charCodeAt(0) == 0 ? t1 : t1], type$.String, type$.Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 40
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0.prototype = {
    call$1: function(_) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(_);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2: function(_) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$self.$this.WidgetsBinding__needToReportFirstFrame ? "false" : "true"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 34
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1.prototype = {
    call$1: function(_) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(_);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1: function(_) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$self.$this.WidgetsBinding__firstFrameCompleter.future._state !== 0 ? "true" : "false"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 34
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2.prototype = {
    call$1: function(params) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(params);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0: function(params) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.Map_String_String),
        $async$returnValue, $async$self = this, className, t1, t2;
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              className = H._asStringQ(J.$index$asx(params, "className"));
              t1 = $async$self.$this;
              t2 = t1.WidgetsBinding__renderViewElement;
              if (t2 != null)
                new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty(className).call$1(t2);
              $async$goto = 3;
              return P._asyncAwait(t1.get$endOfFrame(), $async$call$1);
            case 3:
              // returning from await.
              t1 = type$.String;
              $async$returnValue = P.LinkedHashMap_LinkedHashMap$_literal(["type", "Success"], t1, t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 242
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty.prototype = {
    call$1: function(element) {
      if (H._rtiToString(H.getRuntimeType(element.get$widget())._rti, null) === this.className)
        element.markNeedsBuild$0();
      element.visitChildren$1(this);
    },
    $signature: 4
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3.prototype = {
    call$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue;
      var $async$call$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.debugProfileBuildsEnabled;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 244
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4.prototype = {
    call$1: function(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure: function(value) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.debugProfileBuildsEnabled !== value)
                $.debugProfileBuildsEnabled = value;
              // implicit return
              return P._asyncReturn(null, $async$completer);
          }
      });
      return P._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 245
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure.prototype = {
    call$1: function(timings) {
      var t1, t2, t3;
      P.Timeline_instantSync("Rasterized first useful frame", null);
      P.postEvent("Flutter.FirstFrame", P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic));
      t1 = $.SchedulerBinding__instance;
      t1.toString;
      t2 = this._box_0;
      t3 = t2.firstFrameCallback;
      t3.toString;
      t1.removeTimingsCallback$1(t3);
      t2.firstFrameCallback = null;
      this.$this.WidgetsBinding__firstFrameCompleter.complete$0(0);
    },
    $signature: 47
  };
  N.WidgetsBinding_scheduleAttachRootWidget_closure.prototype = {
    call$0: function() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.WidgetsBinding__renderViewElement;
      t1.WidgetsBinding__readyToProduceFrames = true;
      t3 = t1.get$_pipelineOwner()._rootNode;
      t3.toString;
      t4 = t1.WidgetsBinding__buildOwner;
      t4.toString;
      t1.WidgetsBinding__renderViewElement = new N.RenderObjectToWidgetAdapter(this.rootWidget, t3, "[root]", new N.GlobalObjectKey(t3, type$.GlobalObjectKey_State_StatefulWidget), type$.RenderObjectToWidgetAdapter_RenderBox).attachToRenderTree$2(t4, type$.nullable_RenderObjectToWidgetElement_RenderBox._as(t1.WidgetsBinding__renderViewElement));
      if (t2 == null)
        $.SchedulerBinding__instance.ensureVisualUpdate$0();
    },
    $signature: 0
  };
  N.RenderObjectToWidgetAdapter.prototype = {
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.RenderObjectToWidgetElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2), this.$ti._eval$1("RenderObjectToWidgetElement<1>"));
    },
    createRenderObject$1: function(context) {
      return this.container;
    },
    updateRenderObject$2: function(context, renderObject) {
    },
    attachToRenderTree$2: function(owner, element) {
      var t2, t1 = {};
      t1.element = element;
      if (element == null) {
        owner.lockState$1(new N.RenderObjectToWidgetAdapter_attachToRenderTree_closure(t1, this, owner));
        t2 = t1.element;
        t2.toString;
        owner.buildScope$2(t2, new N.RenderObjectToWidgetAdapter_attachToRenderTree_closure0(t1));
      } else {
        element._newWidget = this;
        element.markNeedsBuild$0();
      }
      t1 = t1.element;
      t1.toString;
      return t1;
    },
    toStringShort$0: function() {
      return this.debugShortDescription;
    }
  };
  N.RenderObjectToWidgetAdapter_attachToRenderTree_closure.prototype = {
    call$0: function() {
      var t1 = this.$this,
        element = N.RenderObjectToWidgetElement$(t1, t1.$ti._precomputed1);
      this._box_0.element = element;
      element._owner = this.owner;
    },
    $signature: 0
  };
  N.RenderObjectToWidgetAdapter_attachToRenderTree_closure0.prototype = {
    call$0: function() {
      var t1 = this._box_0.element;
      t1.toString;
      t1.super$RootRenderObjectElement$mount(null, null);
      t1._rebuild$0();
    },
    $signature: 0
  };
  N.RenderObjectToWidgetElement.prototype = {
    get$widget: function() {
      return this.$ti._eval$1("RenderObjectToWidgetAdapter<1>")._as(N.RenderObjectElement.prototype.get$widget.call(this));
    },
    visitChildren$1: function(visitor) {
      var t1 = this._child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1: function(child) {
      this._child = null;
      this.super$Element$forgetChild(child);
    },
    mount$2: function($parent, newSlot) {
      this.super$RootRenderObjectElement$mount($parent, newSlot);
      this._rebuild$0();
    },
    update$1: function(_, newWidget) {
      this.super$RenderObjectElement$update(0, newWidget);
      this._rebuild$0();
    },
    performRebuild$0: function() {
      var _this = this,
        t1 = _this._newWidget;
      if (t1 != null) {
        _this._newWidget = null;
        _this.super$RenderObjectElement$update(0, _this.$ti._eval$1("RenderObjectToWidgetAdapter<1>")._as(t1));
        _this._rebuild$0();
      }
      _this.super$RenderObjectElement$performRebuild();
    },
    _rebuild$0: function() {
      var exception, stack, details, error, exception0, t1, _this = this;
      try {
        _this._child = _this.updateChild$3(_this._child, _this.$ti._eval$1("RenderObjectToWidgetAdapter<1>")._as(N.RenderObjectElement.prototype.get$widget.call(_this)).child, C.C_Object);
      } catch (exception0) {
        exception = H.unwrapException(exception0);
        stack = H.getTraceFromException(exception0);
        t1 = U.ErrorDescription$("attaching to the render tree");
        details = new U.FlutterErrorDetails(exception, stack, "widgets library", t1, null, false);
        U.FlutterError_reportError(details);
        error = N.ErrorWidget__defaultErrorWidgetBuilder(details);
        _this._child = _this.updateChild$3(null, error, C.C_Object);
      }
    },
    get$renderObject: function() {
      return this.$ti._eval$1("RenderObjectWithChildMixin<1>")._as(N.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    insertRenderObjectChild$2: function(child, slot) {
      var t1 = this.$ti;
      t1._eval$1("RenderObjectWithChildMixin<1>")._as(N.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(t1._precomputed1._as(child));
    },
    moveRenderObjectChild$3: function(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2: function(child, slot) {
      this.$ti._eval$1("RenderObjectWithChildMixin<1>")._as(N.RenderObjectElement.prototype.get$renderObject.call(this)).set$child(null);
    }
  };
  N.WidgetsFlutterBinding.prototype = {$isHitTestTarget: 1};
  N._WidgetsFlutterBinding_BindingBase_GestureBinding.prototype = {
    initInstances$0: function() {
      this.super$BindingBase$initInstances();
      $.GestureBinding__instance = this;
      var t1 = $.$get$window().platformDispatcher;
      t1._onPointerDataPacket = this.get$_handlePointerDataPacket();
      t1._onPointerDataPacketZone = $.Zone__current;
    },
    unlocked$0: function() {
      this.super$BindingBase$unlocked();
      this._flushPointerEventQueue$0();
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding.prototype = {
    initInstances$0: function() {
      var _this = this, t1 = {};
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$initInstances();
      $.SchedulerBinding__instance = _this;
      t1.frameNumber = 0;
      _this.addTimingsCallback$1(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure(t1, _this));
    },
    initServiceExtensions$0: function() {
      this.super$BindingBase$initServiceExtensions();
      this.registerNumericServiceExtension$3$getter$name$setter(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure(), "timeDilation", new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0());
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype = {
    initInstances$0: function() {
      var t1, t2, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances();
      $.ServicesBinding__instance = _this;
      _this.ServicesBinding___ServicesBinding__defaultBinaryMessenger = C.C__DefaultBinaryMessenger;
      t1 = new K.RestorationManager(P.LinkedHashSet_LinkedHashSet$_empty(type$.RestorationBucket), new P.LinkedList(type$.LinkedList__ListenerEntry));
      C.OptionalMethodChannel_fgL.setMethodCallHandler$1(t1.get$_methodHandler());
      _this.ServicesBinding___ServicesBinding__restorationManager = t1;
      t1 = $.$get$window();
      t2 = _this.get$_defaultBinaryMessenger();
      t1 = t1.platformDispatcher;
      t1._onPlatformMessage = t2.get$handlePlatformMessage();
      t1._onPlatformMessageZone = $.Zone__current;
      t1 = $.LicenseRegistry__collectors;
      if (t1 == null)
        t1 = $.LicenseRegistry__collectors = H.setRuntimeTypeInfo([], type$.JSArray_of_Stream_LicenseEntry_Function);
      t1.push(_this.get$_addLicenses());
      C.BasicMessageChannel_Qma.setMessageHandler$1(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure(_this));
      C.BasicMessageChannel_No7.setMessageHandler$1(_this.get$_handleLifecycleMessage());
      _this.readInitialLifecycleStateFromNativeWindow$0();
    },
    initServiceExtensions$0: function() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions();
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype = {
    initInstances$0: function() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances();
      $.PaintingBinding__instance = this;
      var t1 = type$.Object;
      this.PaintingBinding__imageCache = new E.ImageCache(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._PendingImage), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._CachedImage), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._LiveImage));
      C.C_DefaultShaderWarmUp.execute$0();
    },
    handleMemoryPressure$0: function() {
      this.super$ServicesBinding$handleMemoryPressure();
      var t1 = this.PaintingBinding__imageCache;
      if (t1 != null)
        t1.clear$0(0);
    },
    handleSystemMessage$1: function(systemMessage) {
      return this.handleSystemMessage$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding(systemMessage);
    },
    handleSystemMessage$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding: function(systemMessage) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$handleSystemMessage$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return P._asyncAwait($async$self.super$ServicesBinding$handleSystemMessage(systemMessage), $async$handleSystemMessage$1);
            case 3:
              // returning from await.
              switch (H._asString(J.$index$asx(type$.Map_String_dynamic._as(systemMessage), "type"))) {
                case "fontsChange":
                  $async$self.PaintingBinding__systemFonts.notifyListeners$0();
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$handleSystemMessage$1, $async$completer);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype = {
    initInstances$0: function() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances();
      $.SemanticsBinding__instance = this;
      this.SemanticsBinding___SemanticsBinding__accessibilityFeatures = $.$get$window().platformDispatcher._configuration.accessibilityFeatures;
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype = {
    initInstances$0: function() {
      var t1, t2, t3, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances();
      $.RendererBinding__instance = _this;
      t1 = type$.JSArray_RenderObject;
      _this.RendererBinding___RendererBinding__pipelineOwner = new K.PipelineOwner(_this.get$ensureVisualUpdate(), _this.get$_handleSemanticsOwnerCreated(), _this.get$_handleSemanticsOwnerDisposed(), H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), P.LinkedHashSet_LinkedHashSet$_empty(type$.RenderObject));
      t1 = $.$get$window();
      t2 = t1.platformDispatcher;
      t2._onMetricsChanged = _this.get$handleMetricsChanged();
      t3 = t2._onMetricsChangedZone = $.Zone__current;
      t2._onPlatformBrightnessChanged = _this.get$handlePlatformBrightnessChanged();
      t2._onPlatformBrightnessChangedZone = t3;
      t2._onSemanticsEnabledChanged = _this.get$_handleSemanticsEnabledChanged();
      t2._onSemanticsEnabledChangedZone = t3;
      t2._onSemanticsAction = _this.get$_handleSemanticsAction();
      t2._onSemanticsActionZone = t3;
      t1 = new A.RenderView(C.Size_0_0, _this.createViewConfiguration$0(), t1, null);
      t1.get$isRepaintBoundary();
      t1.__RenderObject__needsCompositing = true;
      t1.set$child(null);
      _this.get$_pipelineOwner().set$rootNode(t1);
      t1 = _this.get$_pipelineOwner()._rootNode;
      t1._relayoutBoundary = t1;
      t3 = type$.nullable_PipelineOwner;
      t3._as(B.AbstractNode.prototype.get$owner.call(t1))._nodesNeedingLayout.push(t1);
      t1._layer = t1._updateMatricesAndCreateNewRootLayer$0();
      t3._as(B.AbstractNode.prototype.get$owner.call(t1))._nodesNeedingPaint.push(t1);
      _this.setSemanticsEnabled$1(t2._configuration.semanticsEnabled);
      _this.SchedulerBinding__persistentCallbacks.push(_this.get$_handlePersistentFrameCallback());
      t2 = _this.RendererBinding__mouseTracker;
      if (t2 != null)
        t2.ChangeNotifier__listeners = null;
      t1 = type$.int;
      _this.RendererBinding__mouseTracker = new A.MouseTracker(new A.MouseCursorManager(C.SystemMouseCursor_basic, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.MouseCursorSession)), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._MouseState), new P.LinkedList(type$.LinkedList__ListenerEntry));
      _this.SchedulerBinding__postFrameCallbacks.push(_this.get$_handleWebFirstFrame());
    },
    initServiceExtensions$0: function() {
      var _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions();
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure(), "debugDumpRenderTree");
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0(), "debugDumpSemanticsTreeInTraversalOrder");
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1(), "debugDumpSemanticsTreeInInverseHitTestOrder");
    },
    dispatchEvent$2: function(_, $event, hitTestResult) {
      if (hitTestResult != null || type$.PointerAddedEvent._is($event) || type$.PointerRemovedEvent._is($event))
        this.RendererBinding__mouseTracker.updateWithEvent$2($event, new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure(this, hitTestResult, $event));
      this.super$GestureBinding$dispatchEvent(0, $event, hitTestResult);
    }
  };
  N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype = {
    initServiceExtensions$0: function() {
      var _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions();
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure(), "debugDumpApp");
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(_this), "didSendFirstFrameEvent");
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(_this), "didSendFirstFrameRasterizedEvent");
      _this.registerServiceExtension$2$callback$name(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(_this), "fastReassemble");
      _this.registerBoolServiceExtension$3$getter$name$setter(new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3(), "profileWidgetBuilds", new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4());
    },
    handleMetricsChanged$0: function() {
      var t1, t2, _i;
      this.super$RendererBinding$handleMetricsChanged();
      for (t1 = this.WidgetsBinding__observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].didChangeMetrics$0();
    },
    handlePlatformBrightnessChanged$0: function() {
      var t1, t2, _i;
      this.super$RendererBinding$handlePlatformBrightnessChanged();
      for (t1 = this.WidgetsBinding__observers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].didChangePlatformBrightness$0();
    },
    handleAppLifecycleStateChanged$1: function(state) {
      var t1, _i;
      this.super$SchedulerBinding$handleAppLifecycleStateChanged(state);
      for (t1 = this.WidgetsBinding__observers.length, _i = 0; _i < t1; ++_i)
        ;
    },
    handleMemoryPressure$0: function() {
      var t1, _i;
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure();
      for (t1 = this.WidgetsBinding__observers.length, _i = 0; _i < t1; ++_i)
        ;
    },
    drawFrame$0: function() {
      var firstFrameCallback, t2, _this = this, t1 = {};
      t1.firstFrameCallback = null;
      if (_this.WidgetsBinding__needToReportFirstFrame) {
        firstFrameCallback = new N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t1, _this);
        t1.firstFrameCallback = firstFrameCallback;
        $.SchedulerBinding__instance.addTimingsCallback$1(firstFrameCallback);
      }
      try {
        t2 = _this.WidgetsBinding__renderViewElement;
        if (t2 != null)
          _this.WidgetsBinding__buildOwner.buildScope$1(t2);
        _this.super$RendererBinding$drawFrame();
        _this.WidgetsBinding__buildOwner.finalizeTree$0();
      } finally {
      }
      if (_this.WidgetsBinding__needToReportFirstFrame)
        t2 = _this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0;
      else
        t2 = false;
      if (t2)
        P.Timeline_instantSync("Widgets built first useful frame", null);
      t2 = _this.WidgetsBinding__needToReportFirstFrame = false;
      t1 = t1.firstFrameCallback;
      if (t1 != null)
        t2 = !(_this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0);
      if (t2) {
        _this.WidgetsBinding__needToReportFirstFrame = true;
        t2 = $.SchedulerBinding__instance;
        t2.toString;
        t1.toString;
        t2.removeTimingsCallback$1(t1);
      }
    }
  };
  M.DecoratedBox.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new E.RenderDecoratedBox(this.decoration, this.position, U.createLocalImageConfiguration(context), null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$decoration(0, this.decoration);
      renderObject.set$configuration(U.createLocalImageConfiguration(context));
      renderObject.set$position(0, this.position);
    }
  };
  M.Container.prototype = {
    get$_paddingIncludingDecoration: function() {
      var decorationPadding,
        t1 = this.decoration;
      if (t1 == null || t1.get$padding(t1) == null)
        return this.padding;
      decorationPadding = t1.get$padding(t1);
      t1 = this.padding;
      if (t1 == null)
        return decorationPadding;
      decorationPadding.toString;
      return t1.add$1(0, decorationPadding);
    },
    build$1: function(_, context) {
      var t1, effectivePadding, _this = this, _null = null,
        current = _this.child;
      if (current == null) {
        t1 = _this.constraints;
        if (t1 != null)
          t1 = !(t1.minWidth >= t1.maxWidth && t1.minHeight >= t1.maxHeight);
        else
          t1 = true;
      } else
        t1 = false;
      if (t1)
        current = new T.LimitedBox(0, 0, new T.ConstrainedBox(C.BoxConstraints_ALM, _null, _null), _null);
      effectivePadding = _this.get$_paddingIncludingDecoration();
      if (effectivePadding != null)
        current = new T.Padding(effectivePadding, current, _null);
      t1 = _this.decoration;
      if (t1 != null)
        current = M.DecoratedBox$(current, t1, C.DecorationPosition_0);
      t1 = _this.constraints;
      if (t1 != null)
        current = new T.ConstrainedBox(t1, current, _null);
      t1 = _this.margin;
      if (t1 != null)
        current = new T.Padding(t1, current, _null);
      current.toString;
      return current;
    }
  };
  E.DefaultTextEditingActions.prototype = {};
  E._DoNothingAndStopPropagationTextAction.prototype = {
    consumesKey$1: function(intent) {
      return false;
    },
    invoke$2: function(intent, context) {
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExpandSelectionLeftByLineTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().expandSelectionLeftByLine$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExpandSelectionRightByLineTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().expandSelectionRightByLine$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExpandSelectionToEndTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().expandSelectionToEnd$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExpandSelectionToStartTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().expandSelectionToStart$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionDownTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionDown$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionLeftByLineTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionLeftByLine$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionLeftByWordAndStopAtReversalTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionLeftByWord$3(C.SelectionChangedCause_4, false, true);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionLeftByWordTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionLeftByWord$2(C.SelectionChangedCause_4, false);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionLeftTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionLeft$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionRightByLineTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionRightByLine$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionRightByWordAndStopAtReversalTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionRightByWord$3(C.SelectionChangedCause_4, false, true);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionRightByWordTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionRightByWord$2(C.SelectionChangedCause_4, false);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionRightTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionRight$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._ExtendSelectionUpTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().extendSelectionUp$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionDownTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionDown$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionLeftTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionLeft$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionRightTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionRight$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionUpTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionUp$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionLeftByLineTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionLeftByLine$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionLeftByWordTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionLeftByWord$2(C.SelectionChangedCause_4, false);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionRightByLineTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionRightByLine$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionRightByWordTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionRightByWord$2(C.SelectionChangedCause_4, false);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionToEndTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionToEnd$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E._MoveSelectionToStartTextAction.prototype = {
    invoke$2: function(intent, context) {
      this.get$textEditingActionTarget().get$renderEditable().moveSelectionToStart$1(C.SelectionChangedCause_4);
    },
    invoke$1: function(intent) {
      return this.invoke$2(intent, null);
    }
  };
  E.DefaultTextEditingShortcuts.prototype = {};
  O.KeyEventResult.prototype = {
    toString$0: function(_) {
      return this._focus_manager$_name;
    }
  };
  O.FocusAttachment.prototype = {
    detach$0: function(_) {
      var t2,
        t1 = this._node;
      if (t1._attachment === this) {
        if (!t1.get$hasPrimaryFocus()) {
          t2 = t1._focus_manager$_manager;
          t2 = t2 != null && t2._markedForFocus === t1;
        } else
          t2 = true;
        if (t2)
          t1.unfocus$1$disposition(C.UnfocusDisposition_1);
        t2 = t1._focus_manager$_manager;
        if (t2 != null) {
          if (t2._primaryFocus === t1)
            t2._primaryFocus = null;
          t2._dirtyNodes.remove$1(0, t1);
        }
        t2 = t1._focus_manager$_parent;
        if (t2 != null)
          t2._removeChild$1(0, t1);
        t1._attachment = null;
      }
    },
    reparent$0: function() {
      var t2, $parent,
        t1 = this._node;
      if (t1._attachment === this) {
        t2 = t1._context;
        t2.toString;
        $parent = L.Focus_maybeOf(t2, true);
        ($parent == null ? t1._context._owner.focusManager.rootScope : $parent)._reparent$1(t1);
      }
    }
  };
  O.UnfocusDisposition.prototype = {
    toString$0: function(_) {
      return this._focus_manager$_name;
    }
  };
  O.FocusNode.prototype = {
    set$skipTraversal: function(value) {
      var t1, _this = this;
      if (!_this._skipTraversal) {
        _this._skipTraversal = true;
        t1 = _this._focus_manager$_manager;
        if (t1 != null) {
          t1._markNeedsUpdate$0();
          t1._dirtyNodes.add$1(0, _this);
        }
      }
    },
    get$canRequestFocus: function() {
      var scope, t1, t2, _i;
      if (!this._focus_manager$_canRequestFocus)
        return false;
      scope = this.get$enclosingScope();
      if (scope != null && !scope.get$canRequestFocus())
        return false;
      for (t1 = this.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].toString;
      return true;
    },
    set$canRequestFocus: function(value) {
      var t1, _this = this;
      if (value !== _this._focus_manager$_canRequestFocus) {
        _this._focus_manager$_canRequestFocus = value;
        if (_this.get$hasFocus() && !value)
          _this.unfocus$1$disposition(C.UnfocusDisposition_1);
        t1 = _this._focus_manager$_manager;
        if (t1 != null) {
          t1._markNeedsUpdate$0();
          t1._dirtyNodes.add$1(0, _this);
        }
      }
    },
    set$descendantsAreFocusable: function(value) {
      return;
    },
    get$descendants: function() {
      var result, t2, _i, child,
        t1 = this._descendants;
      if (t1 == null) {
        result = H.setRuntimeTypeInfo([], type$.JSArray_FocusNode);
        for (t1 = this._children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          C.JSArray_methods.addAll$1(result, child.get$descendants());
          result.push(child);
        }
        this._descendants = result;
        t1 = result;
      }
      return t1;
    },
    get$traversalDescendants: function() {
      var t1 = this.get$descendants();
      return new H.WhereIterable(t1, new O.FocusNode_traversalDescendants_closure(), H._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
    },
    get$ancestors: function() {
      var result, $parent,
        t1 = this._ancestors;
      if (t1 == null) {
        result = H.setRuntimeTypeInfo([], type$.JSArray_FocusNode);
        $parent = this._focus_manager$_parent;
        for (; $parent != null;) {
          result.push($parent);
          $parent = $parent._focus_manager$_parent;
        }
        this._ancestors = result;
        t1 = result;
      }
      return t1;
    },
    get$hasFocus: function() {
      if (!this.get$hasPrimaryFocus()) {
        var t1 = this._focus_manager$_manager;
        if (t1 == null)
          t1 = null;
        else {
          t1 = t1._primaryFocus;
          t1 = t1 == null ? null : C.JSArray_methods.contains$1(t1.get$ancestors(), this);
        }
        t1 = t1 === true;
      } else
        t1 = true;
      return t1;
    },
    get$hasPrimaryFocus: function() {
      var t1 = this._focus_manager$_manager;
      return (t1 == null ? null : t1._primaryFocus) === this;
    },
    get$nearestScope: function() {
      return this.get$enclosingScope();
    },
    get$enclosingScope: function() {
      var t1, t2, _i, node;
      for (t1 = this.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        node = t1[_i];
        if (node instanceof O.FocusScopeNode)
          return node;
      }
      return null;
    },
    get$rect: function(_) {
      var bottomRight,
        object = this._context.get$renderObject(),
        t1 = object.getTransformTo$1(0, null),
        t2 = object.get$semanticBounds(),
        topLeft = T.MatrixUtils_transformPoint(t1, new P.Offset(t2.left, t2.top));
      t2 = object.getTransformTo$1(0, null);
      t1 = object.get$semanticBounds();
      bottomRight = T.MatrixUtils_transformPoint(t2, new P.Offset(t1.right, t1.bottom));
      return new P.Rect(topLeft._dx, topLeft._dy, bottomRight._dx, bottomRight._dy);
    },
    unfocus$1$disposition: function(disposition) {
      var t1, scope, _this = this;
      if (!_this.get$hasFocus()) {
        t1 = _this._focus_manager$_manager;
        t1 = t1 == null || t1._markedForFocus !== _this;
      } else
        t1 = false;
      if (t1)
        return;
      scope = _this.get$enclosingScope();
      if (scope == null)
        return;
      switch (disposition) {
        case C.UnfocusDisposition_0:
          if (scope.get$canRequestFocus())
            C.JSArray_methods.set$length(scope._focusedChildren, 0);
          for (; !scope.get$canRequestFocus();) {
            scope = scope.get$enclosingScope();
            if (scope == null) {
              t1 = _this._focus_manager$_manager;
              scope = t1 == null ? null : t1.rootScope;
            }
          }
          scope._doRequestFocus$1$findFirstFocus(false);
          break;
        case C.UnfocusDisposition_1:
          if (scope.get$canRequestFocus())
            C.JSArray_methods.remove$1(scope._focusedChildren, _this);
          for (; !scope.get$canRequestFocus();) {
            t1 = scope.get$enclosingScope();
            if (t1 != null)
              C.JSArray_methods.remove$1(t1._focusedChildren, scope);
            scope = scope.get$enclosingScope();
            if (scope == null) {
              t1 = _this._focus_manager$_manager;
              scope = t1 == null ? null : t1.rootScope;
            }
          }
          scope._doRequestFocus$1$findFirstFocus(true);
          break;
      }
    },
    _markNextFocus$1: function(newFocus) {
      var _this = this,
        t1 = _this._focus_manager$_manager;
      if (t1 != null) {
        if (t1._primaryFocus === _this)
          t1._markedForFocus = null;
        else {
          t1._markedForFocus = _this;
          t1._markNeedsUpdate$0();
        }
        return;
      }
      newFocus._setAsFocusedChildForScope$0();
      newFocus._notify$0();
      if (newFocus !== _this)
        _this._notify$0();
    },
    _removeChild$2$removeScopeFocus: function(_, node, removeScopeFocus) {
      var t1, t2, _i;
      if (removeScopeFocus) {
        t1 = node.get$enclosingScope();
        if (t1 != null)
          C.JSArray_methods.remove$1(t1._focusedChildren, node);
      }
      node._focus_manager$_parent = null;
      C.JSArray_methods.remove$1(this._children, node);
      for (t1 = this.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i]._descendants = null;
      this._descendants = null;
    },
    _removeChild$1: function($receiver, node) {
      return this._removeChild$2$removeScopeFocus($receiver, node, true);
    },
    _focus_manager$_updateManager$1: function(manager) {
      var t1, t2, _i, descendant;
      this._focus_manager$_manager = manager;
      for (t1 = this.get$descendants(), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        descendant = t1[_i];
        descendant._focus_manager$_manager = manager;
        descendant._ancestors = null;
      }
    },
    _reparent$1: function(child) {
      var oldScope, hadFocus, t1, t2, _i, inherited, _this = this;
      if (child._focus_manager$_parent === _this)
        return;
      oldScope = child.get$enclosingScope();
      hadFocus = child.get$hasFocus();
      t1 = child._focus_manager$_parent;
      if (t1 != null)
        t1._removeChild$2$removeScopeFocus(0, child, oldScope != _this.get$nearestScope());
      _this._children.push(child);
      child._focus_manager$_parent = _this;
      child._ancestors = null;
      child._focus_manager$_updateManager$1(_this._focus_manager$_manager);
      for (t1 = child.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i]._descendants = null;
      if (hadFocus) {
        t1 = _this._focus_manager$_manager;
        if (t1 != null) {
          t1 = t1._primaryFocus;
          if (t1 != null)
            t1._setAsFocusedChildForScope$0();
        }
      }
      if (oldScope != null && child._context != null && child.get$enclosingScope() !== oldScope) {
        inherited = child._context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker);
        t1 = inherited == null ? null : inherited.policy;
        if (t1 != null)
          t1.changedScope$2$node$oldScope(child, oldScope);
      }
      if (child._requestFocusWhenReparented) {
        child._doRequestFocus$1$findFirstFocus(true);
        child._requestFocusWhenReparented = false;
      }
    },
    dispose$0: function(_) {
      var t1 = this._attachment;
      if (t1 != null)
        t1.detach$0(0);
      this.super$ChangeNotifier$dispose(0);
    },
    _notify$0: function() {
      var _this = this;
      if (_this._focus_manager$_parent == null)
        return;
      if (_this.get$hasPrimaryFocus())
        _this._setAsFocusedChildForScope$0();
      _this.notifyListeners$0();
    },
    requestFocus$0: function() {
      this._doRequestFocus$1$findFirstFocus(true);
    },
    _doRequestFocus$1$findFirstFocus: function(findFirstFocus) {
      var t1, _this = this;
      if (!_this.get$canRequestFocus())
        return;
      if (_this._focus_manager$_parent == null) {
        _this._requestFocusWhenReparented = true;
        return;
      }
      _this._setAsFocusedChildForScope$0();
      if (_this.get$hasPrimaryFocus()) {
        t1 = _this._focus_manager$_manager._markedForFocus;
        t1 = t1 == null || t1 === _this;
      } else
        t1 = false;
      if (t1)
        return;
      _this._markNextFocus$1(_this);
    },
    _setAsFocusedChildForScope$0: function() {
      var t1, t2, t3, scopeFocus, scopeFocus0, t4;
      for (t1 = C.JSArray_methods.get$iterator(this.get$ancestors()), t2 = new H.WhereTypeIterator(t1, type$.WhereTypeIterator_FocusScopeNode), t3 = type$.FocusScopeNode, scopeFocus = this; t2.moveNext$0(); scopeFocus = scopeFocus0) {
        scopeFocus0 = t3._as(t1.get$current(t1));
        t4 = scopeFocus0._focusedChildren;
        C.JSArray_methods.remove$1(t4, scopeFocus);
        t4.push(scopeFocus);
      }
    },
    debugDescribeChildren$0: function() {
      var t2, t3, t1 = {};
      t1.count = 1;
      t2 = this._children;
      t3 = H._arrayInstanceType(t2)._eval$1("MappedListIterable<1,DiagnosticsNode>");
      return P.List_List$of(new H.MappedListIterable(t2, new O.FocusNode_debugDescribeChildren_closure(t1), t3), true, t3._eval$1("ListIterable.E"));
    },
    toStringShort$0: function() {
      var t1, extraData, _this = this;
      _this.get$hasFocus();
      t1 = _this.get$hasFocus() && !_this.get$hasPrimaryFocus() ? "[IN FOCUS PATH]" : "";
      extraData = t1 + (_this.get$hasPrimaryFocus() ? "[PRIMARY FOCUS]" : "");
      t1 = "<optimized out>#" + Y.shortHash(_this);
      return t1 + (extraData.length !== 0 ? "(" + extraData + ")" : "");
    },
    $isListenable: 1,
    $isDiagnosticableTree: 1
  };
  O.FocusNode_traversalDescendants_closure.prototype = {
    call$1: function(node) {
      return !node._skipTraversal && node.get$canRequestFocus();
    },
    $signature: 11
  };
  O.FocusNode_debugDescribeChildren_closure.prototype = {
    call$1: function(child) {
      return Y.DiagnosticableTreeNode$("Child " + this._box_0.count++, null, child);
    },
    $signature: 247
  };
  O.FocusScopeNode.prototype = {
    get$nearestScope: function() {
      return this;
    },
    setFirstFocus$1: function(scope) {
      if (scope._focus_manager$_parent == null)
        this._reparent$1(scope);
      if (this.get$hasFocus())
        scope._doRequestFocus$1$findFirstFocus(true);
      else
        scope._setAsFocusedChildForScope$0();
    },
    _doRequestFocus$1$findFirstFocus: function(findFirstFocus) {
      var t2, primaryFocus, _this = this, _null = null,
        t1 = _this._focusedChildren;
      while (true) {
        if ((t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null) != null)
          t2 = !(t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null).get$canRequestFocus();
        else
          t2 = false;
        if (!t2)
          break;
        t1.pop();
      }
      if (!findFirstFocus) {
        if (_this.get$canRequestFocus()) {
          _this._setAsFocusedChildForScope$0();
          _this._markNextFocus$1(_this);
        }
        return;
      }
      primaryFocus = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null;
      if (primaryFocus == null)
        primaryFocus = _this;
      while (true) {
        if (primaryFocus instanceof O.FocusScopeNode) {
          t1 = primaryFocus._focusedChildren;
          t1 = (t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null) != null;
        } else
          t1 = false;
        if (!t1)
          break;
        t1 = primaryFocus._focusedChildren;
        t1 = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null;
        t1.toString;
        primaryFocus = t1;
      }
      if (primaryFocus === _this) {
        if (primaryFocus.get$canRequestFocus()) {
          _this._setAsFocusedChildForScope$0();
          _this._markNextFocus$1(_this);
        }
      } else
        primaryFocus._doRequestFocus$1$findFirstFocus(true);
    }
  };
  O.FocusHighlightMode.prototype = {
    toString$0: function(_) {
      return this._focus_manager$_name;
    }
  };
  O.FocusHighlightStrategy.prototype = {
    toString$0: function(_) {
      return this._focus_manager$_name;
    }
  };
  O.FocusManager.prototype = {
    _updateHighlightMode$0: function() {
      var t1, newMode, _this = this;
      switch (C.FocusHighlightStrategy_0) {
        case C.FocusHighlightStrategy_0:
          t1 = _this._lastInteractionWasTouch;
          if (t1 == null)
            return;
          newMode = t1 ? C.FocusHighlightMode_0 : C.FocusHighlightMode_1;
          break;
        case C.FocusHighlightStrategy_1:
          newMode = C.FocusHighlightMode_0;
          break;
        case C.FocusHighlightStrategy_2:
          newMode = C.FocusHighlightMode_1;
          break;
        default:
          newMode = null;
      }
      t1 = _this._highlightMode;
      if (t1 == null)
        t1 = O.FocusManager__defaultModeForPlatform();
      _this._highlightMode = newMode;
      if ((newMode == null ? O.FocusManager__defaultModeForPlatform() : newMode) !== t1)
        _this._notifyHighlightModeListeners$0();
    },
    _notifyHighlightModeListeners$0: function() {
      var listener, exception, stack, localListeners, _i, t3, exception0, rti, t4, _this = this,
        t1 = _this._focus_manager$_listeners,
        t2 = t1._observer_list$_map;
      if (t2.get$isEmpty(t2))
        return;
      localListeners = P.List_List$from(t1, true, type$.void_Function_FocusHighlightMode);
      for (t1 = localListeners.length, _i = 0; _i < t1; ++_i) {
        listener = localListeners[_i];
        try {
          if (t2.containsKey$1(0, listener)) {
            t3 = _this._highlightMode;
            if (t3 == null)
              t3 = O.FocusManager__defaultModeForPlatform();
            listener.call$1(t3);
          }
        } catch (exception0) {
          exception = H.unwrapException(exception0);
          stack = H.getTraceFromException(exception0);
          rti = _this instanceof H.Closure ? H.closureFunctionType(_this) : null;
          t3 = U.ErrorDescription$("while dispatching notifications for " + H.createRuntimeType(rti == null ? H.instanceType(_this) : rti).toString$0(0));
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new U.FlutterErrorDetails(exception, stack, "widgets library", t3, null, false));
        }
      }
    },
    _focus_manager$_handlePointerEvent$1: function($event) {
      var expectedMode, t1, _this = this;
      switch ($event.get$kind($event)) {
        case C.PointerDeviceKind_0:
        case C.PointerDeviceKind_2:
        case C.PointerDeviceKind_3:
          _this._lastInteractionWasTouch = true;
          expectedMode = C.FocusHighlightMode_0;
          break;
        case C.PointerDeviceKind_1:
        case C.PointerDeviceKind_4:
          _this._lastInteractionWasTouch = false;
          expectedMode = C.FocusHighlightMode_1;
          break;
        default:
          expectedMode = null;
      }
      t1 = _this._highlightMode;
      if (expectedMode !== (t1 == null ? O.FocusManager__defaultModeForPlatform() : t1))
        _this._updateHighlightMode$0();
    },
    _handleRawKeyEvent$1: function($event) {
      var t1, handled, t2, _i, node, t3, result, _this = this;
      _this._lastInteractionWasTouch = false;
      _this._updateHighlightMode$0();
      t1 = _this._primaryFocus;
      if (t1 == null)
        return false;
      t1 = H.setRuntimeTypeInfo([t1], type$.JSArray_FocusNode);
      C.JSArray_methods.addAll$1(t1, _this._primaryFocus.get$ancestors());
      t2 = t1.length;
      _i = 0;
      while (true) {
        if (!(_i < t1.length)) {
          handled = false;
          break;
        }
        c$1: {
          node = t1[_i];
          t3 = node.onKey;
          if (t3 != null) {
            result = t3.call$2(node, $event);
            if (result instanceof O.KeyEventResult)
              switch (result) {
                case C.KeyEventResult_0:
                  handled = true;
                  break;
                case C.KeyEventResult_2:
                  handled = false;
                  break;
                case C.KeyEventResult_1:
                  break c$1;
                default:
                  handled = false;
              }
            else {
              if (H._isBool(result))
                if (result) {
                  handled = true;
                  break;
                } else
                  break c$1;
              handled = false;
            }
            break;
          }
        }
        t1.length === t2 || (0, H.throwConcurrentModificationError)(t1);
        ++_i;
      }
      return handled;
    },
    _markNeedsUpdate$0: function() {
      if (this._haveScheduledUpdate)
        return;
      this._haveScheduledUpdate = true;
      P.scheduleMicrotask(this.get$_applyFocusChange());
    },
    _applyFocusChange$0: function() {
      var previousFocus, t1, t2, previousPath, nextPath, t3, _this = this;
      _this._haveScheduledUpdate = false;
      previousFocus = _this._primaryFocus;
      t1 = previousFocus == null;
      if (t1 && _this._markedForFocus == null)
        _this._markedForFocus = _this.rootScope;
      t2 = _this._markedForFocus;
      if (t2 != null && t2 !== previousFocus) {
        if (t1)
          previousPath = null;
        else {
          t2 = previousFocus.get$ancestors();
          t2 = P.LinkedHashSet_LinkedHashSet$from(t2, H._arrayInstanceType(t2)._precomputed1);
          previousPath = t2;
        }
        if (previousPath == null)
          previousPath = P.LinkedHashSet_LinkedHashSet$_empty(type$.FocusNode);
        t2 = _this._markedForFocus.get$ancestors();
        nextPath = P.LinkedHashSet_LinkedHashSet$from(t2, H._arrayInstanceType(t2)._precomputed1);
        t2 = _this._dirtyNodes;
        t2.addAll$1(0, nextPath.difference$1(previousPath));
        t2.addAll$1(0, previousPath.difference$1(nextPath));
        t2 = _this._primaryFocus = _this._markedForFocus;
        _this._markedForFocus = null;
      } else
        t2 = previousFocus;
      if (previousFocus != t2) {
        if (!t1)
          _this._dirtyNodes.add$1(0, previousFocus);
        t1 = _this._primaryFocus;
        if (t1 != null)
          _this._dirtyNodes.add$1(0, t1);
      }
      for (t1 = _this._dirtyNodes, t2 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t3 = H._instanceType(t2)._precomputed1; t2.moveNext$0();)
        t3._as(t2._collection$_current)._notify$0();
      t1.clear$0(0);
      if (previousFocus != _this._primaryFocus)
        _this.notifyListeners$0();
    },
    debugDescribeChildren$0: function() {
      return H.setRuntimeTypeInfo([Y.DiagnosticableTreeNode$("rootScope", null, this.rootScope)], type$.JSArray_DiagnosticsNode);
    },
    $isListenable: 1,
    $isDiagnosticableTree: 1
  };
  O._FocusManager_Object_DiagnosticableTreeMixin.prototype = {};
  O._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier.prototype = {};
  O._FocusNode_Object_DiagnosticableTreeMixin.prototype = {};
  O._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier.prototype = {};
  L.Focus.prototype = {
    createState$0: function() {
      return new L._FocusState(C._StateLifecycle_0);
    }
  };
  L._FocusState.prototype = {
    get$focusNode: function(_) {
      var t1 = this._widget.focusNode;
      if (t1 == null) {
        t1 = this._internalNode;
        t1.toString;
      }
      return t1;
    },
    initState$0: function() {
      this.super$State$initState();
      this._initNode$0();
    },
    _initNode$0: function() {
      var t1, t2, t3, _this = this;
      if (_this._widget.focusNode == null)
        if (_this._internalNode == null)
          _this._internalNode = _this._createNode$0();
      t1 = _this.get$focusNode(_this);
      _this._widget.toString;
      t1.set$descendantsAreFocusable(true);
      if (_this._widget.skipTraversal != null) {
        t1 = _this.get$focusNode(_this);
        t2 = _this._widget.skipTraversal;
        t2.toString;
        t1.set$skipTraversal(t2);
      }
      if (_this._widget.canRequestFocus != null) {
        t1 = _this.get$focusNode(_this);
        t2 = _this._widget.canRequestFocus;
        t2.toString;
        t1.set$canRequestFocus(t2);
      }
      _this._canRequestFocus = _this.get$focusNode(_this).get$canRequestFocus();
      _this.get$focusNode(_this);
      _this._descendantsAreFocusable = true;
      _this._hasPrimaryFocus = _this.get$focusNode(_this).get$hasPrimaryFocus();
      t1 = _this.get$focusNode(_this);
      t2 = _this._framework$_element;
      t2.toString;
      t3 = _this._widget.onKey;
      t1._context = t2;
      t1.onKey = t3 == null ? t1.onKey : t3;
      _this._focusAttachment = t1._attachment = new O.FocusAttachment(t1);
      t1 = _this.get$focusNode(_this).ChangeNotifier__listeners;
      t1._insertBefore$3$updateFirst(t1._collection$_first, new B._ListenerEntry(_this.get$_handleFocusChanged()), false);
    },
    _createNode$0: function() {
      var t1 = this._widget,
        t2 = t1.debugLabel,
        t3 = t1.canRequestFocus;
      t1 = t1.skipTraversal;
      return O.FocusNode$(t3 !== false, t2, true, null, t1 === true);
    },
    dispose$0: function(_) {
      var t1, _this = this;
      _this.get$focusNode(_this).removeListener$1(0, _this.get$_handleFocusChanged());
      _this._focusAttachment.detach$0(0);
      t1 = _this._internalNode;
      if (t1 != null)
        t1.dispose$0(0);
      _this.super$State$dispose(0);
    },
    didChangeDependencies$0: function() {
      this.super$State$didChangeDependencies();
      var t1 = this._focusAttachment;
      if (t1 != null)
        t1.reparent$0();
      this._handleAutofocus$0();
    },
    _handleAutofocus$0: function() {
      var t1, marker, t2, t3, _this = this;
      if (!_this._didAutofocus && _this._widget.autofocus) {
        t1 = _this._framework$_element;
        marker = t1.dependOnInheritedWidgetOfExactType$1$0(type$._FocusMarker);
        if (marker == null)
          t2 = null;
        else
          t2 = marker.notifier.get$nearestScope();
        t1 = t2 == null ? t1._owner.focusManager.rootScope : t2;
        t2 = _this.get$focusNode(_this);
        t3 = t1._focusedChildren;
        if ((t3.length !== 0 ? C.JSArray_methods.get$last(t3) : null) == null) {
          if (t2._focus_manager$_parent == null)
            t1._reparent$1(t2);
          t2._doRequestFocus$1$findFirstFocus(true);
        }
        _this._didAutofocus = true;
      }
    },
    deactivate$0: function() {
      this.super$State$deactivate();
      var t1 = this._focusAttachment;
      if (t1 != null)
        t1.reparent$0();
      this._didAutofocus = false;
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      if (oldWidget.focusNode == t1.focusNode) {
        if (!J.$eq$(t1.onKey, _this.get$focusNode(_this).onKey))
          _this.get$focusNode(_this).onKey = _this._widget.onKey;
        if (_this._widget.skipTraversal != null) {
          t1 = _this.get$focusNode(_this);
          t2 = _this._widget.skipTraversal;
          t2.toString;
          t1.set$skipTraversal(t2);
        }
        if (_this._widget.canRequestFocus != null) {
          t1 = _this.get$focusNode(_this);
          t2 = _this._widget.canRequestFocus;
          t2.toString;
          t1.set$canRequestFocus(t2);
        }
        t1 = _this.get$focusNode(_this);
        _this._widget.toString;
        t1.set$descendantsAreFocusable(true);
      } else {
        _this._focusAttachment.detach$0(0);
        _this.get$focusNode(_this).removeListener$1(0, _this.get$_handleFocusChanged());
        _this._initNode$0();
      }
      if (oldWidget.autofocus !== _this._widget.autofocus)
        _this._handleAutofocus$0();
    },
    _handleFocusChanged$0: function() {
      var t1, _this = this,
        hasPrimaryFocus = _this.get$focusNode(_this).get$hasPrimaryFocus(),
        canRequestFocus = _this.get$focusNode(_this).get$canRequestFocus();
      _this.get$focusNode(_this);
      t1 = _this._widget.onFocusChange;
      if (t1 != null)
        t1.call$1(_this.get$focusNode(_this).get$hasFocus());
      if (_this._hasPrimaryFocus !== hasPrimaryFocus)
        _this.setState$1(new L._FocusState__handleFocusChanged_closure(_this, hasPrimaryFocus));
      if (_this._canRequestFocus !== canRequestFocus)
        _this.setState$1(new L._FocusState__handleFocusChanged_closure0(_this, canRequestFocus));
      if (_this._descendantsAreFocusable !== true)
        _this.setState$1(new L._FocusState__handleFocusChanged_closure1(_this, true));
    },
    build$1: function(_, context) {
      var t1, child, _this = this, _null = null;
      _this._focusAttachment.reparent$0();
      t1 = _this._widget;
      child = t1.child;
      if (t1.includeSemantics)
        child = T.Semantics$(_null, child, false, _null, false, _this._canRequestFocus, _this._hasPrimaryFocus, _null, _null, _null, _null, _null, _null, _null, _null);
      return L._FocusMarker$(child, _this.get$focusNode(_this));
    }
  };
  L._FocusState__handleFocusChanged_closure.prototype = {
    call$0: function() {
      this.$this._hasPrimaryFocus = this.hasPrimaryFocus;
    },
    $signature: 0
  };
  L._FocusState__handleFocusChanged_closure0.prototype = {
    call$0: function() {
      this.$this._canRequestFocus = this.canRequestFocus;
    },
    $signature: 0
  };
  L._FocusState__handleFocusChanged_closure1.prototype = {
    call$0: function() {
      this.$this._descendantsAreFocusable = this.descendantsAreFocusable;
    },
    $signature: 0
  };
  L.FocusScope.prototype = {
    createState$0: function() {
      return new L._FocusScopeState(C._StateLifecycle_0);
    }
  };
  L._FocusScopeState.prototype = {
    _createNode$0: function() {
      var t1 = this._widget,
        t2 = t1.debugLabel,
        t3 = t1.canRequestFocus;
      t1 = t1.skipTraversal;
      return O.FocusScopeNode$(t3 !== false, t2, t1 === true);
    },
    build$1: function(_, context) {
      var t1, _this = this, _null = null;
      _this._focusAttachment.reparent$0();
      t1 = _this.get$focusNode(_this);
      return T.Semantics$(_null, L._FocusMarker$(_this._widget.child, t1), false, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  L._FocusMarker.prototype = {};
  U._getAncestor_closure.prototype = {
    call$1: function(ancestor) {
      var t1 = this._box_0;
      if (--t1.count === 0) {
        t1.target = ancestor;
        return false;
      }
      return true;
    },
    $signature: 39
  };
  U._FocusTraversalGroupInfo.prototype = {};
  U.TraversalDirection.prototype = {
    toString$0: function(_) {
      return this._focus_traversal$_name;
    }
  };
  U.FocusTraversalPolicy.prototype = {
    _findInitialFocus$2$fromEnd: function(currentNode, fromEnd) {
      var sorted,
        scope = currentNode.get$nearestScope(),
        t1 = scope._focusedChildren,
        candidate = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : null;
      if (candidate == null && scope.get$descendants().length !== 0) {
        sorted = this._sortAllDescendants$2(scope, currentNode);
        if (sorted.length === 0)
          candidate = null;
        else
          candidate = fromEnd ? C.JSArray_methods.get$last(sorted) : C.JSArray_methods.get$first(sorted);
      }
      return candidate == null ? currentNode : candidate;
    },
    _findInitialFocus$1: function(currentNode) {
      return this._findInitialFocus$2$fromEnd(currentNode, false);
    },
    invalidateScopeData$1: function(node) {
    },
    changedScope$2$node$oldScope: function(node, oldScope) {
    },
    _getMarker$1: function(context) {
      var t1;
      if (context == null)
        t1 = null;
      else {
        t1 = context.getElementForInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker);
        t1 = t1 == null ? null : t1.get$widget();
      }
      return type$.nullable__FocusTraversalGroupMarker._as(t1);
    },
    _sortAllDescendants$2: function(scope, currentNode) {
      var groups, t2, t3, t4, t5, t6, _i, node, t7, ancestor, groupNode, parentContext, parentNode, groupKeys, sortedDescendants, _null = null,
        scopeGroupMarker = this._getMarker$1(scope._context),
        t1 = scopeGroupMarker == null,
        defaultPolicy = t1 ? _null : scopeGroupMarker.policy;
      if (defaultPolicy == null)
        defaultPolicy = new U.ReadingOrderTraversalPolicy(P.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData));
      groups = P.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_FocusNode, type$._FocusTraversalGroupInfo);
      for (t2 = scope.get$descendants(), t3 = t2.length, t4 = type$.nullable__FocusTraversalGroupMarker, t5 = type$._FocusTraversalGroupMarker, t6 = type$.JSArray_FocusNode, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
        node = t2[_i];
        t7 = node._context;
        if (t7 == null)
          t7 = _null;
        else {
          t7 = t7._inheritedWidgets;
          ancestor = t7 == null ? _null : t7.$index(0, H.createRuntimeType(t5));
          t7 = ancestor == null ? _null : ancestor.get$widget();
        }
        t4._as(t7);
        groupNode = t7 == null ? _null : t7.focusNode;
        if (J.$eq$(node, groupNode)) {
          t7 = groupNode._context;
          t7.toString;
          parentContext = U._getAncestor(t7, 2);
          if (parentContext == null)
            t7 = _null;
          else {
            t7 = parentContext._inheritedWidgets;
            ancestor = t7 == null ? _null : t7.$index(0, H.createRuntimeType(t5));
            t7 = ancestor == null ? _null : ancestor.get$widget();
          }
          t4._as(t7);
          parentNode = t7 == null ? _null : t7.focusNode;
          if (groups.$index(0, parentNode) == null)
            groups.$indexSet(0, parentNode, U._FocusTraversalGroupInfo$(t7, defaultPolicy, H.setRuntimeTypeInfo([], t6)));
          groups.$index(0, parentNode).members.push(groupNode);
          continue;
        }
        if (node.get$canRequestFocus() && !node._skipTraversal) {
          if (groups.$index(0, groupNode) == null)
            groups.$indexSet(0, groupNode, U._FocusTraversalGroupInfo$(t7, defaultPolicy, H.setRuntimeTypeInfo([], t6)));
          groups.$index(0, groupNode).members.push(node);
        }
      }
      t2 = groups.get$keys(groups);
      groupKeys = P.LinkedHashSet_LinkedHashSet$of(t2, H._instanceType(t2)._eval$1("Iterable.E"));
      for (t2 = groups.get$keys(groups), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = groups.$index(0, t3).policy.sortDescendants$2(groups.$index(0, t3).members, currentNode);
        t4 = H.setRuntimeTypeInfo(t4.slice(0), H._arrayInstanceType(t4));
        C.JSArray_methods.set$length(groups.$index(0, t3).members, 0);
        C.JSArray_methods.addAll$1(groups.$index(0, t3).members, t4);
      }
      sortedDescendants = H.setRuntimeTypeInfo([], t6);
      t2 = groups.$index(0, t1 ? _null : scopeGroupMarker.focusNode);
      t2.toString;
      new U.FocusTraversalPolicy__sortAllDescendants_visitGroups(groupKeys, groups, sortedDescendants).call$1(t2);
      if (!!sortedDescendants.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeWhere"));
      C.JSArray_methods._removeWhere$2(sortedDescendants, new U.FocusTraversalPolicy__sortAllDescendants_closure(), true);
      return sortedDescendants;
    },
    _moveFocus$2$forward: function(currentNode, $forward) {
      var t2, focusedChild, firstFocus, sortedNodes, previousNode, previousNode0, _this = this,
        t1 = currentNode.get$nearestScope();
      t1.toString;
      _this.super$FocusTraversalPolicy$invalidateScopeData(t1);
      _this.DirectionalFocusTraversalPolicyMixin__policyData.remove$1(0, t1);
      t2 = t1._focusedChildren;
      focusedChild = t2.length !== 0 ? C.JSArray_methods.get$last(t2) : null;
      if (focusedChild == null) {
        firstFocus = $forward ? _this._findInitialFocus$1(currentNode) : _this._findInitialFocus$2$fromEnd(currentNode, true);
        U._focusAndEnsureVisible(firstFocus, $forward ? C.ScrollPositionAlignmentPolicy_1 : C.ScrollPositionAlignmentPolicy_2);
        return true;
      }
      sortedNodes = _this._sortAllDescendants$2(t1, currentNode);
      if ($forward && focusedChild === C.JSArray_methods.get$last(sortedNodes)) {
        U._focusAndEnsureVisible(C.JSArray_methods.get$first(sortedNodes), C.ScrollPositionAlignmentPolicy_1);
        return true;
      }
      if (!$forward && focusedChild === C.JSArray_methods.get$first(sortedNodes)) {
        U._focusAndEnsureVisible(C.JSArray_methods.get$last(sortedNodes), C.ScrollPositionAlignmentPolicy_2);
        return true;
      }
      for (t1 = J.get$iterator$ax($forward ? sortedNodes : new H.ReversedListIterable(sortedNodes, H._arrayInstanceType(sortedNodes)._eval$1("ReversedListIterable<1>"))), previousNode = null; t1.moveNext$0(); previousNode = previousNode0) {
        previousNode0 = t1.get$current(t1);
        if (previousNode == focusedChild) {
          t1 = $forward ? C.ScrollPositionAlignmentPolicy_1 : C.ScrollPositionAlignmentPolicy_2;
          previousNode0.requestFocus$0();
          t2 = previousNode0._context;
          t2.toString;
          F.Scrollable_ensureVisible(t2, 1, t1);
          return true;
        }
      }
      return false;
    }
  };
  U.FocusTraversalPolicy__sortAllDescendants_visitGroups.prototype = {
    call$1: function(info) {
      var t1, t2, t3, t4, t5, _i, node, t6, _this = this;
      for (t1 = info.members, t2 = t1.length, t3 = _this.sortedDescendants, t4 = _this.groupKeys, t5 = _this.groups, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        if (t4.contains$1(0, node)) {
          t6 = t5.$index(0, node);
          t6.toString;
          _this.call$1(t6);
        } else
          t3.push(node);
      }
    },
    $signature: 249
  };
  U.FocusTraversalPolicy__sortAllDescendants_closure.prototype = {
    call$1: function(node) {
      return !node.get$canRequestFocus() || node._skipTraversal;
    },
    $signature: 11
  };
  U._DirectionalPolicyDataEntry.prototype = {};
  U._DirectionalPolicyData.prototype = {};
  U.DirectionalFocusTraversalPolicyMixin.prototype = {
    findFirstFocusInDirection$2: function(currentNode, direction) {
      var _this = this;
      switch (direction) {
        case C.TraversalDirection_0:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, false, true);
        case C.TraversalDirection_2:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, true, true);
        case C.TraversalDirection_3:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, false, false);
        case C.TraversalDirection_1:
          return _this._sortAndFindInitial$3$first$vertical(currentNode, true, false);
      }
    },
    _sortAndFindInitial$3$first$vertical: function(currentNode, first, vertical) {
      var nodes = currentNode.get$nearestScope().get$traversalDescendants(),
        sorted = P.List_List$of(nodes, true, nodes.$ti._eval$1("Iterable.E"));
      S.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure(vertical, first), type$.FocusNode);
      if (sorted.length !== 0)
        return C.JSArray_methods.get$first(sorted);
      return null;
    },
    _sortAndFilterHorizontally$3: function(direction, target, nearestScope) {
      var result,
        nodes = nearestScope.get$traversalDescendants(),
        sorted = P.List_List$of(nodes, true, nodes.$ti._eval$1("Iterable.E"));
      S.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure(), type$.FocusNode);
      switch (direction) {
        case C.TraversalDirection_3:
          result = new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0(target), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          break;
        case C.TraversalDirection_1:
          result = new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1(target), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          break;
        case C.TraversalDirection_0:
        case C.TraversalDirection_2:
          result = null;
          break;
        default:
          result = null;
      }
      return result;
    },
    _sortAndFilterVertically$3: function(direction, target, nodes) {
      var sorted = P.List_List$of(nodes, true, nodes.$ti._eval$1("Iterable.E"));
      S.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure(), type$.FocusNode);
      switch (direction) {
        case C.TraversalDirection_0:
          return new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0(target), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
        case C.TraversalDirection_2:
          return new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1(target), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
        case C.TraversalDirection_3:
        case C.TraversalDirection_1:
          break;
      }
      return null;
    },
    _popPolicyDataIfNeeded$3: function(direction, nearestScope, focusedChild) {
      var t3, popOrInvalidate, _this = this,
        t1 = _this.DirectionalFocusTraversalPolicyMixin__policyData,
        policyData = t1.$index(0, nearestScope),
        t2 = policyData != null;
      if (t2) {
        t3 = policyData.history;
        t3 = t3.length !== 0 && C.JSArray_methods.get$first(t3).direction !== direction;
      } else
        t3 = false;
      if (t3) {
        t3 = policyData.history;
        if (C.JSArray_methods.get$last(t3).node._focus_manager$_parent == null) {
          _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
          t1.remove$1(0, nearestScope);
          return false;
        }
        popOrInvalidate = new U.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate(_this, policyData, nearestScope);
        switch (direction) {
          case C.TraversalDirection_2:
          case C.TraversalDirection_0:
            switch (C.JSArray_methods.get$first(t3).direction) {
              case C.TraversalDirection_3:
              case C.TraversalDirection_1:
                _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
                t1.remove$1(0, nearestScope);
                break;
              case C.TraversalDirection_0:
              case C.TraversalDirection_2:
                if (popOrInvalidate.call$1(direction))
                  return true;
                break;
            }
            break;
          case C.TraversalDirection_3:
          case C.TraversalDirection_1:
            switch (C.JSArray_methods.get$first(t3).direction) {
              case C.TraversalDirection_3:
              case C.TraversalDirection_1:
                if (popOrInvalidate.call$1(direction))
                  return true;
                break;
              case C.TraversalDirection_0:
              case C.TraversalDirection_2:
                _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
                t1.remove$1(0, nearestScope);
                break;
            }
            break;
        }
      }
      if (t2 && policyData.history.length === 0) {
        _this.super$FocusTraversalPolicy$invalidateScopeData(nearestScope);
        t1.remove$1(0, nearestScope);
      }
      return false;
    },
    inDirection$2: function(currentNode, direction) {
      var firstFocus, eligibleNodes, found, sorted, inBand, policyData, newEntry, _this = this, _null = null,
        nearestScope = currentNode.get$nearestScope(),
        t1 = nearestScope._focusedChildren,
        focusedChild = t1.length !== 0 ? C.JSArray_methods.get$last(t1) : _null;
      if (focusedChild == null) {
        firstFocus = _this.findFirstFocusInDirection$2(currentNode, direction);
        if (firstFocus == null)
          firstFocus = currentNode;
        switch (direction) {
          case C.TraversalDirection_0:
          case C.TraversalDirection_3:
            U._focusAndEnsureVisible(firstFocus, C.ScrollPositionAlignmentPolicy_2);
            break;
          case C.TraversalDirection_1:
          case C.TraversalDirection_2:
            U._focusAndEnsureVisible(firstFocus, C.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      if (_this._popPolicyDataIfNeeded$3(direction, nearestScope, focusedChild))
        return true;
      t1 = focusedChild._context;
      t1.toString;
      F.Scrollable_of(t1);
      switch (direction) {
        case C.TraversalDirection_2:
        case C.TraversalDirection_0:
          eligibleNodes = _this._sortAndFilterVertically$3(direction, focusedChild.get$rect(focusedChild), nearestScope.get$traversalDescendants());
          if (!eligibleNodes.get$iterator(eligibleNodes).moveNext$0()) {
            found = _null;
            break;
          }
          sorted = P.List_List$of(eligibleNodes, true, H._instanceType(eligibleNodes)._eval$1("Iterable.E"));
          if (direction === C.TraversalDirection_0) {
            t1 = H._arrayInstanceType(sorted)._eval$1("ReversedListIterable<1>");
            sorted = P.List_List$of(new H.ReversedListIterable(sorted, t1), true, t1._eval$1("ListIterable.E"));
          }
          inBand = new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure(new P.Rect(focusedChild.get$rect(focusedChild).left, -1 / 0, focusedChild.get$rect(focusedChild).right, 1 / 0)), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          if (!inBand.get$isEmpty(inBand)) {
            found = inBand.get$first(inBand);
            break;
          }
          S.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure0(focusedChild), type$.FocusNode);
          found = C.JSArray_methods.get$first(sorted);
          break;
        case C.TraversalDirection_1:
        case C.TraversalDirection_3:
          eligibleNodes = _this._sortAndFilterHorizontally$3(direction, focusedChild.get$rect(focusedChild), nearestScope);
          if (!eligibleNodes.get$iterator(eligibleNodes).moveNext$0()) {
            found = _null;
            break;
          }
          sorted = P.List_List$of(eligibleNodes, true, H._instanceType(eligibleNodes)._eval$1("Iterable.E"));
          if (direction === C.TraversalDirection_3) {
            t1 = H._arrayInstanceType(sorted)._eval$1("ReversedListIterable<1>");
            sorted = P.List_List$of(new H.ReversedListIterable(sorted, t1), true, t1._eval$1("ListIterable.E"));
          }
          inBand = new H.WhereIterable(sorted, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure1(new P.Rect(-1 / 0, focusedChild.get$rect(focusedChild).top, 1 / 0, focusedChild.get$rect(focusedChild).bottom)), H._arrayInstanceType(sorted)._eval$1("WhereIterable<1>"));
          if (!inBand.get$isEmpty(inBand)) {
            found = inBand.get$first(inBand);
            break;
          }
          S.mergeSort(sorted, new U.DirectionalFocusTraversalPolicyMixin_inDirection_closure2(focusedChild), type$.FocusNode);
          found = C.JSArray_methods.get$first(sorted);
          break;
        default:
          found = _null;
      }
      if (found != null) {
        t1 = _this.DirectionalFocusTraversalPolicyMixin__policyData;
        policyData = t1.$index(0, nearestScope);
        newEntry = new U._DirectionalPolicyDataEntry(direction, focusedChild);
        if (policyData != null)
          policyData.history.push(newEntry);
        else
          t1.$indexSet(0, nearestScope, new U._DirectionalPolicyData(H.setRuntimeTypeInfo([newEntry], type$.JSArray__DirectionalPolicyDataEntry)));
        switch (direction) {
          case C.TraversalDirection_0:
          case C.TraversalDirection_3:
            U._focusAndEnsureVisible(found, C.ScrollPositionAlignmentPolicy_2);
            break;
          case C.TraversalDirection_2:
          case C.TraversalDirection_1:
            U._focusAndEnsureVisible(found, C.ScrollPositionAlignmentPolicy_1);
            break;
        }
        return true;
      }
      return false;
    }
  };
  U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure.prototype = {
    call$1: function(entry) {
      return entry.node === this.node;
    },
    $signature: 250
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure.prototype = {
    call$2: function(a, b) {
      if (this.vertical)
        if (this.first)
          return C.JSNumber_methods.compareTo$1(a.get$rect(a).top, b.get$rect(b).top);
        else
          return C.JSNumber_methods.compareTo$1(b.get$rect(b).bottom, a.get$rect(a).bottom);
      else if (this.first)
        return C.JSNumber_methods.compareTo$1(a.get$rect(a).left, b.get$rect(b).left);
      else
        return C.JSNumber_methods.compareTo$1(b.get$rect(b).right, a.get$rect(a).right);
    },
    $signature: 30
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure.prototype = {
    call$2: function(a, b) {
      return C.JSNumber_methods.compareTo$1(a.get$rect(a).get$center()._dx, b.get$rect(b).get$center()._dx);
    },
    $signature: 30
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0.prototype = {
    call$1: function(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dx <= t1.left;
    },
    $signature: 11
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1.prototype = {
    call$1: function(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dx >= t1.right;
    },
    $signature: 11
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure.prototype = {
    call$2: function(a, b) {
      return C.JSNumber_methods.compareTo$1(a.get$rect(a).get$center()._dy, b.get$rect(b).get$center()._dy);
    },
    $signature: 30
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0.prototype = {
    call$1: function(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dy <= t1.top;
    },
    $signature: 11
  };
  U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1.prototype = {
    call$1: function(node) {
      var t1 = this.target;
      return !node.get$rect(node).$eq(0, t1) && node.get$rect(node).get$center()._dy >= t1.bottom;
    },
    $signature: 11
  };
  U.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate.prototype = {
    call$1: function(direction) {
      var alignmentPolicy,
        lastNode = this.policyData.history.pop().node,
        t1 = lastNode._context;
      t1.toString;
      F.Scrollable_of(t1);
      t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
      t1.toString;
      F.Scrollable_of(t1);
      switch (direction) {
        case C.TraversalDirection_0:
        case C.TraversalDirection_3:
          alignmentPolicy = C.ScrollPositionAlignmentPolicy_2;
          break;
        case C.TraversalDirection_1:
        case C.TraversalDirection_2:
          alignmentPolicy = C.ScrollPositionAlignmentPolicy_1;
          break;
        default:
          alignmentPolicy = null;
      }
      U._focusAndEnsureVisible(lastNode, alignmentPolicy);
      return true;
    },
    $signature: 252
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure.prototype = {
    call$1: function(node) {
      var t1 = node.get$rect(node).intersect$1(this.band);
      return !t1.get$isEmpty(t1);
    },
    $signature: 11
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure0.prototype = {
    call$2: function(a, b) {
      var t1 = this.focusedChild;
      return C.JSNumber_methods.compareTo$1(Math.abs(a.get$rect(a).get$center()._dx - t1.get$rect(t1).get$center()._dx), Math.abs(b.get$rect(b).get$center()._dx - t1.get$rect(t1).get$center()._dx));
    },
    $signature: 30
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure1.prototype = {
    call$1: function(node) {
      var t1 = node.get$rect(node).intersect$1(this.band);
      return !t1.get$isEmpty(t1);
    },
    $signature: 11
  };
  U.DirectionalFocusTraversalPolicyMixin_inDirection_closure2.prototype = {
    call$2: function(a, b) {
      var t1 = this.focusedChild;
      return C.JSNumber_methods.compareTo$1(Math.abs(a.get$rect(a).get$center()._dy - t1.get$rect(t1).get$center()._dy), Math.abs(b.get$rect(b).get$center()._dy - t1.get$rect(t1).get$center()._dy));
    },
    $signature: 30
  };
  U._ReadingOrderSortData.prototype = {
    get$directionalAncestors: function() {
      var t1 = this._directionalAncestors;
      if (t1 == null) {
        t1 = this.node._context;
        t1.toString;
        t1 = this._directionalAncestors = new U._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors().call$1(t1);
      }
      t1.toString;
      return t1;
    }
  };
  U._ReadingOrderSortData_commonDirectionalityOf_closure.prototype = {
    call$1: function(member) {
      var t1 = member.get$directionalAncestors();
      return P.LinkedHashSet_LinkedHashSet$from(t1, H._arrayInstanceType(t1)._precomputed1);
    },
    $signature: 253
  };
  U._ReadingOrderSortData_sortWithDirectionality_closure.prototype = {
    call$2: function(a, b) {
      switch (this.directionality) {
        case C.TextDirection_1:
          return C.JSNumber_methods.compareTo$1(a.rect.left, b.rect.left);
        case C.TextDirection_0:
          return C.JSNumber_methods.compareTo$1(b.rect.right, a.rect.right);
      }
    },
    $signature: 89
  };
  U._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors.prototype = {
    call$1: function(context) {
      var t2, ancestor,
        result = H.setRuntimeTypeInfo([], type$.JSArray_Directionality),
        t1 = type$.Directionality,
        directionalityElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; directionalityElement != null;) {
        result.push(t1._as(directionalityElement.get$widget()));
        t2 = U._getAncestor(directionalityElement, 1);
        if (t2 == null)
          directionalityElement = null;
        else {
          t2 = t2._inheritedWidgets;
          ancestor = t2 == null ? null : t2.$index(0, H.createRuntimeType(t1));
          directionalityElement = ancestor;
        }
      }
      return result;
    },
    $signature: 255
  };
  U._ReadingOrderDirectionalGroupData.prototype = {
    get$rect: function(_) {
      var t1, t2, t3, t4, _this = this;
      if (_this._rect == null)
        for (t1 = _this.members, t1 = new H.MappedListIterable(t1, new U._ReadingOrderDirectionalGroupData_rect_closure(), H._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Rect>")), t1 = new H.ListIterator(t1, t1.get$length(t1)), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();) {
          t3 = t2._as(t1._current);
          t4 = _this._rect;
          if (t4 == null) {
            _this._rect = t3;
            t4 = t3;
          }
          _this._rect = t4.expandToInclude$1(t3);
        }
      t1 = _this._rect;
      t1.toString;
      return t1;
    }
  };
  U._ReadingOrderDirectionalGroupData_rect_closure.prototype = {
    call$1: function(data) {
      return data.rect;
    },
    $signature: 256
  };
  U._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure.prototype = {
    call$2: function(a, b) {
      switch (this.directionality) {
        case C.TextDirection_1:
          return C.JSNumber_methods.compareTo$1(a.get$rect(a).left, b.get$rect(b).left);
        case C.TextDirection_0:
          return C.JSNumber_methods.compareTo$1(b.get$rect(b).right, a.get$rect(a).right);
      }
    },
    $signature: 257
  };
  U.ReadingOrderTraversalPolicy.prototype = {
    _collectDirectionalityGroups$1: function(candidates) {
      var t2, _i, candidate, currentDirection0, t3,
        currentDirection = C.JSArray_methods.get$first(candidates).directionality,
        t1 = type$.JSArray__ReadingOrderSortData,
        currentGroup = H.setRuntimeTypeInfo([], t1),
        result = H.setRuntimeTypeInfo([], type$.JSArray__ReadingOrderDirectionalGroupData);
      for (t2 = candidates.length, _i = 0; _i < candidates.length; candidates.length === t2 || (0, H.throwConcurrentModificationError)(candidates), ++_i) {
        candidate = candidates[_i];
        currentDirection0 = candidate.directionality;
        if (currentDirection0 == currentDirection) {
          currentGroup.push(candidate);
          continue;
        }
        result.push(new U._ReadingOrderDirectionalGroupData(currentGroup));
        currentGroup = H.setRuntimeTypeInfo([candidate], t1);
        currentDirection = currentDirection0;
      }
      if (currentGroup.length !== 0)
        result.push(new U._ReadingOrderDirectionalGroupData(currentGroup));
      for (t1 = result.length, _i = 0; _i < result.length; result.length === t1 || (0, H.throwConcurrentModificationError)(result), ++_i) {
        t2 = result[_i].members;
        if (t2.length === 1)
          continue;
        t3 = C.JSArray_methods.get$first(t2).directionality;
        t3.toString;
        U._ReadingOrderSortData_sortWithDirectionality(t2, t3);
      }
      return result;
    },
    _pickNext$1: function(candidates) {
      var topmost, inBandOfTop, nearestCommonDirectionality, bandGroups;
      S.mergeSort(candidates, new U.ReadingOrderTraversalPolicy__pickNext_closure(), type$._ReadingOrderSortData);
      topmost = C.JSArray_methods.get$first(candidates);
      inBandOfTop = new U.ReadingOrderTraversalPolicy__pickNext_inBand().call$2(topmost, candidates);
      if (J.get$length$asx(inBandOfTop) <= 1)
        return topmost;
      nearestCommonDirectionality = U._ReadingOrderSortData_commonDirectionalityOf(inBandOfTop);
      nearestCommonDirectionality.toString;
      U._ReadingOrderSortData_sortWithDirectionality(inBandOfTop, nearestCommonDirectionality);
      bandGroups = this._collectDirectionalityGroups$1(inBandOfTop);
      if (bandGroups.length === 1)
        return C.JSArray_methods.get$first(C.JSArray_methods.get$first(bandGroups).members);
      U._ReadingOrderDirectionalGroupData_sortWithDirectionality(bandGroups, nearestCommonDirectionality);
      return C.JSArray_methods.get$first(C.JSArray_methods.get$first(bandGroups).members);
    },
    sortDescendants$2: function(descendants, currentNode) {
      var t1, t2, t3, t4, _i, node, t5, t6, ancestor, sortedList, current, next;
      if (descendants.length <= 1)
        return descendants;
      t1 = H.setRuntimeTypeInfo([], type$.JSArray__ReadingOrderSortData);
      for (t2 = descendants.length, t3 = type$.nullable_Directionality, t4 = type$.Directionality, _i = 0; _i < descendants.length; descendants.length === t2 || (0, H.throwConcurrentModificationError)(descendants), ++_i) {
        node = descendants[_i];
        t5 = node.get$rect(node);
        t6 = node._context._inheritedWidgets;
        ancestor = t6 == null ? null : t6.$index(0, H.createRuntimeType(t4));
        t6 = t3._as(ancestor == null ? null : ancestor.get$widget());
        t1.push(new U._ReadingOrderSortData(t6 == null ? null : t6.textDirection, t5, node));
      }
      sortedList = H.setRuntimeTypeInfo([], type$.JSArray_FocusNode);
      current = this._pickNext$1(t1);
      sortedList.push(current.node);
      C.JSArray_methods.remove$1(t1, current);
      for (; t1.length !== 0;) {
        next = this._pickNext$1(t1);
        sortedList.push(next.node);
        C.JSArray_methods.remove$1(t1, next);
      }
      return sortedList;
    }
  };
  U.ReadingOrderTraversalPolicy__pickNext_closure.prototype = {
    call$2: function(a, b) {
      return C.JSNumber_methods.compareTo$1(a.rect.top, b.rect.top);
    },
    $signature: 89
  };
  U.ReadingOrderTraversalPolicy__pickNext_inBand.prototype = {
    call$2: function(current, candidates) {
      var t1 = current.rect,
        t2 = H._arrayInstanceType(candidates)._eval$1("WhereIterable<1>");
      return P.List_List$of(new H.WhereIterable(candidates, new U.ReadingOrderTraversalPolicy__pickNext_inBand_closure(new P.Rect(-1 / 0, t1.top, 1 / 0, t1.bottom)), t2), true, t2._eval$1("Iterable.E"));
    },
    $signature: 258
  };
  U.ReadingOrderTraversalPolicy__pickNext_inBand_closure.prototype = {
    call$1: function(item) {
      var t1 = item.rect.intersect$1(this.band);
      return !t1.get$isEmpty(t1);
    },
    $signature: 259
  };
  U.FocusTraversalGroup.prototype = {
    createState$0: function() {
      return new U._FocusTraversalGroupState(C._StateLifecycle_0);
    }
  };
  U._FocusTraversalGroupState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this.focusNode = O.FocusNode$(false, "FocusTraversalGroup", true, null, true);
    },
    dispose$0: function(_) {
      var t1 = this.focusNode;
      if (t1 != null)
        t1.dispose$0(0);
      this.super$State$dispose(0);
    },
    build$1: function(_, context) {
      var _null = null,
        t1 = this._widget,
        t2 = t1.policy,
        t3 = this.focusNode;
      t3.toString;
      return new U._FocusTraversalGroupMarker(t2, t3, L.Focus$(false, false, t1.child, _null, true, t3, false, _null, _null, _null, true), _null);
    }
  };
  U._FocusTraversalGroupMarker.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return false;
    }
  };
  U.RequestFocusAction.prototype = {
    invoke$1: function(intent) {
      U._focusAndEnsureVisible(intent.get$focusNode(intent), C.ScrollPositionAlignmentPolicy_0);
    }
  };
  U.NextFocusIntent.prototype = {};
  U.NextFocusAction.prototype = {
    invoke$1: function(intent) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      t1._context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker).policy._moveFocus$2$forward(t1, true);
    }
  };
  U.PreviousFocusIntent.prototype = {};
  U.PreviousFocusAction.prototype = {
    invoke$1: function(intent) {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      t1._context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker).policy._moveFocus$2$forward(t1, false);
    }
  };
  U.DirectionalFocusAction.prototype = {
    invoke$1: function(intent) {
      var t1 = $.WidgetsBinding__instance;
      t1.WidgetsBinding__buildOwner.focusManager._primaryFocus._context.toString;
      t1 = t1.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      t1._context.dependOnInheritedWidgetOfExactType$1$0(type$._FocusTraversalGroupMarker).policy.inDirection$2(t1, intent.direction);
    }
  };
  U._FocusTraversalPolicy_Object_Diagnosticable.prototype = {};
  U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin.prototype = {
    changedScope$2$node$oldScope: function(node, oldScope) {
      var t1;
      this.super$FocusTraversalPolicy$changedScope(node, oldScope);
      t1 = this.DirectionalFocusTraversalPolicyMixin__policyData.$index(0, oldScope);
      if (t1 != null) {
        t1 = t1.history;
        if (!!t1.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeWhere"));
        C.JSArray_methods._removeWhere$2(t1, new U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure(node), true);
      }
    }
  };
  U.__ReadingOrderDirectionalGroupData_Object_Diagnosticable.prototype = {};
  U.__ReadingOrderSortData_Object_Diagnosticable.prototype = {};
  N.UniqueKey.prototype = {
    toString$0: function(_) {
      return "[#" + Y.shortHash(this) + "]";
    }
  };
  N.GlobalKey.prototype = {
    get$currentState: function() {
      var state,
        element = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this);
      if (element instanceof N.StatefulElement) {
        state = element.state;
        if (H._instanceType(this)._precomputed1._is(state))
          return state;
      }
      return null;
    }
  };
  N.LabeledGlobalKey.prototype = {
    toString$0: function(_) {
      var _this = this,
        t1 = _this._debugLabel,
        label = t1 != null ? " " + t1 : "";
      if (H.getRuntimeType(_this) === C.Type_LabeledGlobalKey_6TW)
        return "[GlobalKey#" + Y.shortHash(_this) + label + "]";
      return "[" + ("<optimized out>#" + Y.shortHash(_this)) + label + "]";
    }
  };
  N.GlobalObjectKey.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return this.$ti._is(other) && other.value === this.value;
    },
    get$hashCode: function(_) {
      return H.objectHashCode(this.value);
    },
    toString$0: function(_) {
      var _s15_ = "GlobalObjectKey";
      return "[" + (C.JSString_methods.endsWith$1(_s15_, "<State<StatefulWidget>>") ? C.JSString_methods.substring$2(_s15_, 0, -8) : _s15_) + " " + ("<optimized out>#" + Y.shortHash(this.value)) + "]";
    }
  };
  N.Widget.prototype = {
    toStringShort$0: function() {
      var t1 = this.key;
      return t1 == null ? "Widget" : "Widget-" + t1.toString$0(0);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      return this.super$Object$$eq(0, other);
    },
    get$hashCode: function(_) {
      return P.Object.prototype.get$hashCode.call(this, this);
    }
  };
  N.StatelessWidget.prototype = {
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.StatelessElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
    }
  };
  N.StatefulWidget.prototype = {
    createElement$0: function(_) {
      return N.StatefulElement$(this);
    }
  };
  N._StateLifecycle.prototype = {
    toString$0: function(_) {
      return this._framework$_name;
    }
  };
  N.State.prototype = {
    initState$0: function() {
    },
    didUpdateWidget$1: function(oldWidget) {
    },
    setState$1: function(fn) {
      fn.call$0();
      this._framework$_element.markNeedsBuild$0();
    },
    deactivate$0: function() {
    },
    dispose$0: function(_) {
    },
    didChangeDependencies$0: function() {
    }
  };
  N.ProxyWidget.prototype = {};
  N.ParentDataWidget.prototype = {
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.ParentDataElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2), H._instanceType(this)._eval$1("ParentDataElement<ParentDataWidget.T>"));
    }
  };
  N.InheritedWidget.prototype = {
    createElement$0: function(_) {
      return N.InheritedElement$(this);
    }
  };
  N.RenderObjectWidget.prototype = {
    updateRenderObject$2: function(context, renderObject) {
    },
    didUnmountRenderObject$1: function(renderObject) {
    }
  };
  N.LeafRenderObjectWidget.prototype = {
    createElement$0: function(_) {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N.LeafRenderObjectElement(t1, this, C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
    }
  };
  N.SingleChildRenderObjectWidget.prototype = {
    createElement$0: function(_) {
      return N.SingleChildRenderObjectElement$(this);
    }
  };
  N.MultiChildRenderObjectWidget.prototype = {
    createElement$0: function(_) {
      return N.MultiChildRenderObjectElement$(this);
    }
  };
  N._ElementLifecycle.prototype = {
    toString$0: function(_) {
      return this._framework$_name;
    }
  };
  N._InactiveElements.prototype = {
    _unmount$1: function(element) {
      element.visitChildren$1(new N._InactiveElements__unmount_closure(this, element));
      element.unmount$0();
    },
    _unmountAll$0: function() {
      var elements, t1, elements0, _this = this;
      _this._locked = true;
      t1 = _this._framework$_elements;
      elements0 = P.List_List$of(t1, true, H._instanceType(t1)._eval$1("SetMixin.E"));
      C.JSArray_methods.sort$1(elements0, N.framework_Element__sort$closure());
      elements = elements0;
      t1.clear$0(0);
      try {
        t1 = elements;
        new H.ReversedListIterable(t1, H.instanceType(t1)._eval$1("ReversedListIterable<1>")).forEach$1(0, _this.get$_unmount());
      } finally {
        _this._locked = false;
      }
    },
    add$1: function(_, element) {
      if (element._lifecycleState === C._ElementLifecycle_1) {
        element.deactivate$0();
        element.visitChildren$1(N.framework__InactiveElements__deactivateRecursively$closure());
      }
      this._framework$_elements.add$1(0, element);
    }
  };
  N._InactiveElements__unmount_closure.prototype = {
    call$1: function(child) {
      this.$this._unmount$1(child);
    },
    $signature: 4
  };
  N.BuildOwner.prototype = {
    scheduleBuildFor$1: function(element) {
      var _this = this;
      if (element._inDirtyList) {
        _this._dirtyElementsNeedsResorting = true;
        return;
      }
      if (!_this._scheduledFlushDirtyElements && _this.onBuildScheduled != null) {
        _this._scheduledFlushDirtyElements = true;
        _this.onBuildScheduled.call$0();
      }
      _this._dirtyElements.push(element);
      element._inDirtyList = true;
    },
    lockState$1: function(callback) {
      try {
        callback.call$0();
      } finally {
      }
    },
    buildScope$2: function(context, callback) {
      var e, stack, element, t2, exception, t3, t4, _i, _this = this, _box_0 = {},
        t1 = callback == null;
      if (t1 && _this._dirtyElements.length === 0)
        return;
      P.Timeline_startSync("Build", C.Map_9aZ6I, null);
      try {
        _this._scheduledFlushDirtyElements = true;
        if (!t1) {
          _box_0.debugPreviousBuildTarget = null;
          _this._dirtyElementsNeedsResorting = false;
          try {
            callback.call$0();
          } finally {
          }
        }
        t1 = _this._dirtyElements;
        C.JSArray_methods.sort$1(t1, N.framework_Element__sort$closure());
        _this._dirtyElementsNeedsResorting = false;
        _box_0.dirtyCount = t1.length;
        _box_0.index = 0;
        for (t2 = 0; t2 < _box_0.dirtyCount;) {
          try {
            t1[t2].rebuild$0();
          } catch (exception) {
            e = H.unwrapException(exception);
            stack = H.getTraceFromException(exception);
            t2 = U.ErrorDescription$("while rebuilding dirty elements");
            t3 = $.FlutterError_onError;
            if (t3 != null)
              t3.call$1(new U.FlutterErrorDetails(e, stack, "widgets library", t2, new N.BuildOwner_buildScope_closure(_box_0, _this), false));
          }
          t2 = ++_box_0.index;
          t3 = _box_0.dirtyCount;
          t4 = t1.length;
          if (t3 >= t4) {
            t3 = _this._dirtyElementsNeedsResorting;
            t3.toString;
          } else
            t3 = true;
          if (t3) {
            if (!!t1.immutable$list)
              H.throwExpression(P.UnsupportedError$("sort"));
            t2 = t4 - 1;
            if (t2 - 0 <= 32)
              H.Sort__insertionSort(t1, 0, t2, N.framework_Element__sort$closure());
            else
              H.Sort__dualPivotQuicksort(t1, 0, t2, N.framework_Element__sort$closure());
            t2 = _this._dirtyElementsNeedsResorting = false;
            _box_0.dirtyCount = t1.length;
            while (true) {
              t3 = _box_0.index;
              if (!(t3 > 0 ? t1[t3 - 1]._dirty : t2))
                break;
              _box_0.index = t3 - 1;
            }
            t2 = t3;
          }
        }
      } finally {
        for (t1 = _this._dirtyElements, t2 = t1.length, _i = 0; _i < t2; ++_i) {
          element = t1[_i];
          element._inDirtyList = false;
        }
        C.JSArray_methods.set$length(t1, 0);
        _this._scheduledFlushDirtyElements = false;
        _this._dirtyElementsNeedsResorting = null;
        P.Timeline_finishSync();
      }
    },
    buildScope$1: function(context) {
      return this.buildScope$2(context, null);
    },
    finalizeTree$0: function() {
      var e, stack, exception;
      P.Timeline_startSync("Finalize tree", C.Map_9aZ6I, null);
      try {
        this.lockState$1(new N.BuildOwner_finalizeTree_closure(this));
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        N._debugReportException(U.ErrorSummary$("while finalizing the widget tree"), e, stack, null);
      } finally {
        P.Timeline_finishSync();
      }
    }
  };
  N.BuildOwner_buildScope_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._box_0;
                t2 = t1.index;
                t3 = $async$self.$this._dirtyElements;
                $async$goto = t2 < t3.length ? 2 : 4;
                break;
              case 2:
                // then
                $async$goto = 5;
                return K.DiagnosticsDebugCreator$(new N.DebugCreator(t3[t2]));
              case 5:
                // after yield
                t2 = t1.index;
                t3 = t3[t2];
                $async$goto = 6;
                return Y.DiagnosticsProperty$(string$.The_el + t2 + " of " + t1.dirtyCount, t3, true, C.C__NoDefaultValue, null, false, null, null, C.DiagnosticLevel_3, null, false, true, true, C.DiagnosticsTreeStyle_9, null, type$.Element_2);
              case 6:
                // after yield
                // goto join
                $async$goto = 3;
                break;
              case 4:
                // else
                $async$goto = 7;
                return U.ErrorHint$(string$.The_el + t2 + " of " + t1.dirtyCount + ", but _dirtyElements only had " + t3.length + " entries. This suggests some confusion in the framework internals.");
              case 7:
                // after yield
              case 3:
                // join
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 16
  };
  N.BuildOwner_finalizeTree_closure.prototype = {
    call$0: function() {
      this.$this._inactiveElements._unmountAll$0();
    },
    $signature: 0
  };
  N.Element.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      return this === other;
    },
    get$hashCode: function(_) {
      return this._cachedHash;
    },
    get$_depth: function() {
      var t1 = this.__Element__depth;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_depth")) : t1;
    },
    get$widget: function() {
      return this._widget;
    },
    get$renderObject: function() {
      var t1 = {};
      t1.result = null;
      new N.Element_renderObject_visit(t1).call$1(this);
      return t1.result;
    },
    visitChildren$1: function(visitor) {
    },
    updateChild$3: function(child, newWidget, newSlot) {
      var t1, newChild, _this = this;
      if (newWidget == null) {
        if (child != null)
          _this.deactivateChild$1(child);
        return null;
      }
      if (child != null) {
        t1 = child.get$widget().$eq(0, newWidget);
        if (t1) {
          if (!J.$eq$(child._slot, newSlot))
            _this.updateSlotForChild$2(child, newSlot);
          t1 = child;
        } else {
          t1 = child.get$widget();
          t1 = H.getRuntimeType(t1) === H.getRuntimeType(newWidget) && J.$eq$(t1.key, newWidget.key);
          if (t1) {
            if (!J.$eq$(child._slot, newSlot))
              _this.updateSlotForChild$2(child, newSlot);
            child.update$1(0, newWidget);
            t1 = child;
          } else {
            _this.deactivateChild$1(child);
            newChild = _this.inflateWidget$2(newWidget, newSlot);
            t1 = newChild;
          }
        }
      } else {
        newChild = _this.inflateWidget$2(newWidget, newSlot);
        t1 = newChild;
      }
      return t1;
    },
    mount$2: function($parent, newSlot) {
      var t1, key, _this = this;
      _this._framework$_parent = $parent;
      _this._slot = newSlot;
      _this._lifecycleState = C._ElementLifecycle_1;
      t1 = $parent != null;
      _this.__Element__depth = t1 ? $parent.get$_depth() + 1 : 1;
      if (t1)
        _this._owner = $parent._owner;
      key = _this.get$widget().key;
      if (key instanceof N.GlobalKey)
        _this._owner._globalKeyRegistry.$indexSet(0, key, _this);
      _this._updateInheritance$0();
    },
    update$1: function(_, newWidget) {
      this._widget = newWidget;
    },
    updateSlotForChild$2: function(child, newSlot) {
      new N.Element_updateSlotForChild_visit(newSlot).call$1(child);
    },
    _updateSlot$1: function(newSlot) {
      this._slot = newSlot;
    },
    _updateDepth$1: function(parentDepth) {
      var expectedDepth = parentDepth + 1;
      if (this.get$_depth() < expectedDepth) {
        this.__Element__depth = expectedDepth;
        this.visitChildren$1(new N.Element__updateDepth_closure(expectedDepth));
      }
    },
    detachRenderObject$0: function() {
      this.visitChildren$1(new N.Element_detachRenderObject_closure());
      this._slot = null;
    },
    attachRenderObject$1: function(newSlot) {
      this.visitChildren$1(new N.Element_attachRenderObject_closure(newSlot));
      this._slot = newSlot;
    },
    _retakeInactiveElement$2: function(key, newWidget) {
      var t1, $parent,
        element = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, key);
      if (element == null)
        return null;
      t1 = element.get$widget();
      if (!(H.getRuntimeType(t1) === H.getRuntimeType(newWidget) && J.$eq$(t1.key, newWidget.key)))
        return null;
      $parent = element._framework$_parent;
      if ($parent != null) {
        $parent.forgetChild$1(element);
        $parent.deactivateChild$1(element);
      }
      this._owner._inactiveElements._framework$_elements.remove$1(0, element);
      return element;
    },
    inflateWidget$2: function(newWidget, newSlot) {
      var newChild, updatedChild, _this = this,
        key = newWidget.key;
      if (key instanceof N.GlobalKey) {
        newChild = _this._retakeInactiveElement$2(key, newWidget);
        if (newChild != null) {
          newChild._framework$_parent = _this;
          newChild._updateDepth$1(_this.get$_depth());
          newChild.activate$0();
          newChild.visitChildren$1(N.framework_Element__activateRecursively$closure());
          newChild.attachRenderObject$1(newSlot);
          updatedChild = _this.updateChild$3(newChild, newWidget, newSlot);
          updatedChild.toString;
          return updatedChild;
        }
      }
      newChild = newWidget.createElement$0(0);
      newChild.mount$2(_this, newSlot);
      return newChild;
    },
    deactivateChild$1: function(child) {
      child._framework$_parent = null;
      child.detachRenderObject$0();
      this._owner._inactiveElements.add$1(0, child);
    },
    forgetChild$1: function(child) {
    },
    activate$0: function() {
      var _this = this,
        t1 = _this._dependencies,
        t2 = t1 == null,
        hadDependencies = !t2 && t1._collection$_length !== 0 || _this._hadUnsatisfiedDependencies;
      _this._lifecycleState = C._ElementLifecycle_1;
      if (!t2)
        t1.clear$0(0);
      _this._hadUnsatisfiedDependencies = false;
      _this._updateInheritance$0();
      if (_this._dirty)
        _this._owner.scheduleBuildFor$1(_this);
      if (hadDependencies)
        _this.didChangeDependencies$0();
    },
    deactivate$0: function() {
      var t2, _this = this,
        t1 = _this._dependencies;
      if (t1 != null && t1._collection$_length !== 0)
        for (t1 = new P._HashSetIterator(t1, t1._computeElements$0()), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
          t2._as(t1._collection$_current)._dependents.remove$1(0, _this);
      _this._inheritedWidgets = null;
      _this._lifecycleState = C._ElementLifecycle_2;
    },
    unmount$0: function() {
      var t1, _this = this,
        key = _this._widget.key;
      if (key instanceof N.GlobalKey) {
        t1 = _this._owner._globalKeyRegistry;
        if (J.$eq$(t1.$index(0, key), _this))
          t1.remove$1(0, key);
      }
      _this._lifecycleState = C._ElementLifecycle_3;
    },
    get$size: function(_) {
      var t1,
        renderObject = this.get$renderObject();
      if (renderObject instanceof S.RenderBox) {
        t1 = renderObject._size;
        t1.toString;
        return t1;
      }
      return null;
    },
    dependOnInheritedElement$2$aspect: function(ancestor, aspect) {
      var t1 = this._dependencies;
      (t1 == null ? this._dependencies = P.HashSet_HashSet(type$.InheritedElement) : t1).add$1(0, ancestor);
      ancestor._dependents.$indexSet(0, this, null);
      return ancestor.get$widget();
    },
    dependOnInheritedWidgetOfExactType$1$0: function($T) {
      var t1 = this._inheritedWidgets,
        ancestor = t1 == null ? null : t1.$index(0, H.createRuntimeType($T));
      if (ancestor != null)
        return $T._as(this.dependOnInheritedElement$2$aspect(ancestor, null));
      this._hadUnsatisfiedDependencies = true;
      return null;
    },
    getElementForInheritedWidgetOfExactType$1$0: function($T) {
      var t1 = this._inheritedWidgets;
      return t1 == null ? null : t1.$index(0, H.createRuntimeType($T));
    },
    _updateInheritance$0: function() {
      var t1 = this._framework$_parent;
      this._inheritedWidgets = t1 == null ? null : t1._inheritedWidgets;
    },
    findAncestorStateOfType$1$0: function($T) {
      var t1,
        ancestor = this._framework$_parent;
      for (; t1 = ancestor == null, !t1;) {
        if (ancestor instanceof N.StatefulElement && $T._is(ancestor.state))
          break;
        ancestor = ancestor._framework$_parent;
      }
      type$.nullable_StatefulElement._as(ancestor);
      t1 = t1 ? null : ancestor.state;
      return $T._eval$1("0?")._as(t1);
    },
    findAncestorRenderObjectOfType$1$0: function($T) {
      var ancestor = this._framework$_parent;
      for (; ancestor != null;) {
        if (ancestor instanceof N.RenderObjectElement && $T._is(ancestor.get$renderObject()))
          return $T._as(ancestor.get$renderObject());
        ancestor = ancestor._framework$_parent;
      }
      return null;
    },
    visitAncestorElements$1: function(visitor) {
      var ancestor = this._framework$_parent;
      while (true) {
        if (!(ancestor != null && visitor.call$1(ancestor)))
          break;
        ancestor = ancestor._framework$_parent;
      }
    },
    didChangeDependencies$0: function() {
      this.markNeedsBuild$0();
    },
    debugGetCreatorChain$1: function(limit) {
      var chain = H.setRuntimeTypeInfo([], type$.JSArray_String),
        node = this;
      while (true) {
        if (!(chain.length < limit && node != null))
          break;
        chain.push(node.get$widget().toStringShort$0());
        node = node._framework$_parent;
      }
      if (node != null)
        chain.push("\u22ef");
      return C.JSArray_methods.join$1(chain, " \u2190 ");
    },
    toStringShort$0: function() {
      return this.get$widget().toStringShort$0();
    },
    toDiagnosticsNode$2$name$style: function($name, style) {
      return N._ElementDiagnosticableTreeNode$($name, false, style, this);
    },
    toDiagnosticsNode$0: function() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    },
    debugDescribeChildren$0: function() {
      var children = H.setRuntimeTypeInfo([], type$.JSArray_DiagnosticsNode);
      this.visitChildren$1(new N.Element_debugDescribeChildren_closure(children));
      return children;
    },
    markNeedsBuild$0: function() {
      var _this = this;
      if (_this._lifecycleState !== C._ElementLifecycle_1)
        return;
      if (_this._dirty)
        return;
      _this._dirty = true;
      _this._owner.scheduleBuildFor$1(_this);
    },
    rebuild$0: function() {
      if (this._lifecycleState !== C._ElementLifecycle_1 || !this._dirty)
        return;
      this.performRebuild$0();
    },
    $isBuildContext: 1
  };
  N.Element_renderObject_visit.prototype = {
    call$1: function(element) {
      if (element instanceof N.RenderObjectElement)
        this._box_0.result = element.get$renderObject();
      else
        element.visitChildren$1(this);
    },
    $signature: 4
  };
  N.Element_updateSlotForChild_visit.prototype = {
    call$1: function(element) {
      element._updateSlot$1(this.newSlot);
      if (!(element instanceof N.RenderObjectElement))
        element.visitChildren$1(this);
    },
    $signature: 4
  };
  N.Element__updateDepth_closure.prototype = {
    call$1: function(child) {
      child._updateDepth$1(this.expectedDepth);
    },
    $signature: 4
  };
  N.Element_detachRenderObject_closure.prototype = {
    call$1: function(child) {
      child.detachRenderObject$0();
    },
    $signature: 4
  };
  N.Element_attachRenderObject_closure.prototype = {
    call$1: function(child) {
      child.attachRenderObject$1(this.newSlot);
    },
    $signature: 4
  };
  N.Element_debugDescribeChildren_closure.prototype = {
    call$1: function(child) {
      this.children.push(child.toDiagnosticsNode$0());
    },
    $signature: 4
  };
  N._ElementDiagnosticableTreeNode.prototype = {};
  N.ErrorWidget.prototype = {
    createRenderObject$1: function(context) {
      var t1 = this.message,
        t2 = new V.RenderErrorBox(t1);
      t2.get$isRepaintBoundary();
      t2.get$alwaysNeedsCompositing();
      t2.__RenderObject__needsCompositing = false;
      t2.RenderErrorBox$1(t1);
      return t2;
    }
  };
  N.ComponentElement.prototype = {
    mount$2: function($parent, newSlot) {
      this.super$Element$mount($parent, newSlot);
      this._firstBuild$0();
    },
    _firstBuild$0: function() {
      this.rebuild$0();
    },
    performRebuild$0: function() {
      var built, e, stack, e0, stack0, exception, built0, _this = this,
        t1 = $.debugProfileBuildsEnabled;
      if (t1)
        P.Timeline_startSync(H.getRuntimeType(_this.get$widget()).toString$0(0), C.Map_9aZ6I, null);
      built = null;
      try {
        built = _this.build$0(0);
        _this.get$widget();
      } catch (exception) {
        e = H.unwrapException(exception);
        stack = H.getTraceFromException(exception);
        built0 = N.ErrorWidget__defaultErrorWidgetBuilder(N._debugReportException(U.ErrorDescription$("building " + _this.toString$0(0)), e, stack, new N.ComponentElement_performRebuild_closure(_this)));
        built = built0;
      } finally {
        _this._dirty = false;
      }
      try {
        _this._framework$_child = _this.updateChild$3(_this._framework$_child, built, _this._slot);
      } catch (exception) {
        e0 = H.unwrapException(exception);
        stack0 = H.getTraceFromException(exception);
        built0 = N.ErrorWidget__defaultErrorWidgetBuilder(N._debugReportException(U.ErrorDescription$("building " + _this.toString$0(0)), e0, stack0, new N.ComponentElement_performRebuild_closure0(_this)));
        built = built0;
        _this._framework$_child = _this.updateChild$3(null, built, _this._slot);
      }
      t1 = $.debugProfileBuildsEnabled;
      if (t1)
        P.Timeline_finishSync();
    },
    visitChildren$1: function(visitor) {
      var t1 = this._framework$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1: function(child) {
      this._framework$_child = null;
      this.super$Element$forgetChild(child);
    }
  };
  N.ComponentElement_performRebuild_closure.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return K.DiagnosticsDebugCreator$(new N.DebugCreator($async$self.$this));
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 16
  };
  N.ComponentElement_performRebuild_closure0.prototype = {
    call$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError;
        return function $async$call$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return K.DiagnosticsDebugCreator$(new N.DebugCreator($async$self.$this));
              case 2:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.DiagnosticsNode);
    },
    $signature: 16
  };
  N.StatelessElement.prototype = {
    get$widget: function() {
      return type$.StatelessWidget._as(N.Element.prototype.get$widget.call(this));
    },
    build$0: function(_) {
      return type$.StatelessWidget._as(N.Element.prototype.get$widget.call(this)).build$1(0, this);
    },
    update$1: function(_, newWidget) {
      this.super$Element$update(0, newWidget);
      this._dirty = true;
      this.rebuild$0();
    }
  };
  N.StatefulElement.prototype = {
    build$0: function(_) {
      return this.state.build$1(0, this);
    },
    _firstBuild$0: function() {
      var debugCheckForReturnedFuture, _this = this;
      try {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = true;
        debugCheckForReturnedFuture = _this.state.initState$0();
      } finally {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = false;
      }
      _this.state.didChangeDependencies$0();
      _this.super$ComponentElement$_firstBuild();
    },
    performRebuild$0: function() {
      var _this = this;
      if (_this._didChangeDependencies) {
        _this.state.didChangeDependencies$0();
        _this._didChangeDependencies = false;
      }
      _this.super$ComponentElement$performRebuild();
    },
    update$1: function(_, newWidget) {
      var oldWidget, debugCheckForReturnedFuture, t1, t2, _this = this;
      _this.super$Element$update(0, newWidget);
      t1 = _this.state;
      t2 = t1._widget;
      t2.toString;
      oldWidget = t2;
      _this._dirty = true;
      t1._widget = type$.StatefulWidget._as(_this._widget);
      try {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = true;
        debugCheckForReturnedFuture = t1.didUpdateWidget$1(oldWidget);
      } finally {
        _this._debugAllowIgnoredCallsToMarkNeedsBuild = false;
      }
      _this.rebuild$0();
    },
    activate$0: function() {
      this.super$Element$activate();
      this.markNeedsBuild$0();
    },
    deactivate$0: function() {
      this.state.deactivate$0();
      this.super$Element$deactivate();
    },
    unmount$0: function() {
      this.super$Element$unmount();
      var t1 = this.state;
      t1.dispose$0(0);
      t1._framework$_element = null;
    },
    dependOnInheritedElement$2$aspect: function(ancestor, aspect) {
      return this.super$Element$dependOnInheritedElement(ancestor, aspect);
    },
    didChangeDependencies$0: function() {
      this.super$Element$didChangeDependencies();
      this._didChangeDependencies = true;
    },
    toDiagnosticsNode$2$name$style: function($name, style) {
      return N._ElementDiagnosticableTreeNode$($name, true, style, this);
    },
    toDiagnosticsNode$0: function() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    }
  };
  N.ProxyElement.prototype = {
    get$widget: function() {
      return type$.ProxyWidget._as(N.Element.prototype.get$widget.call(this));
    },
    build$0: function(_) {
      return this.get$widget().child;
    },
    update$1: function(_, newWidget) {
      var _this = this,
        oldWidget = _this.get$widget();
      _this.super$Element$update(0, newWidget);
      _this.updated$1(oldWidget);
      _this._dirty = true;
      _this.rebuild$0();
    },
    updated$1: function(oldWidget) {
      this.notifyClients$1(oldWidget);
    }
  };
  N.ParentDataElement.prototype = {
    get$widget: function() {
      return this.$ti._eval$1("ParentDataWidget<1>")._as(N.ProxyElement.prototype.get$widget.call(this));
    },
    _applyParentData$1: function(widget) {
      this.visitChildren$1(new N.ParentDataElement__applyParentData_applyParentDataToChild(widget));
    },
    notifyClients$1: function(oldWidget) {
      this._applyParentData$1(this.$ti._eval$1("ParentDataWidget<1>")._as(N.ProxyElement.prototype.get$widget.call(this)));
    }
  };
  N.ParentDataElement__applyParentData_applyParentDataToChild.prototype = {
    call$1: function(child) {
      if (child instanceof N.RenderObjectElement)
        this.widget.applyParentData$1(child.get$renderObject());
      else
        child.visitChildren$1(this);
    },
    $signature: 4
  };
  N.InheritedElement.prototype = {
    get$widget: function() {
      return type$.InheritedWidget._as(N.ProxyElement.prototype.get$widget.call(this));
    },
    _updateInheritance$0: function() {
      var t2, _this = this,
        t1 = _this._framework$_parent,
        incomingWidgets = t1 == null ? null : t1._inheritedWidgets;
      t1 = type$.Type;
      t2 = type$.InheritedElement;
      t1 = incomingWidgets != null ? _this._inheritedWidgets = P.HashMap_HashMap$from(incomingWidgets, t1, t2) : _this._inheritedWidgets = P.HashMap_HashMap(t1, t2);
      t1.$indexSet(0, H.getRuntimeType(_this.get$widget()), _this);
    },
    updated$1: function(oldWidget) {
      if (this.get$widget().updateShouldNotify$1(oldWidget))
        this.super$ProxyElement$updated(oldWidget);
    },
    notifyClients$1: function(oldWidget) {
      var t1, t2;
      for (t1 = this._dependents, t1 = new P._HashMapKeyIterable(t1, H._instanceType(t1)._eval$1("_HashMapKeyIterable<1>")), t1 = t1.get$iterator(t1), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
        t2._as(t1._collection$_current).didChangeDependencies$0();
    }
  };
  N.RenderObjectElement.prototype = {
    get$widget: function() {
      return type$.RenderObjectWidget._as(N.Element.prototype.get$widget.call(this));
    },
    get$renderObject: function() {
      var t1 = this._renderObject;
      t1.toString;
      return t1;
    },
    _findAncestorRenderObjectElement$0: function() {
      var ancestor = this._framework$_parent;
      while (true) {
        if (!(ancestor != null && !(ancestor instanceof N.RenderObjectElement)))
          break;
        ancestor = ancestor._framework$_parent;
      }
      return type$.nullable_RenderObjectElement._as(ancestor);
    },
    _findAncestorParentDataElement$0: function() {
      var ancestor, _box_0 = {},
        t1 = _box_0.ancestor = this._framework$_parent;
      _box_0.result = null;
      while (true) {
        if (!(t1 != null && !(t1 instanceof N.RenderObjectElement)))
          break;
        if (t1 instanceof N.ParentDataElement) {
          _box_0.result = t1;
          break;
        }
        ancestor = t1._framework$_parent;
        _box_0.ancestor = ancestor;
        t1 = ancestor;
      }
      return _box_0.result;
    },
    mount$2: function($parent, newSlot) {
      var _this = this;
      _this.super$Element$mount($parent, newSlot);
      _this._renderObject = _this.get$widget().createRenderObject$1(_this);
      _this.attachRenderObject$1(newSlot);
      _this._dirty = false;
    },
    update$1: function(_, newWidget) {
      var _this = this;
      _this.super$Element$update(0, newWidget);
      _this.get$widget().updateRenderObject$2(_this, _this.get$renderObject());
      _this._dirty = false;
    },
    performRebuild$0: function() {
      var _this = this;
      _this.get$widget().updateRenderObject$2(_this, _this.get$renderObject());
      _this._dirty = false;
    },
    updateChildren$3$forgottenChildren: function(oldChildren, newWidgets, forgottenChildren) {
      var oldChild, newWidget, rti, oldChildrenBottom0, haveOldChildren, oldKeyedChildren, key, t3, _this = this, _null = null,
        replaceWithNullIfForgotten = new N.RenderObjectElement_updateChildren_replaceWithNullIfForgotten(forgottenChildren),
        slotFor = new N.RenderObjectElement_updateChildren_slotFor(_null),
        t1 = newWidgets.length,
        newChildrenBottom = t1 - 1,
        t2 = oldChildren.length,
        oldChildrenBottom = t2 - 1,
        newChildren = t2 === t1 ? oldChildren : P.List_List$filled(t1, $.$get$_NullElement_instance(), false, type$.Element_2),
        previousChild = _null,
        newChildrenTop = 0, oldChildrenTop = 0;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(oldChildren[oldChildrenTop]);
        newWidget = newWidgets[newChildrenTop];
        if (oldChild != null) {
          t1 = oldChild.get$widget();
          rti = t1 instanceof H.Closure ? H.closureFunctionType(t1) : _null;
          t2 = H.createRuntimeType(rti == null ? H.instanceType(t1) : rti);
          rti = newWidget instanceof H.Closure ? H.closureFunctionType(newWidget) : _null;
          t1 = !(t2 === H.createRuntimeType(rti == null ? H.instanceType(newWidget) : rti) && J.$eq$(t1.key, newWidget.key));
        } else
          t1 = true;
        if (t1)
          break;
        t1 = _this.updateChild$3(oldChild, newWidget, slotFor.call$2(newChildrenTop, previousChild));
        t1.toString;
        newChildren[newChildrenTop] = t1;
        ++newChildrenTop;
        ++oldChildrenTop;
        previousChild = t1;
      }
      oldChildrenBottom0 = oldChildrenBottom;
      while (true) {
        haveOldChildren = oldChildrenTop <= oldChildrenBottom0;
        if (!(haveOldChildren && newChildrenTop <= newChildrenBottom))
          break;
        oldChild = replaceWithNullIfForgotten.call$1(oldChildren[oldChildrenBottom0]);
        newWidget = newWidgets[newChildrenBottom];
        if (oldChild != null) {
          t1 = oldChild.get$widget();
          rti = t1 instanceof H.Closure ? H.closureFunctionType(t1) : _null;
          t2 = H.createRuntimeType(rti == null ? H.instanceType(t1) : rti);
          rti = newWidget instanceof H.Closure ? H.closureFunctionType(newWidget) : _null;
          t1 = !(t2 === H.createRuntimeType(rti == null ? H.instanceType(newWidget) : rti) && J.$eq$(t1.key, newWidget.key));
        } else
          t1 = true;
        if (t1)
          break;
        --oldChildrenBottom0;
        --newChildrenBottom;
      }
      if (haveOldChildren) {
        oldKeyedChildren = P.LinkedHashMap_LinkedHashMap$_empty(type$.Key, type$.Element_2);
        for (; oldChildrenTop <= oldChildrenBottom0;) {
          oldChild = replaceWithNullIfForgotten.call$1(oldChildren[oldChildrenTop]);
          if (oldChild != null)
            if (oldChild.get$widget().key != null) {
              t1 = oldChild.get$widget().key;
              t1.toString;
              oldKeyedChildren.$indexSet(0, t1, oldChild);
            } else {
              oldChild._framework$_parent = null;
              oldChild.detachRenderObject$0();
              t1 = _this._owner._inactiveElements;
              if (oldChild._lifecycleState === C._ElementLifecycle_1) {
                oldChild.deactivate$0();
                oldChild.visitChildren$1(N.framework__InactiveElements__deactivateRecursively$closure());
              }
              t1._framework$_elements.add$1(0, oldChild);
            }
          ++oldChildrenTop;
        }
        haveOldChildren = true;
      } else
        oldKeyedChildren = _null;
      for (; newChildrenTop <= newChildrenBottom; previousChild = t1) {
        newWidget = newWidgets[newChildrenTop];
        if (haveOldChildren) {
          key = newWidget.key;
          if (key != null) {
            oldChild = oldKeyedChildren.$index(0, key);
            if (oldChild != null) {
              t1 = oldChild.get$widget();
              rti = t1 instanceof H.Closure ? H.closureFunctionType(t1) : _null;
              t2 = H.createRuntimeType(rti == null ? H.instanceType(t1) : rti);
              rti = newWidget instanceof H.Closure ? H.closureFunctionType(newWidget) : _null;
              if (t2 === H.createRuntimeType(rti == null ? H.instanceType(newWidget) : rti) && J.$eq$(t1.key, key))
                oldKeyedChildren.remove$1(0, key);
              else
                oldChild = _null;
            }
          } else
            oldChild = _null;
        } else
          oldChild = _null;
        t1 = _this.updateChild$3(oldChild, newWidget, slotFor.call$2(newChildrenTop, previousChild));
        t1.toString;
        newChildren[newChildrenTop] = t1;
        ++newChildrenTop;
      }
      newChildrenBottom = newWidgets.length - 1;
      while (true) {
        if (!(oldChildrenTop <= oldChildrenBottom && newChildrenTop <= newChildrenBottom))
          break;
        t1 = _this.updateChild$3(oldChildren[oldChildrenTop], newWidgets[newChildrenTop], slotFor.call$2(newChildrenTop, previousChild));
        t1.toString;
        newChildren[newChildrenTop] = t1;
        ++newChildrenTop;
        ++oldChildrenTop;
        previousChild = t1;
      }
      if (haveOldChildren && oldKeyedChildren.get$isNotEmpty(oldKeyedChildren))
        for (t1 = oldKeyedChildren.get$values(oldKeyedChildren), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          t2 = t1.get$current(t1);
          if (!forgottenChildren.contains$1(0, t2)) {
            t2._framework$_parent = null;
            t2.detachRenderObject$0();
            t3 = _this._owner._inactiveElements;
            if (t2._lifecycleState === C._ElementLifecycle_1) {
              t2.deactivate$0();
              t2.visitChildren$1(N.framework__InactiveElements__deactivateRecursively$closure());
            }
            t3._framework$_elements.add$1(0, t2);
          }
        }
      return newChildren;
    },
    deactivate$0: function() {
      this.super$Element$deactivate();
    },
    unmount$0: function() {
      this.super$Element$unmount();
      this.get$widget().didUnmountRenderObject$1(this.get$renderObject());
    },
    _updateSlot$1: function(newSlot) {
      var t1, _this = this,
        oldSlot = _this._slot;
      _this.super$Element$_updateSlot(newSlot);
      t1 = _this._ancestorRenderObjectElement;
      t1.toString;
      t1.moveRenderObjectChild$3(_this.get$renderObject(), oldSlot, _this._slot);
    },
    attachRenderObject$1: function(newSlot) {
      var t1, parentDataElement, _this = this;
      _this._slot = newSlot;
      t1 = _this._ancestorRenderObjectElement = _this._findAncestorRenderObjectElement$0();
      if (t1 != null)
        t1.insertRenderObjectChild$2(_this.get$renderObject(), newSlot);
      parentDataElement = _this._findAncestorParentDataElement$0();
      if (parentDataElement != null)
        parentDataElement.$ti._eval$1("ParentDataWidget<1>")._as(N.ProxyElement.prototype.get$widget.call(parentDataElement)).applyParentData$1(_this.get$renderObject());
    },
    detachRenderObject$0: function() {
      var _this = this,
        t1 = _this._ancestorRenderObjectElement;
      if (t1 != null) {
        t1.removeRenderObjectChild$2(_this.get$renderObject(), _this._slot);
        _this._ancestorRenderObjectElement = null;
      }
      _this._slot = null;
    },
    insertRenderObjectChild$2: function(child, slot) {
    },
    moveRenderObjectChild$3: function(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2: function(child, slot) {
    }
  };
  N.RenderObjectElement_updateChildren_replaceWithNullIfForgotten.prototype = {
    call$1: function(child) {
      var t1 = this.forgottenChildren.contains$1(0, child);
      return t1 ? null : child;
    },
    $signature: 260
  };
  N.RenderObjectElement_updateChildren_slotFor.prototype = {
    call$2: function(newChildIndex, previousChild) {
      return new N.IndexedSlot(previousChild, newChildIndex, type$.IndexedSlot_nullable_Element);
    },
    $signature: 261
  };
  N.RootRenderObjectElement.prototype = {
    mount$2: function($parent, newSlot) {
      this.super$RenderObjectElement$mount($parent, newSlot);
    }
  };
  N.LeafRenderObjectElement.prototype = {
    forgetChild$1: function(child) {
      this.super$Element$forgetChild(child);
    },
    insertRenderObjectChild$2: function(child, slot) {
    },
    moveRenderObjectChild$3: function(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2: function(child, slot) {
    },
    debugDescribeChildren$0: function() {
      type$.RenderObjectWidget._as(N.Element.prototype.get$widget.call(this));
      return C.List_empty;
    }
  };
  N.SingleChildRenderObjectElement.prototype = {
    get$widget: function() {
      return type$.SingleChildRenderObjectWidget._as(N.RenderObjectElement.prototype.get$widget.call(this));
    },
    visitChildren$1: function(visitor) {
      var t1 = this._framework$_child;
      if (t1 != null)
        visitor.call$1(t1);
    },
    forgetChild$1: function(child) {
      this._framework$_child = null;
      this.super$Element$forgetChild(child);
    },
    mount$2: function($parent, newSlot) {
      var _this = this;
      _this.super$RenderObjectElement$mount($parent, newSlot);
      _this._framework$_child = _this.updateChild$3(_this._framework$_child, _this.get$widget().child, null);
    },
    update$1: function(_, newWidget) {
      var _this = this;
      _this.super$RenderObjectElement$update(0, newWidget);
      _this._framework$_child = _this.updateChild$3(_this._framework$_child, _this.get$widget().child, null);
    },
    insertRenderObjectChild$2: function(child, slot) {
      var t1 = this._renderObject;
      t1.toString;
      type$.RenderObjectWithChildMixin_RenderObject._as(t1).set$child(child);
    },
    moveRenderObjectChild$3: function(child, oldSlot, newSlot) {
    },
    removeRenderObjectChild$2: function(child, slot) {
      var t1 = this._renderObject;
      t1.toString;
      type$.RenderObjectWithChildMixin_RenderObject._as(t1).set$child(null);
    }
  };
  N.MultiChildRenderObjectElement.prototype = {
    get$widget: function() {
      return type$.MultiChildRenderObjectWidget._as(N.RenderObjectElement.prototype.get$widget.call(this));
    },
    get$renderObject: function() {
      return type$.ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject._as(N.RenderObjectElement.prototype.get$renderObject.call(this));
    },
    get$_framework$_children: function(_) {
      var t1 = this.__MultiChildRenderObjectElement__children;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_children")) : t1;
    },
    insertRenderObjectChild$2: function(child, slot) {
      var renderObject = this.get$renderObject(),
        t1 = slot.value;
      t1 = t1 == null ? null : t1.get$renderObject();
      renderObject.adoptChild$1(child);
      renderObject._insertIntoChildList$2$after(child, t1);
    },
    moveRenderObjectChild$3: function(child, oldSlot, newSlot) {
      var renderObject = this.get$renderObject(),
        t1 = newSlot.value;
      renderObject.move$2$after(child, t1 == null ? null : t1.get$renderObject());
    },
    removeRenderObjectChild$2: function(child, slot) {
      var renderObject = this.get$renderObject();
      renderObject._removeFromChildList$1(child);
      renderObject.dropChild$1(child);
    },
    visitChildren$1: function(visitor) {
      var t1, t2, t3, _i, child;
      for (t1 = this.get$_framework$_children(this), t2 = t1.length, t3 = this._forgottenChildren, _i = 0; _i < t2; ++_i) {
        child = t1[_i];
        if (!t3.contains$1(0, child))
          visitor.call$1(child);
      }
    },
    forgetChild$1: function(child) {
      this._forgottenChildren.add$1(0, child);
      this.super$Element$forgetChild(child);
    },
    inflateWidget$2: function(newWidget, newSlot) {
      return this.super$Element$inflateWidget(newWidget, newSlot);
    },
    mount$2: function($parent, newSlot) {
      var t1, children, t2, previousChild, i, newChild, _this = this;
      _this.super$RenderObjectElement$mount($parent, newSlot);
      t1 = _this.get$widget().children.length;
      children = P.List_List$filled(t1, $.$get$_NullElement_instance(), false, type$.Element_2);
      for (t2 = type$.IndexedSlot_nullable_Element, previousChild = null, i = 0; i < t1; ++i, previousChild = newChild) {
        newChild = _this.super$Element$inflateWidget(_this.get$widget().children[i], new N.IndexedSlot(previousChild, i, t2));
        children[i] = newChild;
      }
      _this.__MultiChildRenderObjectElement__children = children;
    },
    update$1: function(_, newWidget) {
      var t1, _this = this;
      _this.super$RenderObjectElement$update(0, newWidget);
      t1 = _this._forgottenChildren;
      _this.__MultiChildRenderObjectElement__children = _this.updateChildren$3$forgottenChildren(_this.get$_framework$_children(_this), _this.get$widget().children, t1);
      t1.clear$0(0);
    }
  };
  N.DebugCreator.prototype = {
    toString$0: function(_) {
      return this.element.debugGetCreatorChain$1(12);
    }
  };
  N.IndexedSlot.prototype = {
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return other instanceof N.IndexedSlot && this.index === other.index && J.$eq$(this.value, other.value);
    },
    get$hashCode: function(_) {
      return P.hashValues(this.index, this.value, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  N._NullElement.prototype = {
    performRebuild$0: function() {
    }
  };
  N._NullWidget.prototype = {
    createElement$0: function(_) {
      return H.throwExpression(P.UnimplementedError$(null));
    }
  };
  N._State_Object_Diagnosticable.prototype = {};
  D.GestureRecognizerFactory.prototype = {};
  D.GestureRecognizerFactoryWithHandlers.prototype = {
    constructor$0: function(_) {
      return this._constructor.call$0();
    },
    initializer$1: function(instance) {
      return this._initializer.call$1(instance);
    }
  };
  D.GestureDetector.prototype = {
    build$1: function(_, context) {
      var t1, _this = this,
        gestures = P.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizerFactory_GestureRecognizer);
      if (_this.onTapDown == null)
        if (_this.onTap == null)
          if (_this.onTapCancel == null)
            t1 = false;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        gestures.$indexSet(0, C.Type_TapGestureRecognizer_62h, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure(_this), new D.GestureDetector_build_closure0(_this), type$.GestureRecognizerFactoryWithHandlers_TapGestureRecognizer));
      if (_this.onDoubleTap != null)
        gestures.$indexSet(0, C.Type_DoubleTapGestureRecognizer_oyU, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure1(_this), new D.GestureDetector_build_closure2(_this), type$.GestureRecognizerFactoryWithHandlers_DoubleTapGestureRecognizer));
      if (_this.onLongPress == null)
        t1 = false;
      else
        t1 = true;
      if (t1)
        gestures.$indexSet(0, C.Type_LongPressGestureRecognizer_46y, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure3(_this), new D.GestureDetector_build_closure4(_this), type$.GestureRecognizerFactoryWithHandlers_LongPressGestureRecognizer));
      if (_this.onPanDown == null)
        t1 = _this.onPanUpdate != null || _this.onPanEnd != null || false;
      else
        t1 = true;
      if (t1)
        gestures.$indexSet(0, C.Type_PanGestureRecognizer_bbH, new D.GestureRecognizerFactoryWithHandlers(new D.GestureDetector_build_closure5(_this), new D.GestureDetector_build_closure6(_this), type$.GestureRecognizerFactoryWithHandlers_PanGestureRecognizer));
      return new D.RawGestureDetector(_this.child, gestures, _this.behavior, true, null, null);
    }
  };
  D.GestureDetector_build_closure.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new N.TapGestureRecognizer(C.Duration_100000, 18, C.GestureRecognizerState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), this.$this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 262
  };
  D.GestureDetector_build_closure0.prototype = {
    call$1: function(instance) {
      var t1 = this.$this;
      instance.onTapDown = t1.onTapDown;
      instance.onTapUp = null;
      instance.onTap = t1.onTap;
      instance.onTapCancel = t1.onTapCancel;
      instance.onTertiaryTapCancel = instance.onTertiaryTapUp = instance.onTertiaryTapDown = instance.onSecondaryTapCancel = instance.onSecondaryTapUp = instance.onSecondaryTapDown = instance.onSecondaryTap = null;
    },
    $signature: 263
  };
  D.GestureDetector_build_closure1.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new F.DoubleTapGestureRecognizer(P.LinkedHashMap_LinkedHashMap$_empty(t1, type$._TapTracker), this.$this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 264
  };
  D.GestureDetector_build_closure2.prototype = {
    call$1: function(instance) {
      instance.onDoubleTapDown = null;
      instance.onDoubleTap = this.$this.onDoubleTap;
      instance.onDoubleTapCancel = null;
    },
    $signature: 265
  };
  D.GestureDetector_build_closure3.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new T.LongPressGestureRecognizer(C.Duration_500000, null, C.GestureRecognizerState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), this.$this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 266
  };
  D.GestureDetector_build_closure4.prototype = {
    call$1: function(instance) {
      instance.onLongPress = this.$this.onLongPress;
      instance.onSecondaryLongPressUp = instance.onSecondaryLongPressEnd = instance.onSecondaryLongPressMoveUpdate = instance.onSecondaryLongPressStart = instance.onSecondaryLongPress = instance.onLongPressUp = instance.onLongPressEnd = instance.onLongPressMoveUpdate = instance.onLongPressStart = null;
    },
    $signature: 267
  };
  D.GestureDetector_build_closure5.prototype = {
    call$0: function() {
      var t1 = type$.int;
      return new O.PanGestureRecognizer(C.DragStartBehavior_1, C._DragState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.VelocityTracker), P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), this.$this, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 268
  };
  D.GestureDetector_build_closure6.prototype = {
    call$1: function(instance) {
      var t1 = this.$this;
      instance.onDown = t1.onPanDown;
      instance.onStart = null;
      instance.onUpdate = t1.onPanUpdate;
      instance.onEnd = t1.onPanEnd;
      instance.onCancel = null;
      instance.dragStartBehavior = C.DragStartBehavior_1;
    },
    $signature: 269
  };
  D.RawGestureDetector.prototype = {
    createState$0: function() {
      return new D.RawGestureDetectorState(C.Map_empty2, C._StateLifecycle_0);
    }
  };
  D.RawGestureDetectorState.prototype = {
    initState$0: function() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      t2 = t1.semantics;
      _this._gesture_detector$_semantics = t2 == null ? new D._DefaultSemanticsGestureDelegate(_this) : t2;
      _this._syncAll$1(t1.gestures);
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (!(oldWidget.semantics == null && _this._widget.semantics == null)) {
        t1 = _this._widget.semantics;
        _this._gesture_detector$_semantics = t1 == null ? new D._DefaultSemanticsGestureDelegate(_this) : t1;
      }
      _this._syncAll$1(_this._widget.gestures);
    },
    dispose$0: function(_) {
      var t1;
      for (t1 = this._recognizers, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1).dispose$0(0);
      this._recognizers = null;
      this.super$State$dispose(0);
    },
    _syncAll$1: function(gestures) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this._recognizers;
      t1.toString;
      _this._recognizers = P.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.GestureRecognizer);
      for (t2 = gestures.get$keys(gestures), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = _this._recognizers;
        t4.toString;
        t5 = t1.$index(0, t3);
        t4.$indexSet(0, t3, t5 == null ? gestures.$index(0, t3).constructor$0(0) : t5);
        t4 = gestures.$index(0, t3);
        t4.toString;
        t3 = _this._recognizers.$index(0, t3);
        t3.toString;
        t4.initializer$1(t3);
      }
      for (t2 = t1.get$keys(t1), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        if (!_this._recognizers.containsKey$1(0, t3))
          t1.$index(0, t3).dispose$0(0);
      }
    },
    _gesture_detector$_handlePointerDown$1: function($event) {
      var t1, t2;
      for (t1 = this._recognizers, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        t2._pointerToKind.$indexSet(0, $event.get$pointer(), $event.get$kind($event));
        if (t2.isPointerAllowed$1($event))
          t2.addAllowedPointer$1($event);
        else
          t2.handleNonAllowedPointer$1($event);
      }
    },
    _updateSemanticsForRenderObject$1: function(renderObject) {
      this._gesture_detector$_semantics.assignSemantics$1(renderObject);
    },
    build$1: function(_, context) {
      var t1 = this._widget,
        t2 = t1.behavior,
        result = T.Listener$(t2, t1.child, null, this.get$_gesture_detector$_handlePointerDown(), null);
      if (!t1.excludeFromSemantics)
        result = new D._GestureSemantics(t2, this.get$_updateSemanticsForRenderObject(), result, null);
      return result;
    }
  };
  D._GestureSemantics.prototype = {
    createRenderObject$1: function(context) {
      var renderObject = new E.RenderSemanticsGestureHandler(C.HitTestBehavior_0, null);
      renderObject.get$isRepaintBoundary();
      renderObject.get$alwaysNeedsCompositing();
      renderObject.__RenderObject__needsCompositing = false;
      renderObject.set$child(null);
      renderObject.behavior = this.behavior;
      this.assignSemantics.call$1(renderObject);
      return renderObject;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.behavior = this.behavior;
      this.assignSemantics.call$1(renderObject);
    }
  };
  D.SemanticsGestureDelegate.prototype = {
    toString$0: function(_) {
      return "SemanticsGestureDelegate()";
    }
  };
  D._DefaultSemanticsGestureDelegate.prototype = {
    assignSemantics$1: function(renderObject) {
      var _this = this,
        t1 = _this.detectorState._recognizers;
      t1.toString;
      renderObject.set$onTap(_this._getTapHandler$1(t1));
      renderObject.set$onLongPress(_this._getLongPressHandler$1(t1));
      renderObject.set$onHorizontalDragUpdate(_this._getHorizontalDragUpdateHandler$1(t1));
      renderObject.set$onVerticalDragUpdate(_this._getVerticalDragUpdateHandler$1(t1));
    },
    _getTapHandler$1: function(recognizers) {
      var tap = type$.nullable_TapGestureRecognizer._as(recognizers.$index(0, C.Type_TapGestureRecognizer_62h));
      if (tap == null)
        return null;
      return new D._DefaultSemanticsGestureDelegate__getTapHandler_closure(tap);
    },
    _getLongPressHandler$1: function(recognizers) {
      var longPress = type$.nullable_LongPressGestureRecognizer._as(recognizers.$index(0, C.Type_LongPressGestureRecognizer_46y));
      if (longPress == null)
        return null;
      return new D._DefaultSemanticsGestureDelegate__getLongPressHandler_closure(longPress);
    },
    _getHorizontalDragUpdateHandler$1: function(recognizers) {
      var horizontal = type$.nullable_HorizontalDragGestureRecognizer._as(recognizers.$index(0, C.Type_Vq1)),
        pan = type$.nullable_PanGestureRecognizer._as(recognizers.$index(0, C.Type_PanGestureRecognizer_bbH)),
        horizontalHandler = horizontal == null ? null : new D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure(horizontal),
        panHandler = pan == null ? null : new D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0(pan);
      if (horizontalHandler == null && panHandler == null)
        return null;
      return new D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1(horizontalHandler, panHandler);
    },
    _getVerticalDragUpdateHandler$1: function(recognizers) {
      var vertical = type$.nullable_VerticalDragGestureRecognizer._as(recognizers.$index(0, C.Type_mLh)),
        pan = type$.nullable_PanGestureRecognizer._as(recognizers.$index(0, C.Type_PanGestureRecognizer_bbH)),
        verticalHandler = vertical == null ? null : new D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure(vertical),
        panHandler = pan == null ? null : new D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0(pan);
      if (verticalHandler == null && panHandler == null)
        return null;
      return new D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1(verticalHandler, panHandler);
    }
  };
  D._DefaultSemanticsGestureDelegate__getTapHandler_closure.prototype = {
    call$0: function() {
      var t1 = this.tap,
        t2 = t1.onTapDown;
      if (t2 != null)
        t2.call$1(new N.TapDownDetails(C.Offset_0_0));
      t1 = t1.onTap;
      if (t1 != null)
        t1.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  D._DefaultSemanticsGestureDelegate__getLongPressHandler_closure.prototype = {
    call$0: function() {
      var t1 = this.longPress.onLongPress;
      if (t1 != null)
        t1.call$0();
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure.prototype = {
    call$1: function(details) {
      var t1 = this.horizontal,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(new O.DragDownDetails(C.Offset_0_0));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(new O.DragStartDetails(C.Offset_0_0));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(new O.DragEndDetails(C.Velocity_Offset_0_0));
    },
    $signature: 14
  };
  D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0.prototype = {
    call$1: function(details) {
      var t1 = this.pan,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(new O.DragDownDetails(C.Offset_0_0));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(new O.DragStartDetails(C.Offset_0_0));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(new O.DragEndDetails(C.Velocity_Offset_0_0));
    },
    $signature: 14
  };
  D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1.prototype = {
    call$1: function(details) {
      var t1 = this.horizontalHandler;
      if (t1 != null)
        t1.call$1(details);
      t1 = this.panHandler;
      if (t1 != null)
        t1.call$1(details);
    },
    $signature: 14
  };
  D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure.prototype = {
    call$1: function(details) {
      var t1 = this.vertical,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(new O.DragDownDetails(C.Offset_0_0));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(new O.DragStartDetails(C.Offset_0_0));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(new O.DragEndDetails(C.Velocity_Offset_0_0));
    },
    $signature: 14
  };
  D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0.prototype = {
    call$1: function(details) {
      var t1 = this.pan,
        t2 = t1.onDown;
      if (t2 != null)
        t2.call$1(new O.DragDownDetails(C.Offset_0_0));
      t2 = t1.onStart;
      if (t2 != null)
        t2.call$1(new O.DragStartDetails(C.Offset_0_0));
      t2 = t1.onUpdate;
      if (t2 != null)
        t2.call$1(details);
      t1 = t1.onEnd;
      if (t1 != null)
        t1.call$1(new O.DragEndDetails(C.Velocity_Offset_0_0));
    },
    $signature: 14
  };
  D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1.prototype = {
    call$1: function(details) {
      var t1 = this.verticalHandler;
      if (t1 != null)
        t1.call$1(details);
      t1 = this.panHandler;
      if (t1 != null)
        t1.call$1(details);
    },
    $signature: 14
  };
  T.HeroFlightDirection.prototype = {
    toString$0: function(_) {
      return this._heroes$_name;
    }
  };
  T.Hero.prototype = {
    createState$0: function() {
      return new T._HeroState(new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), C._StateLifecycle_0);
    }
  };
  T.Hero__allHeroesFor_inviteHero.prototype = {
    call$2: function(hero, tag) {
      var heroState;
      type$.Hero._as(hero._widget);
      heroState = type$._HeroState._as(hero.state);
      if (!this.isUserGestureTransition || false)
        this.result.$indexSet(0, tag, heroState);
      else
        heroState.endFlight$0();
    },
    $signature: 271
  };
  T.Hero__allHeroesFor_visitor.prototype = {
    call$1: function(element) {
      var tag, heroRoute, t1, _this = this,
        widget = element.get$widget();
      if (widget instanceof T.Hero) {
        type$.StatefulElement._as(element);
        tag = widget.tag;
        if (K.Navigator_of(element) === _this.navigator)
          _this.inviteHero.call$2(element, tag);
        else {
          heroRoute = T.ModalRoute_of(element, type$.nullable_Object);
          if (heroRoute != null)
            t1 = heroRoute.get$isCurrent();
          else
            t1 = false;
          if (t1)
            _this.inviteHero.call$2(element, tag);
        }
      }
      element.visitChildren$1(_this);
    },
    $signature: 4
  };
  T._HeroState.prototype = {
    startFlight$1$shouldIncludedChildInPlaceholder: function(shouldIncludedChildInPlaceholder) {
      var t1, _this = this;
      _this._shouldIncludeChild = shouldIncludedChildInPlaceholder;
      t1 = _this._framework$_element.get$renderObject();
      t1.toString;
      _this.setState$1(new T._HeroState_startFlight_closure(_this, type$.RenderBox._as(t1)));
    },
    startFlight$0: function() {
      return this.startFlight$1$shouldIncludedChildInPlaceholder(false);
    },
    endFlight$1$keepPlaceholder: function(keepPlaceholder) {
      var _this = this;
      if (keepPlaceholder || _this._placeholderSize == null)
        return;
      _this._placeholderSize = null;
      if (_this._framework$_element != null)
        _this.setState$1(new T._HeroState_endFlight_closure());
    },
    endFlight$0: function() {
      return this.endFlight$1$keepPlaceholder(false);
    },
    build$1: function(_, context) {
      var t3, _this = this, _null = null,
        t1 = _this._placeholderSize,
        t2 = t1 == null,
        showPlaceholder = !t2;
      if (showPlaceholder)
        _this._widget.toString;
      if (showPlaceholder && !_this._shouldIncludeChild) {
        t2 = t1._dx;
        return T.SizedBox$(_null, t1._dy, t2);
      }
      t3 = t2 ? _null : t1._dx;
      t1 = t2 ? _null : t1._dy;
      return T.SizedBox$(new T.Offstage(showPlaceholder, new U.TickerMode(t2, new T.KeyedSubtree(_this._widget.child, _this._heroes$_key), _null), _null), t1, t3);
    }
  };
  T._HeroState_startFlight_closure.prototype = {
    call$0: function() {
      var t1 = this.box._size;
      t1.toString;
      this.$this._placeholderSize = t1;
    },
    $signature: 0
  };
  T._HeroState_endFlight_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  T._HeroFlightManifest.prototype = {
    get$animation: function(_) {
      var t1, _this = this;
      if (_this.type === C.HeroFlightDirection_0) {
        t1 = _this.toRoute._animationProxy;
        t1.toString;
      } else {
        t1 = _this.fromRoute._animationProxy;
        t1.toString;
      }
      return S.CurvedAnimation$(C.Cubic_ifx, t1, _this.isDiverted ? null : new Z.FlippedCurve(C.Cubic_ifx));
    },
    createHeroRectTween$2$begin$end: function(begin, end) {
      var t1;
      this.toHero._widget.toString;
      t1 = this.createRectTween.call$2(begin, end);
      return t1 == null ? new R.RectTween(begin, end) : t1;
    },
    get$fromHeroLocation: function() {
      var _this = this,
        t1 = _this.___HeroFlightManifest_fromHeroLocation;
      if (t1 == null) {
        t1 = _this.fromHero._framework$_element;
        t1.toString;
        t1 = T._HeroFlightManifest__boundingBoxFor(t1, $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this.fromRoute._subtreeKey));
        if (_this.___HeroFlightManifest_fromHeroLocation == null)
          _this.___HeroFlightManifest_fromHeroLocation = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("fromHeroLocation"));
      }
      return t1;
    },
    get$toHeroLocation: function() {
      var _this = this,
        t1 = _this.___HeroFlightManifest_toHeroLocation;
      if (t1 == null) {
        t1 = _this.toHero._framework$_element;
        t1.toString;
        t1 = T._HeroFlightManifest__boundingBoxFor(t1, $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this.toRoute._subtreeKey));
        if (_this.___HeroFlightManifest_toHeroLocation == null)
          _this.___HeroFlightManifest_toHeroLocation = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("toHeroLocation"));
      }
      return t1;
    },
    get$isValid: function() {
      var _this = this,
        t1 = _this.___HeroFlightManifest_isValid;
      if (t1 == null) {
        t1 = _this.get$toHeroLocation();
        if (t1.get$isFinite(t1))
          if (!_this.isDiverted) {
            t1 = _this.get$fromHeroLocation();
            t1 = t1.get$isFinite(t1);
          } else
            t1 = true;
        else
          t1 = false;
        if (_this.___HeroFlightManifest_isValid == null)
          _this.___HeroFlightManifest_isValid = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("isValid"));
      }
      return t1;
    },
    toString$0: function(_) {
      var _this = this,
        t1 = _this.fromHero;
      t1 = "_HeroFlightManifest(" + _this.type.toString$0(0) + " tag: " + t1._widget.tag.toString$0(0) + " from route: " + _this.fromRoute._settings.toString$0(0) + " to route: " + _this.toRoute._settings.toString$0(0) + " with hero: " + t1.toString$0(0) + " to " + _this.toHero.toString$0(0) + ")";
      return t1 + (_this.get$isValid() ? "" : ", INVALID");
    }
  };
  T._HeroFlight.prototype = {
    get$heroRectTween: function() {
      var t1 = this.___HeroFlight_heroRectTween;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("heroRectTween")) : t1;
    },
    get$_proxyAnimation: function() {
      var t1 = this.___HeroFlight__proxyAnimation;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_proxyAnimation")) : t1;
    },
    get$manifest: function() {
      var t1 = this.___HeroFlight_manifest;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("manifest")) : t1;
    },
    _buildOverlay$1: function(context) {
      var t1, t2, t3, t4, t5, _this = this;
      if (_this.shuttle == null) {
        t1 = _this.get$manifest();
        t2 = _this.get$manifest();
        t2 = t2.get$animation(t2);
        t3 = _this.get$manifest();
        t4 = _this.get$manifest().fromHero._framework$_element;
        t4.toString;
        t5 = _this.get$manifest().toHero._framework$_element;
        t5.toString;
        _this.shuttle = t1.shuttleBuilder.call$5(context, t2, t3.type, t4, t5);
      }
      return K.AnimatedBuilder$(_this.get$_proxyAnimation(), new T._HeroFlight__buildOverlay_closure(_this), _this.shuttle);
    },
    _performAnimationUpdate$1: function($status) {
      var _this = this,
        t1 = $status === C.AnimationStatus_3;
      if (t1 || $status === C.AnimationStatus_0) {
        _this.get$_proxyAnimation().set$parent(0, null);
        _this.overlayEntry.remove$0(0);
        _this.overlayEntry = null;
        _this.get$manifest().fromHero.endFlight$1$keepPlaceholder(t1);
        _this.get$manifest().toHero.endFlight$1$keepPlaceholder($status === C.AnimationStatus_0);
        _this.onFlightEnded.call$1(_this);
        _this.get$_proxyAnimation().removeListener$1(0, _this.get$onTick());
      }
    },
    _handleAnimationUpdate$1: function($status) {
      var t2, _this = this,
        t1 = _this.get$manifest().fromRoute._navigator$_navigator;
      if ((t1 == null ? null : t1.userGestureInProgressNotifier._change_notifier$_value) !== true) {
        _this._performAnimationUpdate$1($status);
        return;
      }
      if (_this._scheduledPerformAnimtationUpdate)
        return;
      t1 = _this.get$manifest().fromRoute._navigator$_navigator;
      t1.toString;
      _this._scheduledPerformAnimtationUpdate = true;
      t2 = t1.userGestureInProgressNotifier.ChangeNotifier__listeners;
      t2._insertBefore$3$updateFirst(t2._collection$_first, new B._ListenerEntry(new T._HeroFlight__handleAnimationUpdate_delayedPerformAnimtationUpdate(_this, t1)), false);
    },
    onTick$0: function() {
      var t1, toHeroOrigin, t2, t3, t4, t5, t6, t7, _this = this,
        toHeroBox = !_this._aborted && _this.get$manifest().toHero._framework$_element != null ? type$.nullable_RenderBox._as(_this.get$manifest().toHero._framework$_element.get$renderObject()) : null;
      if (toHeroBox != null && toHeroBox._node$_owner != null && toHeroBox._size != null) {
        t1 = _this.get$manifest();
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1.toRoute._subtreeKey);
        t1 = t1 == null ? null : t1.get$renderObject();
        toHeroOrigin = T.MatrixUtils_transformPoint(toHeroBox.getTransformTo$1(0, type$.nullable_RenderBox._as(t1)), C.Offset_0_0);
      } else
        toHeroOrigin = null;
      t1 = toHeroOrigin != null;
      if (t1 && isFinite(toHeroOrigin._dx) && isFinite(toHeroOrigin._dy)) {
        t2 = _this.get$heroRectTween().end;
        if (!J.$eq$(toHeroOrigin, new P.Offset(t2.left, t2.top))) {
          t2 = _this.get$heroRectTween().end;
          t3 = t2.right;
          t4 = t2.left;
          t5 = t2.bottom;
          t2 = t2.top;
          t6 = toHeroOrigin._dx;
          t7 = toHeroOrigin._dy;
          _this.___HeroFlight_heroRectTween = _this.get$manifest().createHeroRectTween$2$begin$end(_this.get$heroRectTween().begin, new P.Rect(t6, t7, t6 + (t3 - t4), t7 + (t5 - t2)));
        }
      } else {
        t2 = _this._heroOpacity;
        if (t2.get$status(t2) === C.AnimationStatus_3) {
          t2 = _this.get$_proxyAnimation();
          t3 = $.$get$_HeroFlight__reverseTween();
          t4 = _this.get$_proxyAnimation();
          t4 = t4.get$value(t4);
          t5 = H._instanceType(t3)._eval$1("_ChainedEvaluation<Animatable.T>");
          _this._heroOpacity = new R._AnimatedEvaluation(type$.Animation_double._as(t2), new R._ChainedEvaluation(new R.CurveTween(new Z.Interval(t4, 1)), t3, t5), t5._eval$1("_AnimatedEvaluation<Animatable.T>"));
        }
      }
      if (t1)
        t1 = !(isFinite(toHeroOrigin._dx) && isFinite(toHeroOrigin._dy));
      else
        t1 = true;
      _this._aborted = t1;
    },
    toString$0: function(_) {
      var _this = this,
        from = _this.get$manifest().fromRoute._settings,
        to = _this.get$manifest().toRoute._settings;
      return "HeroFlight(for: " + _this.get$manifest().fromHero._widget.tag.toString$0(0) + ", from: " + from.toString$0(0) + ", to: " + to.toString$0(0) + " " + H.S(_this.get$_proxyAnimation()._animations$_parent) + ")";
    }
  };
  T._HeroFlight__buildOverlay_closure.prototype = {
    call$2: function(context, child) {
      var _null = null,
        t1 = this.$this,
        t2 = t1.get$heroRectTween(),
        t3 = t1.get$_proxyAnimation();
      t3 = t2.transform$1(0, t3.get$value(t3));
      t3.toString;
      t2 = t1.get$manifest().navigatorSize;
      t1 = t1._heroOpacity;
      return T.Positioned$(t2._dy - t3.bottom, new T.IgnorePointer(true, _null, new T.RepaintBoundary(new T.Opacity(t1.get$value(t1), child, _null), _null), _null), _null, _null, t3.left, t2._dx - t3.right, t3.top, _null);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 272
  };
  T._HeroFlight__handleAnimationUpdate_delayedPerformAnimtationUpdate.prototype = {
    call$0: function() {
      var t2,
        t1 = this.$this;
      t1._scheduledPerformAnimtationUpdate = false;
      this.navigator.userGestureInProgressNotifier.removeListener$1(0, this);
      t2 = t1.get$_proxyAnimation();
      t1._performAnimationUpdate$1(t2.get$status(t2));
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  T.HeroController.prototype = {
    didStopUserGesture$0: function() {
      var t1, t2, invalidFlights, _i;
      if (this._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value)
        return;
      t1 = this._flights;
      t1 = t1.get$values(t1);
      t2 = H._instanceType(t1)._eval$1("WhereIterable<Iterable.E>");
      invalidFlights = P.List_List$of(new H.WhereIterable(t1, new T.HeroController_didStopUserGesture_isInvalidFlight(), t2), false, t2._eval$1("Iterable.E"));
      for (t1 = invalidFlights.length, _i = 0; _i < t1; ++_i)
        invalidFlights[_i]._handleAnimationUpdate$1(C.AnimationStatus_0);
    },
    _maybeStartHeroTransition$4: function(fromRoute, toRoute, flightType, isUserGestureTransition) {
      var t1, animation;
      if (toRoute != fromRoute && toRoute instanceof V.PageRoute && fromRoute instanceof V.PageRoute) {
        if (flightType === C.HeroFlightDirection_0) {
          t1 = toRoute._animationProxy;
          t1.toString;
          animation = t1;
        } else {
          t1 = fromRoute._animationProxy;
          t1.toString;
          animation = t1;
        }
        switch (flightType) {
          case C.HeroFlightDirection_1:
            if (animation.get$value(animation) === 0)
              return;
            break;
          case C.HeroFlightDirection_0:
            if (animation.get$value(animation) === 1)
              return;
            break;
        }
        if (isUserGestureTransition && flightType === C.HeroFlightDirection_1 && true)
          this._startHeroTransition$5(fromRoute, toRoute, animation, flightType, isUserGestureTransition);
        else {
          t1 = toRoute._animationProxy;
          toRoute.set$offstage(t1.get$value(t1) === 0);
          $.WidgetsBinding__instance.SchedulerBinding__postFrameCallbacks.push(new T.HeroController__maybeStartHeroTransition_closure(this, fromRoute, toRoute, animation, flightType, isUserGestureTransition));
        }
      }
    },
    _startHeroTransition$5: function(from, to, animation, flightType, isUserGestureTransition) {
      var $navigator, t1, overlay, navigatorRenderObject, fromSubtreeContext, fromHeroes, toSubtreeContext, toHeroes, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, tag, fromHero, toHero, existingFlight, manifest, t17, t18, t19, shouldIncludeChildInPlacehold, _this = this, _null = null,
        _s8_ = "manifest",
        _s15_ = "_proxyAnimation",
        _s13_ = "heroRectTween";
      to.set$offstage(false);
      $navigator = _this._navigator$_navigator;
      t1 = $navigator == null;
      overlay = t1 ? _null : $navigator.get$_overlayKey().get$currentState();
      if (t1 || overlay == null)
        return;
      navigatorRenderObject = $navigator._framework$_element.get$renderObject();
      if (!(navigatorRenderObject instanceof S.RenderBox))
        return;
      fromSubtreeContext = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, from._subtreeKey);
      fromHeroes = fromSubtreeContext != null ? T.Hero__allHeroesFor(fromSubtreeContext, isUserGestureTransition, $navigator) : C.Map_empty1;
      toSubtreeContext = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, to._subtreeKey);
      toHeroes = toSubtreeContext != null ? T.Hero__allHeroesFor(toSubtreeContext, isUserGestureTransition, $navigator) : C.Map_empty1;
      for (t1 = fromHeroes.get$entries(fromHeroes), t1 = t1.get$iterator(t1), t2 = _this.get$_defaultHeroFlightShuttleBuilder(), t3 = _this.createRectTween, t4 = _this._flights, t5 = type$.LabeledGlobalKey__OverlayEntryWidgetState, t6 = type$.LinkedList__ListenerEntry, t7 = _this.get$_handleFlightEnded(), t8 = type$.JSArray_of_void_Function_AnimationStatus, t9 = type$.ObserverList_of_void_Function_AnimationStatus, t10 = type$.JSArray_of_void_Function, t11 = type$.ObserverList_of_void_Function, t12 = type$.Tween_double, t13 = type$.Animation_double, t14 = t12._eval$1("_AnimatedEvaluation<Animatable.T>"), t15 = type$.ReverseTween_nullable_Rect; t1.moveNext$0();) {
        t16 = t1.get$current(t1);
        tag = t16.key;
        fromHero = t16.value;
        toHero = toHeroes.$index(0, tag);
        existingFlight = t4.$index(0, tag);
        if (toHero == null)
          manifest = _null;
        else {
          t16 = navigatorRenderObject._size;
          t16.toString;
          toHero._widget.toString;
          t17 = fromHero._widget;
          t17.toString;
          manifest = new T._HeroFlightManifest(flightType, overlay, t16, from, to, fromHero, toHero, t3, t2, isUserGestureTransition, existingFlight != null);
        }
        if (manifest != null && manifest.get$isValid()) {
          toHeroes.remove$1(0, tag);
          if (existingFlight != null) {
            t16 = existingFlight.___HeroFlight_manifest;
            if ((t16 == null ? H.throwExpression(H.LateError$fieldNI(_s8_)) : t16).type === C.HeroFlightDirection_0 && manifest.type === C.HeroFlightDirection_1) {
              t16 = existingFlight.___HeroFlight__proxyAnimation;
              if (t16 == null)
                t16 = H.throwExpression(H.LateError$fieldNI(_s15_));
              t16.set$parent(0, new S.ReverseAnimation(manifest.get$animation(manifest), new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), 0));
              t16 = existingFlight.___HeroFlight_heroRectTween;
              if (t16 == null)
                t16 = H.throwExpression(H.LateError$fieldNI(_s13_));
              existingFlight.___HeroFlight_heroRectTween = new R.ReverseTween(t16, t16.end, t16.begin, t15);
            } else if (t16.type === C.HeroFlightDirection_1 && manifest.type === C.HeroFlightDirection_0) {
              t16 = existingFlight.___HeroFlight__proxyAnimation;
              if (t16 == null)
                t16 = H.throwExpression(H.LateError$fieldNI(_s15_));
              t17 = manifest.get$animation(manifest);
              t18 = existingFlight.___HeroFlight_manifest;
              if (t18 == null)
                t18 = H.throwExpression(H.LateError$fieldNI(_s8_));
              t18 = t18.get$animation(t18);
              t18 = t18.get$value(t18);
              t16.set$parent(0, new R._AnimatedEvaluation(t13._as(t17), new R.Tween(t18, 1, t12), t14));
              t16 = existingFlight.___HeroFlight_manifest;
              t17 = t16 == null ? H.throwExpression(H.LateError$fieldNI(_s8_)) : t16;
              t18 = manifest.toHero;
              if (t17.fromHero !== t18) {
                t16.fromHero.endFlight$1$keepPlaceholder(true);
                t18.startFlight$0();
                t16 = existingFlight.___HeroFlight_manifest;
                if (t16 == null)
                  t16 = H.throwExpression(H.LateError$fieldNI(_s8_));
                t17 = existingFlight.___HeroFlight_heroRectTween;
                existingFlight.___HeroFlight_heroRectTween = t16.createHeroRectTween$2$begin$end((t17 == null ? H.throwExpression(H.LateError$fieldNI(_s13_)) : t17).end, manifest.get$toHeroLocation());
              } else {
                t17 = existingFlight.___HeroFlight_heroRectTween;
                t18 = (t17 == null ? H.throwExpression(H.LateError$fieldNI(_s13_)) : t17).end;
                existingFlight.___HeroFlight_heroRectTween = t16.createHeroRectTween$2$begin$end(t18, t17.begin);
              }
            } else {
              t17 = existingFlight.___HeroFlight_heroRectTween;
              if (t17 == null)
                t17 = H.throwExpression(H.LateError$fieldNI(_s13_));
              t18 = existingFlight.___HeroFlight__proxyAnimation;
              if (t18 == null)
                t18 = H.throwExpression(H.LateError$fieldNI(_s15_));
              existingFlight.___HeroFlight_heroRectTween = t16.createHeroRectTween$2$begin$end(t17.transform$1(0, t18.get$value(t18)), manifest.get$toHeroLocation());
              existingFlight.shuttle = null;
              t16 = manifest.type;
              t17 = existingFlight.___HeroFlight__proxyAnimation;
              if (t16 === C.HeroFlightDirection_1) {
                if (t17 == null)
                  t17 = H.throwExpression(H.LateError$fieldNI(_s15_));
                t17.set$parent(0, new S.ReverseAnimation(manifest.get$animation(manifest), new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), 0));
              } else {
                if (t17 == null)
                  t17 = H.throwExpression(H.LateError$fieldNI(_s15_));
                t17.set$parent(0, manifest.get$animation(manifest));
              }
              t17 = existingFlight.___HeroFlight_manifest;
              (t17 == null ? H.throwExpression(H.LateError$fieldNI(_s8_)) : t17).fromHero.endFlight$1$keepPlaceholder(true);
              t17 = existingFlight.___HeroFlight_manifest;
              (t17 == null ? H.throwExpression(H.LateError$fieldNI(_s8_)) : t17).toHero.endFlight$1$keepPlaceholder(true);
              manifest.fromHero.startFlight$1$shouldIncludedChildInPlaceholder(t16 === C.HeroFlightDirection_0);
              manifest.toHero.startFlight$0();
              t16 = existingFlight.overlayEntry._key.get$currentState();
              if (t16 != null)
                t16._markNeedsBuild$0();
            }
            existingFlight.___HeroFlight_manifest = manifest;
          } else {
            t16 = new T._HeroFlight(t7, C.C__AlwaysCompleteAnimation);
            t17 = H.setRuntimeTypeInfo([], t8);
            t18 = new R.ObserverList(t17, t9);
            t19 = new S.ProxyAnimation(t18, new R.ObserverList(H.setRuntimeTypeInfo([], t10), t11), 0);
            t19._status = C.AnimationStatus_0;
            t19._animations$_value = 0;
            t19.didRegisterListener$0();
            t18._isDirty = true;
            t17.push(t16.get$_handleAnimationUpdate());
            t16.___HeroFlight__proxyAnimation = t19;
            t16.___HeroFlight_manifest = manifest;
            switch (manifest.type) {
              case C.HeroFlightDirection_1:
                t19.set$parent(0, new S.ReverseAnimation(manifest.get$animation(manifest), new R.ObserverList(H.setRuntimeTypeInfo([], t8), t9), 0));
                shouldIncludeChildInPlacehold = false;
                break;
              case C.HeroFlightDirection_0:
                t19.set$parent(0, manifest.get$animation(manifest));
                shouldIncludeChildInPlacehold = true;
                break;
              default:
                shouldIncludeChildInPlacehold = _null;
            }
            t17 = t16.___HeroFlight_manifest;
            t18 = t17 == null ? H.throwExpression(H.LateError$fieldNI(_s8_)) : t17;
            t17 = t17.get$fromHeroLocation();
            t19 = t16.___HeroFlight_manifest;
            t16.___HeroFlight_heroRectTween = t18.createHeroRectTween$2$begin$end(t17, (t19 == null ? H.throwExpression(H.LateError$fieldNI(_s8_)) : t19).get$toHeroLocation());
            t17 = t16.___HeroFlight_manifest;
            (t17 == null ? H.throwExpression(H.LateError$fieldNI(_s8_)) : t17).fromHero.startFlight$1$shouldIncludedChildInPlaceholder(shouldIncludeChildInPlacehold);
            t17 = t16.___HeroFlight_manifest;
            (t17 == null ? H.throwExpression(H.LateError$fieldNI(_s8_)) : t17).toHero.startFlight$0();
            t17 = t16.___HeroFlight_manifest;
            if (t17 == null)
              t17 = H.throwExpression(H.LateError$fieldNI(_s8_));
            t18 = new X.OverlayEntry(t16.get$_buildOverlay(), false, new N.LabeledGlobalKey(_null, t5), new P.LinkedList(t6));
            t16.overlayEntry = t18;
            t17.overlay.insert$1(0, t18);
            t18 = t16.___HeroFlight__proxyAnimation;
            t17 = t18 == null ? H.throwExpression(H.LateError$fieldNI(_s15_)) : t18;
            t17.didRegisterListener$0();
            t17 = t17.AnimationLocalListenersMixin__listeners;
            t17._isDirty = true;
            t17._observer_list$_list.push(t16.get$onTick());
            t4.$indexSet(0, tag, t16);
          }
        } else if (existingFlight != null)
          existingFlight._aborted = true;
      }
      for (t1 = toHeroes.get$values(toHeroes), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1).endFlight$0();
    },
    _handleFlightEnded$1: function(flight) {
      this._flights.remove$1(0, flight.get$manifest().fromHero._widget.tag);
    },
    _defaultHeroFlightShuttleBuilder$5: function(flightContext, animation, flightDirection, fromHeroContext, toHeroContext) {
      return type$.Hero._as(toHeroContext.get$widget()).child;
    }
  };
  T.HeroController_didStopUserGesture_isInvalidFlight.prototype = {
    call$1: function(flight) {
      var t1;
      if (flight.get$manifest().isUserGestureTransition)
        if (flight.get$manifest().type === C.HeroFlightDirection_1) {
          t1 = flight.get$_proxyAnimation();
          t1 = t1.get$status(t1) === C.AnimationStatus_0;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $signature: 275
  };
  T.HeroController__maybeStartHeroTransition_closure.prototype = {
    call$1: function(value) {
      var _this = this;
      _this.$this._startHeroTransition$5(_this.from, _this.to, _this.animation, _this.flightType, _this.isUserGestureTransition);
    },
    $signature: 6
  };
  L.Icon.prototype = {
    build$1: function(_, context) {
      var textDirection, iconThemeData, t2, iconTheme, t3, iconSize, iconOpacity, iconColor, iconWidget, _null = null,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      textDirection = t1.textDirection;
      iconThemeData = Y.IconTheme__getInheritedIconThemeData(context).resolve$1(context);
      t1 = iconThemeData.color;
      t2 = t1 == null;
      if (!t2 && iconThemeData.get$opacity(iconThemeData) != null && iconThemeData.size != null)
        iconTheme = iconThemeData;
      else {
        t3 = iconThemeData.size;
        if (t3 == null)
          t3 = 24;
        if (t2)
          t1 = C.Color_4278190080;
        t2 = iconThemeData.get$opacity(iconThemeData);
        iconTheme = iconThemeData.copyWith$3$color$opacity$size(t1, t2 == null ? C.IconThemeData_Color_4278190080_1_24.get$opacity(C.IconThemeData_Color_4278190080_1_24) : t2, t3);
      }
      iconSize = iconTheme.size;
      iconOpacity = iconTheme.get$opacity(iconTheme);
      if (iconOpacity == null)
        iconOpacity = 1;
      t1 = iconTheme.color;
      t1.toString;
      iconColor = t1;
      if (iconOpacity !== 1)
        iconColor = P.Color$fromARGB(C.JSNumber_methods.round$0(255 * ((iconColor.get$value(iconColor) >>> 24 & 255) / 255 * iconOpacity)), iconColor.get$value(iconColor) >>> 16 & 255, iconColor.get$value(iconColor) >>> 8 & 255, iconColor.get$value(iconColor) & 255);
      t1 = H.Primitives_stringFromCharCode(58727);
      iconWidget = T.RichText$(_null, _null, C.TextOverflow_3, true, _null, Q.TextSpan$(_null, A.TextStyle$(_null, _null, iconColor, _null, _null, _null, _null, _null, "MaterialIcons", _null, _null, iconSize, _null, _null, _null, _null, false, _null, _null, _null, _null, _null, _null, _null), t1), C.TextAlign_4, textDirection, _null, 1, C.TextWidthBasis_0);
      return T.Semantics$(_null, new T.ExcludeSemantics(true, T.SizedBox$(T.Center$(iconWidget, _null, _null), iconSize, iconSize), _null), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    }
  };
  X.IconData.prototype = {
    $eq: function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      if (other instanceof X.IconData)
        t1 = true;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return P.hashValues(58727, "MaterialIcons", null, false, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      return "IconData(U+" + C.JSString_methods.padLeft$2(C.JSInt_methods.toRadixString$1(58727, 16).toUpperCase(), 5, "0") + ")";
    }
  };
  Y.IconTheme.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return !this.data.$eq(0, oldWidget.data);
    }
  };
  Y.IconTheme_merge_closure.prototype = {
    call$1: function(context) {
      return Y.IconTheme$(this.child, Y.IconTheme__getInheritedIconThemeData(context).merge$1(this.data), this.key);
    },
    $signature: 276
  };
  T.IconThemeData.prototype = {
    copyWith$3$color$opacity$size: function(color, opacity, size) {
      var _this = this,
        t1 = color == null ? _this.color : color,
        t2 = opacity == null ? _this.get$opacity(_this) : opacity;
      return new T.IconThemeData(t1, t2, size == null ? _this.size : size);
    },
    merge$1: function(other) {
      return this.copyWith$3$color$opacity$size(other.color, other.get$opacity(other), other.size);
    },
    resolve$1: function(context) {
      return this;
    },
    get$opacity: function(_) {
      var t1 = this._opacity;
      return t1 == null ? null : C.JSNumber_methods.clamp$2(t1, 0, 1);
    },
    $eq: function(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      return other instanceof T.IconThemeData && J.$eq$(other.color, _this.color) && other.get$opacity(other) == _this.get$opacity(_this) && other.size == _this.size;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.color, _this.get$opacity(_this), _this.size, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    }
  };
  T._IconThemeData_Object_Diagnosticable.prototype = {};
  G.DecorationTween.prototype = {
    lerp$1: function(t) {
      var t1 = Z.Decoration_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  G.BorderRadiusTween.prototype = {
    lerp$1: function(t) {
      var t1 = K.BorderRadius_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  G.TextStyleTween.prototype = {
    lerp$1: function(t) {
      var t1 = A.TextStyle_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  G.ImplicitlyAnimatedWidget.prototype = {};
  G.ImplicitlyAnimatedWidgetState.prototype = {
    get$_controller: function() {
      var _this = this,
        t1 = _this.__ImplicitlyAnimatedWidgetState__controller;
      if (t1 == null) {
        t1 = _this._widget.duration;
        t1 = G.AnimationController$(null, t1, null, _this);
        if (_this.__ImplicitlyAnimatedWidgetState__controller == null)
          _this.__ImplicitlyAnimatedWidgetState__controller = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("_controller"));
      }
      return t1;
    },
    get$_animation: function() {
      var _this = this,
        t1 = _this.__ImplicitlyAnimatedWidgetState__animation;
      if (t1 == null) {
        t1 = _this.get$_controller();
        t1 = _this.__ImplicitlyAnimatedWidgetState__animation = S.CurvedAnimation$(_this._widget.curve, t1, null);
      }
      return t1;
    },
    initState$0: function() {
      var _this = this;
      _this.super$State$initState();
      _this.get$_controller().addStatusListener$1(new G.ImplicitlyAnimatedWidgetState_initState_closure(_this));
      _this._constructTweens$0();
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._widget.curve !== oldWidget.curve) {
        t1 = _this.get$_controller();
        _this.__ImplicitlyAnimatedWidgetState__animation = S.CurvedAnimation$(_this._widget.curve, t1, null);
      }
      _this.get$_controller().duration = _this._widget.duration;
      if (_this._constructTweens$0()) {
        _this.forEachTween$1(new G.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure(_this));
        t1 = _this.get$_controller();
        t1.set$value(0, 0);
        t1.forward$0(0);
      }
    },
    dispose$0: function(_) {
      this.get$_controller().dispose$0(0);
      this.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$dispose(0);
    },
    _updateTween$2: function(tween, targetValue) {
      var t1;
      if (tween == null)
        return;
      t1 = this.get$_animation();
      tween.set$begin(tween.transform$1(0, t1.get$value(t1)));
      tween.set$end(0, targetValue);
    },
    _constructTweens$0: function() {
      var t1 = {};
      t1.shouldStartAnimation = false;
      this.forEachTween$1(new G.ImplicitlyAnimatedWidgetState__constructTweens_closure(t1, this));
      return t1.shouldStartAnimation;
    }
  };
  G.ImplicitlyAnimatedWidgetState_initState_closure.prototype = {
    call$1: function($status) {
      switch ($status) {
        case C.AnimationStatus_3:
          this.$this._widget.toString;
          break;
        case C.AnimationStatus_0:
        case C.AnimationStatus_1:
        case C.AnimationStatus_2:
          break;
      }
    },
    $signature: 8
  };
  G.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure.prototype = {
    call$3: function(tween, targetValue, $constructor) {
      this.$this._updateTween$2(tween, targetValue);
      return tween;
    },
    $signature: 90
  };
  G.ImplicitlyAnimatedWidgetState__constructTweens_closure.prototype = {
    call$3: function(tween, targetValue, $constructor) {
      var t1;
      if (tween == null)
        tween = $constructor.call$1(targetValue);
      t1 = tween.end;
      if (!J.$eq$(targetValue, t1 == null ? tween.begin : t1))
        this._box_0.shouldStartAnimation = true;
      return tween;
    },
    $signature: 90
  };
  G.AnimatedWidgetBaseState.prototype = {
    initState$0: function() {
      this.super$ImplicitlyAnimatedWidgetState$initState();
      var t1 = this.get$_controller();
      t1.didRegisterListener$0();
      t1 = t1.AnimationLocalListenersMixin__listeners;
      t1._isDirty = true;
      t1._observer_list$_list.push(this.get$_handleAnimationChanged());
    },
    _handleAnimationChanged$0: function() {
      this.setState$1(new G.AnimatedWidgetBaseState__handleAnimationChanged_closure());
    }
  };
  G.AnimatedWidgetBaseState__handleAnimationChanged_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  G.AnimatedDefaultTextStyle.prototype = {
    createState$0: function() {
      return new G._AnimatedDefaultTextStyleState(null, C._StateLifecycle_0);
    }
  };
  G._AnimatedDefaultTextStyleState.prototype = {
    forEachTween$1: function(visitor) {
      this._implicit_animations$_style = type$.nullable_TextStyleTween._as(visitor.call$3(this._implicit_animations$_style, this._widget.style, new G._AnimatedDefaultTextStyleState_forEachTween_closure()));
    },
    build$1: function(_, context) {
      var t2,
        t1 = this._implicit_animations$_style;
      t1.toString;
      t2 = this.get$_animation();
      t2 = t1.transform$1(0, t2.get$value(t2));
      return L.DefaultTextStyle$(this._widget.child, null, C.TextOverflow_0, true, t2, null, null, C.TextWidthBasis_0);
    }
  };
  G._AnimatedDefaultTextStyleState_forEachTween_closure.prototype = {
    call$1: function(value) {
      return new G.TextStyleTween(type$.TextStyle._as(value), null);
    },
    $signature: 278
  };
  G.AnimatedPhysicalModel.prototype = {
    createState$0: function() {
      return new G._AnimatedPhysicalModelState(null, C._StateLifecycle_0);
    }
  };
  G._AnimatedPhysicalModelState.prototype = {
    forEachTween$1: function(visitor) {
      var t1, _this = this;
      _this._borderRadius = type$.nullable_BorderRadiusTween._as(visitor.call$3(_this._borderRadius, _this._widget.borderRadius, new G._AnimatedPhysicalModelState_forEachTween_closure()));
      _this._implicit_animations$_elevation = type$.nullable_Tween_double._as(visitor.call$3(_this._implicit_animations$_elevation, _this._widget.elevation, new G._AnimatedPhysicalModelState_forEachTween_closure0()));
      t1 = type$.nullable_ColorTween;
      _this._implicit_animations$_color = t1._as(visitor.call$3(_this._implicit_animations$_color, _this._widget.color, new G._AnimatedPhysicalModelState_forEachTween_closure1()));
      _this._implicit_animations$_shadowColor = t1._as(visitor.call$3(_this._implicit_animations$_shadowColor, _this._widget.shadowColor, new G._AnimatedPhysicalModelState_forEachTween_closure2()));
    },
    build$1: function(_, context) {
      var t4, t5, t6, t7, t8, _this = this,
        t1 = _this._widget,
        t2 = t1.child,
        t3 = t1.shape;
      t1 = t1.clipBehavior;
      t4 = _this._borderRadius;
      t4.toString;
      t5 = _this.get$_animation();
      t5 = t4.transform$1(0, t5.get$value(t5));
      t4 = _this._implicit_animations$_elevation;
      t4.toString;
      t6 = _this.get$_animation();
      t6 = t4.transform$1(0, t6.get$value(t6));
      t4 = _this._widget.color;
      t7 = _this._implicit_animations$_shadowColor;
      t7.toString;
      t8 = _this.get$_animation();
      t8 = t7.transform$1(0, t8.get$value(t8));
      t8.toString;
      t7 = t8;
      return new T.PhysicalModel(t3, t1, t5, t6, t4, t7, t2, null);
    }
  };
  G._AnimatedPhysicalModelState_forEachTween_closure.prototype = {
    call$1: function(value) {
      return new G.BorderRadiusTween(type$.BorderRadius._as(value), null);
    },
    $signature: 279
  };
  G._AnimatedPhysicalModelState_forEachTween_closure0.prototype = {
    call$1: function(value) {
      return new R.Tween(H._asDouble(value), null, type$.Tween_double);
    },
    $signature: 77
  };
  G._AnimatedPhysicalModelState_forEachTween_closure1.prototype = {
    call$1: function(value) {
      return new R.ColorTween(type$.Color._as(value), null);
    },
    $signature: 56
  };
  G._AnimatedPhysicalModelState_forEachTween_closure2.prototype = {
    call$1: function(value) {
      return new R.ColorTween(type$.Color._as(value), null);
    },
    $signature: 56
  };
  G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0: function(_) {
      this.super$State$dispose(0);
    },
    didChangeDependencies$0: function() {
      var t2,
        t1 = this.SingleTickerProviderStateMixin__ticker;
      if (t1 != null) {
        t2 = this._framework$_element;
        t2.toString;
        t1.set$muted(0, !U.TickerMode_of(t2));
      }
      this.super$State$didChangeDependencies();
    }
  };
  S.InheritedNotifier.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return oldWidget.notifier !== this.notifier;
    },
    createElement$0: function(_) {
      var t1 = type$.Element_2,
        t2 = P.HashMap_HashMap(t1, type$.nullable_Object),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      t1 = new S._InheritedNotifierElement(t2, t3, this, C._ElementLifecycle_0, P.HashSet_HashSet(t1), H._instanceType(this)._eval$1("_InheritedNotifierElement<InheritedNotifier.T>"));
      t2 = this.notifier.ChangeNotifier__listeners;
      t2._insertBefore$3$updateFirst(t2._collection$_first, new B._ListenerEntry(t1.get$_handleUpdate()), false);
      return t1;
    }
  };
  S._InheritedNotifierElement.prototype = {
    get$widget: function() {
      return this.$ti._eval$1("InheritedNotifier<1>")._as(N.InheritedElement.prototype.get$widget.call(this));
    },
    update$1: function(_, newWidget) {
      var t1, t2, _this = this,
        oldNotifier = _this.$ti._eval$1("InheritedNotifier<1>")._as(N.InheritedElement.prototype.get$widget.call(_this)).notifier,
        newNotifier = newWidget.notifier;
      if (oldNotifier !== newNotifier) {
        t1 = _this.get$_handleUpdate();
        oldNotifier.removeListener$1(0, t1);
        t2 = newNotifier.ChangeNotifier__listeners;
        t2._insertBefore$3$updateFirst(t2._collection$_first, new B._ListenerEntry(t1), false);
      }
      _this.super$ProxyElement$update(0, newWidget);
    },
    build$0: function(_) {
      var _this = this;
      if (_this._inherited_notifier$_dirty) {
        _this.super$InheritedElement$notifyClients(_this.$ti._eval$1("InheritedNotifier<1>")._as(N.InheritedElement.prototype.get$widget.call(_this)));
        _this._inherited_notifier$_dirty = false;
      }
      return _this.super$ProxyElement$build(0);
    },
    _handleUpdate$0: function() {
      this._inherited_notifier$_dirty = true;
      this.markNeedsBuild$0();
    },
    notifyClients$1: function(oldWidget) {
      this.super$InheritedElement$notifyClients(oldWidget);
      this._inherited_notifier$_dirty = false;
    },
    unmount$0: function() {
      var _this = this;
      _this.$ti._eval$1("InheritedNotifier<1>")._as(N.InheritedElement.prototype.get$widget.call(_this)).notifier.removeListener$1(0, _this.get$_handleUpdate());
      _this.super$Element$unmount();
    }
  };
  M.InheritedTheme.prototype = {};
  L._Pending.prototype = {};
  L._loadAll_closure.prototype = {
    call$1: function(value) {
      return this._box_0.completedValue = value;
    },
    $signature: 26
  };
  L._loadAll_closure0.prototype = {
    call$1: function(p) {
      return p.futureValue;
    },
    $signature: 280
  };
  L._loadAll_closure1.prototype = {
    call$1: function(values) {
      var t1, t2, t3, i;
      for (t1 = J.getInterceptor$asx(values), t2 = this._box_1, t3 = this.output, i = 0; i < t1.get$length(values); ++i)
        t3.$indexSet(0, H.createRuntimeType(H._instanceType(t2.pendingList[i].delegate)._eval$1("LocalizationsDelegate.T")), t1.$index(values, i));
      return t3;
    },
    $signature: 281
  };
  L.LocalizationsDelegate.prototype = {
    toString$0: function(_) {
      return "LocalizationsDelegate[" + H.createRuntimeType(H._instanceType(this)._eval$1("LocalizationsDelegate.T")).toString$0(0) + "]";
    }
  };
  L._WidgetsLocalizationsDelegate.prototype = {
    isSupported$1: function(locale) {
      return true;
    },
    load$1: function(_, locale) {
      return new O.SynchronousFuture(C.C_DefaultWidgetsLocalizations, type$.SynchronousFuture_WidgetsLocalizations);
    },
    shouldReload$1: function(old) {
      return false;
    },
    toString$0: function(_) {
      return "DefaultWidgetsLocalizations.delegate(en_US)";
    }
  };
  L.DefaultWidgetsLocalizations.prototype = {$isWidgetsLocalizations: 1};
  L._LocalizationsScope.prototype = {
    updateShouldNotify$1: function(old) {
      return this.typeToResources !== old.typeToResources;
    }
  };
  L.Localizations.prototype = {
    createState$0: function() {
      return new L._LocalizationsState(new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), P.LinkedHashMap_LinkedHashMap$_empty(type$.Type, type$.dynamic), C._StateLifecycle_0);
    }
  };
  L._LocalizationsState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this.load$1(0, this._widget.locale);
    },
    _anyDelegatesShouldReload$1: function(old) {
      var delegates, oldDelegates, i, delegate, oldDelegate, rti,
        t1 = this._widget.delegates,
        t2 = old.delegates;
      if (t1.length !== t2.length)
        return true;
      delegates = H.setRuntimeTypeInfo(t1.slice(0), H._arrayInstanceType(t1));
      oldDelegates = H.setRuntimeTypeInfo(t2.slice(0), H._arrayInstanceType(t2));
      for (i = 0; i < delegates.length; ++i) {
        delegate = delegates[i];
        oldDelegate = oldDelegates[i];
        rti = delegate instanceof H.Closure ? H.closureFunctionType(delegate) : null;
        t1 = H.createRuntimeType(rti == null ? H.instanceType(delegate) : rti);
        rti = oldDelegate instanceof H.Closure ? H.closureFunctionType(oldDelegate) : null;
        if (t1 === H.createRuntimeType(rti == null ? H.instanceType(oldDelegate) : rti)) {
          delegate.shouldReload$1(oldDelegate);
          t1 = false;
        } else
          t1 = true;
        if (t1)
          return true;
      }
      return false;
    },
    didUpdateWidget$1: function(old) {
      var t1, _this = this;
      _this.super$State$didUpdateWidget(old);
      if (_this._widget.locale.$eq(0, old.locale)) {
        _this._widget.toString;
        t1 = _this._anyDelegatesShouldReload$1(old);
      } else
        t1 = true;
      if (t1)
        _this.load$1(0, _this._widget.locale);
    },
    load$1: function(_, locale) {
      var typeToResourcesFuture, _this = this, t1 = {},
        delegates = _this._widget.delegates,
        t2 = delegates.length;
      if (t2 === 0) {
        _this._localizations$_locale = locale;
        return;
      }
      t1.typeToResources = null;
      typeToResourcesFuture = L._loadAll(locale, delegates).then$1$1(0, new L._LocalizationsState_load_closure(t1), type$.Map_Type_dynamic);
      t1 = t1.typeToResources;
      if (t1 != null) {
        _this._typeToResources = t1;
        _this._localizations$_locale = locale;
      } else {
        ++$.RendererBinding__instance.RendererBinding__firstFrameDeferredCount;
        typeToResourcesFuture.then$1$1(0, new L._LocalizationsState_load_closure0(_this, locale), type$.void);
      }
    },
    get$_localizations$_textDirection: function() {
      type$.WidgetsLocalizations._as(J.$index$asx(this._typeToResources, C.Type_WidgetsLocalizations_43h));
      return C.TextDirection_1;
    },
    build$1: function(_, context) {
      var t1, t2, t3, _this = this, _null = null;
      if (_this._localizations$_locale == null)
        return M.Container$(_null, _null, _null, _null);
      t1 = _this.get$_localizations$_textDirection();
      _this._localizations$_locale.toString;
      t2 = _this._typeToResources;
      t3 = _this.get$_localizations$_textDirection();
      return T.Semantics$(_null, new L._LocalizationsScope(_this, t2, T.Directionality$(_this._widget.child, t3), _this._localizedResourcesScopeKey), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, t1);
    }
  };
  L._LocalizationsState_load_closure.prototype = {
    call$1: function(value) {
      return this._box_0.typeToResources = value;
    },
    $signature: 282
  };
  L._LocalizationsState_load_closure0.prototype = {
    call$1: function(value) {
      var t1 = this.$this;
      if (t1._framework$_element != null)
        t1.setState$1(new L._LocalizationsState_load__closure(t1, value, this.locale));
      $.RendererBinding__instance.allowFirstFrame$0();
    },
    $signature: 283
  };
  L._LocalizationsState_load__closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._typeToResources = this.value;
      t1._localizations$_locale = this.locale;
    },
    $signature: 0
  };
  F.MediaQueryData.prototype = {
    $eq: function(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(_this))
        return false;
      if (other instanceof F.MediaQueryData)
        if (other.size.$eq(0, _this.size))
          if (other.devicePixelRatio === _this.devicePixelRatio)
            if (other.textScaleFactor === _this.textScaleFactor)
              if (other.platformBrightness === _this.platformBrightness)
                if (other.padding.$eq(0, _this.padding))
                  if (other.viewPadding.$eq(0, _this.viewPadding))
                    if (other.viewInsets.$eq(0, _this.viewInsets))
                      t1 = other.highContrast === _this.highContrast && other.disableAnimations === _this.disableAnimations && other.invertColors === _this.invertColors && other.accessibleNavigation === _this.accessibleNavigation && other.boldText === _this.boldText && other.navigationMode === _this.navigationMode;
                    else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      var _this = this;
      return P.hashValues(_this.size, _this.devicePixelRatio, _this.textScaleFactor, _this.platformBrightness, _this.padding, _this.viewPadding, _this.viewInsets, false, _this.highContrast, _this.disableAnimations, _this.invertColors, _this.accessibleNavigation, _this.boldText, _this.navigationMode, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd, C.C__HashEnd);
    },
    toString$0: function(_) {
      var _this = this;
      return "MediaQueryData(" + C.JSArray_methods.join$1(H.setRuntimeTypeInfo(["size: " + _this.size.toString$0(0), "devicePixelRatio: " + C.JSNumber_methods.toStringAsFixed$1(_this.devicePixelRatio, 1), "textScaleFactor: " + C.JSInt_methods.toStringAsFixed$1(_this.textScaleFactor, 1), "platformBrightness: " + _this.platformBrightness.toString$0(0), "padding: " + _this.padding.toString$0(0), "viewPadding: " + _this.viewPadding.toString$0(0), "viewInsets: " + _this.viewInsets.toString$0(0), "alwaysUse24HourFormat: false", "accessibleNavigation: " + _this.accessibleNavigation, "highContrast: " + _this.highContrast, "disableAnimations: " + _this.disableAnimations, "invertColors: " + _this.invertColors, "boldText: " + _this.boldText, "navigationMode: " + Y.describeEnum(_this.navigationMode)], type$.JSArray_String), ", ") + ")";
    }
  };
  F.MediaQuery.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return !this.data.$eq(0, oldWidget.data);
    }
  };
  F.NavigationMode.prototype = {
    toString$0: function(_) {
      return this._media_query$_name;
    }
  };
  X.ModalBarrier.prototype = {
    build$1: function(_, context) {
      var t1, _null = null;
      switch (U.defaultTargetPlatform()) {
        case C.TargetPlatform_0:
        case C.TargetPlatform_1:
        case C.TargetPlatform_3:
        case C.TargetPlatform_5:
          break;
        case C.TargetPlatform_2:
        case C.TargetPlatform_4:
          break;
      }
      t1 = this.color;
      return new T.BlockSemantics(new T.ExcludeSemantics(true, new X._ModalBarrierGestureDetector(T.Semantics$(_null, T.MouseRegion$(new T.ConstrainedBox(C.BoxConstraints_ALM, t1 == null ? _null : new T.ColoredBox(t1, _null, _null), _null), C.SystemMouseCursor_basic, _null, _null, true), false, _null, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), new X.ModalBarrier_build_closure(this, new X.ModalBarrier_build_handleDismiss(context)), _null), _null), _null);
    }
  };
  X.ModalBarrier_build_handleDismiss.prototype = {
    call$0: function() {
      K.Navigator_of(this.context).maybePop$1(null);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  X.ModalBarrier_build_closure.prototype = {
    call$0: function() {
      V.SystemSound_play(C.SystemSoundType_1);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  X._AnyTapGestureRecognizer.prototype = {
    isPointerAllowed$1: function($event) {
      if (this.onAnyTapUp == null)
        return false;
      return this.super$GestureRecognizer$isPointerAllowed($event);
    },
    handleTapDown$1$down: function(down) {
    },
    handleTapUp$2$down$up: function(down, up) {
      var t1 = this.onAnyTapUp;
      if (t1 != null)
        t1.call$0();
    },
    handleTapCancel$3$cancel$down$reason: function(cancel, down, reason) {
    }
  };
  X._ModalBarrierSemanticsDelegate.prototype = {
    assignSemantics$1: function(renderObject) {
      renderObject.set$onTap(this.onDismiss);
    }
  };
  X._AnyTapGestureRecognizerFactory.prototype = {
    constructor$0: function(_) {
      var t1 = type$.int;
      return new X._AnyTapGestureRecognizer(C.Duration_100000, 18, C.GestureRecognizerState_0, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.GestureArenaEntry), P.HashSet_HashSet(t1), null, null, P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.PointerDeviceKind));
    },
    initializer$1: function(instance) {
      instance.onAnyTapUp = this.onAnyTapUp;
    }
  };
  X._ModalBarrierGestureDetector.prototype = {
    build$1: function(_, context) {
      var t1 = this.onDismiss;
      return new D.RawGestureDetector(this.child, P.LinkedHashMap_LinkedHashMap$_literal([C.Type__AnyTapGestureRecognizer_5RQ, new X._AnyTapGestureRecognizerFactory(t1)], type$.Type, type$.GestureRecognizerFactory_GestureRecognizer), C.HitTestBehavior_1, false, new X._ModalBarrierSemanticsDelegate(t1), null);
    }
  };
  K.RoutePopDisposition.prototype = {
    toString$0: function(_) {
      return this._navigator$_name;
    }
  };
  K.Route.prototype = {
    get$overlayEntries: function() {
      return C.List_empty6;
    },
    install$0: function() {
    },
    didPush$0: function() {
      var t1 = M.TickerFuture$complete();
      t1.then$1$1(0, new K.Route_didPush_closure(this), type$.void);
      return t1;
    },
    didAdd$0: function() {
      M.TickerFuture$complete().then$1$1(0, new K.Route_didAdd_closure(this), type$.void);
    },
    didReplace$1: function(oldRoute) {
    },
    willPop$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this;
      var $async$willPop$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self.get$isFirst() ? C.RoutePopDisposition_2 : C.RoutePopDisposition_0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$willPop$0, $async$completer);
    },
    get$willHandlePopInternally: function() {
      return false;
    },
    didPop$1: function(result) {
      this.didComplete$1(result);
      return true;
    },
    didComplete$1: function(result) {
      this._popCompleter.complete$1(0, null);
    },
    didPopNext$1: function(nextRoute) {
    },
    didChangeNext$1: function(nextRoute) {
    },
    didChangePrevious$1: function(previousRoute) {
    },
    changedInternalState$0: function() {
    },
    changedExternalState$0: function() {
    },
    dispose$0: function(_) {
      this._navigator$_navigator = null;
    },
    get$isCurrent: function() {
      var currentRouteEntry,
        t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      t1 = t1._history;
      t1 = new H.CastList(t1, H._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
      currentRouteEntry = t1.lastWhere$2$orElse(t1, new K.Route_isCurrent_closure(), new K.Route_isCurrent_closure0());
      if (currentRouteEntry == null)
        return false;
      return currentRouteEntry.route === this;
    },
    get$isFirst: function() {
      var currentRouteEntry,
        t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      t1 = t1._history;
      t1 = new H.CastList(t1, H._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
      currentRouteEntry = t1.firstWhere$2$orElse(t1, new K.Route_isFirst_closure(), new K.Route_isFirst_closure0());
      if (currentRouteEntry == null)
        return false;
      return currentRouteEntry.route === this;
    },
    get$hasActiveRouteBelow: function() {
      var t2, _i, entry, t3,
        t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      for (t1 = t1._history, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        entry = t1[_i];
        if (entry.route === this)
          return false;
        t3 = entry.currentState.index;
        if (t3 <= 9 && t3 >= 1)
          return true;
      }
      return false;
    },
    get$isActive: function() {
      var t1 = this._navigator$_navigator;
      if (t1 == null)
        return false;
      t1 = t1._history;
      t1 = new H.CastList(t1, H._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
      t1 = t1.firstWhere$2$orElse(t1, new K.Route_isActive_closure(this), new K.Route_isActive_closure0());
      return (t1 == null ? null : t1.get$isPresent()) === true;
    }
  };
  K.Route_didPush_closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this._navigator$_navigator;
      if (t1 != null)
        t1.focusScopeNode.requestFocus$0();
    },
    $signature: 17
  };
  K.Route_didAdd_closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this._navigator$_navigator;
      if (t1 != null)
        t1.focusScopeNode.requestFocus$0();
    },
    $signature: 17
  };
  K.Route_isCurrent_closure.prototype = {
    call$1: function(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 18
  };
  K.Route_isCurrent_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 2
  };
  K.Route_isFirst_closure.prototype = {
    call$1: function(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 18
  };
  K.Route_isFirst_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 2
  };
  K.Route_isActive_closure.prototype = {
    call$1: function(e) {
      return e != null && K._RouteEntry_isRoutePredicate(this.$this).call$1(e);
    },
    $signature: 18
  };
  K.Route_isActive_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 2
  };
  K.RouteSettings.prototype = {
    toString$0: function(_) {
      return 'RouteSettings("' + H.S(this.name) + '", ' + H.S(this.$arguments) + ")";
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  K.NavigatorObserver.prototype = {};
  K.HeroControllerScope.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return oldWidget.controller != this.controller;
    }
  };
  K.RouteTransitionRecord.prototype = {};
  K.TransitionDelegate.prototype = {};
  K.DefaultTransitionDelegate.prototype = {};
  K.Navigator.prototype = {
    createState$0: function() {
      var _null = null,
        t1 = type$.LinkedList__ListenerEntry,
        t2 = type$._NavigatorObservation;
      return new K.NavigatorState(H.setRuntimeTypeInfo([], type$.JSArray__RouteEntry), new K._HistoryProperty(new P.LinkedList(t1)), P.ListQueue$(_null, t2), P.ListQueue$(_null, t2), O.FocusScopeNode$(true, "Navigator Scope", false), new U.RestorableNum(0, new P.LinkedList(t1), type$.RestorableNum_int), new B.ValueNotifier(false, new P.LinkedList(t1)), P.LinkedHashSet_LinkedHashSet$_empty(type$.int), _null, P.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), _null, true, _null, _null, C._StateLifecycle_0);
    },
    onGenerateInitialRoutes$2: function(arg0, arg1) {
      return this.onGenerateInitialRoutes.call$2(arg0, arg1);
    }
  };
  K.Navigator_defaultGenerateInitialRoutes_closure.prototype = {
    call$1: function(route) {
      return route == null;
    },
    $signature: 285
  };
  K._RouteLifecycle.prototype = {
    toString$0: function(_) {
      return this._navigator$_name;
    }
  };
  K._NotAnnounced.prototype = {};
  K._RouteEntry.prototype = {
    get$restorationId: function() {
      var t1 = this.restorationInformation;
      if (t1 != null)
        return "r+" + t1.get$restorationScopeId();
      return null;
    },
    handlePush$4$isNewFirst$navigator$previous$previousPresent: function(isNewFirst, $navigator, previous, previousPresent) {
      var t2, routeFuture, t3, _this = this,
        previousState = _this.currentState,
        t1 = _this.route;
      t1._navigator$_navigator = $navigator;
      t1.install$0();
      t2 = _this.currentState;
      if (t2 === C._RouteLifecycle_3 || t2 === C._RouteLifecycle_4) {
        routeFuture = t1.didPush$0();
        _this.currentState = C._RouteLifecycle_5;
        routeFuture.whenCompleteOrCancel$1(new K._RouteEntry_handlePush_closure(_this, $navigator));
      } else {
        t1.didReplace$1(previous);
        _this.currentState = C._RouteLifecycle_7;
      }
      if (isNewFirst)
        t1.didChangeNext$1(null);
      t2 = previousState === C._RouteLifecycle_6 || previousState === C._RouteLifecycle_4;
      t3 = $navigator._observedRouteAdditions;
      if (t2)
        t3._add$1(0, new K._NavigatorReplaceObservation(t1, previousPresent));
      else
        t3._add$1(0, new K._NavigatorPushObservation(t1, previousPresent));
    },
    pop$1$1: function(_, result) {
      var _this = this;
      _this.doingPop = true;
      if (_this.route.didPop$1(result) && _this.doingPop)
        _this.currentState = C._RouteLifecycle_8;
      _this.doingPop = false;
    },
    pop$1: function($receiver, result) {
      return this.pop$1$1($receiver, result, type$.dynamic);
    },
    remove$0: function(_) {
      if (this.currentState.index >= 9)
        return;
      this._reportRemovalToObserver = true;
      this.currentState = C._RouteLifecycle_9;
    },
    dispose$0: function(_) {
      var t1, t2, t3, mountedEntries, t4, t5, _box_1 = {};
      this.currentState = C._RouteLifecycle_13;
      t1 = this.route;
      t2 = t1.get$overlayEntries();
      t3 = new K._RouteEntry_dispose_closure();
      mountedEntries = new H.WhereIterable(t2, t3, H._arrayInstanceType(t2)._eval$1("WhereIterable<1>"));
      if (!mountedEntries.get$iterator(mountedEntries).moveNext$0())
        t1.dispose$0(0);
      else {
        _box_1.mounted = mountedEntries.get$length(mountedEntries);
        for (t1 = C.JSArray_methods.get$iterator(t2), t3 = new H.WhereIterator(t1, t3); t3.moveNext$0();) {
          t2 = {};
          t4 = t1.get$current(t1);
          t2._listener = null;
          t5 = new K._RouteEntry_dispose__listener_get(t2);
          new K._RouteEntry_dispose__listener_set(t2).call$1(new K._RouteEntry_dispose_closure0(_box_1, this, t4, t5));
          t5 = t5.call$0();
          t4 = t4.ChangeNotifier__listeners;
          t4._insertBefore$3$updateFirst(t4._collection$_first, new B._ListenerEntry(t5), false);
        }
      }
    },
    get$isPresent: function() {
      var t1 = this.currentState.index;
      return t1 <= 9 && t1 >= 1;
    }
  };
  K._RouteEntry_handlePush_closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1.currentState === C._RouteLifecycle_5) {
        t1.currentState = C._RouteLifecycle_7;
        this.navigator._flushHistoryUpdates$0();
      }
    },
    $signature: 0
  };
  K._RouteEntry_dispose_closure.prototype = {
    call$1: function(e) {
      return e._mounted;
    },
    $signature: 286
  };
  K._RouteEntry_dispose__listener_set.prototype = {
    call$1: function(t1) {
      return this._box_0._listener = t1;
    },
    $signature: 80
  };
  K._RouteEntry_dispose__listener_get.prototype = {
    call$0: function() {
      var t1 = this._box_0._listener;
      return t1 == null ? H.throwExpression(H.LateError$localNI("listener")) : t1;
    },
    $signature: 82
  };
  K._RouteEntry_dispose_closure0.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this._box_1;
      --t1.mounted;
      _this.entry.removeListener$1(0, _this._listener_get.call$0());
      if (t1.mounted === 0)
        _this.$this.route.dispose$0(0);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  K._RouteEntry_isRoutePredicate_closure.prototype = {
    call$1: function(entry) {
      return entry.route === this.route;
    },
    $signature: 41
  };
  K._NavigatorObservation.prototype = {};
  K._NavigatorPushObservation.prototype = {
    notify$1: function(observer) {
      observer._maybeStartHeroTransition$4(this.secondaryRoute, this.primaryRoute, C.HeroFlightDirection_0, false);
    }
  };
  K._NavigatorPopObservation.prototype = {
    notify$1: function(observer) {
      if (!observer._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value)
        observer._maybeStartHeroTransition$4(this.primaryRoute, this.secondaryRoute, C.HeroFlightDirection_1, false);
    }
  };
  K._NavigatorRemoveObservation.prototype = {
    notify$1: function(observer) {
    }
  };
  K._NavigatorReplaceObservation.prototype = {
    notify$1: function(observer) {
      var t1 = this.primaryRoute,
        t2 = t1.get$isCurrent();
      if (t2)
        observer._maybeStartHeroTransition$4(this.secondaryRoute, t1, C.HeroFlightDirection_0, false);
    }
  };
  K.NavigatorState.prototype = {
    get$_overlayKey: function() {
      var t1 = this.__NavigatorState__overlayKey;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_overlayKey")) : t1;
    },
    get$_effectiveObservers: function() {
      var t1 = this.__NavigatorState__effectiveObservers;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_effectiveObservers")) : t1;
    },
    initState$0: function() {
      var t1, _i, _this = this;
      _this.super$State$initState();
      for (t1 = _this._widget.observers, _i = 0; false; ++_i)
        t1[_i]._navigator$_navigator = _this;
      _this.__NavigatorState__effectiveObservers = _this._widget.observers;
      t1 = _this._framework$_element.getElementForInheritedWidgetOfExactType$1$0(type$.HeroControllerScope);
      t1 = t1 == null ? null : t1.get$widget();
      type$.nullable_HeroControllerScope._as(t1);
      _this._updateHeroController$1(t1 == null ? null : t1.controller);
    },
    restoreState$2: function(oldBucket, initialRestore) {
      var t1, t2, _i, page, t3, entry, initialRoute, _this = this;
      _this.registerForRestoration$2(_this._rawNextPagelessRestorationScopeId, "id");
      t1 = _this._serializableHistory;
      _this.registerForRestoration$2(t1, "history");
      for (; t2 = _this._history, t2.length !== 0;)
        J.dispose$0$x(t2.pop());
      _this.__NavigatorState__overlayKey = new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_OverlayState);
      C.JSArray_methods.addAll$1(t2, t1.restoreEntriesForPage$2(null, _this));
      _this._widget.toString;
      _i = 0;
      for (; false; ++_i) {
        page = C.List_empty4[_i];
        t2 = _this._framework$_element;
        t2.toString;
        t2 = page.createRoute$1(t2);
        t3 = $.$get$_RouteEntry_notAnnounced();
        entry = new K._RouteEntry(t2, null, C._RouteLifecycle_1, t3, t3, t3);
        _this._history.push(entry);
        C.JSArray_methods.addAll$1(_this._history, t1.restoreEntriesForPage$2(entry, _this));
      }
      if (t1._pageToPagelessRoutes == null) {
        t1 = _this._widget;
        initialRoute = t1.initialRoute;
        t2 = _this._history;
        C.JSArray_methods.addAll$1(t2, J.map$1$1$ax(t1.onGenerateInitialRoutes$2(_this, initialRoute), new K.NavigatorState_restoreState_closure(_this), type$._RouteEntry));
      }
      _this._flushHistoryUpdates$0();
    },
    didToggleBucket$1: function(oldBucket) {
      var t1, _this = this;
      _this.super$RestorationMixin$didToggleBucket(oldBucket);
      t1 = _this._serializableHistory;
      if (_this.RestorationMixin__bucket != null)
        t1.update$1(0, _this._history);
      else
        t1.clear$0(0);
    },
    get$restorationId: function() {
      return this._widget.restorationScopeId;
    },
    didChangeDependencies$0: function() {
      var host, t1, t2, _i, _this = this;
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies();
      host = _this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.HeroControllerScope);
      _this._updateHeroController$1(host == null ? null : host.controller);
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].route.changedExternalState$0();
    },
    _updateHeroController$1: function(newHeroController) {
      var t2, _this = this,
        t1 = _this._heroControllerFromScope;
      if (t1 != newHeroController) {
        if (newHeroController != null)
          newHeroController._navigator$_navigator = _this;
        t2 = t1 == null;
        if ((t2 ? null : t1._navigator$_navigator) === _this)
          if (!t2)
            t1._navigator$_navigator = null;
        _this._heroControllerFromScope = newHeroController;
        _this._updateEffectiveObservers$0();
      }
    },
    _updateEffectiveObservers$0: function() {
      var _this = this,
        t1 = _this._heroControllerFromScope,
        t2 = _this._widget;
      if (t1 != null)
        _this.__NavigatorState__effectiveObservers = C.JSArray_methods.$add(t2.observers, H.setRuntimeTypeInfo([t1], type$.JSArray_NavigatorObserver));
      else
        _this.__NavigatorState__effectiveObservers = t2.observers;
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, _i, t2, _this = this;
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget(oldWidget);
      t1 = oldWidget.observers;
      if (t1 !== _this._widget.observers) {
        for (_i = 0; false; ++_i)
          t1[_i]._navigator$_navigator = null;
        for (t1 = _this._widget.observers, _i = 0; false; ++_i)
          t1[_i]._navigator$_navigator = _this;
        _this._updateEffectiveObservers$0();
      }
      _this._widget.toString;
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].route.changedExternalState$0();
    },
    dispose$0: function(_) {
      var t1, t2, _i, _this = this;
      _this._updateHeroController$1(null);
      for (t1 = _this.get$_effectiveObservers(), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i]._navigator$_navigator = null;
      _this.focusScopeNode.dispose$0(0);
      for (t1 = _this._history, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
        J.dispose$0$x(t1[_i]);
      _this.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$dispose(0);
    },
    get$_allRouteOverlayEntries: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, _i;
        return function $async$get$_allRouteOverlayEntries($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._history, t2 = t1.length, _i = 0;
              case 2:
                // for condition
                if (!(_i < t1.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return P._IterationMarker_yieldStar(t1[_i].route.get$overlayEntries());
              case 5:
                // after yield
              case 3:
                // for update
                t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.OverlayEntry);
    },
    _flushHistoryUpdates$1$rearrangeOverlay: function(rearrangeOverlay) {
      var t2, poppedRoute, next, canRemoveOrAdd, seenTopActiveRoute, index0, t3, t4, previous0, lastEntry, routeName, _i, _i0, _this = this, _null = null,
        t1 = _this._history,
        index = t1.length - 1,
        entry = t1[index],
        previous = index > 0 ? t1[index - 1] : _null,
        toBeDisposed = H.setRuntimeTypeInfo([], type$.JSArray__RouteEntry);
      for (t1 = _this._observedRouteDeletions, t2 = _this._observedRouteAdditions, poppedRoute = _null, next = poppedRoute, canRemoveOrAdd = false, seenTopActiveRoute = false; index >= 0;) {
        switch (entry.currentState) {
          case C._RouteLifecycle_1:
            index0 = _this._getIndexBefore$2(index - 1, K.navigator__RouteEntry_isPresentPredicate$closure());
            t3 = index0 >= 0 ? _this._history[index0] : _null;
            t3 = t3 == null ? _null : t3.route;
            t4 = entry.route;
            t4._navigator$_navigator = _this;
            t4.install$0();
            entry.currentState = C._RouteLifecycle_2;
            t2._add$1(0, new K._NavigatorPushObservation(t4, t3));
            continue;
          case C._RouteLifecycle_2:
            if (canRemoveOrAdd || next == null) {
              t3 = entry.route;
              t3.didAdd$0();
              entry.currentState = C._RouteLifecycle_7;
              if (next == null)
                t3.didChangeNext$1(_null);
              continue;
            }
            break;
          case C._RouteLifecycle_3:
          case C._RouteLifecycle_4:
          case C._RouteLifecycle_6:
            t3 = previous == null ? _null : previous.route;
            index0 = _this._getIndexBefore$2(index - 1, K.navigator__RouteEntry_isPresentPredicate$closure());
            t4 = index0 >= 0 ? _this._history[index0] : _null;
            t4 = t4 == null ? _null : t4.route;
            entry.handlePush$4$isNewFirst$navigator$previous$previousPresent(next == null, _this, t3, t4);
            if (entry.currentState === C._RouteLifecycle_7)
              continue;
            break;
          case C._RouteLifecycle_5:
            if (!seenTopActiveRoute && poppedRoute != null) {
              entry.route.didPopNext$1(poppedRoute);
              entry.lastAnnouncedPoppedNextRoute = poppedRoute;
            }
            seenTopActiveRoute = true;
            break;
          case C._RouteLifecycle_7:
            if (!seenTopActiveRoute && poppedRoute != null) {
              entry.route.didPopNext$1(poppedRoute);
              entry.lastAnnouncedPoppedNextRoute = poppedRoute;
            }
            canRemoveOrAdd = true;
            seenTopActiveRoute = true;
            break;
          case C._RouteLifecycle_8:
            if (!seenTopActiveRoute) {
              if (poppedRoute != null) {
                entry.route.didPopNext$1(poppedRoute);
                entry.lastAnnouncedPoppedNextRoute = poppedRoute;
              }
              poppedRoute = entry.route;
            }
            index0 = _this._getIndexBefore$2(index, K.navigator__RouteEntry_willBePresentPredicate$closure());
            t3 = index0 >= 0 ? _this._history[index0] : _null;
            t3 = t3 == null ? _null : t3.route;
            entry.currentState = C._RouteLifecycle_10;
            t1._add$1(0, new K._NavigatorPopObservation(entry.route, t3));
            canRemoveOrAdd = true;
            break;
          case C._RouteLifecycle_10:
            break;
          case C._RouteLifecycle_9:
            if (!seenTopActiveRoute) {
              if (poppedRoute != null)
                entry.route.didPopNext$1(poppedRoute);
              poppedRoute = _null;
            }
            index0 = _this._getIndexBefore$2(index, K.navigator__RouteEntry_willBePresentPredicate$closure());
            t3 = index0 >= 0 ? _this._history[index0] : _null;
            t3 = t3 == null ? _null : t3.route;
            entry.currentState = C._RouteLifecycle_11;
            if (entry._reportRemovalToObserver)
              t1._add$1(0, new K._NavigatorRemoveObservation(entry.route, t3));
            continue;
          case C._RouteLifecycle_11:
            if (!canRemoveOrAdd && next != null)
              break;
            entry.currentState = C._RouteLifecycle_12;
            continue;
          case C._RouteLifecycle_12:
            toBeDisposed.push(C.JSArray_methods.removeAt$1(_this._history, index));
            entry = next;
            break;
          case C._RouteLifecycle_13:
          case C._RouteLifecycle_0:
            break;
        }
        --index;
        previous0 = index > 0 ? _this._history[index - 1] : _null;
        next = entry;
        entry = previous;
        previous = previous0;
      }
      _this._flushObserverNotifications$0();
      _this._flushRouteAnnouncement$0();
      _this._widget.toString;
      t1 = _this._history;
      t1 = new H.CastList(t1, H._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
      lastEntry = t1.lastWhere$2$orElse(t1, new K.NavigatorState__flushHistoryUpdates_closure(), new K.NavigatorState__flushHistoryUpdates_closure0());
      routeName = lastEntry == null ? _null : lastEntry.route._settings.name;
      t1 = _this._lastAnnouncedRouteName;
      if (routeName != t1) {
        C.OptionalMethodChannel_urv.invokeMethod$1$2("routeUpdated", P.LinkedHashMap_LinkedHashMap$_literal(["previousRouteName", t1, "routeName", routeName], type$.String, type$.dynamic), type$.void);
        _this._lastAnnouncedRouteName = routeName;
      }
      for (t1 = toBeDisposed.length, _i = 0; _i < toBeDisposed.length; toBeDisposed.length === t1 || (0, H.throwConcurrentModificationError)(toBeDisposed), ++_i) {
        entry = toBeDisposed[_i];
        for (t2 = entry.route.get$overlayEntries(), t3 = t2.length, _i0 = 0; _i0 < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i0)
          J.remove$0$ax(t2[_i0]);
        entry.dispose$0(0);
      }
      if (rearrangeOverlay) {
        t1 = _this.get$_overlayKey().get$currentState();
        if (t1 != null)
          t1.rearrange$1(_this.get$_allRouteOverlayEntries());
      }
      if (_this.RestorationMixin__bucket != null)
        _this._serializableHistory.update$1(0, _this._history);
    },
    _flushHistoryUpdates$0: function() {
      return this._flushHistoryUpdates$1$rearrangeOverlay(true);
    },
    _flushObserverNotifications$0: function() {
      var t1, observation, t2, _this = this,
        _s19_ = "_effectiveObservers";
      if (_this.get$_effectiveObservers().length === 0) {
        _this._observedRouteDeletions.clear$0(0);
        _this._observedRouteAdditions.clear$0(0);
        return;
      }
      for (t1 = _this._observedRouteAdditions; !t1.get$isEmpty(t1);) {
        observation = t1.removeLast$0(0);
        t2 = _this.__NavigatorState__effectiveObservers;
        if (t2 == null)
          t2 = H.throwExpression(H.LateError$fieldNI(_s19_));
        C.JSArray_methods.forEach$1(t2, observation.get$notify());
      }
      for (t1 = _this._observedRouteDeletions; !t1.get$isEmpty(t1);) {
        observation = t1.removeFirst$0();
        t2 = _this.__NavigatorState__effectiveObservers;
        if (t2 == null)
          t2 = H.throwExpression(H.LateError$fieldNI(_s19_));
        C.JSArray_methods.forEach$1(t2, observation.get$notify());
      }
    },
    _flushRouteAnnouncement$0: function() {
      var entry, t1, next, t2, t3, index0, _this = this, _null = null,
        index = _this._history.length - 1;
      for (; index >= 0;) {
        entry = _this._history[index];
        t1 = entry.currentState.index;
        if (!(t1 <= 11 && t1 >= 3)) {
          --index;
          continue;
        }
        next = _this._getRouteAfter$2(index + 1, K.navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure());
        t1 = next == null;
        t2 = t1 ? _null : next.route;
        t3 = entry.lastAnnouncedNextRoute;
        if (t2 != t3) {
          if ((t1 ? _null : next.route) == null) {
            t2 = entry.lastAnnouncedPoppedNextRoute;
            t2 = t2 != null && t2 === t3;
          } else
            t2 = false;
          if (!t2) {
            t2 = entry.route;
            t2.didChangeNext$1(t1 ? _null : next.route);
          }
          entry.lastAnnouncedNextRoute = t1 ? _null : next.route;
        }
        --index;
        index0 = _this._getIndexBefore$2(index, K.navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure());
        t1 = index0 >= 0 ? _this._history[index0] : _null;
        t2 = t1 == null;
        t3 = t2 ? _null : t1.route;
        if (t3 != entry.lastAnnouncedPreviousRoute) {
          t3 = entry.route;
          t3.didChangePrevious$1(t2 ? _null : t1.route);
          entry.lastAnnouncedPreviousRoute = t2 ? _null : t1.route;
        }
      }
    },
    _getRouteBefore$2: function(index, predicate) {
      index = this._getIndexBefore$2(index, predicate);
      return index >= 0 ? this._history[index] : null;
    },
    _getIndexBefore$2: function(index, predicate) {
      while (true) {
        if (!(index >= 0 && !predicate.call$1(this._history[index])))
          break;
        --index;
      }
      return index;
    },
    _getRouteAfter$2: function(index, predicate) {
      var t1;
      while (true) {
        t1 = this._history;
        if (!(index < t1.length && !predicate.call$1(t1[index])))
          break;
        ++index;
      }
      t1 = this._history;
      return index < t1.length ? t1[index] : null;
    },
    _routeNamed$1$3$allowNull$arguments: function($name, allowNull, $arguments, $T) {
      var settings, t1, route;
      if (allowNull)
        this._widget.toString;
      settings = new K.RouteSettings($name, $arguments);
      t1 = $T._eval$1("Route<0>?");
      route = t1._as(this._widget.onGenerateRoute.call$1(settings));
      return route == null && !allowNull ? t1._as(this._widget.onUnknownRoute.call$1(settings)) : route;
    },
    _routeNamed$1$2$arguments: function($name, $arguments, $T) {
      return this._routeNamed$1$3$allowNull$arguments($name, false, $arguments, $T);
    },
    _afterNavigation$1: function(route) {
      var settings, settingsJsonable, t3,
        t1 = type$.String,
        t2 = type$.dynamic,
        routeJsonable = P.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      routeJsonable.$indexSet(0, "description", route instanceof T.TransitionRoute ? T.TransitionRoute.prototype.get$debugLabel.call(route) + "(" + H.S(route._settings.name) + ")" : route.toString$0(0));
      settings = route._settings;
      settingsJsonable = P.LinkedHashMap_LinkedHashMap$_literal(["name", settings.name], t1, t2);
      t3 = settings.$arguments;
      if (t3 != null)
        settingsJsonable.$indexSet(0, "arguments", C.C_JsonCodec.encode$2$toEncodable(t3, new K.NavigatorState__afterNavigation_closure()));
      routeJsonable.$indexSet(0, "settings", settingsJsonable);
      P.postEvent("Flutter.Navigation", P.LinkedHashMap_LinkedHashMap$_literal(["route", routeJsonable], t1, t2));
      this._cancelActivePointers$0();
    },
    maybePop$1$1: function(result) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, lastEntry, disposition, t1;
      var $async$maybePop$1$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._history;
                t1 = new H.CastList(t1, H._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
                lastEntry = t1.lastWhere$2$orElse(t1, new K.NavigatorState_maybePop_closure(), new K.NavigatorState_maybePop_closure0());
                if (lastEntry == null) {
                  $async$returnValue = false;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                $async$goto = 3;
                return P._asyncAwait(lastEntry.route.willPop$0(), $async$maybePop$1$1);
              case 3:
                // returning from await.
                disposition = $async$result;
                if ($async$self._framework$_element == null) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = $async$self._history;
                t1 = new H.CastList(t1, H._arrayInstanceType(t1)._eval$1("CastList<1,_RouteEntry?>"));
                if (lastEntry !== t1.lastWhere$2$orElse(t1, new K.NavigatorState_maybePop_closure1(), new K.NavigatorState_maybePop_closure2())) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                switch (disposition) {
                  case C.RoutePopDisposition_2:
                    $async$returnValue = false;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.RoutePopDisposition_0:
                    $async$self.pop$1(0, result);
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case C.RoutePopDisposition_1:
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return P._asyncStartSync($async$maybePop$1$1, $async$completer);
    },
    maybePop$0: function() {
      return this.maybePop$1$1(null, type$.nullable_Object);
    },
    maybePop$1: function(result) {
      return this.maybePop$1$1(result, type$.nullable_Object);
    },
    pop$1$1: function(_, result) {
      var entry = C.JSArray_methods.lastWhere$1(this._history, K.navigator__RouteEntry_isPresentPredicate$closure());
      entry.pop$1(0, result);
      if (entry.currentState === C._RouteLifecycle_8)
        this._flushHistoryUpdates$1$rearrangeOverlay(false);
      this._afterNavigation$1(entry.route);
    },
    pop$0: function($receiver) {
      return this.pop$1$1($receiver, null, type$.nullable_Object);
    },
    pop$1: function($receiver, result) {
      return this.pop$1$1($receiver, result, type$.nullable_Object);
    },
    finalizeRoute$1: function(route) {
      var entry = C.JSArray_methods.firstWhere$1(this._history, K._RouteEntry_isRoutePredicate(route));
      if (entry.doingPop) {
        entry.currentState = C._RouteLifecycle_8;
        this._flushHistoryUpdates$1$rearrangeOverlay(false);
      }
      entry.currentState = C._RouteLifecycle_12;
      this._flushHistoryUpdates$1$rearrangeOverlay(false);
    },
    set$_userGesturesInProgress: function(value) {
      this._userGesturesInProgressCount = value;
      this.userGestureInProgressNotifier.set$value(0, value > 0);
    },
    didStartUserGesture$0: function() {
      var routeIndex, route, previousRoute, t1, t2, _i, _this = this;
      _this.set$_userGesturesInProgress(_this._userGesturesInProgressCount + 1);
      if (_this._userGesturesInProgressCount === 1) {
        routeIndex = _this._getIndexBefore$2(_this._history.length - 1, K.navigator__RouteEntry_willBePresentPredicate$closure());
        route = _this._history[routeIndex].route;
        previousRoute = !route.get$willHandlePopInternally() && routeIndex > 0 ? _this._getRouteBefore$2(routeIndex - 1, K.navigator__RouteEntry_willBePresentPredicate$closure()).route : null;
        for (t1 = _this.get$_effectiveObservers(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i]._maybeStartHeroTransition$4(route, previousRoute, C.HeroFlightDirection_1, true);
      }
    },
    didStopUserGesture$0: function() {
      var t1, t2, _i, _this = this;
      _this.set$_userGesturesInProgress(_this._userGesturesInProgressCount - 1);
      if (_this._userGesturesInProgressCount === 0)
        for (t1 = _this.get$_effectiveObservers(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].didStopUserGesture$0();
    },
    _handlePointerDown$1: function($event) {
      this._activePointers.add$1(0, $event.get$pointer());
    },
    _handlePointerUpOrCancel$1: function($event) {
      this._activePointers.remove$1(0, $event.get$pointer());
    },
    _cancelActivePointers$0: function() {
      if ($.SchedulerBinding__instance.SchedulerBinding__schedulerPhase === C.SchedulerPhase_0) {
        var t1 = this.get$_overlayKey();
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
        this.setState$1(new K.NavigatorState__cancelActivePointers_closure(t1 == null ? null : t1.findAncestorRenderObjectOfType$1$0(type$.RenderAbsorbPointer)));
      }
      t1 = this._activePointers;
      C.JSArray_methods.forEach$1(P.List_List$of(t1, true, H._instanceType(t1)._eval$1("SetMixin.E")), $.WidgetsBinding__instance.get$cancelPointer());
    },
    build$1: function(_, context) {
      var t4, _this = this,
        t1 = _this.get$_handlePointerUpOrCancel(),
        t2 = _this.RestorationMixin__bucket,
        t3 = _this.get$_overlayKey();
      if (_this.get$_overlayKey().get$currentState() == null) {
        t4 = _this.get$_allRouteOverlayEntries();
        t4 = P.List_List$of(t4, false, t4.$ti._eval$1("Iterable.E"));
      } else
        t4 = C.List_empty6;
      return new K.HeroControllerScope(null, T.Listener$(C.HitTestBehavior_0, new T.AbsorbPointer(false, L.FocusScope$(true, K.UnmanagedRestorationScope$(t2, new X.Overlay(t4, t3)), _this.focusScopeNode), null), t1, _this.get$_handlePointerDown(), t1), null);
    }
  };
  K.NavigatorState_restoreState_closure.prototype = {
    call$1: function(route) {
      var t2, t3,
        t1 = route._settings.name;
      if (t1 != null) {
        t2 = this.$this._rawNextPagelessRestorationScopeId;
        t3 = t2.$ti._precomputed1._as(t2._restoration_properties$_value);
        t2.super$RestorableValue$value(0, t3 + 1);
        t1 = new K._NamedRestorationInformation(t3, t1, null, C._RouteRestorationType_0);
      } else
        t1 = null;
      return K._RouteEntry$(route, C._RouteLifecycle_1, t1);
    },
    $signature: 289
  };
  K.NavigatorState__flushHistoryUpdates_closure.prototype = {
    call$1: function(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 18
  };
  K.NavigatorState__flushHistoryUpdates_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 2
  };
  K.NavigatorState__afterNavigation_closure.prototype = {
    call$1: function(object) {
      return H.S(object);
    },
    $signature: 290
  };
  K.NavigatorState_maybePop_closure.prototype = {
    call$1: function(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 18
  };
  K.NavigatorState_maybePop_closure0.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 2
  };
  K.NavigatorState_maybePop_closure1.prototype = {
    call$1: function(e) {
      return e != null && e.get$isPresent();
    },
    $signature: 18
  };
  K.NavigatorState_maybePop_closure2.prototype = {
    call$0: function() {
      return null;
    },
    $signature: 2
  };
  K.NavigatorState__cancelActivePointers_closure.prototype = {
    call$0: function() {
      var t1 = this.absorber;
      if (t1 != null)
        t1.set$absorbing(true);
    },
    $signature: 0
  };
  K._RouteRestorationType.prototype = {
    toString$0: function(_) {
      return this._navigator$_name;
    }
  };
  K._RestorationInformation.prototype = {
    get$isRestorable: function() {
      return true;
    },
    computeSerializableData$0: function() {
      return H.setRuntimeTypeInfo([this.type.index], type$.JSArray_Object);
    }
  };
  K._NamedRestorationInformation.prototype = {
    computeSerializableData$0: function() {
      var _this = this,
        t1 = _this.super$_RestorationInformation$computeSerializableData(),
        t2 = H.setRuntimeTypeInfo([_this.restorationScopeId, _this.name], type$.JSArray_Object),
        t3 = _this.$arguments;
      if (t3 != null)
        t2.push(t3);
      C.JSArray_methods.addAll$1(t1, t2);
      return t1;
    },
    createRoute$1: function($navigator) {
      var t1 = $navigator._routeNamed$1$3$allowNull$arguments(this.name, false, this.$arguments, type$.dynamic);
      t1.toString;
      return t1;
    },
    get$restorationScopeId: function() {
      return this.restorationScopeId;
    },
    get$name: function(receiver) {
      return this.name;
    }
  };
  K._AnonymousRestorationInformation.prototype = {
    get$isRestorable: function() {
      return false;
    },
    computeSerializableData$0: function() {
      P.PluginUtilities_getCallbackHandle(this.routeBuilder);
    },
    createRoute$1: function($navigator) {
      var t1 = $navigator._framework$_element;
      t1.toString;
      return this.routeBuilder.call$2(t1, this.$arguments);
    },
    get$restorationScopeId: function() {
      return this.restorationScopeId;
    }
  };
  K._HistoryProperty.prototype = {
    update$1: function(_, $history) {
      var newRoutesForCurrentPage, t1, oldRoutesForCurrentPage, newMap, removedPages, currentPage, needsSerialization, restorationEnabled, _i, entry, t2, t3, t4, t5, _this = this, _null = null,
        wasUninitialized = _this._pageToPagelessRoutes == null;
      if (wasUninitialized)
        _this._pageToPagelessRoutes = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_Object);
      newRoutesForCurrentPage = H.setRuntimeTypeInfo([], type$.JSArray_Object);
      t1 = _this._pageToPagelessRoutes;
      t1.toString;
      oldRoutesForCurrentPage = J.$index$asx(t1, null);
      if (oldRoutesForCurrentPage == null)
        oldRoutesForCurrentPage = C.List_empty5;
      newMap = P.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_String, type$.List_Object);
      t1 = _this._pageToPagelessRoutes;
      t1.toString;
      removedPages = J.toSet$0$ax(J.get$keys$x(t1));
      for (t1 = $history.length, currentPage = _null, needsSerialization = wasUninitialized, restorationEnabled = true, _i = 0; _i < $history.length; $history.length === t1 || (0, H.throwConcurrentModificationError)($history), ++_i) {
        entry = $history[_i];
        if (entry.currentState.index > 7) {
          t2 = entry.route;
          t2._restorationScopeId.set$value(0, _null);
          continue;
        }
        if (restorationEnabled) {
          t2 = entry.restorationInformation;
          restorationEnabled = (t2 == null ? _null : t2.get$isRestorable()) === true;
        } else
          restorationEnabled = false;
        t2 = entry.route;
        t3 = restorationEnabled ? entry.get$restorationId() : _null;
        t2._restorationScopeId.set$value(0, t3);
        if (restorationEnabled) {
          t2 = entry.restorationInformation;
          t3 = t2._serializableData;
          t2 = t3 == null ? t2._serializableData = t2.computeSerializableData$0() : t3;
          if (!needsSerialization) {
            t3 = J.getInterceptor$asx(oldRoutesForCurrentPage);
            t4 = t3.get$length(oldRoutesForCurrentPage);
            t5 = newRoutesForCurrentPage.length;
            needsSerialization = t4 <= t5 || !J.$eq$(t3.$index(oldRoutesForCurrentPage, t5), t2);
          } else
            needsSerialization = true;
          newRoutesForCurrentPage.push(t2);
        }
      }
      needsSerialization = needsSerialization || newRoutesForCurrentPage.length !== J.get$length$asx(oldRoutesForCurrentPage);
      _this._finalizePage$4(newRoutesForCurrentPage, currentPage, newMap, removedPages);
      if (needsSerialization || removedPages.get$isNotEmpty(removedPages)) {
        _this._pageToPagelessRoutes = newMap;
        _this.notifyListeners$0();
      }
    },
    _finalizePage$4: function(routes, page, pageToRoutes, pagesToRemove) {
      var restorationId,
        t1 = routes.length;
      if (t1 !== 0) {
        restorationId = page == null ? null : page.get$restorationId();
        pageToRoutes.$indexSet(0, restorationId, routes);
        pagesToRemove.remove$1(0, restorationId);
      }
    },
    clear$0: function(_) {
      if (this._pageToPagelessRoutes == null)
        return;
      this._pageToPagelessRoutes = null;
      this.notifyListeners$0();
    },
    restoreEntriesForPage$2: function(page, $navigator) {
      var t1, serializedData, t2, route, t3,
        result = H.setRuntimeTypeInfo([], type$.JSArray__RouteEntry);
      if (this._pageToPagelessRoutes != null)
        t1 = page != null && page.get$restorationId() == null;
      else
        t1 = true;
      if (t1)
        return result;
      t1 = this._pageToPagelessRoutes;
      t1.toString;
      serializedData = J.$index$asx(t1, page == null ? null : page.get$restorationId());
      if (serializedData == null)
        return result;
      for (t1 = J.get$iterator$ax(serializedData); t1.moveNext$0();) {
        t2 = K._RestorationInformation__RestorationInformation$fromSerializableData(t1.get$current(t1));
        route = t2.createRoute$1($navigator);
        t3 = $.$get$_RouteEntry_notAnnounced();
        result.push(new K._RouteEntry(route, t2, C._RouteLifecycle_1, t3, t3, t3));
      }
      return result;
    },
    createDefaultValue$0: function() {
      return null;
    },
    fromPrimitives$1: function(data) {
      data.toString;
      return J.map$2$1$ax(type$.Map_dynamic_dynamic._as(data), new K._HistoryProperty_fromPrimitives_closure(), type$.nullable_String, type$.List_Object);
    },
    initWithValue$1: function(value) {
      this._pageToPagelessRoutes = value;
    },
    toPrimitives$0: function() {
      return this._pageToPagelessRoutes;
    },
    get$enabled: function(_) {
      return this._pageToPagelessRoutes != null;
    }
  };
  K._HistoryProperty_fromPrimitives_closure.prototype = {
    call$2: function(key, value) {
      return new P.MapEntry(H._asStringQ(key), P.List_List$from(type$.List_dynamic._as(value), true, type$.Object), type$.MapEntry_of_nullable_String_and_List_Object);
    },
    $signature: 291
  };
  K._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure.prototype = {
    call$2: function(property, listener) {
      property.removeListener$1(0, listener);
    },
    $signature: 92
  };
  K._NavigatorState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function(_) {
      this.super$State$dispose(0);
    },
    didChangeDependencies$0: function() {
      var muted, t2,
        t1 = this._framework$_element;
      t1.toString;
      muted = !U.TickerMode_of(t1);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
          t2._as(t1._collection$_current).set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  K._NavigatorState_State_TickerProviderStateMixin_RestorationMixin.prototype = {
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0: function() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$_NavigatorState_State_TickerProviderStateMixin$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._framework$_element;
      t1.toString;
      t1 = K.RestorationScope_of(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0(0);
    },
    dispose$0: function(_) {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new K._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0(0);
      _this.RestorationMixin__bucket = null;
      _this.super$_NavigatorState_State_TickerProviderStateMixin$dispose(0);
    }
  };
  U.Notification0.prototype = {
    visitAncestor$1: function(element) {
      var widget;
      if (element instanceof N.StatelessElement) {
        widget = type$.StatelessWidget._as(N.Element.prototype.get$widget.call(element));
        if (widget instanceof U.NotificationListener)
          if (widget._notification_listener$_dispatch$2(this, element))
            return false;
      }
      return true;
    },
    toString$0: function(_) {
      return "Notification(" + C.JSArray_methods.join$1(H.setRuntimeTypeInfo([], type$.JSArray_String), ", ") + ")";
    }
  };
  U.NotificationListener.prototype = {
    _notification_listener$_dispatch$2: function(notification, element) {
      if (this.$ti._precomputed1._is(notification))
        return this.onNotification.call$1(notification);
      return false;
    },
    build$1: function(_, context) {
      return this.child;
    }
  };
  X.OverlayEntry.prototype = {
    set$opaque: function(value) {
      var t1;
      if (this._opaque === value)
        return;
      this._opaque = value;
      t1 = this._overlay;
      if (t1 != null)
        t1._didChangeEntryOpacity$0();
    },
    set$maintainState: function(value) {
      if (this._maintainState)
        return;
      this._maintainState = true;
      this._overlay._didChangeEntryOpacity$0();
    },
    _updateMounted$1: function(value) {
      if (value === this._mounted)
        return;
      this._mounted = value;
      this.notifyListeners$0();
    },
    remove$0: function(_) {
      var t2,
        t1 = this._overlay;
      t1.toString;
      this._overlay = null;
      if (t1._framework$_element == null)
        return;
      C.JSArray_methods.remove$1(t1._entries, this);
      t2 = $.SchedulerBinding__instance;
      if (t2.SchedulerBinding__schedulerPhase === C.SchedulerPhase_3)
        t2.SchedulerBinding__postFrameCallbacks.push(new X.OverlayEntry_remove_closure(t1));
      else
        t1._markDirty$0();
    },
    markNeedsBuild$0: function() {
      var t1 = this._key.get$currentState();
      if (t1 != null)
        t1._markNeedsBuild$0();
    },
    toString$0: function(_) {
      return "<optimized out>#" + Y.shortHash(this) + "(opaque: " + this._opaque + "; maintainState: " + this._maintainState + ")";
    }
  };
  X.OverlayEntry_remove_closure.prototype = {
    call$1: function(duration) {
      this.overlay._markDirty$0();
    },
    $signature: 6
  };
  X._OverlayEntryWidget.prototype = {
    createState$0: function() {
      return new X._OverlayEntryWidgetState(C._StateLifecycle_0);
    }
  };
  X._OverlayEntryWidgetState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this._widget.entry._updateMounted$1(true);
    },
    dispose$0: function(_) {
      this._widget.entry._updateMounted$1(false);
      this.super$State$dispose(0);
    },
    build$1: function(_, context) {
      var t1 = this._widget;
      return new U.TickerMode(t1.tickerEnabled, t1.entry.builder.call$1(context), null);
    },
    _markNeedsBuild$0: function() {
      this.setState$1(new X._OverlayEntryWidgetState__markNeedsBuild_closure());
    }
  };
  X._OverlayEntryWidgetState__markNeedsBuild_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  X.Overlay.prototype = {
    createState$0: function() {
      return new X.OverlayState(H.setRuntimeTypeInfo([], type$.JSArray_OverlayEntry), null, C._StateLifecycle_0);
    }
  };
  X.OverlayState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this.insertAll$1(0, this._widget.initialEntries);
    },
    _insertionIndex$2: function(below, above) {
      return this._entries.length;
    },
    insert$1: function(_, entry) {
      entry._overlay = this;
      this.setState$1(new X.OverlayState_insert_closure(this, null, null, entry));
    },
    insertAll$1: function(_, entries) {
      var _i,
        t1 = entries.length;
      if (t1 === 0)
        return;
      for (_i = 0; _i < t1; ++_i)
        entries[_i]._overlay = this;
      this.setState$1(new X.OverlayState_insertAll_closure(this, null, null, entries));
    },
    rearrange$1: function(newEntries) {
      var t1, old, _i, entry, _this = this,
        newEntriesList = P.List_List$of(newEntries, false, newEntries.$ti._eval$1("Iterable.E"));
      if (newEntriesList.length === 0)
        return;
      t1 = _this._entries;
      if (S.listEquals(t1, newEntriesList))
        return;
      old = P.LinkedHashSet_LinkedHashSet$from(t1, type$.OverlayEntry);
      for (t1 = newEntriesList.length, _i = 0; _i < t1; ++_i) {
        entry = newEntriesList[_i];
        if (entry._overlay == null)
          entry._overlay = _this;
      }
      _this.setState$1(new X.OverlayState_rearrange_closure(_this, newEntriesList, old, null, null));
    },
    _markDirty$0: function() {
      if (this._framework$_element != null)
        this.setState$1(new X.OverlayState__markDirty_closure());
    },
    _didChangeEntryOpacity$0: function() {
      this.setState$1(new X.OverlayState__didChangeEntryOpacity_closure());
    },
    build$1: function(_, context) {
      var t1, i, onstage, onstageCount, entry, t2,
        children = H.setRuntimeTypeInfo([], type$.JSArray_Widget);
      for (t1 = this._entries, i = t1.length - 1, onstage = true, onstageCount = 0; i >= 0; --i) {
        entry = t1[i];
        if (onstage) {
          ++onstageCount;
          children.push(new X._OverlayEntryWidget(entry, true, entry._key));
          onstage = !entry._opaque || false;
        } else if (entry._maintainState)
          children.push(new X._OverlayEntryWidget(entry, false, entry._key));
      }
      t1 = children.length;
      t2 = type$.ReversedListIterable_Widget;
      t2 = P.List_List$of(new H.ReversedListIterable(children, t2), false, t2._eval$1("ListIterable.E"));
      this._widget.toString;
      return new X._Theatre(t1 - onstageCount, C.Clip_1, t2, null);
    }
  };
  X.OverlayState_insert_closure.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      C.JSArray_methods.insert$2(t1._entries, t1._insertionIndex$2(_this.below, _this.above), _this.entry);
    },
    $signature: 0
  };
  X.OverlayState_insertAll_closure.prototype = {
    call$0: function() {
      var _this = this,
        t1 = _this.$this;
      C.JSArray_methods.insertAll$2(t1._entries, t1._insertionIndex$2(_this.below, _this.above), _this.entries);
    },
    $signature: 0
  };
  X.OverlayState_rearrange_closure.prototype = {
    call$0: function() {
      var t3, t4, _this = this,
        t1 = _this.$this,
        t2 = t1._entries;
      C.JSArray_methods.set$length(t2, 0);
      t3 = _this.newEntriesList;
      C.JSArray_methods.addAll$1(t2, t3);
      t4 = _this.old;
      t4.removeAll$1(t3);
      C.JSArray_methods.insertAll$2(t2, t1._insertionIndex$2(_this.below, _this.above), t4);
    },
    $signature: 0
  };
  X.OverlayState__markDirty_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  X.OverlayState__didChangeEntryOpacity_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  X._Theatre.prototype = {
    createElement$0: function(_) {
      var t1 = type$.Element_2,
        t2 = P.HashSet_HashSet(t1),
        t3 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t3;
      return new X._TheatreElement(t2, t3, this, C._ElementLifecycle_0, P.HashSet_HashSet(t1));
    },
    createRenderObject$1: function(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      t1 = new X._RenderTheatre(t1.textDirection, this.skipCount, this.clipBehavior, 0, null, null);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = false;
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      var t1 = this.skipCount;
      if (renderObject._overlay$_skipCount !== t1) {
        renderObject._overlay$_skipCount = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality);
      t1.toString;
      renderObject.set$textDirection(0, t1.textDirection);
      t1 = this.clipBehavior;
      if (t1 !== renderObject._overlay$_clipBehavior) {
        renderObject._overlay$_clipBehavior = t1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    }
  };
  X._TheatreElement.prototype = {
    get$widget: function() {
      return type$._Theatre._as(N.MultiChildRenderObjectElement.prototype.get$widget.call(this));
    },
    get$renderObject: function() {
      return type$._RenderTheatre._as(N.MultiChildRenderObjectElement.prototype.get$renderObject.call(this));
    }
  };
  X._RenderTheatre.prototype = {
    setupParentData$1: function(child) {
      if (!(child.parentData instanceof K.StackParentData))
        child.parentData = new K.StackParentData(null, null, C.Offset_0_0);
    },
    _overlay$_resolve$0: function() {
      if (this._overlay$_resolvedAlignment != null)
        return;
      this._overlay$_resolvedAlignment = C.AlignmentDirectional_m1_m1.resolve$1(this._overlay$_textDirection);
    },
    set$textDirection: function(_, value) {
      var _this = this;
      if (_this._overlay$_textDirection === value)
        return;
      _this._overlay$_textDirection = value;
      _this._overlay$_resolvedAlignment = null;
      _this.markNeedsLayout$0();
    },
    get$_firstOnstageChild: function() {
      var child, toSkip, t1, t2, _this = this;
      if (_this._overlay$_skipCount === K.ContainerRenderObjectMixin.prototype.get$childCount.call(_this))
        return null;
      child = K.ContainerRenderObjectMixin.prototype.get$firstChild.call(_this, _this);
      for (toSkip = _this._overlay$_skipCount, t1 = type$.StackParentData; toSkip > 0; --toSkip) {
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
      return child;
    },
    computeDistanceToActualBaseline$1: function(baseline) {
      var t1, result, t2, candidate,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, result = null; child != null;) {
        t2 = child.parentData;
        t2.toString;
        t1._as(t2);
        candidate = child.getDistanceToActualBaseline$1(baseline);
        if (candidate != null) {
          candidate += t2.offset._dy;
          result = result != null ? Math.min(result, candidate) : candidate;
        }
        child = t2.ContainerParentDataMixin_nextSibling;
      }
      return result;
    },
    get$sizedByParent: function() {
      return true;
    },
    computeDryLayout$1: function(constraints) {
      return new P.Size(C.JSInt_methods.clamp$2(1 / 0, constraints.minWidth, constraints.maxWidth), C.JSInt_methods.clamp$2(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    performLayout$0: function() {
      var t1, nonPositionedConstraints, child, t2, t3, t4, t5, t6, _this = this;
      _this._hasVisualOverflow = false;
      if (_this.ContainerRenderObjectMixin__childCount - _this._overlay$_skipCount === 0)
        return;
      _this._overlay$_resolve$0();
      t1 = K.RenderObject.prototype.get$constraints.call(_this);
      nonPositionedConstraints = S.BoxConstraints$tight(new P.Size(C.JSInt_methods.clamp$2(1 / 0, t1.minWidth, t1.maxWidth), C.JSInt_methods.clamp$2(1 / 0, t1.minHeight, t1.maxHeight)));
      child = _this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, t2 = type$.Offset; child != null;) {
        t3 = child.parentData;
        t3.toString;
        t1._as(t3);
        if (!t3.get$isPositioned()) {
          child.layout$2$parentUsesSize(0, nonPositionedConstraints, true);
          t4 = _this._overlay$_resolvedAlignment;
          t4.toString;
          t5 = _this._size;
          t5.toString;
          t6 = child._size;
          t6.toString;
          t3.offset = t4.alongOffset$1(t2._as(t5.$sub(0, t6)));
        } else {
          t4 = _this._size;
          t4.toString;
          t5 = _this._overlay$_resolvedAlignment;
          t5.toString;
          _this._hasVisualOverflow = K.RenderStack_layoutPositionedChild(child, t3, t4, t5) || _this._hasVisualOverflow;
        }
        child = t3.ContainerParentDataMixin_nextSibling;
      }
    },
    hitTestChildren$2$position: function(result, position) {
      var t2, i, child, _this = this, _box_0 = {},
        t1 = _box_0.child = _this._overlay$_skipCount === K.ContainerRenderObjectMixin.prototype.get$childCount.call(_this) ? null : _this.ContainerRenderObjectMixin__lastChild;
      for (t2 = type$.StackParentData, i = 0; i < _this.ContainerRenderObjectMixin__childCount - _this._overlay$_skipCount; ++i, t1 = child) {
        t1 = t1.parentData;
        t1.toString;
        t2._as(t1);
        if (result.addWithPaintOffset$3$hitTest$offset$position(new X._RenderTheatre_hitTestChildren_closure(_box_0, position, t1), t1.offset, position))
          return true;
        child = t1.ContainerParentDataMixin_previousSibling;
        _box_0.child = child;
      }
      return false;
    },
    paintStack$2: function(context, offset) {
      var t1, t2, t3, t4, t5,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, t2 = offset._dx, t3 = offset._dy; child != null;) {
        t4 = child.parentData;
        t4.toString;
        t1._as(t4);
        t5 = t4.offset;
        context.paintChild$2(child, new P.Offset(t5._dx + t2, t5._dy + t3));
        child = t4.ContainerParentDataMixin_nextSibling;
      }
    },
    paint$2: function(context, offset) {
      var t1, t2, _this = this;
      if (_this._hasVisualOverflow && _this._overlay$_clipBehavior !== C.Clip_0) {
        t1 = _this.get$_needsCompositing();
        t2 = _this._size;
        _this._clipRectLayer = context.pushClipRect$6$clipBehavior$oldLayer(t1, offset, new P.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$paintStack(), _this._overlay$_clipBehavior, _this._clipRectLayer);
      } else {
        _this._clipRectLayer = null;
        _this.paintStack$2(context, offset);
      }
    },
    visitChildrenForSemantics$1: function(visitor) {
      var t1, t2,
        child = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData; child != null;) {
        visitor.call$1(child);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    describeApproximatePaintClip$1: function(child) {
      var t1;
      if (this._hasVisualOverflow) {
        t1 = this._size;
        t1 = new P.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      } else
        t1 = null;
      return t1;
    },
    debugDescribeChildren$0: function() {
      var count, onstage, t2,
        t1 = type$.JSArray_DiagnosticsNode,
        offstageChildren = H.setRuntimeTypeInfo([], t1),
        onstageChildren = H.setRuntimeTypeInfo([], t1),
        child = this.ContainerRenderObjectMixin__firstChild,
        firstOnstageChild = this.get$_firstOnstageChild();
      for (t1 = type$.StackParentData, count = 1, onstage = false; child != null;) {
        if (child === firstOnstageChild) {
          count = 1;
          onstage = true;
        }
        if (onstage)
          onstageChildren.push(new Y.DiagnosticableTreeNode(child, "onstage " + count, true, true, null, null));
        else
          offstageChildren.push(new Y.DiagnosticableTreeNode(child, "offstage " + count, true, true, null, C.DiagnosticsTreeStyle_2));
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
        ++count;
      }
      t1 = P.List_List$of(onstageChildren, true, type$.DiagnosticsNode);
      if (offstageChildren.length !== 0)
        C.JSArray_methods.addAll$1(t1, offstageChildren);
      else
        t1.push(Y.DiagnosticsNode_DiagnosticsNode$message("no offstage children", true, C.DiagnosticsTreeStyle_2));
      return t1;
    }
  };
  X._RenderTheatre_hitTestChildren_closure.prototype = {
    call$2: function(result, transformed) {
      return this._box_0.child.hitTest$2$position(result, transformed);
    },
    $signature: 20
  };
  X._OverlayState_State_TickerProviderStateMixin.prototype = {
    dispose$0: function(_) {
      this.super$State$dispose(0);
    },
    didChangeDependencies$0: function() {
      var muted, t2,
        t1 = this._framework$_element;
      t1.toString;
      muted = !U.TickerMode_of(t1);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null)
        for (t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications), t2 = H._instanceType(t1)._precomputed1; t1.moveNext$0();)
          t2._as(t1._collection$_current).set$muted(0, muted);
      this.super$State$didChangeDependencies();
    }
  };
  X.__RenderTheatre_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1: function(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0: function(_) {
      var child, t1, t2;
      this.super$AbstractNode$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.StackParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  S.PageStorageBucket.prototype = {};
  S.PageStorage.prototype = {
    build$1: function(_, context) {
      return this.child;
    }
  };
  V.PageRoute.prototype = {};
  L.PerformanceOverlay.prototype = {
    createRenderObject$1: function(context) {
      var t1 = new L.RenderPerformanceOverlay(this.optionsMask, 0, false, false);
      t1.get$isRepaintBoundary();
      t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = true;
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$optionsMask(this.optionsMask);
      renderObject.set$rasterizerThreshold(0);
    }
  };
  E.PrimaryScrollController.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return this.controller !== oldWidget.controller;
    }
  };
  K.RestorationScope.prototype = {
    createState$0: function() {
      return new K._RestorationScopeState(null, P.LinkedHashMap_LinkedHashMap$_empty(type$.RestorableProperty_nullable_Object, type$.void_Function), null, true, null, C._StateLifecycle_0);
    }
  };
  K._RestorationScopeState.prototype = {
    get$restorationId: function() {
      return this._widget.restorationId;
    },
    restoreState$2: function(oldBucket, initialRestore) {
    },
    build$1: function(_, context) {
      return K.UnmanagedRestorationScope$(this.RestorationMixin__bucket, this._widget.child);
    }
  };
  K.UnmanagedRestorationScope.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return oldWidget.bucket != this.bucket;
    }
  };
  K.RootRestorationScope.prototype = {
    createState$0: function() {
      return new K._RootRestorationScopeState(C._StateLifecycle_0);
    }
  };
  K._RootRestorationScopeState.prototype = {
    didChangeDependencies$0: function() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      t1 = _this._framework$_element;
      t1.toString;
      _this._ancestorBucket = K.RestorationScope_of(t1);
      _this._loadRootBucketIfNecessary$0();
      if (_this._okToRenderBlankContainer == null) {
        _this._widget.toString;
        _this._okToRenderBlankContainer = false;
      }
    },
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this._loadRootBucketIfNecessary$0();
    },
    get$_isWaitingForRootBucket: function() {
      this._widget.toString;
      return false;
    },
    _loadRootBucketIfNecessary$0: function() {
      var _this = this;
      if (_this.get$_isWaitingForRootBucket() && !_this._isLoadingRootBucket) {
        _this._isLoadingRootBucket = true;
        ++$.RendererBinding__instance.RendererBinding__firstFrameDeferredCount;
        $.ServicesBinding__instance.get$_restorationManager().get$rootBucket().then$1$1(0, new K._RootRestorationScopeState__loadRootBucketIfNecessary_closure(_this), type$.Null);
      }
    },
    _replaceRootBucket$0: function() {
      var _this = this;
      _this._rootBucketValid = false;
      _this._rootBucket = null;
      $.ServicesBinding__instance.get$_restorationManager().removeListener$1(0, _this.get$_replaceRootBucket());
      _this._loadRootBucketIfNecessary$0();
    },
    dispose$0: function(_) {
      if (this._rootBucketValid)
        $.ServicesBinding__instance.get$_restorationManager().removeListener$1(0, this.get$_replaceRootBucket());
      this.super$State$dispose(0);
    },
    build$1: function(_, context) {
      var t2, t3, _this = this,
        t1 = _this._okToRenderBlankContainer;
      t1.toString;
      if (t1 && _this.get$_isWaitingForRootBucket())
        return C.SizedBox_0_0_null_null;
      t1 = _this._ancestorBucket;
      if (t1 == null)
        t1 = _this._rootBucket;
      t2 = _this._widget;
      t3 = t2.restorationId;
      return K.UnmanagedRestorationScope$(t1, new K.RestorationScope(t2.child, t3, null));
    }
  };
  K._RootRestorationScopeState__loadRootBucketIfNecessary_closure.prototype = {
    call$1: function(bucket) {
      var t2,
        t1 = this.$this;
      t1._isLoadingRootBucket = false;
      if (t1._framework$_element != null) {
        t2 = $.ServicesBinding__instance.get$_restorationManager().ChangeNotifier__listeners;
        t2._insertBefore$3$updateFirst(t2._collection$_first, new B._ListenerEntry(t1.get$_replaceRootBucket()), false);
        t1.setState$1(new K._RootRestorationScopeState__loadRootBucketIfNecessary__closure(t1, bucket));
      }
      $.RendererBinding__instance.allowFirstFrame$0();
    },
    $signature: 293
  };
  K._RootRestorationScopeState__loadRootBucketIfNecessary__closure.prototype = {
    call$0: function() {
      var t1 = this.$this;
      t1._rootBucket = this.bucket;
      t1._rootBucketValid = true;
      t1._okToRenderBlankContainer = false;
    },
    $signature: 0
  };
  K.RestorableProperty.prototype = {
    get$enabled: function(_) {
      return true;
    }
  };
  K.RestorationMixin.prototype = {
    didToggleBucket$1: function(oldBucket) {
    },
    registerForRestoration$2: function(property, restorationId) {
      var t2, _this = this,
        t1 = _this.RestorationMixin__bucket,
        hasSerializedValue = (t1 == null ? null : J.containsKey$1$x(t1.get$_rawValues(), restorationId)) === true,
        initialValue = hasSerializedValue ? property.fromPrimitives$1(J.$index$asx(_this.RestorationMixin__bucket.get$_rawValues(), restorationId)) : property.createDefaultValue$0();
      if (property._restoration0$_restorationId == null) {
        property._restoration0$_restorationId = restorationId;
        property._restoration0$_owner = _this;
        t1 = new K.RestorationMixin_registerForRestoration_listener(_this, property);
        t2 = property.ChangeNotifier__listeners;
        t2._insertBefore$3$updateFirst(t2._collection$_first, new B._ListenerEntry(t1), false);
        _this.RestorationMixin__properties.$indexSet(0, property, t1);
      }
      property.initWithValue$1(initialValue);
      if (!hasSerializedValue && property.get$enabled(property) && _this.RestorationMixin__bucket != null)
        _this._updateProperty$1(property);
    },
    didUpdateRestorationId$0: function() {
      var t1, oldBucket, _this = this;
      if (_this.RestorationMixin__currentParent != null) {
        t1 = _this.RestorationMixin__bucket;
        t1 = t1 == null ? null : t1._restorationId;
        t1 = t1 == _this.get$restorationId() || _this.get$restorePending();
      } else
        t1 = true;
      if (t1)
        return;
      oldBucket = _this.RestorationMixin__bucket;
      if (_this._updateBucketIfNecessary$2$parent$restorePending(_this.RestorationMixin__currentParent, false))
        if (oldBucket != null)
          oldBucket.dispose$0(0);
    },
    get$restorePending: function() {
      var t1, potentialNewParent, _this = this;
      if (_this.RestorationMixin__firstRestorePending)
        return true;
      if (_this.get$restorationId() == null)
        return false;
      t1 = _this._framework$_element;
      t1.toString;
      potentialNewParent = K.RestorationScope_of(t1);
      if (potentialNewParent != _this.RestorationMixin__currentParent) {
        if (potentialNewParent == null)
          t1 = null;
        else {
          t1 = potentialNewParent._manager;
          t1 = t1 == null ? null : t1._isReplacing;
          t1 = t1 === true;
        }
        t1 = t1 === true;
      } else
        t1 = false;
      return t1;
    },
    _updateBucketIfNecessary$2$parent$restorePending: function($parent, restorePending) {
      var t1, t2, _this = this;
      if (_this.get$restorationId() == null || $parent == null)
        return _this._setNewBucketIfNecessary$2$newBucket$restorePending(null, restorePending);
      if (restorePending || _this.RestorationMixin__bucket == null) {
        t1 = _this.get$restorationId();
        t1.toString;
        return _this._setNewBucketIfNecessary$2$newBucket$restorePending($parent.claimChild$2$debugOwner(t1, _this), restorePending);
      }
      t1 = _this.RestorationMixin__bucket;
      t1.toString;
      t2 = _this.get$restorationId();
      t2.toString;
      t1.rename$1(t2);
      t2 = _this.RestorationMixin__bucket;
      t2.toString;
      $parent.adoptChild$1(t2);
      return false;
    },
    _setNewBucketIfNecessary$2$newBucket$restorePending: function(newBucket, restorePending) {
      var t2, _this = this,
        t1 = _this.RestorationMixin__bucket;
      if (newBucket == t1)
        return false;
      _this.RestorationMixin__bucket = newBucket;
      if (!restorePending) {
        if (newBucket != null) {
          t2 = _this.RestorationMixin__properties;
          t2.get$keys(t2).forEach$1(0, _this.get$_updateProperty());
        }
        _this.didToggleBucket$1(t1);
      }
      return true;
    },
    _updateProperty$1: function(property) {
      var t3,
        t1 = property.get$enabled(property),
        t2 = this.RestorationMixin__bucket;
      if (t1) {
        if (t2 != null) {
          t1 = property._restoration0$_restorationId;
          t1.toString;
          t3 = property.toPrimitives$0();
          if (!J.$eq$(J.$index$asx(t2.get$_rawValues(), t1), t3) || !J.containsKey$1$x(t2.get$_rawValues(), t1)) {
            J.$indexSet$ax(t2.get$_rawValues(), t1, t3);
            t2._markNeedsSerialization$0();
          }
        }
      } else if (t2 != null) {
        t1 = property._restoration0$_restorationId;
        t1.toString;
        t2.remove$1$1(0, t1, type$.Object);
      }
    }
  };
  K.RestorationMixin_registerForRestoration_listener.prototype = {
    call$0: function() {
      var t1 = this.$this;
      if (t1.RestorationMixin__bucket == null)
        return;
      t1._updateProperty$1(this.property);
    },
    "call*": "call$0",
    $requiredArgCount: 0,
    $signature: 0
  };
  K.__RestorationScopeState_State_RestorationMixin_dispose_closure.prototype = {
    call$2: function(property, listener) {
      property.removeListener$1(0, listener);
    },
    $signature: 92
  };
  K.__RestorationScopeState_State_RestorationMixin.prototype = {
    didUpdateWidget$1: function(oldWidget) {
      this.super$State$didUpdateWidget(oldWidget);
      this.didUpdateRestorationId$0();
    },
    didChangeDependencies$0: function() {
      var oldBucket, needsRestore, t1, didReplaceBucket, _this = this;
      _this.super$State$didChangeDependencies();
      oldBucket = _this.RestorationMixin__bucket;
      needsRestore = _this.get$restorePending();
      t1 = _this._framework$_element;
      t1.toString;
      t1 = K.RestorationScope_of(t1);
      _this.RestorationMixin__currentParent = t1;
      didReplaceBucket = _this._updateBucketIfNecessary$2$parent$restorePending(t1, needsRestore);
      if (needsRestore) {
        _this.restoreState$2(oldBucket, _this.RestorationMixin__firstRestorePending);
        _this.RestorationMixin__firstRestorePending = false;
      }
      if (didReplaceBucket)
        if (oldBucket != null)
          oldBucket.dispose$0(0);
    },
    dispose$0: function(_) {
      var t1, _this = this;
      _this.RestorationMixin__properties.forEach$1(0, new K.__RestorationScopeState_State_RestorationMixin_dispose_closure());
      t1 = _this.RestorationMixin__bucket;
      if (t1 != null)
        t1.dispose$0(0);
      _this.RestorationMixin__bucket = null;
      _this.super$State$dispose(0);
    }
  };
  U.RestorableValue.prototype = {
    set$value: function(_, newValue) {
      if (newValue !== this._restoration_properties$_value) {
        this._restoration_properties$_value = newValue;
        this.notifyListeners$0();
      }
    },
    initWithValue$1: function(value) {
      this._restoration_properties$_value = value;
    }
  };
  U._RestorablePrimitiveValueN.prototype = {
    createDefaultValue$0: function() {
      return this._defaultValue;
    },
    fromPrimitives$1: function(serialized) {
      return this.$ti._precomputed1._as(serialized);
    },
    toPrimitives$0: function() {
      return this.$ti._precomputed1._as(this._restoration_properties$_value);
    }
  };
  U._RestorablePrimitiveValue.prototype = {
    fromPrimitives$1: function(serialized) {
      return this.super$_RestorablePrimitiveValueN$fromPrimitives(serialized);
    },
    toPrimitives$0: function() {
      var t1 = this.super$_RestorablePrimitiveValueN$toPrimitives();
      t1.toString;
      return t1;
    }
  };
  U.RestorableNum.prototype = {};
  Z.RouteInformation.prototype = {};
  T.OverlayRoute.prototype = {
    get$overlayEntries: function() {
      return this._overlayEntries;
    },
    install$0: function() {
      C.JSArray_methods.addAll$1(this._overlayEntries, this.createOverlayEntries$0());
      this.super$Route$install();
    },
    didPop$1: function(result) {
      var _this = this;
      _this.super$Route$didPop(result);
      if (_this._routes$_controller.get$_animation_controller$_status() === C.AnimationStatus_0)
        _this._navigator$_navigator.finalizeRoute$1(_this);
      return true;
    },
    dispose$0: function(_) {
      C.JSArray_methods.set$length(this._overlayEntries, 0);
      this.super$Route$dispose(0);
    }
  };
  T.TransitionRoute.prototype = {
    get$animation: function(_) {
      return this._routes$_animation;
    },
    get$secondaryAnimation: function() {
      return this._secondaryAnimation;
    },
    _handleStatusChanged$1: function($status) {
      var t1, _this = this;
      switch ($status) {
        case C.AnimationStatus_3:
          t1 = _this._overlayEntries;
          if (t1.length !== 0)
            C.JSArray_methods.get$first(t1).set$opaque(true);
          break;
        case C.AnimationStatus_1:
        case C.AnimationStatus_2:
          t1 = _this._overlayEntries;
          if (t1.length !== 0)
            C.JSArray_methods.get$first(t1).set$opaque(false);
          break;
        case C.AnimationStatus_0:
          if (!_this.get$isActive())
            _this._navigator$_navigator.finalizeRoute$1(_this);
          break;
      }
    },
    install$0: function() {
      var _this = this,
        t1 = T.TransitionRoute.prototype.get$debugLabel.call(_this) + "(" + H.S(_this._settings.name) + ")",
        t2 = _this._navigator$_navigator;
      t2.toString;
      t2 = _this._routes$_controller = G.AnimationController$(t1, C.Duration_300000, C.Duration_300000, t2);
      t2.addStatusListener$1(_this.get$_handleStatusChanged());
      _this._routes$_animation = t2;
      _this.super$OverlayRoute$install();
      t1 = _this._routes$_animation;
      if (t1.get$status(t1) === C.AnimationStatus_3 && _this._overlayEntries.length !== 0)
        C.JSArray_methods.get$first(_this._overlayEntries).set$opaque(true);
    },
    didPush$0: function() {
      this.super$Route$didPush();
      return this._routes$_controller.forward$0(0);
    },
    didAdd$0: function() {
      this.super$Route$didAdd();
      this._routes$_controller.set$value(0, 1);
    },
    didReplace$1: function(oldRoute) {
      var t1;
      if (oldRoute instanceof T.TransitionRoute) {
        t1 = this._routes$_controller;
        t1.toString;
        t1.set$value(0, oldRoute._routes$_controller.get$_animation_controller$_value());
      }
      this.super$Route$didReplace(oldRoute);
    },
    didPop$1: function(result) {
      this._result = result;
      this._routes$_controller.reverse$0(0);
      this.super$OverlayRoute$didPop(result);
      return true;
    },
    didPopNext$1: function(nextRoute) {
      this._updateSecondaryAnimation$1(nextRoute);
      this.super$Route$didPopNext(nextRoute);
    },
    didChangeNext$1: function(nextRoute) {
      this._updateSecondaryAnimation$1(nextRoute);
      this.super$Route$didChangeNext(nextRoute);
    },
    _updateSecondaryAnimation$1: function(nextRoute) {
      var t2, current, t3, t4, newAnimation, _this = this, t1 = {},
        previousTrainHoppingListenerRemover = _this._trainHoppingListenerRemover;
      _this._trainHoppingListenerRemover = null;
      if (nextRoute instanceof T.TransitionRoute)
        t2 = true;
      else
        t2 = false;
      if (t2) {
        current = _this._secondaryAnimation._animations$_parent;
        if (current != null) {
          t2 = current instanceof S.TrainHoppingAnimation ? current._currentTrain : current;
          t2.toString;
          t3 = nextRoute._routes$_animation;
          t3.toString;
          if (J.$eq$(t2.get$value(t2), t3.get$_animation_controller$_value()) || t3.get$_animation_controller$_status() === C.AnimationStatus_3 || t3.get$_animation_controller$_status() === C.AnimationStatus_0)
            _this._setSecondaryAnimation$2(t3, nextRoute._transitionCompleter.future);
          else {
            t1.newAnimation = null;
            t4 = new T.TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd(_this, t3, nextRoute);
            _this._trainHoppingListenerRemover = new T.TransitionRoute__updateSecondaryAnimation_closure(t1, t3, t4);
            t3.addStatusListener$1(t4);
            newAnimation = new S.TrainHoppingAnimation(t2, t3, new T.TransitionRoute__updateSecondaryAnimation_closure0(t1, _this, nextRoute), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
            if (J.$eq$(t2.get$value(t2), t3.get$_animation_controller$_value())) {
              newAnimation._currentTrain = t3;
              newAnimation._nextTrain = null;
              t2 = t3;
            } else if (t2.get$value(t2) > t3.get$_animation_controller$_value())
              newAnimation._mode = C._TrainHoppingMode_1;
            else
              newAnimation._mode = C._TrainHoppingMode_0;
            t2.addStatusListener$1(newAnimation.get$_statusChangeHandler());
            t2 = newAnimation.get$_valueChangeHandler();
            newAnimation._currentTrain.addListener$1(0, t2);
            t3 = newAnimation._nextTrain;
            if (t3 != null) {
              t3.didRegisterListener$0();
              t3 = t3.AnimationLocalListenersMixin__listeners;
              t3._isDirty = true;
              t3._observer_list$_list.push(t2);
            }
            t1.newAnimation = newAnimation;
            _this._setSecondaryAnimation$2(newAnimation, nextRoute._transitionCompleter.future);
          }
        } else
          _this._setSecondaryAnimation$2(nextRoute._routes$_animation, nextRoute._transitionCompleter.future);
      } else
        _this._setSecondaryAnimation$1(C.C__AlwaysDismissedAnimation);
      if (previousTrainHoppingListenerRemover != null)
        previousTrainHoppingListenerRemover.call$0();
    },
    _setSecondaryAnimation$2: function(animation, disposed) {
      this._secondaryAnimation.set$parent(0, animation);
      if (disposed != null)
        disposed.then$1$1(0, new T.TransitionRoute__setSecondaryAnimation_closure(this, animation), type$.Null);
    },
    _setSecondaryAnimation$1: function(animation) {
      return this._setSecondaryAnimation$2(animation, null);
    },
    dispose$0: function(_) {
      var _this = this,
        t1 = _this._routes$_controller;
      if (t1 != null)
        t1.dispose$0(0);
      _this._transitionCompleter.complete$1(0, _this._result);
      _this.super$OverlayRoute$dispose(0);
    },
    get$debugLabel: function() {
      return "TransitionRoute";
    },
    toString$0: function(_) {
      return "TransitionRoute(animation: " + H.S(this._routes$_controller) + ")";
    }
  };
  T.TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd.prototype = {
    call$1: function($status) {
      var t1, t2;
      switch ($status) {
        case C.AnimationStatus_3:
        case C.AnimationStatus_0:
          t1 = this.$this;
          t1._setSecondaryAnimation$2(this.nextTrain, this.nextRoute._transitionCompleter.future);
          t2 = t1._trainHoppingListenerRemover;
          if (t2 != null) {
            t2.call$0();
            t1._trainHoppingListenerRemover = null;
          }
          break;
        case C.AnimationStatus_1:
        case C.AnimationStatus_2:
          break;
      }
    },
    $signature: 8
  };
  T.TransitionRoute__updateSecondaryAnimation_closure.prototype = {
    call$0: function() {
      this.nextTrain.removeStatusListener$1(this._jumpOnAnimationEnd);
      var t1 = this._box_0.newAnimation;
      if (t1 != null)
        t1.dispose$0(0);
    },
    $signature: 0
  };
  T.TransitionRoute__updateSecondaryAnimation_closure0.prototype = {
    call$0: function() {
      var t2,
        t1 = this.$this;
      t1._setSecondaryAnimation$2(this._box_0.newAnimation._currentTrain, this.nextRoute._transitionCompleter.future);
      t2 = t1._trainHoppingListenerRemover;
      if (t2 != null) {
        t2.call$0();
        t1._trainHoppingListenerRemover = null;
      }
    },
    $signature: 0
  };
  T.TransitionRoute__setSecondaryAnimation_closure.prototype = {
    call$1: function(_) {
      var t1 = this.$this._secondaryAnimation,
        t2 = this.animation;
      if (t1._animations$_parent == t2) {
        t1.set$parent(0, C.C__AlwaysDismissedAnimation);
        if (t2 instanceof S.TrainHoppingAnimation)
          t2.dispose$0(0);
      }
    },
    $signature: 5
  };
  T.LocalHistoryRoute.prototype = {
    get$willHandlePopInternally: function() {
      return false;
    }
  };
  T._DismissModalAction.prototype = {
    isEnabled$1: function(_, intent) {
      T.ModalRoute_of(this.context, type$.dynamic).toString;
      return false;
    },
    invoke$1: function(intent) {
      return K.Navigator_of(this.context).maybePop$0();
    }
  };
  T._ModalScopeStatus.prototype = {
    updateShouldNotify$1: function(old) {
      return this.isCurrent !== old.isCurrent || this.canPop !== old.canPop || this.route !== old.route;
    }
  };
  T._ModalScope.prototype = {
    createState$0: function() {
      return new T._ModalScopeState(O.FocusScopeNode$(true, C.Type__ModalScopeState_Yap.toString$0(0) + " Focus Scope", false), new F.ScrollController(H.setRuntimeTypeInfo([], type$.JSArray_ScrollPosition), new P.LinkedList(type$.LinkedList__ListenerEntry)), C._StateLifecycle_0, this.$ti._eval$1("_ModalScopeState<1>"));
    }
  };
  T._ModalScopeState.prototype = {
    initState$0: function() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = H.setRuntimeTypeInfo([], type$.JSArray_Listenable);
      t2 = _this._widget.route._animationProxy;
      if (t2 != null)
        t1.push(t2);
      t2 = _this._widget.route._secondaryAnimationProxy;
      if (t2 != null)
        t1.push(t2);
      _this.___ModalScopeState__listenable = new B._MergingListenable(t1);
      if (_this._widget.route.get$isCurrent())
        _this._widget.route._navigator$_navigator.focusScopeNode.setFirstFocus$1(_this.focusScopeNode);
    },
    didUpdateWidget$1: function(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._widget.route.get$isCurrent())
        _this._widget.route._navigator$_navigator.focusScopeNode.setFirstFocus$1(_this.focusScopeNode);
    },
    didChangeDependencies$0: function() {
      this.super$State$didChangeDependencies();
      this._page = null;
    },
    _forceRebuildPage$0: function() {
      this.setState$1(new T._ModalScopeState__forceRebuildPage_closure(this));
    },
    dispose$0: function(_) {
      this.focusScopeNode.dispose$0(0);
      this.super$State$dispose(0);
    },
    get$_shouldIgnoreFocusRequest: function() {
      var t1 = this._widget.route._animationProxy;
      if ((t1 == null ? null : t1.get$status(t1)) !== C.AnimationStatus_2) {
        t1 = this._widget.route._navigator$_navigator;
        t1 = t1 == null ? null : t1.userGestureInProgressNotifier._change_notifier$_value;
        t1 = t1 === true;
      } else
        t1 = true;
      return t1;
    },
    build$1: function(_, context) {
      var t3, _this = this, _null = null,
        t1 = _this._widget.route,
        t2 = t1.get$isCurrent();
      if (!_this._widget.route.get$hasActiveRouteBelow())
        t3 = false;
      else
        t3 = true;
      return K.AnimatedBuilder$(t1._restorationScopeId, new T._ModalScopeState_build_closure(_this), new T._ModalScopeStatus(t2, t3, t1, new T.Offstage(_this._widget.route._routes$_offstage, new S.PageStorage(new T.Builder(new T._ModalScopeState_build_closure0(_this), _null), _null), _null), _null));
    }
  };
  T._ModalScopeState__forceRebuildPage_closure.prototype = {
    call$0: function() {
      this.$this._page = null;
    },
    $signature: 0
  };
  T._ModalScopeState_build_closure.prototype = {
    call$2: function(context, child) {
      var t1 = this.$this._widget.route._restorationScopeId._change_notifier$_value;
      child.toString;
      return new K.RestorationScope(child, t1, null);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 295
  };
  T._ModalScopeState_build_closure0.prototype = {
    call$1: function(context) {
      var t4, _null = null,
        t1 = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_DismissIntent_Fb0, new T._DismissModalAction(context, new R.ObserverList(H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent))], type$.Type, type$.Action_Intent),
        t2 = this.$this,
        t3 = t2.___ModalScopeState__listenable;
      if (t3 == null)
        t3 = H.throwExpression(H.LateError$fieldNI("_listenable"));
      t4 = t2._page;
      if (t4 == null)
        t4 = t2._page = new T.RepaintBoundary(new T.Builder(new T._ModalScopeState_build__closure(t2), _null), t2._widget.route._subtreeKey);
      return new U.Actions(t1, new E.PrimaryScrollController(t2.primaryScrollController, L.FocusScope$(false, new T.RepaintBoundary(K.AnimatedBuilder$(t3, new T._ModalScopeState_build__closure0(t2), t4), _null), t2.focusScopeNode), _null), _null);
    },
    $signature: 296
  };
  T._ModalScopeState_build__closure0.prototype = {
    call$2: function(context, child) {
      var t4, t5, platform, matchingBuilder,
        t1 = this.$this,
        t2 = t1._widget.route,
        t3 = t2._animationProxy;
      t3.toString;
      t4 = t2._secondaryAnimationProxy;
      t4.toString;
      t5 = t2._navigator$_navigator;
      t5 = t5 == null ? null : t5.userGestureInProgressNotifier;
      if (t5 == null)
        t5 = new B.ValueNotifier(false, new P.LinkedList(type$.LinkedList__ListenerEntry));
      t1 = K.AnimatedBuilder$(t5, new T._ModalScopeState_build___closure(t1), child);
      K.Theme_of(context);
      platform = K.Theme_of(context).platform;
      matchingBuilder = C.Map_23gMT.$index(0, t2._navigator$_navigator.userGestureInProgressNotifier._change_notifier$_value ? C.TargetPlatform_2 : platform);
      if (matchingBuilder == null)
        matchingBuilder = C.C_FadeUpwardsPageTransitionsBuilder;
      return matchingBuilder.buildTransitions$1$5(t2, context, t3, t4, t1, t2.$ti._precomputed1);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 74
  };
  T._ModalScopeState_build___closure.prototype = {
    call$2: function(context, child) {
      var t1 = this.$this,
        ignoreEvents = t1.get$_shouldIgnoreFocusRequest();
      t1.focusScopeNode.set$canRequestFocus(!ignoreEvents);
      return new T.IgnorePointer(ignoreEvents, null, child, null);
    },
    "call*": "call$2",
    $requiredArgCount: 2,
    $signature: 297
  };
  T._ModalScopeState_build__closure.prototype = {
    call$1: function(context) {
      var _null = null,
        t1 = this.$this._widget.route;
      t1._animationProxy.toString;
      t1._secondaryAnimationProxy.toString;
      return T.Semantics$(_null, t1.builder.call$1(context), false, _null, true, _null, _null, _null, _null, _null, _null, true, _null, _null, _null);
    },
    $signature: 29
  };
  T.ModalRoute.prototype = {
    setState$1: function(fn) {
      var t1 = this._scopeKey;
      if (t1.get$currentState() != null) {
        t1 = t1.get$currentState();
        if (t1._widget.route.get$isCurrent() && !t1.get$_shouldIgnoreFocusRequest())
          t1._widget.route._navigator$_navigator.focusScopeNode.setFirstFocus$1(t1.focusScopeNode);
        t1.setState$1(fn);
      } else
        fn.call$0();
    },
    install$0: function() {
      var _this = this;
      _this.super$TransitionRoute$install();
      _this._animationProxy = S.ProxyAnimation$(T.TransitionRoute.prototype.get$animation.call(_this, _this));
      _this._secondaryAnimationProxy = S.ProxyAnimation$(T.TransitionRoute.prototype.get$secondaryAnimation.call(_this));
    },
    didPush$0: function() {
      var t1 = this._scopeKey;
      if (t1.get$currentState() != null)
        this._navigator$_navigator.focusScopeNode.setFirstFocus$1(t1.get$currentState().focusScopeNode);
      return this.super$TransitionRoute$didPush();
    },
    didAdd$0: function() {
      var t1 = this._scopeKey;
      if (t1.get$currentState() != null)
        this._navigator$_navigator.focusScopeNode.setFirstFocus$1(t1.get$currentState().focusScopeNode);
      this.super$TransitionRoute$didAdd();
    },
    set$offstage: function(value) {
      var t1, _this = this;
      if (_this._routes$_offstage === value)
        return;
      _this.setState$1(new T.ModalRoute_offstage_closure(_this, value));
      t1 = _this._animationProxy;
      t1.toString;
      t1.set$parent(0, _this._routes$_offstage ? C.C__AlwaysCompleteAnimation : T.TransitionRoute.prototype.get$animation.call(_this, _this));
      t1 = _this._secondaryAnimationProxy;
      t1.toString;
      t1.set$parent(0, _this._routes$_offstage ? C.C__AlwaysDismissedAnimation : T.TransitionRoute.prototype.get$secondaryAnimation.call(_this));
      _this.changedInternalState$0();
    },
    willPop$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this, t1, t2, _i, $async$temp1;
      var $async$willPop$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._scopeKey.get$currentState();
              t1 = P.List_List$from($async$self._willPopCallbacks, true, type$.Future_bool_Function), t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$temp1 = J;
              $async$goto = 6;
              return P._asyncAwait(t1[_i].call$0(), $async$willPop$0);
            case 6:
              // returning from await.
              if (!$async$temp1.$eq$($async$result, true)) {
                $async$returnValue = C.RoutePopDisposition_1;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = $async$self.super$_ModalRoute_TransitionRoute_LocalHistoryRoute$willPop();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$willPop$0, $async$completer);
    },
    didChangePrevious$1: function(previousRoute) {
      this.super$Route$didChangePrevious(previousRoute);
      this.changedInternalState$0();
    },
    changedInternalState$0: function() {
      var t1, _this = this;
      _this.super$Route$changedInternalState();
      _this.setState$1(new T.ModalRoute_changedInternalState_closure());
      _this.get$_modalBarrier().markNeedsBuild$0();
      t1 = _this.__ModalRoute__modalScope;
      (t1 == null ? H.throwExpression(H.LateError$fieldNI("_modalScope")) : t1).set$maintainState(true);
    },
    changedExternalState$0: function() {
      this.super$Route$changedExternalState();
      this.get$_modalBarrier().markNeedsBuild$0();
      var t1 = this._scopeKey;
      if (t1.get$currentState() != null)
        t1.get$currentState()._forceRebuildPage$0();
    },
    get$_modalBarrier: function() {
      var t1 = this.__ModalRoute__modalBarrier;
      return t1 == null ? H.throwExpression(H.LateError$fieldNI("_modalBarrier")) : t1;
    },
    _buildModalBarrier$1: function(context) {
      var _null = null,
        t1 = this._animationProxy;
      if (t1.get$status(t1) !== C.AnimationStatus_2) {
        t1 = this._animationProxy;
        t1 = t1.get$status(t1) === C.AnimationStatus_0;
      } else
        t1 = true;
      return new T.IgnorePointer(t1, _null, new X.ModalBarrier(_null, false, true, _null, _null), _null);
    },
    _buildModalScope$1: function(context) {
      var _this = this, _null = null,
        t1 = _this._modalScopeCache;
      return t1 == null ? _this._modalScopeCache = T.Semantics$(_null, new T._ModalScope(_this, _this._scopeKey, _this.$ti._eval$1("_ModalScope<1>")), false, _null, false, _null, _null, _null, _null, _null, _null, _null, C.OrdinalSortKey_0_null, _null, _null) : t1;
    },
    createOverlayEntries$0: function() {
      var $async$self = this;
      return P._makeSyncStarIterable(function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1;
        return function $async$createOverlayEntries$0($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = X.OverlayEntry$($async$self.get$_buildModalBarrier(), false);
                $async$self.__ModalRoute__modalBarrier = t1;
                $async$goto = 2;
                return t1;
              case 2:
                // after yield
                t1 = X.OverlayEntry$($async$self.get$_buildModalScope(), true);
                $async$self.__ModalRoute__modalScope = t1;
                $async$goto = 3;
                return t1;
              case 3:
                // after yield
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.OverlayEntry);
    },
    toString$0: function(_) {
      return "ModalRoute(" + this._settings.toString$0(0) + ", animation: " + H.S(this._routes$_animation) + ")";
    }
  };
  T.ModalRoute_offstage_closure.prototype = {
    call$0: function() {
      this.$this._routes$_offstage = this.value;
    },
    $signature: 0
  };
  T.ModalRoute_changedInternalState_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  T._ModalRoute_TransitionRoute_LocalHistoryRoute.prototype = {
    willPop$0: function() {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter(type$.RoutePopDisposition),
        $async$returnValue, $async$self = this;
      var $async$willPop$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return P._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self.super$Route$willPop();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return P._asyncStartSync($async$willPop$0, $async$completer);
    },
    didPop$1: function(result) {
      this.super$TransitionRoute$didPop(result);
      return true;
    }
  };
  K.ScrollBehavior.prototype = {
    toString$0: function(_) {
      return "ScrollBehavior";
    }
  };
  K.ScrollConfiguration.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      var t1;
      if (H.getRuntimeType(this.behavior) === H.getRuntimeType(oldWidget.behavior))
        t1 = false;
      else
        t1 = true;
      return t1;
    }
  };
  F.ScrollController.prototype = {
    get$position: function(_) {
      return C.JSArray_methods.get$single(this._positions);
    },
    toString$0: function(_) {
      var description = H.setRuntimeTypeInfo([], type$.JSArray_String);
      description.push("no clients");
      return "<optimized out>#" + Y.shortHash(this) + "(" + C.JSArray_methods.join$1(description, ", ") + ")";
    }
  };
  A.ScrollPositionAlignmentPolicy.prototype = {
    toString$0: function(_) {
      return this._scroll_position$_name;
    }
  };
  F.Scrollable_ensureVisible_closure.prototype = {
    call$1: function(_) {
      return null;
    },
    $signature: 298
  };
  F.ScrollIncrementType.prototype = {
    toString$0: function(_) {
      return this._scrollable$_name;
    }
  };
  F.ScrollIncrementDetails.prototype = {};
  F.ScrollIntent.prototype = {};
  F.ScrollAction.prototype = {
    isEnabled$1: function(_, intent) {
      var t1,
        $focus = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      if ($focus != null && $focus._context != null) {
        t1 = $focus._context;
        t1.toString;
        F.Scrollable_of(t1);
        t1 = $focus._context;
        t1.toString;
        if (E.PrimaryScrollController_of(t1) != null) {
          t1 = $focus._context;
          t1.toString;
          E.PrimaryScrollController_of(t1) != null;
          return false;
        }
      }
      return false;
    },
    _calculateScrollIncrement$2$type: function(state, type) {
      var t1;
      state.get$widget().get$incrementCalculator();
      t1 = state.get$widget().get$incrementCalculator();
      state.get$position(state);
      t1 = t1.call$1(new F.ScrollIncrementDetails());
      return t1;
    },
    _getIncrement$2: function(state, intent) {
      var increment = this._calculateScrollIncrement$2$type(state, intent.type);
      switch (intent.direction) {
        case C.AxisDirection_2:
          switch (state.get$axisDirection()) {
            case C.AxisDirection_0:
              return -increment;
            case C.AxisDirection_2:
              return increment;
            case C.AxisDirection_1:
            case C.AxisDirection_3:
              return 0;
          }
          break;
        case C.AxisDirection_0:
          switch (state.get$axisDirection()) {
            case C.AxisDirection_0:
              return increment;
            case C.AxisDirection_2:
              return -increment;
            case C.AxisDirection_1:
            case C.AxisDirection_3:
              return 0;
          }
          break;
        case C.AxisDirection_3:
          switch (state.get$axisDirection()) {
            case C.AxisDirection_1:
              return -increment;
            case C.AxisDirection_3:
              return increment;
            case C.AxisDirection_0:
            case C.AxisDirection_2:
              return 0;
          }
          break;
        case C.AxisDirection_1:
          switch (state.get$axisDirection()) {
            case C.AxisDirection_1:
              return increment;
            case C.AxisDirection_3:
              return -increment;
            case C.AxisDirection_0:
            case C.AxisDirection_2:
              return 0;
          }
          break;
      }
    },
    invoke$1: function(intent) {
      var primaryScrollController, state, increment,
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
      t1.toString;
      F.Scrollable_of(t1);
      t1 = $.WidgetsBinding__instance;
      t1 = t1.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
      t1.toString;
      primaryScrollController = E.PrimaryScrollController_of(t1);
      t1 = primaryScrollController.get$position(primaryScrollController);
      state = F.Scrollable_of(t1.get$context(t1).get$notificationContext());
      state.get$_physics();
      t1 = state.get$_physics().shouldAcceptUserOffset$1(state.get$position(state));
      if (!t1)
        return;
      increment = this._getIncrement$2(state, intent);
      if (increment === 0)
        return;
      state.get$position(state).moveTo$3$curve$duration(0, state.get$position(state).get$pixels().$add(0, increment), C.Cubic_xDo, C.Duration_100000);
    }
  };
  X.KeySet.prototype = {
    KeySet$4: function(key1, key2, key3, key4, _box_0, $T) {
      _box_0.count = 1;
      if (key2 != null)
        this._shortcuts$_keys.add$1(0, key2);
      if (key3 != null)
        this._shortcuts$_keys.add$1(0, key3);
    },
    $eq: function(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== H.getRuntimeType(this))
        return false;
      return H._instanceType(this)._eval$1("KeySet<KeySet.T>")._is(other) && S.setEquals(other._shortcuts$_keys, this._shortcuts$_keys);
    },
    get$hashCode: function(_) {
      var _this = this,
        t1 = _this.__KeySet_hashCode;
      if (t1 == null) {
        t1 = X.KeySet__computeHashCode(_this._shortcuts$_keys);
        if (_this.__KeySet_hashCode == null)
          _this.__KeySet_hashCode = t1;
        else
          t1 = H.throwExpression(H.LateError$fieldADI("hashCode"));
      }
      return t1;
    }
  };
  X.LogicalKeySet.prototype = {};
  X.ShortcutManager.prototype = {
    set$shortcuts: function(value) {
      if (!S.mapEquals(this._shortcuts, value)) {
        this._shortcuts = value;
        this.notifyListeners$0();
      }
    },
    _find$1$keysPressed: function(keysPressed) {
      var matchedIntent, pseudoKeys, t3, result, synonyms, first,
        t1 = $.$get$RawKeyboard_instance(),
        t2 = t1._keysPressed;
      t2 = t2.get$values(t2);
      t2 = P.LinkedHashSet_LinkedHashSet$of(t2, H._instanceType(t2)._eval$1("Iterable.E"))._collection$_length === 0;
      if (t2)
        return null;
      t1 = t1._keysPressed;
      t1 = t1.get$values(t1);
      keysPressed = new X.LogicalKeySet(P.HashSet_HashSet$from(P.LinkedHashSet_LinkedHashSet$of(t1, H._instanceType(t1)._eval$1("Iterable.E")), type$.LogicalKeyboardKey));
      matchedIntent = this._shortcuts.$index(0, keysPressed);
      if (matchedIntent == null) {
        t1 = type$.LogicalKeyboardKey;
        pseudoKeys = P.LinkedHashSet_LinkedHashSet$_empty(t1);
        for (t2 = keysPressed._shortcuts$_keys.toSet$0(0), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
          t3 = t2.get$current(t2);
          if (t3 instanceof G.LogicalKeyboardKey) {
            result = $.LogicalKeyboardKey__synonyms.$index(0, t3);
            synonyms = result == null ? P.LinkedHashSet_LinkedHashSet$_empty(t1) : P.LinkedHashSet_LinkedHashSet$_literal([result], t1);
            if (synonyms._collection$_length !== 0) {
              first = synonyms._collection$_first;
              if (first == null)
                H.throwExpression(P.StateError$("No elements"));
              pseudoKeys.add$1(0, first._collection$_element);
            } else
              pseudoKeys.add$1(0, t3);
          }
        }
        matchedIntent = this._shortcuts.$index(0, new X.LogicalKeySet(P.HashSet_HashSet$from(pseudoKeys, t1)));
      }
      return matchedIntent;
    },
    handleKeypress$2: function(context, $event) {
      var matchedIntent, t1, action, t2;
      if (!($event instanceof B.RawKeyDownEvent))
        return C.KeyEventResult_1;
      matchedIntent = this._find$1$keysPressed(null);
      if (matchedIntent != null) {
        t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._context;
        t1.toString;
        action = U.Actions_maybeFind(t1, matchedIntent, type$.Intent);
        if (action != null && action.isEnabled$1(0, matchedIntent)) {
          t1.dependOnInheritedWidgetOfExactType$1$0(type$._ActionsMarker);
          t2 = U.Actions__findDispatcher(t1);
          t2.invokeAction$3(action, matchedIntent, t1);
          return action.consumesKey$1(matchedIntent) ? C.KeyEventResult_0 : C.KeyEventResult_2;
        }
      }
      return C.KeyEventResult_1;
    }
  };
  X.Shortcuts.prototype = {
    createState$0: function() {
      return new X._ShortcutsState(C._StateLifecycle_0);
    }
  };
  X._ShortcutsState.prototype = {
    get$manager: function() {
      this._widget.toString;
      var t1 = this._internalManager;
      t1.toString;
      return t1;
    },
    dispose$0: function(_) {
      var t1 = this._internalManager;
      if (t1 != null)
        t1.ChangeNotifier__listeners = null;
      this.super$State$dispose(0);
    },
    initState$0: function() {
      var _this = this;
      _this.super$State$initState();
      _this._widget.toString;
      _this._internalManager = X.ShortcutManager$();
      _this.get$manager().set$shortcuts(_this._widget.shortcuts);
    },
    didUpdateWidget$1: function(oldWidget) {
      var _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      _this._widget.toString;
      _this.get$manager().set$shortcuts(_this._widget.shortcuts);
    },
    _handleOnKey$2: function(node, $event) {
      var t1, t2;
      if (node._context == null)
        return C.KeyEventResult_1;
      t1 = this.get$manager();
      t2 = node._context;
      t2.toString;
      return t1.handleKeypress$2(t2, $event);
    },
    build$1: function(_, context) {
      var _null = null,
        t1 = C.Type_Shortcuts_6TW.toString$0(0);
      return L.Focus$(false, false, new X._ShortcutsMarker(this.get$manager(), this._widget.child, _null), t1, true, _null, true, _null, _null, this.get$_handleOnKey(), _null);
    }
  };
  X._ShortcutsMarker.prototype = {};
  X._LogicalKeySet_KeySet_Diagnosticable.prototype = {};
  X._ShortcutManager_ChangeNotifier_Diagnosticable.prototype = {};
  L.DefaultTextStyle.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      var t1;
      if (this.style.$eq(0, oldWidget.style))
        if (this.overflow === oldWidget.overflow)
          t1 = this.textWidthBasis !== oldWidget.textWidthBasis || false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    }
  };
  Y.TextEditingAction.prototype = {
    get$textEditingActionTarget: function() {
      var t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      if ((t1 == null ? null : t1._context) != null)
        t1._context.toString;
      return null;
    },
    isEnabled$1: function(_, intent) {
      this.get$textEditingActionTarget();
      return false;
    }
  };
  M.DoNothingAndStopPropagationTextIntent.prototype = {};
  U.TickerMode.prototype = {
    build$1: function(_, context) {
      var t1 = this.enabled && U.TickerMode_of(context);
      return new U._EffectiveTickerMode(t1, this.child, null);
    }
  };
  U._EffectiveTickerMode.prototype = {
    updateShouldNotify$1: function(oldWidget) {
      return this.enabled !== oldWidget.enabled;
    }
  };
  U.SingleTickerProviderStateMixin.prototype = {
    createTicker$1: function(onTick) {
      return this.SingleTickerProviderStateMixin__ticker = new M.Ticker(onTick, null);
    }
  };
  U.TickerProviderStateMixin.prototype = {
    createTicker$1: function(onTick) {
      var result, _this = this;
      if (_this.TickerProviderStateMixin__tickers == null)
        _this.TickerProviderStateMixin__tickers = P.LinkedHashSet_LinkedHashSet$_empty(type$._WidgetTicker);
      result = new U._WidgetTicker(_this, onTick, "created by " + _this.toString$0(0));
      _this.TickerProviderStateMixin__tickers.add$1(0, result);
      return result;
    }
  };
  U._WidgetTicker.prototype = {
    dispose$0: function(_) {
      this._creator.TickerProviderStateMixin__tickers.remove$1(0, this);
      this.super$Ticker$dispose(0);
    }
  };
  U.Title.prototype = {
    build$1: function(_, context) {
      var t1 = this.color;
      X.SystemChrome_setApplicationSwitcherDescription(new X.ApplicationSwitcherDescription(this.title, t1.get$value(t1)));
      return this.child;
    }
  };
  K.AnimatedWidget.prototype = {
    createState$0: function() {
      return new K._AnimatedState(C._StateLifecycle_0);
    }
  };
  K._AnimatedState.prototype = {
    initState$0: function() {
      this.super$State$initState();
      this._widget.listenable.addListener$1(0, this.get$_transitions$_handleChange());
    },
    didUpdateWidget$1: function(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.listenable;
      if (_this._widget.listenable !== t1) {
        t2 = _this.get$_transitions$_handleChange();
        t1.removeListener$1(0, t2);
        _this._widget.listenable.addListener$1(0, t2);
      }
    },
    dispose$0: function(_) {
      this._widget.listenable.removeListener$1(0, this.get$_transitions$_handleChange());
      this.super$State$dispose(0);
    },
    _transitions$_handleChange$0: function() {
      this.setState$1(new K._AnimatedState__handleChange_closure());
    },
    build$1: function(_, context) {
      return this._widget.build$1(0, context);
    }
  };
  K._AnimatedState__handleChange_closure.prototype = {
    call$0: function() {
    },
    $signature: 0
  };
  K.SlideTransition.prototype = {
    build$1: function(_, context) {
      var _this = this,
        t1 = type$.Animation_Offset._as(_this.listenable),
        offset = t1.get$value(t1);
      if (_this.textDirection === C.TextDirection_0)
        offset = new P.Offset(-offset._dx, offset._dy);
      return new T.FractionalTranslation(offset, _this.transformHitTests, _this.child, null);
    }
  };
  K.FadeTransition.prototype = {
    createRenderObject$1: function(context) {
      var t2, _null = null,
        t1 = new E.RenderAnimatedOpacity(_null, _null, _null, _null, _null);
      t1.get$isRepaintBoundary();
      t2 = t1.get$alwaysNeedsCompositing();
      t1.__RenderObject__needsCompositing = t2;
      t1.set$child(_null);
      t1.set$opacity(0, this.opacity);
      t1.set$alwaysIncludeSemantics(false);
      return t1;
    },
    updateRenderObject$2: function(context, renderObject) {
      renderObject.set$opacity(0, this.opacity);
      renderObject.set$alwaysIncludeSemantics(false);
    }
  };
  K.DecoratedBoxTransition.prototype = {
    build$1: function(_, context) {
      var t1 = this.decoration,
        t2 = t1.parent;
      return M.DecoratedBox$(this.child, t1._evaluatable.transform$1(0, t2.get$value(t2)), C.DecorationPosition_0);
    }
  };
  K.AnimatedBuilder.prototype = {
    build$1: function(_, context) {
      return this.builder.call$2(context, this.child);
    }
  };
  N._WidgetInspectorService.prototype = {};
  N.WidgetInspectorService.prototype = {
    isWidgetCreationTracked$0: function() {
      var t1 = this.WidgetInspectorService__widgetCreationTracked;
      return t1 == null ? this.WidgetInspectorService__widgetCreationTracked = false : t1;
    }
  };
  N._ElementLocationStatsTracker.prototype = {};
  N.InspectorSelection.prototype = {};
  N._describeRelevantUserCode_isOverflowError.prototype = {
    call$0: function() {
      var t2, summary,
        t1 = this.errorSummary;
      if (t1 != null) {
        t2 = Y.DiagnosticsProperty.prototype.get$value.call(t1, t1);
        t2.toString;
        t2 = J.get$isNotEmpty$asx(t2);
      } else
        t2 = false;
      if (t2) {
        t1 = Y.DiagnosticsProperty.prototype.get$value.call(t1, t1);
        t1.toString;
        summary = J.get$first$ax(t1);
        if (typeof summary == "string" && C.JSString_methods.startsWith$1(summary, "A RenderFlex overflowed by"))
          return true;
      }
      return false;
    },
    $signature: 44
  };
  N._describeRelevantUserCode_processElement.prototype = {
    call$1: function(target) {
      return true;
    },
    $signature: 39
  };
  E.TypedDataBuffer.prototype = {
    get$length: function(_) {
      return this._typed_buffer$_length;
    },
    $index: function(_, index) {
      if (index >= this._typed_buffer$_length)
        throw H.wrapException(P.IndexError$(index, this, null, null, null));
      return this._typed_buffer$_buffer[index];
    },
    $indexSet: function(_, index, value) {
      if (index >= this._typed_buffer$_length)
        throw H.wrapException(P.IndexError$(index, this, null, null, null));
      this._typed_buffer$_buffer[index] = value;
    },
    set$length: function(_, newLength) {
      var t2, i, newBuffer, _this = this,
        t1 = _this._typed_buffer$_length;
      if (newLength < t1)
        for (t2 = _this._typed_buffer$_buffer, i = newLength; i < t1; ++i)
          t2[i] = 0;
      else {
        t1 = _this._typed_buffer$_buffer.length;
        if (newLength > t1) {
          if (t1 === 0)
            newBuffer = new Uint8Array(newLength);
          else
            newBuffer = _this._createBiggerBuffer$1(newLength);
          C.NativeUint8List_methods.setRange$3(newBuffer, 0, _this._typed_buffer$_length, _this._typed_buffer$_buffer);
          _this._typed_buffer$_buffer = newBuffer;
        }
      }
      _this._typed_buffer$_length = newLength;
    },
    _typed_buffer$_add$1: function(_, value) {
      var _this = this,
        t1 = _this._typed_buffer$_length;
      if (t1 === _this._typed_buffer$_buffer.length)
        _this._typed_buffer$_grow$1(t1);
      _this._typed_buffer$_buffer[_this._typed_buffer$_length++] = value;
    },
    add$1: function(_, value) {
      var _this = this,
        t1 = _this._typed_buffer$_length;
      if (t1 === _this._typed_buffer$_buffer.length)
        _this._typed_buffer$_grow$1(t1);
      _this._typed_buffer$_buffer[_this._typed_buffer$_length++] = value;
    },
    addAll$3: function(_, values, start, end) {
      P.RangeError_checkNotNegative(start, "start");
      if (end != null && start > end)
        throw H.wrapException(P.RangeError$range(end, start, null, "end", null));
      this._addAll$3(values, start, end);
    },
    addAll$1: function($receiver, values) {
      return this.addAll$3($receiver, values, 0, null);
    },
    _addAll$3: function(values, start, end) {
      var t1, i, value;
      if (type$.List_dynamic._is(values))
        end = end == null ? values.length : end;
      if (end != null) {
        this._insertKnownLength$4(this._typed_buffer$_length, values, start, end);
        return;
      }
      for (t1 = J.get$iterator$ax(values), i = 0; t1.moveNext$0();) {
        value = t1.get$current(t1);
        if (i >= start)
          this._typed_buffer$_add$1(0, value);
        ++i;
      }
      if (i < start)
        throw H.wrapException(P.StateError$("Too few elements"));
    },
    _insertKnownLength$4: function(index, values, start, end) {
      var t1, valuesLength, newLength, t2, _this = this;
      if (type$.List_dynamic._is(values)) {
        t1 = values.length;
        if (start > t1 || end > t1)
          throw H.wrapException(P.StateError$("Too few elements"));
      }
      valuesLength = end - start;
      newLength = _this._typed_buffer$_length + valuesLength;
      _this._ensureCapacity$1(newLength);
      t1 = _this._typed_buffer$_buffer;
      t2 = index + valuesLength;
      C.NativeUint8List_methods.setRange$4(t1, t2, _this._typed_buffer$_length + valuesLength, t1, index);
      C.NativeUint8List_methods.setRange$4(_this._typed_buffer$_buffer, index, t2, values, start);
      _this._typed_buffer$_length = newLength;
    },
    _ensureCapacity$1: function(requiredCapacity) {
      var newBuffer, _this = this;
      if (requiredCapacity <= _this._typed_buffer$_buffer.length)
        return;
      newBuffer = _this._createBiggerBuffer$1(requiredCapacity);
      C.NativeUint8List_methods.setRange$3(newBuffer, 0, _this._typed_buffer$_length, _this._typed_buffer$_buffer);
      _this._typed_buffer$_buffer = newBuffer;
    },
    _createBiggerBuffer$1: function(requiredCapacity) {
      var newLength = this._typed_buffer$_buffer.length * 2;
      if (requiredCapacity != null && newLength < requiredCapacity)
        newLength = requiredCapacity;
      else if (newLength < 8)
        newLength = 8;
      return new Uint8Array(newLength);
    },
    _typed_buffer$_grow$1: function($length) {
      var t1 = this._createBiggerBuffer$1(null);
      C.NativeUint8List_methods.setRange$3(t1, 0, $length, this._typed_buffer$_buffer);
      this._typed_buffer$_buffer = t1;
    },
    setRange$4: function(_, start, end, source, skipCount) {
      var t1 = this._typed_buffer$_length;
      if (end > t1)
        throw H.wrapException(P.RangeError$range(end, 0, t1, null, null));
      t1 = this._typed_buffer$_buffer;
      if (H._instanceType(this)._eval$1("TypedDataBuffer<TypedDataBuffer.E>")._is(source))
        C.NativeUint8List_methods.setRange$4(t1, start, end, source._typed_buffer$_buffer, skipCount);
      else
        C.NativeUint8List_methods.setRange$4(t1, start, end, source, skipCount);
    },
    setRange$3: function($receiver, start, end, source) {
      return this.setRange$4($receiver, start, end, source, 0);
    }
  };
  E._IntBuffer0.prototype = {};
  E.Uint8Buffer.prototype = {};
  A.hashObjects_closure.prototype = {
    call$2: function(h, i) {
      var hash = h + J.get$hashCode$(i) & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    $signature: 300
  };
  E.Matrix4.prototype = {
    setFrom$1: function(arg) {
      var argStorage = arg._m4storage,
        t1 = this._m4storage;
      t1[15] = argStorage[15];
      t1[14] = argStorage[14];
      t1[13] = argStorage[13];
      t1[12] = argStorage[12];
      t1[11] = argStorage[11];
      t1[10] = argStorage[10];
      t1[9] = argStorage[9];
      t1[8] = argStorage[8];
      t1[7] = argStorage[7];
      t1[6] = argStorage[6];
      t1[5] = argStorage[5];
      t1[4] = argStorage[4];
      t1[3] = argStorage[3];
      t1[2] = argStorage[2];
      t1[1] = argStorage[1];
      t1[0] = argStorage[0];
    },
    toString$0: function(_) {
      var _this = this;
      return "[0] " + _this.getRow$1(0).toString$0(0) + "\n[1] " + _this.getRow$1(1).toString$0(0) + "\n[2] " + _this.getRow$1(2).toString$0(0) + "\n[3] " + _this.getRow$1(3).toString$0(0) + "\n";
    },
    $index: function(_, i) {
      return this._m4storage[i];
    },
    $eq: function(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof E.Matrix4) {
        t1 = this._m4storage;
        t2 = t1[0];
        t3 = other._m4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3] && t1[4] === t3[4] && t1[5] === t3[5] && t1[6] === t3[6] && t1[7] === t3[7] && t1[8] === t3[8] && t1[9] === t3[9] && t1[10] === t3[10] && t1[11] === t3[11] && t1[12] === t3[12] && t1[13] === t3[13] && t1[14] === t3[14] && t1[15] === t3[15];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return A.hashObjects(this._m4storage);
    },
    setRow$2: function(row, arg) {
      var argStorage = arg._v4storage,
        t1 = this._m4storage;
      t1[row] = argStorage[0];
      t1[4 + row] = argStorage[1];
      t1[8 + row] = argStorage[2];
      t1[12 + row] = argStorage[3];
    },
    getRow$1: function(row) {
      var t1 = new Float64Array(4),
        t2 = this._m4storage;
      t1[0] = t2[row];
      t1[1] = t2[4 + row];
      t1[2] = t2[8 + row];
      t1[3] = t2[12 + row];
      return new E.Vector4(t1);
    },
    $mul: function(_, arg) {
      var t1;
      if (typeof arg == "number") {
        t1 = new E.Matrix4(new Float64Array(16));
        t1.setFrom$1(this);
        t1.scale$3(0, arg, null, null);
        return t1;
      }
      if (arg instanceof E.Matrix4) {
        t1 = new E.Matrix4(new Float64Array(16));
        t1.setFrom$1(this);
        t1.multiply$1(0, arg);
        return t1;
      }
      throw H.wrapException(P.ArgumentError$(arg));
    },
    $add: function(_, arg) {
      var t1 = new E.Matrix4(new Float64Array(16));
      t1.setFrom$1(this);
      t1.add$1(0, arg);
      return t1;
    },
    $sub: function(_, arg) {
      var oStorage,
        t1 = new Float64Array(16),
        t2 = new E.Matrix4(t1);
      t2.setFrom$1(this);
      oStorage = arg._m4storage;
      t1[0] = t1[0] - oStorage[0];
      t1[1] = t1[1] - oStorage[1];
      t1[2] = t1[2] - oStorage[2];
      t1[3] = t1[3] - oStorage[3];
      t1[4] = t1[4] - oStorage[4];
      t1[5] = t1[5] - oStorage[5];
      t1[6] = t1[6] - oStorage[6];
      t1[7] = t1[7] - oStorage[7];
      t1[8] = t1[8] - oStorage[8];
      t1[9] = t1[9] - oStorage[9];
      t1[10] = t1[10] - oStorage[10];
      t1[11] = t1[11] - oStorage[11];
      t1[12] = t1[12] - oStorage[12];
      t1[13] = t1[13] - oStorage[13];
      t1[14] = t1[14] - oStorage[14];
      t1[15] = t1[15] - oStorage[15];
      return t2;
    },
    translate$2: function(_, x, y) {
      var t1 = this._m4storage,
        t2 = t1[0],
        t3 = t1[4],
        t4 = t1[8],
        t5 = t1[12],
        t6 = t1[1],
        t7 = t1[5],
        t8 = t1[9],
        t9 = t1[13],
        t10 = t1[2],
        t11 = t1[6],
        t12 = t1[10],
        t13 = t1[14],
        t14 = t1[3],
        t15 = t1[7],
        t16 = t1[11],
        t17 = t1[15];
      t1[12] = t2 * x + t3 * y + t4 * 0 + t5;
      t1[13] = t6 * x + t7 * y + t8 * 0 + t9;
      t1[14] = t10 * x + t11 * y + t12 * 0 + t13;
      t1[15] = t14 * x + t15 * y + t16 * 0 + t17;
    },
    scale$3: function(_, x, y, z) {
      var sy, sz, sx, t1;
      if (typeof x == "number") {
        sy = y == null ? x : y;
        sz = z == null ? x : z;
      } else
        throw H.wrapException(P.UnimplementedError$(null));
      sx = x;
      t1 = this._m4storage;
      t1[0] = t1[0] * sx;
      t1[1] = t1[1] * sx;
      t1[2] = t1[2] * sx;
      t1[3] = t1[3] * sx;
      t1[4] = t1[4] * sy;
      t1[5] = t1[5] * sy;
      t1[6] = t1[6] * sy;
      t1[7] = t1[7] * sy;
      t1[8] = t1[8] * sz;
      t1[9] = t1[9] * sz;
      t1[10] = t1[10] * sz;
      t1[11] = t1[11] * sz;
      t1[12] = t1[12];
      t1[13] = t1[13];
      t1[14] = t1[14];
      t1[15] = t1[15];
    },
    setIdentity$0: function() {
      var t1 = this._m4storage;
      t1[0] = 1;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 0;
      t1[5] = 1;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 0;
      t1[9] = 0;
      t1[10] = 1;
      t1[11] = 0;
      t1[12] = 0;
      t1[13] = 0;
      t1[14] = 0;
      t1[15] = 1;
    },
    copyInverse$1: function(arg) {
      var invDet, t1, t2, t3,
        argStorage = arg._m4storage,
        a00 = argStorage[0],
        a01 = argStorage[1],
        a02 = argStorage[2],
        a03 = argStorage[3],
        a10 = argStorage[4],
        a11 = argStorage[5],
        a12 = argStorage[6],
        a13 = argStorage[7],
        a20 = argStorage[8],
        a21 = argStorage[9],
        a22 = argStorage[10],
        a23 = argStorage[11],
        a30 = argStorage[12],
        a31 = argStorage[13],
        a32 = argStorage[14],
        a33 = argStorage[15],
        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0) {
        this.setFrom$1(arg);
        return 0;
      }
      invDet = 1 / det;
      t1 = this._m4storage;
      t1[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
      t1[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
      t1[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
      t1[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
      t2 = -a10;
      t1[4] = (t2 * b11 + a12 * b08 - a13 * b07) * invDet;
      t1[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
      t3 = -a30;
      t1[6] = (t3 * b05 + a32 * b02 - a33 * b01) * invDet;
      t1[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
      t1[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
      t1[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
      t1[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
      t1[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
      t1[12] = (t2 * b09 + a11 * b07 - a12 * b06) * invDet;
      t1[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
      t1[14] = (t3 * b03 + a31 * b01 - a32 * b00) * invDet;
      t1[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
      return det;
    },
    add$1: function(_, o) {
      var oStorage = o._m4storage,
        t1 = this._m4storage;
      t1[0] = t1[0] + oStorage[0];
      t1[1] = t1[1] + oStorage[1];
      t1[2] = t1[2] + oStorage[2];
      t1[3] = t1[3] + oStorage[3];
      t1[4] = t1[4] + oStorage[4];
      t1[5] = t1[5] + oStorage[5];
      t1[6] = t1[6] + oStorage[6];
      t1[7] = t1[7] + oStorage[7];
      t1[8] = t1[8] + oStorage[8];
      t1[9] = t1[9] + oStorage[9];
      t1[10] = t1[10] + oStorage[10];
      t1[11] = t1[11] + oStorage[11];
      t1[12] = t1[12] + oStorage[12];
      t1[13] = t1[13] + oStorage[13];
      t1[14] = t1[14] + oStorage[14];
      t1[15] = t1[15] + oStorage[15];
    },
    multiply$1: function(_, arg) {
      var t1 = this._m4storage,
        m00 = t1[0],
        m01 = t1[4],
        m02 = t1[8],
        m03 = t1[12],
        m10 = t1[1],
        m11 = t1[5],
        m12 = t1[9],
        m13 = t1[13],
        m20 = t1[2],
        m21 = t1[6],
        m22 = t1[10],
        m23 = t1[14],
        m30 = t1[3],
        m31 = t1[7],
        m32 = t1[11],
        m33 = t1[15],
        argStorage = arg._m4storage,
        n00 = argStorage[0],
        n01 = argStorage[4],
        n02 = argStorage[8],
        n03 = argStorage[12],
        n10 = argStorage[1],
        n11 = argStorage[5],
        n12 = argStorage[9],
        n13 = argStorage[13],
        n20 = argStorage[2],
        n21 = argStorage[6],
        n22 = argStorage[10],
        n23 = argStorage[14],
        n30 = argStorage[3],
        n31 = argStorage[7],
        n32 = argStorage[11],
        n33 = argStorage[15];
      t1[0] = m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30;
      t1[4] = m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31;
      t1[8] = m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32;
      t1[12] = m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33;
      t1[1] = m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30;
      t1[5] = m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31;
      t1[9] = m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32;
      t1[13] = m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33;
      t1[2] = m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30;
      t1[6] = m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31;
      t1[10] = m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32;
      t1[14] = m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33;
      t1[3] = m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30;
      t1[7] = m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31;
      t1[11] = m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32;
      t1[15] = m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33;
    },
    transform3$1: function(arg) {
      var argStorage = arg._v3storage,
        t1 = this._m4storage,
        t2 = t1[0],
        t3 = argStorage[0],
        t4 = t1[4],
        t5 = argStorage[1],
        t6 = t1[8],
        t7 = argStorage[2],
        t8 = t1[12],
        t9 = t1[1],
        t10 = t1[5],
        t11 = t1[9],
        t12 = t1[13],
        t13 = t1[2],
        t14 = t1[6],
        t15 = t1[10];
      t1 = t1[14];
      argStorage[0] = t2 * t3 + t4 * t5 + t6 * t7 + t8;
      argStorage[1] = t9 * t3 + t10 * t5 + t11 * t7 + t12;
      argStorage[2] = t13 * t3 + t14 * t5 + t15 * t7 + t1;
      return arg;
    },
    perspectiveTransform$1: function(arg) {
      var argStorage = arg._v3storage,
        t1 = this._m4storage,
        t2 = t1[0],
        t3 = argStorage[0],
        t4 = t1[4],
        t5 = argStorage[1],
        t6 = t1[8],
        t7 = argStorage[2],
        t8 = t1[12],
        t9 = t1[1],
        t10 = t1[5],
        t11 = t1[9],
        t12 = t1[13],
        t13 = t1[2],
        t14 = t1[6],
        t15 = t1[10],
        t16 = t1[14],
        w_ = 1 / (t1[3] * t3 + t1[7] * t5 + t1[11] * t7 + t1[15]);
      argStorage[0] = (t2 * t3 + t4 * t5 + t6 * t7 + t8) * w_;
      argStorage[1] = (t9 * t3 + t10 * t5 + t11 * t7 + t12) * w_;
      argStorage[2] = (t13 * t3 + t14 * t5 + t15 * t7 + t16) * w_;
      return arg;
    }
  };
  E.Vector3.prototype = {
    setValues$3: function(x, y, z) {
      var t1 = this._v3storage;
      t1[0] = x;
      t1[1] = y;
      t1[2] = z;
    },
    setFrom$1: function(other) {
      var otherStorage = other._v3storage,
        t1 = this._v3storage;
      t1[0] = otherStorage[0];
      t1[1] = otherStorage[1];
      t1[2] = otherStorage[2];
    },
    toString$0: function(_) {
      var t1 = this._v3storage;
      return "[" + H.S(t1[0]) + "," + H.S(t1[1]) + "," + H.S(t1[2]) + "]";
    },
    $eq: function(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof E.Vector3) {
        t1 = this._v3storage;
        t2 = t1[0];
        t3 = other._v3storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return A.hashObjects(this._v3storage);
    },
    $sub: function(_, other) {
      var argStorage,
        t1 = new Float64Array(3),
        t2 = new E.Vector3(t1);
      t2.setFrom$1(this);
      argStorage = other._v3storage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      return t2;
    },
    $add: function(_, other) {
      var t1 = new E.Vector3(new Float64Array(3));
      t1.setFrom$1(this);
      t1.add$1(0, other);
      return t1;
    },
    $mul: function(_, scale) {
      var t1 = new Float64Array(3),
        t2 = new E.Vector3(t1);
      t2.setFrom$1(this);
      t1[2] = t1[2] * scale;
      t1[1] = t1[1] * scale;
      t1[0] = t1[0] * scale;
      return t2;
    },
    $index: function(_, i) {
      return this._v3storage[i];
    },
    get$length: function(_) {
      var t1 = this._v3storage,
        t2 = t1[0],
        t3 = t1[1];
      t1 = t1[2];
      return Math.sqrt(t2 * t2 + t3 * t3 + t1 * t1);
    },
    dot$1: function(other) {
      var otherStorage = other._v3storage,
        t1 = this._v3storage;
      return t1[0] * otherStorage[0] + t1[1] * otherStorage[1] + t1[2] * otherStorage[2];
    },
    add$1: function(_, arg) {
      var argStorage = arg._v3storage,
        t1 = this._v3storage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
    },
    scaled$1: function(arg) {
      var t1 = new Float64Array(3),
        t2 = new E.Vector3(t1);
      t2.setFrom$1(this);
      t1[2] = t1[2] * arg;
      t1[1] = t1[1] * arg;
      t1[0] = t1[0] * arg;
      return t2;
    }
  };
  E.Vector4.prototype = {
    setValues$4: function(x_, y_, z_, w_) {
      var t1 = this._v4storage;
      t1[3] = w_;
      t1[2] = z_;
      t1[1] = y_;
      t1[0] = x_;
    },
    setFrom$1: function(other) {
      var otherStorage = other._v4storage,
        t1 = this._v4storage;
      t1[3] = otherStorage[3];
      t1[2] = otherStorage[2];
      t1[1] = otherStorage[1];
      t1[0] = otherStorage[0];
    },
    toString$0: function(_) {
      var t1 = this._v4storage;
      return H.S(t1[0]) + "," + H.S(t1[1]) + "," + H.S(t1[2]) + "," + H.S(t1[3]);
    },
    $eq: function(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof E.Vector4) {
        t1 = this._v4storage;
        t2 = t1[0];
        t3 = other._v4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode: function(_) {
      return A.hashObjects(this._v4storage);
    },
    $sub: function(_, other) {
      var argStorage,
        t1 = new Float64Array(4),
        t2 = new E.Vector4(t1);
      t2.setFrom$1(this);
      argStorage = other._v4storage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      t1[3] = t1[3] - argStorage[3];
      return t2;
    },
    $add: function(_, other) {
      var t1 = new E.Vector4(new Float64Array(4));
      t1.setFrom$1(this);
      t1.add$1(0, other);
      return t1;
    },
    $mul: function(_, scale) {
      var t1 = new Float64Array(4),
        t2 = new E.Vector4(t1);
      t2.setFrom$1(this);
      t1[0] = t1[0] * scale;
      t1[1] = t1[1] * scale;
      t1[2] = t1[2] * scale;
      t1[3] = t1[3] * scale;
      return t2;
    },
    $index: function(_, i) {
      return this._v4storage[i];
    },
    get$length: function(_) {
      var t1 = this._v4storage,
        t2 = t1[0],
        t3 = t1[1],
        t4 = t1[2];
      t1 = t1[3];
      return Math.sqrt(t2 * t2 + t3 * t3 + t4 * t4 + t1 * t1);
    },
    add$1: function(_, arg) {
      var argStorage = arg._v4storage,
        t1 = this._v4storage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
      t1[3] = t1[3] + argStorage[3];
    }
  };
  (function aliases() {
    var _ = H._SaveStackTracking.prototype;
    _.super$_SaveStackTracking$clear = _.clear$0;
    _.super$_SaveStackTracking$save = _.save$0;
    _.super$_SaveStackTracking$restore = _.restore$0;
    _.super$_SaveStackTracking$translate = _.translate$2;
    _.super$_SaveStackTracking$transform = _.transform$1;
    _.super$_SaveStackTracking$clipRect = _.clipRect$1;
    _.super$_SaveStackTracking$clipRRect = _.clipRRect$1;
    _.super$_SaveStackTracking$clipPath = _.clipPath$1;
    _ = H.CkCanvas.prototype;
    _.super$CkCanvas$clipPath = _.clipPath$2;
    _.super$CkCanvas$clipRRect = _.clipRRect$2;
    _.super$CkCanvas$clipRect = _.clipRect$3;
    _.super$CkCanvas$drawCircle = _.drawCircle$3;
    _.super$CkCanvas$drawDRRect = _.drawDRRect$3;
    _.super$CkCanvas$drawPaint = _.drawPaint$1;
    _.super$CkCanvas$drawParagraph = _.drawParagraph$2;
    _.super$CkCanvas$drawPath = _.drawPath$2;
    _.super$CkCanvas$drawPicture = _.drawPicture$1;
    _.super$CkCanvas$drawRRect = _.drawRRect$2;
    _.super$CkCanvas$drawRect = _.drawRect$2;
    _.super$CkCanvas$drawShadow = _.drawShadow$4;
    _.super$CkCanvas$restore = _.restore$0;
    _.super$CkCanvas$restoreToCount = _.restoreToCount$1;
    _.super$CkCanvas$save = _.save$0;
    _.super$CkCanvas$saveLayer = _.saveLayer$2;
    _.super$CkCanvas$transform = _.transform$1;
    _.super$CkCanvas$translate = _.translate$2;
    _ = H.ContainerLayer.prototype;
    _.super$ContainerLayer$preroll = _.preroll$2;
    _ = H._DomClip.prototype;
    _.super$_DomClip$createElement = _.createElement$0;
    _ = H.PersistedSurface.prototype;
    _.super$PersistedSurface$revive = _.revive$0;
    _.super$PersistedSurface$build = _.build$0;
    _.super$PersistedSurface$adoptElements = _.adoptElements$1;
    _.super$PersistedSurface$update = _.update$1;
    _.super$PersistedSurface$retain = _.retain$0;
    _.super$PersistedSurface$discard = _.discard$0;
    _.super$PersistedSurface$preroll = _.preroll$0;
    _ = H.PersistedContainerSurface.prototype;
    _.super$PersistedContainerSurface$recomputeTransformAndClip = _.recomputeTransformAndClip$0;
    _.super$PersistedContainerSurface$update = _.update$1;
    _.super$PersistedContainerSurface$discard = _.discard$0;
    _ = H.DefaultTextEditingStrategy.prototype;
    _.super$DefaultTextEditingStrategy$initializeTextEditing = _.initializeTextEditing$3$onAction$onChange;
    _.super$DefaultTextEditingStrategy$updateElementStyle = _.updateElementStyle$1;
    _.super$DefaultTextEditingStrategy$disable = _.disable$0;
    _.super$DefaultTextEditingStrategy$enable = _.enable$3$onAction$onChange;
    _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _ = J.JavaScriptObject.prototype;
    _.super$JavaScriptObject$toString = _.toString$0;
    _ = P.ListMixin.prototype;
    _.super$ListMixin$setRange = _.setRange$4;
    _ = P.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _ = P.Object.prototype;
    _.super$Object$$eq = _.$eq;
    _.super$Object$toString = _.toString$0;
    _ = W.Element0.prototype;
    _.super$Element$createFragment = _.createFragment$3$treeSanitizer$validator;
    _ = W.EventTarget.prototype;
    _.super$EventTarget$addEventListener = _.addEventListener$3;
    _ = W._SimpleNodeValidator.prototype;
    _.super$_SimpleNodeValidator$allowsAttribute = _.allowsAttribute$3;
    _ = P.JsObject.prototype;
    _.super$JsObject$$index = _.$index;
    _.super$JsObject$$indexSet = _.$indexSet;
    _ = P._JsArray_JsObject_ListMixin.prototype;
    _.super$_JsArray_JsObject_ListMixin$$indexSet = _.$indexSet;
    _ = P.Color.prototype;
    _.super$Color$$eq = _.$eq;
    _.super$Color$toString = _.toString$0;
    _ = X.Animation0.prototype;
    _.super$Animation$toStringDetails = _.toStringDetails$0;
    _ = Z.ParametricCurve.prototype;
    _.super$ParametricCurve$transform = _.transform$1;
    _ = S.AnimationEagerListenerMixin.prototype;
    _.super$AnimationEagerListenerMixin$dispose = _.dispose$0;
    _ = N.BindingBase.prototype;
    _.super$BindingBase$initInstances = _.initInstances$0;
    _.super$BindingBase$initServiceExtensions = _.initServiceExtensions$0;
    _.super$BindingBase$unlocked = _.unlocked$0;
    _ = B.ChangeNotifier.prototype;
    _.super$ChangeNotifier$dispose = _.dispose$0;
    _ = Y.Diagnosticable.prototype;
    _.super$Diagnosticable$toStringShort = _.toStringShort$0;
    _.super$Diagnosticable$debugFillProperties = _.debugFillProperties$1;
    _ = Y.DiagnosticableTreeMixin.prototype;
    _.super$DiagnosticableTreeMixin$toStringDeep = _.toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines;
    _.super$DiagnosticableTreeMixin$toStringShort = _.toStringShort$0;
    _ = B.AbstractNode.prototype;
    _.super$AbstractNode$attach = _.attach$1;
    _.super$AbstractNode$detach = _.detach$0;
    _.super$AbstractNode$adoptChild = _.adoptChild$1;
    _.super$AbstractNode$dropChild = _.dropChild$1;
    _ = N.GestureBinding.prototype;
    _.super$GestureBinding$hitTest = _.hitTest$2;
    _.super$GestureBinding$dispatchEvent = _.dispatchEvent$2;
    _ = S.GestureRecognizer.prototype;
    _.super$GestureRecognizer$isPointerAllowed = _.isPointerAllowed$1;
    _.super$GestureRecognizer$dispose = _.dispose$0;
    _ = S.OneSequenceGestureRecognizer.prototype;
    _.super$OneSequenceGestureRecognizer$resolve = _.resolve$1;
    _.super$OneSequenceGestureRecognizer$dispose = _.dispose$0;
    _.super$OneSequenceGestureRecognizer$startTrackingPointer = _.startTrackingPointer$2;
    _ = S.PrimaryPointerGestureRecognizer.prototype;
    _.super$PrimaryPointerGestureRecognizer$addAllowedPointer = _.addAllowedPointer$1;
    _.super$PrimaryPointerGestureRecognizer$acceptGesture = _.acceptGesture$1;
    _.super$PrimaryPointerGestureRecognizer$rejectGesture = _.rejectGesture$1;
    _ = R.__InkResponseState_State_AutomaticKeepAliveClientMixin.prototype;
    _.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$initState = _.initState$0;
    _.super$__InkResponseState_State_AutomaticKeepAliveClientMixin$deactivate = _.deactivate$0;
    _ = M.InkFeature.prototype;
    _.super$InkFeature$dispose = _.dispose$0;
    _ = M._ScaffoldMessengerState_State_TickerProviderStateMixin.prototype;
    _.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _.super$_ScaffoldMessengerState_State_TickerProviderStateMixin$didChangeDependencies = _.didChangeDependencies$0;
    _ = K.BorderRadiusGeometry.prototype;
    _.super$BorderRadiusGeometry$subtract = _.subtract$1;
    _.super$BorderRadiusGeometry$add = _.add$1;
    _ = Y.ShapeBorder.prototype;
    _.super$ShapeBorder$lerpFrom = _.lerpFrom$2;
    _.super$ShapeBorder$lerpTo = _.lerpTo$2;
    _ = V.EdgeInsetsGeometry.prototype;
    _.super$EdgeInsetsGeometry$add = _.add$1;
    _ = G.InlineSpan.prototype;
    _.super$InlineSpan$$eq = _.$eq;
    _ = N.RendererBinding.prototype;
    _.super$RendererBinding$handleMetricsChanged = _.handleMetricsChanged$0;
    _.super$RendererBinding$handlePlatformBrightnessChanged = _.handlePlatformBrightnessChanged$0;
    _.super$RendererBinding$drawFrame = _.drawFrame$0;
    _ = S.BoxParentData.prototype;
    _.super$BoxParentData$toString = _.toString$0;
    _ = S.RenderBox.prototype;
    _.super$RenderBox$computeDistanceToActualBaseline = _.computeDistanceToActualBaseline$1;
    _.super$RenderBox$performResize = _.performResize$0;
    _.super$RenderBox$hitTest = _.hitTest$2$position;
    _ = T.Layer0.prototype;
    _.super$Layer$updateSubtreeNeedsAddToScene = _.updateSubtreeNeedsAddToScene$0;
    _ = T.ContainerLayer0.prototype;
    _.super$ContainerLayer$findAnnotations = _.findAnnotations$1$3$onlyFirst;
    _ = T.OffsetLayer.prototype;
    _.super$OffsetLayer$findAnnotations = _.findAnnotations$1$3$onlyFirst;
    _ = K.ParentData.prototype;
    _.super$ParentData$detach = _.detach$0;
    _ = K.RenderObject.prototype;
    _.super$RenderObject$attach = _.attach$1;
    _.super$RenderObject$markNeedsLayout = _.markNeedsLayout$0;
    _.super$RenderObject$applyPaintTransform = _.applyPaintTransform$2;
    _.super$RenderObject$describeSemanticsConfiguration = _.describeSemanticsConfiguration$1;
    _.super$RenderObject$clearSemantics = _.clearSemantics$0;
    _.super$RenderObject$visitChildrenForSemantics = _.visitChildrenForSemantics$1;
    _.super$RenderObject$assembleSemanticsNode = _.assembleSemanticsNode$3;
    _.super$RenderObject$handleEvent = _.handleEvent$2;
    _ = K.RelayoutWhenSystemFontsChangeMixin.prototype;
    _.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange = _.systemFontsDidChange$0;
    _ = Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin.prototype;
    _.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$attach = _.attach$1;
    _.super$_RenderParagraph_RenderBox_ContainerRenderObjectMixin$detach = _.detach$0;
    _ = E.RenderProxyBoxMixin.prototype;
    _.super$RenderProxyBoxMixin$computeDryLayout = _.computeDryLayout$1;
    _.super$RenderProxyBoxMixin$performLayout = _.performLayout$0;
    _.super$RenderProxyBoxMixin$hitTestChildren = _.hitTestChildren$2$position;
    _.super$RenderProxyBoxMixin$paint = _.paint$2;
    _ = E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin.prototype;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$attach = _.attach$1;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin$detach = _.detach$0;
    _ = E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin.prototype;
    _.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline = _.computeDistanceToActualBaseline$1;
    _ = N.SchedulerBinding.prototype;
    _.super$SchedulerBinding$handleAppLifecycleStateChanged = _.handleAppLifecycleStateChanged$1;
    _ = M.Ticker.prototype;
    _.super$Ticker$dispose = _.dispose$0;
    _ = Q.AssetBundle.prototype;
    _.super$AssetBundle$loadString = _.loadString$2$cache;
    _ = N.ServicesBinding.prototype;
    _.super$ServicesBinding$handleMemoryPressure = _.handleMemoryPressure$0;
    _.super$ServicesBinding$handleSystemMessage = _.handleSystemMessage$1;
    _ = A.MethodChannel.prototype;
    _.super$MethodChannel$_invokeMethod = _._invokeMethod$1$3$arguments$missingOk;
    _ = L.AutomaticKeepAliveClientMixin.prototype;
    _.super$AutomaticKeepAliveClientMixin$build = _.build$1;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$unlocked = _.unlocked$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure = _.handleMemoryPressure$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances = _.initInstances$0;
    _ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = U.FocusTraversalPolicy.prototype;
    _.super$FocusTraversalPolicy$invalidateScopeData = _.invalidateScopeData$1;
    _.super$FocusTraversalPolicy$changedScope = _.changedScope$2$node$oldScope;
    _ = N.State.prototype;
    _.super$State$initState = _.initState$0;
    _.super$State$didUpdateWidget = _.didUpdateWidget$1;
    _.super$State$deactivate = _.deactivate$0;
    _.super$State$dispose = _.dispose$0;
    _.super$State$didChangeDependencies = _.didChangeDependencies$0;
    _ = N.Element.prototype;
    _.super$Element$mount = _.mount$2;
    _.super$Element$update = _.update$1;
    _.super$Element$_updateSlot = _._updateSlot$1;
    _.super$Element$inflateWidget = _.inflateWidget$2;
    _.super$Element$forgetChild = _.forgetChild$1;
    _.super$Element$activate = _.activate$0;
    _.super$Element$deactivate = _.deactivate$0;
    _.super$Element$unmount = _.unmount$0;
    _.super$Element$dependOnInheritedElement = _.dependOnInheritedElement$2$aspect;
    _.super$Element$didChangeDependencies = _.didChangeDependencies$0;
    _ = N.ComponentElement.prototype;
    _.super$ComponentElement$_firstBuild = _._firstBuild$0;
    _.super$ComponentElement$performRebuild = _.performRebuild$0;
    _ = N.ProxyElement.prototype;
    _.super$ProxyElement$build = _.build$0;
    _.super$ProxyElement$update = _.update$1;
    _.super$ProxyElement$updated = _.updated$1;
    _ = N.InheritedElement.prototype;
    _.super$InheritedElement$notifyClients = _.notifyClients$1;
    _ = N.RenderObjectElement.prototype;
    _.super$RenderObjectElement$mount = _.mount$2;
    _.super$RenderObjectElement$update = _.update$1;
    _.super$RenderObjectElement$performRebuild = _.performRebuild$0;
    _ = N.RootRenderObjectElement.prototype;
    _.super$RootRenderObjectElement$mount = _.mount$2;
    _ = G.ImplicitlyAnimatedWidgetState.prototype;
    _.super$ImplicitlyAnimatedWidgetState$initState = _.initState$0;
    _ = G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin.prototype;
    _.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = K.Route.prototype;
    _.super$Route$install = _.install$0;
    _.super$Route$didPush = _.didPush$0;
    _.super$Route$didAdd = _.didAdd$0;
    _.super$Route$didReplace = _.didReplace$1;
    _.super$Route$willPop = _.willPop$0;
    _.super$Route$didPop = _.didPop$1;
    _.super$Route$didPopNext = _.didPopNext$1;
    _.super$Route$didChangeNext = _.didChangeNext$1;
    _.super$Route$didChangePrevious = _.didChangePrevious$1;
    _.super$Route$changedInternalState = _.changedInternalState$0;
    _.super$Route$changedExternalState = _.changedExternalState$0;
    _.super$Route$dispose = _.dispose$0;
    _ = K._RestorationInformation.prototype;
    _.super$_RestorationInformation$computeSerializableData = _.computeSerializableData$0;
    _ = K._NavigatorState_State_TickerProviderStateMixin.prototype;
    _.super$_NavigatorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _.super$_NavigatorState_State_TickerProviderStateMixin$didChangeDependencies = _.didChangeDependencies$0;
    _ = K._NavigatorState_State_TickerProviderStateMixin_RestorationMixin.prototype;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didUpdateWidget = _.didUpdateWidget$1;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$didChangeDependencies = _.didChangeDependencies$0;
    _.super$_NavigatorState_State_TickerProviderStateMixin_RestorationMixin$dispose = _.dispose$0;
    _ = K.RestorationMixin.prototype;
    _.super$RestorationMixin$didToggleBucket = _.didToggleBucket$1;
    _ = U.RestorableValue.prototype;
    _.super$RestorableValue$value = _.set$value;
    _ = U._RestorablePrimitiveValueN.prototype;
    _.super$_RestorablePrimitiveValueN$fromPrimitives = _.fromPrimitives$1;
    _.super$_RestorablePrimitiveValueN$toPrimitives = _.toPrimitives$0;
    _ = T.OverlayRoute.prototype;
    _.super$OverlayRoute$install = _.install$0;
    _.super$OverlayRoute$didPop = _.didPop$1;
    _.super$OverlayRoute$dispose = _.dispose$0;
    _ = T.TransitionRoute.prototype;
    _.super$TransitionRoute$install = _.install$0;
    _.super$TransitionRoute$didPush = _.didPush$0;
    _.super$TransitionRoute$didAdd = _.didAdd$0;
    _.super$TransitionRoute$didPop = _.didPop$1;
    _ = T._ModalRoute_TransitionRoute_LocalHistoryRoute.prototype;
    _.super$_ModalRoute_TransitionRoute_LocalHistoryRoute$willPop = _.willPop$0;
  })();
  (function installTearOffs() {
    var _static_0 = hunkHelpers._static_0,
      _static_1 = hunkHelpers._static_1,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance_2_u = hunkHelpers._instance_2u,
      _static_2 = hunkHelpers._static_2,
      _instance = hunkHelpers.installInstanceTearOff,
      _static = hunkHelpers.installStaticTearOff;
    _static_0(H, "_engine_SkiaObjects_postFrameCleanUp$closure", "SkiaObjects_postFrameCleanUp", 0);
    _static_1(H, "_engine___noopCallback$closure", "_noopCallback", 10);
    _static_1(H, "_engine___newlinePredicate$closure", "_newlinePredicate", 21);
    _static_1(H, "_engine___emptyCallback$closure", "_emptyCallback", 13);
    _instance_0_u(H.AlarmClock.prototype, "get$_timerDidFire", "_timerDidFire$0", 0);
    _instance_0_u(H.FallbackFontDownloadQueue.prototype, "get$startDownloads", "startDownloads$0", 33);
    _instance_1_u(H.SkiaFontCollection.prototype, "get$_getArrayBuffer", "_getArrayBuffer$1", 208);
    var _;
    _instance_1_u(_ = H.DomRenderer.prototype, "get$_metricsDidChange", "_metricsDidChange$1", 129);
    _instance_1_u(_, "get$_languageDidChange", "_languageDidChange$1", 3);
    _instance_1_u(H.KeyboardBinding.prototype, "get$_onKeyData", "_onKeyData$1", 167);
    _instance_1_i(H.MultiEntriesBrowserHistory.prototype, "get$onPopState", "onPopState$1", 7);
    _instance_1_i(H.SingleEntryBrowserHistory.prototype, "get$onPopState", "onPopState$1", 7);
    _instance_1_u(H.PointerBinding.prototype, "get$_onPointerData", "_onPointerData$1", 323);
    _instance_0_i(H.RulerHost.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_ = H.DefaultTextEditingStrategy.prototype, "get$_handleChange", "_handleChange$1", 3);
    _instance_1_u(_, "get$_maybeSendAction", "_maybeSendAction$1", 3);
    _instance_2_u(H.WebExperiments.prototype, "get$updateExperiment", "updateExperiment$2", 224);
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 301);
    _instance_1_i(H._CastIterableBase.prototype, "get$contains", "contains$1", 25);
    _static_0(H, "_js_helper_Primitives_dateNow$closure", "Primitives_dateNow", 28);
    _instance_1_i(H.JsLinkedHashMap.prototype, "get$remove", "remove$1", "2?(Object?)");
    _static_1(P, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 53);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 53);
    _static_1(P, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 53);
    _static_0(P, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(P, "async___nullDataHandler$closure", "_nullDataHandler", 13);
    _instance(P._Completer.prototype, "get$completeError", 0, 1, null, ["call$2", "call$1"], ["completeError$2", "completeError$1"], 102, 0);
    _instance_2_u(P._Future.prototype, "get$_completeError", "_completeError$2", 51);
    _instance_1_i(_ = P._StreamController.prototype, "get$_async$_add", "_async$_add$1", 7);
    _instance_2_u(_, "get$_addError", "_addError$2", 51);
    _instance_0_u(_, "get$_close", "_close$0", 0);
    _instance_0_u(_ = P._ControllerSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_0_u(_ = P._BufferingStreamSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_1_i(P._HashSet.prototype, "get$contains", "contains$1", 25);
    _instance_1_i(P._LinkedHashSet.prototype, "get$contains", "contains$1", 25);
    _instance_1_i(P._UnmodifiableSet.prototype, "get$contains", "contains$1", 25);
    _static_1(P, "convert___defaultToEncodable$closure", "_defaultToEncodable", 26);
    _static_1(P, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 55);
    _instance_1_i(P.Iterable.prototype, "get$contains", "contains$1", 25);
    _static(W, "html__Html5NodeValidator__standardAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__standardAttributeValidator"], 60, 0);
    _static(W, "html__Html5NodeValidator__uriAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__uriAttributeValidator"], 60, 0);
    _instance_1_u(W.Console.prototype, "get$warn", "warn$1", 7);
    _static_1(P, "js___convertToJS$closure", "_convertToJS", 304);
    _static_1(P, "js___convertToDart$closure", "_convertToDart", 305);
    _static(P, "ui_Size_lerp$closure", 3, null, ["call$3"], ["Size_lerp"], 306, 0);
    _static(P, "ui__lerpDouble$closure", 3, null, ["call$3"], ["lerpDouble"], 307, 0);
    _static(P, "ui_Color_lerp$closure", 3, null, ["call$3"], ["Color_lerp"], 308, 0);
    _instance_1_u(P._StoredMessage.prototype, "get$invoke", "invoke$1", 10);
    _instance_1_u(G.AnimationController.prototype, "get$_animation_controller$_tick", "_animation_controller$_tick$1", 6);
    _instance_1_u(S.ReverseAnimation.prototype, "get$_statusChangeHandler", "_statusChangeHandler$1", 8);
    _instance_1_u(S.CurvedAnimation.prototype, "get$_updateCurveDirection", "_updateCurveDirection$1", 8);
    _instance_1_u(_ = S.TrainHoppingAnimation.prototype, "get$_statusChangeHandler", "_statusChangeHandler$1", 8);
    _instance_0_u(_, "get$_valueChangeHandler", "_valueChangeHandler$0", 0);
    _instance_0_u(S.AnimationLocalListenersMixin.prototype, "get$notifyListeners", "notifyListeners$0", 0);
    _instance_1_u(S.AnimationLocalStatusListenersMixin.prototype, "get$notifyStatusListeners", "notifyStatusListeners$1", 8);
    _instance_1_u(_ = D._CupertinoBackGestureDetectorState.prototype, "get$_handleDragStart", "_handleDragStart$1", 132);
    _instance_1_u(_, "get$_handleDragUpdate", "_handleDragUpdate$1", 14);
    _instance_1_u(_, "get$_handleDragEnd", "_handleDragEnd$1", 134);
    _instance_0_u(_, "get$_handleDragCancel", "_handleDragCancel$0", 0);
    _instance_1_u(_, "get$_route$_handlePointerDown", "_route$_handlePointerDown$1", 46);
    _static_1(U, "assertions_FlutterError__defaultErrorHandler$closure", "FlutterError__defaultErrorHandler", 309);
    _static(U, "assertions_FlutterError_dumpErrorToConsole$closure", 1, null, ["call$2$forceReport", "call$1"], ["FlutterError_dumpErrorToConsole", function(details) {
      return U.FlutterError_dumpErrorToConsole(details, false);
    }], 310, 0);
    _static_1(U, "assertions_DiagnosticsStackTrace__createStackFrame$closure", "DiagnosticsStackTrace__createStackFrame", 311);
    _instance_1_i(Y.DiagnosticPropertiesBuilder.prototype, "get$add", "add$1", 72);
    _instance_1_u(B.AbstractNode.prototype, "get$redepthChild", "redepthChild$1", 154);
    _static_1(R, "stack_frame_StackFrame_fromStackTraceLine$closure", "StackFrame_fromStackTraceLine", 312);
    _instance_1_u(_ = N.GestureBinding.prototype, "get$_handlePointerDataPacket", "_handlePointerDataPacket$1", 157);
    _instance_1_u(_, "get$cancelPointer", "cancelPointer$1", 73);
    _instance_0_u(_, "get$_flushPointerEventQueue", "_flushPointerEventQueue$0", 0);
    _instance_1_u(_, "get$_handlePointerEventImmediately", "_handlePointerEventImmediately$1", 19);
    _instance_0_u(_, "get$_handleSampleTimeChanged", "_handleSampleTimeChanged$0", 0);
    _static_1(O, "monodrag_DragGestureRecognizer__defaultBuilder$closure", "DragGestureRecognizer__defaultBuilder", 313);
    _instance_1_u(O.DragGestureRecognizer.prototype, "get$handleEvent", "handleEvent$1", 19);
    _instance_0_u(F._CountdownZoned.prototype, "get$_onTimeout", "_onTimeout$0", 0);
    _instance_1_u(_ = F.DoubleTapGestureRecognizer.prototype, "get$_handleEvent", "_handleEvent$1", 19);
    _instance_1_u(_, "get$_reject", "_reject$1", 160);
    _instance_0_u(_, "get$_multitap$_reset", "_multitap$_reset$0", 0);
    _instance_1_u(S.PrimaryPointerGestureRecognizer.prototype, "get$handleEvent", "handleEvent$1", 19);
    _instance_2_u(_ = S._MaterialAppState.prototype, "get$_inspectorSelectButtonBuilder", "_inspectorSelectButtonBuilder$2", 164);
    _instance_2_u(_, "get$_materialBuilder", "_materialBuilder$2", 74);
    _instance_1_u(_ = Z._RawMaterialButtonState.prototype, "get$_handleHighlightChanged", "_handleHighlightChanged$1", 15);
    _instance_1_u(_, "get$_handleHoveredChanged", "_handleHoveredChanged$1", 15);
    _instance_1_u(_, "get$_handleFocusedChanged", "_handleFocusedChanged$1", 15);
    _instance_1_u(Y.InkHighlight.prototype, "get$_handleAlphaStatusChanged", "_handleAlphaStatusChanged$1", 8);
    _instance_1_u(U.InkSplash.prototype, "get$_ink_splash$_handleAlphaStatusChanged", "_ink_splash$_handleAlphaStatusChanged$1", 8);
    _instance_1_u(_ = R.InkResponse.prototype, "get$getRectCallback", "getRectCallback$1", 171);
    _instance_1_u(_, "get$debugCheckContext", "debugCheckContext$1", 172);
    _instance(_ = R._InkResponseState.prototype, "get$_simulateTap", 0, 0, function() {
      return [null];
    }, ["call$1", "call$0"], ["_simulateTap$1", "_simulateTap$0"], 173, 0);
    _instance_1_u(_, "get$_handleFocusHighlightModeChange", "_handleFocusHighlightModeChange$1", 174);
    _instance_1_u(_, "get$_handleFocusUpdate", "_handleFocusUpdate$1", 15);
    _instance_1_u(_, "get$_handleTapDown", "_handleTapDown$1", 175);
    _instance_0_u(_, "get$_handleTap", "_handleTap$0", 0);
    _instance_0_u(_, "get$_handleTapCancel", "_handleTapCancel$0", 0);
    _instance_1_u(_, "get$_handleMouseEnter", "_handleMouseEnter$1", 176);
    _instance_1_u(_, "get$_handleMouseExit", "_handleMouseExit$1", 76);
    _static(V, "edge_insets_EdgeInsetsGeometry_lerp$closure", 3, null, ["call$3"], ["EdgeInsetsGeometry_lerp"], 314, 0);
    _static(A, "text_style_TextStyle_lerp$closure", 3, null, ["call$3"], ["TextStyle_lerp"], 315, 0);
    _instance_0_u(_ = N.RendererBinding.prototype, "get$_handleSemanticsEnabledChanged", "_handleSemanticsEnabledChanged$0", 0);
    _instance_1_u(_, "get$_handleWebFirstFrame", "_handleWebFirstFrame$1", 6);
    _instance(_, "get$_handleSemanticsAction", 0, 3, null, ["call$3"], ["_handleSemanticsAction$3"], 191, 0);
    _instance_0_u(_, "get$_handleSemanticsOwnerCreated", "_handleSemanticsOwnerCreated$0", 0);
    _instance_0_u(_, "get$_handleSemanticsOwnerDisposed", "_handleSemanticsOwnerDisposed$0", 0);
    _instance_1_u(_, "get$_handlePersistentFrameCallback", "_handlePersistentFrameCallback$1", 6);
    _static_1(K, "object_RenderObject__cleanChildRelayoutBoundary$closure", "RenderObject__cleanChildRelayoutBoundary", 37);
    _instance_0_u(_ = K.RenderObject.prototype, "get$markNeedsPaint", "markNeedsPaint$0", 0);
    _instance(_, "get$showOnScreen", 0, 0, null, ["call$4$curve$descendant$duration$rect", "call$0"], ["showOnScreen$4$curve$descendant$duration$rect", "showOnScreen$0"], 201, 0);
    _instance_0_u(Q.RenderParagraph.prototype, "get$systemFontsDidChange", "systemFontsDidChange$0", 0);
    _instance_2_u(E.RenderProxyBoxMixin.prototype, "get$paint", "paint$2", 38);
    _instance_0_u(E.RenderAnimatedOpacityMixin.prototype, "get$_updateOpacity", "_updateOpacity$0", 0);
    _instance_0_u(E._RenderCustomClip.prototype, "get$_markNeedsClip", "_markNeedsClip$0", 0);
    _instance_0_u(_ = E.RenderSemanticsGestureHandler.prototype, "get$_performSemanticScrollLeft", "_performSemanticScrollLeft$0", 0);
    _instance_0_u(_, "get$_performSemanticScrollRight", "_performSemanticScrollRight$0", 0);
    _instance_0_u(_, "get$_performSemanticScrollUp", "_performSemanticScrollUp$0", 0);
    _instance_0_u(_, "get$_performSemanticScrollDown", "_performSemanticScrollDown$0", 0);
    _instance_0_u(_ = E.RenderSemanticsAnnotations.prototype, "get$_performTap", "_performTap$0", 0);
    _instance_0_u(_, "get$_performLongPress", "_performLongPress$0", 0);
    _instance_0_u(_, "get$_performDismiss", "_performDismiss$0", 0);
    _instance_2_u(K.RenderStack.prototype, "get$paintStack", "paintStack$2", 38);
    _instance_1_u(A.RenderView.prototype, "get$hitTestMouseTrackers", "hitTestMouseTrackers$1", 207);
    _static_2(N, "binding_SchedulerBinding__taskSorter$closure", "SchedulerBinding__taskSorter", 316);
    _static(N, "binding__defaultSchedulingStrategy$closure", 0, null, ["call$2$priority$scheduler"], ["defaultSchedulingStrategy"], 317, 0);
    _instance_1_u(_ = N.SchedulerBinding.prototype, "get$_executeTimingsCallbacks", "_executeTimingsCallbacks$1", 47);
    _instance_0_u(_, "get$_runTasks", "_runTasks$0", 0);
    _instance_0_u(_, "get$ensureVisualUpdate", "ensureVisualUpdate$0", 0);
    _instance_1_u(_, "get$_handleBeginFrame", "_handleBeginFrame$1", 6);
    _instance_0_u(_, "get$_handleDrawFrame", "_handleDrawFrame$0", 0);
    _instance_1_u(M.Ticker.prototype, "get$_ticker$_tick", "_ticker$_tick$1", 6);
    _static_1(Q, "asset_bundle_AssetBundle__utf8decode$closure", "AssetBundle__utf8decode", 318);
    _static_1(N, "binding0_ServicesBinding__parseLicenses$closure", "ServicesBinding__parseLicenses", 319);
    _instance_0_u(_ = N.ServicesBinding.prototype, "get$_addLicenses", "_addLicenses$0", 217);
    _instance_1_u(_, "get$_handleLifecycleMessage", "_handleLifecycleMessage$1", 218);
    _instance(N._DefaultBinaryMessenger.prototype, "get$handlePlatformMessage", 0, 3, null, ["call$3"], ["handlePlatformMessage$3"], 219, 0);
    _instance_1_u(B.RawKeyboard.prototype, "get$_handleKeyEvent", "_handleKeyEvent$1", 222);
    _instance_1_u(K.RestorationManager.prototype, "get$_methodHandler", "_methodHandler$1", 223);
    _instance_1_u(_ = K.RestorationBucket.prototype, "get$_dropChild", "_dropChild$1", 85);
    _instance_1_u(_, "get$_recursivelyUpdateManager", "_recursivelyUpdateManager$1", 85);
    _instance_1_u(U._ActionsState.prototype, "get$_handleActionChanged", "_handleActionChanged$1", 232);
    _instance_1_u(_ = S._WidgetsAppState.prototype, "get$_onGenerateRoute", "_onGenerateRoute$1", 233);
    _instance_1_u(_, "get$_onUnknownRoute", "_onUnknownRoute$1", 234);
    _instance_1_u(T._MouseRegionState.prototype, "get$handleExit", "handleExit$1", 76);
    _instance_0_u(_ = N.WidgetsBinding.prototype, "get$handleLocaleChanged", "handleLocaleChanged$0", 0);
    _instance_1_u(_, "get$_handleNavigationInvocation", "_handleNavigationInvocation$1", 241);
    _instance_0_u(_, "get$_handleBuildScheduled", "_handleBuildScheduled$0", 0);
    _instance_0_u(_ = N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype, "get$handleMetricsChanged", "handleMetricsChanged$0", 0);
    _instance_0_u(_, "get$handlePlatformBrightnessChanged", "handlePlatformBrightnessChanged$0", 0);
    _instance_1_u(_ = O.FocusManager.prototype, "get$_focus_manager$_handlePointerEvent", "_focus_manager$_handlePointerEvent$1", 19);
    _instance_1_u(_, "get$_handleRawKeyEvent", "_handleRawKeyEvent$1", 248);
    _instance_0_u(_, "get$_applyFocusChange", "_applyFocusChange$0", 0);
    _instance_0_u(L._FocusState.prototype, "get$_handleFocusChanged", "_handleFocusChanged$0", 0);
    _static_1(N, "framework__InactiveElements__deactivateRecursively$closure", "_InactiveElements__deactivateRecursively", 4);
    _static_2(N, "framework_Element__sort$closure", "Element__sort", 320);
    _static_1(N, "framework_Element__activateRecursively$closure", "Element__activateRecursively", 4);
    _instance_1_u(N._InactiveElements.prototype, "get$_unmount", "_unmount$1", 4);
    _instance_1_u(_ = D.RawGestureDetectorState.prototype, "get$_gesture_detector$_handlePointerDown", "_gesture_detector$_handlePointerDown$1", 46);
    _instance_1_u(_, "get$_updateSemanticsForRenderObject", "_updateSemanticsForRenderObject$1", 270);
    _instance_1_u(_ = T._HeroFlight.prototype, "get$_buildOverlay", "_buildOverlay$1", 29);
    _instance_1_u(_, "get$_handleAnimationUpdate", "_handleAnimationUpdate$1", 8);
    _instance_0_u(_, "get$onTick", "onTick$0", 0);
    _instance_1_u(_ = T.HeroController.prototype, "get$_handleFlightEnded", "_handleFlightEnded$1", 273);
    _instance(_, "get$_defaultHeroFlightShuttleBuilder", 0, 5, null, ["call$5"], ["_defaultHeroFlightShuttleBuilder$5"], 274, 0);
    _instance_0_u(G.AnimatedWidgetBaseState.prototype, "get$_handleAnimationChanged", "_handleAnimationChanged$0", 0);
    _instance_0_u(S._InheritedNotifierElement.prototype, "get$_handleUpdate", "_handleUpdate$0", 0);
    _static_2(K, "navigator_Navigator_defaultGenerateInitialRoutes$closure", "Navigator_defaultGenerateInitialRoutes", 321);
    _static_1(K, "navigator__RouteEntry_isPresentPredicate$closure", "_RouteEntry_isPresentPredicate", 41);
    _static_1(K, "navigator__RouteEntry_suitableForTransitionAnimationPredicate$closure", "_RouteEntry_suitableForTransitionAnimationPredicate", 41);
    _static_1(K, "navigator__RouteEntry_willBePresentPredicate$closure", "_RouteEntry_willBePresentPredicate", 41);
    _instance_1_u(K._NavigatorPushObservation.prototype, "get$notify", "notify$1", 35);
    _instance_1_u(K._NavigatorPopObservation.prototype, "get$notify", "notify$1", 35);
    _instance_1_u(K._NavigatorRemoveObservation.prototype, "get$notify", "notify$1", 35);
    _instance_1_u(K._NavigatorReplaceObservation.prototype, "get$notify", "notify$1", 35);
    _instance_1_u(_ = K.NavigatorState.prototype, "get$_handlePointerDown", "_handlePointerDown$1", 46);
    _instance_1_u(_, "get$_handlePointerUpOrCancel", "_handlePointerUpOrCancel$1", 19);
    _instance_1_u(U.Notification0.prototype, "get$visitAncestor", "visitAncestor$1", 39);
    _instance_2_u(X._RenderTheatre.prototype, "get$paintStack", "paintStack$2", 38);
    _instance_0_u(K._RootRestorationScopeState.prototype, "get$_replaceRootBucket", "_replaceRootBucket$0", 0);
    _instance_1_u(K.RestorationMixin.prototype, "get$_updateProperty", "_updateProperty$1", 294);
    _instance_1_u(T.TransitionRoute.prototype, "get$_handleStatusChanged", "_handleStatusChanged$1", 8);
    _instance_1_u(_ = T.ModalRoute.prototype, "get$_buildModalBarrier", "_buildModalBarrier$1", 29);
    _instance_1_u(_, "get$_buildModalScope", "_buildModalScope$1", 29);
    _instance_2_u(X._ShortcutsState.prototype, "get$_handleOnKey", "_handleOnKey$2", 299);
    _instance_0_u(K._AnimatedState.prototype, "get$_transitions$_handleChange", "_transitions$_handleChange$0", 0);
    _static_1(N, "widget_inspector__transformDebugCreator$closure", "transformDebugCreator", 322);
    _static(D, "print__debugPrintThrottled$closure", 1, null, ["call$2$wrapWidth", "call$1"], ["debugPrintThrottled", function(message) {
      return D.debugPrintThrottled(message, null);
    }], 235, 0);
    _static_0(D, "print___debugPrintTask$closure", "_debugPrintTask", 0);
    _static_2(N, "layout_helper_ChildLayoutHelper_dryLayoutChild$closure", "ChildLayoutHelper_dryLayoutChild", 83);
    _static_2(N, "layout_helper_ChildLayoutHelper_layoutChild$closure", "ChildLayoutHelper_layoutChild", 83);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(P.Object, null);
    _inheritMany(P.Object, [H.Closure, H._NullTreeSanitizer, H.AlarmClock, H.AssetManager, H.AssetManagerException, H.EngineCanvas, H.BrowserEngine, H.OperatingSystem, H._SaveStackTracking, H.ContextStateHandle, H.CkCanvas, H.CkPictureSnapshot, H.CkPaintCommand, J.Interceptor, H.ProductionCollector, H.SkiaObjectCollectionError, H.CanvasKitCanvas, H.HtmlViewEmbedder, H.OverlayCache, H.MutatorType, H.Mutator, P.Iterable, H.FontFallbackData, H.NotoFont, H.CodeunitRange, H._ResolvedNotoFont, H._ResolvedNotoSubset, H.FallbackFontDownloadQueue, H.NotoDownloader, H.SkiaFontCollection, H._RegisteredFont, H.IntervalTree, H.IntervalTreeNode, H.Layer, H.PrerollContext, H.PaintContext, H.LayerScene, H.LayerSceneBuilder, H.LayerTree, H.Frame, H.CompositorContext, H.CkNWayCanvas, H.SkiaObject, H.CkPictureRecorder, H.Rasterizer, H.SkiaObjectCache, H.SurfaceFrame, H.Surface, H.CkSurface, H.CkParagraphStyle, H.CkTextStyle, H.CkParagraphBuilder, H._ParagraphCommand, H._ParagraphCommandType, P.Error, H.ClipboardMessageHandler, H.ClipboardAPICopyStrategy, H.ClipboardAPIPasteStrategy, H.ExecCommandCopyStrategy, H.ExecCommandPasteStrategy, H.DomRenderer, H._SaveStackEntry, H._SaveClipEntry, H._SaveElementStackEntry, H.SaveElementStackTracking, H.FrameReference, H.CrossFrameCache, H.SurfaceCanvas, H._DomClip, H.PersistedSurface, H.SurfacePaint, H.SurfacePaintData, H.Conic, H._QuadBounds, H._ConicBounds, H._ConicPair, H._CubicBounds, H.SurfacePath, H._SkQuadCoefficients, H.PathRef, H.PathRefIterator, H._QuadRoots, H.PathWinding, H.PathIterator, H._PaintRequest, H.RecordingCanvas, H.PaintCommand, H._PaintBounds, H.RenderStrategy, H._WebGlRenderer, H._GlProgram, H._GlContext, H._OffScreenCanvas, H.SurfaceScene, H.SurfaceSceneBuilder, H.NormalizedGradient, H.EngineGradient, H.ShaderBuilder, H.ShaderMethod, H.ShaderDeclaration, H.PersistedSurfaceState, H._PersistedSurfaceMatch, H.Keyboard, H.KeyboardBinding, H.FlutterHtmlKeyboardEvent, H.KeyboardConverter, H.MouseCursor, H.BrowserHistory, H.UrlStrategy, H.PlatformLocation, H.EnginePictureRecorder, H.EnginePicture, P.PlatformDispatcher, H.PointerBinding, H.PointerSupportDetector, H._BaseAdapter, H._WheelEventListenerMixin, H._SanitizedDetails, H._ButtonSanitizer, H._PointerState, H.PointerDataConverter, H.Profiler, H.Instrumentation, H.AccessibilityAnnouncements, H._CheckableKind, H.RoleManager, H.SemanticsUpdate, H.SemanticsNodeUpdate, H.Role, H.SemanticsObject, H.AccessibilityMode, H.GestureMode, H.EngineSemanticsOwner, H.EnabledState, H.SemanticsHelper, H.SemanticsEnabler, H.DefaultTextEditingStrategy, P._ListBase_Object_ListMixin, H.MethodCall0, H.JSONMessageCodec, H.JSONMethodCodec, H.StandardMessageCodec, H.StandardMethodCodec, H.WriteBuffer0, H.ReadBuffer0, H.SurfaceShadowData, H.CanvasParagraph, H.FlatTextSpan, H.StyleNode, H.CanvasParagraphBuilder, H.FontCollection, H.FontManager, H.TextLayoutService, H.RangeBox, H.LineSegment, H.LineBuilder, H.Spanometer, H.LineCharProperty, H.LineBreakType, H.LineBreakResult, H.RulerHost, H.TextMeasurementService, H.LinesCalculator, H.MaxIntrinsicCalculator, H.TextPaintService, H.EngineLineMetrics, H.DomParagraph, H.EngineParagraphStyle, H.EngineTextStyle, H.DomParagraphBuilder, H.ParagraphGeometricStyle, H.TextHeightStyle, H.TextDimensions, H.TextHeightRuler, H.ParagraphRuler, H.MeasurementResult, H._ComparisonResult, H.UnicodeRange, H.UnicodePropertyLookup, H.BrowserAutofillHints, H.EngineInputType, H.TextCapitalization, H.TextCapitalizationConfig, H.EngineAutofillForm, H.AutofillInfo, H.EditingState, H.InputConfiguration, H.TextInputCommand, H.TextEditingChannel, H.HybridTextEditing, H.EditableTextStyle, H.EditableTextGeometry, H.TransformKind, H.Matrix40, H.WebExperiments, P.FlutterView, H.WindowPadding, H.JS_CONST, J.ArrayIterator, H.CastIterator, P.MapMixin, H.ListIterator, P.Iterator, H.ExpandIterator, H.EmptyIterator, H.FollowedByIterator, H.WhereTypeIterator, H.FixedLengthListMixin, H.UnmodifiableListMixin, H.Symbol, P.MapView, H.ConstantMap, H.JSInvocationMirror, H.TypeErrorDecoder, H.NullThrownFromJavaScriptException, H.ExceptionAndStackTrace, H._StackTrace, H._Required, H.LinkedHashMapCell, H.LinkedHashMapKeyIterator, H.JSSyntaxRegExp, H._MatchImplementation, H.StringMatch, H._StringAllMatchesIterator, H.Rti, H._FunctionParameters, H._Type, P._TimerImpl, P._AsyncAwaitCompleter, P._AsyncStarStreamController, P._IterationMarker, P._SyncStarIterator, P.AsyncError, P._Completer, P._FutureListener, P._Future, P._AsyncCallbackEntry, P.Stream, P.StreamSubscription, P.StreamTransformerBase, P._StreamController, P._AsyncStreamControllerDispatch, P._BufferingStreamSubscription, P._AddStreamState, P._PendingEvents, P._DelayedEvent, P._DelayedDone, P._StreamIterator, P._Zone, P._HashMapKeyIterator, P.__SetBase_Object_SetMixin, P._HashSetIterator, P._LinkedHashSetCell, P._LinkedHashSetIterator, P._LinkedListIterator, P.LinkedListEntry, P.ListMixin, P._MapBaseValueIterator, P._UnmodifiableMapMixin, P._DoubleLink, P._DoubleLinkedQueueIterator, P._ListQueueIterator, P.SetMixin, P._UnmodifiableSetMixin, P.Codec, P._JsonStringifier, P._Utf8Encoder, P._Utf8Decoder, P.Comparable, P.DateTime, P.Duration, P.OutOfMemoryError, P.StackOverflowError, P._Exception, P.FormatException, P.Expando, P.MapEntry, P.Null, P._StringStackTrace, P.Stopwatch, P.RuneIterator, P.StringBuffer, P._Uri, P.UriData, P._SimpleUri, P.ServiceExtensionResponse, W.CssStyleDeclarationBase, W.EventStreamProvider, W._Html5NodeValidator, W.ImmutableListMixin, W.NodeValidatorBuilder, W._SimpleNodeValidator, W._SvgNodeValidator, W.FixedSizeListIterator, W.Console, W._DOMWindowCrossFrame, W._SameOriginUriPolicy, W._ValidatingTreeSanitizer, P._StructuredClone, P._AcceptStructuredClone, P.JsObject, P.NullRejectionException, P.Point, P.Endian, P.ClipOp, P.PathFillType, P._StoredMessage, P._Channel, P.ChannelBuffers, P.OffsetBase, P.Rect, P.Radius, P.RRect, P._HashEnd, P.KeyEventType, P.KeyData, P.Color, P.StrokeCap, P.StrokeJoin, P.PaintingStyle, P.BlendMode, P.Clip, P.BlurStyle, P.MaskFilter, P.FilterQuality, P.PlatformConfiguration, P.ViewConfiguration, P.FrameTiming, P.AppLifecycleState, P.Locale, P.PointerChange, P.PointerDeviceKind, P.PointerSignalKind, P.PointerData, P.PointerDataPacket, P.SemanticsAction, P.SemanticsFlag, P.SemanticsUpdateBuilder, P.PlaceholderAlignment, P.FontWeight, P.TextAlign, P.TextBaseline, P.TextDecoration, P.TextDecorationStyle, P.TextDirection, P.TextBox, P.TextAffinity, P.TextPosition, P.TextRange, P.ParagraphConstraints, P.BoxHeightStyle, P.BoxWidthStyle, P.TileMode, P.AccessibilityFeatures, P.Brightness, P.CallbackHandle, P.PlatformViewRegistry, Y.HeapPriorityQueue, Y._DiagnosticableTree_Object_Diagnosticable, X.AnimationStatus, B.Listenable, G._AnimationDirection, G.AnimationBehavior, T.Simulation, S.AnimationWithParentMixin, S._TrainHoppingMode, Z.ParametricCurve, S.AnimationLazyListenerMixin, S.AnimationEagerListenerMixin, S.AnimationLocalListenersMixin, S.AnimationLocalStatusListenersMixin, R.Animatable, T._IconThemeData_Object_Diagnosticable, K.CupertinoUserInterfaceLevelData, L.LocalizationsDelegate, L.DefaultCupertinoLocalizations, N._State_Object_Diagnosticable, D._CupertinoBackGestureController, Z._Decoration_Object_Diagnosticable, Z.BoxPainter, K.NoDefaultCupertinoThemeData, K._CupertinoThemeDefaults, K._CupertinoTextThemeDefaults, Y.DiagnosticsNode, U._FlutterErrorDetails_Object_Diagnosticable, N.BindingBase, B.ChangeNotifier, Y.DiagnosticLevel, Y.DiagnosticsTreeStyle, Y.TextTreeConfiguration, Y._WordWrapParseMode, Y._PrefixedStringBuilder, Y._NoDefaultValue, Y.TextTreeRenderer, Y.DiagnosticPropertiesBuilder, Y.Diagnosticable, Y.DiagnosticableTreeMixin, D.Key, F.LicenseEntry, B.AbstractNode, T.TargetPlatform, G.WriteBuffer, G.ReadBuffer, R.StackFrame, O.SynchronousFuture, D.GestureDisposition, D.GestureArenaMember, D.GestureArenaEntry, D._GestureArena, D.GestureArenaManager, N._Resampler, N.GestureBinding, O.DragDownDetails, O.DragStartDetails, O.DragUpdateDetails, O.DragEndDetails, F._PointerEvent_Object_Diagnosticable, F._PointerEventDescription, F._AbstractPointerEvent, F._CopyPointerAddedEvent, F._CopyPointerRemovedEvent, F._CopyPointerHoverEvent, F._CopyPointerEnterEvent, F._CopyPointerExitEvent, F._CopyPointerDownEvent, F._CopyPointerMoveEvent, F._CopyPointerUpEvent, F._CopyPointerScrollEvent, F._CopyPointerCancelEvent, O.HitTestEntry, O._TransformPart, O.HitTestResult, B._Vector, B._Matrix, B.PolynomialFit, B.LeastSquaresSolver, O._DragState, F._CountdownZoned, F._TapTracker, O.PointerRouter, G.PointerSignalResolver, S.DragStartBehavior, S.GestureRecognizerState, S.OffsetPair, N.TapDownDetails, R.Velocity, R.VelocityEstimate, R._PointAtTime, R.VelocityTracker, S.ThemeMode, K.ScrollBehavior, V._AppBarTheme_Object_Diagnosticable, D._CornerId, D._Diagonal, Q._MaterialBannerThemeData_Object_Diagnosticable, D._BottomAppBarTheme_Object_Diagnosticable, M._BottomNavigationBarThemeData_Object_Diagnosticable, X._BottomSheetThemeData_Object_Diagnosticable, M._ButtonBarThemeData_Object_Diagnosticable, A._ButtonStyle_Object_Diagnosticable, A._LerpProperties3, A._LerpSides, A._LerpShapes, M.ButtonTextTheme, M._ButtonThemeData_Object_Diagnosticable, A._CardTheme_Object_Diagnosticable, F._CheckboxThemeData_Object_Diagnosticable, F._LerpProperties1, K._ChipThemeData_Object_Diagnosticable, A._ColorScheme_Object_Diagnosticable, Z._DataTableThemeData_Object_Diagnosticable, Z._LerpProperties2, Y._DialogTheme_Object_Diagnosticable, G._DividerThemeData_Object_Diagnosticable, T._ElevatedButtonThemeData_Object_Diagnosticable, E._DefaultHeroTag, S._FloatingActionButtonThemeData_Object_Diagnosticable, M.InkFeature, R.InteractiveInkFeatureFactory, R._HighlightType, L.FloatingLabelBehavior, L._InputDecorationTheme_Object_Diagnosticable, M.MaterialType, U.DefaultMaterialLocalizations, V.MaterialState, A._MouseCursor_Object_Diagnosticable, E._NavigationRailThemeData_Object_Diagnosticable, U._OutlinedButtonThemeData_Object_Diagnosticable, K.Route, V.MaterialRouteTransitionMixin, K.PageTransitionsBuilder, K._PageTransitionsTheme_Object_Diagnosticable, R._PopupMenuThemeData_Object_Diagnosticable, T._RadioThemeData_Object_Diagnosticable, T._LerpProperties0, X._ScrollbarThemeData_Object_Diagnosticable, X._LerpProperties4, Q._SliderThemeData_Object_Diagnosticable, N.SnackBarClosedReason, K._SnackBarThemeData_Object_Diagnosticable, R._SwitchThemeData_Object_Diagnosticable, R._LerpProperties, U._TabBarTheme_Object_Diagnosticable, T._TextButtonThemeData_Object_Diagnosticable, R._TextSelectionThemeData_Object_Diagnosticable, R._TextTheme_Object_Diagnosticable, X.MaterialTapTargetSize, X._ThemeData_Object_Diagnosticable, X._IdentityThemeDataCacheKey, X._FifoCache, X._VisualDensity_Object_Diagnosticable, A._TimePickerThemeData_Object_Diagnosticable, S._ToggleButtonsThemeData_Object_Diagnosticable, T._TooltipThemeData_Object_Diagnosticable, U.ScriptCategory, U._Typography_Object_Diagnosticable, K.AlignmentGeometry, G.RenderComparison, G.AxisDirection, N.PaintingBinding, K.BorderRadiusGeometry, Y.BorderStyle, Y.BorderSide, Y.ShapeBorder, F.BoxShape, Z.ClipContext, V.EdgeInsetsGeometry, E.ImageCache, M.ImageConfiguration, G.Accumulator, G.InlineSpanSemanticsInformation, D.ShaderWarmUp, U.PlaceholderDimensions, U.TextWidthBasis, U.TextPainter, A._TextStyle_Object_Diagnosticable, N.RendererBinding, K.Constraints, K.ParentData, S.RenderBoxContainerDefaultsMixin, T.AnnotationResult, A._MouseState, A.__MouseTrackerUpdateDetails_Object_Diagnosticable, K.SemanticsHandle, K.PipelineOwner, K.RenderObjectWithChildMixin, K.ContainerParentDataMixin, K.ContainerRenderObjectMixin, K.RelayoutWhenSystemFontsChangeMixin, K._SemanticsFragment, K._SemanticsGeometry, Q.TextOverflow, E.RenderProxyBoxMixin, E.HitTestBehavior, E.RenderAnimatedOpacityMixin, E.DecorationPosition, K.RelativeRect, K.StackFit, K.Overflow, A.ViewConfiguration0, N._TaskEntry, N._FrameCallbackEntry, N.SchedulerPhase, N.SchedulerBinding, V.Priority, M.Ticker, M.TickerFuture, M.TickerCanceled, N.SemanticsBinding, A._SemanticsData_Object_Diagnosticable, A._BoxEdge, A._TraversalSortNode, A.SemanticsConfiguration, A.DebugSemanticsDumpOrder, A._SemanticsSortKey_Object_Diagnosticable, E.SemanticsEvent, Q.AssetBundle, Q.BinaryMessenger, N.ServicesBinding, G._KeyboardKey_Object_Diagnosticable, F.MethodCall, F.PlatformException, F.MissingPluginException, U.StringCodec, U.JSONMessageCodec0, U.JSONMethodCodec0, U.StandardMessageCodec0, U.StandardMethodCodec0, A.MouseCursorManager, A.MouseCursorSession, A.BasicMessageChannel, A.MethodChannel, B.KeyboardSide, B.ModifierKey, B.RawKeyEventData, B._RawKeyEvent_Object_Diagnosticable, B.RawKeyboard, B._ModifierSidePair, K.RestorationBucket, X.ApplicationSwitcherDescription, V.SystemSoundType, N.SelectionChangedCause, U._Intent_Object_Diagnosticable, U._Action_Object_Diagnosticable, U._ActionDispatcher_Object_Diagnosticable, U.Notification0, L.AutomaticKeepAliveClientMixin, N.WidgetsBindingObserver, N.WidgetsBinding, O.KeyEventResult, O.FocusAttachment, O.UnfocusDisposition, O._FocusNode_Object_DiagnosticableTreeMixin, O.FocusHighlightMode, O.FocusHighlightStrategy, O._FocusManager_Object_DiagnosticableTreeMixin, U._FocusTraversalGroupInfo, U.TraversalDirection, U._FocusTraversalPolicy_Object_Diagnosticable, U._DirectionalPolicyDataEntry, U._DirectionalPolicyData, U.DirectionalFocusTraversalPolicyMixin, U.__ReadingOrderSortData_Object_Diagnosticable, U.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, N._StateLifecycle, N._ElementLifecycle, N._InactiveElements, N.BuildOwner, N.DebugCreator, N.IndexedSlot, D.GestureRecognizerFactory, D.SemanticsGestureDelegate, T.HeroFlightDirection, T._HeroFlightManifest, T._HeroFlight, K.NavigatorObserver, X.IconData, L._Pending, L.DefaultWidgetsLocalizations, F.MediaQueryData, F.NavigationMode, K.RoutePopDisposition, K.RouteSettings, K.RouteTransitionRecord, K.TransitionDelegate, K._RouteLifecycle, K._NavigatorObservation, K._RouteRestorationType, K._RestorationInformation, S.PageStorageBucket, K.RestorationMixin, Z.RouteInformation, T.LocalHistoryRoute, A.ScrollPositionAlignmentPolicy, F.ScrollIncrementType, F.ScrollIncrementDetails, X.KeySet, U.SingleTickerProviderStateMixin, U.TickerProviderStateMixin, N._WidgetInspectorService, N.WidgetInspectorService, N._ElementLocationStatsTracker, N.InspectorSelection, E.Matrix4, E.Vector3, E.Vector4]);
    _inheritMany(H.Closure, [H.initializeEngine_closure, H.initializeEngine_closure0, H.initializeEngine__closure, H._addUrlStrategyListener_closure, H._addUrlStrategyListener_closure0, H.AssetManager__baseUrl_closure, H.AssetManager__baseUrl_closure0, H.ProductionCollector_closure, H.ProductionCollector_collect_closure, H.FontFallbackData_createNotoFontTree_closure, H.FontFallbackData_registerFallbackFont_closure, H.findFontsForMissingCodeunits_closure, H._makeResolvedNotoFontFromCss_closure, H._registerSymbolsAndEmoji_extractUrlFromCss, H.findMinimumFontsForCodeUnits_closure, H.findMinimumFontsForCodeUnits_closure0, H.FallbackFontDownloadQueue_startDownloads_closure, H.NotoDownloader_downloadAsBytes_closure, H.NotoDownloader_downloadAsBytes__closure, H.NotoDownloader_downloadAsString_closure, H.NotoDownloader_downloadAsString__closure, H.SkiaFontCollection_ensureFontsLoaded_closure, H.SkiaFontCollection_ensureFontsLoaded_closure0, H.SkiaFontCollection__getArrayBuffer_closure, H.initializeCanvasKit__loadSubscription_set, H.initializeCanvasKit__loadSubscription_get, H.initializeCanvasKit_closure, H.initializeCanvasKit__closure, H.initializeCanvasKit__closure0, H.IntervalTree_IntervalTree$createFromRanges_closure, H.IntervalTree_IntervalTree$createFromRanges_closure0, H.IntervalTree_IntervalTree$createFromRanges__makeBalancedTree, H.IntervalTree_IntervalTree$createFromRanges__computeHigh, H.Frame_raster_closure, H.Frame_raster_closure0, H.Surface_acquireFrame_closure, H.Surface__createNewSurface_closure, H.CkTextStyle_skTextStyle_closure, H.CkParagraphBuilder__ensureFontsSupportText_closure, H.CkParagraphBuilder__checkIfGlobalFallbacksSupport_closure, H.CkParagraphBuilder__checkIfNoFallbackFontSupports_closure, H._getEffectiveFontFamilies_closure, H.ClipboardMessageHandler_setDataMethodCall_closure, H.ClipboardMessageHandler_setDataMethodCall_closure0, H.ClipboardMessageHandler_getDataMethodCall_closure, H.ClipboardMessageHandler_getDataMethodCall_closure0, H.DomRenderer_reset_closure, H.DomRenderer_reset_closure0, H.DomRenderer_reset_closure1, H.DomRenderer_reset_closure2, H.DomRenderer_reset_closure3, H.DomRenderer_setPreferredOrientation_closure, H.DomRenderer_setPreferredOrientation_closure0, H.PersistedPicture__applyBitmapPaint_closure, H.SurfaceSceneBuilder_build_closure, H.SurfaceSceneBuilder_build_closure0, H.commitScene_closure, H.PersistedContainerSurface__matchChildren_closure, H.Keyboard$__closure, H.Keyboard$__closure0, H.Keyboard$__closure1, H.Keyboard__handleHtmlEvent_closure, H.Keyboard__handleHtmlEvent_closure0, H._kLogicalKeyToModifierGetter_closure, H._kLogicalKeyToModifierGetter_closure0, H._kLogicalKeyToModifierGetter_closure1, H._kLogicalKeyToModifierGetter_closure2, H._kLogicalKeyToModifierGetter_closure3, H._kLogicalKeyToModifierGetter_closure4, H._kLogicalKeyToModifierGetter_closure5, H._kLogicalKeyToModifierGetter_closure6, H.KeyboardBinding__addEventListener_closure, H.KeyboardBinding__onKeyData_closure, H.KeyboardBinding__setup_closure, H.KeyboardBinding__setup_closure0, H.KeyboardConverter__scheduleAsyncEvent_closure, H.KeyboardConverter__scheduleAsyncEvent_closure0, H.KeyboardConverter__startGuardingKey_closure, H.KeyboardConverter__startGuardingKey_closure0, H.KeyboardConverter_handleEvent_closure, H.KeyboardConverter_handleEvent_closure0, H.KeyboardConverter_handleEvent_closure1, H.KeyboardConverter_handleEvent_closure2, H.KeyboardConverter_handleEvent__closure, H.MultiEntriesBrowserHistory_onPopState_closure, H.SingleEntryBrowserHistory_onPopState_closure, H.SingleEntryBrowserHistory_onPopState_closure0, H.HashUrlStrategy_addPopStateListener_closure, H.HashUrlStrategy__waitForPopState__unsubscribe_set, H.HashUrlStrategy__waitForPopState__unsubscribe_get, H.HashUrlStrategy__waitForPopState_closure, H.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure, H.EnginePlatformDispatcher__sendPlatformMessage_closure, H.EnginePlatformDispatcher__sendPlatformMessage_closure0, H.EnginePlatformDispatcher__sendPlatformMessage_closure1, H.EnginePlatformDispatcher__sendPlatformMessage_closure2, H.EnginePlatformDispatcher__sendPlatformMessage_closure3, H.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure, H.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure0, H.EnginePlatformDispatcher__replyToPlatformMessage_closure, H.invoke3_closure, H._BaseAdapter_addEventListener_closure, H._WheelEventListenerMixin__addWheelEventListener_closure, H._PointerAdapter__ensureSanitizer_closure, H._PointerAdapter__addPointerEventListener_closure, H._PointerAdapter_setup_closure, H._PointerAdapter_setup_closure0, H._PointerAdapter_setup_closure1, H._PointerAdapter_setup_closure2, H._PointerAdapter_setup_closure3, H._TouchAdapter__addTouchEventListener_closure, H._TouchAdapter_setup_closure, H._TouchAdapter_setup_closure0, H._TouchAdapter_setup_closure1, H._TouchAdapter_setup_closure2, H._MouseAdapter__addMouseEventListener_closure, H._MouseAdapter_setup_closure, H._MouseAdapter_setup_closure0, H._MouseAdapter_setup_closure1, H._MouseAdapter_setup_closure2, H.PointerDataConverter__ensureStateForPointer_closure, H.AccessibilityAnnouncements$__closure, H.AccessibilityAnnouncements_handleMessage_closure, H.Incrementable_closure, H.Incrementable_closure0, H.Scrollable_update_closure, H.Scrollable_update_closure0, H.Scrollable_update_closure1, H._roleFactories_closure, H._roleFactories_closure0, H._roleFactories_closure1, H._roleFactories_closure2, H._roleFactories_closure3, H._roleFactories_closure4, H._roleFactories_closure5, H._roleFactories_closure6, H.SemanticsObject_recomputePositionAndSize__effectiveTransform_set, H.SemanticsObject_recomputePositionAndSize__effectiveTransform_get, H.EngineSemanticsOwner$__closure, H.EngineSemanticsOwner__now_closure, H.EngineSemanticsOwner__getGestureModeClock_closure, H.DesktopSemanticsEnabler_tryEnableSemantics_closure, H.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure, H.MobileSemanticsEnabler_tryEnableSemantics_closure, H.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure, H.Tappable_update_closure, H.TextField__initializeForBlink_closure, H.TextField__initializeForWebkit_closure, H.TextField__initializeForWebkit_closure0, H.TextField_update_closure, H.StandardMessageCodec_writeValue_closure0, H.CanvasParagraph__createDomElement__element_set, H.CanvasParagraph__createDomElement__element_get, H.FontManager__loadFontFace_closure, H.FontManager__loadFontFace_closure0, H._PolyfillFontManager_registerAsset___fontLoadStart_set, H._PolyfillFontManager_registerAsset___fontLoadStart_get, H._PolyfillFontManager_registerAsset__watchWidth, H._PolyfillFontManager_registerAsset_closure, H.RulerManager__scheduleRulerCacheCleanup_closure, H.RulerManager__evictAllRulers_closure, H.RulerManager_cleanUpRulerCache_closure, H.DomParagraphBuilder__buildRichText_currentElement, H.EngineAutofillForm_fromFrameworkMessage_closure, H.EngineAutofillForm_addInputEventListeners_closure, H.EngineAutofillForm_addInputEventListeners__closure, H.DefaultTextEditingStrategy_addEventHandlers_closure, H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure, H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0, H.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1, H.IOSTextEditingStrategy_addEventHandlers_closure, H.IOSTextEditingStrategy_addEventHandlers_closure0, H.IOSTextEditingStrategy__addTapListener_closure, H.IOSTextEditingStrategy__schedulePlacement_closure, H.AndroidTextEditingStrategy_addEventHandlers_closure, H.FirefoxTextEditingStrategy_addEventHandlers_closure, H.FirefoxTextEditingStrategy_addEventHandlers_closure0, H.FirefoxTextEditingStrategy__postponeFocus_closure, H.saveForms_closure, H.TextEditingChannel_handleTextInput__command_set, H.TextEditingChannel_handleTextInput__command_get, H.TextEditingChannel_handleTextInput_closure, H.HybridTextEditing__startEditing_closure0, H.HybridTextEditing__startEditing_closure, H.sendFontChangeMessage_closure, H.sendFontChangeMessage__closure, H.WebExperiments$__closure, H.EngineFlutterWindow_closure, H.CastMap_putIfAbsent_closure, H.CastMap_forEach_closure, H.CastMap_entries_closure, H.nullFuture_closure, H.ConstantMap_map_closure, H.ConstantStringMap_values_closure, H.Primitives_initTicker_closure, H.Primitives_functionNoSuchMethod_closure, H.TearOffClosure, H.JsLinkedHashMap_values_closure, H.JsLinkedHashMap_containsValue_closure, H.JsLinkedHashMap_addAll_closure, H.initHooks_closure, H.initHooks_closure0, H.initHooks_closure1, P._AsyncRun__initializeScheduleImmediate_internalCallback, P._AsyncRun__initializeScheduleImmediate_closure, P._AsyncRun__scheduleImmediateJsOverride_internalCallback, P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, P._TimerImpl_internalCallback, P._TimerImpl$periodic_closure, P._awaitOnObject_closure, P._awaitOnObject_closure0, P._wrapJsFunctionForAsync_closure, P._asyncStarHelper_closure, P._asyncStarHelper_closure0, P._AsyncStarStreamController__resumeBody, P._AsyncStarStreamController__resumeBody_closure, P._AsyncStarStreamController_closure, P._AsyncStarStreamController_closure0, P._AsyncStarStreamController_closure1, P._AsyncStarStreamController__closure, P.Future_Future_closure, P.Future_Future$delayed_closure, P.Future_wait__error_set, P.Future_wait__stackTrace_set, P.Future_wait__error_get, P.Future_wait__stackTrace_get, P.Future_wait_handleError, P.Future_wait_closure, P._Future__addListener_closure, P._Future__prependListeners_closure, P._Future__chainForeignFuture_closure, P._Future__chainForeignFuture_closure0, P._Future__chainForeignFuture_closure1, P._Future__asyncCompleteWithValue_closure, P._Future__chainFuture_closure, P._Future__asyncCompleteError_closure, P._Future__propagateToListeners_handleWhenCompleteCallback, P._Future__propagateToListeners_handleWhenCompleteCallback_closure, P._Future__propagateToListeners_handleValueCallback, P._Future__propagateToListeners_handleError, P.Stream_Stream$fromIterable_closure, P.Stream_length_closure, P.Stream_length_closure0, P._StreamController__subscribe_closure, P._StreamController__recordCancel_complete, P._AddStreamState_cancel_closure, P._BufferingStreamSubscription__sendError_sendError, P._BufferingStreamSubscription__sendDone_sendDone, P._PendingEvents_schedule_closure, P._rootHandleUncaughtError_closure, P._RootZone_bindCallbackGuarded_closure, P._RootZone_bindUnaryCallbackGuarded_closure, P._HashMap_values_closure, P.HashMap_HashMap$from_closure, P.LinkedHashMap_LinkedHashMap$from_closure, P.MapBase_mapToString_closure, P.MapMixin_entries_closure, P._JsonMap_values_closure, P.Utf8Decoder__decoder_closure, P.Utf8Decoder__decoderNonfatal_closure, P._JsonStringifier_writeMap_closure, P.NoSuchMethodError_toString_closure, P.Duration_toString_sixDigits, P.Duration_toString_twoDigits, P.Uri__parseIPv4Address_error, P.Uri_parseIPv6Address_error, P.Uri_parseIPv6Address_parseHex, P._Uri__makeQuery_writeParameter, P._Uri__makeQuery_closure, P._createTables_build, P._createTables_setChars, P._createTables_setRange, W.Element_Element$html_closure, W.Entry_remove_closure, W.Entry_remove_closure0, W.HttpRequest_request_closure, W.MidiInputMap_keys_closure, W.MidiInputMap_values_closure, W.MidiOutputMap_keys_closure, W.MidiOutputMap_values_closure, W.RtcStatsReport_keys_closure, W.RtcStatsReport_values_closure, W.Storage_keys_closure, W.Storage_values_closure, W._EventStreamSubscription_closure, W.NodeValidatorBuilder_allowsElement_closure, W.NodeValidatorBuilder_allowsAttribute_closure, W._SimpleNodeValidator_closure, W._SimpleNodeValidator_closure0, W._TemplatingNodeValidator_closure, W._ValidatingTreeSanitizer_sanitizeTree_walk, P._StructuredClone_walk_closure, P._StructuredClone_walk_closure0, P._AcceptStructuredClone_walk_closure, P._convertDartToNative_Value_closure, P.convertDartToNative_Dictionary_closure, P.FilteredElementList__iterable_closure, P.FilteredElementList__iterable_closure0, P.FilteredElementList_removeRange_closure, P.JsObject__convertDataTree__convert, P._convertToJS_closure, P._convertToJS_closure0, P._wrapToDart_closure, P._wrapToDart_closure0, P._wrapToDart_closure1, P.promiseToFuture_closure, P.promiseToFuture_closure0, P.ChannelBuffers_push_closure, P.webOnlyInitializePlatform_closure, P.AudioParamMap_keys_closure, P.AudioParamMap_values_closure, E.CupertinoDynamicColor_toString_toString, D.CupertinoRouteTransitionMixin_buildPageTransitions_closure, D.CupertinoRouteTransitionMixin_buildPageTransitions_closure0, D._CupertinoBackGestureController_dragEnd__animationStatusCallback_set, D._CupertinoBackGestureController_dragEnd__animationStatusCallback_get, D._CupertinoBackGestureController_dragEnd_closure, D._CupertinoEdgeShadowDecoration_lerp_closure, D._CupertinoEdgeShadowDecoration_lerp_closure0, U._testPlatform_closure, U._browserPlatform_closure, U.FlutterErrorDetails_summary_formatException, U.FlutterErrorDetails_summary_closure, U.FlutterErrorDetails_summary_closure0, U.FlutterErrorDetails_debugFillProperties_closure, U.FlutterError_FlutterError_closure, U.FlutterError_defaultStackFilter_closure, U.FlutterError_defaultStackFilter_closure0, U.FlutterError_toString_closure, U.debugPrintStack_closure, N.BindingBase_lockEvents_closure, N.BindingBase_registerBoolServiceExtension_closure, N.BindingBase_registerNumericServiceExtension_closure, N.BindingBase_registerServiceExtension_closure, N.BindingBase_registerServiceExtension_closure__result_set, N.BindingBase_registerServiceExtension__closure, N.BindingBase_registerServiceExtension_closure__result_get, B.ChangeNotifier_notifyListeners_closure, Y._PrefixedStringBuilder__wordWrapLine__lastWordStart_set, Y._PrefixedStringBuilder__wordWrapLine__lastWordStart_get, Y._PrefixedStringBuilder__wordWrapLine_noWrap, Y.TextTreeRenderer__debugRender_visitor, Y.TextTreeRenderer__debugRender_closure, R.StackFrame_fromStackString_closure, O.SynchronousFuture_whenComplete_closure, D._GestureArena_toString_closure, D.GestureArenaManager_add_closure, D.GestureArenaManager__tryToResolveArena_closure, N.GestureBinding_dispatchEvent_closure, N.GestureBinding_dispatchEvent_closure0, O.DragGestureRecognizer__checkDown_closure, O.DragGestureRecognizer__checkStart_closure, O.DragGestureRecognizer__checkUpdate_closure, O.DragGestureRecognizer__checkEnd_closure, O.DragGestureRecognizer__checkEnd_closure0, O.DragGestureRecognizer__checkEnd_closure1, O.PointerRouter_addRoute_closure, O.PointerRouter__dispatchEventToRoutes_closure, S.PrimaryPointerGestureRecognizer_addAllowedPointer_closure, N.TapGestureRecognizer_handleTapDown_closure, S.MaterialApp_createMaterialHeroController_closure, S._MaterialAppState__buildWidgetApp_closure, D.MaterialPointArcTween__initialize_sweepAngle, D._maxBy__maxValue_set, D._maxBy__maxValue_get, D.MaterialRectArcTween__initialize_closure, Z._RawMaterialButtonState__handleHighlightChanged_closure, Z._RawMaterialButtonState__handleHoveredChanged_closure, Z._RawMaterialButtonState__handleFocusedChanged_closure, Z._RenderInputPadding_hitTest_closure, U._getClipCallback_closure, R._InkResponseState_highlightsExist_closure, R._InkResponseState_updateHighlight_handleInkRemoval, R._InkResponseState__createInkFeature_onRemoved, R._InkResponseState__handleFocusHighlightModeChange_closure, M._MaterialState_build_closure, M._MaterialInteriorState_forEachTween_closure, M._MaterialInteriorState_forEachTween_closure0, M._MaterialInteriorState_forEachTween_closure1, K.PageTransitionsTheme__all_closure, M.ScaffoldMessengerState_hideCurrentSnackBar_closure, K._AnimatedThemeState_forEachTween_closure, X.ThemeData_localize_closure, Y._CompoundBorder_dimensions_closure, Y._CompoundBorder_scale_closure, Y._CompoundBorder_toString_closure, Z.ClipContext_clipPathAndPaint_closure, Z.ClipContext_clipRectAndPaint_closure, G.InlineSpan_getSpanForPosition_closure, Q.TextSpan_debugDescribeChildren_closure, N.RendererBinding__scheduleMouseTrackerUpdate_closure, S.BoxConstraints_toString_describe, S.RenderBox_getDryLayout_closure, S.RenderBox_getDistanceToActualBaseline_closure, S.RenderBoxContainerDefaultsMixin_defaultHitTestChildren_closure, V.RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_set, V.RenderCustomPaint__updateSemanticsChildren__oldKeyedChildren_get, A.MouseTracker__handleDeviceUpdate_closure, A.MouseTracker_updateWithEvent_closure, A.MouseTracker_updateWithEvent__closure, A.MouseTracker_updateAllDevices_closure, A.MouseTracker__handleDeviceUpdateMouseEvents_closure, A.MouseTracker__handleDeviceUpdateMouseEvents_closure0, K.PaintingContext_pushClipRect_closure, K.PaintingContext_pushClipPath_closure, K.PipelineOwner_flushLayout_closure, K.PipelineOwner_flushCompositingBits_closure, K.PipelineOwner_flushPaint_closure, K.PipelineOwner_flushSemantics_closure, K.RenderObject__debugReportException_closure, K.RenderObject__updateCompositingBits_closure, K.RenderObject_clearSemantics_closure, K.RenderObject__getSemanticsForParent_closure, Q.RenderParagraph__extractPlaceholderSpans_closure, Q.RenderParagraph_hitTestChildren__hitText_set, Q.RenderParagraph_hitTestChildren__hitText_get, Q.RenderParagraph_hitTestChildren_closure, Q.RenderParagraph_paint_closure, Q.RenderParagraph_describeSemanticsConfiguration_closure, E.RenderFractionalTranslation_hitTestChildren_closure, T.RenderShiftedBox_hitTestChildren_closure, K.RenderStack_layoutPositionedChild__x_set, K.RenderStack_layoutPositionedChild__y_set, K.RenderStack_layoutPositionedChild__x_get, K.RenderStack_layoutPositionedChild__y_get, N._TaskEntry_run_closure, N.SchedulerBinding_endOfFrame_closure, N.SchedulerBinding_scheduleWarmUpFrame_closure, N.SchedulerBinding_scheduleWarmUpFrame_closure0, N.SchedulerBinding_scheduleWarmUpFrame_closure1, N.SchedulerBinding__handleDrawFrame_closure, N.SchedulerBinding_handleBeginFrame_closure, M.TickerFuture_whenCompleteOrCancel_thunk, A.SemanticsNode_getSemanticsData_closure, A.SemanticsNode__childrenInTraversalOrder_closure, A.SemanticsNode_debugDescribeChildren_closure, A._SemanticsSortGroup_sortedWithinVerticalGroup_closure, A._SemanticsSortGroup_sortedWithinKnot_closure, A._SemanticsSortGroup_sortedWithinKnot_search, A._SemanticsSortGroup_sortedWithinKnot_closure0, A._SemanticsSortGroup_sortedWithinKnot_closure1, A._childrenInDefaultOrder_closure, A.SemanticsOwner_sendSemanticsUpdate_closure, A.SemanticsOwner_sendSemanticsUpdate_closure0, A.SemanticsOwner_sendSemanticsUpdate_closure1, A.SemanticsOwner__getSemanticsActionHandlerForId_closure, A.SemanticsConfiguration__addArgumentlessAction_closure, A.SemanticsConfiguration_onMoveCursorForwardByCharacter_closure, A.SemanticsConfiguration_onMoveCursorBackwardByCharacter_closure, A.SemanticsConfiguration_onMoveCursorForwardByWord_closure, A.SemanticsConfiguration_onMoveCursorBackwardByWord_closure, A.SemanticsConfiguration_onSetSelection_closure, A.SemanticsConfiguration_onSetText_closure, N.ServicesBinding__addLicenses_closure, N.ServicesBinding__addLicenses_closure0, N._DefaultBinaryMessenger__sendPlatformMessage_closure, N._DefaultBinaryMessenger_setMessageHandler_closure, U.StandardMessageCodec_writeValue_closure, A.BasicMessageChannel_setMessageHandler_closure, A.MethodChannel_setMethodCallHandler_closure, K.RestorationManager_handleRestorationUpdateFromEngine_closure, K.RestorationManager_scheduleSerializationFor_closure, K.RestorationBucket__rawChildren_closure, K.RestorationBucket__rawValues_closure, K.RestorationBucket__addChildData_closure, K.RestorationBucket__visitChildren_closure, U._getParent__parent_set, U._getParent__parent_get, U._getParent_closure, U.Actions__findDispatcher_closure, U.Actions_maybeFind_closure, U._ActionsState__handleActionChanged_closure, S._WidgetsAppState_didChangeLocales_closure, S._WidgetsAppState_build_closure, S._MediaQueryFromWindowsState_didChangeMetrics_closure, S._MediaQueryFromWindowsState_didChangePlatformBrightness_closure, T.RichText__extractChildren_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_dispatchEvent_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure_markElementsDirty, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure, N.WidgetsBinding_scheduleAttachRootWidget_closure, N.RenderObjectToWidgetAdapter_attachToRenderTree_closure, N.RenderObjectToWidgetAdapter_attachToRenderTree_closure0, O.FocusNode_traversalDescendants_closure, O.FocusNode_debugDescribeChildren_closure, L._FocusState__handleFocusChanged_closure, L._FocusState__handleFocusChanged_closure0, L._FocusState__handleFocusChanged_closure1, U._getAncestor_closure, U.FocusTraversalPolicy__sortAllDescendants_visitGroups, U.FocusTraversalPolicy__sortAllDescendants_closure, U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin_changedScope_closure, U.DirectionalFocusTraversalPolicyMixin__sortAndFindInitial_closure, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure0, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterHorizontally_closure1, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure0, U.DirectionalFocusTraversalPolicyMixin__sortAndFilterVertically_closure1, U.DirectionalFocusTraversalPolicyMixin__popPolicyDataIfNeeded_popOrInvalidate, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure0, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure1, U.DirectionalFocusTraversalPolicyMixin_inDirection_closure2, U._ReadingOrderSortData_commonDirectionalityOf_closure, U._ReadingOrderSortData_sortWithDirectionality_closure, U._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors, U._ReadingOrderDirectionalGroupData_rect_closure, U._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure, U.ReadingOrderTraversalPolicy__pickNext_closure, U.ReadingOrderTraversalPolicy__pickNext_inBand, U.ReadingOrderTraversalPolicy__pickNext_inBand_closure, N._InactiveElements__unmount_closure, N.BuildOwner_buildScope_closure, N.BuildOwner_finalizeTree_closure, N.Element_renderObject_visit, N.Element_updateSlotForChild_visit, N.Element__updateDepth_closure, N.Element_detachRenderObject_closure, N.Element_attachRenderObject_closure, N.Element_debugDescribeChildren_closure, N.ComponentElement_performRebuild_closure, N.ComponentElement_performRebuild_closure0, N.ParentDataElement__applyParentData_applyParentDataToChild, N.RenderObjectElement_updateChildren_replaceWithNullIfForgotten, N.RenderObjectElement_updateChildren_slotFor, D.GestureDetector_build_closure, D.GestureDetector_build_closure0, D.GestureDetector_build_closure1, D.GestureDetector_build_closure2, D.GestureDetector_build_closure3, D.GestureDetector_build_closure4, D.GestureDetector_build_closure5, D.GestureDetector_build_closure6, D._DefaultSemanticsGestureDelegate__getTapHandler_closure, D._DefaultSemanticsGestureDelegate__getLongPressHandler_closure, D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure, D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure0, D._DefaultSemanticsGestureDelegate__getHorizontalDragUpdateHandler_closure1, D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure, D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure0, D._DefaultSemanticsGestureDelegate__getVerticalDragUpdateHandler_closure1, T.Hero__allHeroesFor_inviteHero, T.Hero__allHeroesFor_visitor, T._HeroState_startFlight_closure, T._HeroState_endFlight_closure, T._HeroFlight__buildOverlay_closure, T._HeroFlight__handleAnimationUpdate_delayedPerformAnimtationUpdate, T.HeroController_didStopUserGesture_isInvalidFlight, T.HeroController__maybeStartHeroTransition_closure, Y.IconTheme_merge_closure, G.ImplicitlyAnimatedWidgetState_initState_closure, G.ImplicitlyAnimatedWidgetState_didUpdateWidget_closure, G.ImplicitlyAnimatedWidgetState__constructTweens_closure, G.AnimatedWidgetBaseState__handleAnimationChanged_closure, G._AnimatedDefaultTextStyleState_forEachTween_closure, G._AnimatedPhysicalModelState_forEachTween_closure, G._AnimatedPhysicalModelState_forEachTween_closure0, G._AnimatedPhysicalModelState_forEachTween_closure1, G._AnimatedPhysicalModelState_forEachTween_closure2, L._loadAll_closure, L._loadAll_closure0, L._loadAll_closure1, L._LocalizationsState_load_closure, L._LocalizationsState_load_closure0, L._LocalizationsState_load__closure, X.ModalBarrier_build_handleDismiss, X.ModalBarrier_build_closure, K.Route_didPush_closure, K.Route_didAdd_closure, K.Route_isCurrent_closure, K.Route_isCurrent_closure0, K.Route_isFirst_closure, K.Route_isFirst_closure0, K.Route_isActive_closure, K.Route_isActive_closure0, K.Navigator_defaultGenerateInitialRoutes_closure, K._RouteEntry_handlePush_closure, K._RouteEntry_dispose_closure, K._RouteEntry_dispose__listener_set, K._RouteEntry_dispose__listener_get, K._RouteEntry_dispose_closure0, K._RouteEntry_isRoutePredicate_closure, K.NavigatorState_restoreState_closure, K.NavigatorState__flushHistoryUpdates_closure, K.NavigatorState__flushHistoryUpdates_closure0, K.NavigatorState__afterNavigation_closure, K.NavigatorState_maybePop_closure, K.NavigatorState_maybePop_closure0, K.NavigatorState_maybePop_closure1, K.NavigatorState_maybePop_closure2, K.NavigatorState__cancelActivePointers_closure, K._HistoryProperty_fromPrimitives_closure, K._NavigatorState_State_TickerProviderStateMixin_RestorationMixin_dispose_closure, X.OverlayEntry_remove_closure, X._OverlayEntryWidgetState__markNeedsBuild_closure, X.OverlayState_insert_closure, X.OverlayState_insertAll_closure, X.OverlayState_rearrange_closure, X.OverlayState__markDirty_closure, X.OverlayState__didChangeEntryOpacity_closure, X._RenderTheatre_hitTestChildren_closure, K._RootRestorationScopeState__loadRootBucketIfNecessary_closure, K._RootRestorationScopeState__loadRootBucketIfNecessary__closure, K.RestorationMixin_registerForRestoration_listener, K.__RestorationScopeState_State_RestorationMixin_dispose_closure, T.TransitionRoute__updateSecondaryAnimation__jumpOnAnimationEnd, T.TransitionRoute__updateSecondaryAnimation_closure, T.TransitionRoute__updateSecondaryAnimation_closure0, T.TransitionRoute__setSecondaryAnimation_closure, T._ModalScopeState__forceRebuildPage_closure, T._ModalScopeState_build_closure, T._ModalScopeState_build_closure0, T._ModalScopeState_build__closure0, T._ModalScopeState_build___closure, T._ModalScopeState_build__closure, T.ModalRoute_offstage_closure, T.ModalRoute_changedInternalState_closure, F.Scrollable_ensureVisible_closure, K._AnimatedState__handleChange_closure, N._describeRelevantUserCode_isOverflowError, N._describeRelevantUserCode_processElement, A.hashObjects_closure]);
    _inheritMany(H.EngineCanvas, [H.BitmapCanvas, H._DomCanvas_EngineCanvas_SaveElementStackTracking]);
    _inherit(H._CanvasPool, H._SaveStackTracking);
    _inherit(H.RecordingCkCanvas, H.CkCanvas);
    _inheritMany(H.CkPaintCommand, [H.CkSaveCommand, H.CkRestoreCommand, H.CkRestoreToCountCommand, H.CkTranslateCommand, H.CkTransformCommand, H.CkClipRectCommand, H.CkClipRRectCommand, H.CkClipPathCommand, H.CkDrawPaintCommand, H.CkDrawRectCommand, H.CkDrawRRectCommand, H.CkDrawDRRectCommand, H.CkDrawCircleCommand, H.CkDrawPathCommand, H.CkDrawShadowCommand, H.CkDrawParagraphCommand, H.CkDrawPictureCommand, H.CkSaveLayerCommand]);
    _inheritMany(J.Interceptor, [J.JavaScriptObject, J.JSBool, J.JSNull, J.JSArray, J.JSNumber, J.JSString, H.NativeByteBuffer, H.NativeTypedData, W.EventTarget, W.AccessibleNodeList, W.Blob, W.Body, W.CanvasRenderingContext2D, W.Credential, W.CredentialUserData, W.CssRule, W.CssTransformComponent, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.StyleSheet, W.CssStyleValue, W.DataTransferItemList, W.DomError, W.DomException, W._DomRectList_Interceptor_ListMixin, W.DomRectReadOnly, W._DomStringList_Interceptor_ListMixin, W.DomTokenList, W.Entry, W.Event, W._FileList_Interceptor_ListMixin, W.FileSystem, W.FontFace, W.Gamepad, W.History, W._HtmlCollection_Interceptor_ListMixin, W.ImageData, W.Location, W.MediaList, W._MidiInputMap_Interceptor_MapMixin, W._MidiOutputMap_Interceptor_MapMixin, W.MimeType, W._MimeTypeArray_Interceptor_ListMixin, W.NavigatorUserMediaError, W._NodeList_Interceptor_ListMixin, W.OverconstrainedError, W.PerformanceEntry, W.PerformanceServerTiming, W.Plugin, W._PluginArray_Interceptor_ListMixin, W.PushMessageData, W._RtcStatsReport_Interceptor_MapMixin, W.SpeechGrammar, W._SpeechGrammarList_Interceptor_ListMixin, W.SpeechRecognitionResult, W.SpeechSynthesisVoice, W._Storage_Interceptor_MapMixin, W._TextTrackCueList_Interceptor_ListMixin, W.TimeRanges, W.Touch, W._TouchList_Interceptor_ListMixin, W.TrackDefaultList, W.Url, W.VttRegion, W.__CssRuleList_Interceptor_ListMixin, W.__GamepadList_Interceptor_ListMixin, W.__NamedNodeMap_Interceptor_ListMixin, W.__SpeechRecognitionResultList_Interceptor_ListMixin, W.__StyleSheetList_Interceptor_ListMixin, P.Index, P.KeyRange, P.ObjectStore, P.Length, P._LengthList_Interceptor_ListMixin, P.Number, P._NumberList_Interceptor_ListMixin, P.PointList, P.Rect0, P._StringList_Interceptor_ListMixin, P.Transform, P._TransformList_Interceptor_ListMixin, P.AudioBuffer, P._AudioParamMap_Interceptor_MapMixin, P.ActiveInfo, P._SqlResultSetRowList_Interceptor_ListMixin]);
    _inheritMany(J.JavaScriptObject, [H.CanvasKit, H.CanvasKitInitOptions, H.CanvasKitInitPromise, H.ColorSpace, H.SkWebGLContextOptions, H.SkSurface, H.SkGrContext, H.SkFontSlantEnum, H.SkFontSlant, H.SkFontWeightEnum, H.SkFontWeight, H.SkAffinityEnum, H.SkAffinity, H.SkTextDirectionEnum, H.SkTextDirection, H.SkTextAlignEnum, H.SkTextAlign, H.SkRectHeightStyleEnum, H.SkRectHeightStyle, H.SkRectWidthStyleEnum, H.SkRectWidthStyle, H.SkVertexModeEnum, H.SkVertexMode, H.SkPointModeEnum, H.SkPointMode, H.SkClipOpEnum, H.SkClipOp, H.SkFillTypeEnum, H.SkFillType, H.SkPathOpEnum, H.SkPathOp, H.SkBlurStyleEnum, H.SkBlurStyle, H.SkStrokeCapEnum, H.SkStrokeCap, H.SkPaintStyleEnum, H.SkPaintStyle, H.SkBlendModeEnum, H.SkBlendMode, H.SkStrokeJoinEnum, H.SkStrokeJoin, H.SkFilterQualityEnum, H.SkFilterQuality, H.SkTileModeEnum, H.SkTileMode, H.SkFilterModeEnum, H.SkFilterMode, H.SkMipmapModeEnum, H.SkMipmapMode, H.SkAlphaTypeEnum, H.SkAlphaType, H.SkColorTypeEnum, H.SkColorType, H.SkAnimatedImage, H.SkImage, H.SkShaderNamespace, H.SkShader, H.SkMaskFilterNamespace, H.SkPaint, H.SkMaskFilter, H.SkColorFilterNamespace, H.SkColorFilter, H.SkImageFilterNamespace, H.SkImageFilter, H.SkPathNamespace, H._NativeFloat32ArrayType, H.SkFloat32List, H.SkPath, H.SkContourMeasureIter, H.SkContourMeasure, H.SkPictureRecorder, H.SkCanvas, H.SkPicture, H.SkParagraphBuilderNamespace, H.SkParagraphBuilder, H.SkParagraphStyle, H.SkParagraphStyleProperties, H.SkTextStyle, H.SkTextDecorationStyleEnum, H.SkTextDecorationStyle, H.SkTextBaselineEnum, H.SkTextBaseline, H.SkPlaceholderAlignmentEnum, H.SkPlaceholderAlignment, H.SkTextStyleProperties, H.SkStrutStyleProperties, H.SkFontStyle, H.SkTextShadow, H.SkFontFeature, H.SkTypeface, H.SkFont, H.SkFontMgr, H.SkLineMetrics, H.SkParagraph, H.SkTextPosition, H.SkTextRange, H.SkVertices, H.SkTonalColors, H.SkFontMgrNamespace, H.TypefaceFontProviderNamespace, H.SkDeletable, H.JsConstructor, H.SkObjectFinalizationRegistry, H.SkData, H.SkImageInfo, H.JsUrlStrategy, J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(H.TypefaceFontProvider, H.SkFontMgr);
    _inheritMany(P.Iterable, [H.MutatorsStack, H._CastIterableBase, H.EfficientLengthIterable, H.MappedIterable, H.WhereIterable, H.ExpandIterable, H.TakeIterable, H.SkipIterable, H.SkipWhileIterable, H.FollowedByIterable, H.WhereTypeIterable, H._ConstantMapKeyIterable, H._StringAllMatchesIterable, P.IterableBase, P.LinkedList, P.DoubleLinkedQueue, P.Runes, R.ObserverList, R.HashedObserverList]);
    _inheritMany(H.Layer, [H.ContainerLayer, H.PictureLayer0]);
    _inheritMany(H.ContainerLayer, [H.RootLayer, H.ClipPathEngineLayer, H.ClipRectEngineLayer, H.OpacityEngineLayer, H.TransformEngineLayer, H.PhysicalShapeEngineLayer]);
    _inherit(H.OffsetEngineLayer, H.TransformEngineLayer);
    _inherit(H.ManagedSkiaObject, H.SkiaObject);
    _inheritMany(H.ManagedSkiaObject, [H.CkPaint, H.CkPath, H.CkPicture, H.CkShader, H.CkParagraph]);
    _inherit(H.CkGradientLinear, H.CkShader);
    _inheritMany(P.Error, [H.CanvasKitError, H.LateError, P.TypeError, H.JsNoSuchMethodError, H.UnknownJsTypeError, H.RuntimeError, H._Error, P.JsonUnsupportedObjectError, P.AssertionError, P.NullThrownError, P.ArgumentError, P.NoSuchMethodError, P.UnsupportedError, P.UnimplementedError, P.StateError, P.ConcurrentModificationError, P.CyclicInitializationError, U._FlutterError_Error_DiagnosticableTreeMixin]);
    _inherit(H.DomCanvas, H._DomCanvas_EngineCanvas_SaveElementStackTracking);
    _inheritMany(H.PersistedSurface, [H.PersistedContainerSurface, H.PersistedLeafSurface]);
    _inheritMany(H.PersistedContainerSurface, [H._PersistedClipRect_PersistedContainerSurface__DomClip, H._PersistedPhysicalShape_PersistedContainerSurface__DomClip, H.PersistedClipPath, H.PersistedOffset, H.PersistedOpacity, H.PersistedScene, H.PersistedTransform]);
    _inherit(H.PersistedClipRect, H._PersistedClipRect_PersistedContainerSurface__DomClip);
    _inherit(H.PersistedPhysicalShape, H._PersistedPhysicalShape_PersistedContainerSurface__DomClip);
    _inherit(H.PersistedPicture, H.PersistedLeafSurface);
    _inheritMany(H.PaintCommand, [H.DrawCommand, H.PaintSave, H.PaintRestore, H.PaintTranslate, H.PaintTransform]);
    _inheritMany(H.DrawCommand, [H.PaintClipRect, H.PaintClipRRect, H.PaintClipPath, H.PaintDrawRect, H.PaintDrawRRect, H.PaintDrawDRRect, H.PaintDrawCircle, H.PaintDrawPath, H.PaintDrawShadow, H.PaintDrawParagraph]);
    _inherit(H.GradientLinear, H.EngineGradient);
    _inheritMany(H.BrowserHistory, [H.MultiEntriesBrowserHistory, H.SingleEntryBrowserHistory]);
    _inheritMany(H.UrlStrategy, [H.HashUrlStrategy, H.CustomUrlStrategy]);
    _inherit(H.BrowserPlatformLocation, H.PlatformLocation);
    _inherit(H.EnginePlatformDispatcher, P.PlatformDispatcher);
    _inheritMany(H._BaseAdapter, [H.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, H._TouchAdapter, H.__MouseAdapter__BaseAdapter__WheelEventListenerMixin]);
    _inherit(H._PointerAdapter, H.__PointerAdapter__BaseAdapter__WheelEventListenerMixin);
    _inherit(H._MouseAdapter, H.__MouseAdapter__BaseAdapter__WheelEventListenerMixin);
    _inheritMany(H.RoleManager, [H.Checkable, H.ImageRoleManager, H.Incrementable, H.LabelAndValue, H.LiveRegion, H.Scrollable, H.Tappable, H.TextField]);
    _inheritMany(H.SemanticsEnabler, [H.DesktopSemanticsEnabler, H.MobileSemanticsEnabler]);
    _inheritMany(H.DefaultTextEditingStrategy, [H.SemanticsTextEditingStrategy, H.GloballyPositionedTextEditingStrategy, H.SafariDesktopTextEditingStrategy]);
    _inherit(P.ListBase, P._ListBase_Object_ListMixin);
    _inheritMany(P.ListBase, [H._TypedDataBuffer, H.UnmodifiableListBase, W._ChildrenElementList, W._FrozenElementList, W._ChildNodeListLazy, P.FilteredElementList, E.TypedDataBuffer]);
    _inherit(H._IntBuffer, H._TypedDataBuffer);
    _inherit(H.Uint8Buffer0, H._IntBuffer);
    _inheritMany(H.StyleNode, [H.ChildStyleNode, H.RootStyleNode]);
    _inherit(H._PolyfillFontManager, H.FontManager);
    _inheritMany(H.RangeBox, [H.PlaceholderBox, H.SpanBox]);
    _inherit(H.RulerManager, H.RulerHost);
    _inheritMany(H.TextMeasurementService, [H.DomTextMeasurementService, H.CanvasTextMeasurementService]);
    _inheritMany(H.EngineInputType, [H.TextInputType, H.NumberInputType, H.DecimalInputType, H.PhoneInputType, H.EmailInputType, H.UrlInputType, H.MultilineInputType]);
    _inheritMany(H.GloballyPositionedTextEditingStrategy, [H.IOSTextEditingStrategy, H.AndroidTextEditingStrategy, H.FirefoxTextEditingStrategy]);
    _inheritMany(H.TextInputCommand, [H.TextInputSetClient, H.TextInputUpdateConfig, H.TextInputSetEditingState, H.TextInputShow, H.TextInputSetEditableSizeAndTransform, H.TextInputSetStyle, H.TextInputClearClient, H.TextInputHide, H.TextInputSetMarkedTextRect, H.TextInputSetCaretRect, H.TextInputFinishAutofillContext]);
    _inherit(P.FlutterWindow, P.FlutterView);
    _inherit(P.SingletonFlutterWindow, P.FlutterWindow);
    _inherit(H.EngineFlutterWindow, P.SingletonFlutterWindow);
    _inherit(H.EngineSingletonFlutterWindow, H.EngineFlutterWindow);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(H._CastIterableBase, [H.CastIterable, H.__CastListBase__CastIterableBase_ListMixin]);
    _inherit(H._EfficientLengthCastIterable, H.CastIterable);
    _inherit(H._CastListBase, H.__CastListBase__CastIterableBase_ListMixin);
    _inherit(H.CastList, H._CastListBase);
    _inherit(P.MapBase, P.MapMixin);
    _inheritMany(P.MapBase, [H.CastMap, H.JsLinkedHashMap, P._HashMap, P._JsonMap, W._AttributeMap]);
    _inherit(H.CodeUnits, H.UnmodifiableListBase);
    _inheritMany(H.EfficientLengthIterable, [H.ListIterable, H.EmptyIterable, H.LinkedHashMapKeyIterable, P._HashMapKeyIterable, P._MapBaseValueIterable]);
    _inheritMany(H.ListIterable, [H.SubListIterable, H.MappedListIterable, H.ReversedListIterable, P.ListQueue, P._JsonMapKeyIterable]);
    _inherit(H.EfficientLengthMappedIterable, H.MappedIterable);
    _inheritMany(P.Iterator, [H.MappedIterator, H.WhereIterator, H.TakeIterator, H.SkipIterator, H.SkipWhileIterator]);
    _inherit(H.EfficientLengthTakeIterable, H.TakeIterable);
    _inherit(H.EfficientLengthSkipIterable, H.SkipIterable);
    _inherit(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P.MapView);
    _inherit(P.UnmodifiableMapView, P._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(H.ConstantMapView, P.UnmodifiableMapView);
    _inheritMany(H.ConstantMap, [H.ConstantStringMap, H.GeneralConstantMap]);
    _inherit(H.NullError, P.TypeError);
    _inheritMany(H.TearOffClosure, [H.StaticClosure, H.BoundClosure]);
    _inheritMany(H.NativeTypedData, [H.NativeByteData, H.NativeTypedArray]);
    _inheritMany(H.NativeTypedArray, [H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfDouble, H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfInt, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(H.NativeTypedArrayOfDouble, [H.NativeFloat32List, H.NativeFloat64List]);
    _inheritMany(H.NativeTypedArrayOfInt, [H.NativeInt16List, H.NativeInt32List, H.NativeInt8List, H.NativeUint16List, H.NativeUint32List, H.NativeUint8ClampedList, H.NativeUint8List]);
    _inherit(H._TypeError, H._Error);
    _inherit(P._SyncStarIterable, P.IterableBase);
    _inherit(P._AsyncCompleter, P._Completer);
    _inherit(P._AsyncStreamController, P._StreamController);
    _inheritMany(P.Stream, [P._StreamImpl, W._EventStream]);
    _inheritMany(P._StreamImpl, [P._ControllerStream, P._GeneratedStreamImpl]);
    _inherit(P._ControllerSubscription, P._BufferingStreamSubscription);
    _inherit(P._StreamControllerAddStreamState, P._AddStreamState);
    _inheritMany(P._PendingEvents, [P._IterablePendingEvents, P._StreamImplEvents]);
    _inheritMany(P._DelayedEvent, [P._DelayedData, P._DelayedError]);
    _inherit(P._RootZone, P._Zone);
    _inherit(P._IdentityHashMap, P._HashMap);
    _inherit(P._LinkedIdentityHashMap, H.JsLinkedHashMap);
    _inherit(P._SetBase, P.__SetBase_Object_SetMixin);
    _inheritMany(P._SetBase, [P._HashSet, P._LinkedHashSet, P.__UnmodifiableSet__SetBase__UnmodifiableSetMixin]);
    _inherit(P.DoubleLinkedQueueEntry, P._DoubleLink);
    _inherit(P._DoubleLinkedQueueEntry, P.DoubleLinkedQueueEntry);
    _inheritMany(P._DoubleLinkedQueueEntry, [P._DoubleLinkedQueueElement, P._DoubleLinkedQueueSentinel]);
    _inherit(P._UnmodifiableSet, P.__UnmodifiableSet__SetBase__UnmodifiableSetMixin);
    _inheritMany(P.Codec, [P.Base64Codec, P.Encoding, P.JsonCodec]);
    _inherit(P.Converter, P.StreamTransformerBase);
    _inheritMany(P.Converter, [P.Base64Encoder, P.JsonEncoder, P.JsonDecoder, P.Utf8Encoder, P.Utf8Decoder]);
    _inherit(P.JsonCyclicError, P.JsonUnsupportedObjectError);
    _inherit(P._JsonStringStringifier, P._JsonStringifier);
    _inherit(P.Utf8Codec, P.Encoding);
    _inheritMany(P.ArgumentError, [P.RangeError, P.IndexError]);
    _inherit(P._DataUri, P._Uri);
    _inheritMany(W.EventTarget, [W.Node, W.BroadcastChannel, W.FileWriter, W.HttpRequestEventTarget, W.MediaKeySession, W.MediaQueryList, W.MessagePort, W.MidiPort, W.OffscreenCanvas, W.ScreenOrientation, W.WorkerGlobalScope, W.SourceBuffer, W._SourceBufferList_EventTarget_ListMixin, W.SpeechSynthesisUtterance, W.TextTrack, W.TextTrackCue, W._TextTrackList_EventTarget_ListMixin, W.VideoTrackList, W.Window, P.Database, P.AudioTrackList, P.BaseAudioContext]);
    _inheritMany(W.Node, [W.Element0, W.CharacterData, W.Document, W._Attr]);
    _inheritMany(W.Element0, [W.HtmlElement, P.SvgElement]);
    _inheritMany(W.HtmlElement, [W.AnchorElement, W.AreaElement, W.BaseElement, W.BodyElement, W.ButtonElement, W.CanvasElement, W.DivElement, W.EmbedElement, W.FieldSetElement, W.FormElement, W.IFrameElement, W.ImageElement, W.InputElement, W.LabelElement, W.MapElement, W.MediaElement, W.MetaElement, W.ObjectElement, W.OutputElement, W.ParagraphElement, W.ParamElement, W.ScriptElement, W.SelectElement, W.SlotElement, W.SpanElement, W.StyleElement, W.TableElement, W.TableRowElement, W.TableSectionElement, W.TemplateElement, W.TextAreaElement]);
    _inherit(W.CssKeyframesRule, W.CssRule);
    _inherit(W.CssPerspective, W.CssTransformComponent);
    _inherit(W.CssStyleDeclaration, W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase);
    _inherit(W.CssStyleSheet, W.StyleSheet);
    _inheritMany(W.CssStyleValue, [W.CssTransformValue, W.CssUnparsedValue]);
    _inherit(W._DomRectList_Interceptor_ListMixin_ImmutableListMixin, W._DomRectList_Interceptor_ListMixin);
    _inherit(W.DomRectList, W._DomRectList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomStringList_Interceptor_ListMixin_ImmutableListMixin, W._DomStringList_Interceptor_ListMixin);
    _inherit(W.DomStringList, W._DomStringList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.Credential, [W.FederatedCredential, W.PasswordCredential]);
    _inherit(W.File, W.Blob);
    _inherit(W._FileList_Interceptor_ListMixin_ImmutableListMixin, W._FileList_Interceptor_ListMixin);
    _inherit(W.FileList, W._FileList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W._HtmlCollection_Interceptor_ListMixin);
    _inherit(W.HtmlCollection, W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.HttpRequest, W.HttpRequestEventTarget);
    _inheritMany(W.Event, [W.UIEvent, W.MediaQueryListEvent, W.ProgressEvent, W.SpeechSynthesisEvent, P.VersionChangeEvent]);
    _inheritMany(W.UIEvent, [W.KeyboardEvent, W.MouseEvent, W.TouchEvent]);
    _inherit(W.MidiInputMap, W._MidiInputMap_Interceptor_MapMixin);
    _inherit(W.MidiOutputMap, W._MidiOutputMap_Interceptor_MapMixin);
    _inherit(W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin, W._MimeTypeArray_Interceptor_ListMixin);
    _inherit(W.MimeTypeArray, W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W._NodeList_Interceptor_ListMixin);
    _inherit(W.NodeList, W._NodeList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._PluginArray_Interceptor_ListMixin_ImmutableListMixin, W._PluginArray_Interceptor_ListMixin);
    _inherit(W.PluginArray, W._PluginArray_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(W.MouseEvent, [W.PointerEvent, W.WheelEvent]);
    _inherit(W.RtcStatsReport, W._RtcStatsReport_Interceptor_MapMixin);
    _inherit(W.SharedWorkerGlobalScope, W.WorkerGlobalScope);
    _inherit(W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, W._SourceBufferList_EventTarget_ListMixin);
    _inherit(W.SourceBufferList, W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin, W._SpeechGrammarList_Interceptor_ListMixin);
    _inherit(W.SpeechGrammarList, W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.Storage, W._Storage_Interceptor_MapMixin);
    _inherit(W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin, W._TextTrackCueList_Interceptor_ListMixin);
    _inherit(W.TextTrackCueList, W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, W._TextTrackList_EventTarget_ListMixin);
    _inherit(W.TextTrackList, W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W._TouchList_Interceptor_ListMixin);
    _inherit(W.TouchList, W._TouchList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.VideoElement, W.MediaElement);
    _inherit(W.VttCue, W.TextTrackCue);
    _inherit(W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin, W.__CssRuleList_Interceptor_ListMixin);
    _inherit(W._CssRuleList, W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._DomRect, W.DomRectReadOnly);
    _inherit(W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin, W.__GamepadList_Interceptor_ListMixin);
    _inherit(W._GamepadList, W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.__NamedNodeMap_Interceptor_ListMixin);
    _inherit(W._NamedNodeMap, W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin, W.__SpeechRecognitionResultList_Interceptor_ListMixin);
    _inherit(W._SpeechRecognitionResultList, W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin, W.__StyleSheetList_Interceptor_ListMixin);
    _inherit(W._StyleSheetList, W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(W._ElementAttributeMap, W._AttributeMap);
    _inherit(W._ElementEventStreamImpl, W._EventStream);
    _inherit(W._EventStreamSubscription, P.StreamSubscription);
    _inherit(W._TemplatingNodeValidator, W._SimpleNodeValidator);
    _inherit(P._StructuredCloneDart2Js, P._StructuredClone);
    _inherit(P._AcceptStructuredCloneDart2Js, P._AcceptStructuredClone);
    _inheritMany(P.JsObject, [P.JsFunction, P._JsArray_JsObject_ListMixin]);
    _inherit(P.JsArray, P._JsArray_JsObject_ListMixin);
    _inherit(P._LengthList_Interceptor_ListMixin_ImmutableListMixin, P._LengthList_Interceptor_ListMixin);
    _inherit(P.LengthList, P._LengthList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._NumberList_Interceptor_ListMixin_ImmutableListMixin, P._NumberList_Interceptor_ListMixin);
    _inherit(P.NumberList, P._NumberList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P.ScriptElement0, P.SvgElement);
    _inherit(P._StringList_Interceptor_ListMixin_ImmutableListMixin, P._StringList_Interceptor_ListMixin);
    _inherit(P.StringList, P._StringList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(P._TransformList_Interceptor_ListMixin_ImmutableListMixin, P._TransformList_Interceptor_ListMixin);
    _inherit(P.TransformList, P._TransformList_Interceptor_ListMixin_ImmutableListMixin);
    _inheritMany(P.OffsetBase, [P.Offset, P.Size]);
    _inherit(P.AudioParamMap, P._AudioParamMap_Interceptor_MapMixin);
    _inherit(P.OfflineAudioContext, P.BaseAudioContext);
    _inherit(P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin, P._SqlResultSetRowList_Interceptor_ListMixin);
    _inherit(P.SqlResultSetRowList, P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin);
    _inherit(Y.DiagnosticableTree, Y._DiagnosticableTree_Object_Diagnosticable);
    _inheritMany(Y.DiagnosticableTree, [N.Widget, G.InlineSpan, A.SemanticsProperties, N.Element]);
    _inheritMany(N.Widget, [N.StatelessWidget, N.StatefulWidget, N.ProxyWidget, N.RenderObjectWidget, N._NullWidget]);
    _inheritMany(N.StatelessWidget, [F.MyApp, D.CupertinoPageTransition, K.CupertinoTheme, E.FloatingActionButton, R.InkResponse, M._ShapeBorderPaint, K._FadeUpwardsPageTransition, K.Theme, L._NullWidget0, T.PositionedDirectional, T.KeyedSubtree, T.Builder, M.Container, D.GestureDetector, L.Icon, X.ModalBarrier, X._ModalBarrierGestureDetector, U.NotificationListener, S.PageStorage, U.TickerMode, U.Title]);
    _inheritMany(B.Listenable, [X.Animation0, B._MergingListenable, V.CustomPainter, N._SystemFontsNotifier, E.CustomClipper]);
    _inheritMany(X.Animation0, [G._AnimationController_Animation_AnimationEagerListenerMixin, S._AlwaysCompleteAnimation, S._AlwaysDismissedAnimation, S._ProxyAnimation_Animation_AnimationLazyListenerMixin, S._ReverseAnimation_Animation_AnimationLazyListenerMixin, S._CurvedAnimation_Animation_AnimationWithParentMixin, S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin, R.__AnimatedEvaluation_Animation_AnimationWithParentMixin]);
    _inherit(G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, G._AnimationController_Animation_AnimationEagerListenerMixin);
    _inherit(G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin);
    _inherit(G.AnimationController, G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inherit(G._InterpolationSimulation, T.Simulation);
    _inherit(S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, S._ProxyAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin);
    _inherit(S.ProxyAnimation, S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inherit(S._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin, S._ReverseAnimation_Animation_AnimationLazyListenerMixin);
    _inherit(S.ReverseAnimation, S._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin);
    _inherit(S.CurvedAnimation, S._CurvedAnimation_Animation_AnimationWithParentMixin);
    _inherit(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin);
    _inherit(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin);
    _inherit(S.TrainHoppingAnimation, S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inherit(Z.Curve, Z.ParametricCurve);
    _inheritMany(Z.Curve, [Z._Linear, Z.Interval, Z.Cubic, Z.FlippedCurve]);
    _inherit(R._AnimatedEvaluation, R.__AnimatedEvaluation_Animation_AnimationWithParentMixin);
    _inheritMany(R.Animatable, [R._ChainedEvaluation, R.Tween, R.CurveTween]);
    _inheritMany(R.Tween, [R.ReverseTween, R.ColorTween, R.RectTween, R.IntTween, D.MaterialPointArcTween, M.ShapeBorderTween, K.ThemeDataTween, G.DecorationTween, G.BorderRadiusTween, G.TextStyleTween]);
    _inheritMany(P.Color, [E._CupertinoDynamicColor_Color_Diagnosticable, E.ColorSwatch]);
    _inherit(E.CupertinoDynamicColor, E._CupertinoDynamicColor_Color_Diagnosticable);
    _inherit(T.IconThemeData, T._IconThemeData_Object_Diagnosticable);
    _inherit(T._CupertinoIconThemeData_IconThemeData_Diagnosticable, T.IconThemeData);
    _inherit(T.CupertinoIconThemeData, T._CupertinoIconThemeData_IconThemeData_Diagnosticable);
    _inheritMany(L.LocalizationsDelegate, [L._CupertinoLocalizationsDelegate, U._MaterialLocalizationsDelegate, L._WidgetsLocalizationsDelegate]);
    _inheritMany(N.StatefulWidget, [D._CupertinoBackGestureDetector, S.MaterialApp, Z.RawMaterialButton, R._InkResponseStateWidget, M.Material, G.ImplicitlyAnimatedWidget, M.ScaffoldMessenger, U.Actions, S.WidgetsApp, S._MediaQueryFromWindow, T.MouseRegion, X.Shortcuts, L.Focus, U.FocusTraversalGroup, D.RawGestureDetector, T.Hero, L.Localizations, K.Navigator, X._OverlayEntryWidget, X.Overlay, K.RestorationScope, K.RootRestorationScope, T._ModalScope, K.AnimatedWidget]);
    _inherit(N.State, N._State_Object_Diagnosticable);
    _inheritMany(N.State, [D._CupertinoBackGestureDetectorState, S._MaterialAppState, Z._RawMaterialButtonState, R.__InkResponseState_State_AutomaticKeepAliveClientMixin, M.__MaterialState_State_TickerProviderStateMixin, G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin, M._ScaffoldMessengerState_State_TickerProviderStateMixin, U._ActionsState, S.__WidgetsAppState_State_WidgetsBindingObserver, S.__MediaQueryFromWindowsState_State_WidgetsBindingObserver, T._MouseRegionState, L._FocusState, U._FocusTraversalGroupState, D.RawGestureDetectorState, T._HeroState, L._LocalizationsState, K._NavigatorState_State_TickerProviderStateMixin, X._OverlayEntryWidgetState, X._OverlayState_State_TickerProviderStateMixin, K.__RestorationScopeState_State_RestorationMixin, K._RootRestorationScopeState, T._ModalScopeState, X._ShortcutsState, K._AnimatedState]);
    _inherit(Z.Decoration, Z._Decoration_Object_Diagnosticable);
    _inherit(D._CupertinoEdgeShadowDecoration, Z.Decoration);
    _inherit(D._CupertinoEdgeShadowPainter, Z.BoxPainter);
    _inheritMany(N.ProxyWidget, [N.InheritedWidget, N.ParentDataWidget]);
    _inheritMany(N.InheritedWidget, [K._InheritedCupertinoTheme, R._ParentInkResponseProvider, M._ScaffoldMessengerScope, M.InheritedTheme, U._ActionsMarker, T.Directionality, S.InheritedNotifier, U._FocusTraversalGroupMarker, L._LocalizationsScope, F.MediaQuery, K.HeroControllerScope, E.PrimaryScrollController, K.UnmanagedRestorationScope, T._ModalScopeStatus, K.ScrollConfiguration, U._EffectiveTickerMode]);
    _inherit(K._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable, K.NoDefaultCupertinoThemeData);
    _inherit(K.CupertinoThemeData, K._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable);
    _inheritMany(Y.DiagnosticsNode, [Y.DiagnosticsProperty, Y.DiagnosticsBlock, Y.DiagnosticableNode]);
    _inheritMany(Y.DiagnosticsProperty, [U._ErrorDiagnostic, U.ErrorSpacer, K.DiagnosticsDebugCreator]);
    _inheritMany(U._ErrorDiagnostic, [U.ErrorDescription, U.ErrorSummary, U.ErrorHint]);
    _inherit(U.FlutterErrorDetails, U._FlutterErrorDetails_Object_Diagnosticable);
    _inherit(U.FlutterError, U._FlutterError_Error_DiagnosticableTreeMixin);
    _inherit(U.DiagnosticsStackTrace, Y.DiagnosticsBlock);
    _inheritMany(Y.DiagnosticableNode, [U._FlutterErrorDetailsNode, Y.DiagnosticableTreeNode, A._SemanticsDiagnosticableNode]);
    _inherit(B._ListenerEntry, P.LinkedListEntry);
    _inheritMany(B.ChangeNotifier, [B.ValueNotifier, A.MouseTracker, A.SemanticsOwner, K.RestorationManager, L.KeepAliveHandle, K.RestorableProperty, X.OverlayEntry, F.ScrollController, X._ShortcutManager_ChangeNotifier_Diagnosticable]);
    _inheritMany(D.Key, [D.LocalKey, N.GlobalKey]);
    _inherit(F.LicenseEntryWithLineBreaks, F.LicenseEntry);
    _inherit(N.FlutterErrorDetailsForPointerEventDispatcher, U.FlutterErrorDetails);
    _inherit(F.PointerEvent0, F._PointerEvent_Object_Diagnosticable);
    _inherit(F.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable, F._AbstractPointerEvent);
    _inherit(F.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription, F.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable);
    _inherit(F._TransformedPointerEvent, F.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription);
    _inheritMany(F.PointerEvent0, [F._PointerAddedEvent_PointerEvent__PointerEventDescription, F._PointerRemovedEvent_PointerEvent__PointerEventDescription, F._PointerHoverEvent_PointerEvent__PointerEventDescription, F._PointerEnterEvent_PointerEvent__PointerEventDescription, F._PointerExitEvent_PointerEvent__PointerEventDescription, F._PointerDownEvent_PointerEvent__PointerEventDescription, F._PointerMoveEvent_PointerEvent__PointerEventDescription, F._PointerUpEvent_PointerEvent__PointerEventDescription, F.PointerSignalEvent, F._PointerCancelEvent_PointerEvent__PointerEventDescription]);
    _inherit(F._PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent, F._PointerAddedEvent_PointerEvent__PointerEventDescription);
    _inherit(F.PointerAddedEvent, F._PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent);
    _inheritMany(F._TransformedPointerEvent, [F.__TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent, F.__TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent, F.__TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent, F.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent, F.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent, F.__TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent, F.__TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent, F.__TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent, F.__TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent, F.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent]);
    _inherit(F._TransformedPointerAddedEvent, F.__TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent);
    _inherit(F._PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent, F._PointerRemovedEvent_PointerEvent__PointerEventDescription);
    _inherit(F.PointerRemovedEvent, F._PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent);
    _inherit(F._TransformedPointerRemovedEvent, F.__TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent);
    _inherit(F._PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent, F._PointerHoverEvent_PointerEvent__PointerEventDescription);
    _inherit(F.PointerHoverEvent, F._PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent);
    _inherit(F._TransformedPointerHoverEvent, F.__TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent);
    _inherit(F._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent, F._PointerEnterEvent_PointerEvent__PointerEventDescription);
    _inherit(F.PointerEnterEvent, F._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent);
    _inherit(F._TransformedPointerEnterEvent, F.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent);
    _inherit(F._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent, F._PointerExitEvent_PointerEvent__PointerEventDescription);
    _inherit(F.PointerExitEvent, F._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent);
    _inherit(F._TransformedPointerExitEvent, F.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent);
    _inherit(F._PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent, F._PointerDownEvent_PointerEvent__PointerEventDescription);
    _inherit(F.PointerDownEvent, F._PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent);
    _inherit(F._TransformedPointerDownEvent, F.__TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent);
    _inherit(F._PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent, F._PointerMoveEvent_PointerEvent__PointerEventDescription);
    _inherit(F.PointerMoveEvent, F._PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent);
    _inherit(F._TransformedPointerMoveEvent, F.__TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent);
    _inherit(F._PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent, F._PointerUpEvent_PointerEvent__PointerEventDescription);
    _inherit(F.PointerUpEvent, F._PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent);
    _inherit(F._TransformedPointerUpEvent, F.__TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent);
    _inherit(F._PointerScrollEvent_PointerSignalEvent__PointerEventDescription, F.PointerSignalEvent);
    _inherit(F._PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent, F._PointerScrollEvent_PointerSignalEvent__PointerEventDescription);
    _inherit(F.PointerScrollEvent, F._PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent);
    _inherit(F._TransformedPointerScrollEvent, F.__TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent);
    _inherit(F._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent, F._PointerCancelEvent_PointerEvent__PointerEventDescription);
    _inherit(F.PointerCancelEvent, F._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent);
    _inherit(F._TransformedPointerCancelEvent, F.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent);
    _inheritMany(O._TransformPart, [O._MatrixTransformPart, O._OffsetTransformPart]);
    _inherit(S._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin, D.GestureArenaMember);
    _inherit(S.GestureRecognizer, S._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin);
    _inheritMany(S.GestureRecognizer, [S.OneSequenceGestureRecognizer, F.DoubleTapGestureRecognizer]);
    _inheritMany(S.OneSequenceGestureRecognizer, [S.PrimaryPointerGestureRecognizer, O.DragGestureRecognizer]);
    _inheritMany(S.PrimaryPointerGestureRecognizer, [T.LongPressGestureRecognizer, N.BaseTapGestureRecognizer]);
    _inheritMany(O.DragGestureRecognizer, [O.HorizontalDragGestureRecognizer, O.PanGestureRecognizer]);
    _inheritMany(N.BaseTapGestureRecognizer, [N.TapGestureRecognizer, X._AnyTapGestureRecognizer]);
    _inherit(S.MaterialScrollBehavior, K.ScrollBehavior);
    _inherit(V.AppBarTheme, V._AppBarTheme_Object_Diagnosticable);
    _inherit(D.MaterialRectArcTween, R.RectTween);
    _inherit(Q.MaterialBannerThemeData, Q._MaterialBannerThemeData_Object_Diagnosticable);
    _inherit(D.BottomAppBarTheme, D._BottomAppBarTheme_Object_Diagnosticable);
    _inherit(M.BottomNavigationBarThemeData, M._BottomNavigationBarThemeData_Object_Diagnosticable);
    _inherit(X.BottomSheetThemeData, X._BottomSheetThemeData_Object_Diagnosticable);
    _inheritMany(N.RenderObjectWidget, [N.SingleChildRenderObjectWidget, N.MultiChildRenderObjectWidget, N.RenderObjectToWidgetAdapter, N.LeafRenderObjectWidget]);
    _inheritMany(N.SingleChildRenderObjectWidget, [Z._InputPadding, M._InkFeatures, T.Opacity, T.CustomPaint, T.ClipPath, T.PhysicalModel, T.PhysicalShape, T.FractionalTranslation, T.Padding, T.Align, T.SizedBox, T.ConstrainedBox, T.LimitedBox, T.Offstage, T.Listener, T._RawMouseRegion, T.RepaintBoundary, T.IgnorePointer, T.AbsorbPointer, T.Semantics, T.MergeSemantics, T.BlockSemantics, T.ExcludeSemantics, T.ColoredBox, M.DecoratedBox, D._GestureSemantics, K.FadeTransition]);
    _inheritMany(B.AbstractNode, [K._RenderObject_AbstractNode_DiagnosticableTreeMixin, T._Layer_AbstractNode_DiagnosticableTreeMixin, A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin]);
    _inherit(K.RenderObject, K._RenderObject_AbstractNode_DiagnosticableTreeMixin);
    _inheritMany(K.RenderObject, [S.RenderBox, A._RenderView_RenderObject_RenderObjectWithChildMixin]);
    _inheritMany(S.RenderBox, [T._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin, E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin, V.RenderErrorBox, Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin, L.RenderPerformanceOverlay, K._RenderStack_RenderBox_ContainerRenderObjectMixin, X.__RenderTheatre_RenderBox_ContainerRenderObjectMixin]);
    _inherit(T.RenderShiftedBox, T._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin);
    _inheritMany(T.RenderShiftedBox, [Z._RenderInputPadding, T.RenderPadding, T.RenderAligningShiftedBox]);
    _inherit(M.ButtonBarThemeData, M._ButtonBarThemeData_Object_Diagnosticable);
    _inherit(A.ButtonStyle, A._ButtonStyle_Object_Diagnosticable);
    _inherit(M.ButtonThemeData, M._ButtonThemeData_Object_Diagnosticable);
    _inherit(A.CardTheme, A._CardTheme_Object_Diagnosticable);
    _inherit(F.CheckboxThemeData, F._CheckboxThemeData_Object_Diagnosticable);
    _inherit(K.ChipThemeData, K._ChipThemeData_Object_Diagnosticable);
    _inherit(A.ColorScheme, A._ColorScheme_Object_Diagnosticable);
    _inherit(E.MaterialColor, E.ColorSwatch);
    _inherit(Z.DataTableThemeData, Z._DataTableThemeData_Object_Diagnosticable);
    _inherit(Y.DialogTheme, Y._DialogTheme_Object_Diagnosticable);
    _inherit(G.DividerThemeData, G._DividerThemeData_Object_Diagnosticable);
    _inherit(T.ElevatedButtonThemeData, T._ElevatedButtonThemeData_Object_Diagnosticable);
    _inherit(S.FloatingActionButtonThemeData, S._FloatingActionButtonThemeData_Object_Diagnosticable);
    _inherit(R.InteractiveInkFeature, M.InkFeature);
    _inheritMany(R.InteractiveInkFeature, [Y.InkHighlight, U.InkSplash]);
    _inherit(U._InkSplashFactory, R.InteractiveInkFeatureFactory);
    _inherit(R._InkResponseState, R.__InkResponseState_State_AutomaticKeepAliveClientMixin);
    _inherit(R.InkWell, R.InkResponse);
    _inherit(L.InputDecorationTheme, L._InputDecorationTheme_Object_Diagnosticable);
    _inherit(M._MaterialState, M.__MaterialState_State_TickerProviderStateMixin);
    _inherit(E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin, E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin);
    _inherit(E.RenderProxyBox, E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin);
    _inheritMany(E.RenderProxyBox, [M._RenderInkFeatures, V.RenderCustomPaint, E.RenderProxyBoxWithHitTestBehavior, E.RenderConstrainedBox, E.RenderLimitedBox, E.RenderOpacity, E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin, E._RenderCustomClip, E.RenderDecoratedBox, E.RenderFractionalTranslation, E.RenderMouseRegion, E.RenderRepaintBoundary, E.RenderIgnorePointer, E.RenderOffstage, E.RenderAbsorbPointer, E.RenderSemanticsAnnotations, E.RenderBlockSemantics, E.RenderMergeSemantics, E.RenderExcludeSemantics]);
    _inheritMany(G.ImplicitlyAnimatedWidget, [M._MaterialInterior, K.AnimatedTheme, G.AnimatedDefaultTextStyle, G.AnimatedPhysicalModel]);
    _inherit(G.ImplicitlyAnimatedWidgetState, G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin);
    _inherit(G.AnimatedWidgetBaseState, G.ImplicitlyAnimatedWidgetState);
    _inheritMany(G.AnimatedWidgetBaseState, [M._MaterialInteriorState, K._AnimatedThemeState, G._AnimatedDefaultTextStyleState, G._AnimatedPhysicalModelState]);
    _inherit(M._ShapeBorderPainter, V.CustomPainter);
    _inherit(A.MouseCursor0, A._MouseCursor_Object_Diagnosticable);
    _inheritMany(A.MouseCursor0, [V.MaterialStateMouseCursor, A._DeferringMouseCursor, A.SystemMouseCursor]);
    _inherit(V._EnabledAndDisabledMouseCursor, V.MaterialStateMouseCursor);
    _inherit(E.NavigationRailThemeData, E._NavigationRailThemeData_Object_Diagnosticable);
    _inherit(U.OutlinedButtonThemeData, U._OutlinedButtonThemeData_Object_Diagnosticable);
    _inheritMany(K.Route, [T.OverlayRoute, K._NotAnnounced]);
    _inherit(T.TransitionRoute, T.OverlayRoute);
    _inherit(T._ModalRoute_TransitionRoute_LocalHistoryRoute, T.TransitionRoute);
    _inherit(T.ModalRoute, T._ModalRoute_TransitionRoute_LocalHistoryRoute);
    _inherit(V.PageRoute, T.ModalRoute);
    _inherit(V._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin, V.PageRoute);
    _inherit(V.MaterialPageRoute, V._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin);
    _inheritMany(K.PageTransitionsBuilder, [K.FadeUpwardsPageTransitionsBuilder, K.CupertinoPageTransitionsBuilder]);
    _inherit(K.PageTransitionsTheme, K._PageTransitionsTheme_Object_Diagnosticable);
    _inherit(R.PopupMenuThemeData, R._PopupMenuThemeData_Object_Diagnosticable);
    _inherit(T.RadioThemeData, T._RadioThemeData_Object_Diagnosticable);
    _inherit(M.ScaffoldMessengerState, M._ScaffoldMessengerState_State_TickerProviderStateMixin);
    _inherit(X.ScrollbarThemeData, X._ScrollbarThemeData_Object_Diagnosticable);
    _inherit(Q.SliderThemeData, Q._SliderThemeData_Object_Diagnosticable);
    _inherit(K.SnackBarThemeData, K._SnackBarThemeData_Object_Diagnosticable);
    _inherit(R.SwitchThemeData, R._SwitchThemeData_Object_Diagnosticable);
    _inherit(U.TabBarTheme, U._TabBarTheme_Object_Diagnosticable);
    _inherit(T.TextButtonThemeData, T._TextButtonThemeData_Object_Diagnosticable);
    _inherit(R.TextSelectionThemeData, R._TextSelectionThemeData_Object_Diagnosticable);
    _inherit(R.TextTheme, R._TextTheme_Object_Diagnosticable);
    _inheritMany(M.InheritedTheme, [K._InheritedTheme, Y.IconTheme, L.DefaultTextStyle]);
    _inherit(X.ThemeData, X._ThemeData_Object_Diagnosticable);
    _inherit(X.MaterialBasedCupertinoThemeData, K.CupertinoThemeData);
    _inherit(X.VisualDensity, X._VisualDensity_Object_Diagnosticable);
    _inherit(A.TimePickerThemeData, A._TimePickerThemeData_Object_Diagnosticable);
    _inherit(S.ToggleButtonsThemeData, S._ToggleButtonsThemeData_Object_Diagnosticable);
    _inherit(T.TooltipThemeData, T._TooltipThemeData_Object_Diagnosticable);
    _inherit(U.Typography, U._Typography_Object_Diagnosticable);
    _inheritMany(K.AlignmentGeometry, [K.Alignment, K.AlignmentDirectional, K._MixedAlignment]);
    _inheritMany(K.BorderRadiusGeometry, [K.BorderRadius, K._MixedBorderRadius]);
    _inheritMany(Y.ShapeBorder, [Y.OutlinedBorder, Y._CompoundBorder]);
    _inheritMany(Y.OutlinedBorder, [X.CircleBorder, X.RoundedRectangleBorder, X._RoundedRectangleToCircleBorder]);
    _inheritMany(V.EdgeInsetsGeometry, [V.EdgeInsets, V.EdgeInsetsDirectional, V._MixedEdgeInsets]);
    _inherit(D.DefaultShaderWarmUp, D.ShaderWarmUp);
    _inherit(Q.TextSpan, G.InlineSpan);
    _inherit(A.TextStyle, A._TextStyle_Object_Diagnosticable);
    _inherit(S.BoxConstraints, K.Constraints);
    _inherit(S.BoxHitTestResult, O.HitTestResult);
    _inherit(S.BoxHitTestEntry, O.HitTestEntry);
    _inherit(S.BoxParentData, K.ParentData);
    _inherit(S._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin, S.BoxParentData);
    _inherit(S.ContainerBoxParentData, S._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin);
    _inherit(T.Layer0, T._Layer_AbstractNode_DiagnosticableTreeMixin);
    _inheritMany(T.Layer0, [T.PictureLayer, T.PerformanceOverlayLayer, T.ContainerLayer0]);
    _inheritMany(T.ContainerLayer0, [T.OffsetLayer, T.ClipRectLayer, T.ClipPathLayer, T.OpacityLayer, T.PhysicalModelLayer]);
    _inherit(T.TransformLayer, T.OffsetLayer);
    _inherit(A._MouseTrackerUpdateDetails, A.__MouseTrackerUpdateDetails_Object_Diagnosticable);
    _inherit(K.PaintingContext, Z.ClipContext);
    _inheritMany(K._SemanticsFragment, [K._ContainerSemanticsFragment, K._InterestingSemanticsFragment]);
    _inheritMany(K._InterestingSemanticsFragment, [K._RootSemanticsFragment, K._SwitchableSemanticsFragment, K._AbortingSemanticsFragment]);
    _inheritMany(S.ContainerBoxParentData, [Q.TextParentData, K.StackParentData]);
    _inherit(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin);
    _inherit(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin, Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(Q.RenderParagraph, Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin);
    _inherit(E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin, E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin);
    _inherit(E.RenderAnimatedOpacity, E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin);
    _inherit(E.ShapeBorderClipper, E.CustomClipper);
    _inheritMany(E._RenderCustomClip, [E.RenderClipPath, E._RenderPhysicalModelBase]);
    _inheritMany(E._RenderPhysicalModelBase, [E.RenderPhysicalModel, E.RenderPhysicalShape]);
    _inheritMany(E.RenderProxyBoxWithHitTestBehavior, [E.RenderPointerListener, E.RenderSemanticsGestureHandler, T._RenderColoredBox]);
    _inherit(T.RenderPositionedBox, T.RenderAligningShiftedBox);
    _inherit(K._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, K._RenderStack_RenderBox_ContainerRenderObjectMixin);
    _inherit(K.RenderStack, K._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.RenderView, A._RenderView_RenderObject_RenderObjectWithChildMixin);
    _inherit(A.SemanticsData, A._SemanticsData_Object_Diagnosticable);
    _inherit(A.SemanticsNode, A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin);
    _inherit(A._SemanticsSortGroup, P.Comparable);
    _inherit(A.SemanticsSortKey, A._SemanticsSortKey_Object_Diagnosticable);
    _inherit(A.OrdinalSortKey, A.SemanticsSortKey);
    _inherit(E.TapSemanticEvent, E.SemanticsEvent);
    _inherit(Q.CachingAssetBundle, Q.AssetBundle);
    _inherit(Q.PlatformAssetBundle, Q.CachingAssetBundle);
    _inherit(N._DefaultBinaryMessenger, Q.BinaryMessenger);
    _inherit(G.KeyboardKey, G._KeyboardKey_Object_Diagnosticable);
    _inheritMany(G.KeyboardKey, [G.LogicalKeyboardKey, G.PhysicalKeyboardKey]);
    _inherit(A._SystemMouseCursorSession, A.MouseCursorSession);
    _inherit(A.OptionalMethodChannel, A.MethodChannel);
    _inherit(B.RawKeyEvent, B._RawKeyEvent_Object_Diagnosticable);
    _inheritMany(B.RawKeyEvent, [B.RawKeyDownEvent, B.RawKeyUpEvent]);
    _inheritMany(B.RawKeyEventData, [Q.RawKeyEventDataFuchsia, B.RawKeyEventDataMacOs, A.RawKeyEventDataWeb]);
    _inherit(X.TextSelection, P.TextRange);
    _inherit(U.Intent, U._Intent_Object_Diagnosticable);
    _inherit(U.Action, U._Action_Object_Diagnosticable);
    _inheritMany(U.Action, [U.ContextAction, U.CallbackAction, U.DoNothingAction, U.DismissAction, U.PrioritizedAction, U.RequestFocusAction, U.NextFocusAction, U.PreviousFocusAction, U.DirectionalFocusAction, F.ScrollAction]);
    _inherit(U.ActionDispatcher, U._ActionDispatcher_Object_Diagnosticable);
    _inheritMany(U.Intent, [U.ActivateIntent, U.ButtonActivateIntent, U.DismissIntent, U.PrioritizedIntents, U.NextFocusIntent, U.PreviousFocusIntent, F.ScrollIntent, M.DoNothingAndStopPropagationTextIntent]);
    _inherit(S._WidgetsAppState, S.__WidgetsAppState_State_WidgetsBindingObserver);
    _inherit(S._MediaQueryFromWindowsState, S.__MediaQueryFromWindowsState_State_WidgetsBindingObserver);
    _inherit(L.KeepAliveNotification, U.Notification0);
    _inherit(T.Center, T.Align);
    _inheritMany(N.Element, [N.RenderObjectElement, N.ComponentElement, N._NullElement]);
    _inheritMany(N.RenderObjectElement, [N.SingleChildRenderObjectElement, N.RootRenderObjectElement, N.LeafRenderObjectElement, N.MultiChildRenderObjectElement]);
    _inherit(T._OffstageElement, N.SingleChildRenderObjectElement);
    _inheritMany(N.MultiChildRenderObjectWidget, [T.Stack, T.RichText, X._Theatre]);
    _inherit(T.Positioned, N.ParentDataWidget);
    _inherit(N.RenderObjectToWidgetElement, N.RootRenderObjectElement);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding, N.BindingBase);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding);
    _inherit(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding);
    _inherit(N.WidgetsFlutterBinding, N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding);
    _inherit(E.DefaultTextEditingActions, U.Actions);
    _inherit(Y.TextEditingAction, U.ContextAction);
    _inheritMany(Y.TextEditingAction, [E._DoNothingAndStopPropagationTextAction, E._ExpandSelectionLeftByLineTextAction, E._ExpandSelectionRightByLineTextAction, E._ExpandSelectionToEndTextAction, E._ExpandSelectionToStartTextAction, E._ExtendSelectionDownTextAction, E._ExtendSelectionLeftByLineTextAction, E._ExtendSelectionLeftByWordAndStopAtReversalTextAction, E._ExtendSelectionLeftByWordTextAction, E._ExtendSelectionLeftTextAction, E._ExtendSelectionRightByLineTextAction, E._ExtendSelectionRightByWordAndStopAtReversalTextAction, E._ExtendSelectionRightByWordTextAction, E._ExtendSelectionRightTextAction, E._ExtendSelectionUpTextAction, E._MoveSelectionDownTextAction, E._MoveSelectionLeftTextAction, E._MoveSelectionRightTextAction, E._MoveSelectionUpTextAction, E._MoveSelectionLeftByLineTextAction, E._MoveSelectionLeftByWordTextAction, E._MoveSelectionRightByLineTextAction, E._MoveSelectionRightByWordTextAction, E._MoveSelectionToEndTextAction, E._MoveSelectionToStartTextAction]);
    _inherit(E.DefaultTextEditingShortcuts, X.Shortcuts);
    _inherit(O._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, O._FocusNode_Object_DiagnosticableTreeMixin);
    _inherit(O.FocusNode, O._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier);
    _inherit(O.FocusScopeNode, O.FocusNode);
    _inherit(O._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier, O._FocusManager_Object_DiagnosticableTreeMixin);
    _inherit(O.FocusManager, O._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier);
    _inherit(L.FocusScope, L.Focus);
    _inherit(L._FocusScopeState, L._FocusState);
    _inheritMany(S.InheritedNotifier, [L._FocusMarker, X._ShortcutsMarker]);
    _inherit(U.FocusTraversalPolicy, U._FocusTraversalPolicy_Object_Diagnosticable);
    _inherit(U._ReadingOrderSortData, U.__ReadingOrderSortData_Object_Diagnosticable);
    _inherit(U._ReadingOrderDirectionalGroupData, U.__ReadingOrderDirectionalGroupData_Object_Diagnosticable);
    _inherit(U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, U.FocusTraversalPolicy);
    _inherit(U.ReadingOrderTraversalPolicy, U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin);
    _inherit(N.UniqueKey, D.LocalKey);
    _inheritMany(N.GlobalKey, [N.LabeledGlobalKey, N.GlobalObjectKey]);
    _inherit(N._ElementDiagnosticableTreeNode, Y.DiagnosticableTreeNode);
    _inheritMany(N.LeafRenderObjectWidget, [N.ErrorWidget, L.PerformanceOverlay]);
    _inheritMany(N.ComponentElement, [N.StatelessElement, N.StatefulElement, N.ProxyElement]);
    _inheritMany(N.ProxyElement, [N.ParentDataElement, N.InheritedElement]);
    _inheritMany(D.GestureRecognizerFactory, [D.GestureRecognizerFactoryWithHandlers, X._AnyTapGestureRecognizerFactory]);
    _inheritMany(D.SemanticsGestureDelegate, [D._DefaultSemanticsGestureDelegate, X._ModalBarrierSemanticsDelegate]);
    _inherit(T.HeroController, K.NavigatorObserver);
    _inherit(S._InheritedNotifierElement, N.InheritedElement);
    _inherit(K.DefaultTransitionDelegate, K.TransitionDelegate);
    _inherit(K._RouteEntry, K.RouteTransitionRecord);
    _inheritMany(K._NavigatorObservation, [K._NavigatorPushObservation, K._NavigatorPopObservation, K._NavigatorRemoveObservation, K._NavigatorReplaceObservation]);
    _inherit(K._NavigatorState_State_TickerProviderStateMixin_RestorationMixin, K._NavigatorState_State_TickerProviderStateMixin);
    _inherit(K.NavigatorState, K._NavigatorState_State_TickerProviderStateMixin_RestorationMixin);
    _inheritMany(K._RestorationInformation, [K._NamedRestorationInformation, K._AnonymousRestorationInformation]);
    _inheritMany(K.RestorableProperty, [K._HistoryProperty, U.RestorableValue]);
    _inherit(X.OverlayState, X._OverlayState_State_TickerProviderStateMixin);
    _inherit(X._TheatreElement, N.MultiChildRenderObjectElement);
    _inherit(X._RenderTheatre, X.__RenderTheatre_RenderBox_ContainerRenderObjectMixin);
    _inherit(K._RestorationScopeState, K.__RestorationScopeState_State_RestorationMixin);
    _inherit(U._RestorablePrimitiveValueN, U.RestorableValue);
    _inherit(U._RestorablePrimitiveValue, U._RestorablePrimitiveValueN);
    _inherit(U.RestorableNum, U._RestorablePrimitiveValue);
    _inherit(T._DismissModalAction, U.DismissAction);
    _inherit(X._LogicalKeySet_KeySet_Diagnosticable, X.KeySet);
    _inherit(X.LogicalKeySet, X._LogicalKeySet_KeySet_Diagnosticable);
    _inherit(X.ShortcutManager, X._ShortcutManager_ChangeNotifier_Diagnosticable);
    _inherit(U._WidgetTicker, M.Ticker);
    _inheritMany(K.AnimatedWidget, [K.SlideTransition, K.DecoratedBoxTransition, K.AnimatedBuilder]);
    _inherit(E._IntBuffer0, E.TypedDataBuffer);
    _inherit(E.Uint8Buffer, E._IntBuffer0);
    _mixin(H._DomCanvas_EngineCanvas_SaveElementStackTracking, H.SaveElementStackTracking);
    _mixin(H._PersistedClipRect_PersistedContainerSurface__DomClip, H._DomClip);
    _mixin(H._PersistedPhysicalShape_PersistedContainerSurface__DomClip, H._DomClip);
    _mixin(H.__MouseAdapter__BaseAdapter__WheelEventListenerMixin, H._WheelEventListenerMixin);
    _mixin(H.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, H._WheelEventListenerMixin);
    _mixin(H.UnmodifiableListBase, H.UnmodifiableListMixin);
    _mixin(H.__CastListBase__CastIterableBase_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(P._AsyncStreamController, P._AsyncStreamControllerDispatch);
    _mixin(P._ListBase_Object_ListMixin, P.ListMixin);
    _mixin(P._UnmodifiableMapView_MapView__UnmodifiableMapMixin, P._UnmodifiableMapMixin);
    _mixin(P.__SetBase_Object_SetMixin, P.SetMixin);
    _mixin(P.__UnmodifiableSet__SetBase__UnmodifiableSetMixin, P._UnmodifiableSetMixin);
    _mixin(W._CssStyleDeclaration_Interceptor_CssStyleDeclarationBase, W.CssStyleDeclarationBase);
    _mixin(W._DomRectList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._DomRectList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._DomStringList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._DomStringList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._FileList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._FileList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._HtmlCollection_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._MidiInputMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._MidiOutputMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._MimeTypeArray_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._NodeList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._PluginArray_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._PluginArray_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._RtcStatsReport_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._SourceBufferList_EventTarget_ListMixin, P.ListMixin);
    _mixin(W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._SpeechGrammarList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._Storage_Interceptor_MapMixin, P.MapMixin);
    _mixin(W._TextTrackCueList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._TextTrackList_EventTarget_ListMixin, P.ListMixin);
    _mixin(W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W._TouchList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W._TouchList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__CssRuleList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__CssRuleList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__GamepadList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__GamepadList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__SpeechRecognitionResultList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(W.__StyleSheetList_Interceptor_ListMixin, P.ListMixin);
    _mixin(W.__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._JsArray_JsObject_ListMixin, P.ListMixin);
    _mixin(P._LengthList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._LengthList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._NumberList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._NumberList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._StringList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._StringList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._TransformList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._TransformList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(P._AudioParamMap_Interceptor_MapMixin, P.MapMixin);
    _mixin(P._SqlResultSetRowList_Interceptor_ListMixin, P.ListMixin);
    _mixin(P._SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin, W.ImmutableListMixin);
    _mixin(G._AnimationController_Animation_AnimationEagerListenerMixin, S.AnimationEagerListenerMixin);
    _mixin(G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, S.AnimationLocalListenersMixin);
    _mixin(G._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S.AnimationLocalStatusListenersMixin);
    _mixin(S._CurvedAnimation_Animation_AnimationWithParentMixin, S.AnimationWithParentMixin);
    _mixin(S._ProxyAnimation_Animation_AnimationLazyListenerMixin, S.AnimationLazyListenerMixin);
    _mixin(S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin, S.AnimationLocalListenersMixin);
    _mixin(S._ProxyAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S.AnimationLocalStatusListenersMixin);
    _mixin(S._ReverseAnimation_Animation_AnimationLazyListenerMixin, S.AnimationLazyListenerMixin);
    _mixin(S._ReverseAnimation_Animation_AnimationLazyListenerMixin_AnimationLocalStatusListenersMixin, S.AnimationLocalStatusListenersMixin);
    _mixin(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin, S.AnimationEagerListenerMixin);
    _mixin(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, S.AnimationLocalListenersMixin);
    _mixin(S._TrainHoppingAnimation_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, S.AnimationLocalStatusListenersMixin);
    _mixin(R.__AnimatedEvaluation_Animation_AnimationWithParentMixin, S.AnimationWithParentMixin);
    _mixin(E._CupertinoDynamicColor_Color_Diagnosticable, Y.Diagnosticable);
    _mixin(T._CupertinoIconThemeData_IconThemeData_Diagnosticable, Y.Diagnosticable);
    _mixin(K._CupertinoThemeData_NoDefaultCupertinoThemeData_Diagnosticable, Y.Diagnosticable);
    _mixin(U._FlutterError_Error_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(U._FlutterErrorDetails_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Y._DiagnosticableTree_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(F._PointerAddedEvent_PointerEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent, F._CopyPointerAddedEvent);
    _mixin(F._PointerCancelEvent_PointerEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent, F._CopyPointerCancelEvent);
    _mixin(F._PointerDownEvent_PointerEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent, F._CopyPointerDownEvent);
    _mixin(F._PointerEnterEvent_PointerEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent, F._CopyPointerEnterEvent);
    _mixin(F._PointerEvent_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(F._PointerExitEvent_PointerEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent, F._CopyPointerExitEvent);
    _mixin(F._PointerHoverEvent_PointerEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent, F._CopyPointerHoverEvent);
    _mixin(F._PointerMoveEvent_PointerEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent, F._CopyPointerMoveEvent);
    _mixin(F._PointerRemovedEvent_PointerEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent, F._CopyPointerRemovedEvent);
    _mixin(F._PointerScrollEvent_PointerSignalEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent, F._CopyPointerScrollEvent);
    _mixin(F._PointerUpEvent_PointerEvent__PointerEventDescription, F._PointerEventDescription);
    _mixin(F._PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent, F._CopyPointerUpEvent);
    _mixin(F.__TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent, F._CopyPointerAddedEvent);
    _mixin(F.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent, F._CopyPointerCancelEvent);
    _mixin(F.__TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent, F._CopyPointerDownEvent);
    _mixin(F.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent, F._CopyPointerEnterEvent);
    _mixin(F.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable, Y.Diagnosticable);
    _mixin(F.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription, F._PointerEventDescription);
    _mixin(F.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent, F._CopyPointerExitEvent);
    _mixin(F.__TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent, F._CopyPointerHoverEvent);
    _mixin(F.__TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent, F._CopyPointerMoveEvent);
    _mixin(F.__TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent, F._CopyPointerRemovedEvent);
    _mixin(F.__TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent, F._CopyPointerScrollEvent);
    _mixin(F.__TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent, F._CopyPointerUpEvent);
    _mixin(S._GestureRecognizer_GestureArenaMember_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(V._AppBarTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Q._MaterialBannerThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(D._BottomAppBarTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M._BottomNavigationBarThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(X._BottomSheetThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M._ButtonBarThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._ButtonStyle_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M._ButtonThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._CardTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(F._CheckboxThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(K._ChipThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._ColorScheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Z._DataTableThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Y._DialogTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(G._DividerThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(T._ElevatedButtonThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(S._FloatingActionButtonThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(R.__InkResponseState_State_AutomaticKeepAliveClientMixin, L.AutomaticKeepAliveClientMixin);
    _mixin(L._InputDecorationTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M.__MaterialState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(E._NavigationRailThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._OutlinedButtonThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(V._MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin, V.MaterialRouteTransitionMixin);
    _mixin(K._PageTransitionsTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(R._PopupMenuThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(T._RadioThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(M._ScaffoldMessengerState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(X._ScrollbarThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Q._SliderThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(K._SnackBarThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(R._SwitchThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._TabBarTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(T._TextButtonThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(R._TextSelectionThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(R._TextTheme_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(X._ThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(X._VisualDensity_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._TimePickerThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(S._ToggleButtonsThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(T._TooltipThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._Typography_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(Z._Decoration_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._TextStyle_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(S._ContainerBoxParentData_BoxParentData_ContainerParentDataMixin, K.ContainerParentDataMixin);
    _mixin(T._Layer_AbstractNode_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(A.__MouseTrackerUpdateDetails_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(K._RenderObject_AbstractNode_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, S.RenderBoxContainerDefaultsMixin);
    _mixin(Q._RenderParagraph_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_RelayoutWhenSystemFontsChangeMixin, K.RelayoutWhenSystemFontsChangeMixin);
    _mixin(E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin, E.RenderProxyBoxMixin);
    _mixin(E._RenderAnimatedOpacity_RenderProxyBox_RenderProxyBoxMixin_RenderAnimatedOpacityMixin, E.RenderAnimatedOpacityMixin);
    _mixin(E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin, K.RenderObjectWithChildMixin);
    _mixin(E._RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin, E.RenderProxyBoxMixin);
    _mixin(T._RenderShiftedBox_RenderBox_RenderObjectWithChildMixin, K.RenderObjectWithChildMixin);
    _mixin(K._RenderStack_RenderBox_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(K._RenderStack_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, S.RenderBoxContainerDefaultsMixin);
    _mixin(A._RenderView_RenderObject_RenderObjectWithChildMixin, K.RenderObjectWithChildMixin);
    _mixin(A._SemanticsData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._SemanticsNode_AbstractNode_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(A._SemanticsSortKey_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(G._KeyboardKey_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(A._MouseCursor_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(B._RawKeyEvent_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._Action_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._ActionDispatcher_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._Intent_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(S.__MediaQueryFromWindowsState_State_WidgetsBindingObserver, N.WidgetsBindingObserver);
    _mixin(S.__WidgetsAppState_State_WidgetsBindingObserver, N.WidgetsBindingObserver);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding, N.GestureBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding, N.SchedulerBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, N.ServicesBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, N.PaintingBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, N.SemanticsBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, N.RendererBinding);
    _mixin(N._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, N.WidgetsBinding);
    _mixin(O._FocusManager_Object_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(O._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier, B.ChangeNotifier);
    _mixin(O._FocusNode_Object_DiagnosticableTreeMixin, Y.DiagnosticableTreeMixin);
    _mixin(O._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, B.ChangeNotifier);
    _mixin(U._FocusTraversalPolicy_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, U.DirectionalFocusTraversalPolicyMixin);
    _mixin(U.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(U.__ReadingOrderSortData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(N._State_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(T._IconThemeData_Object_Diagnosticable, Y.Diagnosticable);
    _mixin(G._ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin, U.SingleTickerProviderStateMixin);
    _mixin(K._NavigatorState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(K._NavigatorState_State_TickerProviderStateMixin_RestorationMixin, K.RestorationMixin);
    _mixin(X._OverlayState_State_TickerProviderStateMixin, U.TickerProviderStateMixin);
    _mixin(X.__RenderTheatre_RenderBox_ContainerRenderObjectMixin, K.ContainerRenderObjectMixin);
    _mixin(K.__RestorationScopeState_State_RestorationMixin, K.RestorationMixin);
    _mixin(T._ModalRoute_TransitionRoute_LocalHistoryRoute, T.LocalHistoryRoute);
    _mixin(X._LogicalKeySet_KeySet_Diagnosticable, Y.Diagnosticable);
    _mixin(X._ShortcutManager_ChangeNotifier_Diagnosticable, Y.Diagnosticable);
    _mixin(N._WidgetInspectorService, N.WidgetInspectorService);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    getTypeFromName: getGlobalFromName,
    metadata: [],
    types: ["~()", "Null(Event)", "Null()", "~(Event)", "~(Element)", "Null(@)", "~(Duration)", "~(Object?)", "~(AnimationStatus)", "~(String,@)", "~(ByteData?)", "bool(FocusNode)", "bool(FlutterHtmlKeyboardEvent)", "~(@)", "~(DragUpdateDetails)", "~(bool)", "Iterable<DiagnosticsNode>()", "Null(~)", "bool(_RouteEntry?)", "~(PointerEvent0)", "bool(BoxHitTestResult,Offset?)", "bool(int)", "bool(String)", "~(@,@)", "@(Event)", "bool(Object?)", "@(@)", "@()", "int()", "Widget(BuildContext)", "int(FocusNode,FocusNode)", "Null(PointerEvent)", "Null(TouchEvent)", "Future<~>()", "Future<Map<String,@>>(Map<String,String>)", "~(NavigatorObserver)", "int(RenderObject,RenderObject)", "~(RenderObject)", "~(PaintingContext,Offset)", "bool(Element)", "Future<Map<String,Object>>(Map<String,String>)", "bool(_RouteEntry)", "~(MouseEvent)", "Null(MouseEvent)", "bool()", "Future<Null>()", "~(PointerDownEvent)", "~(List<FrameTiming>)", "bool(SemanticsNode)", "int(SemanticsNode,SemanticsNode)", "String()", "~(Object,StackTrace)", "~(Object?,Object?)", "~(~())", "double()", "String(String)", "ColorTween(@)", "bool(InlineSpan)", "Null(bool)", "String(int)", "bool(Element0,String,String,_Html5NodeValidator)", "DateTime()", "List<CodeunitRange>()", "@(Object?)", "Future<ServiceExtensionResponse>(String,Map<String,String>)", "~(Uint8List,String,int)", "bool(Node)", "~(String,String)", "bool(NodeValidator)", "Color(Color)", "int(int)", "~(num)", "~(DiagnosticsNode)", "~(int)", "Widget(BuildContext,Widget?)", "ByteBuffer(@)", "~(PointerExitEvent)", "Tween<double>(@)", "KeyData()", "@(double)", "@(~())", "List<SemanticsNode>(_SemanticsSortGroup)", "~()()", "Size(RenderBox,BoxConstraints)", "Future<ByteData?>(ByteData?)", "~(RestorationBucket)", "Map<Object?,Object?>()", "bool(InheritedElement)", "List<SkTypeface>()", "int(_ReadingOrderSortData,_ReadingOrderSortData)", "Tween<@>?(Tween<@>?,@,Tween<@>(@))", "~(GestureMode)", "~(RestorableProperty<Object?>,~())", "int(_PersistedSurfaceMatch,_PersistedSurfaceMatch)", "Null(@,StackTrace)", "~(int,@)", "_Future<@>?()", "@(Object)", "@(StackTrace)", "Object()", "StackTrace()", "bool(@)", "~(Object[StackTrace?])", "Null(Object,StackTrace)", "_Future<@>(@)", "String?(String)", "Checkable(SemanticsObject)", "~(Symbol0,@)", "ImageRoleManager(SemanticsObject)", "~(String,int)", "~(String[@])", "int(int,int)", "~(String,String?)", "Uint8List(@,@)", "LiveRegion(SemanticsObject)", "@(Matrix40)", "~(DomException)", "~(ProgressEvent)", "Matrix40()", "Tappable(SemanticsObject)", "~(Node,Node?)", "Null(@,@)", "@(@,@)", "Element0(Node)", "JsFunction(@)", "JsArray<@>(@)", "JsObject(@)", "_Channel()", "Null(String)", "~(Event?)", "String(String,Color)", "~(Timer)", "~(DragStartDetails)", "bool(NotoFont)", "~(DragEndDetails)", "SurfaceScene()", "@(~(AnimationStatus))", "~(AnimationStatus)()", "Null(SkDeletable)", "TargetPlatform?()", "TargetPlatform()", "int(_PaintRequest,_PaintRequest)", "bool(DiagnosticsNode?)", "bool(StackFrame)", "ErrorDescription(String)", "@(HtmlElement)", "String(DiagnosticsNode)", "LabelAndValue(SemanticsObject)", "@(Map<String,@>)", "Map<String,@>()", "HtmlElement()", "@(int)", "Null(FontFace)", "bool(DiagnosticsNode)", "~(AbstractNode)", "String(GestureArenaMember)", "_GestureArena()", "~(PointerDataPacket)", "@(DateTime)", "ByteBuffer/(@)", "~(_TapTracker)", "Map<~(PointerEvent0),Matrix4?>()", "~(~(PointerEvent0),Matrix4?)", "MaterialRectArcTween(Rect?,Rect?)", "Widget(BuildContext,~())", "String(String,String)", "MaterialPageRoute<0^>(RouteSettings,Widget(BuildContext))<Object?>", "bool(KeyData)", "double(_Diagonal)", "~(ParagraphGeometricStyle,ParagraphRuler)", "Rect()", "Rect()?(RenderBox)", "bool(BuildContext)", "~([Intent?])", "~(FocusHighlightMode)", "~(TapDownDetails)", "~(PointerEnterEvent)", "int(ParagraphRuler,ParagraphRuler)", "bool(InkHighlight?)", "bool(LayoutChangedNotification)", "~(String)", "String/(@)", "ShapeBorderTween(@)", "PageTransitionsBuilder?(TargetPlatform)", "ThemeDataTween(@)", "ThemeData()", "EdgeInsetsGeometry(EdgeInsetsGeometry,ShapeBorder)", "ShapeBorder(ShapeBorder)", "String(ShapeBorder)", "String(@)", "DiagnosticsNode(InlineSpan)", "~(int,SemanticsAction,ByteData?)", "String(double,double,String)", "Size()", "double?()", "@(Map<Key,SemanticsNode>)", "Map<Key,SemanticsNode>()", "MouseCursor0(MouseTrackerAnnotation)", "~(MouseTrackerAnnotation,Matrix4)", "bool(MouseTrackerAnnotation)", "~(CanvasKit)", "~({curve:Curve,descendant:RenderObject?,duration:Duration,rect:Rect?})", "~(int,bool(FlutterHtmlKeyboardEvent))", "@(bool)", "bool(int,int)", "bool(InlineSpanSemanticsInformation)", "~(KeyboardEvent)", "HitTestResult(Offset)", "Future<ByteBuffer>(@)", "~(int,_FrameCallbackEntry)", "~(String,FormElement)", "SemanticsNode(_TraversalSortNode)", "DiagnosticsNode(SemanticsNode)", "@(TextInputCommand)", "TextInputCommand()", "int(SemanticsNode)", "~(EditingState?)", "Stream<LicenseEntry>()", "Future<String?>(String?)", "Future<~>(String,ByteData?,~(ByteData?)?)", "Future<~>(ByteData?,~(ByteData?))", "~(String?)", "Future<@>(@)", "Future<Object?>(MethodCall)", "~(String,bool)", "bool(SurfaceFrame,CkCanvas)", "List<RestorationBucket>()", "List<RestorationBucket>(List<RestorationBucket>)", "@(BuildContext)", "BuildContext()", "Null(ByteData)", "TextField(SemanticsObject)", "~(Action<Intent>)", "Route<@>?(RouteSettings)", "Route<@>(RouteSettings)", "~(String?{wrapWidth:int?})", "_ButtonSanitizer()", "HitTestResult()", "Future<double>()", "Future<~>(double)", "Future<~>(@)", "Future<@>(MethodCall)", "Future<Map<String,String>>(Map<String,Object>)", "SkTextStyle()", "Future<bool>()", "Future<~>(bool)", "@(StreamSubscription<Event>)", "DiagnosticsNode(FocusNode)", "bool(RawKeyEvent)", "~(_FocusTraversalGroupInfo)", "bool(_DirectionalPolicyDataEntry)", "StreamSubscription<Event>()", "bool(TraversalDirection)", "Set<Directionality>(_ReadingOrderSortData)", "bool(bool)", "List<Directionality>(BuildContext)", "Rect(_ReadingOrderSortData)", "int(_ReadingOrderDirectionalGroupData,_ReadingOrderDirectionalGroupData)", "List<_ReadingOrderSortData>(_ReadingOrderSortData,Iterable<_ReadingOrderSortData>)", "bool(_ReadingOrderSortData)", "Element?(Element)", "Object?(int,Element?)", "TapGestureRecognizer()", "~(TapGestureRecognizer)", "DoubleTapGestureRecognizer()", "~(DoubleTapGestureRecognizer)", "LongPressGestureRecognizer()", "~(LongPressGestureRecognizer)", "PanGestureRecognizer()", "~(PanGestureRecognizer)", "~(RenderSemanticsGestureHandler)", "~(StatefulElement,Object)", "Positioned(BuildContext,Widget?)", "~(_HeroFlight)", "Widget(BuildContext,Animation0<double>,HeroFlightDirection,BuildContext,BuildContext)", "bool(_HeroFlight)", "IconTheme(BuildContext)", "@(@,String)", "TextStyleTween(@)", "BorderRadiusTween(@)", "Future<@>(_Pending)", "Map<Type,@>(List<@>)", "Map<Type,@>(Map<Type,@>)", "Null(Map<Type,@>)", "_PointerState()", "bool(Route<@>?)", "bool(OverlayEntry)", "@(String)", "Incrementable(SemanticsObject)", "_RouteEntry(Route<@>)", "String(Object?)", "MapEntry<String?,List<Object>>(@,@)", "Null(~())", "Null(RestorationBucket?)", "~(RestorableProperty<Object?>)", "RestorationScope(BuildContext,Widget?)", "Actions(BuildContext)", "IgnorePointer(BuildContext,Widget?)", "Null(List<~>)", "KeyEventResult(FocusNode,RawKeyEvent)", "int(int,Object)", "int(@,@)", "Scrollable(SemanticsObject)", "~(JsUrlStrategy?)", "Object?(Object?)", "Object?(@)", "Size?(Size?,Size?,double)", "double?(num?,num?,double)", "Color?(Color?,Color?,double)", "~(FlutterErrorDetails)", "~(FlutterErrorDetails{forceReport:bool})", "DiagnosticsNode(String)", "StackFrame?(String)", "VelocityTracker(PointerEvent0)", "EdgeInsetsGeometry?(EdgeInsetsGeometry?,EdgeInsetsGeometry?,double)", "TextStyle?(TextStyle?,TextStyle?,double)", "int(_TaskEntry<@>,_TaskEntry<@>)", "bool({priority!int,scheduler!SchedulerBinding})", "String(ByteData)", "List<LicenseEntry>(String)", "int(Element,Element)", "List<Route<@>>(NavigatorState,String)", "Iterable<DiagnosticsNode>(Iterable<DiagnosticsNode>)", "~(Iterable<PointerData>)", "SemanticsNode(int)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: typeof Symbol == "function" && typeof Symbol() == "symbol" ? Symbol("$ti") : "$ti"
  };
  H._Universe_addRules(init.typeUniverse, JSON.parse('{"CanvasKit":"JavaScriptObject","SkFontWeight":"JavaScriptObject","SkTextDirection":"JavaScriptObject","SkTextAlign":"JavaScriptObject","SkRectHeightStyle":"JavaScriptObject","SkRectWidthStyle":"JavaScriptObject","SkClipOp":"JavaScriptObject","SkFillType":"JavaScriptObject","SkStrokeCap":"JavaScriptObject","SkPaintStyle":"JavaScriptObject","SkBlendMode":"JavaScriptObject","SkStrokeJoin":"JavaScriptObject","SkFilterQuality":"JavaScriptObject","SkTileMode":"JavaScriptObject","SkShader":"JavaScriptObject","SkPaint":"JavaScriptObject","SkPath":"JavaScriptObject","SkPicture":"JavaScriptObject","SkTextStyle":"JavaScriptObject","SkTextDecorationStyle":"JavaScriptObject","SkTextBaseline":"JavaScriptObject","SkTextShadow":"JavaScriptObject","SkFontFeature":"JavaScriptObject","SkTypeface":"JavaScriptObject","SkParagraph":"JavaScriptObject","SkDeletable":"JavaScriptObject","JsUrlStrategy":"JavaScriptObject","CanvasKitInitOptions":"JavaScriptObject","CanvasKitInitPromise":"JavaScriptObject","ColorSpace":"JavaScriptObject","SkWebGLContextOptions":"JavaScriptObject","SkSurface":"JavaScriptObject","SkGrContext":"JavaScriptObject","SkFontSlantEnum":"JavaScriptObject","SkFontSlant":"JavaScriptObject","SkFontWeightEnum":"JavaScriptObject","SkAffinityEnum":"JavaScriptObject","SkAffinity":"JavaScriptObject","SkTextDirectionEnum":"JavaScriptObject","SkTextAlignEnum":"JavaScriptObject","SkRectHeightStyleEnum":"JavaScriptObject","SkRectWidthStyleEnum":"JavaScriptObject","SkVertexModeEnum":"JavaScriptObject","SkVertexMode":"JavaScriptObject","SkPointModeEnum":"JavaScriptObject","SkPointMode":"JavaScriptObject","SkClipOpEnum":"JavaScriptObject","SkFillTypeEnum":"JavaScriptObject","SkPathOpEnum":"JavaScriptObject","SkPathOp":"JavaScriptObject","SkBlurStyleEnum":"JavaScriptObject","SkBlurStyle":"JavaScriptObject","SkStrokeCapEnum":"JavaScriptObject","SkPaintStyleEnum":"JavaScriptObject","SkBlendModeEnum":"JavaScriptObject","SkStrokeJoinEnum":"JavaScriptObject","SkFilterQualityEnum":"JavaScriptObject","SkTileModeEnum":"JavaScriptObject","SkFilterModeEnum":"JavaScriptObject","SkFilterMode":"JavaScriptObject","SkMipmapModeEnum":"JavaScriptObject","SkMipmapMode":"JavaScriptObject","SkAlphaTypeEnum":"JavaScriptObject","SkAlphaType":"JavaScriptObject","SkColorTypeEnum":"JavaScriptObject","SkColorType":"JavaScriptObject","SkAnimatedImage":"JavaScriptObject","SkImage":"JavaScriptObject","SkShaderNamespace":"JavaScriptObject","SkMaskFilterNamespace":"JavaScriptObject","SkMaskFilter":"JavaScriptObject","SkColorFilterNamespace":"JavaScriptObject","SkColorFilter":"JavaScriptObject","SkImageFilterNamespace":"JavaScriptObject","SkImageFilter":"JavaScriptObject","SkPathNamespace":"JavaScriptObject","_NativeFloat32ArrayType":"JavaScriptObject","SkFloat32List":"JavaScriptObject","SkContourMeasureIter":"JavaScriptObject","SkContourMeasure":"JavaScriptObject","SkPictureRecorder":"JavaScriptObject","SkCanvas":"JavaScriptObject","SkParagraphBuilderNamespace":"JavaScriptObject","SkParagraphBuilder":"JavaScriptObject","SkParagraphStyle":"JavaScriptObject","SkParagraphStyleProperties":"JavaScriptObject","SkTextDecorationStyleEnum":"JavaScriptObject","SkTextBaselineEnum":"JavaScriptObject","SkPlaceholderAlignmentEnum":"JavaScriptObject","SkPlaceholderAlignment":"JavaScriptObject","SkTextStyleProperties":"JavaScriptObject","SkStrutStyleProperties":"JavaScriptObject","SkFontStyle":"JavaScriptObject","SkFont":"JavaScriptObject","SkFontMgr":"JavaScriptObject","TypefaceFontProvider":"JavaScriptObject","SkLineMetrics":"JavaScriptObject","SkTextPosition":"JavaScriptObject","SkTextRange":"JavaScriptObject","SkVertices":"JavaScriptObject","SkTonalColors":"JavaScriptObject","SkFontMgrNamespace":"JavaScriptObject","TypefaceFontProviderNamespace":"JavaScriptObject","JsConstructor":"JavaScriptObject","SkObjectFinalizationRegistry":"JavaScriptObject","SkData":"JavaScriptObject","SkImageInfo":"JavaScriptObject","PlainJavaScriptObject":"JavaScriptObject","UnknownJavaScriptObject":"JavaScriptObject","JavaScriptFunction":"JavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","AElement":"SvgElement","GraphicsElement":"SvgElement","_ResourceProgressEvent":"ProgressEvent","BRElement":"HtmlElement","ShadowRoot":"Node","DocumentFragment":"Node","HtmlDocument":"Document","CompositionEvent":"UIEvent","DedicatedWorkerGlobalScope":"WorkerGlobalScope","CDataSection":"CharacterData","Text":"CharacterData","HtmlFormControlsCollection":"HtmlCollection","CssCharsetRule":"CssRule","AudioElement":"MediaElement","ManagedSkiaObject":{"SkiaObject":["1"]},"PersistedContainerSurface":{"PersistedSurface":[]},"Checkable":{"RoleManager":[]},"ImageRoleManager":{"RoleManager":[]},"Incrementable":{"RoleManager":[]},"LabelAndValue":{"RoleManager":[]},"LiveRegion":{"RoleManager":[]},"Scrollable":{"RoleManager":[]},"Tappable":{"RoleManager":[]},"TextField":{"RoleManager":[]},"AssetManagerException":{"Exception":[]},"RecordingCkCanvas":{"CkCanvas":[]},"CkSaveCommand":{"CkPaintCommand":[]},"CkRestoreCommand":{"CkPaintCommand":[]},"CkRestoreToCountCommand":{"CkPaintCommand":[]},"CkTranslateCommand":{"CkPaintCommand":[]},"CkTransformCommand":{"CkPaintCommand":[]},"CkClipRectCommand":{"CkPaintCommand":[]},"CkClipRRectCommand":{"CkPaintCommand":[]},"CkClipPathCommand":{"CkPaintCommand":[]},"CkDrawPaintCommand":{"CkPaintCommand":[]},"CkDrawRectCommand":{"CkPaintCommand":[]},"CkDrawRRectCommand":{"CkPaintCommand":[]},"CkDrawDRRectCommand":{"CkPaintCommand":[]},"CkDrawCircleCommand":{"CkPaintCommand":[]},"CkDrawPathCommand":{"CkPaintCommand":[]},"CkDrawShadowCommand":{"CkPaintCommand":[]},"CkDrawParagraphCommand":{"CkPaintCommand":[]},"CkDrawPictureCommand":{"CkPaintCommand":[]},"CkSaveLayerCommand":{"CkPaintCommand":[]},"SkiaObjectCollectionError":{"Error":[]},"MutatorsStack":{"Iterable":["Mutator"],"Iterable.E":"Mutator"},"ContainerLayer":{"Layer":[]},"RootLayer":{"Layer":[]},"ClipPathEngineLayer":{"Layer":[],"ClipPathEngineLayer0":[]},"ClipRectEngineLayer":{"Layer":[],"ClipRectEngineLayer0":[]},"OpacityEngineLayer":{"Layer":[],"OpacityEngineLayer0":[]},"TransformEngineLayer":{"Layer":[],"TransformEngineLayer0":[]},"OffsetEngineLayer":{"Layer":[],"TransformEngineLayer0":[],"OffsetEngineLayer0":[]},"PictureLayer0":{"Layer":[]},"PhysicalShapeEngineLayer":{"Layer":[],"PhysicalShapeEngineLayer0":[]},"CkPaint":{"ManagedSkiaObject":["SkPaint"],"SkiaObject":["SkPaint"],"Paint":[]},"CkPath":{"ManagedSkiaObject":["SkPath"],"SkiaObject":["SkPath"],"Path":[]},"CkPicture":{"ManagedSkiaObject":["SkPicture"],"SkiaObject":["SkPicture"]},"CkShader":{"ManagedSkiaObject":["SkShader"],"SkiaObject":["SkShader"]},"CkGradientLinear":{"CkShader":[],"ManagedSkiaObject":["SkShader"],"SkiaObject":["SkShader"]},"CkParagraph":{"ManagedSkiaObject":["SkParagraph"],"SkiaObject":["SkParagraph"]},"CanvasKitError":{"Error":[]},"PersistedClipRect":{"PersistedContainerSurface":[],"PersistedSurface":[],"ClipRectEngineLayer0":[]},"PersistedPhysicalShape":{"PersistedContainerSurface":[],"PersistedSurface":[],"PhysicalShapeEngineLayer0":[]},"PersistedClipPath":{"PersistedContainerSurface":[],"PersistedSurface":[],"ClipPathEngineLayer0":[]},"PersistedOffset":{"PersistedContainerSurface":[],"PersistedSurface":[],"OffsetEngineLayer0":[]},"PersistedOpacity":{"PersistedContainerSurface":[],"PersistedSurface":[],"OpacityEngineLayer0":[]},"SurfacePaint":{"Paint":[]},"SurfacePath":{"Path":[]},"PersistedPicture":{"PersistedSurface":[]},"DrawCommand":{"PaintCommand":[]},"PaintSave":{"PaintCommand":[]},"PaintRestore":{"PaintCommand":[]},"PaintTranslate":{"PaintCommand":[]},"PaintTransform":{"PaintCommand":[]},"PaintClipRect":{"PaintCommand":[]},"PaintClipRRect":{"PaintCommand":[]},"PaintClipPath":{"PaintCommand":[]},"PaintDrawRect":{"PaintCommand":[]},"PaintDrawRRect":{"PaintCommand":[]},"PaintDrawDRRect":{"PaintCommand":[]},"PaintDrawCircle":{"PaintCommand":[]},"PaintDrawPath":{"PaintCommand":[]},"PaintDrawShadow":{"PaintCommand":[]},"PaintDrawParagraph":{"PaintCommand":[]},"PersistedScene":{"PersistedContainerSurface":[],"PersistedSurface":[]},"GradientLinear":{"EngineGradient":[]},"PersistedLeafSurface":{"PersistedSurface":[]},"PersistedTransform":{"PersistedContainerSurface":[],"PersistedSurface":[],"TransformEngineLayer0":[]},"_TypedDataBuffer":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_IntBuffer":{"_TypedDataBuffer":["int"],"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8Buffer0":{"_TypedDataBuffer":["int"],"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int","_TypedDataBuffer.E":"int"},"CanvasParagraph":{"EngineParagraph":[]},"FlatTextSpan":{"ParagraphSpan":[]},"ChildStyleNode":{"StyleNode":[]},"RootStyleNode":{"StyleNode":[]},"SpanBox":{"RangeBox":[]},"DomParagraph":{"EngineParagraph":[]},"TextInputSetClient":{"TextInputCommand":[]},"TextInputUpdateConfig":{"TextInputCommand":[]},"TextInputSetEditingState":{"TextInputCommand":[]},"TextInputShow":{"TextInputCommand":[]},"TextInputSetEditableSizeAndTransform":{"TextInputCommand":[]},"TextInputSetStyle":{"TextInputCommand":[]},"TextInputClearClient":{"TextInputCommand":[]},"TextInputHide":{"TextInputCommand":[]},"TextInputSetMarkedTextRect":{"TextInputCommand":[]},"TextInputSetCaretRect":{"TextInputCommand":[]},"TextInputFinishAutofillContext":{"TextInputCommand":[]},"EngineFlutterWindow":{"FlutterWindow":[]},"EngineSingletonFlutterWindow":{"EngineFlutterWindow":[],"FlutterWindow":[]},"JavaScriptObject":{"JSObject":[],"CanvasKit":[],"SkFontWeight":[],"SkTextDirection":[],"SkTextAlign":[],"SkRectHeightStyle":[],"SkRectWidthStyle":[],"SkClipOp":[],"SkFillType":[],"SkStrokeCap":[],"SkPaintStyle":[],"SkBlendMode":[],"SkStrokeJoin":[],"SkFilterQuality":[],"SkTileMode":[],"SkShader":[],"SkPaint":[],"SkPath":[],"SkPicture":[],"SkTextStyle":[],"SkTextDecorationStyle":[],"SkTextBaseline":[],"SkTextShadow":[],"SkFontFeature":[],"SkTypeface":[],"SkParagraph":[],"SkDeletable":[],"JsUrlStrategy":[]},"JSBool":{"bool":[]},"JSNull":{"Null":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"JSIndexable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"JSIndexable":["1"]},"JSNumber":{"double":[],"num":[]},"JSInt":{"double":[],"int":[],"num":[]},"JSNumNotInt":{"double":[],"num":[]},"JSString":{"String":[],"JSIndexable":["@"]},"EfficientLengthIterable":{"Iterable":["1"]},"_CastIterableBase":{"Iterable":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListMixin":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListMixin.E":"2"},"CastMap":{"MapMixin":["3","4"],"Map":["3","4"],"MapMixin.V":"4","MapMixin.K":"3"},"LateError":{"Error":[]},"CodeUnits":{"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"FollowedByIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"UnmodifiableListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"Symbol":{"Symbol0":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"NullError":{"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.V":"2","MapMixin.K":"1"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"JSSyntaxRegExp":{"RegExp":[]},"_MatchImplementation":{"Match":[]},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"NativeByteBuffer":{"ByteBuffer":[]},"NativeTypedData":{"TypedData":[]},"NativeByteData":{"NativeTypedData":[],"ByteData":[],"TypedData":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"NativeTypedData":[],"TypedData":[],"JSIndexable":["1"]},"NativeTypedArrayOfDouble":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"TypedData":[],"JSIndexable":["double"],"Iterable":["double"]},"NativeTypedArrayOfInt":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"]},"NativeFloat32List":{"NativeTypedArrayOfDouble":[],"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"TypedData":[],"JSIndexable":["double"],"Iterable":["double"],"ListMixin.E":"double"},"NativeFloat64List":{"NativeTypedArrayOfDouble":[],"ListMixin":["double"],"Float64List":[],"JavaScriptIndexingBehavior":["double"],"List":["double"],"NativeTypedData":[],"EfficientLengthIterable":["double"],"TypedData":[],"JSIndexable":["double"],"Iterable":["double"],"ListMixin.E":"double"},"NativeInt16List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeInt32List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"Int32List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeInt8List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint16List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint8ClampedList":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"ListMixin":["int"],"Uint8List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"EfficientLengthIterable":["int"],"TypedData":[],"JSIndexable":["int"],"Iterable":["int"],"ListMixin.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"Error":[]},"_Future":{"Future":["1"]},"_TimerImpl":{"Timer":[]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_AsyncCompleter":{"_Completer":["1"]},"_AsyncStreamController":{"_StreamController":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"]},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"]},"_BufferingStreamSubscription":{"StreamSubscription":["1"]},"_StreamImpl":{"Stream":["1"]},"_GeneratedStreamImpl":{"_StreamImpl":["1"],"Stream":["1"]},"DoubleLinkedQueueEntry":{"_DoubleLink":["DoubleLinkedQueueEntry<1>"]},"_HashMap":{"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.V":"2","MapMixin.K":"1"},"_IdentityHashMap":{"_HashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"],"MapMixin.V":"2","MapMixin.K":"1"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_LinkedIdentityHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.V":"2","MapMixin.K":"1"},"_HashSet":{"_SetBase":["1"],"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"SetMixin.E":"1"},"_LinkedHashSet":{"_SetBase":["1"],"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"SetMixin.E":"1"},"IterableBase":{"Iterable":["1"]},"LinkedList":{"Iterable":["1"],"Iterable.E":"1"},"ListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"_MapBaseValueIterable":{"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"_DoubleLinkedQueueEntry":{"DoubleLinkedQueueEntry":["1"],"_DoubleLink":["DoubleLinkedQueueEntry<1>"]},"_DoubleLinkedQueueElement":{"_DoubleLinkedQueueEntry":["1"],"DoubleLinkedQueueEntry":["1"],"_DoubleLink":["DoubleLinkedQueueEntry<1>"],"_DoubleLink.0":"DoubleLinkedQueueEntry<1>"},"_DoubleLinkedQueueSentinel":{"_DoubleLinkedQueueEntry":["1"],"DoubleLinkedQueueEntry":["1"],"_DoubleLink":["DoubleLinkedQueueEntry<1>"],"_DoubleLink.0":"DoubleLinkedQueueEntry<1>"},"DoubleLinkedQueue":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"ListQueue":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"_SetBase":{"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_UnmodifiableSet":{"_SetBase":["1"],"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"SetMixin.E":"1"},"_JsonMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.V":"@","MapMixin.K":"String"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"Iterable.E":"String","ListIterable.E":"String"},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"double":{"num":[]},"int":{"num":[]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_StringStackTrace":{"StackTrace":[]},"Runes":{"Iterable":["int"],"Iterable.E":"int"},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"HtmlElement":{"Element0":[],"Node":[]},"CanvasElement":{"HtmlElement":[],"Element0":[],"Node":[]},"Element0":{"Node":[]},"File":{"Blob":[]},"FormElement":{"HtmlElement":[],"Element0":[],"Node":[]},"KeyboardEvent":{"Event":[]},"MetaElement":{"HtmlElement":[],"Element0":[],"Node":[]},"MouseEvent":{"Event":[]},"PointerEvent":{"MouseEvent":[],"Event":[]},"ProgressEvent":{"Event":[]},"TouchEvent":{"Event":[]},"UIEvent":{"Event":[]},"_Html5NodeValidator":{"NodeValidator":[]},"AnchorElement":{"HtmlElement":[],"Element0":[],"Node":[]},"AreaElement":{"HtmlElement":[],"Element0":[],"Node":[]},"BaseElement":{"HtmlElement":[],"Element0":[],"Node":[]},"BodyElement":{"HtmlElement":[],"Element0":[],"Node":[]},"ButtonElement":{"HtmlElement":[],"Element0":[],"Node":[]},"CharacterData":{"Node":[]},"CssKeyframesRule":{"CssRule":[]},"CssStyleSheet":{"StyleSheet":[]},"DivElement":{"HtmlElement":[],"Element0":[],"Node":[]},"Document":{"Node":[]},"DomRectList":{"ListMixin":["Rectangle<num>"],"List":["Rectangle<num>"],"JavaScriptIndexingBehavior":["Rectangle<num>"],"EfficientLengthIterable":["Rectangle<num>"],"Iterable":["Rectangle<num>"],"JSIndexable":["Rectangle<num>"],"ListMixin.E":"Rectangle<num>"},"DomRectReadOnly":{"Rectangle":["num"]},"DomStringList":{"ListMixin":["String"],"List":["String"],"JavaScriptIndexingBehavior":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"JSIndexable":["String"],"ListMixin.E":"String"},"_ChildrenElementList":{"ListMixin":["Element0"],"List":["Element0"],"EfficientLengthIterable":["Element0"],"Iterable":["Element0"],"ListMixin.E":"Element0"},"_FrozenElementList":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1"},"EmbedElement":{"HtmlElement":[],"Element0":[],"Node":[]},"FieldSetElement":{"HtmlElement":[],"Element0":[],"Node":[]},"FileList":{"ListMixin":["File"],"List":["File"],"JavaScriptIndexingBehavior":["File"],"EfficientLengthIterable":["File"],"Iterable":["File"],"JSIndexable":["File"],"ListMixin.E":"File"},"HtmlCollection":{"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ListMixin.E":"Node"},"IFrameElement":{"HtmlElement":[],"Element0":[],"Node":[]},"ImageElement":{"HtmlElement":[],"Element0":[],"Node":[]},"InputElement":{"HtmlElement":[],"Element0":[],"Node":[]},"LabelElement":{"HtmlElement":[],"Element0":[],"Node":[]},"MapElement":{"HtmlElement":[],"Element0":[],"Node":[]},"MediaElement":{"HtmlElement":[],"Element0":[],"Node":[]},"MediaQueryListEvent":{"Event":[]},"MidiInputMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.V":"@","MapMixin.K":"String"},"MidiOutputMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.V":"@","MapMixin.K":"String"},"MimeTypeArray":{"ListMixin":["MimeType"],"List":["MimeType"],"JavaScriptIndexingBehavior":["MimeType"],"EfficientLengthIterable":["MimeType"],"Iterable":["MimeType"],"JSIndexable":["MimeType"],"ListMixin.E":"MimeType"},"_ChildNodeListLazy":{"ListMixin":["Node"],"List":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListMixin.E":"Node"},"NodeList":{"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ListMixin.E":"Node"},"ObjectElement":{"HtmlElement":[],"Element0":[],"Node":[]},"OutputElement":{"HtmlElement":[],"Element0":[],"Node":[]},"ParagraphElement":{"HtmlElement":[],"Element0":[],"Node":[]},"ParamElement":{"HtmlElement":[],"Element0":[],"Node":[]},"PluginArray":{"ListMixin":["Plugin"],"List":["Plugin"],"JavaScriptIndexingBehavior":["Plugin"],"EfficientLengthIterable":["Plugin"],"Iterable":["Plugin"],"JSIndexable":["Plugin"],"ListMixin.E":"Plugin"},"RtcStatsReport":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.V":"@","MapMixin.K":"String"},"ScriptElement":{"HtmlElement":[],"Element0":[],"Node":[]},"SelectElement":{"HtmlElement":[],"Element0":[],"Node":[]},"SharedWorkerGlobalScope":{"WorkerGlobalScope":[]},"SlotElement":{"HtmlElement":[],"Element0":[],"Node":[]},"SourceBufferList":{"ListMixin":["SourceBuffer"],"List":["SourceBuffer"],"JavaScriptIndexingBehavior":["SourceBuffer"],"EfficientLengthIterable":["SourceBuffer"],"Iterable":["SourceBuffer"],"JSIndexable":["SourceBuffer"],"ListMixin.E":"SourceBuffer"},"SpanElement":{"HtmlElement":[],"Element0":[],"Node":[]},"SpeechGrammarList":{"ListMixin":["SpeechGrammar"],"List":["SpeechGrammar"],"JavaScriptIndexingBehavior":["SpeechGrammar"],"EfficientLengthIterable":["SpeechGrammar"],"Iterable":["SpeechGrammar"],"JSIndexable":["SpeechGrammar"],"ListMixin.E":"SpeechGrammar"},"SpeechSynthesisEvent":{"Event":[]},"Storage":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.V":"String","MapMixin.K":"String"},"StyleElement":{"HtmlElement":[],"Element0":[],"Node":[]},"TableElement":{"HtmlElement":[],"Element0":[],"Node":[]},"TableRowElement":{"HtmlElement":[],"Element0":[],"Node":[]},"TableSectionElement":{"HtmlElement":[],"Element0":[],"Node":[]},"TemplateElement":{"HtmlElement":[],"Element0":[],"Node":[]},"TextAreaElement":{"HtmlElement":[],"Element0":[],"Node":[]},"TextTrackCueList":{"ListMixin":["TextTrackCue"],"List":["TextTrackCue"],"JavaScriptIndexingBehavior":["TextTrackCue"],"EfficientLengthIterable":["TextTrackCue"],"Iterable":["TextTrackCue"],"JSIndexable":["TextTrackCue"],"ListMixin.E":"TextTrackCue"},"TextTrackList":{"ListMixin":["TextTrack"],"List":["TextTrack"],"JavaScriptIndexingBehavior":["TextTrack"],"EfficientLengthIterable":["TextTrack"],"Iterable":["TextTrack"],"JSIndexable":["TextTrack"],"ListMixin.E":"TextTrack"},"TouchList":{"ListMixin":["Touch"],"List":["Touch"],"JavaScriptIndexingBehavior":["Touch"],"EfficientLengthIterable":["Touch"],"Iterable":["Touch"],"JSIndexable":["Touch"],"ListMixin.E":"Touch"},"VideoElement":{"HtmlElement":[],"Element0":[],"Node":[]},"VttCue":{"TextTrackCue":[]},"WheelEvent":{"MouseEvent":[],"Event":[]},"_Attr":{"Node":[]},"_CssRuleList":{"ListMixin":["CssRule"],"List":["CssRule"],"JavaScriptIndexingBehavior":["CssRule"],"EfficientLengthIterable":["CssRule"],"Iterable":["CssRule"],"JSIndexable":["CssRule"],"ListMixin.E":"CssRule"},"_DomRect":{"Rectangle":["num"]},"_GamepadList":{"ListMixin":["Gamepad?"],"List":["Gamepad?"],"JavaScriptIndexingBehavior":["Gamepad?"],"EfficientLengthIterable":["Gamepad?"],"Iterable":["Gamepad?"],"JSIndexable":["Gamepad?"],"ListMixin.E":"Gamepad?"},"_NamedNodeMap":{"ListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"JSIndexable":["Node"],"ListMixin.E":"Node"},"_SpeechRecognitionResultList":{"ListMixin":["SpeechRecognitionResult"],"List":["SpeechRecognitionResult"],"JavaScriptIndexingBehavior":["SpeechRecognitionResult"],"EfficientLengthIterable":["SpeechRecognitionResult"],"Iterable":["SpeechRecognitionResult"],"JSIndexable":["SpeechRecognitionResult"],"ListMixin.E":"SpeechRecognitionResult"},"_StyleSheetList":{"ListMixin":["StyleSheet"],"List":["StyleSheet"],"JavaScriptIndexingBehavior":["StyleSheet"],"EfficientLengthIterable":["StyleSheet"],"Iterable":["StyleSheet"],"JSIndexable":["StyleSheet"],"ListMixin.E":"StyleSheet"},"_AttributeMap":{"MapMixin":["String","String"],"Map":["String","String"]},"_ElementAttributeMap":{"MapMixin":["String","String"],"Map":["String","String"],"MapMixin.V":"String","MapMixin.K":"String"},"_EventStream":{"Stream":["1"]},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"]},"_EventStreamSubscription":{"StreamSubscription":["1"]},"NodeValidatorBuilder":{"NodeValidator":[]},"_SimpleNodeValidator":{"NodeValidator":[]},"_TemplatingNodeValidator":{"NodeValidator":[]},"_SvgNodeValidator":{"NodeValidator":[]},"FilteredElementList":{"ListMixin":["Element0"],"List":["Element0"],"EfficientLengthIterable":["Element0"],"Iterable":["Element0"],"ListMixin.E":"Element0"},"VersionChangeEvent":{"Event":[]},"JsArray":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1"},"NullRejectionException":{"Exception":[]},"Rectangle":{"_RectangleBase":["1"]},"LengthList":{"ListMixin":["Length"],"List":["Length"],"EfficientLengthIterable":["Length"],"Iterable":["Length"],"ListMixin.E":"Length"},"NumberList":{"ListMixin":["Number"],"List":["Number"],"EfficientLengthIterable":["Number"],"Iterable":["Number"],"ListMixin.E":"Number"},"ScriptElement0":{"SvgElement":[],"Element0":[],"Node":[]},"StringList":{"ListMixin":["String"],"List":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListMixin.E":"String"},"SvgElement":{"Element0":[],"Node":[]},"TransformList":{"ListMixin":["Transform"],"List":["Transform"],"EfficientLengthIterable":["Transform"],"Iterable":["Transform"],"ListMixin.E":"Transform"},"ByteData":{"TypedData":[]},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint8ClampedList":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Int16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Int32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"TypedData":[]},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"],"TypedData":[]},"Float64List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"],"TypedData":[]},"SingletonFlutterWindow":{"FlutterWindow":[]},"AudioParamMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.V":"@","MapMixin.K":"String"},"SqlResultSetRowList":{"ListMixin":["Map<@,@>"],"List":["Map<@,@>"],"EfficientLengthIterable":["Map<@,@>"],"Iterable":["Map<@,@>"],"ListMixin.E":"Map<@,@>"},"MyApp":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Animation0":{"Listenable":[]},"AnimationController":{"Animation0":["double"],"Listenable":[]},"_AlwaysCompleteAnimation":{"Animation0":["double"],"Listenable":[]},"_AlwaysDismissedAnimation":{"Animation0":["double"],"Listenable":[]},"ProxyAnimation":{"Animation0":["double"],"Listenable":[]},"ReverseAnimation":{"Animation0":["double"],"Listenable":[]},"CurvedAnimation":{"Animation0":["double"],"Listenable":[]},"TrainHoppingAnimation":{"Animation0":["double"],"Listenable":[]},"_Linear":{"Curve":[]},"Interval":{"Curve":[]},"Cubic":{"Curve":[]},"FlippedCurve":{"Curve":[]},"Tween":{"Animatable":["1"],"Animatable.T":"1","Tween.T":"1"},"ColorTween":{"Tween":["Color?"],"Animatable":["Color?"],"Animatable.T":"Color?","Tween.T":"Color?"},"RectTween":{"Tween":["Rect?"],"Animatable":["Rect?"],"Animatable.T":"Rect?","Tween.T":"Rect?"},"_AnimatedEvaluation":{"Animation0":["1"],"Listenable":[]},"_ChainedEvaluation":{"Animatable":["1"],"Animatable.T":"1"},"ReverseTween":{"Tween":["1"],"Animatable":["1"],"Animatable.T":"1","Tween.T":"1"},"IntTween":{"Tween":["int"],"Animatable":["int"],"Animatable.T":"int","Tween.T":"int"},"CurveTween":{"Animatable":["double"],"Animatable.T":"double"},"CupertinoDynamicColor":{"Color":[]},"CupertinoUserInterfaceLevel":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CupertinoLocalizationsDelegate":{"LocalizationsDelegate":["CupertinoLocalizations"],"LocalizationsDelegate.T":"CupertinoLocalizations"},"DefaultCupertinoLocalizations":{"CupertinoLocalizations":[]},"_CupertinoBackGestureDetector":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"CupertinoPageTransition":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CupertinoBackGestureDetectorState":{"State":["_CupertinoBackGestureDetector<1>"]},"_CupertinoEdgeShadowDecoration":{"Decoration":[]},"_InheritedCupertinoTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"CupertinoTheme":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ErrorDiagnostic":{"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorDescription":{"_ErrorDiagnostic":[],"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorSummary":{"_ErrorDiagnostic":[],"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorHint":{"_ErrorDiagnostic":[],"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorSpacer":{"DiagnosticsProperty":["~"],"DiagnosticsNode":[]},"FlutterError":{"DiagnosticableTree":[],"AssertionError":[],"Error":[]},"DiagnosticsStackTrace":{"DiagnosticsNode":[]},"_FlutterErrorDetailsNode":{"DiagnosticsNode":[]},"_ListenerEntry":{"LinkedListEntry":["_ListenerEntry"],"LinkedListEntry.E":"_ListenerEntry"},"ChangeNotifier":{"Listenable":[]},"_MergingListenable":{"Listenable":[]},"ValueNotifier":{"Listenable":[]},"DiagnosticsProperty":{"DiagnosticsNode":[]},"DiagnosticableNode":{"DiagnosticsNode":[]},"DiagnosticableTreeNode":{"DiagnosticsNode":[]},"DiagnosticsBlock":{"DiagnosticsNode":[]},"LocalKey":{"Key":[]},"LicenseEntryWithLineBreaks":{"LicenseEntry":[]},"ObserverList":{"Iterable":["1"],"Iterable.E":"1"},"HashedObserverList":{"Iterable":["1"],"Iterable.E":"1"},"SynchronousFuture":{"Future":["1"]},"FlutterErrorDetailsForPointerEventDispatcher":{"FlutterErrorDetails":[]},"PointerEnterEvent":{"PointerEvent0":[]},"PointerExitEvent":{"PointerEvent0":[]},"PointerDownEvent":{"PointerEvent0":[]},"_AbstractPointerEvent":{"PointerEvent0":[]},"_TransformedPointerEvent":{"PointerEvent0":[]},"PointerAddedEvent":{"PointerEvent0":[]},"_TransformedPointerAddedEvent":{"PointerAddedEvent":[],"PointerEvent0":[]},"PointerRemovedEvent":{"PointerEvent0":[]},"_TransformedPointerRemovedEvent":{"PointerRemovedEvent":[],"PointerEvent0":[]},"PointerHoverEvent":{"PointerEvent0":[]},"_TransformedPointerHoverEvent":{"PointerHoverEvent":[],"PointerEvent0":[]},"_TransformedPointerEnterEvent":{"PointerEnterEvent":[],"PointerEvent0":[]},"_TransformedPointerExitEvent":{"PointerExitEvent":[],"PointerEvent0":[]},"_TransformedPointerDownEvent":{"PointerDownEvent":[],"PointerEvent0":[]},"PointerMoveEvent":{"PointerEvent0":[]},"_TransformedPointerMoveEvent":{"PointerMoveEvent":[],"PointerEvent0":[]},"PointerUpEvent":{"PointerEvent0":[]},"_TransformedPointerUpEvent":{"PointerUpEvent":[],"PointerEvent0":[]},"PointerSignalEvent":{"PointerEvent0":[]},"PointerScrollEvent":{"PointerSignalEvent":[],"PointerEvent0":[]},"_TransformedPointerScrollEvent":{"PointerSignalEvent":[],"PointerEvent0":[]},"PointerCancelEvent":{"PointerEvent0":[]},"_TransformedPointerCancelEvent":{"PointerCancelEvent":[],"PointerEvent0":[]},"_MatrixTransformPart":{"_TransformPart":[]},"_OffsetTransformPart":{"_TransformPart":[]},"LongPressGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"DragGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"VerticalDragGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"HorizontalDragGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"PanGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"DoubleTapGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"GestureRecognizer":{"DiagnosticableTree":[],"GestureArenaMember":[]},"OneSequenceGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"PrimaryPointerGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"BaseTapGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"TapGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"MaterialApp":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MaterialAppState":{"State":["MaterialApp"]},"MaterialRectArcTween":{"Tween":["Rect?"],"Animatable":["Rect?"],"Animatable.T":"Rect?","Tween.T":"Rect?"},"MaterialPointArcTween":{"Tween":["Offset"],"Animatable":["Offset"],"Animatable.T":"Offset","Tween.T":"Offset"},"RawMaterialButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RawMaterialButtonState":{"State":["RawMaterialButton"]},"_InputPadding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderInputPadding":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"_LerpProperties3":{"MaterialStateProperty":["1?"]},"_LerpSides":{"MaterialStateProperty":["BorderSide?"]},"_LerpShapes":{"MaterialStateProperty":["OutlinedBorder?"]},"_LerpProperties1":{"MaterialStateProperty":["1"]},"MaterialColor":{"ColorSwatch":["int"],"Color":[],"ColorSwatch.T":"int"},"_LerpProperties2":{"MaterialStateProperty":["1"]},"FloatingActionButton":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"InkHighlight":{"InteractiveInkFeature":[],"InkFeature":[]},"InkSplash":{"InteractiveInkFeature":[],"InkFeature":[]},"InteractiveInkFeature":{"InkFeature":[]},"_ParentInkResponseProvider":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InkResponseStateWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"InkResponse":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InkResponseState":{"State":["_InkResponseStateWidget"],"_ParentInkResponseState":[]},"InkWell":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Material":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderInkFeatures":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"ShapeBorderTween":{"Tween":["ShapeBorder?"],"Animatable":["ShapeBorder?"],"Animatable.T":"ShapeBorder?","Tween.T":"ShapeBorder?"},"_MaterialInterior":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MaterialState":{"State":["Material"]},"_InkFeatures":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MaterialInteriorState":{"State":["_MaterialInterior"]},"_ShapeBorderPaint":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ShapeBorderPainter":{"Listenable":[]},"_MaterialLocalizationsDelegate":{"LocalizationsDelegate":["MaterialLocalizations"],"LocalizationsDelegate.T":"MaterialLocalizations"},"DefaultMaterialLocalizations":{"MaterialLocalizations":[]},"MaterialStateMouseCursor":{"MouseCursor0":[],"MaterialStateProperty":["MouseCursor0"]},"_EnabledAndDisabledMouseCursor":{"MouseCursor0":[],"MaterialStateProperty":["MouseCursor0"]},"MaterialPageRoute":{"MaterialRouteTransitionMixin":["1"],"ModalRoute":["1"],"TransitionRoute":["1"],"Route":["1"]},"_FadeUpwardsPageTransition":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"FadeUpwardsPageTransitionsBuilder":{"PageTransitionsBuilder":[]},"CupertinoPageTransitionsBuilder":{"PageTransitionsBuilder":[]},"_LerpProperties0":{"MaterialStateProperty":["1"]},"ScaffoldMessenger":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"Scaffold":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScaffoldState":{"State":["Scaffold"]},"ScaffoldMessengerState":{"State":["ScaffoldMessenger"]},"_ScaffoldMessengerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_LerpProperties4":{"MaterialStateProperty":["1"]},"SnackBar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_LerpProperties":{"MaterialStateProperty":["1"]},"_InheritedTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ThemeDataTween":{"Tween":["ThemeData"],"Animatable":["ThemeData"],"Animatable.T":"ThemeData","Tween.T":"ThemeData"},"AnimatedTheme":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"Theme":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnimatedThemeState":{"State":["AnimatedTheme"]},"_SystemFontsNotifier":{"Listenable":[]},"OutlinedBorder":{"ShapeBorder":[]},"_CompoundBorder":{"ShapeBorder":[]},"CircleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"ColorSwatch":{"Color":[]},"EdgeInsets":{"EdgeInsetsGeometry":[]},"EdgeInsetsDirectional":{"EdgeInsetsGeometry":[]},"_MixedEdgeInsets":{"EdgeInsetsGeometry":[]},"InlineSpan":{"DiagnosticableTree":[]},"RoundedRectangleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"_RoundedRectangleToCircleBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"TextSpan":{"InlineSpan":[],"DiagnosticableTree":[],"MouseTrackerAnnotation":[],"HitTestTarget":[]},"BoxHitTestResult":{"HitTestResult":[]},"ContainerBoxParentData":{"BoxParentData":[],"ContainerParentDataMixin":["1"]},"RenderBox":{"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"BoxHitTestEntry":{"HitTestEntry":[]},"CustomPainter":{"Listenable":[]},"RenderCustomPaint":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderErrorBox":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"Layer0":{"DiagnosticableTree":[],"AbstractNode":[]},"PictureLayer":{"DiagnosticableTree":[],"AbstractNode":[]},"PerformanceOverlayLayer":{"DiagnosticableTree":[],"AbstractNode":[]},"ContainerLayer0":{"DiagnosticableTree":[],"AbstractNode":[]},"OffsetLayer":{"ContainerLayer0":[],"DiagnosticableTree":[],"AbstractNode":[]},"ClipRectLayer":{"ContainerLayer0":[],"DiagnosticableTree":[],"AbstractNode":[]},"ClipPathLayer":{"ContainerLayer0":[],"DiagnosticableTree":[],"AbstractNode":[]},"TransformLayer":{"OffsetLayer":[],"ContainerLayer0":[],"DiagnosticableTree":[],"AbstractNode":[]},"OpacityLayer":{"ContainerLayer0":[],"DiagnosticableTree":[],"AbstractNode":[]},"PhysicalModelLayer":{"ContainerLayer0":[],"DiagnosticableTree":[],"AbstractNode":[]},"MouseTracker":{"Listenable":[]},"RenderObject":{"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"_RootSemanticsFragment":{"_InterestingSemanticsFragment":[]},"_SwitchableSemanticsFragment":{"_InterestingSemanticsFragment":[]},"_AbortingSemanticsFragment":{"_InterestingSemanticsFragment":[]},"DiagnosticsDebugCreator":{"DiagnosticsProperty":["Object"],"DiagnosticsNode":[]},"TextParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"]},"RenderParagraph":{"RenderBoxContainerDefaultsMixin":["RenderBox","TextParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","TextParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"TextParentData","RenderBoxContainerDefaultsMixin.1":"TextParentData"},"RenderPerformanceOverlay":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderProxyBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderProxyBoxWithHitTestBehavior":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"CustomClipper":{"Listenable":[]},"ShapeBorderClipper":{"Listenable":[]},"RenderAbsorbPointer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderSemanticsGestureHandler":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderConstrainedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderLimitedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderOpacity":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderAnimatedOpacity":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"_RenderCustomClip":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderClipPath":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"_RenderPhysicalModelBase":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPhysicalModel":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPhysicalShape":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderDecoratedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderFractionalTranslation":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPointerListener":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderMouseRegion":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"MouseTrackerAnnotation":[],"AbstractNode":[],"HitTestTarget":[]},"RenderRepaintBoundary":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderIgnorePointer":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderOffstage":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderSemanticsAnnotations":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderBlockSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderMergeSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderExcludeSemantics":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderShiftedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPadding":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderAligningShiftedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderPositionedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"StackParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"]},"RenderStack":{"RenderBoxContainerDefaultsMixin":["RenderBox","StackParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"StackParentData","RenderBoxContainerDefaultsMixin.1":"StackParentData"},"RenderView":{"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"TickerFuture":{"Future":["~"]},"TickerCanceled":{"Exception":[]},"SemanticsNode":{"DiagnosticableTree":[],"AbstractNode":[]},"_SemanticsDiagnosticableNode":{"DiagnosticsNode":[]},"SemanticsProperties":{"DiagnosticableTree":[]},"SemanticsOwner":{"Listenable":[]},"PlatformException":{"Exception":[]},"MissingPluginException":{"Exception":[]},"_DeferringMouseCursor":{"MouseCursor0":[]},"_SystemMouseCursorSession":{"MouseCursorSession":[]},"SystemMouseCursor":{"MouseCursor0":[]},"RawKeyDownEvent":{"RawKeyEvent":[]},"RawKeyUpEvent":{"RawKeyEvent":[]},"RestorationManager":{"Listenable":[]},"Actions":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ActionsMarker":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"DoNothingIntent":{"Intent":[]},"DoNothingAndStopPropagationIntent":{"Intent":[]},"ActivateIntent":{"Intent":[]},"ButtonActivateIntent":{"Intent":[]},"DismissIntent":{"Intent":[]},"PrioritizedIntents":{"Intent":[]},"ContextAction":{"Action":["1"]},"CallbackAction":{"Action":["1"]},"_ActionsState":{"State":["Actions"]},"DoNothingAction":{"Action":["Intent"]},"DismissAction":{"Action":["DismissIntent"]},"PrioritizedAction":{"Action":["PrioritizedIntents"]},"WidgetsApp":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MediaQueryFromWindow":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_WidgetsAppState":{"State":["WidgetsApp"],"WidgetsBindingObserver":[]},"_MediaQueryFromWindowsState":{"State":["_MediaQueryFromWindow"],"WidgetsBindingObserver":[]},"KeepAliveHandle":{"Listenable":[]},"_NullWidget0":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Directionality":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Positioned":{"ParentDataWidget":["StackParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"StackParentData"},"DefaultAssetBundle":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"MouseRegion":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"IgnorePointer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Opacity":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"CustomPaint":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ClipPath":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"PhysicalModel":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"PhysicalShape":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"FractionalTranslation":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Padding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Align":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Center":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"SizedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ConstrainedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"LimitedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Offstage":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_OffstageElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"Stack":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"PositionedDirectional":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"RichText":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Listener":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MouseRegionState":{"State":["MouseRegion"]},"_RawMouseRegion":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RepaintBoundary":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"AbsorbPointer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Semantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"MergeSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"BlockSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ExcludeSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"KeyedSubtree":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Builder":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ColoredBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderColoredBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[]},"RenderObjectToWidgetAdapter":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderObjectToWidgetElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"WidgetsFlutterBinding":{"SchedulerBinding":[],"HitTestTarget":[]},"DecoratedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Container":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"DefaultTextEditingActions":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_DoNothingAndStopPropagationTextAction":{"ContextAction":["DoNothingAndStopPropagationTextIntent"],"Action":["DoNothingAndStopPropagationTextIntent"]},"_ExpandSelectionLeftByLineTextAction":{"ContextAction":["ExpandSelectionLeftByLineTextIntent"],"Action":["ExpandSelectionLeftByLineTextIntent"]},"_ExpandSelectionRightByLineTextAction":{"ContextAction":["ExpandSelectionRightByLineTextIntent"],"Action":["ExpandSelectionRightByLineTextIntent"]},"_ExpandSelectionToEndTextAction":{"ContextAction":["ExpandSelectionToEndTextIntent"],"Action":["ExpandSelectionToEndTextIntent"]},"_ExpandSelectionToStartTextAction":{"ContextAction":["ExpandSelectionToStartTextIntent"],"Action":["ExpandSelectionToStartTextIntent"]},"_ExtendSelectionDownTextAction":{"ContextAction":["ExtendSelectionDownTextIntent"],"Action":["ExtendSelectionDownTextIntent"]},"_ExtendSelectionLeftByLineTextAction":{"ContextAction":["ExtendSelectionLeftByLineTextIntent"],"Action":["ExtendSelectionLeftByLineTextIntent"]},"_ExtendSelectionLeftByWordAndStopAtReversalTextAction":{"ContextAction":["ExtendSelectionLeftByWordAndStopAtReversalTextIntent"],"Action":["ExtendSelectionLeftByWordAndStopAtReversalTextIntent"]},"_ExtendSelectionLeftByWordTextAction":{"ContextAction":["ExtendSelectionLeftByWordTextIntent"],"Action":["ExtendSelectionLeftByWordTextIntent"]},"_ExtendSelectionLeftTextAction":{"ContextAction":["ExtendSelectionLeftTextIntent"],"Action":["ExtendSelectionLeftTextIntent"]},"_ExtendSelectionRightByLineTextAction":{"ContextAction":["ExtendSelectionRightByLineTextIntent"],"Action":["ExtendSelectionRightByLineTextIntent"]},"_ExtendSelectionRightByWordAndStopAtReversalTextAction":{"ContextAction":["ExtendSelectionRightByWordAndStopAtReversalTextIntent"],"Action":["ExtendSelectionRightByWordAndStopAtReversalTextIntent"]},"_ExtendSelectionRightByWordTextAction":{"ContextAction":["ExtendSelectionRightByWordTextIntent"],"Action":["ExtendSelectionRightByWordTextIntent"]},"_ExtendSelectionRightTextAction":{"ContextAction":["ExtendSelectionRightTextIntent"],"Action":["ExtendSelectionRightTextIntent"]},"_ExtendSelectionUpTextAction":{"ContextAction":["ExtendSelectionUpTextIntent"],"Action":["ExtendSelectionUpTextIntent"]},"_MoveSelectionDownTextAction":{"ContextAction":["MoveSelectionDownTextIntent"],"Action":["MoveSelectionDownTextIntent"]},"_MoveSelectionLeftTextAction":{"ContextAction":["MoveSelectionLeftTextIntent"],"Action":["MoveSelectionLeftTextIntent"]},"_MoveSelectionRightTextAction":{"ContextAction":["MoveSelectionRightTextIntent"],"Action":["MoveSelectionRightTextIntent"]},"_MoveSelectionUpTextAction":{"ContextAction":["MoveSelectionUpTextIntent"],"Action":["MoveSelectionUpTextIntent"]},"_MoveSelectionLeftByLineTextAction":{"ContextAction":["MoveSelectionLeftByLineTextIntent"],"Action":["MoveSelectionLeftByLineTextIntent"]},"_MoveSelectionLeftByWordTextAction":{"ContextAction":["MoveSelectionLeftByWordTextIntent"],"Action":["MoveSelectionLeftByWordTextIntent"]},"_MoveSelectionRightByLineTextAction":{"ContextAction":["MoveSelectionRightByLineTextIntent"],"Action":["MoveSelectionRightByLineTextIntent"]},"_MoveSelectionRightByWordTextAction":{"ContextAction":["MoveSelectionRightByWordTextIntent"],"Action":["MoveSelectionRightByWordTextIntent"]},"_MoveSelectionToEndTextAction":{"ContextAction":["MoveSelectionToEndTextIntent"],"Action":["MoveSelectionToEndTextIntent"]},"_MoveSelectionToStartTextAction":{"ContextAction":["MoveSelectionToStartTextIntent"],"Action":["MoveSelectionToStartTextIntent"]},"DefaultTextEditingShortcuts":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"FocusNode":{"DiagnosticableTree":[],"Listenable":[]},"FocusScopeNode":{"FocusNode":[],"DiagnosticableTree":[],"Listenable":[]},"FocusManager":{"DiagnosticableTree":[],"Listenable":[]},"Focus":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FocusMarker":{"InheritedNotifier":["FocusNode"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"InheritedNotifier.T":"FocusNode"},"_FocusState":{"State":["Focus"]},"FocusScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FocusScopeState":{"State":["Focus"]},"FocusTraversalGroup":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FocusTraversalGroupMarker":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"RequestFocusIntent":{"Intent":[]},"NextFocusIntent":{"Intent":[]},"PreviousFocusIntent":{"Intent":[]},"DirectionalFocusIntent":{"Intent":[]},"_FocusTraversalGroupState":{"State":["FocusTraversalGroup"]},"RequestFocusAction":{"Action":["RequestFocusIntent"]},"NextFocusAction":{"Action":["NextFocusIntent"]},"PreviousFocusAction":{"Action":["PreviousFocusIntent"]},"DirectionalFocusAction":{"Action":["DirectionalFocusIntent"]},"GlobalKey":{"Key":[]},"LabeledGlobalKey":{"GlobalKey":["1"],"Key":[]},"Widget":{"DiagnosticableTree":[]},"StatefulWidget":{"Widget":[],"DiagnosticableTree":[]},"ProxyWidget":{"Widget":[],"DiagnosticableTree":[]},"ParentDataWidget":{"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"InheritedWidget":{"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderObjectWidget":{"Widget":[],"DiagnosticableTree":[]},"SingleChildRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Element":{"DiagnosticableTree":[],"BuildContext":[]},"ComponentElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"StatefulElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"ProxyElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"InheritedElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"UniqueKey":{"Key":[]},"GlobalObjectKey":{"GlobalKey":["1"],"Key":[]},"StatelessWidget":{"Widget":[],"DiagnosticableTree":[]},"LeafRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"MultiChildRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ElementDiagnosticableTreeNode":{"DiagnosticsNode":[]},"ErrorWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"StatelessElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"ParentDataElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"RenderObjectElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"RootRenderObjectElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"LeafRenderObjectElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"SingleChildRenderObjectElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"MultiChildRenderObjectElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"_NullElement":{"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"_NullWidget":{"Widget":[],"DiagnosticableTree":[]},"RawGestureDetector":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"GestureRecognizerFactoryWithHandlers":{"GestureRecognizerFactory":["1"]},"GestureDetector":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"RawGestureDetectorState":{"State":["RawGestureDetector"]},"_GestureSemantics":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Hero":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_HeroState":{"State":["Hero"]},"HeroController":{"NavigatorObserver":[]},"Icon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"IconTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"BorderRadiusTween":{"Tween":["BorderRadius"],"Animatable":["BorderRadius"],"Animatable.T":"BorderRadius","Tween.T":"BorderRadius"},"TextStyleTween":{"Tween":["TextStyle"],"Animatable":["TextStyle"],"Animatable.T":"TextStyle","Tween.T":"TextStyle"},"ImplicitlyAnimatedWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"AnimatedDefaultTextStyle":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"AnimatedPhysicalModel":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"DecorationTween":{"Tween":["Decoration"],"Animatable":["Decoration"],"Animatable.T":"Decoration","Tween.T":"Decoration"},"ImplicitlyAnimatedWidgetState":{"State":["1"]},"AnimatedWidgetBaseState":{"State":["1"]},"_AnimatedDefaultTextStyleState":{"State":["AnimatedDefaultTextStyle"]},"_AnimatedPhysicalModelState":{"State":["AnimatedPhysicalModel"]},"InheritedNotifier":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InheritedNotifierElement":{"InheritedElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"InheritedTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_LocalizationsScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Localizations":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_WidgetsLocalizationsDelegate":{"LocalizationsDelegate":["WidgetsLocalizations"],"LocalizationsDelegate.T":"WidgetsLocalizations"},"DefaultWidgetsLocalizations":{"WidgetsLocalizations":[]},"_LocalizationsState":{"State":["Localizations"]},"MediaQuery":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnyTapGestureRecognizer":{"GestureRecognizer":[],"DiagnosticableTree":[],"GestureArenaMember":[]},"ModalBarrier":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnyTapGestureRecognizerFactory":{"GestureRecognizerFactory":["_AnyTapGestureRecognizer"]},"_ModalBarrierGestureDetector":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Page":{"RouteSettings":[]},"HeroControllerScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"Navigator":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"NavigatorState":{"State":["Navigator"]},"_NotAnnounced":{"Route":["~"]},"_NavigatorPushObservation":{"_NavigatorObservation":[]},"_NavigatorPopObservation":{"_NavigatorObservation":[]},"_NavigatorRemoveObservation":{"_NavigatorObservation":[]},"_NavigatorReplaceObservation":{"_NavigatorObservation":[]},"_HistoryProperty":{"RestorableProperty":["Map<String?,List<Object>>?"],"Listenable":[]},"NotificationListener":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"OverlayEntry":{"Listenable":[]},"_OverlayEntryWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_OverlayEntryWidgetState":{"State":["_OverlayEntryWidget"]},"Overlay":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"OverlayState":{"State":["Overlay"]},"_Theatre":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TheatreElement":{"RenderObjectElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"_RenderTheatre":{"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","StackParentData"],"RenderObject":[],"DiagnosticableTree":[],"AbstractNode":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"StackParentData"},"PageStorage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"PageRoute":{"ModalRoute":["1"],"TransitionRoute":["1"],"Route":["1"]},"PerformanceOverlay":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"PrimaryScrollController":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"RestorationScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"UnmanagedRestorationScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"RootRestorationScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"RestorableProperty":{"Listenable":[]},"_RestorationScopeState":{"State":["RestorationScope"]},"_RootRestorationScopeState":{"State":["RootRestorationScope"]},"RestorableValue":{"RestorableProperty":["1"],"Listenable":[]},"_RestorablePrimitiveValueN":{"RestorableProperty":["1"],"Listenable":[]},"_RestorablePrimitiveValue":{"_RestorablePrimitiveValueN":["1"],"RestorableProperty":["1"],"Listenable":[]},"RestorableNum":{"_RestorablePrimitiveValueN":["1"],"RestorableProperty":["1"],"Listenable":[]},"OverlayRoute":{"Route":["1"]},"TransitionRoute":{"Route":["1"]},"_ModalScopeStatus":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ModalScope":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ModalScopeState":{"State":["_ModalScope<1>"]},"ModalRoute":{"TransitionRoute":["1"],"Route":["1"]},"_DismissModalAction":{"Action":["DismissIntent"]},"ScrollConfiguration":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScrollController":{"Listenable":[]},"ScrollPosition":{"Listenable":[]},"_ScrollableScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ScrollIntent":{"Intent":[]},"ScrollAction":{"Action":["ScrollIntent"]},"LogicalKeySet":{"KeySet":["LogicalKeyboardKey"],"KeySet.T":"LogicalKeyboardKey"},"ShortcutManager":{"Listenable":[]},"Shortcuts":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ShortcutsState":{"State":["Shortcuts"]},"_ShortcutsMarker":{"InheritedNotifier":["ShortcutManager"],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"InheritedNotifier.T":"ShortcutManager"},"DefaultTextStyle":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"TextEditingAction":{"ContextAction":["1"],"Action":["1"]},"DoNothingAndStopPropagationTextIntent":{"Intent":[]},"ExpandSelectionLeftByLineTextIntent":{"Intent":[]},"ExpandSelectionRightByLineTextIntent":{"Intent":[]},"ExpandSelectionToEndTextIntent":{"Intent":[]},"ExpandSelectionToStartTextIntent":{"Intent":[]},"ExtendSelectionDownTextIntent":{"Intent":[]},"ExtendSelectionLeftByLineTextIntent":{"Intent":[]},"ExtendSelectionLeftByWordAndStopAtReversalTextIntent":{"Intent":[]},"ExtendSelectionLeftByWordTextIntent":{"Intent":[]},"ExtendSelectionLeftTextIntent":{"Intent":[]},"ExtendSelectionRightByLineTextIntent":{"Intent":[]},"ExtendSelectionRightByWordAndStopAtReversalTextIntent":{"Intent":[]},"ExtendSelectionRightByWordTextIntent":{"Intent":[]},"ExtendSelectionRightTextIntent":{"Intent":[]},"ExtendSelectionUpTextIntent":{"Intent":[]},"MoveSelectionDownTextIntent":{"Intent":[]},"MoveSelectionLeftByLineTextIntent":{"Intent":[]},"MoveSelectionLeftByWordTextIntent":{"Intent":[]},"MoveSelectionLeftTextIntent":{"Intent":[]},"MoveSelectionToStartTextIntent":{"Intent":[]},"MoveSelectionRightByLineTextIntent":{"Intent":[]},"MoveSelectionRightByWordTextIntent":{"Intent":[]},"MoveSelectionRightTextIntent":{"Intent":[]},"MoveSelectionToEndTextIntent":{"Intent":[]},"MoveSelectionUpTextIntent":{"Intent":[]},"_EffectiveTickerMode":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"TickerMode":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Title":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"AnimatedWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnimatedState":{"State":["AnimatedWidget"]},"SlideTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"FadeTransition":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"DecoratedBoxTransition":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"AnimatedBuilder":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"TypedDataBuffer":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_IntBuffer0":{"TypedDataBuffer":["int"],"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8Buffer":{"TypedDataBuffer":["int"],"ListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int","TypedDataBuffer.E":"int"},"PlaceholderSpan":{"InlineSpan":[],"DiagnosticableTree":[]},"ViewportOffset":{"Listenable":[]}}'));
  H._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"FrameReference":1,"CrossFrameCache":1,"ArrayIterator":1,"ListIterator":1,"MappedIterator":2,"WhereIterator":1,"ExpandIterator":2,"TakeIterator":1,"SkipIterator":1,"SkipWhileIterator":1,"EmptyIterator":1,"FollowedByIterator":1,"FixedLengthListMixin":1,"UnmodifiableListMixin":1,"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"LinkedHashMapKeyIterator":1,"NativeTypedArray":1,"_IterablePendingEvents":1,"_PendingEvents":1,"_SyncStarIterator":1,"StreamTransformerBase":2,"_AsyncStreamControllerDispatch":1,"_AddStreamState":1,"_StreamControllerAddStreamState":1,"_DelayedEvent":1,"_DelayedData":1,"_StreamImplEvents":1,"_StreamIterator":1,"_HashMapKeyIterator":1,"_HashSetIterator":1,"_LinkedHashSetIterator":1,"IterableBase":1,"_LinkedListIterator":1,"ListBase":1,"MapBase":2,"_MapBaseValueIterator":2,"_ListQueueIterator":1,"_UnmodifiableSetMixin":1,"_ListBase_Object_ListMixin":1,"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":2,"__SetBase_Object_SetMixin":1,"__UnmodifiableSet__SetBase__UnmodifiableSetMixin":1,"Codec":2,"Converter":2,"Comparable":1,"Iterator":1,"ImmutableListMixin":1,"FixedSizeListIterator":1,"_JsArray_JsObject_ListMixin":1,"AnimationWithParentMixin":1,"ParametricCurve":1,"__AnimatedEvaluation_Animation_AnimationWithParentMixin":1,"_CupertinoBackGestureController":1,"ValueNotifier":1,"DiagnosticableNode":1,"_MaterialPageRoute_PageRoute_MaterialRouteTransitionMixin":1,"ContainerBoxParentData":1,"_ContainerBoxParentData_BoxParentData_ContainerParentDataMixin":1,"ContainerParentDataMixin":1,"CustomClipper":1,"RenderProxyBoxMixin":1,"RenderAnimatedOpacityMixin":1,"_RenderCustomClip":1,"_RenderPhysicalModelBase":1,"AutomaticKeepAliveClientMixin":1,"ImplicitlyAnimatedWidgetState":1,"AnimatedWidgetBaseState":1,"_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin":1,"Page":1,"TransitionDelegate":1,"DefaultTransitionDelegate":1,"PageRoute":1,"RestorableProperty":1,"RestorationMixin":1,"RestorableValue":1,"_RestorablePrimitiveValue":1,"OverlayRoute":1,"_ModalRoute_TransitionRoute_LocalHistoryRoute":1,"LocalHistoryRoute":1,"TextEditingAction":1,"SingleTickerProviderStateMixin":1,"TickerProviderStateMixin":1}'));
  var string$ = {
    System: "SystemChrome.setApplicationSwitcherDescription",
    The_el: "The element being rebuilt at the time was index ",
    There_: "There was a problem trying to load FontManifest.json"
  };
  var type$ = (function rtii() {
    var findType = H.findType;
    return {
      Action_Intent: findType("Action<Intent>"),
      Animation_Offset: findType("Animation0<Offset>"),
      Animation_double: findType("Animation0<double>"),
      AssertionError: findType("AssertionError"),
      AutofillInfo: findType("AutofillInfo"),
      BaseElement: findType("BaseElement"),
      BasicMessageChannel_dynamic: findType("BasicMessageChannel<@>"),
      Blob: findType("Blob"),
      BodyElement: findType("BodyElement"),
      BorderRadius: findType("BorderRadius"),
      BoxConstraints: findType("BoxConstraints"),
      BoxParentData: findType("BoxParentData"),
      ByteBuffer: findType("ByteBuffer"),
      ByteData: findType("ByteData"),
      CallbackAction_ActivateIntent: findType("CallbackAction<ActivateIntent>"),
      CallbackAction_ButtonActivateIntent: findType("CallbackAction<ButtonActivateIntent>"),
      CanvasElement: findType("CanvasElement"),
      CastList_of_DiagnosticsNode_and_nullable_DiagnosticsNode: findType("CastList<DiagnosticsNode,DiagnosticsNode?>"),
      CastList_of_nullable_Route_dynamic_and_Route_dynamic: findType("CastList<Route<@>?,Route<@>>"),
      ChangeNotifier: findType("ChangeNotifier"),
      CkPaint: findType("CkPaint"),
      CkParagraph: findType("CkParagraph"),
      CkParagraphStyle: findType("CkParagraphStyle"),
      CkPath: findType("CkPath"),
      CkPicture: findType("CkPicture"),
      CkPictureRecorder: findType("CkPictureRecorder"),
      CkTextStyle: findType("CkTextStyle"),
      Color: findType("Color"),
      ConstantMapView_Symbol_dynamic: findType("ConstantMapView<Symbol0,@>"),
      ConstantStringMap_String_LogicalKeyboardKey: findType("ConstantStringMap<String,LogicalKeyboardKey>"),
      ConstantStringMap_String_Null: findType("ConstantStringMap<String,Null>"),
      ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
      ConstantStringMap_String_int: findType("ConstantStringMap<String,int>"),
      ContainerLayer: findType("ContainerLayer"),
      ContainerRenderObjectMixin_of_RenderObject_and_ContainerParentDataMixin_RenderObject: findType("ContainerRenderObjectMixin<RenderObject,ContainerParentDataMixin<RenderObject>>"),
      CssStyleSheet: findType("CssStyleSheet"),
      CupertinoUserInterfaceLevel: findType("CupertinoUserInterfaceLevel"),
      CustomSemanticsAction: findType("CustomSemanticsAction"),
      DebugCreator: findType("DebugCreator"),
      DefaultAssetBundle: findType("DefaultAssetBundle"),
      DiagnosticableTree: findType("DiagnosticableTree"),
      DiagnosticsNode: findType("DiagnosticsNode"),
      Directionality: findType("Directionality"),
      Document: findType("Document"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element0"),
      Element_2: findType("Element"),
      EmbeddedViewParams: findType("EmbeddedViewParams"),
      EngineFlutterWindow: findType("EngineFlutterWindow"),
      EngineGradient: findType("EngineGradient"),
      EngineParagraph: findType("EngineParagraph"),
      EngineParagraphStyle: findType("EngineParagraphStyle"),
      EnginePicture: findType("EnginePicture"),
      EnginePictureRecorder: findType("EnginePictureRecorder"),
      EngineTextStyle: findType("EngineTextStyle"),
      Error: findType("Error"),
      Event: findType("Event"),
      Exception: findType("Exception"),
      ExpandIterable__SemanticsSortGroup_SemanticsNode: findType("ExpandIterable<_SemanticsSortGroup,SemanticsNode>"),
      File: findType("File"),
      FileList: findType("FileList"),
      Float64List: findType("Float64List"),
      FlutterError: findType("FlutterError"),
      FocusNode: findType("FocusNode"),
      FocusScopeNode: findType("FocusScopeNode"),
      FontFace: findType("FontFace"),
      Function: findType("Function"),
      Future_Null: findType("Future<Null>"),
      Future_bool_Function: findType("Future<bool>()"),
      Future_dynamic: findType("Future<@>"),
      Future_void: findType("Future<~>"),
      GeneralConstantMap_int_Color: findType("GeneralConstantMap<int,Color>"),
      GestureArenaEntry: findType("GestureArenaEntry"),
      GestureRecognizer: findType("GestureRecognizer"),
      GestureRecognizerFactoryWithHandlers_DoubleTapGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<DoubleTapGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_LongPressGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<LongPressGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_PanGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<PanGestureRecognizer>"),
      GestureRecognizerFactoryWithHandlers_TapGestureRecognizer: findType("GestureRecognizerFactoryWithHandlers<TapGestureRecognizer>"),
      GestureRecognizerFactory_GestureRecognizer: findType("GestureRecognizerFactory<GestureRecognizer>"),
      GlobalKey_State_StatefulWidget: findType("GlobalKey<State<StatefulWidget>>"),
      GlobalObjectKey_NavigatorState: findType("GlobalObjectKey<NavigatorState>"),
      GlobalObjectKey_State_StatefulWidget: findType("GlobalObjectKey<State<StatefulWidget>>"),
      HashedObserverList_of_void_Function_FocusHighlightMode: findType("HashedObserverList<~(FocusHighlightMode)>"),
      HeapPriorityQueue__TaskEntry_dynamic: findType("HeapPriorityQueue<_TaskEntry<@>>"),
      Hero: findType("Hero"),
      HeroControllerScope: findType("HeroControllerScope"),
      HitTestResult: findType("HitTestResult"),
      HitTestTarget: findType("HitTestTarget"),
      HtmlElement: findType("HtmlElement"),
      HttpRequest: findType("HttpRequest"),
      IconTheme: findType("IconTheme"),
      ImageData: findType("ImageData"),
      IndexedSlot_nullable_Element: findType("IndexedSlot<Element?>"),
      InheritedElement: findType("InheritedElement"),
      InheritedWidget: findType("InheritedWidget"),
      InputElement: findType("InputElement"),
      Int32List: findType("Int32List"),
      IntTween: findType("IntTween"),
      Intent: findType("Intent"),
      InteractiveInkFeature: findType("InteractiveInkFeature"),
      Iterable_dynamic: findType("Iterable<@>"),
      JSArray_CanvasElement: findType("JSArray<CanvasElement>"),
      JSArray_CkPaintCommand: findType("JSArray<CkPaintCommand>"),
      JSArray_CkTextStyle: findType("JSArray<CkTextStyle>"),
      JSArray_CodeunitRange: findType("JSArray<CodeunitRange>"),
      JSArray_Color: findType("JSArray<Color>"),
      JSArray_Conic: findType("JSArray<Conic>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_Directionality: findType("JSArray<Directionality>"),
      JSArray_Element: findType("JSArray<Element0>"),
      JSArray_Element_2: findType("JSArray<Element>"),
      JSArray_EngineLineMetrics: findType("JSArray<EngineLineMetrics>"),
      JSArray_FocusNode: findType("JSArray<FocusNode>"),
      JSArray_FrameReference_dynamic: findType("JSArray<FrameReference<@>>"),
      JSArray_FrameTiming: findType("JSArray<FrameTiming>"),
      JSArray_Future_nullable__RegisteredFont: findType("JSArray<Future<_RegisteredFont?>>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_GestureArenaMember: findType("JSArray<GestureArenaMember>"),
      JSArray_HitTestEntry: findType("JSArray<HitTestEntry>"),
      JSArray_InkFeature: findType("JSArray<InkFeature>"),
      JSArray_InlineSpanSemanticsInformation: findType("JSArray<InlineSpanSemanticsInformation>"),
      JSArray_Layer: findType("JSArray<Layer>"),
      JSArray_LicenseEntry: findType("JSArray<LicenseEntry>"),
      JSArray_LineSegment: findType("JSArray<LineSegment>"),
      JSArray_Listenable: findType("JSArray<Listenable>"),
      JSArray_Locale: findType("JSArray<Locale>"),
      JSArray_LocalizationsDelegate_dynamic: findType("JSArray<LocalizationsDelegate<@>>"),
      JSArray_Map_dynamic_dynamic: findType("JSArray<Map<@,@>>"),
      JSArray_Matrix4: findType("JSArray<Matrix4>"),
      JSArray_Matrix4_2: findType("JSArray<Matrix40>"),
      JSArray_Mutator: findType("JSArray<Mutator>"),
      JSArray_NavigatorObserver: findType("JSArray<NavigatorObserver>"),
      JSArray_Node: findType("JSArray<Node>"),
      JSArray_NodeValidator: findType("JSArray<NodeValidator>"),
      JSArray_NotoFont: findType("JSArray<NotoFont>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_Offset: findType("JSArray<Offset>"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_PaintCommand: findType("JSArray<PaintCommand>"),
      JSArray_ParagraphSpan: findType("JSArray<ParagraphSpan>"),
      JSArray_PersistedContainerSurface: findType("JSArray<PersistedContainerSurface>"),
      JSArray_PersistedSurface: findType("JSArray<PersistedSurface>"),
      JSArray_PlaceholderDimensions: findType("JSArray<PlaceholderDimensions>"),
      JSArray_PlaceholderSpan: findType("JSArray<PlaceholderSpan>"),
      JSArray_PointerData: findType("JSArray<PointerData>"),
      JSArray_PointerEvent: findType("JSArray<PointerEvent>"),
      JSArray_Radius: findType("JSArray<Radius>"),
      JSArray_RangeBox: findType("JSArray<RangeBox>"),
      JSArray_RenderObject: findType("JSArray<RenderObject>"),
      JSArray_RestorationBucket: findType("JSArray<RestorationBucket>"),
      JSArray_ScrollPosition: findType("JSArray<ScrollPosition>"),
      JSArray_SemanticsNode: findType("JSArray<SemanticsNode>"),
      JSArray_SemanticsNodeUpdate: findType("JSArray<SemanticsNodeUpdate>"),
      JSArray_ShaderDeclaration: findType("JSArray<ShaderDeclaration>"),
      JSArray_ShaderMethod: findType("JSArray<ShaderMethod>"),
      JSArray_ShapeBorder: findType("JSArray<ShapeBorder>"),
      JSArray_SkDeletable: findType("JSArray<SkDeletable>"),
      JSArray_SkTypeface: findType("JSArray<SkTypeface>"),
      JSArray_StreamSubscription_Event: findType("JSArray<StreamSubscription<Event>>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_StyleNode: findType("JSArray<StyleNode>"),
      JSArray_TextBox: findType("JSArray<TextBox>"),
      JSArray_Uint8List: findType("JSArray<Uint8List>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray_WidgetsBindingObserver: findType("JSArray<WidgetsBindingObserver>"),
      JSArray__BoxEdge: findType("JSArray<_BoxEdge>"),
      JSArray__DirectionalPolicyDataEntry: findType("JSArray<_DirectionalPolicyDataEntry>"),
      JSArray__InterestingSemanticsFragment: findType("JSArray<_InterestingSemanticsFragment>"),
      JSArray__LocationCount: findType("JSArray<_LocationCount>"),
      JSArray__PaintRequest: findType("JSArray<_PaintRequest>"),
      JSArray__ParagraphCommand: findType("JSArray<_ParagraphCommand>"),
      JSArray__ParentInkResponseState: findType("JSArray<_ParentInkResponseState>"),
      JSArray__Pending: findType("JSArray<_Pending>"),
      JSArray__PersistedSurfaceMatch: findType("JSArray<_PersistedSurfaceMatch>"),
      JSArray__ReadingOrderDirectionalGroupData: findType("JSArray<_ReadingOrderDirectionalGroupData>"),
      JSArray__ReadingOrderSortData: findType("JSArray<_ReadingOrderSortData>"),
      JSArray__RegisteredFont: findType("JSArray<_RegisteredFont>"),
      JSArray__ResolvedNotoSubset: findType("JSArray<_ResolvedNotoSubset>"),
      JSArray__RouteEntry: findType("JSArray<_RouteEntry>"),
      JSArray__SaveClipEntry: findType("JSArray<_SaveClipEntry>"),
      JSArray__SaveElementStackEntry: findType("JSArray<_SaveElementStackEntry>"),
      JSArray__SaveStackEntry: findType("JSArray<_SaveStackEntry>"),
      JSArray__SemanticsSortGroup: findType("JSArray<_SemanticsSortGroup>"),
      JSArray__TransformPart: findType("JSArray<_TransformPart>"),
      JSArray__TraversalSortNode: findType("JSArray<_TraversalSortNode>"),
      JSArray_bool: findType("JSArray<bool>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_CkCanvas: findType("JSArray<CkCanvas?>"),
      JSArray_nullable_MeasurementResult: findType("JSArray<MeasurementResult?>"),
      JSArray_nullable_PersistedSurface: findType("JSArray<PersistedSurface?>"),
      JSArray_nullable_Rect: findType("JSArray<Rect?>"),
      JSArray_nullable_Route_dynamic: findType("JSArray<Route<@>?>"),
      JSArray_nullable_SemanticsObject: findType("JSArray<SemanticsObject?>"),
      JSArray_nullable_ShapeBorder: findType("JSArray<ShapeBorder?>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_nullable__LocationCount: findType("JSArray<_LocationCount?>"),
      JSArray_nullable_int: findType("JSArray<int?>"),
      JSArray_num: findType("JSArray<num>"),
      JSArray_of_Future_bool_Function: findType("JSArray<Future<bool>()>"),
      JSArray_of_Stream_LicenseEntry_Function: findType("JSArray<Stream<LicenseEntry>()>"),
      JSArray_of_nullable_void_Function_GestureMode: findType("JSArray<~(GestureMode)?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_Action_Intent: findType("JSArray<~(Action<Intent>)>"),
      JSArray_of_void_Function_AnimationStatus: findType("JSArray<~(AnimationStatus)>"),
      JSArray_of_void_Function_Duration: findType("JSArray<~(Duration)>"),
      JSArray_of_void_Function_List_FrameTiming: findType("JSArray<~(List<FrameTiming>)>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSNull: findType("JSNull"),
      JSObject: findType("JSObject"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JsArray_dynamic: findType("JsArray<@>"),
      JsLinkedHashMap_Symbol_dynamic: findType("JsLinkedHashMap<Symbol0,@>"),
      Key: findType("Key"),
      KeyRange: findType("KeyRange"),
      KeyboardEvent: findType("KeyboardEvent"),
      KeyboardSide: findType("KeyboardSide"),
      LabeledGlobalKey_OverlayState: findType("LabeledGlobalKey<OverlayState>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      LabeledGlobalKey__OverlayEntryWidgetState: findType("LabeledGlobalKey<_OverlayEntryWidgetState>"),
      Layer: findType("Layer"),
      LayerScene: findType("LayerScene"),
      LicenseEntry: findType("LicenseEntry"),
      LinkedHashMap_MouseTrackerAnnotation_Matrix4: findType("LinkedHashMap<MouseTrackerAnnotation,Matrix4>"),
      LinkedList__ListenerEntry: findType("LinkedList<_ListenerEntry>"),
      List_CodeunitRange: findType("List<CodeunitRange>"),
      List_LicenseEntry: findType("List<LicenseEntry>"),
      List_Object: findType("List<Object>"),
      List_RestorationBucket: findType("List<RestorationBucket>"),
      List_SemanticsNode: findType("List<SemanticsNode>"),
      List_SkTypeface: findType("List<SkTypeface>"),
      List_dynamic: findType("List<@>"),
      List_nullable_MeasurementResult: findType("List<MeasurementResult?>"),
      List_nullable_Object: findType("List<Object?>"),
      Locale: findType("Locale"),
      LocalizationsDelegate_dynamic: findType("LocalizationsDelegate<@>"),
      LogicalKeyboardKey: findType("LogicalKeyboardKey"),
      MapEntry_of_nullable_String_and_List_Object: findType("MapEntry<String?,List<Object>>"),
      Map_String_Object: findType("Map<String,Object>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_Type_dynamic: findType("Map<Type,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_Element_and_GlobalKey_State_StatefulWidget: findType("Map<Element,GlobalKey<State<StatefulWidget>>>"),
      Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>"),
      Map_of_void_Function_PointerEvent_and_nullable_Matrix4: findType("Map<~(PointerEvent0),Matrix4?>"),
      MappedIterable_of_String_and_nullable_StackFrame: findType("MappedIterable<String,StackFrame?>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      MappedListIterable__TraversalSortNode_SemanticsNode: findType("MappedListIterable<_TraversalSortNode,SemanticsNode>"),
      MappedListIterable_int_SemanticsNode: findType("MappedListIterable<int,SemanticsNode>"),
      MappedListIterable_of_TargetPlatform_and_nullable_PageTransitionsBuilder: findType("MappedListIterable<TargetPlatform,PageTransitionsBuilder?>"),
      MaterialState: findType("MaterialState"),
      Matrix4: findType("Matrix4"),
      MediaQuery: findType("MediaQuery"),
      MediaQueryListEvent: findType("MediaQueryListEvent"),
      MessagePort: findType("MessagePort"),
      ModifierKey: findType("ModifierKey"),
      MouseCursor: findType("MouseCursor0"),
      MouseCursorSession: findType("MouseCursorSession"),
      MouseEvent: findType("MouseEvent"),
      MouseTrackerAnnotation: findType("MouseTrackerAnnotation"),
      MultiChildRenderObjectWidget: findType("MultiChildRenderObjectWidget"),
      NativeByteBuffer: findType("NativeByteBuffer"),
      NativeTypedArrayOfDouble: findType("NativeTypedArrayOfDouble"),
      NativeTypedArrayOfInt: findType("NativeTypedArrayOfInt"),
      NativeTypedData: findType("NativeTypedData"),
      NativeUint8List: findType("NativeUint8List"),
      NavigatorState: findType("NavigatorState"),
      Node: findType("Node"),
      NotificationListener_LayoutChangedNotification: findType("NotificationListener<LayoutChangedNotification>"),
      NotoFont: findType("NotoFont"),
      Null: findType("Null"),
      Object: findType("Object"),
      ObserverList__ParentInkResponseState: findType("ObserverList<_ParentInkResponseState>"),
      ObserverList_of_void_Function: findType("ObserverList<~()>"),
      ObserverList_of_void_Function_Action_Intent: findType("ObserverList<~(Action<Intent>)>"),
      ObserverList_of_void_Function_AnimationStatus: findType("ObserverList<~(AnimationStatus)>"),
      Offset: findType("Offset"),
      OffsetLayer: findType("OffsetLayer"),
      Offstage: findType("Offstage"),
      OverlayEntry: findType("OverlayEntry"),
      ParagraphGeometricStyle: findType("ParagraphGeometricStyle"),
      ParagraphRuler: findType("ParagraphRuler"),
      PathRef: findType("PathRef"),
      PersistedContainerSurface: findType("PersistedContainerSurface"),
      PersistedScene: findType("PersistedScene"),
      PersistedSurface: findType("PersistedSurface"),
      PhysicalKeyboardKey: findType("PhysicalKeyboardKey"),
      PlaceholderDimensions: findType("PlaceholderDimensions"),
      Point_num: findType("Point<num>"),
      PointerAddedEvent: findType("PointerAddedEvent"),
      PointerCancelEvent: findType("PointerCancelEvent"),
      PointerDeviceKind: findType("PointerDeviceKind"),
      PointerDownEvent: findType("PointerDownEvent"),
      PointerEvent: findType("PointerEvent0"),
      PointerEventResampler: findType("PointerEventResampler"),
      PointerEvent_2: findType("PointerEvent"),
      PointerHoverEvent: findType("PointerHoverEvent"),
      PointerMoveEvent: findType("PointerMoveEvent"),
      PointerRemovedEvent: findType("PointerRemovedEvent"),
      PointerSignalEvent: findType("PointerSignalEvent"),
      PointerUpEvent: findType("PointerUpEvent"),
      PrimaryScrollController: findType("PrimaryScrollController"),
      ProgressEvent: findType("ProgressEvent"),
      ProxyWidget: findType("ProxyWidget"),
      Rectangle_num: findType("Rectangle<num>"),
      RegExp: findType("RegExp"),
      RenderAbsorbPointer: findType("RenderAbsorbPointer"),
      RenderBox: findType("RenderBox"),
      RenderObject: findType("RenderObject"),
      RenderObjectToWidgetAdapter_RenderBox: findType("RenderObjectToWidgetAdapter<RenderBox>"),
      RenderObjectWidget: findType("RenderObjectWidget"),
      RenderObjectWithChildMixin_RenderObject: findType("RenderObjectWithChildMixin<RenderObject>"),
      RestorableNum_int: findType("RestorableNum<int>"),
      RestorableProperty_nullable_Object: findType("RestorableProperty<Object?>"),
      RestorationBucket: findType("RestorationBucket"),
      ReverseTween_nullable_Rect: findType("ReverseTween<Rect?>"),
      ReversedListIterable_Widget: findType("ReversedListIterable<Widget>"),
      ReversedListIterable__SemanticsSortGroup: findType("ReversedListIterable<_SemanticsSortGroup>"),
      Role: findType("Role"),
      RoutePopDisposition: findType("RoutePopDisposition"),
      Route_dynamic_Function_2_BuildContext_and_nullable_Object: findType("Route<@>(BuildContext,Object?)"),
      Runes: findType("Runes"),
      ScaffoldFeatureController_SnackBar_SnackBarClosedReason: findType("ScaffoldFeatureController<SnackBar,SnackBarClosedReason>"),
      ScaffoldState: findType("ScaffoldState"),
      ScriptElement: findType("ScriptElement0"),
      SemanticsAction: findType("SemanticsAction"),
      SemanticsNode: findType("SemanticsNode"),
      SemanticsObject: findType("SemanticsObject"),
      SemanticsTag: findType("SemanticsTag"),
      ServiceExtensionResponse: findType("ServiceExtensionResponse"),
      Set_String: findType("Set<String>"),
      ShapeBorder: findType("ShapeBorder"),
      ShapeBorderClipper: findType("ShapeBorderClipper"),
      SingleChildRenderObjectWidget: findType("SingleChildRenderObjectWidget"),
      Size: findType("Size"),
      SkDeletable: findType("SkDeletable"),
      SkPaint: findType("SkPaint"),
      SkParagraph: findType("SkParagraph"),
      SkPath: findType("SkPath"),
      SkPicture: findType("SkPicture"),
      SkShader: findType("SkShader"),
      SkipWhileIterable_String: findType("SkipWhileIterable<String>"),
      SpanElement: findType("SpanElement"),
      StackParentData: findType("StackParentData"),
      StatefulElement: findType("StatefulElement"),
      StatefulWidget: findType("StatefulWidget"),
      StatelessWidget: findType("StatelessWidget"),
      String: findType("String"),
      Surface: findType("Surface"),
      SurfacePaint: findType("SurfacePaint"),
      SurfacePath: findType("SurfacePath"),
      SurfaceScene: findType("SurfaceScene"),
      SvgElement: findType("SvgElement"),
      SynchronousFuture_CupertinoLocalizations: findType("SynchronousFuture<CupertinoLocalizations>"),
      SynchronousFuture_Map_Type_dynamic: findType("SynchronousFuture<Map<Type,@>>"),
      SynchronousFuture_MaterialLocalizations: findType("SynchronousFuture<MaterialLocalizations>"),
      SynchronousFuture_WidgetsLocalizations: findType("SynchronousFuture<WidgetsLocalizations>"),
      SynchronousFuture_nullable_RestorationBucket: findType("SynchronousFuture<RestorationBucket?>"),
      SystemMouseCursor: findType("SystemMouseCursor"),
      SystemUiOverlayStyle: findType("SystemUiOverlayStyle"),
      TemplateElement: findType("TemplateElement"),
      TextAreaElement: findType("TextAreaElement"),
      TextBaseline: findType("TextBaseline"),
      TextParentData: findType("TextParentData"),
      TextStyle: findType("TextStyle"),
      ThemeData: findType("ThemeData"),
      ThemeDataTween: findType("ThemeDataTween"),
      Timer: findType("Timer"),
      TouchEvent: findType("TouchEvent"),
      Tween_double: findType("Tween<double>"),
      Type: findType("Type"),
      TypedData: findType("TypedData"),
      Uint8List: findType("Uint8List"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      UnmanagedRestorationScope: findType("UnmanagedRestorationScope"),
      Uri: findType("Uri"),
      VelocityTracker: findType("VelocityTracker"),
      WheelEvent: findType("WheelEvent"),
      WhereIterable_String: findType("WhereIterable<String>"),
      WhereTypeIterable_StackFrame: findType("WhereTypeIterable<StackFrame>"),
      WhereTypeIterable_nullable_MetaElement: findType("WhereTypeIterable<MetaElement?>"),
      WhereTypeIterator_FocusScopeNode: findType("WhereTypeIterator<FocusScopeNode>"),
      WidgetsBindingObserver: findType("WidgetsBindingObserver"),
      WidgetsLocalizations: findType("WidgetsLocalizations"),
      Window: findType("Window"),
      WorkerGlobalScope: findType("WorkerGlobalScope"),
      _ActionsMarker: findType("_ActionsMarker"),
      _AsyncCompleter_HttpRequest: findType("_AsyncCompleter<HttpRequest>"),
      _AsyncCompleter_List_LicenseEntry: findType("_AsyncCompleter<List<LicenseEntry>>"),
      _AsyncCompleter_String: findType("_AsyncCompleter<String>"),
      _AsyncCompleter_bool: findType("_AsyncCompleter<bool>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _AsyncCompleter_nullable_ByteData: findType("_AsyncCompleter<ByteData?>"),
      _AsyncCompleter_nullable_RestorationBucket: findType("_AsyncCompleter<RestorationBucket?>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _Attr: findType("_Attr"),
      _ButtonSanitizer: findType("_ButtonSanitizer"),
      _CachedImage: findType("_CachedImage"),
      _ChildNodeListLazy: findType("_ChildNodeListLazy"),
      _Diagonal: findType("_Diagonal"),
      _DirectionalPolicyData: findType("_DirectionalPolicyData"),
      _EffectiveTickerMode: findType("_EffectiveTickerMode"),
      _ElementEventStreamImpl_Event: findType("_ElementEventStreamImpl<Event>"),
      _ElementEventStreamImpl_KeyboardEvent: findType("_ElementEventStreamImpl<KeyboardEvent>"),
      _ElementEventStreamImpl_MouseEvent: findType("_ElementEventStreamImpl<MouseEvent>"),
      _FocusMarker: findType("_FocusMarker"),
      _FocusTraversalGroupInfo: findType("_FocusTraversalGroupInfo"),
      _FocusTraversalGroupMarker: findType("_FocusTraversalGroupMarker"),
      _FrameCallbackEntry: findType("_FrameCallbackEntry"),
      _FrozenElementList_Element: findType("_FrozenElementList<Element0>"),
      _Future_HttpRequest: findType("_Future<HttpRequest>"),
      _Future_List_LicenseEntry: findType("_Future<List<LicenseEntry>>"),
      _Future_String: findType("_Future<String>"),
      _Future_bool: findType("_Future<bool>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_nullable_ByteData: findType("_Future<ByteData?>"),
      _Future_nullable_RestorationBucket: findType("_Future<RestorationBucket?>"),
      _Future_void: findType("_Future<~>"),
      _GestureArena: findType("_GestureArena"),
      _HeroFlight: findType("_HeroFlight"),
      _HeroState: findType("_HeroState"),
      _HighlightType: findType("_HighlightType"),
      _IdentityHashMap_dynamic_dynamic: findType("_IdentityHashMap<@,@>"),
      _InheritedCupertinoTheme: findType("_InheritedCupertinoTheme"),
      _InheritedTheme: findType("_InheritedTheme"),
      _InterestingSemanticsFragment: findType("_InterestingSemanticsFragment"),
      _ListenerEntry: findType("_ListenerEntry"),
      _LiveImage: findType("_LiveImage"),
      _LocalizationsScope: findType("_LocalizationsScope"),
      _ModalScopeStatus: findType("_ModalScopeStatus"),
      _MouseState: findType("_MouseState"),
      _NavigatorObservation: findType("_NavigatorObservation"),
      _ParentInkResponseProvider: findType("_ParentInkResponseProvider"),
      _PendingImage: findType("_PendingImage"),
      _PointerState: findType("_PointerState"),
      _ReadingOrderDirectionalGroupData: findType("_ReadingOrderDirectionalGroupData"),
      _ReadingOrderSortData: findType("_ReadingOrderSortData"),
      _RenderInkFeatures: findType("_RenderInkFeatures"),
      _RenderTheatre: findType("_RenderTheatre"),
      _ResolvedNotoSubset: findType("_ResolvedNotoSubset"),
      _RouteEntry: findType("_RouteEntry"),
      _SaveClipEntry: findType("_SaveClipEntry"),
      _ScrollableScope: findType("_ScrollableScope"),
      _StoredMessage: findType("_StoredMessage"),
      _TapTracker: findType("_TapTracker"),
      _Theatre: findType("_Theatre"),
      _UnmodifiableSet_String: findType("_UnmodifiableSet<String>"),
      _WidgetTicker: findType("_WidgetTicker"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function_Event: findType("@(Event)"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_BitmapCanvas: findType("BitmapCanvas?"),
      nullable_BorderRadiusTween: findType("BorderRadiusTween?"),
      nullable_ByteData: findType("ByteData?"),
      nullable_CkPaint: findType("CkPaint?"),
      nullable_CkShader: findType("CkShader?"),
      nullable_ClipPathEngineLayer: findType("ClipPathEngineLayer0?"),
      nullable_ClipPathLayer: findType("ClipPathLayer?"),
      nullable_ClipRectEngineLayer: findType("ClipRectEngineLayer0?"),
      nullable_Color: findType("Color?"),
      nullable_ColorTween: findType("ColorTween?"),
      nullable_ContainerLayer: findType("ContainerLayer0?"),
      nullable_Directionality: findType("Directionality?"),
      nullable_EdgeInsetsGeometry: findType("EdgeInsetsGeometry?"),
      nullable_Element: findType("Element0?"),
      nullable_FocusNode: findType("FocusNode?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_HeroControllerScope: findType("HeroControllerScope?"),
      nullable_HorizontalDragGestureRecognizer: findType("HorizontalDragGestureRecognizer?"),
      nullable_InkHighlight: findType("InkHighlight?"),
      nullable_LongPressGestureRecognizer: findType("LongPressGestureRecognizer?"),
      nullable_Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>?"),
      nullable_MaterialLocalizations: findType("MaterialLocalizations?"),
      nullable_Matrix4: findType("Matrix4?"),
      nullable_MetaElement: findType("MetaElement?"),
      nullable_MouseCursor: findType("MouseCursor0?"),
      nullable_Node: findType("Node?"),
      nullable_Object: findType("Object?"),
      nullable_OffsetEngineLayer: findType("OffsetEngineLayer0?"),
      nullable_OffsetLayer: findType("OffsetLayer?"),
      nullable_OpacityEngineLayer: findType("OpacityEngineLayer0?"),
      nullable_OpacityLayer: findType("OpacityLayer?"),
      nullable_OutlinedBorder: findType("OutlinedBorder?"),
      nullable_PanGestureRecognizer: findType("PanGestureRecognizer?"),
      nullable_PersistedClipPath: findType("PersistedClipPath?"),
      nullable_PersistedClipRect: findType("PersistedClipRect?"),
      nullable_PersistedOffset: findType("PersistedOffset?"),
      nullable_PersistedOpacity: findType("PersistedOpacity?"),
      nullable_PersistedPhysicalShape: findType("PersistedPhysicalShape?"),
      nullable_PersistedSurface: findType("PersistedSurface?"),
      nullable_PersistedTransform: findType("PersistedTransform?"),
      nullable_PhysicalModelLayer: findType("PhysicalModelLayer?"),
      nullable_PhysicalShapeEngineLayer: findType("PhysicalShapeEngineLayer0?"),
      nullable_PipelineOwner: findType("PipelineOwner?"),
      nullable_RenderBox: findType("RenderBox?"),
      nullable_RenderObject: findType("RenderObject?"),
      nullable_RenderObjectElement: findType("RenderObjectElement?"),
      nullable_RenderObjectToWidgetElement_RenderBox: findType("RenderObjectToWidgetElement<RenderBox>?"),
      nullable_RoleManager: findType("RoleManager?"),
      nullable_SemanticsNode: findType("SemanticsNode?"),
      nullable_SemanticsOwner: findType("SemanticsOwner?"),
      nullable_ShapeBorder: findType("ShapeBorder?"),
      nullable_ShapeBorderTween: findType("ShapeBorderTween?"),
      nullable_Size: findType("Size?"),
      nullable_StatefulElement: findType("StatefulElement?"),
      nullable_String: findType("String?"),
      nullable_SurfacePaint: findType("SurfacePaint?"),
      nullable_TapGestureRecognizer: findType("TapGestureRecognizer?"),
      nullable_TextStyle: findType("TextStyle?"),
      nullable_TextStyleTween: findType("TextStyleTween?"),
      nullable_TransformEngineLayer: findType("TransformEngineLayer0?"),
      nullable_Tween_double: findType("Tween<double>?"),
      nullable_Uint8List: findType("Uint8List?"),
      nullable_VerticalDragGestureRecognizer: findType("VerticalDragGestureRecognizer?"),
      nullable__FocusTraversalGroupMarker: findType("_FocusTraversalGroupMarker?"),
      nullable__GlProgram: findType("_GlProgram?"),
      nullable__PointAtTime: findType("_PointAtTime?"),
      nullable__RegisteredFont: findType("_RegisteredFont?"),
      nullable__TaskEntry_dynamic: findType("_TaskEntry<@>?"),
      nullable_double: findType("double?"),
      nullable_int: findType("int?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_AnimationStatus: findType("~(AnimationStatus)"),
      void_Function_Duration: findType("~(Duration)"),
      void_Function_FocusHighlightMode: findType("~(FocusHighlightMode)"),
      void_Function_List_FrameTiming: findType("~(List<FrameTiming>)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_PointerEvent: findType("~(PointerEvent0)"),
      void_Function_RawKeyEvent: findType("~(RawKeyEvent)"),
      void_Function_nullable_Object: findType("~(Object?)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.BodyElement_methods = W.BodyElement.prototype;
    C.CanvasElement_methods = W.CanvasElement.prototype;
    C.CanvasRenderingContext2D_methods = W.CanvasRenderingContext2D.prototype;
    C.CssStyleDeclaration_methods = W.CssStyleDeclaration.prototype;
    C.DivElement_methods = W.DivElement.prototype;
    C.FormElement_methods = W.FormElement.prototype;
    C.HttpRequest_methods = W.HttpRequest.prototype;
    C.InputElement_methods = W.InputElement.prototype;
    C.Interceptor_methods = J.Interceptor.prototype;
    C.JSArray_methods = J.JSArray.prototype;
    C.JSBool_methods = J.JSBool.prototype;
    C.JSInt_methods = J.JSInt.prototype;
    C.JSNull_methods = J.JSNull.prototype;
    C.JSNumber_methods = J.JSNumber.prototype;
    C.JSString_methods = J.JSString.prototype;
    C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    C.LabelElement_methods = W.LabelElement.prototype;
    C.MediaQueryList_methods = W.MediaQueryList.prototype;
    C.MetaElement_methods = W.MetaElement.prototype;
    C.NativeByteBuffer_methods = H.NativeByteBuffer.prototype;
    C.NativeByteData_methods = H.NativeByteData.prototype;
    C.NativeFloat32List_methods = H.NativeFloat32List.prototype;
    C.NativeFloat64List_methods = H.NativeFloat64List.prototype;
    C.NativeInt32List_methods = H.NativeInt32List.prototype;
    C.NativeUint8List_methods = H.NativeUint8List.prototype;
    C.NodeList_methods = W.NodeList.prototype;
    C.OffscreenCanvas_methods = W.OffscreenCanvas.prototype;
    C.ParagraphElement_methods = W.ParagraphElement.prototype;
    C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    C.ScriptElement_methods = W.ScriptElement.prototype;
    C.StyleElement_methods = W.StyleElement.prototype;
    C.TableElement_methods = W.TableElement.prototype;
    C.TouchList_methods = W.TouchList.prototype;
    C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    C.WheelEvent_methods = W.WheelEvent.prototype;
    C.Window_methods = W.Window.prototype;
    C.AccessibilityMode_0 = new H.AccessibilityMode("AccessibilityMode.unknown");
    C.AlignmentDirectional_m1_m1 = new K.AlignmentDirectional(-1, -1);
    C.Alignment_0_0 = new K.Alignment(0, 0);
    C.AnimationBehavior_0 = new G.AnimationBehavior("AnimationBehavior.normal");
    C.AnimationStatus_0 = new X.AnimationStatus("AnimationStatus.dismissed");
    C.AnimationStatus_1 = new X.AnimationStatus("AnimationStatus.forward");
    C.AnimationStatus_2 = new X.AnimationStatus("AnimationStatus.reverse");
    C.AnimationStatus_3 = new X.AnimationStatus("AnimationStatus.completed");
    C.AppBarTheme_IEl = new V.AppBarTheme(null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.AppLifecycleState_0 = new P.AppLifecycleState("AppLifecycleState.resumed");
    C.AppLifecycleState_1 = new P.AppLifecycleState("AppLifecycleState.inactive");
    C.AppLifecycleState_2 = new P.AppLifecycleState("AppLifecycleState.paused");
    C.AppLifecycleState_3 = new P.AppLifecycleState("AppLifecycleState.detached");
    C.AxisDirection_0 = new G.AxisDirection("AxisDirection.up");
    C.AxisDirection_1 = new G.AxisDirection("AxisDirection.right");
    C.AxisDirection_2 = new G.AxisDirection("AxisDirection.down");
    C.AxisDirection_3 = new G.AxisDirection("AxisDirection.left");
    C.C_StandardMessageCodec = new U.StandardMessageCodec0();
    C.BasicMessageChannel_8hp = new A.BasicMessageChannel("flutter/accessibility", C.C_StandardMessageCodec, type$.BasicMessageChannel_dynamic);
    C.C_JSONMessageCodec0 = new U.JSONMessageCodec0();
    C.BasicMessageChannel_Cfi = new A.BasicMessageChannel("flutter/keyevent", C.C_JSONMessageCodec0, type$.BasicMessageChannel_dynamic);
    C.C_StringCodec = new U.StringCodec();
    C.BasicMessageChannel_No7 = new A.BasicMessageChannel("flutter/lifecycle", C.C_StringCodec, H.findType("BasicMessageChannel<String?>"));
    C.BasicMessageChannel_Qma = new A.BasicMessageChannel("flutter/system", C.C_JSONMessageCodec0, type$.BasicMessageChannel_dynamic);
    C.BlendMode_1 = new P.BlendMode(1, "BlendMode.src");
    C.BlendMode_10 = new P.BlendMode(10, "BlendMode.dstATop");
    C.BlendMode_11 = new P.BlendMode(11, "BlendMode.xor");
    C.BlendMode_12 = new P.BlendMode(12, "BlendMode.plus");
    C.BlendMode_13 = new P.BlendMode(13, "BlendMode.modulate");
    C.BlendMode_14 = new P.BlendMode(14, "BlendMode.screen");
    C.BlendMode_15 = new P.BlendMode(15, "BlendMode.overlay");
    C.BlendMode_16 = new P.BlendMode(16, "BlendMode.darken");
    C.BlendMode_17 = new P.BlendMode(17, "BlendMode.lighten");
    C.BlendMode_18 = new P.BlendMode(18, "BlendMode.colorDodge");
    C.BlendMode_19 = new P.BlendMode(19, "BlendMode.colorBurn");
    C.BlendMode_20 = new P.BlendMode(20, "BlendMode.hardLight");
    C.BlendMode_21 = new P.BlendMode(21, "BlendMode.softLight");
    C.BlendMode_22 = new P.BlendMode(22, "BlendMode.difference");
    C.BlendMode_23 = new P.BlendMode(23, "BlendMode.exclusion");
    C.BlendMode_24 = new P.BlendMode(24, "BlendMode.multiply");
    C.BlendMode_25 = new P.BlendMode(25, "BlendMode.hue");
    C.BlendMode_26 = new P.BlendMode(26, "BlendMode.saturation");
    C.BlendMode_27 = new P.BlendMode(27, "BlendMode.color");
    C.BlendMode_28 = new P.BlendMode(28, "BlendMode.luminosity");
    C.BlendMode_3 = new P.BlendMode(3, "BlendMode.srcOver");
    C.BlendMode_4 = new P.BlendMode(4, "BlendMode.dstOver");
    C.BlendMode_5 = new P.BlendMode(5, "BlendMode.srcIn");
    C.BlendMode_6 = new P.BlendMode(6, "BlendMode.dstIn");
    C.BlendMode_7 = new P.BlendMode(7, "BlendMode.srcOut");
    C.BlendMode_8 = new P.BlendMode(8, "BlendMode.dstOut");
    C.BlendMode_9 = new P.BlendMode(9, "BlendMode.srcATop");
    C.BlurStyle_0 = new P.BlurStyle();
    C.Radius_0_0 = new P.Radius(0, 0);
    C.BorderRadius_tLn = new K.BorderRadius(C.Radius_0_0, C.Radius_0_0, C.Radius_0_0, C.Radius_0_0);
    C.Color_4278190080 = new P.Color(4278190080);
    C.BorderStyle_0 = new Y.BorderStyle("BorderStyle.none");
    C.BorderSide_m7u = new Y.BorderSide(C.Color_4278190080, 0, C.BorderStyle_0);
    C.BorderStyle_1 = new Y.BorderStyle("BorderStyle.solid");
    C.BottomAppBarTheme_null_null_null = new D.BottomAppBarTheme(null, null, null);
    C.BottomNavigationBarThemeData_gg4 = new M.BottomNavigationBarThemeData(null, null, null, null, null, null, null, null, null, null, null, null);
    C.BottomSheetThemeData_M2D = new X.BottomSheetThemeData(null, null, null, null, null, null);
    C.BoxConstraints_40_40_40_40 = new S.BoxConstraints(40, 40, 40, 40);
    C.BoxConstraints_ALM = new S.BoxConstraints(1 / 0, 1 / 0, 1 / 0, 1 / 0);
    C.BoxConstraints_mlX = new S.BoxConstraints(0, 1 / 0, 0, 1 / 0);
    C.BoxHeightStyle_0 = new P.BoxHeightStyle();
    C.BoxShape_0 = new F.BoxShape("BoxShape.rectangle");
    C.BoxShape_1 = new F.BoxShape("BoxShape.circle");
    C.BoxWidthStyle_0 = new P.BoxWidthStyle();
    C.Brightness_0 = new P.Brightness("Brightness.dark");
    C.Brightness_1 = new P.Brightness("Brightness.light");
    C.BrowserEngine_0 = new H.BrowserEngine("BrowserEngine.blink");
    C.BrowserEngine_1 = new H.BrowserEngine("BrowserEngine.webkit");
    C.BrowserEngine_2 = new H.BrowserEngine("BrowserEngine.firefox");
    C.BrowserEngine_3 = new H.BrowserEngine("BrowserEngine.edge");
    C.BrowserEngine_4 = new H.BrowserEngine("BrowserEngine.ie11");
    C.BrowserEngine_5 = new H.BrowserEngine("BrowserEngine.samsung");
    C.BrowserEngine_6 = new H.BrowserEngine("BrowserEngine.unknown");
    C.ButtonBarThemeData_A0t = new M.ButtonBarThemeData(null, null, null, null, null, null, null, null, null);
    C.ButtonTextTheme_0 = new M.ButtonTextTheme("ButtonTextTheme.normal");
    C.ButtonTextTheme_1 = new M.ButtonTextTheme("ButtonTextTheme.accent");
    C.ButtonTextTheme_2 = new M.ButtonTextTheme("ButtonTextTheme.primary");
    C.C_AccessibilityFeatures = new P.AccessibilityFeatures();
    C.C_ActionDispatcher = new U.ActionDispatcher();
    C.C_AssetManager = new H.AssetManager();
    C.C_Base64Encoder = new P.Base64Encoder();
    C.C_Base64Codec = new P.Base64Codec();
    C.C_BrowserPlatformLocation = new H.BrowserPlatformLocation();
    C.C_ButtonActivateIntent = new U.ButtonActivateIntent();
    C.C_CkRestoreCommand = new H.CkRestoreCommand();
    C.C_CkSaveCommand = new H.CkSaveCommand();
    C.C_Console = new W.Console();
    C.C_DecimalInputType = new H.DecimalInputType();
    C.C_DefaultCupertinoLocalizations = new L.DefaultCupertinoLocalizations();
    C.C_DefaultMaterialLocalizations = new U.DefaultMaterialLocalizations();
    C.Size_100_100 = new P.Size(100, 100);
    C.C_DefaultShaderWarmUp = new D.DefaultShaderWarmUp();
    C.C_DefaultTransitionDelegate = new K.DefaultTransitionDelegate();
    C.C_DefaultWidgetsLocalizations = new L.DefaultWidgetsLocalizations();
    C.C_DismissIntent = new U.DismissIntent();
    C.C_DoNothingAndStopPropagationTextIntent = new M.DoNothingAndStopPropagationTextIntent();
    C.C_EmailInputType = new H.EmailInputType();
    C.C_EmptyIterator = new H.EmptyIterator();
    C.C_Endian0 = new P.Endian();
    C.C_Endian = new P.Endian();
    C.C_FadeUpwardsPageTransitionsBuilder = new K.FadeUpwardsPageTransitionsBuilder();
    C.C_HashUrlStrategy = new H.HashUrlStrategy();
    C.C_IconData = new X.IconData();
    C.FloatingLabelBehavior_1 = new L.FloatingLabelBehavior();
    C.C_InputDecorationTheme = new L.InputDecorationTheme();
    C.C_JSONMessageCodec = new H.JSONMessageCodec();
    C.C_JSONMethodCodec = new H.JSONMethodCodec();
    C.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    C.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    C.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    C.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    C.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    C.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    C.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    C.C_JS_CONST3 = function(hooks) { return hooks; }
;
    C.C_JsonCodec = new P.JsonCodec();
    C.C_MaterialScrollBehavior = new S.MaterialScrollBehavior();
    C.C_MultilineInputType = new H.MultilineInputType();
    C.C_NextFocusIntent = new U.NextFocusIntent();
    C.C_NumberInputType = new H.NumberInputType();
    C.C_Object = new P.Object();
    C.C_OutOfMemoryError = new P.OutOfMemoryError();
    C.TargetPlatform_0 = new T.TargetPlatform("TargetPlatform.android");
    C.TargetPlatform_2 = new T.TargetPlatform("TargetPlatform.iOS");
    C.TargetPlatform_3 = new T.TargetPlatform("TargetPlatform.linux");
    C.TargetPlatform_4 = new T.TargetPlatform("TargetPlatform.macOS");
    C.TargetPlatform_5 = new T.TargetPlatform("TargetPlatform.windows");
    C.C_CupertinoPageTransitionsBuilder = new K.CupertinoPageTransitionsBuilder();
    C.Map_23gMT = new H.GeneralConstantMap([C.TargetPlatform_0, C.C_FadeUpwardsPageTransitionsBuilder, C.TargetPlatform_2, C.C_CupertinoPageTransitionsBuilder, C.TargetPlatform_3, C.C_FadeUpwardsPageTransitionsBuilder, C.TargetPlatform_4, C.C_CupertinoPageTransitionsBuilder, C.TargetPlatform_5, C.C_FadeUpwardsPageTransitionsBuilder], H.findType("GeneralConstantMap<TargetPlatform,PageTransitionsBuilder>"));
    C.C_PageTransitionsTheme = new K.PageTransitionsTheme();
    C.C_PaintRestore = new H.PaintRestore();
    C.C_PaintSave = new H.PaintSave();
    C.C_PhoneInputType = new H.PhoneInputType();
    C.C_PointerSupportDetector = new H.PointerSupportDetector();
    C.C_PreviousFocusIntent = new U.PreviousFocusIntent();
    C.C_ActivateIntent = new U.ActivateIntent();
    C.ScrollIncrementType_1 = new F.ScrollIncrementType("ScrollIncrementType.page");
    C.ScrollIntent_R430 = new F.ScrollIntent(C.AxisDirection_2, C.ScrollIncrementType_1);
    C.List_L3K = H.setRuntimeTypeInfo(makeConstList([C.C_ActivateIntent, C.ScrollIntent_R430]), H.findType("JSArray<Intent>"));
    C.C_PrioritizedIntents = new U.PrioritizedIntents();
    C.C_StandardMessageCodec0 = new H.StandardMessageCodec();
    C.C_StandardMethodCodec = new H.StandardMethodCodec();
    C.C_TextInputClearClient = new H.TextInputClearClient();
    C.C_TextInputHide = new H.TextInputHide();
    C.C_TextInputSetCaretRect = new H.TextInputSetCaretRect();
    C.C_TextInputSetMarkedTextRect = new H.TextInputSetMarkedTextRect();
    C.C_TextInputShow = new H.TextInputShow();
    C.C_TextInputType = new H.TextInputType();
    C.C_UrlInputType = new H.UrlInputType();
    C.C_Utf8Codec = new P.Utf8Codec();
    C.C_Utf8Encoder = new P.Utf8Encoder();
    C.C__AlwaysCompleteAnimation = new S._AlwaysCompleteAnimation();
    C.C__AlwaysDismissedAnimation = new S._AlwaysDismissedAnimation();
    C.C__CupertinoLocalizationsDelegate = new L._CupertinoLocalizationsDelegate();
    C.Color_4294967295 = new P.Color(4294967295);
    C.CupertinoDynamicColor_qQo = new E.CupertinoDynamicColor(C.Color_4278190080, "label", null, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, 0);
    C.Color_4288256409 = new P.Color(4288256409);
    C.Color_4285887861 = new P.Color(4285887861);
    C.CupertinoDynamicColor_YIZ = new E.CupertinoDynamicColor(C.Color_4288256409, "inactiveGray", null, C.Color_4288256409, C.Color_4285887861, C.Color_4288256409, C.Color_4285887861, C.Color_4288256409, C.Color_4285887861, C.Color_4288256409, C.Color_4285887861, 0);
    C.C__CupertinoTextThemeDefaults = new K._CupertinoTextThemeDefaults();
    C.Color_4278221567 = new P.Color(4278221567);
    C.Color_4278879487 = new P.Color(4278879487);
    C.Color_4278206685 = new P.Color(4278206685);
    C.Color_4282424575 = new P.Color(4282424575);
    C.CupertinoDynamicColor_948 = new E.CupertinoDynamicColor(C.Color_4278221567, "systemBlue", null, C.Color_4278221567, C.Color_4278879487, C.Color_4278206685, C.Color_4282424575, C.Color_4278221567, C.Color_4278879487, C.Color_4278206685, C.Color_4282424575, 0);
    C.Color_4280032286 = new P.Color(4280032286);
    C.Color_4280558630 = new P.Color(4280558630);
    C.CupertinoDynamicColor_k0n = new E.CupertinoDynamicColor(C.Color_4294967295, "systemBackground", null, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4278190080, C.Color_4294967295, C.Color_4280032286, C.Color_4294967295, C.Color_4280558630, 0);
    C.Color_4042914297 = new P.Color(4042914297);
    C.Color_4028439837 = new P.Color(4028439837);
    C.CupertinoDynamicColor_wEo = new E.CupertinoDynamicColor(C.Color_4042914297, null, null, C.Color_4042914297, C.Color_4028439837, C.Color_4042914297, C.Color_4028439837, C.Color_4042914297, C.Color_4028439837, C.Color_4042914297, C.Color_4028439837, 0);
    C.C__CupertinoThemeDefaults = new K._CupertinoThemeDefaults();
    C.C__DefaultBinaryMessenger = new N._DefaultBinaryMessenger();
    C.C__DefaultHeroTag = new E._DefaultHeroTag();
    C.C__DeferringMouseCursor = new A._DeferringMouseCursor();
    C.C__DelayedDone = new P._DelayedDone();
    C.SystemMouseCursor_click = new A.SystemMouseCursor("click");
    C.SystemMouseCursor_basic = new A.SystemMouseCursor("basic");
    C.C__EnabledAndDisabledMouseCursor = new V._EnabledAndDisabledMouseCursor();
    C.C__HashEnd = new P._HashEnd();
    C.C__InkSplashFactory = new U._InkSplashFactory();
    C.C__Linear = new Z._Linear();
    C.C__MaterialLocalizationsDelegate = new U._MaterialLocalizationsDelegate();
    C.C__NoDefaultValue = new Y._NoDefaultValue();
    C.C__Required = new H._Required();
    C.C__RootZone = new P._RootZone();
    C.C__StringStackTrace = new P._StringStackTrace();
    C.C__WidgetsLocalizationsDelegate = new L._WidgetsLocalizationsDelegate();
    C.CardTheme_hKX = new A.CardTheme(null, null, null, null, null, null);
    C.CheckboxThemeData_EkK = new F.CheckboxThemeData(null, null, null, null, null, null, null, null, null);
    C.CircleBorder_61T = new X.CircleBorder(C.BorderSide_m7u);
    C.ClipOp_0 = new P.ClipOp(0, "ClipOp.difference");
    C.ClipOp_1 = new P.ClipOp(1, "ClipOp.intersect");
    C.Clip_0 = new P.Clip("Clip.none");
    C.Clip_1 = new P.Clip("Clip.hardEdge");
    C.Clip_2 = new P.Clip("Clip.antiAlias");
    C.Clip_3 = new P.Clip("Clip.antiAliasWithSaveLayer");
    C.Color_0 = new P.Color(0);
    C.Color_1087163596 = new P.Color(1087163596);
    C.Color_1627389952 = new P.Color(1627389952);
    C.Color_1660944383 = new P.Color(1660944383);
    C.Color_16777215 = new P.Color(16777215);
    C.Color_1723645116 = new P.Color(1723645116);
    C.Color_1724434632 = new P.Color(1724434632);
    C.Color_2315255808 = new P.Color(2315255808);
    C.Color_2583691263 = new P.Color(2583691263);
    C.Color_3019898879 = new P.Color(3019898879);
    C.Color_4039164096 = new P.Color(4039164096);
    C.Color_4281348144 = new P.Color(4281348144);
    C.Color_4282549748 = new P.Color(4282549748);
    C.Color_4294901760 = new P.Color(4294901760);
    C.Color_520093696 = new P.Color(520093696);
    C.Color_536870911 = new P.Color(536870911);
    C.Cubic_2Vk = new Z.Cubic(0.18, 1, 0.04, 1);
    C.Cubic_JUR = new Z.Cubic(0.25, 0.1, 0.25, 1);
    C.Cubic_JUR0 = new Z.Cubic(0.42, 0, 1, 1);
    C.Cubic_OcD = new Z.Cubic(0.67, 0.03, 0.65, 0.09);
    C.Cubic_ifx = new Z.Cubic(0.4, 0, 0.2, 1);
    C.Cubic_izR = new Z.Cubic(0.35, 0.91, 0.33, 0.97);
    C.Cubic_xDo = new Z.Cubic(0.42, 0, 0.58, 1);
    C.CupertinoThemeData_Npb = new K.CupertinoThemeData(C.C__CupertinoThemeDefaults, null, null, null, null, null, null);
    C.CupertinoUserInterfaceLevelData_0 = new K.CupertinoUserInterfaceLevelData("CupertinoUserInterfaceLevelData.base");
    C.CupertinoUserInterfaceLevelData_1 = new K.CupertinoUserInterfaceLevelData("CupertinoUserInterfaceLevelData.elevated");
    C.DataTableThemeData_SL9 = new Z.DataTableThemeData(null, null, null, null, null, null, null, null, null, null, null);
    C.DebugSemanticsDumpOrder_0 = new A.DebugSemanticsDumpOrder("DebugSemanticsDumpOrder.inverseHitTest");
    C.DebugSemanticsDumpOrder_1 = new A.DebugSemanticsDumpOrder("DebugSemanticsDumpOrder.traversalOrder");
    C.DecorationPosition_0 = new E.DecorationPosition("DecorationPosition.background");
    C.DecorationPosition_1 = new E.DecorationPosition("DecorationPosition.foreground");
    C.DiagnosticLevel_0 = new Y.DiagnosticLevel(0, "DiagnosticLevel.hidden");
    C.DiagnosticLevel_1 = new Y.DiagnosticLevel(1, "DiagnosticLevel.fine");
    C.DiagnosticLevel_2 = new Y.DiagnosticLevel(2, "DiagnosticLevel.debug");
    C.DiagnosticLevel_3 = new Y.DiagnosticLevel(3, "DiagnosticLevel.info");
    C.DiagnosticLevel_4 = new Y.DiagnosticLevel(4, "DiagnosticLevel.warning");
    C.DiagnosticLevel_5 = new Y.DiagnosticLevel(5, "DiagnosticLevel.hint");
    C.DiagnosticLevel_6 = new Y.DiagnosticLevel(6, "DiagnosticLevel.summary");
    C.DiagnosticLevel_7 = new Y.DiagnosticLevel(7, "DiagnosticLevel.error");
    C.DiagnosticsTreeStyle_0 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.none");
    C.DiagnosticsTreeStyle_1 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.sparse");
    C.DiagnosticsTreeStyle_10 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.shallow");
    C.DiagnosticsTreeStyle_11 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.truncateChildren");
    C.DiagnosticsTreeStyle_2 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.offstage");
    C.DiagnosticsTreeStyle_3 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.dense");
    C.DiagnosticsTreeStyle_4 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.transition");
    C.DiagnosticsTreeStyle_5 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.error");
    C.DiagnosticsTreeStyle_6 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.whitespace");
    C.DiagnosticsTreeStyle_7 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.flat");
    C.DiagnosticsTreeStyle_8 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.singleLine");
    C.DiagnosticsTreeStyle_9 = new Y.DiagnosticsTreeStyle("DiagnosticsTreeStyle.errorProperty");
    C.DialogTheme_maI = new Y.DialogTheme(null, null, null, null, null);
    C.DividerThemeData_Tnu = new G.DividerThemeData(null, null, null, null, null);
    C.DragStartBehavior_0 = new S.DragStartBehavior("DragStartBehavior.down");
    C.DragStartBehavior_1 = new S.DragStartBehavior("DragStartBehavior.start");
    C.Duration_0 = new P.Duration(0);
    C.Duration_100000 = new P.Duration(100000);
    C.Duration_1000000 = new P.Duration(1000000);
    C.Duration_16667 = new P.Duration(16667);
    C.Duration_200000 = new P.Duration(200000);
    C.Duration_2000000 = new P.Duration(2000000);
    C.Duration_300000 = new P.Duration(300000);
    C.Duration_40000 = new P.Duration(40000);
    C.Duration_50000 = new P.Duration(50000);
    C.Duration_500000 = new P.Duration(500000);
    C.Duration_5000000 = new P.Duration(5000000);
    C.Duration_m38000 = new P.Duration(-38000);
    C.EdgeInsets_0_0_0_0 = new V.EdgeInsets(0, 0, 0, 0);
    C.EdgeInsets_16_0_16_0 = new V.EdgeInsets(16, 0, 16, 0);
    C.EdgeInsets_24_0_24_0 = new V.EdgeInsets(24, 0, 24, 0);
    C.EdgeInsets_4_4_4_4 = new V.EdgeInsets(4, 4, 4, 4);
    C.ElevatedButtonThemeData_null = new T.ElevatedButtonThemeData(null);
    C.EnabledState_0 = new H.EnabledState("EnabledState.noOpinion");
    C.EnabledState_1 = new H.EnabledState("EnabledState.enabled");
    C.EnabledState_2 = new H.EnabledState("EnabledState.disabled");
    C.FilterQuality_0 = new P.FilterQuality();
    C.FloatingActionButtonThemeData_IWY = new S.FloatingActionButtonThemeData(null, null, null, null, null, null, null, null, null, null, null);
    C.FocusHighlightMode_0 = new O.FocusHighlightMode("FocusHighlightMode.touch");
    C.FocusHighlightMode_1 = new O.FocusHighlightMode("FocusHighlightMode.traditional");
    C.FocusHighlightStrategy_0 = new O.FocusHighlightStrategy("FocusHighlightStrategy.automatic");
    C.FocusHighlightStrategy_1 = new O.FocusHighlightStrategy("FocusHighlightStrategy.alwaysTouch");
    C.FocusHighlightStrategy_2 = new O.FocusHighlightStrategy("FocusHighlightStrategy.alwaysTraditional");
    C.FormatException_Qi2 = new P.FormatException("Invalid method call", null, null);
    C.FormatException_iDw = new P.FormatException("Expected envelope, got nothing", null, null);
    C.FormatException_oCg = new P.FormatException("Message corrupted", null, null);
    C.FormatException_pSr = new P.FormatException("Invalid envelope", null, null);
    C.GestureDisposition_0 = new D.GestureDisposition("GestureDisposition.accepted");
    C.GestureDisposition_1 = new D.GestureDisposition("GestureDisposition.rejected");
    C.GestureMode_0 = new H.GestureMode("GestureMode.pointerEvents");
    C.GestureMode_1 = new H.GestureMode("GestureMode.browserGestures");
    C.GestureRecognizerState_0 = new S.GestureRecognizerState("GestureRecognizerState.ready");
    C.GestureRecognizerState_1 = new S.GestureRecognizerState("GestureRecognizerState.possible");
    C.GestureRecognizerState_2 = new S.GestureRecognizerState("GestureRecognizerState.defunct");
    C.HeroFlightDirection_0 = new T.HeroFlightDirection("HeroFlightDirection.push");
    C.HeroFlightDirection_1 = new T.HeroFlightDirection("HeroFlightDirection.pop");
    C.HitTestBehavior_0 = new E.HitTestBehavior("HitTestBehavior.deferToChild");
    C.HitTestBehavior_1 = new E.HitTestBehavior("HitTestBehavior.opaque");
    C.HitTestBehavior_2 = new E.HitTestBehavior("HitTestBehavior.translucent");
    C.Color_3707764736 = new P.Color(3707764736);
    C.IconThemeData_Color_3707764736_null_null = new T.IconThemeData(C.Color_3707764736, null, null);
    C.IconThemeData_Color_4278190080_1_24 = new T.IconThemeData(C.Color_4278190080, 1, 24);
    C.IconThemeData_Color_4278190080_null_null = new T.IconThemeData(C.Color_4278190080, null, null);
    C.IconThemeData_Color_4294967295_null_null = new T.IconThemeData(C.Color_4294967295, null, null);
    C.Icon_null = new L.Icon(null);
    C.JsonDecoder_null = new P.JsonDecoder(null);
    C.JsonEncoder_null = new P.JsonEncoder(null);
    C.KeyEventResult_0 = new O.KeyEventResult("KeyEventResult.handled");
    C.KeyEventResult_1 = new O.KeyEventResult("KeyEventResult.ignored");
    C.KeyEventResult_2 = new O.KeyEventResult("KeyEventResult.skipRemainingHandlers");
    C.KeyEventType_0 = new P.KeyEventType("KeyEventType.down");
    C.KeyEventType_1 = new P.KeyEventType("KeyEventType.up");
    C.KeyEventType_2 = new P.KeyEventType("KeyEventType.repeat");
    C.KeyboardSide_0 = new B.KeyboardSide("KeyboardSide.any");
    C.KeyboardSide_3 = new B.KeyboardSide("KeyboardSide.all");
    C.LineBreakType_2 = new H.LineBreakType("LineBreakType.mandatory");
    C.LineBreakResult_Z8h = new H.LineBreakResult(0, 0, 0, C.LineBreakType_2);
    C.LineBreakType_0 = new H.LineBreakType("LineBreakType.opportunity");
    C.LineBreakType_1 = new H.LineBreakType("LineBreakType.prohibited");
    C.LineBreakType_3 = new H.LineBreakType("LineBreakType.endOfText");
    C.LineCharProperty_0 = new H.LineCharProperty("LineCharProperty.CM");
    C.LineCharProperty_1 = new H.LineCharProperty("LineCharProperty.BA");
    C.LineCharProperty_10 = new H.LineCharProperty("LineCharProperty.PO");
    C.LineCharProperty_11 = new H.LineCharProperty("LineCharProperty.OP");
    C.LineCharProperty_12 = new H.LineCharProperty("LineCharProperty.CP");
    C.LineCharProperty_13 = new H.LineCharProperty("LineCharProperty.IS");
    C.LineCharProperty_14 = new H.LineCharProperty("LineCharProperty.HY");
    C.LineCharProperty_15 = new H.LineCharProperty("LineCharProperty.SY");
    C.LineCharProperty_16 = new H.LineCharProperty("LineCharProperty.NU");
    C.LineCharProperty_17 = new H.LineCharProperty("LineCharProperty.CL");
    C.LineCharProperty_18 = new H.LineCharProperty("LineCharProperty.GL");
    C.LineCharProperty_19 = new H.LineCharProperty("LineCharProperty.BB");
    C.LineCharProperty_2 = new H.LineCharProperty("LineCharProperty.LF");
    C.LineCharProperty_20 = new H.LineCharProperty("LineCharProperty.HL");
    C.LineCharProperty_21 = new H.LineCharProperty("LineCharProperty.JL");
    C.LineCharProperty_22 = new H.LineCharProperty("LineCharProperty.JV");
    C.LineCharProperty_23 = new H.LineCharProperty("LineCharProperty.JT");
    C.LineCharProperty_24 = new H.LineCharProperty("LineCharProperty.NS");
    C.LineCharProperty_25 = new H.LineCharProperty("LineCharProperty.ZW");
    C.LineCharProperty_26 = new H.LineCharProperty("LineCharProperty.ZWJ");
    C.LineCharProperty_27 = new H.LineCharProperty("LineCharProperty.B2");
    C.LineCharProperty_28 = new H.LineCharProperty("LineCharProperty.IN");
    C.LineCharProperty_29 = new H.LineCharProperty("LineCharProperty.WJ");
    C.LineCharProperty_3 = new H.LineCharProperty("LineCharProperty.BK");
    C.LineCharProperty_30 = new H.LineCharProperty("LineCharProperty.ID");
    C.LineCharProperty_31 = new H.LineCharProperty("LineCharProperty.EB");
    C.LineCharProperty_32 = new H.LineCharProperty("LineCharProperty.H2");
    C.LineCharProperty_33 = new H.LineCharProperty("LineCharProperty.H3");
    C.LineCharProperty_34 = new H.LineCharProperty("LineCharProperty.CB");
    C.LineCharProperty_35 = new H.LineCharProperty("LineCharProperty.RI");
    C.LineCharProperty_36 = new H.LineCharProperty("LineCharProperty.EM");
    C.LineCharProperty_4 = new H.LineCharProperty("LineCharProperty.CR");
    C.LineCharProperty_5 = new H.LineCharProperty("LineCharProperty.SP");
    C.LineCharProperty_6 = new H.LineCharProperty("LineCharProperty.EX");
    C.LineCharProperty_7 = new H.LineCharProperty("LineCharProperty.QU");
    C.LineCharProperty_8 = new H.LineCharProperty("LineCharProperty.AL");
    C.LineCharProperty_9 = new H.LineCharProperty("LineCharProperty.PR");
    C.ModifierKey_0 = new B.ModifierKey("ModifierKey.controlModifier");
    C.ModifierKey_1 = new B.ModifierKey("ModifierKey.shiftModifier");
    C.ModifierKey_2 = new B.ModifierKey("ModifierKey.altModifier");
    C.ModifierKey_3 = new B.ModifierKey("ModifierKey.metaModifier");
    C.ModifierKey_4 = new B.ModifierKey("ModifierKey.capsLockModifier");
    C.ModifierKey_5 = new B.ModifierKey("ModifierKey.numLockModifier");
    C.ModifierKey_6 = new B.ModifierKey("ModifierKey.scrollLockModifier");
    C.ModifierKey_7 = new B.ModifierKey("ModifierKey.functionModifier");
    C.ModifierKey_8 = new B.ModifierKey("ModifierKey.symbolModifier");
    C.List_0 = H.setRuntimeTypeInfo(makeConstList([C.ModifierKey_0, C.ModifierKey_1, C.ModifierKey_2, C.ModifierKey_3, C.ModifierKey_4, C.ModifierKey_5, C.ModifierKey_6, C.ModifierKey_7, C.ModifierKey_8]), H.findType("JSArray<ModifierKey>"));
    C.List_0_1 = H.setRuntimeTypeInfo(makeConstList([0, 1]), type$.JSArray_double);
    C.FontWeight_0 = new P.FontWeight(0);
    C.FontWeight_1 = new P.FontWeight(1);
    C.FontWeight_2 = new P.FontWeight(2);
    C.FontWeight_3 = new P.FontWeight(3);
    C.FontWeight_4 = new P.FontWeight(4);
    C.FontWeight_5 = new P.FontWeight(5);
    C.FontWeight_6 = new P.FontWeight(6);
    C.FontWeight_7 = new P.FontWeight(7);
    C.FontWeight_8 = new P.FontWeight(8);
    C.List_27p = H.setRuntimeTypeInfo(makeConstList([C.FontWeight_0, C.FontWeight_1, C.FontWeight_2, C.FontWeight_3, C.FontWeight_4, C.FontWeight_5, C.FontWeight_6, C.FontWeight_7, C.FontWeight_8]), H.findType("JSArray<FontWeight>"));
    C.List_2Vk = H.setRuntimeTypeInfo(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    C.List_2Zi = H.setRuntimeTypeInfo(makeConstList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::autofocus", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), type$.JSArray_String);
    C.List_CVk = H.setRuntimeTypeInfo(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_Cg9 = H.setRuntimeTypeInfo(makeConstList(["pointerdown", "pointermove", "pointerup", "pointercancel", "touchstart", "touchend", "touchmove", "touchcancel", "mousedown", "mousemove", "mouseup", "keyup", "keydown"]), type$.JSArray_String);
    C.List_JYB = H.setRuntimeTypeInfo(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    C.Locale_en_US = new P.Locale("en", "US");
    C.List_Locale_en_US = H.setRuntimeTypeInfo(makeConstList([C.Locale_en_US]), type$.JSArray_Locale);
    C.TextAffinity_0 = new P.TextAffinity("TextAffinity.upstream");
    C.TextAffinity_1 = new P.TextAffinity("TextAffinity.downstream");
    C.List_TextAffinity_0_TextAffinity_1 = H.setRuntimeTypeInfo(makeConstList([C.TextAffinity_0, C.TextAffinity_1]), H.findType("JSArray<TextAffinity>"));
    C.TextDirection_0 = new P.TextDirection(0, "TextDirection.rtl");
    C.TextDirection_1 = new P.TextDirection(1, "TextDirection.ltr");
    C.List_TextDirection_0_TextDirection_1 = H.setRuntimeTypeInfo(makeConstList([C.TextDirection_0, C.TextDirection_1]), H.findType("JSArray<TextDirection>"));
    C.TextAlign_0 = new P.TextAlign(0, "TextAlign.left");
    C.TextAlign_1 = new P.TextAlign(1, "TextAlign.right");
    C.TextAlign_2 = new P.TextAlign(2, "TextAlign.center");
    C.TextAlign_3 = new P.TextAlign(3, "TextAlign.justify");
    C.TextAlign_4 = new P.TextAlign(4, "TextAlign.start");
    C.TextAlign_5 = new P.TextAlign(5, "TextAlign.end");
    C.List_WPl = H.setRuntimeTypeInfo(makeConstList([C.TextAlign_0, C.TextAlign_1, C.TextAlign_2, C.TextAlign_3, C.TextAlign_4, C.TextAlign_5]), H.findType("JSArray<TextAlign>"));
    C._RouteRestorationType_0 = new K._RouteRestorationType(0, "_RouteRestorationType.named");
    C._RouteRestorationType_1 = new K._RouteRestorationType(1, "_RouteRestorationType.anonymous");
    C.List_ato = H.setRuntimeTypeInfo(makeConstList([C._RouteRestorationType_0, C._RouteRestorationType_1]), H.findType("JSArray<_RouteRestorationType>"));
    C.List_click_scroll = H.setRuntimeTypeInfo(makeConstList(["click", "scroll"]), type$.JSArray_String);
    C.List_ego = H.setRuntimeTypeInfo(makeConstList(["HEAD", "AREA", "BASE", "BASEFONT", "BR", "COL", "COLGROUP", "EMBED", "FRAME", "FRAMESET", "HR", "IMAGE", "IMG", "INPUT", "ISINDEX", "LINK", "META", "PARAM", "SOURCE", "STYLE", "TITLE", "WBR"]), type$.JSArray_String);
    C.List_empty2 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_CodeunitRange);
    C.List_empty8 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<CustomPainterSemantics>"));
    C.List_empty = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_DiagnosticsNode);
    C.List_empty10 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_Locale);
    C.List_empty3 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_NavigatorObserver);
    C.List_empty5 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_Object);
    C.List_empty6 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_OverlayEntry);
    C.List_empty4 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<Page<@>>"));
    C.List_empty7 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_SemanticsNode);
    C.List_empty0 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_String);
    C.List_empty9 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_TextBox);
    C.List_empty11 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_Widget);
    C.List_empty1 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_dynamic);
    C.List_gRj = H.setRuntimeTypeInfo(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_gnE = H.setRuntimeTypeInfo(makeConstList([0, 0, 65498, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_nxB = H.setRuntimeTypeInfo(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_qNA = H.setRuntimeTypeInfo(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    C.List_qg4 = H.setRuntimeTypeInfo(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    C.TargetPlatform_1 = new T.TargetPlatform("TargetPlatform.fuchsia");
    C.List_uDp = H.setRuntimeTypeInfo(makeConstList([C.TargetPlatform_0, C.TargetPlatform_1, C.TargetPlatform_2, C.TargetPlatform_3, C.TargetPlatform_4, C.TargetPlatform_5]), H.findType("JSArray<TargetPlatform>"));
    C.List_wSV = H.setRuntimeTypeInfo(makeConstList(["bind", "if", "ref", "repeat", "syntax"]), type$.JSArray_String);
    C.List_yXZ = H.setRuntimeTypeInfo(makeConstList([0, 4, 12, 1, 5, 13, 3, 7, 15]), type$.JSArray_int);
    C.List_yrN = H.setRuntimeTypeInfo(makeConstList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), type$.JSArray_String);
    C._CornerId_0 = new D._CornerId("_CornerId.topLeft");
    C._CornerId_3 = new D._CornerId("_CornerId.bottomRight");
    C._Diagonal__CornerId_0__CornerId_3 = new D._Diagonal(C._CornerId_0, C._CornerId_3);
    C._Diagonal__CornerId_3__CornerId_0 = new D._Diagonal(C._CornerId_3, C._CornerId_0);
    C._CornerId_1 = new D._CornerId("_CornerId.topRight");
    C._CornerId_2 = new D._CornerId("_CornerId.bottomLeft");
    C._Diagonal__CornerId_1__CornerId_2 = new D._Diagonal(C._CornerId_1, C._CornerId_2);
    C._Diagonal__CornerId_2__CornerId_1 = new D._Diagonal(C._CornerId_2, C._CornerId_1);
    C.List_yvP = H.setRuntimeTypeInfo(makeConstList([C._Diagonal__CornerId_0__CornerId_3, C._Diagonal__CornerId_3__CornerId_0, C._Diagonal__CornerId_1__CornerId_2, C._Diagonal__CornerId_2__CornerId_1]), H.findType("JSArray<_Diagonal>"));
    C.List_zPV = H.setRuntimeTypeInfo(makeConstList([C.LineCharProperty_0, C.LineCharProperty_1, C.LineCharProperty_2, C.LineCharProperty_3, C.LineCharProperty_4, C.LineCharProperty_5, C.LineCharProperty_6, C.LineCharProperty_7, C.LineCharProperty_8, C.LineCharProperty_9, C.LineCharProperty_10, C.LineCharProperty_11, C.LineCharProperty_12, C.LineCharProperty_13, C.LineCharProperty_14, C.LineCharProperty_15, C.LineCharProperty_16, C.LineCharProperty_17, C.LineCharProperty_18, C.LineCharProperty_19, C.LineCharProperty_20, C.LineCharProperty_21, C.LineCharProperty_22, C.LineCharProperty_23, C.LineCharProperty_24, C.LineCharProperty_25, C.LineCharProperty_26, C.LineCharProperty_27, C.LineCharProperty_28, C.LineCharProperty_29, C.LineCharProperty_30, C.LineCharProperty_31, C.LineCharProperty_32, C.LineCharProperty_33, C.LineCharProperty_34, C.LineCharProperty_35, C.LineCharProperty_36]), H.findType("JSArray<LineCharProperty>"));
    C.LogicalKeyboardKey_2203318681824 = new G.LogicalKeyboardKey(2203318681824);
    C.LogicalKeyboardKey_2203318681825 = new G.LogicalKeyboardKey(2203318681825);
    C.LogicalKeyboardKey_2203318681826 = new G.LogicalKeyboardKey(2203318681826);
    C.LogicalKeyboardKey_2203318681827 = new G.LogicalKeyboardKey(2203318681827);
    C.LogicalKeyboardKey_32 = new G.LogicalKeyboardKey(32);
    C.LogicalKeyboardKey_4294967314 = new G.LogicalKeyboardKey(4294967314);
    C.LogicalKeyboardKey_4295426088 = new G.LogicalKeyboardKey(4295426088);
    C.LogicalKeyboardKey_4295426089 = new G.LogicalKeyboardKey(4295426089);
    C.LogicalKeyboardKey_4295426091 = new G.LogicalKeyboardKey(4295426091);
    C.LogicalKeyboardKey_4295426105 = new G.LogicalKeyboardKey(4295426105);
    C.LogicalKeyboardKey_4295426119 = new G.LogicalKeyboardKey(4295426119);
    C.LogicalKeyboardKey_4295426122 = new G.LogicalKeyboardKey(4295426122);
    C.LogicalKeyboardKey_4295426123 = new G.LogicalKeyboardKey(4295426123);
    C.LogicalKeyboardKey_4295426125 = new G.LogicalKeyboardKey(4295426125);
    C.LogicalKeyboardKey_4295426126 = new G.LogicalKeyboardKey(4295426126);
    C.LogicalKeyboardKey_4295426127 = new G.LogicalKeyboardKey(4295426127);
    C.LogicalKeyboardKey_4295426128 = new G.LogicalKeyboardKey(4295426128);
    C.LogicalKeyboardKey_4295426129 = new G.LogicalKeyboardKey(4295426129);
    C.LogicalKeyboardKey_4295426130 = new G.LogicalKeyboardKey(4295426130);
    C.LogicalKeyboardKey_4295426131 = new G.LogicalKeyboardKey(4295426131);
    C.LogicalKeyboardKey_4295426272 = new G.LogicalKeyboardKey(4295426272);
    C.LogicalKeyboardKey_4295426273 = new G.LogicalKeyboardKey(4295426273);
    C.LogicalKeyboardKey_4295426274 = new G.LogicalKeyboardKey(4295426274);
    C.LogicalKeyboardKey_4295426275 = new G.LogicalKeyboardKey(4295426275);
    C.LogicalKeyboardKey_4295426276 = new G.LogicalKeyboardKey(4295426276);
    C.LogicalKeyboardKey_4295426277 = new G.LogicalKeyboardKey(4295426277);
    C.LogicalKeyboardKey_4295426278 = new G.LogicalKeyboardKey(4295426278);
    C.LogicalKeyboardKey_4295426279 = new G.LogicalKeyboardKey(4295426279);
    C.List_0AS = H.setRuntimeTypeInfo(makeConstList(["BU", "DD", "FX", "TP", "YD", "ZR"]), type$.JSArray_String);
    C.Map_0Agg9 = new H.ConstantStringMap(6, {BU: "MM", DD: "DE", FX: "FR", TP: "TL", YD: "YE", ZR: "CD"}, C.List_0AS, type$.ConstantStringMap_String_String);
    C.List_mode = H.setRuntimeTypeInfo(makeConstList(["mode"]), type$.JSArray_String);
    C.Map_9aZ6I = new H.ConstantStringMap(1, {mode: "basic"}, C.List_mode, type$.ConstantStringMap_String_String);
    C.Color_4294638330 = new P.Color(4294638330);
    C.Color_4294309365 = new P.Color(4294309365);
    C.Color_4293848814 = new P.Color(4293848814);
    C.Color_4292927712 = new P.Color(4292927712);
    C.Color_4292269782 = new P.Color(4292269782);
    C.Color_4290624957 = new P.Color(4290624957);
    C.Color_4288585374 = new P.Color(4288585374);
    C.Color_4284572001 = new P.Color(4284572001);
    C.Color_4282532418 = new P.Color(4282532418);
    C.Color_4280361249 = new P.Color(4280361249);
    C.Map_HFpTk = new H.GeneralConstantMap([50, C.Color_4294638330, 100, C.Color_4294309365, 200, C.Color_4293848814, 300, C.Color_4292927712, 350, C.Color_4292269782, 400, C.Color_4290624957, 500, C.Color_4288585374, 600, C.Color_4285887861, 700, C.Color_4284572001, 800, C.Color_4282532418, 850, C.Color_4281348144, 900, C.Color_4280361249], type$.GeneralConstantMap_int_Color);
    C.Color_4294962158 = new P.Color(4294962158);
    C.Color_4294954450 = new P.Color(4294954450);
    C.Color_4293892762 = new P.Color(4293892762);
    C.Color_4293227379 = new P.Color(4293227379);
    C.Color_4293874512 = new P.Color(4293874512);
    C.Color_4294198070 = new P.Color(4294198070);
    C.Color_4293212469 = new P.Color(4293212469);
    C.Color_4292030255 = new P.Color(4292030255);
    C.Color_4291176488 = new P.Color(4291176488);
    C.Color_4290190364 = new P.Color(4290190364);
    C.Map_JNc9P = new H.GeneralConstantMap([50, C.Color_4294962158, 100, C.Color_4294954450, 200, C.Color_4293892762, 300, C.Color_4293227379, 400, C.Color_4293874512, 500, C.Color_4294198070, 600, C.Color_4293212469, 700, C.Color_4292030255, 800, C.Color_4291176488, 900, C.Color_4290190364], type$.GeneralConstantMap_int_Color);
    C.List_T7A = H.setRuntimeTypeInfo(makeConstList(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "Insert", "End", "ArrowDown", "PageDown", "ArrowLeft", "Clear", "ArrowRight", "Home", "ArrowUp", "PageUp", "Delete", "/", "*", "-", "+", "Enter", "Shift", "Control", "Alt", "Meta"]), type$.JSArray_String);
    C.List_48_null_null_8589934640 = H.setRuntimeTypeInfo(makeConstList([48, null, null, 8589934640]), type$.JSArray_nullable_int);
    C.List_49_null_null_8589934641 = H.setRuntimeTypeInfo(makeConstList([49, null, null, 8589934641]), type$.JSArray_nullable_int);
    C.List_50_null_null_8589934642 = H.setRuntimeTypeInfo(makeConstList([50, null, null, 8589934642]), type$.JSArray_nullable_int);
    C.List_51_null_null_8589934643 = H.setRuntimeTypeInfo(makeConstList([51, null, null, 8589934643]), type$.JSArray_nullable_int);
    C.List_52_null_null_8589934644 = H.setRuntimeTypeInfo(makeConstList([52, null, null, 8589934644]), type$.JSArray_nullable_int);
    C.List_53_null_null_8589934645 = H.setRuntimeTypeInfo(makeConstList([53, null, null, 8589934645]), type$.JSArray_nullable_int);
    C.List_54_null_null_8589934646 = H.setRuntimeTypeInfo(makeConstList([54, null, null, 8589934646]), type$.JSArray_nullable_int);
    C.List_55_null_null_8589934647 = H.setRuntimeTypeInfo(makeConstList([55, null, null, 8589934647]), type$.JSArray_nullable_int);
    C.List_56_null_null_8589934648 = H.setRuntimeTypeInfo(makeConstList([56, null, null, 8589934648]), type$.JSArray_nullable_int);
    C.List_57_null_null_8589934649 = H.setRuntimeTypeInfo(makeConstList([57, null, null, 8589934649]), type$.JSArray_nullable_int);
    C.List_46_null_null_8589934638 = H.setRuntimeTypeInfo(makeConstList([46, null, null, 8589934638]), type$.JSArray_nullable_int);
    C.List_1031_null_null_8589934640 = H.setRuntimeTypeInfo(makeConstList([1031, null, null, 8589934640]), type$.JSArray_nullable_int);
    C.List_773_null_null_8589934641 = H.setRuntimeTypeInfo(makeConstList([773, null, null, 8589934641]), type$.JSArray_nullable_int);
    C.List_769_null_null_8589934642 = H.setRuntimeTypeInfo(makeConstList([769, null, null, 8589934642]), type$.JSArray_nullable_int);
    C.List_775_null_null_8589934643 = H.setRuntimeTypeInfo(makeConstList([775, null, null, 8589934643]), type$.JSArray_nullable_int);
    C.List_770_null_null_8589934644 = H.setRuntimeTypeInfo(makeConstList([770, null, null, 8589934644]), type$.JSArray_nullable_int);
    C.List_1025_null_null_8589934645 = H.setRuntimeTypeInfo(makeConstList([1025, null, null, 8589934645]), type$.JSArray_nullable_int);
    C.List_771_null_null_8589934646 = H.setRuntimeTypeInfo(makeConstList([771, null, null, 8589934646]), type$.JSArray_nullable_int);
    C.List_774_null_null_8589934647 = H.setRuntimeTypeInfo(makeConstList([774, null, null, 8589934647]), type$.JSArray_nullable_int);
    C.List_772_null_null_8589934648 = H.setRuntimeTypeInfo(makeConstList([772, null, null, 8589934648]), type$.JSArray_nullable_int);
    C.List_776_null_null_8589934649 = H.setRuntimeTypeInfo(makeConstList([776, null, null, 8589934649]), type$.JSArray_nullable_int);
    C.List_127_null_null_8589934638 = H.setRuntimeTypeInfo(makeConstList([127, null, null, 8589934638]), type$.JSArray_nullable_int);
    C.List_47_null_null_8589934639 = H.setRuntimeTypeInfo(makeConstList([47, null, null, 8589934639]), type$.JSArray_nullable_int);
    C.List_42_null_null_8589934634 = H.setRuntimeTypeInfo(makeConstList([42, null, null, 8589934634]), type$.JSArray_nullable_int);
    C.List_45_null_null_8589934637 = H.setRuntimeTypeInfo(makeConstList([45, null, null, 8589934637]), type$.JSArray_nullable_int);
    C.List_43_null_null_8589934635 = H.setRuntimeTypeInfo(makeConstList([43, null, null, 8589934635]), type$.JSArray_nullable_int);
    C.List_13_null_null_8589934605 = H.setRuntimeTypeInfo(makeConstList([13, null, null, 8589934605]), type$.JSArray_nullable_int);
    C.List_null_12884902157_17179869453_null = H.setRuntimeTypeInfo(makeConstList([null, 12884902157, 17179869453, null]), type$.JSArray_nullable_int);
    C.List_null_12884902149_17179869445_null = H.setRuntimeTypeInfo(makeConstList([null, 12884902149, 17179869445, null]), type$.JSArray_nullable_int);
    C.List_null_12884902146_17179869442_null = H.setRuntimeTypeInfo(makeConstList([null, 12884902146, 17179869442, null]), type$.JSArray_nullable_int);
    C.List_null_12884902153_17179869449_null = H.setRuntimeTypeInfo(makeConstList([null, 12884902153, 17179869449, null]), type$.JSArray_nullable_int);
    C.Map_T7S7Y = new H.ConstantStringMap(31, {"0": C.List_48_null_null_8589934640, "1": C.List_49_null_null_8589934641, "2": C.List_50_null_null_8589934642, "3": C.List_51_null_null_8589934643, "4": C.List_52_null_null_8589934644, "5": C.List_53_null_null_8589934645, "6": C.List_54_null_null_8589934646, "7": C.List_55_null_null_8589934647, "8": C.List_56_null_null_8589934648, "9": C.List_57_null_null_8589934649, ".": C.List_46_null_null_8589934638, Insert: C.List_1031_null_null_8589934640, End: C.List_773_null_null_8589934641, ArrowDown: C.List_769_null_null_8589934642, PageDown: C.List_775_null_null_8589934643, ArrowLeft: C.List_770_null_null_8589934644, Clear: C.List_1025_null_null_8589934645, ArrowRight: C.List_771_null_null_8589934646, Home: C.List_774_null_null_8589934647, ArrowUp: C.List_772_null_null_8589934648, PageUp: C.List_776_null_null_8589934649, Delete: C.List_127_null_null_8589934638, "/": C.List_47_null_null_8589934639, "*": C.List_42_null_null_8589934634, "-": C.List_45_null_null_8589934637, "+": C.List_43_null_null_8589934635, Enter: C.List_13_null_null_8589934605, Shift: C.List_null_12884902157_17179869453_null, Control: C.List_null_12884902149_17179869445_null, Alt: C.List_null_12884902146_17179869442_null, Meta: C.List_null_12884902153_17179869449_null}, C.List_T7A, H.findType("ConstantStringMap<String,List<int?>>"));
    C.List_YCM = H.setRuntimeTypeInfo(makeConstList(["in", "iw", "ji", "jw", "mo", "aam", "adp", "aue", "ayx", "bgm", "bjd", "ccq", "cjr", "cka", "cmk", "coy", "cqu", "drh", "drw", "gav", "gfx", "ggn", "gti", "guv", "hrr", "ibi", "ilw", "jeg", "kgc", "kgh", "koj", "krm", "ktr", "kvs", "kwq", "kxe", "kzj", "kzt", "lii", "lmm", "meg", "mst", "mwj", "myt", "nad", "ncp", "nnx", "nts", "oun", "pcr", "pmc", "pmu", "ppa", "ppr", "pry", "puz", "sca", "skk", "tdu", "thc", "thx", "tie", "tkk", "tlw", "tmp", "tne", "tnf", "tsf", "uok", "xba", "xia", "xkh", "xsj", "ybd", "yma", "ymt", "yos", "yuu"]), type$.JSArray_String);
    C.Map_YCOho = new H.ConstantStringMap(78, {in: "id", iw: "he", ji: "yi", jw: "jv", mo: "ro", aam: "aas", adp: "dz", aue: "ktz", ayx: "nun", bgm: "bcg", bjd: "drl", ccq: "rki", cjr: "mom", cka: "cmr", cmk: "xch", coy: "pij", cqu: "quh", drh: "khk", drw: "prs", gav: "dev", gfx: "vaj", ggn: "gvr", gti: "nyc", guv: "duz", hrr: "jal", ibi: "opa", ilw: "gal", jeg: "oyb", kgc: "tdf", kgh: "kml", koj: "kwv", krm: "bmf", ktr: "dtp", kvs: "gdj", kwq: "yam", kxe: "tvd", kzj: "dtp", kzt: "dtp", lii: "raq", lmm: "rmx", meg: "cir", mst: "mry", mwj: "vaj", myt: "mry", nad: "xny", ncp: "kdz", nnx: "ngv", nts: "pij", oun: "vaj", pcr: "adx", pmc: "huw", pmu: "phr", ppa: "bfy", ppr: "lcq", pry: "prt", puz: "pub", sca: "hle", skk: "oyb", tdu: "dtp", thc: "tpo", thx: "oyb", tie: "ras", tkk: "twm", tlw: "weo", tmp: "tyj", tne: "kak", tnf: "prs", tsf: "taj", uok: "ema", xba: "cax", xia: "acn", xkh: "waw", xsj: "suj", ybd: "rki", yma: "lrr", ymt: "mtm", yos: "zom", yuu: "yug"}, C.List_YCM, type$.ConstantStringMap_String_String);
    C.List_YVI = H.setRuntimeTypeInfo(makeConstList(["None", "Hyper", "Super", "FnLock", "Suspend", "Resume", "Turbo", "PrivacyScreenToggle", "Sleep", "WakeUp", "DisplayToggleIntExt", "KeyA", "KeyB", "KeyC", "KeyD", "KeyE", "KeyF", "KeyG", "KeyH", "KeyI", "KeyJ", "KeyK", "KeyL", "KeyM", "KeyN", "KeyO", "KeyP", "KeyQ", "KeyR", "KeyS", "KeyT", "KeyU", "KeyV", "KeyW", "KeyX", "KeyY", "KeyZ", "Digit1", "Digit2", "Digit3", "Digit4", "Digit5", "Digit6", "Digit7", "Digit8", "Digit9", "Digit0", "Enter", "Escape", "Backspace", "Tab", "Space", "Minus", "Equal", "BracketLeft", "BracketRight", "Backslash", "Semicolon", "Quote", "Backquote", "Comma", "Period", "Slash", "CapsLock", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "PrintScreen", "ScrollLock", "Pause", "Insert", "Home", "PageUp", "Delete", "End", "PageDown", "ArrowRight", "ArrowLeft", "ArrowDown", "ArrowUp", "NumLock", "NumpadDivide", "NumpadMultiply", "NumpadSubtract", "NumpadAdd", "NumpadEnter", "Numpad1", "Numpad2", "Numpad3", "Numpad4", "Numpad5", "Numpad6", "Numpad7", "Numpad8", "Numpad9", "Numpad0", "NumpadDecimal", "IntlBackslash", "ContextMenu", "Power", "NumpadEqual", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", "F21", "F22", "F23", "F24", "Open", "Help", "Select", "Again", "Undo", "Cut", "Copy", "Paste", "Find", "AudioVolumeMute", "AudioVolumeUp", "AudioVolumeDown", "NumpadComma", "IntlRo", "KanaMode", "IntlYen", "Convert", "NonConvert", "Lang1", "Lang2", "Lang3", "Lang4", "Lang5", "Abort", "Props", "NumpadParenLeft", "NumpadParenRight", "NumpadBackspace", "NumpadMemoryStore", "NumpadMemoryRecall", "NumpadMemoryClear", "NumpadMemoryAdd", "NumpadMemorySubtract", "NumpadClear", "NumpadClearEntry", "ControlLeft", "ShiftLeft", "AltLeft", "MetaLeft", "ControlRight", "ShiftRight", "AltRight", "MetaRight", "BrightnessUp", "BrightnessDown", "MediaPlay", "MediaPause", "MediaRecord", "MediaFastForward", "MediaRewind", "MediaTrackNext", "MediaTrackPrevious", "MediaStop", "Eject", "MediaPlayPause", "MediaSelect", "LaunchMail", "LaunchApp2", "LaunchApp1", "LaunchControlPanel", "SelectTask", "LaunchScreenSaver", "LaunchAssistant", "BrowserSearch", "BrowserHome", "BrowserBack", "BrowserForward", "BrowserStop", "BrowserRefresh", "BrowserFavorites", "ZoomToggle", "MailReply", "MailForward", "MailSend", "KeyboardLayoutSelect", "ShowAllWindows", "GameButton1", "GameButton2", "GameButton3", "GameButton4", "GameButton5", "GameButton6", "GameButton7", "GameButton8", "GameButton9", "GameButton10", "GameButton11", "GameButton12", "GameButton13", "GameButton14", "GameButton15", "GameButton16", "GameButtonA", "GameButtonB", "GameButtonC", "GameButtonLeft1", "GameButtonLeft2", "GameButtonMode", "GameButtonRight1", "GameButtonRight2", "GameButtonSelect", "GameButtonStart", "GameButtonThumbLeft", "GameButtonThumbRight", "GameButtonX", "GameButtonY", "GameButtonZ", "Fn"]), type$.JSArray_String);
    C.PhysicalKeyboardKey_0 = new G.PhysicalKeyboardKey(0);
    C.PhysicalKeyboardKey_16 = new G.PhysicalKeyboardKey(16);
    C.PhysicalKeyboardKey_17 = new G.PhysicalKeyboardKey(17);
    C.PhysicalKeyboardKey_19 = new G.PhysicalKeyboardKey(19);
    C.PhysicalKeyboardKey_20 = new G.PhysicalKeyboardKey(20);
    C.PhysicalKeyboardKey_21 = new G.PhysicalKeyboardKey(21);
    C.PhysicalKeyboardKey_22 = new G.PhysicalKeyboardKey(22);
    C.PhysicalKeyboardKey_23 = new G.PhysicalKeyboardKey(23);
    C.PhysicalKeyboardKey_65666 = new G.PhysicalKeyboardKey(65666);
    C.PhysicalKeyboardKey_65667 = new G.PhysicalKeyboardKey(65667);
    C.PhysicalKeyboardKey_65717 = new G.PhysicalKeyboardKey(65717);
    C.PhysicalKeyboardKey_458756 = new G.PhysicalKeyboardKey(458756);
    C.PhysicalKeyboardKey_458757 = new G.PhysicalKeyboardKey(458757);
    C.PhysicalKeyboardKey_458758 = new G.PhysicalKeyboardKey(458758);
    C.PhysicalKeyboardKey_458759 = new G.PhysicalKeyboardKey(458759);
    C.PhysicalKeyboardKey_458760 = new G.PhysicalKeyboardKey(458760);
    C.PhysicalKeyboardKey_458761 = new G.PhysicalKeyboardKey(458761);
    C.PhysicalKeyboardKey_458762 = new G.PhysicalKeyboardKey(458762);
    C.PhysicalKeyboardKey_458763 = new G.PhysicalKeyboardKey(458763);
    C.PhysicalKeyboardKey_458764 = new G.PhysicalKeyboardKey(458764);
    C.PhysicalKeyboardKey_458765 = new G.PhysicalKeyboardKey(458765);
    C.PhysicalKeyboardKey_458766 = new G.PhysicalKeyboardKey(458766);
    C.PhysicalKeyboardKey_458767 = new G.PhysicalKeyboardKey(458767);
    C.PhysicalKeyboardKey_458768 = new G.PhysicalKeyboardKey(458768);
    C.PhysicalKeyboardKey_458769 = new G.PhysicalKeyboardKey(458769);
    C.PhysicalKeyboardKey_458770 = new G.PhysicalKeyboardKey(458770);
    C.PhysicalKeyboardKey_458771 = new G.PhysicalKeyboardKey(458771);
    C.PhysicalKeyboardKey_458772 = new G.PhysicalKeyboardKey(458772);
    C.PhysicalKeyboardKey_458773 = new G.PhysicalKeyboardKey(458773);
    C.PhysicalKeyboardKey_458774 = new G.PhysicalKeyboardKey(458774);
    C.PhysicalKeyboardKey_458775 = new G.PhysicalKeyboardKey(458775);
    C.PhysicalKeyboardKey_458776 = new G.PhysicalKeyboardKey(458776);
    C.PhysicalKeyboardKey_458777 = new G.PhysicalKeyboardKey(458777);
    C.PhysicalKeyboardKey_458778 = new G.PhysicalKeyboardKey(458778);
    C.PhysicalKeyboardKey_458779 = new G.PhysicalKeyboardKey(458779);
    C.PhysicalKeyboardKey_458780 = new G.PhysicalKeyboardKey(458780);
    C.PhysicalKeyboardKey_458781 = new G.PhysicalKeyboardKey(458781);
    C.PhysicalKeyboardKey_458782 = new G.PhysicalKeyboardKey(458782);
    C.PhysicalKeyboardKey_458783 = new G.PhysicalKeyboardKey(458783);
    C.PhysicalKeyboardKey_458784 = new G.PhysicalKeyboardKey(458784);
    C.PhysicalKeyboardKey_458785 = new G.PhysicalKeyboardKey(458785);
    C.PhysicalKeyboardKey_458786 = new G.PhysicalKeyboardKey(458786);
    C.PhysicalKeyboardKey_458787 = new G.PhysicalKeyboardKey(458787);
    C.PhysicalKeyboardKey_458788 = new G.PhysicalKeyboardKey(458788);
    C.PhysicalKeyboardKey_458789 = new G.PhysicalKeyboardKey(458789);
    C.PhysicalKeyboardKey_458790 = new G.PhysicalKeyboardKey(458790);
    C.PhysicalKeyboardKey_458791 = new G.PhysicalKeyboardKey(458791);
    C.PhysicalKeyboardKey_458792 = new G.PhysicalKeyboardKey(458792);
    C.PhysicalKeyboardKey_458793 = new G.PhysicalKeyboardKey(458793);
    C.PhysicalKeyboardKey_458794 = new G.PhysicalKeyboardKey(458794);
    C.PhysicalKeyboardKey_458795 = new G.PhysicalKeyboardKey(458795);
    C.PhysicalKeyboardKey_458796 = new G.PhysicalKeyboardKey(458796);
    C.PhysicalKeyboardKey_458797 = new G.PhysicalKeyboardKey(458797);
    C.PhysicalKeyboardKey_458798 = new G.PhysicalKeyboardKey(458798);
    C.PhysicalKeyboardKey_458799 = new G.PhysicalKeyboardKey(458799);
    C.PhysicalKeyboardKey_458800 = new G.PhysicalKeyboardKey(458800);
    C.PhysicalKeyboardKey_458801 = new G.PhysicalKeyboardKey(458801);
    C.PhysicalKeyboardKey_458803 = new G.PhysicalKeyboardKey(458803);
    C.PhysicalKeyboardKey_458804 = new G.PhysicalKeyboardKey(458804);
    C.PhysicalKeyboardKey_458805 = new G.PhysicalKeyboardKey(458805);
    C.PhysicalKeyboardKey_458806 = new G.PhysicalKeyboardKey(458806);
    C.PhysicalKeyboardKey_458807 = new G.PhysicalKeyboardKey(458807);
    C.PhysicalKeyboardKey_458808 = new G.PhysicalKeyboardKey(458808);
    C.PhysicalKeyboardKey_458809 = new G.PhysicalKeyboardKey(458809);
    C.PhysicalKeyboardKey_458810 = new G.PhysicalKeyboardKey(458810);
    C.PhysicalKeyboardKey_458811 = new G.PhysicalKeyboardKey(458811);
    C.PhysicalKeyboardKey_458812 = new G.PhysicalKeyboardKey(458812);
    C.PhysicalKeyboardKey_458813 = new G.PhysicalKeyboardKey(458813);
    C.PhysicalKeyboardKey_458814 = new G.PhysicalKeyboardKey(458814);
    C.PhysicalKeyboardKey_458815 = new G.PhysicalKeyboardKey(458815);
    C.PhysicalKeyboardKey_458816 = new G.PhysicalKeyboardKey(458816);
    C.PhysicalKeyboardKey_458817 = new G.PhysicalKeyboardKey(458817);
    C.PhysicalKeyboardKey_458818 = new G.PhysicalKeyboardKey(458818);
    C.PhysicalKeyboardKey_458819 = new G.PhysicalKeyboardKey(458819);
    C.PhysicalKeyboardKey_458820 = new G.PhysicalKeyboardKey(458820);
    C.PhysicalKeyboardKey_458821 = new G.PhysicalKeyboardKey(458821);
    C.PhysicalKeyboardKey_458822 = new G.PhysicalKeyboardKey(458822);
    C.PhysicalKeyboardKey_458823 = new G.PhysicalKeyboardKey(458823);
    C.PhysicalKeyboardKey_458824 = new G.PhysicalKeyboardKey(458824);
    C.PhysicalKeyboardKey_458825 = new G.PhysicalKeyboardKey(458825);
    C.PhysicalKeyboardKey_458826 = new G.PhysicalKeyboardKey(458826);
    C.PhysicalKeyboardKey_458827 = new G.PhysicalKeyboardKey(458827);
    C.PhysicalKeyboardKey_458828 = new G.PhysicalKeyboardKey(458828);
    C.PhysicalKeyboardKey_458829 = new G.PhysicalKeyboardKey(458829);
    C.PhysicalKeyboardKey_458830 = new G.PhysicalKeyboardKey(458830);
    C.PhysicalKeyboardKey_458831 = new G.PhysicalKeyboardKey(458831);
    C.PhysicalKeyboardKey_458832 = new G.PhysicalKeyboardKey(458832);
    C.PhysicalKeyboardKey_458833 = new G.PhysicalKeyboardKey(458833);
    C.PhysicalKeyboardKey_458834 = new G.PhysicalKeyboardKey(458834);
    C.PhysicalKeyboardKey_458835 = new G.PhysicalKeyboardKey(458835);
    C.PhysicalKeyboardKey_458836 = new G.PhysicalKeyboardKey(458836);
    C.PhysicalKeyboardKey_458837 = new G.PhysicalKeyboardKey(458837);
    C.PhysicalKeyboardKey_458838 = new G.PhysicalKeyboardKey(458838);
    C.PhysicalKeyboardKey_458839 = new G.PhysicalKeyboardKey(458839);
    C.PhysicalKeyboardKey_458840 = new G.PhysicalKeyboardKey(458840);
    C.PhysicalKeyboardKey_458841 = new G.PhysicalKeyboardKey(458841);
    C.PhysicalKeyboardKey_458842 = new G.PhysicalKeyboardKey(458842);
    C.PhysicalKeyboardKey_458843 = new G.PhysicalKeyboardKey(458843);
    C.PhysicalKeyboardKey_458844 = new G.PhysicalKeyboardKey(458844);
    C.PhysicalKeyboardKey_458845 = new G.PhysicalKeyboardKey(458845);
    C.PhysicalKeyboardKey_458846 = new G.PhysicalKeyboardKey(458846);
    C.PhysicalKeyboardKey_458847 = new G.PhysicalKeyboardKey(458847);
    C.PhysicalKeyboardKey_458848 = new G.PhysicalKeyboardKey(458848);
    C.PhysicalKeyboardKey_458849 = new G.PhysicalKeyboardKey(458849);
    C.PhysicalKeyboardKey_458850 = new G.PhysicalKeyboardKey(458850);
    C.PhysicalKeyboardKey_458851 = new G.PhysicalKeyboardKey(458851);
    C.PhysicalKeyboardKey_458852 = new G.PhysicalKeyboardKey(458852);
    C.PhysicalKeyboardKey_458853 = new G.PhysicalKeyboardKey(458853);
    C.PhysicalKeyboardKey_458854 = new G.PhysicalKeyboardKey(458854);
    C.PhysicalKeyboardKey_458855 = new G.PhysicalKeyboardKey(458855);
    C.PhysicalKeyboardKey_458856 = new G.PhysicalKeyboardKey(458856);
    C.PhysicalKeyboardKey_458857 = new G.PhysicalKeyboardKey(458857);
    C.PhysicalKeyboardKey_458858 = new G.PhysicalKeyboardKey(458858);
    C.PhysicalKeyboardKey_458859 = new G.PhysicalKeyboardKey(458859);
    C.PhysicalKeyboardKey_458860 = new G.PhysicalKeyboardKey(458860);
    C.PhysicalKeyboardKey_458861 = new G.PhysicalKeyboardKey(458861);
    C.PhysicalKeyboardKey_458862 = new G.PhysicalKeyboardKey(458862);
    C.PhysicalKeyboardKey_458863 = new G.PhysicalKeyboardKey(458863);
    C.PhysicalKeyboardKey_458864 = new G.PhysicalKeyboardKey(458864);
    C.PhysicalKeyboardKey_458865 = new G.PhysicalKeyboardKey(458865);
    C.PhysicalKeyboardKey_458866 = new G.PhysicalKeyboardKey(458866);
    C.PhysicalKeyboardKey_458867 = new G.PhysicalKeyboardKey(458867);
    C.PhysicalKeyboardKey_458868 = new G.PhysicalKeyboardKey(458868);
    C.PhysicalKeyboardKey_458869 = new G.PhysicalKeyboardKey(458869);
    C.PhysicalKeyboardKey_458871 = new G.PhysicalKeyboardKey(458871);
    C.PhysicalKeyboardKey_458873 = new G.PhysicalKeyboardKey(458873);
    C.PhysicalKeyboardKey_458874 = new G.PhysicalKeyboardKey(458874);
    C.PhysicalKeyboardKey_458875 = new G.PhysicalKeyboardKey(458875);
    C.PhysicalKeyboardKey_458876 = new G.PhysicalKeyboardKey(458876);
    C.PhysicalKeyboardKey_458877 = new G.PhysicalKeyboardKey(458877);
    C.PhysicalKeyboardKey_458878 = new G.PhysicalKeyboardKey(458878);
    C.PhysicalKeyboardKey_458879 = new G.PhysicalKeyboardKey(458879);
    C.PhysicalKeyboardKey_458880 = new G.PhysicalKeyboardKey(458880);
    C.PhysicalKeyboardKey_458881 = new G.PhysicalKeyboardKey(458881);
    C.PhysicalKeyboardKey_458885 = new G.PhysicalKeyboardKey(458885);
    C.PhysicalKeyboardKey_458887 = new G.PhysicalKeyboardKey(458887);
    C.PhysicalKeyboardKey_458888 = new G.PhysicalKeyboardKey(458888);
    C.PhysicalKeyboardKey_458889 = new G.PhysicalKeyboardKey(458889);
    C.PhysicalKeyboardKey_458890 = new G.PhysicalKeyboardKey(458890);
    C.PhysicalKeyboardKey_458891 = new G.PhysicalKeyboardKey(458891);
    C.PhysicalKeyboardKey_458896 = new G.PhysicalKeyboardKey(458896);
    C.PhysicalKeyboardKey_458897 = new G.PhysicalKeyboardKey(458897);
    C.PhysicalKeyboardKey_458898 = new G.PhysicalKeyboardKey(458898);
    C.PhysicalKeyboardKey_458899 = new G.PhysicalKeyboardKey(458899);
    C.PhysicalKeyboardKey_458900 = new G.PhysicalKeyboardKey(458900);
    C.PhysicalKeyboardKey_458907 = new G.PhysicalKeyboardKey(458907);
    C.PhysicalKeyboardKey_458915 = new G.PhysicalKeyboardKey(458915);
    C.PhysicalKeyboardKey_458934 = new G.PhysicalKeyboardKey(458934);
    C.PhysicalKeyboardKey_458935 = new G.PhysicalKeyboardKey(458935);
    C.PhysicalKeyboardKey_458939 = new G.PhysicalKeyboardKey(458939);
    C.PhysicalKeyboardKey_458960 = new G.PhysicalKeyboardKey(458960);
    C.PhysicalKeyboardKey_458961 = new G.PhysicalKeyboardKey(458961);
    C.PhysicalKeyboardKey_458962 = new G.PhysicalKeyboardKey(458962);
    C.PhysicalKeyboardKey_458963 = new G.PhysicalKeyboardKey(458963);
    C.PhysicalKeyboardKey_458964 = new G.PhysicalKeyboardKey(458964);
    C.PhysicalKeyboardKey_458968 = new G.PhysicalKeyboardKey(458968);
    C.PhysicalKeyboardKey_458969 = new G.PhysicalKeyboardKey(458969);
    C.PhysicalKeyboardKey_458976 = new G.PhysicalKeyboardKey(458976);
    C.PhysicalKeyboardKey_458977 = new G.PhysicalKeyboardKey(458977);
    C.PhysicalKeyboardKey_458978 = new G.PhysicalKeyboardKey(458978);
    C.PhysicalKeyboardKey_458979 = new G.PhysicalKeyboardKey(458979);
    C.PhysicalKeyboardKey_458980 = new G.PhysicalKeyboardKey(458980);
    C.PhysicalKeyboardKey_458981 = new G.PhysicalKeyboardKey(458981);
    C.PhysicalKeyboardKey_458982 = new G.PhysicalKeyboardKey(458982);
    C.PhysicalKeyboardKey_458983 = new G.PhysicalKeyboardKey(458983);
    C.PhysicalKeyboardKey_786543 = new G.PhysicalKeyboardKey(786543);
    C.PhysicalKeyboardKey_786544 = new G.PhysicalKeyboardKey(786544);
    C.PhysicalKeyboardKey_786608 = new G.PhysicalKeyboardKey(786608);
    C.PhysicalKeyboardKey_786609 = new G.PhysicalKeyboardKey(786609);
    C.PhysicalKeyboardKey_786610 = new G.PhysicalKeyboardKey(786610);
    C.PhysicalKeyboardKey_786611 = new G.PhysicalKeyboardKey(786611);
    C.PhysicalKeyboardKey_786612 = new G.PhysicalKeyboardKey(786612);
    C.PhysicalKeyboardKey_786613 = new G.PhysicalKeyboardKey(786613);
    C.PhysicalKeyboardKey_786614 = new G.PhysicalKeyboardKey(786614);
    C.PhysicalKeyboardKey_786615 = new G.PhysicalKeyboardKey(786615);
    C.PhysicalKeyboardKey_786616 = new G.PhysicalKeyboardKey(786616);
    C.PhysicalKeyboardKey_786637 = new G.PhysicalKeyboardKey(786637);
    C.PhysicalKeyboardKey_786819 = new G.PhysicalKeyboardKey(786819);
    C.PhysicalKeyboardKey_786826 = new G.PhysicalKeyboardKey(786826);
    C.PhysicalKeyboardKey_786834 = new G.PhysicalKeyboardKey(786834);
    C.PhysicalKeyboardKey_786836 = new G.PhysicalKeyboardKey(786836);
    C.PhysicalKeyboardKey_786847 = new G.PhysicalKeyboardKey(786847);
    C.PhysicalKeyboardKey_786850 = new G.PhysicalKeyboardKey(786850);
    C.PhysicalKeyboardKey_786865 = new G.PhysicalKeyboardKey(786865);
    C.PhysicalKeyboardKey_786891 = new G.PhysicalKeyboardKey(786891);
    C.PhysicalKeyboardKey_786977 = new G.PhysicalKeyboardKey(786977);
    C.PhysicalKeyboardKey_786979 = new G.PhysicalKeyboardKey(786979);
    C.PhysicalKeyboardKey_786980 = new G.PhysicalKeyboardKey(786980);
    C.PhysicalKeyboardKey_786981 = new G.PhysicalKeyboardKey(786981);
    C.PhysicalKeyboardKey_786982 = new G.PhysicalKeyboardKey(786982);
    C.PhysicalKeyboardKey_786983 = new G.PhysicalKeyboardKey(786983);
    C.PhysicalKeyboardKey_786986 = new G.PhysicalKeyboardKey(786986);
    C.PhysicalKeyboardKey_786994 = new G.PhysicalKeyboardKey(786994);
    C.PhysicalKeyboardKey_787081 = new G.PhysicalKeyboardKey(787081);
    C.PhysicalKeyboardKey_787083 = new G.PhysicalKeyboardKey(787083);
    C.PhysicalKeyboardKey_787084 = new G.PhysicalKeyboardKey(787084);
    C.PhysicalKeyboardKey_787101 = new G.PhysicalKeyboardKey(787101);
    C.PhysicalKeyboardKey_787103 = new G.PhysicalKeyboardKey(787103);
    C.PhysicalKeyboardKey_392961 = new G.PhysicalKeyboardKey(392961);
    C.PhysicalKeyboardKey_392962 = new G.PhysicalKeyboardKey(392962);
    C.PhysicalKeyboardKey_392963 = new G.PhysicalKeyboardKey(392963);
    C.PhysicalKeyboardKey_392964 = new G.PhysicalKeyboardKey(392964);
    C.PhysicalKeyboardKey_392965 = new G.PhysicalKeyboardKey(392965);
    C.PhysicalKeyboardKey_392966 = new G.PhysicalKeyboardKey(392966);
    C.PhysicalKeyboardKey_392967 = new G.PhysicalKeyboardKey(392967);
    C.PhysicalKeyboardKey_392968 = new G.PhysicalKeyboardKey(392968);
    C.PhysicalKeyboardKey_392969 = new G.PhysicalKeyboardKey(392969);
    C.PhysicalKeyboardKey_392970 = new G.PhysicalKeyboardKey(392970);
    C.PhysicalKeyboardKey_392971 = new G.PhysicalKeyboardKey(392971);
    C.PhysicalKeyboardKey_392972 = new G.PhysicalKeyboardKey(392972);
    C.PhysicalKeyboardKey_392973 = new G.PhysicalKeyboardKey(392973);
    C.PhysicalKeyboardKey_392974 = new G.PhysicalKeyboardKey(392974);
    C.PhysicalKeyboardKey_392975 = new G.PhysicalKeyboardKey(392975);
    C.PhysicalKeyboardKey_392976 = new G.PhysicalKeyboardKey(392976);
    C.PhysicalKeyboardKey_392977 = new G.PhysicalKeyboardKey(392977);
    C.PhysicalKeyboardKey_392978 = new G.PhysicalKeyboardKey(392978);
    C.PhysicalKeyboardKey_392979 = new G.PhysicalKeyboardKey(392979);
    C.PhysicalKeyboardKey_392980 = new G.PhysicalKeyboardKey(392980);
    C.PhysicalKeyboardKey_392981 = new G.PhysicalKeyboardKey(392981);
    C.PhysicalKeyboardKey_392982 = new G.PhysicalKeyboardKey(392982);
    C.PhysicalKeyboardKey_392983 = new G.PhysicalKeyboardKey(392983);
    C.PhysicalKeyboardKey_392984 = new G.PhysicalKeyboardKey(392984);
    C.PhysicalKeyboardKey_392985 = new G.PhysicalKeyboardKey(392985);
    C.PhysicalKeyboardKey_392986 = new G.PhysicalKeyboardKey(392986);
    C.PhysicalKeyboardKey_392987 = new G.PhysicalKeyboardKey(392987);
    C.PhysicalKeyboardKey_392988 = new G.PhysicalKeyboardKey(392988);
    C.PhysicalKeyboardKey_392989 = new G.PhysicalKeyboardKey(392989);
    C.PhysicalKeyboardKey_392990 = new G.PhysicalKeyboardKey(392990);
    C.PhysicalKeyboardKey_392991 = new G.PhysicalKeyboardKey(392991);
    C.PhysicalKeyboardKey_18 = new G.PhysicalKeyboardKey(18);
    C.Map_YV2No = new H.ConstantStringMap(230, {None: C.PhysicalKeyboardKey_0, Hyper: C.PhysicalKeyboardKey_16, Super: C.PhysicalKeyboardKey_17, FnLock: C.PhysicalKeyboardKey_19, Suspend: C.PhysicalKeyboardKey_20, Resume: C.PhysicalKeyboardKey_21, Turbo: C.PhysicalKeyboardKey_22, PrivacyScreenToggle: C.PhysicalKeyboardKey_23, Sleep: C.PhysicalKeyboardKey_65666, WakeUp: C.PhysicalKeyboardKey_65667, DisplayToggleIntExt: C.PhysicalKeyboardKey_65717, KeyA: C.PhysicalKeyboardKey_458756, KeyB: C.PhysicalKeyboardKey_458757, KeyC: C.PhysicalKeyboardKey_458758, KeyD: C.PhysicalKeyboardKey_458759, KeyE: C.PhysicalKeyboardKey_458760, KeyF: C.PhysicalKeyboardKey_458761, KeyG: C.PhysicalKeyboardKey_458762, KeyH: C.PhysicalKeyboardKey_458763, KeyI: C.PhysicalKeyboardKey_458764, KeyJ: C.PhysicalKeyboardKey_458765, KeyK: C.PhysicalKeyboardKey_458766, KeyL: C.PhysicalKeyboardKey_458767, KeyM: C.PhysicalKeyboardKey_458768, KeyN: C.PhysicalKeyboardKey_458769, KeyO: C.PhysicalKeyboardKey_458770, KeyP: C.PhysicalKeyboardKey_458771, KeyQ: C.PhysicalKeyboardKey_458772, KeyR: C.PhysicalKeyboardKey_458773, KeyS: C.PhysicalKeyboardKey_458774, KeyT: C.PhysicalKeyboardKey_458775, KeyU: C.PhysicalKeyboardKey_458776, KeyV: C.PhysicalKeyboardKey_458777, KeyW: C.PhysicalKeyboardKey_458778, KeyX: C.PhysicalKeyboardKey_458779, KeyY: C.PhysicalKeyboardKey_458780, KeyZ: C.PhysicalKeyboardKey_458781, Digit1: C.PhysicalKeyboardKey_458782, Digit2: C.PhysicalKeyboardKey_458783, Digit3: C.PhysicalKeyboardKey_458784, Digit4: C.PhysicalKeyboardKey_458785, Digit5: C.PhysicalKeyboardKey_458786, Digit6: C.PhysicalKeyboardKey_458787, Digit7: C.PhysicalKeyboardKey_458788, Digit8: C.PhysicalKeyboardKey_458789, Digit9: C.PhysicalKeyboardKey_458790, Digit0: C.PhysicalKeyboardKey_458791, Enter: C.PhysicalKeyboardKey_458792, Escape: C.PhysicalKeyboardKey_458793, Backspace: C.PhysicalKeyboardKey_458794, Tab: C.PhysicalKeyboardKey_458795, Space: C.PhysicalKeyboardKey_458796, Minus: C.PhysicalKeyboardKey_458797, Equal: C.PhysicalKeyboardKey_458798, BracketLeft: C.PhysicalKeyboardKey_458799, BracketRight: C.PhysicalKeyboardKey_458800, Backslash: C.PhysicalKeyboardKey_458801, Semicolon: C.PhysicalKeyboardKey_458803, Quote: C.PhysicalKeyboardKey_458804, Backquote: C.PhysicalKeyboardKey_458805, Comma: C.PhysicalKeyboardKey_458806, Period: C.PhysicalKeyboardKey_458807, Slash: C.PhysicalKeyboardKey_458808, CapsLock: C.PhysicalKeyboardKey_458809, F1: C.PhysicalKeyboardKey_458810, F2: C.PhysicalKeyboardKey_458811, F3: C.PhysicalKeyboardKey_458812, F4: C.PhysicalKeyboardKey_458813, F5: C.PhysicalKeyboardKey_458814, F6: C.PhysicalKeyboardKey_458815, F7: C.PhysicalKeyboardKey_458816, F8: C.PhysicalKeyboardKey_458817, F9: C.PhysicalKeyboardKey_458818, F10: C.PhysicalKeyboardKey_458819, F11: C.PhysicalKeyboardKey_458820, F12: C.PhysicalKeyboardKey_458821, PrintScreen: C.PhysicalKeyboardKey_458822, ScrollLock: C.PhysicalKeyboardKey_458823, Pause: C.PhysicalKeyboardKey_458824, Insert: C.PhysicalKeyboardKey_458825, Home: C.PhysicalKeyboardKey_458826, PageUp: C.PhysicalKeyboardKey_458827, Delete: C.PhysicalKeyboardKey_458828, End: C.PhysicalKeyboardKey_458829, PageDown: C.PhysicalKeyboardKey_458830, ArrowRight: C.PhysicalKeyboardKey_458831, ArrowLeft: C.PhysicalKeyboardKey_458832, ArrowDown: C.PhysicalKeyboardKey_458833, ArrowUp: C.PhysicalKeyboardKey_458834, NumLock: C.PhysicalKeyboardKey_458835, NumpadDivide: C.PhysicalKeyboardKey_458836, NumpadMultiply: C.PhysicalKeyboardKey_458837, NumpadSubtract: C.PhysicalKeyboardKey_458838, NumpadAdd: C.PhysicalKeyboardKey_458839, NumpadEnter: C.PhysicalKeyboardKey_458840, Numpad1: C.PhysicalKeyboardKey_458841, Numpad2: C.PhysicalKeyboardKey_458842, Numpad3: C.PhysicalKeyboardKey_458843, Numpad4: C.PhysicalKeyboardKey_458844, Numpad5: C.PhysicalKeyboardKey_458845, Numpad6: C.PhysicalKeyboardKey_458846, Numpad7: C.PhysicalKeyboardKey_458847, Numpad8: C.PhysicalKeyboardKey_458848, Numpad9: C.PhysicalKeyboardKey_458849, Numpad0: C.PhysicalKeyboardKey_458850, NumpadDecimal: C.PhysicalKeyboardKey_458851, IntlBackslash: C.PhysicalKeyboardKey_458852, ContextMenu: C.PhysicalKeyboardKey_458853, Power: C.PhysicalKeyboardKey_458854, NumpadEqual: C.PhysicalKeyboardKey_458855, F13: C.PhysicalKeyboardKey_458856, F14: C.PhysicalKeyboardKey_458857, F15: C.PhysicalKeyboardKey_458858, F16: C.PhysicalKeyboardKey_458859, F17: C.PhysicalKeyboardKey_458860, F18: C.PhysicalKeyboardKey_458861, F19: C.PhysicalKeyboardKey_458862, F20: C.PhysicalKeyboardKey_458863, F21: C.PhysicalKeyboardKey_458864, F22: C.PhysicalKeyboardKey_458865, F23: C.PhysicalKeyboardKey_458866, F24: C.PhysicalKeyboardKey_458867, Open: C.PhysicalKeyboardKey_458868, Help: C.PhysicalKeyboardKey_458869, Select: C.PhysicalKeyboardKey_458871, Again: C.PhysicalKeyboardKey_458873, Undo: C.PhysicalKeyboardKey_458874, Cut: C.PhysicalKeyboardKey_458875, Copy: C.PhysicalKeyboardKey_458876, Paste: C.PhysicalKeyboardKey_458877, Find: C.PhysicalKeyboardKey_458878, AudioVolumeMute: C.PhysicalKeyboardKey_458879, AudioVolumeUp: C.PhysicalKeyboardKey_458880, AudioVolumeDown: C.PhysicalKeyboardKey_458881, NumpadComma: C.PhysicalKeyboardKey_458885, IntlRo: C.PhysicalKeyboardKey_458887, KanaMode: C.PhysicalKeyboardKey_458888, IntlYen: C.PhysicalKeyboardKey_458889, Convert: C.PhysicalKeyboardKey_458890, NonConvert: C.PhysicalKeyboardKey_458891, Lang1: C.PhysicalKeyboardKey_458896, Lang2: C.PhysicalKeyboardKey_458897, Lang3: C.PhysicalKeyboardKey_458898, Lang4: C.PhysicalKeyboardKey_458899, Lang5: C.PhysicalKeyboardKey_458900, Abort: C.PhysicalKeyboardKey_458907, Props: C.PhysicalKeyboardKey_458915, NumpadParenLeft: C.PhysicalKeyboardKey_458934, NumpadParenRight: C.PhysicalKeyboardKey_458935, NumpadBackspace: C.PhysicalKeyboardKey_458939, NumpadMemoryStore: C.PhysicalKeyboardKey_458960, NumpadMemoryRecall: C.PhysicalKeyboardKey_458961, NumpadMemoryClear: C.PhysicalKeyboardKey_458962, NumpadMemoryAdd: C.PhysicalKeyboardKey_458963, NumpadMemorySubtract: C.PhysicalKeyboardKey_458964, NumpadClear: C.PhysicalKeyboardKey_458968, NumpadClearEntry: C.PhysicalKeyboardKey_458969, ControlLeft: C.PhysicalKeyboardKey_458976, ShiftLeft: C.PhysicalKeyboardKey_458977, AltLeft: C.PhysicalKeyboardKey_458978, MetaLeft: C.PhysicalKeyboardKey_458979, ControlRight: C.PhysicalKeyboardKey_458980, ShiftRight: C.PhysicalKeyboardKey_458981, AltRight: C.PhysicalKeyboardKey_458982, MetaRight: C.PhysicalKeyboardKey_458983, BrightnessUp: C.PhysicalKeyboardKey_786543, BrightnessDown: C.PhysicalKeyboardKey_786544, MediaPlay: C.PhysicalKeyboardKey_786608, MediaPause: C.PhysicalKeyboardKey_786609, MediaRecord: C.PhysicalKeyboardKey_786610, MediaFastForward: C.PhysicalKeyboardKey_786611, MediaRewind: C.PhysicalKeyboardKey_786612, MediaTrackNext: C.PhysicalKeyboardKey_786613, MediaTrackPrevious: C.PhysicalKeyboardKey_786614, MediaStop: C.PhysicalKeyboardKey_786615, Eject: C.PhysicalKeyboardKey_786616, MediaPlayPause: C.PhysicalKeyboardKey_786637, MediaSelect: C.PhysicalKeyboardKey_786819, LaunchMail: C.PhysicalKeyboardKey_786826, LaunchApp2: C.PhysicalKeyboardKey_786834, LaunchApp1: C.PhysicalKeyboardKey_786836, LaunchControlPanel: C.PhysicalKeyboardKey_786847, SelectTask: C.PhysicalKeyboardKey_786850, LaunchScreenSaver: C.PhysicalKeyboardKey_786865, LaunchAssistant: C.PhysicalKeyboardKey_786891, BrowserSearch: C.PhysicalKeyboardKey_786977, BrowserHome: C.PhysicalKeyboardKey_786979, BrowserBack: C.PhysicalKeyboardKey_786980, BrowserForward: C.PhysicalKeyboardKey_786981, BrowserStop: C.PhysicalKeyboardKey_786982, BrowserRefresh: C.PhysicalKeyboardKey_786983, BrowserFavorites: C.PhysicalKeyboardKey_786986, ZoomToggle: C.PhysicalKeyboardKey_786994, MailReply: C.PhysicalKeyboardKey_787081, MailForward: C.PhysicalKeyboardKey_787083, MailSend: C.PhysicalKeyboardKey_787084, KeyboardLayoutSelect: C.PhysicalKeyboardKey_787101, ShowAllWindows: C.PhysicalKeyboardKey_787103, GameButton1: C.PhysicalKeyboardKey_392961, GameButton2: C.PhysicalKeyboardKey_392962, GameButton3: C.PhysicalKeyboardKey_392963, GameButton4: C.PhysicalKeyboardKey_392964, GameButton5: C.PhysicalKeyboardKey_392965, GameButton6: C.PhysicalKeyboardKey_392966, GameButton7: C.PhysicalKeyboardKey_392967, GameButton8: C.PhysicalKeyboardKey_392968, GameButton9: C.PhysicalKeyboardKey_392969, GameButton10: C.PhysicalKeyboardKey_392970, GameButton11: C.PhysicalKeyboardKey_392971, GameButton12: C.PhysicalKeyboardKey_392972, GameButton13: C.PhysicalKeyboardKey_392973, GameButton14: C.PhysicalKeyboardKey_392974, GameButton15: C.PhysicalKeyboardKey_392975, GameButton16: C.PhysicalKeyboardKey_392976, GameButtonA: C.PhysicalKeyboardKey_392977, GameButtonB: C.PhysicalKeyboardKey_392978, GameButtonC: C.PhysicalKeyboardKey_392979, GameButtonLeft1: C.PhysicalKeyboardKey_392980, GameButtonLeft2: C.PhysicalKeyboardKey_392981, GameButtonMode: C.PhysicalKeyboardKey_392982, GameButtonRight1: C.PhysicalKeyboardKey_392983, GameButtonRight2: C.PhysicalKeyboardKey_392984, GameButtonSelect: C.PhysicalKeyboardKey_392985, GameButtonStart: C.PhysicalKeyboardKey_392986, GameButtonThumbLeft: C.PhysicalKeyboardKey_392987, GameButtonThumbRight: C.PhysicalKeyboardKey_392988, GameButtonX: C.PhysicalKeyboardKey_392989, GameButtonY: C.PhysicalKeyboardKey_392990, GameButtonZ: C.PhysicalKeyboardKey_392991, Fn: C.PhysicalKeyboardKey_18}, C.List_YVI, H.findType("ConstantStringMap<String,PhysicalKeyboardKey>"));
    C.Map_YV6he = new H.ConstantStringMap(230, {None: 0, Hyper: 16, Super: 17, FnLock: 19, Suspend: 20, Resume: 21, Turbo: 22, PrivacyScreenToggle: 23, Sleep: 65666, WakeUp: 65667, DisplayToggleIntExt: 65717, KeyA: 458756, KeyB: 458757, KeyC: 458758, KeyD: 458759, KeyE: 458760, KeyF: 458761, KeyG: 458762, KeyH: 458763, KeyI: 458764, KeyJ: 458765, KeyK: 458766, KeyL: 458767, KeyM: 458768, KeyN: 458769, KeyO: 458770, KeyP: 458771, KeyQ: 458772, KeyR: 458773, KeyS: 458774, KeyT: 458775, KeyU: 458776, KeyV: 458777, KeyW: 458778, KeyX: 458779, KeyY: 458780, KeyZ: 458781, Digit1: 458782, Digit2: 458783, Digit3: 458784, Digit4: 458785, Digit5: 458786, Digit6: 458787, Digit7: 458788, Digit8: 458789, Digit9: 458790, Digit0: 458791, Enter: 458792, Escape: 458793, Backspace: 458794, Tab: 458795, Space: 458796, Minus: 458797, Equal: 458798, BracketLeft: 458799, BracketRight: 458800, Backslash: 458801, Semicolon: 458803, Quote: 458804, Backquote: 458805, Comma: 458806, Period: 458807, Slash: 458808, CapsLock: 458809, F1: 458810, F2: 458811, F3: 458812, F4: 458813, F5: 458814, F6: 458815, F7: 458816, F8: 458817, F9: 458818, F10: 458819, F11: 458820, F12: 458821, PrintScreen: 458822, ScrollLock: 458823, Pause: 458824, Insert: 458825, Home: 458826, PageUp: 458827, Delete: 458828, End: 458829, PageDown: 458830, ArrowRight: 458831, ArrowLeft: 458832, ArrowDown: 458833, ArrowUp: 458834, NumLock: 458835, NumpadDivide: 458836, NumpadMultiply: 458837, NumpadSubtract: 458838, NumpadAdd: 458839, NumpadEnter: 458840, Numpad1: 458841, Numpad2: 458842, Numpad3: 458843, Numpad4: 458844, Numpad5: 458845, Numpad6: 458846, Numpad7: 458847, Numpad8: 458848, Numpad9: 458849, Numpad0: 458850, NumpadDecimal: 458851, IntlBackslash: 458852, ContextMenu: 458853, Power: 458854, NumpadEqual: 458855, F13: 458856, F14: 458857, F15: 458858, F16: 458859, F17: 458860, F18: 458861, F19: 458862, F20: 458863, F21: 458864, F22: 458865, F23: 458866, F24: 458867, Open: 458868, Help: 458869, Select: 458871, Again: 458873, Undo: 458874, Cut: 458875, Copy: 458876, Paste: 458877, Find: 458878, AudioVolumeMute: 458879, AudioVolumeUp: 458880, AudioVolumeDown: 458881, NumpadComma: 458885, IntlRo: 458887, KanaMode: 458888, IntlYen: 458889, Convert: 458890, NonConvert: 458891, Lang1: 458896, Lang2: 458897, Lang3: 458898, Lang4: 458899, Lang5: 458900, Abort: 458907, Props: 458915, NumpadParenLeft: 458934, NumpadParenRight: 458935, NumpadBackspace: 458939, NumpadMemoryStore: 458960, NumpadMemoryRecall: 458961, NumpadMemoryClear: 458962, NumpadMemoryAdd: 458963, NumpadMemorySubtract: 458964, NumpadClear: 458968, NumpadClearEntry: 458969, ControlLeft: 458976, ShiftLeft: 458977, AltLeft: 458978, MetaLeft: 458979, ControlRight: 458980, ShiftRight: 458981, AltRight: 458982, MetaRight: 458983, BrightnessUp: 786543, BrightnessDown: 786544, MediaPlay: 786608, MediaPause: 786609, MediaRecord: 786610, MediaFastForward: 786611, MediaRewind: 786612, MediaTrackNext: 786613, MediaTrackPrevious: 786614, MediaStop: 786615, Eject: 786616, MediaPlayPause: 786637, MediaSelect: 786819, LaunchMail: 786826, LaunchApp2: 786834, LaunchApp1: 786836, LaunchControlPanel: 786847, SelectTask: 786850, LaunchScreenSaver: 786865, LaunchAssistant: 786891, BrowserSearch: 786977, BrowserHome: 786979, BrowserBack: 786980, BrowserForward: 786981, BrowserStop: 786982, BrowserRefresh: 786983, BrowserFavorites: 786986, ZoomToggle: 786994, MailReply: 787081, MailForward: 787083, MailSend: 787084, KeyboardLayoutSelect: 787101, ShowAllWindows: 787103, GameButton1: 392961, GameButton2: 392962, GameButton3: 392963, GameButton4: 392964, GameButton5: 392965, GameButton6: 392966, GameButton7: 392967, GameButton8: 392968, GameButton9: 392969, GameButton10: 392970, GameButton11: 392971, GameButton12: 392972, GameButton13: 392973, GameButton14: 392974, GameButton15: 392975, GameButton16: 392976, GameButtonA: 392977, GameButtonB: 392978, GameButtonC: 392979, GameButtonLeft1: 392980, GameButtonLeft2: 392981, GameButtonMode: 392982, GameButtonRight1: 392983, GameButtonRight2: 392984, GameButtonSelect: 392985, GameButtonStart: 392986, GameButtonThumbLeft: 392987, GameButtonThumbRight: 392988, GameButtonX: 392989, GameButtonY: 392990, GameButtonZ: 392991, Fn: 18}, C.List_YVI, type$.ConstantStringMap_String_int);
    C.LogicalKeyboardKey_4294967296 = new G.LogicalKeyboardKey(4294967296);
    C.LogicalKeyboardKey_4294967312 = new G.LogicalKeyboardKey(4294967312);
    C.LogicalKeyboardKey_4294967313 = new G.LogicalKeyboardKey(4294967313);
    C.LogicalKeyboardKey_4294967315 = new G.LogicalKeyboardKey(4294967315);
    C.LogicalKeyboardKey_4294967316 = new G.LogicalKeyboardKey(4294967316);
    C.LogicalKeyboardKey_4294967317 = new G.LogicalKeyboardKey(4294967317);
    C.LogicalKeyboardKey_4294967318 = new G.LogicalKeyboardKey(4294967318);
    C.LogicalKeyboardKey_4294967319 = new G.LogicalKeyboardKey(4294967319);
    C.LogicalKeyboardKey_4295032962 = new G.LogicalKeyboardKey(4295032962);
    C.LogicalKeyboardKey_4295032963 = new G.LogicalKeyboardKey(4295032963);
    C.LogicalKeyboardKey_4295033013 = new G.LogicalKeyboardKey(4295033013);
    C.LogicalKeyboardKey_97 = new G.LogicalKeyboardKey(97);
    C.LogicalKeyboardKey_98 = new G.LogicalKeyboardKey(98);
    C.LogicalKeyboardKey_99 = new G.LogicalKeyboardKey(99);
    C.LogicalKeyboardKey_100 = new G.LogicalKeyboardKey(100);
    C.LogicalKeyboardKey_101 = new G.LogicalKeyboardKey(101);
    C.LogicalKeyboardKey_102 = new G.LogicalKeyboardKey(102);
    C.LogicalKeyboardKey_103 = new G.LogicalKeyboardKey(103);
    C.LogicalKeyboardKey_104 = new G.LogicalKeyboardKey(104);
    C.LogicalKeyboardKey_105 = new G.LogicalKeyboardKey(105);
    C.LogicalKeyboardKey_106 = new G.LogicalKeyboardKey(106);
    C.LogicalKeyboardKey_107 = new G.LogicalKeyboardKey(107);
    C.LogicalKeyboardKey_108 = new G.LogicalKeyboardKey(108);
    C.LogicalKeyboardKey_109 = new G.LogicalKeyboardKey(109);
    C.LogicalKeyboardKey_110 = new G.LogicalKeyboardKey(110);
    C.LogicalKeyboardKey_111 = new G.LogicalKeyboardKey(111);
    C.LogicalKeyboardKey_112 = new G.LogicalKeyboardKey(112);
    C.LogicalKeyboardKey_113 = new G.LogicalKeyboardKey(113);
    C.LogicalKeyboardKey_114 = new G.LogicalKeyboardKey(114);
    C.LogicalKeyboardKey_115 = new G.LogicalKeyboardKey(115);
    C.LogicalKeyboardKey_116 = new G.LogicalKeyboardKey(116);
    C.LogicalKeyboardKey_117 = new G.LogicalKeyboardKey(117);
    C.LogicalKeyboardKey_118 = new G.LogicalKeyboardKey(118);
    C.LogicalKeyboardKey_119 = new G.LogicalKeyboardKey(119);
    C.LogicalKeyboardKey_120 = new G.LogicalKeyboardKey(120);
    C.LogicalKeyboardKey_121 = new G.LogicalKeyboardKey(121);
    C.LogicalKeyboardKey_122 = new G.LogicalKeyboardKey(122);
    C.LogicalKeyboardKey_49 = new G.LogicalKeyboardKey(49);
    C.LogicalKeyboardKey_50 = new G.LogicalKeyboardKey(50);
    C.LogicalKeyboardKey_51 = new G.LogicalKeyboardKey(51);
    C.LogicalKeyboardKey_52 = new G.LogicalKeyboardKey(52);
    C.LogicalKeyboardKey_53 = new G.LogicalKeyboardKey(53);
    C.LogicalKeyboardKey_54 = new G.LogicalKeyboardKey(54);
    C.LogicalKeyboardKey_55 = new G.LogicalKeyboardKey(55);
    C.LogicalKeyboardKey_56 = new G.LogicalKeyboardKey(56);
    C.LogicalKeyboardKey_57 = new G.LogicalKeyboardKey(57);
    C.LogicalKeyboardKey_48 = new G.LogicalKeyboardKey(48);
    C.LogicalKeyboardKey_4295426090 = new G.LogicalKeyboardKey(4295426090);
    C.LogicalKeyboardKey_45 = new G.LogicalKeyboardKey(45);
    C.LogicalKeyboardKey_61 = new G.LogicalKeyboardKey(61);
    C.LogicalKeyboardKey_91 = new G.LogicalKeyboardKey(91);
    C.LogicalKeyboardKey_93 = new G.LogicalKeyboardKey(93);
    C.LogicalKeyboardKey_92 = new G.LogicalKeyboardKey(92);
    C.LogicalKeyboardKey_59 = new G.LogicalKeyboardKey(59);
    C.LogicalKeyboardKey_39 = new G.LogicalKeyboardKey(39);
    C.LogicalKeyboardKey_96 = new G.LogicalKeyboardKey(96);
    C.LogicalKeyboardKey_44 = new G.LogicalKeyboardKey(44);
    C.LogicalKeyboardKey_46 = new G.LogicalKeyboardKey(46);
    C.LogicalKeyboardKey_47 = new G.LogicalKeyboardKey(47);
    C.LogicalKeyboardKey_4295426106 = new G.LogicalKeyboardKey(4295426106);
    C.LogicalKeyboardKey_4295426107 = new G.LogicalKeyboardKey(4295426107);
    C.LogicalKeyboardKey_4295426108 = new G.LogicalKeyboardKey(4295426108);
    C.LogicalKeyboardKey_4295426109 = new G.LogicalKeyboardKey(4295426109);
    C.LogicalKeyboardKey_4295426110 = new G.LogicalKeyboardKey(4295426110);
    C.LogicalKeyboardKey_4295426111 = new G.LogicalKeyboardKey(4295426111);
    C.LogicalKeyboardKey_4295426112 = new G.LogicalKeyboardKey(4295426112);
    C.LogicalKeyboardKey_4295426113 = new G.LogicalKeyboardKey(4295426113);
    C.LogicalKeyboardKey_4295426114 = new G.LogicalKeyboardKey(4295426114);
    C.LogicalKeyboardKey_4295426115 = new G.LogicalKeyboardKey(4295426115);
    C.LogicalKeyboardKey_4295426116 = new G.LogicalKeyboardKey(4295426116);
    C.LogicalKeyboardKey_4295426117 = new G.LogicalKeyboardKey(4295426117);
    C.LogicalKeyboardKey_4295426118 = new G.LogicalKeyboardKey(4295426118);
    C.LogicalKeyboardKey_4295426120 = new G.LogicalKeyboardKey(4295426120);
    C.LogicalKeyboardKey_4295426121 = new G.LogicalKeyboardKey(4295426121);
    C.LogicalKeyboardKey_4295426124 = new G.LogicalKeyboardKey(4295426124);
    C.LogicalKeyboardKey_4295426132 = new G.LogicalKeyboardKey(4295426132);
    C.LogicalKeyboardKey_4295426133 = new G.LogicalKeyboardKey(4295426133);
    C.LogicalKeyboardKey_4295426134 = new G.LogicalKeyboardKey(4295426134);
    C.LogicalKeyboardKey_4295426135 = new G.LogicalKeyboardKey(4295426135);
    C.LogicalKeyboardKey_4295426136 = new G.LogicalKeyboardKey(4295426136);
    C.LogicalKeyboardKey_4295426137 = new G.LogicalKeyboardKey(4295426137);
    C.LogicalKeyboardKey_4295426138 = new G.LogicalKeyboardKey(4295426138);
    C.LogicalKeyboardKey_4295426139 = new G.LogicalKeyboardKey(4295426139);
    C.LogicalKeyboardKey_4295426140 = new G.LogicalKeyboardKey(4295426140);
    C.LogicalKeyboardKey_4295426141 = new G.LogicalKeyboardKey(4295426141);
    C.LogicalKeyboardKey_4295426142 = new G.LogicalKeyboardKey(4295426142);
    C.LogicalKeyboardKey_4295426143 = new G.LogicalKeyboardKey(4295426143);
    C.LogicalKeyboardKey_4295426144 = new G.LogicalKeyboardKey(4295426144);
    C.LogicalKeyboardKey_4295426145 = new G.LogicalKeyboardKey(4295426145);
    C.LogicalKeyboardKey_4295426146 = new G.LogicalKeyboardKey(4295426146);
    C.LogicalKeyboardKey_4295426147 = new G.LogicalKeyboardKey(4295426147);
    C.LogicalKeyboardKey_4295426148 = new G.LogicalKeyboardKey(4295426148);
    C.LogicalKeyboardKey_4295426149 = new G.LogicalKeyboardKey(4295426149);
    C.LogicalKeyboardKey_4295426150 = new G.LogicalKeyboardKey(4295426150);
    C.LogicalKeyboardKey_4295426151 = new G.LogicalKeyboardKey(4295426151);
    C.LogicalKeyboardKey_4295426152 = new G.LogicalKeyboardKey(4295426152);
    C.LogicalKeyboardKey_4295426153 = new G.LogicalKeyboardKey(4295426153);
    C.LogicalKeyboardKey_4295426154 = new G.LogicalKeyboardKey(4295426154);
    C.LogicalKeyboardKey_4295426155 = new G.LogicalKeyboardKey(4295426155);
    C.LogicalKeyboardKey_4295426156 = new G.LogicalKeyboardKey(4295426156);
    C.LogicalKeyboardKey_4295426157 = new G.LogicalKeyboardKey(4295426157);
    C.LogicalKeyboardKey_4295426158 = new G.LogicalKeyboardKey(4295426158);
    C.LogicalKeyboardKey_4295426159 = new G.LogicalKeyboardKey(4295426159);
    C.LogicalKeyboardKey_4295426160 = new G.LogicalKeyboardKey(4295426160);
    C.LogicalKeyboardKey_4295426161 = new G.LogicalKeyboardKey(4295426161);
    C.LogicalKeyboardKey_4295426162 = new G.LogicalKeyboardKey(4295426162);
    C.LogicalKeyboardKey_4295426163 = new G.LogicalKeyboardKey(4295426163);
    C.LogicalKeyboardKey_4295426164 = new G.LogicalKeyboardKey(4295426164);
    C.LogicalKeyboardKey_4295426165 = new G.LogicalKeyboardKey(4295426165);
    C.LogicalKeyboardKey_4295426167 = new G.LogicalKeyboardKey(4295426167);
    C.LogicalKeyboardKey_4295426169 = new G.LogicalKeyboardKey(4295426169);
    C.LogicalKeyboardKey_4295426170 = new G.LogicalKeyboardKey(4295426170);
    C.LogicalKeyboardKey_4295426171 = new G.LogicalKeyboardKey(4295426171);
    C.LogicalKeyboardKey_4295426172 = new G.LogicalKeyboardKey(4295426172);
    C.LogicalKeyboardKey_4295426173 = new G.LogicalKeyboardKey(4295426173);
    C.LogicalKeyboardKey_4295426174 = new G.LogicalKeyboardKey(4295426174);
    C.LogicalKeyboardKey_4295426175 = new G.LogicalKeyboardKey(4295426175);
    C.LogicalKeyboardKey_4295426176 = new G.LogicalKeyboardKey(4295426176);
    C.LogicalKeyboardKey_4295426177 = new G.LogicalKeyboardKey(4295426177);
    C.LogicalKeyboardKey_4295426181 = new G.LogicalKeyboardKey(4295426181);
    C.LogicalKeyboardKey_4295426183 = new G.LogicalKeyboardKey(4295426183);
    C.LogicalKeyboardKey_4295426184 = new G.LogicalKeyboardKey(4295426184);
    C.LogicalKeyboardKey_4295426185 = new G.LogicalKeyboardKey(4295426185);
    C.LogicalKeyboardKey_4295426186 = new G.LogicalKeyboardKey(4295426186);
    C.LogicalKeyboardKey_4295426187 = new G.LogicalKeyboardKey(4295426187);
    C.LogicalKeyboardKey_4295426192 = new G.LogicalKeyboardKey(4295426192);
    C.LogicalKeyboardKey_4295426193 = new G.LogicalKeyboardKey(4295426193);
    C.LogicalKeyboardKey_4295426194 = new G.LogicalKeyboardKey(4295426194);
    C.LogicalKeyboardKey_4295426195 = new G.LogicalKeyboardKey(4295426195);
    C.LogicalKeyboardKey_4295426196 = new G.LogicalKeyboardKey(4295426196);
    C.LogicalKeyboardKey_4295426203 = new G.LogicalKeyboardKey(4295426203);
    C.LogicalKeyboardKey_4295426211 = new G.LogicalKeyboardKey(4295426211);
    C.LogicalKeyboardKey_4295426230 = new G.LogicalKeyboardKey(4295426230);
    C.LogicalKeyboardKey_4295426231 = new G.LogicalKeyboardKey(4295426231);
    C.LogicalKeyboardKey_4295426235 = new G.LogicalKeyboardKey(4295426235);
    C.LogicalKeyboardKey_4295426256 = new G.LogicalKeyboardKey(4295426256);
    C.LogicalKeyboardKey_4295426257 = new G.LogicalKeyboardKey(4295426257);
    C.LogicalKeyboardKey_4295426258 = new G.LogicalKeyboardKey(4295426258);
    C.LogicalKeyboardKey_4295426259 = new G.LogicalKeyboardKey(4295426259);
    C.LogicalKeyboardKey_4295426260 = new G.LogicalKeyboardKey(4295426260);
    C.LogicalKeyboardKey_4295426264 = new G.LogicalKeyboardKey(4295426264);
    C.LogicalKeyboardKey_4295426265 = new G.LogicalKeyboardKey(4295426265);
    C.LogicalKeyboardKey_4295753839 = new G.LogicalKeyboardKey(4295753839);
    C.LogicalKeyboardKey_4295753840 = new G.LogicalKeyboardKey(4295753840);
    C.LogicalKeyboardKey_4295753904 = new G.LogicalKeyboardKey(4295753904);
    C.LogicalKeyboardKey_4295753905 = new G.LogicalKeyboardKey(4295753905);
    C.LogicalKeyboardKey_4295753906 = new G.LogicalKeyboardKey(4295753906);
    C.LogicalKeyboardKey_4295753907 = new G.LogicalKeyboardKey(4295753907);
    C.LogicalKeyboardKey_4295753908 = new G.LogicalKeyboardKey(4295753908);
    C.LogicalKeyboardKey_4295753909 = new G.LogicalKeyboardKey(4295753909);
    C.LogicalKeyboardKey_4295753910 = new G.LogicalKeyboardKey(4295753910);
    C.LogicalKeyboardKey_4295753911 = new G.LogicalKeyboardKey(4295753911);
    C.LogicalKeyboardKey_4295753912 = new G.LogicalKeyboardKey(4295753912);
    C.LogicalKeyboardKey_4295753933 = new G.LogicalKeyboardKey(4295753933);
    C.LogicalKeyboardKey_4295754115 = new G.LogicalKeyboardKey(4295754115);
    C.LogicalKeyboardKey_4295754122 = new G.LogicalKeyboardKey(4295754122);
    C.LogicalKeyboardKey_4295754130 = new G.LogicalKeyboardKey(4295754130);
    C.LogicalKeyboardKey_4295754132 = new G.LogicalKeyboardKey(4295754132);
    C.LogicalKeyboardKey_4295754143 = new G.LogicalKeyboardKey(4295754143);
    C.LogicalKeyboardKey_4295754146 = new G.LogicalKeyboardKey(4295754146);
    C.LogicalKeyboardKey_4295754161 = new G.LogicalKeyboardKey(4295754161);
    C.LogicalKeyboardKey_4295754187 = new G.LogicalKeyboardKey(4295754187);
    C.LogicalKeyboardKey_4295754273 = new G.LogicalKeyboardKey(4295754273);
    C.LogicalKeyboardKey_4295754275 = new G.LogicalKeyboardKey(4295754275);
    C.LogicalKeyboardKey_4295754276 = new G.LogicalKeyboardKey(4295754276);
    C.LogicalKeyboardKey_4295754277 = new G.LogicalKeyboardKey(4295754277);
    C.LogicalKeyboardKey_4295754278 = new G.LogicalKeyboardKey(4295754278);
    C.LogicalKeyboardKey_4295754279 = new G.LogicalKeyboardKey(4295754279);
    C.LogicalKeyboardKey_4295754282 = new G.LogicalKeyboardKey(4295754282);
    C.LogicalKeyboardKey_4295754290 = new G.LogicalKeyboardKey(4295754290);
    C.LogicalKeyboardKey_4295754377 = new G.LogicalKeyboardKey(4295754377);
    C.LogicalKeyboardKey_4295754379 = new G.LogicalKeyboardKey(4295754379);
    C.LogicalKeyboardKey_4295754380 = new G.LogicalKeyboardKey(4295754380);
    C.LogicalKeyboardKey_4295754397 = new G.LogicalKeyboardKey(4295754397);
    C.LogicalKeyboardKey_4295754399 = new G.LogicalKeyboardKey(4295754399);
    C.LogicalKeyboardKey_4295360257 = new G.LogicalKeyboardKey(4295360257);
    C.LogicalKeyboardKey_4295360258 = new G.LogicalKeyboardKey(4295360258);
    C.LogicalKeyboardKey_4295360259 = new G.LogicalKeyboardKey(4295360259);
    C.LogicalKeyboardKey_4295360260 = new G.LogicalKeyboardKey(4295360260);
    C.LogicalKeyboardKey_4295360261 = new G.LogicalKeyboardKey(4295360261);
    C.LogicalKeyboardKey_4295360262 = new G.LogicalKeyboardKey(4295360262);
    C.LogicalKeyboardKey_4295360263 = new G.LogicalKeyboardKey(4295360263);
    C.LogicalKeyboardKey_4295360264 = new G.LogicalKeyboardKey(4295360264);
    C.LogicalKeyboardKey_4295360265 = new G.LogicalKeyboardKey(4295360265);
    C.LogicalKeyboardKey_4295360266 = new G.LogicalKeyboardKey(4295360266);
    C.LogicalKeyboardKey_4295360267 = new G.LogicalKeyboardKey(4295360267);
    C.LogicalKeyboardKey_4295360268 = new G.LogicalKeyboardKey(4295360268);
    C.LogicalKeyboardKey_4295360269 = new G.LogicalKeyboardKey(4295360269);
    C.LogicalKeyboardKey_4295360270 = new G.LogicalKeyboardKey(4295360270);
    C.LogicalKeyboardKey_4295360271 = new G.LogicalKeyboardKey(4295360271);
    C.LogicalKeyboardKey_4295360272 = new G.LogicalKeyboardKey(4295360272);
    C.LogicalKeyboardKey_4295360273 = new G.LogicalKeyboardKey(4295360273);
    C.LogicalKeyboardKey_4295360274 = new G.LogicalKeyboardKey(4295360274);
    C.LogicalKeyboardKey_4295360275 = new G.LogicalKeyboardKey(4295360275);
    C.LogicalKeyboardKey_4295360276 = new G.LogicalKeyboardKey(4295360276);
    C.LogicalKeyboardKey_4295360277 = new G.LogicalKeyboardKey(4295360277);
    C.LogicalKeyboardKey_4295360278 = new G.LogicalKeyboardKey(4295360278);
    C.LogicalKeyboardKey_4295360279 = new G.LogicalKeyboardKey(4295360279);
    C.LogicalKeyboardKey_4295360280 = new G.LogicalKeyboardKey(4295360280);
    C.LogicalKeyboardKey_4295360281 = new G.LogicalKeyboardKey(4295360281);
    C.LogicalKeyboardKey_4295360282 = new G.LogicalKeyboardKey(4295360282);
    C.LogicalKeyboardKey_4295360283 = new G.LogicalKeyboardKey(4295360283);
    C.LogicalKeyboardKey_4295360284 = new G.LogicalKeyboardKey(4295360284);
    C.LogicalKeyboardKey_4295360285 = new G.LogicalKeyboardKey(4295360285);
    C.LogicalKeyboardKey_4295360286 = new G.LogicalKeyboardKey(4295360286);
    C.LogicalKeyboardKey_4295360287 = new G.LogicalKeyboardKey(4295360287);
    C.Map_YVCB9 = new H.ConstantStringMap(230, {None: C.LogicalKeyboardKey_4294967296, Hyper: C.LogicalKeyboardKey_4294967312, Super: C.LogicalKeyboardKey_4294967313, FnLock: C.LogicalKeyboardKey_4294967315, Suspend: C.LogicalKeyboardKey_4294967316, Resume: C.LogicalKeyboardKey_4294967317, Turbo: C.LogicalKeyboardKey_4294967318, PrivacyScreenToggle: C.LogicalKeyboardKey_4294967319, Sleep: C.LogicalKeyboardKey_4295032962, WakeUp: C.LogicalKeyboardKey_4295032963, DisplayToggleIntExt: C.LogicalKeyboardKey_4295033013, KeyA: C.LogicalKeyboardKey_97, KeyB: C.LogicalKeyboardKey_98, KeyC: C.LogicalKeyboardKey_99, KeyD: C.LogicalKeyboardKey_100, KeyE: C.LogicalKeyboardKey_101, KeyF: C.LogicalKeyboardKey_102, KeyG: C.LogicalKeyboardKey_103, KeyH: C.LogicalKeyboardKey_104, KeyI: C.LogicalKeyboardKey_105, KeyJ: C.LogicalKeyboardKey_106, KeyK: C.LogicalKeyboardKey_107, KeyL: C.LogicalKeyboardKey_108, KeyM: C.LogicalKeyboardKey_109, KeyN: C.LogicalKeyboardKey_110, KeyO: C.LogicalKeyboardKey_111, KeyP: C.LogicalKeyboardKey_112, KeyQ: C.LogicalKeyboardKey_113, KeyR: C.LogicalKeyboardKey_114, KeyS: C.LogicalKeyboardKey_115, KeyT: C.LogicalKeyboardKey_116, KeyU: C.LogicalKeyboardKey_117, KeyV: C.LogicalKeyboardKey_118, KeyW: C.LogicalKeyboardKey_119, KeyX: C.LogicalKeyboardKey_120, KeyY: C.LogicalKeyboardKey_121, KeyZ: C.LogicalKeyboardKey_122, Digit1: C.LogicalKeyboardKey_49, Digit2: C.LogicalKeyboardKey_50, Digit3: C.LogicalKeyboardKey_51, Digit4: C.LogicalKeyboardKey_52, Digit5: C.LogicalKeyboardKey_53, Digit6: C.LogicalKeyboardKey_54, Digit7: C.LogicalKeyboardKey_55, Digit8: C.LogicalKeyboardKey_56, Digit9: C.LogicalKeyboardKey_57, Digit0: C.LogicalKeyboardKey_48, Enter: C.LogicalKeyboardKey_4295426088, Escape: C.LogicalKeyboardKey_4295426089, Backspace: C.LogicalKeyboardKey_4295426090, Tab: C.LogicalKeyboardKey_4295426091, Space: C.LogicalKeyboardKey_32, Minus: C.LogicalKeyboardKey_45, Equal: C.LogicalKeyboardKey_61, BracketLeft: C.LogicalKeyboardKey_91, BracketRight: C.LogicalKeyboardKey_93, Backslash: C.LogicalKeyboardKey_92, Semicolon: C.LogicalKeyboardKey_59, Quote: C.LogicalKeyboardKey_39, Backquote: C.LogicalKeyboardKey_96, Comma: C.LogicalKeyboardKey_44, Period: C.LogicalKeyboardKey_46, Slash: C.LogicalKeyboardKey_47, CapsLock: C.LogicalKeyboardKey_4295426105, F1: C.LogicalKeyboardKey_4295426106, F2: C.LogicalKeyboardKey_4295426107, F3: C.LogicalKeyboardKey_4295426108, F4: C.LogicalKeyboardKey_4295426109, F5: C.LogicalKeyboardKey_4295426110, F6: C.LogicalKeyboardKey_4295426111, F7: C.LogicalKeyboardKey_4295426112, F8: C.LogicalKeyboardKey_4295426113, F9: C.LogicalKeyboardKey_4295426114, F10: C.LogicalKeyboardKey_4295426115, F11: C.LogicalKeyboardKey_4295426116, F12: C.LogicalKeyboardKey_4295426117, PrintScreen: C.LogicalKeyboardKey_4295426118, ScrollLock: C.LogicalKeyboardKey_4295426119, Pause: C.LogicalKeyboardKey_4295426120, Insert: C.LogicalKeyboardKey_4295426121, Home: C.LogicalKeyboardKey_4295426122, PageUp: C.LogicalKeyboardKey_4295426123, Delete: C.LogicalKeyboardKey_4295426124, End: C.LogicalKeyboardKey_4295426125, PageDown: C.LogicalKeyboardKey_4295426126, ArrowRight: C.LogicalKeyboardKey_4295426127, ArrowLeft: C.LogicalKeyboardKey_4295426128, ArrowDown: C.LogicalKeyboardKey_4295426129, ArrowUp: C.LogicalKeyboardKey_4295426130, NumLock: C.LogicalKeyboardKey_4295426131, NumpadDivide: C.LogicalKeyboardKey_4295426132, NumpadMultiply: C.LogicalKeyboardKey_4295426133, NumpadSubtract: C.LogicalKeyboardKey_4295426134, NumpadAdd: C.LogicalKeyboardKey_4295426135, NumpadEnter: C.LogicalKeyboardKey_4295426136, Numpad1: C.LogicalKeyboardKey_4295426137, Numpad2: C.LogicalKeyboardKey_4295426138, Numpad3: C.LogicalKeyboardKey_4295426139, Numpad4: C.LogicalKeyboardKey_4295426140, Numpad5: C.LogicalKeyboardKey_4295426141, Numpad6: C.LogicalKeyboardKey_4295426142, Numpad7: C.LogicalKeyboardKey_4295426143, Numpad8: C.LogicalKeyboardKey_4295426144, Numpad9: C.LogicalKeyboardKey_4295426145, Numpad0: C.LogicalKeyboardKey_4295426146, NumpadDecimal: C.LogicalKeyboardKey_4295426147, IntlBackslash: C.LogicalKeyboardKey_4295426148, ContextMenu: C.LogicalKeyboardKey_4295426149, Power: C.LogicalKeyboardKey_4295426150, NumpadEqual: C.LogicalKeyboardKey_4295426151, F13: C.LogicalKeyboardKey_4295426152, F14: C.LogicalKeyboardKey_4295426153, F15: C.LogicalKeyboardKey_4295426154, F16: C.LogicalKeyboardKey_4295426155, F17: C.LogicalKeyboardKey_4295426156, F18: C.LogicalKeyboardKey_4295426157, F19: C.LogicalKeyboardKey_4295426158, F20: C.LogicalKeyboardKey_4295426159, F21: C.LogicalKeyboardKey_4295426160, F22: C.LogicalKeyboardKey_4295426161, F23: C.LogicalKeyboardKey_4295426162, F24: C.LogicalKeyboardKey_4295426163, Open: C.LogicalKeyboardKey_4295426164, Help: C.LogicalKeyboardKey_4295426165, Select: C.LogicalKeyboardKey_4295426167, Again: C.LogicalKeyboardKey_4295426169, Undo: C.LogicalKeyboardKey_4295426170, Cut: C.LogicalKeyboardKey_4295426171, Copy: C.LogicalKeyboardKey_4295426172, Paste: C.LogicalKeyboardKey_4295426173, Find: C.LogicalKeyboardKey_4295426174, AudioVolumeMute: C.LogicalKeyboardKey_4295426175, AudioVolumeUp: C.LogicalKeyboardKey_4295426176, AudioVolumeDown: C.LogicalKeyboardKey_4295426177, NumpadComma: C.LogicalKeyboardKey_4295426181, IntlRo: C.LogicalKeyboardKey_4295426183, KanaMode: C.LogicalKeyboardKey_4295426184, IntlYen: C.LogicalKeyboardKey_4295426185, Convert: C.LogicalKeyboardKey_4295426186, NonConvert: C.LogicalKeyboardKey_4295426187, Lang1: C.LogicalKeyboardKey_4295426192, Lang2: C.LogicalKeyboardKey_4295426193, Lang3: C.LogicalKeyboardKey_4295426194, Lang4: C.LogicalKeyboardKey_4295426195, Lang5: C.LogicalKeyboardKey_4295426196, Abort: C.LogicalKeyboardKey_4295426203, Props: C.LogicalKeyboardKey_4295426211, NumpadParenLeft: C.LogicalKeyboardKey_4295426230, NumpadParenRight: C.LogicalKeyboardKey_4295426231, NumpadBackspace: C.LogicalKeyboardKey_4295426235, NumpadMemoryStore: C.LogicalKeyboardKey_4295426256, NumpadMemoryRecall: C.LogicalKeyboardKey_4295426257, NumpadMemoryClear: C.LogicalKeyboardKey_4295426258, NumpadMemoryAdd: C.LogicalKeyboardKey_4295426259, NumpadMemorySubtract: C.LogicalKeyboardKey_4295426260, NumpadClear: C.LogicalKeyboardKey_4295426264, NumpadClearEntry: C.LogicalKeyboardKey_4295426265, ControlLeft: C.LogicalKeyboardKey_4295426272, ShiftLeft: C.LogicalKeyboardKey_4295426273, AltLeft: C.LogicalKeyboardKey_4295426274, MetaLeft: C.LogicalKeyboardKey_4295426275, ControlRight: C.LogicalKeyboardKey_4295426276, ShiftRight: C.LogicalKeyboardKey_4295426277, AltRight: C.LogicalKeyboardKey_4295426278, MetaRight: C.LogicalKeyboardKey_4295426279, BrightnessUp: C.LogicalKeyboardKey_4295753839, BrightnessDown: C.LogicalKeyboardKey_4295753840, MediaPlay: C.LogicalKeyboardKey_4295753904, MediaPause: C.LogicalKeyboardKey_4295753905, MediaRecord: C.LogicalKeyboardKey_4295753906, MediaFastForward: C.LogicalKeyboardKey_4295753907, MediaRewind: C.LogicalKeyboardKey_4295753908, MediaTrackNext: C.LogicalKeyboardKey_4295753909, MediaTrackPrevious: C.LogicalKeyboardKey_4295753910, MediaStop: C.LogicalKeyboardKey_4295753911, Eject: C.LogicalKeyboardKey_4295753912, MediaPlayPause: C.LogicalKeyboardKey_4295753933, MediaSelect: C.LogicalKeyboardKey_4295754115, LaunchMail: C.LogicalKeyboardKey_4295754122, LaunchApp2: C.LogicalKeyboardKey_4295754130, LaunchApp1: C.LogicalKeyboardKey_4295754132, LaunchControlPanel: C.LogicalKeyboardKey_4295754143, SelectTask: C.LogicalKeyboardKey_4295754146, LaunchScreenSaver: C.LogicalKeyboardKey_4295754161, LaunchAssistant: C.LogicalKeyboardKey_4295754187, BrowserSearch: C.LogicalKeyboardKey_4295754273, BrowserHome: C.LogicalKeyboardKey_4295754275, BrowserBack: C.LogicalKeyboardKey_4295754276, BrowserForward: C.LogicalKeyboardKey_4295754277, BrowserStop: C.LogicalKeyboardKey_4295754278, BrowserRefresh: C.LogicalKeyboardKey_4295754279, BrowserFavorites: C.LogicalKeyboardKey_4295754282, ZoomToggle: C.LogicalKeyboardKey_4295754290, MailReply: C.LogicalKeyboardKey_4295754377, MailForward: C.LogicalKeyboardKey_4295754379, MailSend: C.LogicalKeyboardKey_4295754380, KeyboardLayoutSelect: C.LogicalKeyboardKey_4295754397, ShowAllWindows: C.LogicalKeyboardKey_4295754399, GameButton1: C.LogicalKeyboardKey_4295360257, GameButton2: C.LogicalKeyboardKey_4295360258, GameButton3: C.LogicalKeyboardKey_4295360259, GameButton4: C.LogicalKeyboardKey_4295360260, GameButton5: C.LogicalKeyboardKey_4295360261, GameButton6: C.LogicalKeyboardKey_4295360262, GameButton7: C.LogicalKeyboardKey_4295360263, GameButton8: C.LogicalKeyboardKey_4295360264, GameButton9: C.LogicalKeyboardKey_4295360265, GameButton10: C.LogicalKeyboardKey_4295360266, GameButton11: C.LogicalKeyboardKey_4295360267, GameButton12: C.LogicalKeyboardKey_4295360268, GameButton13: C.LogicalKeyboardKey_4295360269, GameButton14: C.LogicalKeyboardKey_4295360270, GameButton15: C.LogicalKeyboardKey_4295360271, GameButton16: C.LogicalKeyboardKey_4295360272, GameButtonA: C.LogicalKeyboardKey_4295360273, GameButtonB: C.LogicalKeyboardKey_4295360274, GameButtonC: C.LogicalKeyboardKey_4295360275, GameButtonLeft1: C.LogicalKeyboardKey_4295360276, GameButtonLeft2: C.LogicalKeyboardKey_4295360277, GameButtonMode: C.LogicalKeyboardKey_4295360278, GameButtonRight1: C.LogicalKeyboardKey_4295360279, GameButtonRight2: C.LogicalKeyboardKey_4295360280, GameButtonSelect: C.LogicalKeyboardKey_4295360281, GameButtonStart: C.LogicalKeyboardKey_4295360282, GameButtonThumbLeft: C.LogicalKeyboardKey_4295360283, GameButtonThumbRight: C.LogicalKeyboardKey_4295360284, GameButtonX: C.LogicalKeyboardKey_4295360285, GameButtonY: C.LogicalKeyboardKey_4295360286, GameButtonZ: C.LogicalKeyboardKey_4295360287, Fn: C.LogicalKeyboardKey_4294967314}, C.List_YVI, type$.ConstantStringMap_String_LogicalKeyboardKey);
    C.List_empty12 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<LogicalKeySet>"));
    C.Map_empty4 = new H.ConstantStringMap(0, {}, C.List_empty12, H.findType("ConstantStringMap<LogicalKeySet,Intent>"));
    C.Map_empty1 = new H.ConstantStringMap(0, {}, C.List_empty5, H.findType("ConstantStringMap<Object,_HeroState>"));
    C.List_empty13 = H.setRuntimeTypeInfo(makeConstList([]), type$.JSArray_PersistedSurface);
    C.Map_empty5 = new H.ConstantStringMap(0, {}, C.List_empty13, H.findType("ConstantStringMap<PersistedSurface,PersistedSurface>"));
    C.Map_empty0 = new H.ConstantStringMap(0, {}, C.List_empty0, H.findType("ConstantStringMap<String,Widget(BuildContext)>"));
    C.Map_empty3 = new H.ConstantStringMap(0, {}, C.List_empty0, H.findType("ConstantStringMap<String,@>"));
    C.List_empty14 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<Symbol0>"));
    C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty14, H.findType("ConstantStringMap<Symbol0,@>"));
    C.List_empty15 = H.setRuntimeTypeInfo(makeConstList([]), H.findType("JSArray<Type>"));
    C.Map_empty2 = new H.ConstantStringMap(0, {}, C.List_empty15, H.findType("ConstantStringMap<Type,GestureRecognizer>"));
    C.List_gFn = H.setRuntimeTypeInfo(makeConstList(["alias", "allScroll", "basic", "cell", "click", "contextMenu", "copy", "forbidden", "grab", "grabbing", "help", "move", "none", "noDrop", "precise", "progress", "text", "resizeColumn", "resizeDown", "resizeDownLeft", "resizeDownRight", "resizeLeft", "resizeLeftRight", "resizeRight", "resizeRow", "resizeUp", "resizeUpDown", "resizeUpLeft", "resizeUpRight", "resizeUpLeftDownRight", "resizeUpRightDownLeft", "verticalText", "wait", "zoomIn", "zoomOut"]), type$.JSArray_String);
    C.Map_gFKQ1 = new H.ConstantStringMap(35, {alias: "alias", allScroll: "all-scroll", basic: "default", cell: "cell", click: "pointer", contextMenu: "context-menu", copy: "copy", forbidden: "not-allowed", grab: "grab", grabbing: "grabbing", help: "help", move: "move", none: "none", noDrop: "no-drop", precise: "crosshair", progress: "progress", text: "text", resizeColumn: "col-resize", resizeDown: "s-resize", resizeDownLeft: "sw-resize", resizeDownRight: "se-resize", resizeLeft: "w-resize", resizeLeftRight: "ew-resize", resizeRight: "e-resize", resizeRow: "row-resize", resizeUp: "n-resize", resizeUpDown: "ns-resize", resizeUpLeft: "nw-resize", resizeUpRight: "ne-resize", resizeUpLeftDownRight: "nwse-resize", resizeUpRightDownLeft: "nesw-resize", verticalText: "vertical-text", wait: "wait", zoomIn: "zoom-in", zoomOut: "zoom-out"}, C.List_gFn, type$.ConstantStringMap_String_String);
    C.Color_4289200107 = new P.Color(4289200107);
    C.Color_4284809178 = new P.Color(4284809178);
    C.Color_4280150454 = new P.Color(4280150454);
    C.Color_4278239141 = new P.Color(4278239141);
    C.Map_iTYZn = new H.GeneralConstantMap([100, C.Color_4289200107, 200, C.Color_4284809178, 400, C.Color_4280150454, 700, C.Color_4278239141], type$.GeneralConstantMap_int_Color);
    C.List_mC8 = H.setRuntimeTypeInfo(makeConstList(["None", "Unidentified", "Backspace", "Tab", "Enter", "Escape", "Space", "Exclamation", "Quote", "NumberSign", "Dollar", "Ampersand", "QuoteSingle", "ParenthesisLeft", "ParenthesisRight", "Asterisk", "Add", "Comma", "Minus", "Period", "Slash", "Digit0", "Digit1", "Digit2", "Digit3", "Digit4", "Digit5", "Digit6", "Digit7", "Digit8", "Digit9", "Colon", "Semicolon", "Less", "Equal", "Greater", "Question", "At", "BracketLeft", "Backslash", "BracketRight", "Caret", "Underscore", "Backquote", "KeyA", "KeyB", "KeyC", "KeyD", "KeyE", "KeyF", "KeyG", "KeyH", "KeyI", "KeyJ", "KeyK", "KeyL", "KeyM", "KeyN", "KeyO", "KeyP", "KeyQ", "KeyR", "KeyS", "KeyT", "KeyU", "KeyV", "KeyW", "KeyX", "KeyY", "KeyZ", "BraceLeft", "Bar", "BraceRight", "Tilde", "Delete", "Accel", "AltGraph", "CapsLock", "Fn", "FnLock", "Hyper", "NumLock", "ScrollLock", "Super", "Symbol", "SymbolLock", "ShiftLevel5", "AltGraphLatch", "ArrowDown", "ArrowLeft", "ArrowRight", "ArrowUp", "End", "Home", "PageDown", "PageUp", "Clear", "Copy", "CrSel", "Cut", "EraseEof", "ExSel", "Insert", "Paste", "Redo", "Undo", "Accept", "Again", "Attn", "Cancel", "ContextMenu", "Execute", "Find", "Help", "Pause", "Play", "Props", "Select", "ZoomIn", "ZoomOut", "BrightnessDown", "BrightnessUp", "Camera", "Eject", "LogOff", "Power", "PowerOff", "PrintScreen", "Hibernate", "Standby", "WakeUp", "AllCandidates", "Alphanumeric", "CodeInput", "Compose", "Convert", "FinalMode", "GroupFirst", "GroupLast", "GroupNext", "GroupPrevious", "ModeChange", "NextCandidate", "NonConvert", "PreviousCandidate", "Process", "SingleCandidate", "HangulMode", "HanjaMode", "JunjaMode", "Eisu", "Hankaku", "Hiragana", "HiraganaKatakana", "KanaMode", "KanjiMode", "Katakana", "Romaji", "Zenkaku", "ZenkakuHankaku", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12", "F13", "F14", "F15", "F16", "F17", "F18", "F19", "F20", "F21", "F22", "F23", "F24", "Soft1", "Soft2", "Soft3", "Soft4", "Soft5", "Soft6", "Soft7", "Soft8", "Close", "MailForward", "MailReply", "MailSend", "MediaPlayPause", "MediaStop", "MediaTrackNext", "MediaTrackPrevious", "New", "Open", "Print", "Save", "SpellCheck", "AudioVolumeDown", "AudioVolumeUp", "AudioVolumeMute", "LaunchApplication2", "LaunchCalendar", "LaunchMail", "LaunchMediaPlayer", "LaunchMusicPlayer", "LaunchApplication1", "LaunchScreenSaver", "LaunchSpreadsheet", "LaunchWebBrowser", "LaunchWebCam", "LaunchWordProcessor", "LaunchContacts", "LaunchPhone", "LaunchAssistant", "LaunchControlPanel", "BrowserBack", "BrowserFavorites", "BrowserForward", "BrowserHome", "BrowserRefresh", "BrowserSearch", "BrowserStop", "AudioBalanceLeft", "AudioBalanceRight", "AudioBassBoostDown", "AudioBassBoostUp", "AudioFaderFront", "AudioFaderRear", "AudioSurroundModeNext", "AVRInput", "AVRPower", "ChannelDown", "ChannelUp", "ColorF0Red", "ColorF1Green", "ColorF2Yellow", "ColorF3Blue", "ColorF4Grey", "ColorF5Brown", "ClosedCaptionToggle", "Dimmer", "DisplaySwap", "Exit", "FavoriteClear0", "FavoriteClear1", "FavoriteClear2", "FavoriteClear3", "FavoriteRecall0", "FavoriteRecall1", "FavoriteRecall2", "FavoriteRecall3", "FavoriteStore0", "FavoriteStore1", "FavoriteStore2", "FavoriteStore3", "Guide", "GuideNextDay", "GuidePreviousDay", "Info", "InstantReplay", "Link", "ListProgram", "LiveContent", "Lock", "MediaApps", "MediaFastForward", "MediaLast", "MediaPause", "MediaPlay", "MediaRecord", "MediaRewind", "MediaSkip", "NextFavoriteChannel", "NextUserProfile", "OnDemand", "PinPDown", "PinPMove", "PinPToggle", "PinPUp", "PlaySpeedDown", "PlaySpeedReset", "PlaySpeedUp", "RandomToggle", "RcLowBattery", "RecordSpeedNext", "RfBypass", "ScanChannelsToggle", "ScreenModeNext", "Settings", "SplitScreenToggle", "STBInput", "STBPower", "Subtitle", "Teletext", "TV", "TVInput", "TVPower", "VideoModeNext", "Wink", "ZoomToggle", "DVR", "MediaAudioTrack", "MediaSkipBackward", "MediaSkipForward", "MediaStepBackward", "MediaStepForward", "MediaTopMenu", "NavigateIn", "NavigateNext", "NavigateOut", "NavigatePrevious", "Pairing", "MediaClose", "AudioBassBoostToggle", "AudioTrebleDown", "AudioTrebleUp", "MicrophoneToggle", "MicrophoneVolumeDown", "MicrophoneVolumeUp", "MicrophoneVolumeMute", "SpeechCorrectionList", "SpeechInputToggle", "AppSwitch", "Call", "CameraFocus", "EndCall", "GoBack", "GoHome", "HeadsetHook", "LastNumberRedial", "Notification", "MannerMode", "VoiceDial", "TV3DMode", "TVAntennaCable", "TVAudioDescription", "TVAudioDescriptionMixDown", "TVAudioDescriptionMixUp", "TVContentsMenu", "TVDataService", "TVInputComponent1", "TVInputComponent2", "TVInputComposite1", "TVInputComposite2", "TVInputHDMI1", "TVInputHDMI2", "TVInputHDMI3", "TVInputHDMI4", "TVInputVGA1", "TVMediaContext", "TVNetwork", "TVNumberEntry", "TVRadioService", "TVSatellite", "TVSatelliteBS", "TVSatelliteCS", "TVSatelliteToggle", "TVTerrestrialAnalog", "TVTerrestrialDigital", "TVTimer", "Key11", "Key12", "GameButton1", "GameButton2", "GameButton3", "GameButton4", "GameButton5", "GameButton6", "GameButton7", "GameButton8", "GameButton9", "GameButton10", "GameButton11", "GameButton12", "GameButton13", "GameButton14", "GameButton15", "GameButton16", "GameButtonA", "GameButtonB", "GameButtonC", "GameButtonLeft1", "GameButtonLeft2", "GameButtonMode", "GameButtonRight1", "GameButtonRight2", "GameButtonSelect", "GameButtonStart", "GameButtonThumbLeft", "GameButtonThumbRight", "GameButtonX", "GameButtonY", "GameButtonZ", "Suspend", "Resume", "Sleep", "IntlBackslash", "IntlRo", "IntlYen", "Lang1", "Lang2", "Lang3", "Lang4", "Lang5", "Abort"]), type$.JSArray_String);
    C.Map_mC8xL = new H.ConstantStringMap(413, {None: 0, Unidentified: 1, Backspace: 8, Tab: 9, Enter: 13, Escape: 27, Space: 32, Exclamation: 33, Quote: 34, NumberSign: 35, Dollar: 36, Ampersand: 38, QuoteSingle: 39, ParenthesisLeft: 40, ParenthesisRight: 41, Asterisk: 42, Add: 43, Comma: 44, Minus: 45, Period: 46, Slash: 47, Digit0: 48, Digit1: 49, Digit2: 50, Digit3: 51, Digit4: 52, Digit5: 53, Digit6: 54, Digit7: 55, Digit8: 56, Digit9: 57, Colon: 58, Semicolon: 59, Less: 60, Equal: 61, Greater: 62, Question: 63, At: 64, BracketLeft: 91, Backslash: 92, BracketRight: 93, Caret: 94, Underscore: 95, Backquote: 96, KeyA: 97, KeyB: 98, KeyC: 99, KeyD: 100, KeyE: 101, KeyF: 102, KeyG: 103, KeyH: 104, KeyI: 105, KeyJ: 106, KeyK: 107, KeyL: 108, KeyM: 109, KeyN: 110, KeyO: 111, KeyP: 112, KeyQ: 113, KeyR: 114, KeyS: 115, KeyT: 116, KeyU: 117, KeyV: 118, KeyW: 119, KeyX: 120, KeyY: 121, KeyZ: 122, BraceLeft: 123, Bar: 124, BraceRight: 125, Tilde: 126, Delete: 127, Accel: 257, AltGraph: 259, CapsLock: 260, Fn: 262, FnLock: 263, Hyper: 264, NumLock: 266, ScrollLock: 268, Super: 270, Symbol: 271, SymbolLock: 272, ShiftLevel5: 273, AltGraphLatch: 274, ArrowDown: 769, ArrowLeft: 770, ArrowRight: 771, ArrowUp: 772, End: 773, Home: 774, PageDown: 775, PageUp: 776, Clear: 1025, Copy: 1026, CrSel: 1027, Cut: 1028, EraseEof: 1029, ExSel: 1030, Insert: 1031, Paste: 1032, Redo: 1033, Undo: 1034, Accept: 1281, Again: 1282, Attn: 1283, Cancel: 1284, ContextMenu: 1285, Execute: 1286, Find: 1287, Help: 1288, Pause: 1289, Play: 1290, Props: 1291, Select: 1292, ZoomIn: 1293, ZoomOut: 1294, BrightnessDown: 1537, BrightnessUp: 1538, Camera: 1539, Eject: 1540, LogOff: 1541, Power: 1542, PowerOff: 1543, PrintScreen: 1544, Hibernate: 1545, Standby: 1546, WakeUp: 1547, AllCandidates: 1793, Alphanumeric: 1794, CodeInput: 1795, Compose: 1796, Convert: 1797, FinalMode: 1798, GroupFirst: 1799, GroupLast: 1800, GroupNext: 1801, GroupPrevious: 1802, ModeChange: 1803, NextCandidate: 1804, NonConvert: 1805, PreviousCandidate: 1806, Process: 1807, SingleCandidate: 1808, HangulMode: 1809, HanjaMode: 1810, JunjaMode: 1811, Eisu: 1812, Hankaku: 1813, Hiragana: 1814, HiraganaKatakana: 1815, KanaMode: 1816, KanjiMode: 1817, Katakana: 1818, Romaji: 1819, Zenkaku: 1820, ZenkakuHankaku: 1821, F1: 2049, F2: 2050, F3: 2051, F4: 2052, F5: 2053, F6: 2054, F7: 2055, F8: 2056, F9: 2057, F10: 2058, F11: 2059, F12: 2060, F13: 2061, F14: 2062, F15: 2063, F16: 2064, F17: 2065, F18: 2066, F19: 2067, F20: 2068, F21: 2069, F22: 2070, F23: 2071, F24: 2072, Soft1: 2305, Soft2: 2306, Soft3: 2307, Soft4: 2308, Soft5: 2309, Soft6: 2310, Soft7: 2311, Soft8: 2312, Close: 2561, MailForward: 2562, MailReply: 2563, MailSend: 2564, MediaPlayPause: 2565, MediaStop: 2567, MediaTrackNext: 2568, MediaTrackPrevious: 2569, New: 2570, Open: 2571, Print: 2572, Save: 2573, SpellCheck: 2574, AudioVolumeDown: 2575, AudioVolumeUp: 2576, AudioVolumeMute: 2577, LaunchApplication2: 2817, LaunchCalendar: 2818, LaunchMail: 2819, LaunchMediaPlayer: 2820, LaunchMusicPlayer: 2821, LaunchApplication1: 2822, LaunchScreenSaver: 2823, LaunchSpreadsheet: 2824, LaunchWebBrowser: 2825, LaunchWebCam: 2826, LaunchWordProcessor: 2827, LaunchContacts: 2828, LaunchPhone: 2829, LaunchAssistant: 2830, LaunchControlPanel: 2831, BrowserBack: 3073, BrowserFavorites: 3074, BrowserForward: 3075, BrowserHome: 3076, BrowserRefresh: 3077, BrowserSearch: 3078, BrowserStop: 3079, AudioBalanceLeft: 3329, AudioBalanceRight: 3330, AudioBassBoostDown: 3331, AudioBassBoostUp: 3332, AudioFaderFront: 3333, AudioFaderRear: 3334, AudioSurroundModeNext: 3335, AVRInput: 3336, AVRPower: 3337, ChannelDown: 3338, ChannelUp: 3339, ColorF0Red: 3340, ColorF1Green: 3341, ColorF2Yellow: 3342, ColorF3Blue: 3343, ColorF4Grey: 3344, ColorF5Brown: 3345, ClosedCaptionToggle: 3346, Dimmer: 3347, DisplaySwap: 3348, Exit: 3349, FavoriteClear0: 3350, FavoriteClear1: 3351, FavoriteClear2: 3352, FavoriteClear3: 3353, FavoriteRecall0: 3354, FavoriteRecall1: 3355, FavoriteRecall2: 3356, FavoriteRecall3: 3357, FavoriteStore0: 3358, FavoriteStore1: 3359, FavoriteStore2: 3360, FavoriteStore3: 3361, Guide: 3362, GuideNextDay: 3363, GuidePreviousDay: 3364, Info: 3365, InstantReplay: 3366, Link: 3367, ListProgram: 3368, LiveContent: 3369, Lock: 3370, MediaApps: 3371, MediaFastForward: 3372, MediaLast: 3373, MediaPause: 3374, MediaPlay: 3375, MediaRecord: 3376, MediaRewind: 3377, MediaSkip: 3378, NextFavoriteChannel: 3379, NextUserProfile: 3380, OnDemand: 3381, PinPDown: 3382, PinPMove: 3383, PinPToggle: 3384, PinPUp: 3385, PlaySpeedDown: 3386, PlaySpeedReset: 3387, PlaySpeedUp: 3388, RandomToggle: 3389, RcLowBattery: 3390, RecordSpeedNext: 3391, RfBypass: 3392, ScanChannelsToggle: 3393, ScreenModeNext: 3394, Settings: 3395, SplitScreenToggle: 3396, STBInput: 3397, STBPower: 3398, Subtitle: 3399, Teletext: 3400, TV: 3401, TVInput: 3402, TVPower: 3403, VideoModeNext: 3404, Wink: 3405, ZoomToggle: 3406, DVR: 3407, MediaAudioTrack: 3408, MediaSkipBackward: 3409, MediaSkipForward: 3410, MediaStepBackward: 3411, MediaStepForward: 3412, MediaTopMenu: 3413, NavigateIn: 3414, NavigateNext: 3415, NavigateOut: 3416, NavigatePrevious: 3417, Pairing: 3418, MediaClose: 3419, AudioBassBoostToggle: 3586, AudioTrebleDown: 3588, AudioTrebleUp: 3589, MicrophoneToggle: 3590, MicrophoneVolumeDown: 3591, MicrophoneVolumeUp: 3592, MicrophoneVolumeMute: 3593, SpeechCorrectionList: 3841, SpeechInputToggle: 3842, AppSwitch: 4097, Call: 4098, CameraFocus: 4099, EndCall: 4100, GoBack: 4101, GoHome: 4102, HeadsetHook: 4103, LastNumberRedial: 4104, Notification: 4105, MannerMode: 4106, VoiceDial: 4107, TV3DMode: 4353, TVAntennaCable: 4354, TVAudioDescription: 4355, TVAudioDescriptionMixDown: 4356, TVAudioDescriptionMixUp: 4357, TVContentsMenu: 4358, TVDataService: 4359, TVInputComponent1: 4360, TVInputComponent2: 4361, TVInputComposite1: 4362, TVInputComposite2: 4363, TVInputHDMI1: 4364, TVInputHDMI2: 4365, TVInputHDMI3: 4366, TVInputHDMI4: 4367, TVInputVGA1: 4368, TVMediaContext: 4369, TVNetwork: 4370, TVNumberEntry: 4371, TVRadioService: 4372, TVSatellite: 4373, TVSatelliteBS: 4374, TVSatelliteCS: 4375, TVSatelliteToggle: 4376, TVTerrestrialAnalog: 4377, TVTerrestrialDigital: 4378, TVTimer: 4379, Key11: 4609, Key12: 4610, GameButton1: 392961, GameButton2: 392962, GameButton3: 392963, GameButton4: 392964, GameButton5: 392965, GameButton6: 392966, GameButton7: 392967, GameButton8: 392968, GameButton9: 392969, GameButton10: 392970, GameButton11: 392971, GameButton12: 392972, GameButton13: 392973, GameButton14: 392974, GameButton15: 392975, GameButton16: 392976, GameButtonA: 392977, GameButtonB: 392978, GameButtonC: 392979, GameButtonLeft1: 392980, GameButtonLeft2: 392981, GameButtonMode: 392982, GameButtonRight1: 392983, GameButtonRight2: 392984, GameButtonSelect: 392985, GameButtonStart: 392986, GameButtonThumbLeft: 392987, GameButtonThumbRight: 392988, GameButtonX: 392989, GameButtonY: 392990, GameButtonZ: 392991, Suspend: 4294967316, Resume: 4294967317, Sleep: 4295032962, IntlBackslash: 4295426148, IntlRo: 4295426183, IntlYen: 4295426185, Lang1: 4295426192, Lang2: 4295426193, Lang3: 4295426194, Lang4: 4295426195, Lang5: 4295426196, Abort: 4295426203}, C.List_mC8, type$.ConstantStringMap_String_int);
    C.List_oWp = H.setRuntimeTypeInfo(makeConstList(["NumpadDivide", "NumpadMultiply", "NumpadSubtract", "NumpadAdd", "Numpad1", "Numpad2", "Numpad3", "Numpad4", "Numpad5", "Numpad6", "Numpad7", "Numpad8", "Numpad9", "Numpad0", "NumpadDecimal", "NumpadEqual", "NumpadComma", "NumpadParenLeft", "NumpadParenRight"]), type$.JSArray_String);
    C.Map_oWkr3 = new H.ConstantStringMap(19, {NumpadDivide: C.LogicalKeyboardKey_4295426132, NumpadMultiply: C.LogicalKeyboardKey_4295426133, NumpadSubtract: C.LogicalKeyboardKey_4295426134, NumpadAdd: C.LogicalKeyboardKey_4295426135, Numpad1: C.LogicalKeyboardKey_4295426137, Numpad2: C.LogicalKeyboardKey_4295426138, Numpad3: C.LogicalKeyboardKey_4295426139, Numpad4: C.LogicalKeyboardKey_4295426140, Numpad5: C.LogicalKeyboardKey_4295426141, Numpad6: C.LogicalKeyboardKey_4295426142, Numpad7: C.LogicalKeyboardKey_4295426143, Numpad8: C.LogicalKeyboardKey_4295426144, Numpad9: C.LogicalKeyboardKey_4295426145, Numpad0: C.LogicalKeyboardKey_4295426146, NumpadDecimal: C.LogicalKeyboardKey_4295426147, NumpadEqual: C.LogicalKeyboardKey_4295426151, NumpadComma: C.LogicalKeyboardKey_4295426181, NumpadParenLeft: C.LogicalKeyboardKey_4295426230, NumpadParenRight: C.LogicalKeyboardKey_4295426231}, C.List_oWp, type$.ConstantStringMap_String_LogicalKeyboardKey);
    C.Map_yXAeS = new H.GeneralConstantMap([0, "FontWeight.w100", 1, "FontWeight.w200", 2, "FontWeight.w300", 3, "FontWeight.w400", 4, "FontWeight.w500", 5, "FontWeight.w600", 6, "FontWeight.w700", 7, "FontWeight.w800", 8, "FontWeight.w900"], H.findType("GeneralConstantMap<int,String>"));
    C.MaterialBannerThemeData_null_null_null_null = new Q.MaterialBannerThemeData(null, null, null, null);
    C.Color_4293128957 = new P.Color(4293128957);
    C.Color_4290502395 = new P.Color(4290502395);
    C.Color_4287679225 = new P.Color(4287679225);
    C.Color_4284790262 = new P.Color(4284790262);
    C.Color_4282557941 = new P.Color(4282557941);
    C.Color_4280391411 = new P.Color(4280391411);
    C.Color_4280191205 = new P.Color(4280191205);
    C.Color_4279858898 = new P.Color(4279858898);
    C.Color_4279592384 = new P.Color(4279592384);
    C.Color_4279060385 = new P.Color(4279060385);
    C.Map_JNwaj = new H.GeneralConstantMap([50, C.Color_4293128957, 100, C.Color_4290502395, 200, C.Color_4287679225, 300, C.Color_4284790262, 400, C.Color_4282557941, 500, C.Color_4280391411, 600, C.Color_4280191205, 700, C.Color_4279858898, 800, C.Color_4279592384, 900, C.Color_4279060385], type$.GeneralConstantMap_int_Color);
    C.MaterialColor_Map_JNwaj_4280391411 = new E.MaterialColor(C.Map_JNwaj, 4280391411);
    C.MaterialState_0 = new V.MaterialState("MaterialState.hovered");
    C.MaterialState_1 = new V.MaterialState("MaterialState.focused");
    C.MaterialState_2 = new V.MaterialState("MaterialState.pressed");
    C.MaterialState_5 = new V.MaterialState("MaterialState.disabled");
    C.MaterialTapTargetSize_0 = new X.MaterialTapTargetSize("MaterialTapTargetSize.padded");
    C.MaterialTapTargetSize_1 = new X.MaterialTapTargetSize("MaterialTapTargetSize.shrinkWrap");
    C.MaterialType_0 = new M.MaterialType("MaterialType.canvas");
    C.MaterialType_1 = new M.MaterialType("MaterialType.card");
    C.MaterialType_2 = new M.MaterialType("MaterialType.circle");
    C.MaterialType_3 = new M.MaterialType("MaterialType.button");
    C.MaterialType_4 = new M.MaterialType("MaterialType.transparency");
    C.MethodCall_popRoute_null = new H.MethodCall0("popRoute", null);
    C.C_StandardMethodCodec0 = new U.StandardMethodCodec0();
    C.MethodChannel_Gpa = new A.MethodChannel("flutter/service_worker", C.C_StandardMethodCodec0);
    C.MutatorType_0 = new H.MutatorType("MutatorType.clipRect");
    C.MutatorType_1 = new H.MutatorType("MutatorType.clipRRect");
    C.MutatorType_2 = new H.MutatorType("MutatorType.clipPath");
    C.MutatorType_3 = new H.MutatorType("MutatorType.transform");
    C.MutatorType_4 = new H.MutatorType("MutatorType.opacity");
    C.NavigationMode_0 = new F.NavigationMode("NavigationMode.traditional");
    C.NavigationMode_1 = new F.NavigationMode("NavigationMode.directional");
    C.NavigationRailThemeData_U06 = new E.NavigationRailThemeData(null, null, null, null, null, null, null, null);
    C.Offset_0_0 = new P.Offset(0, 0);
    C.OffsetPair_G6F = new S.OffsetPair(C.Offset_0_0, C.Offset_0_0);
    C.Offset_1_0 = new P.Offset(1, 0);
    C.Offset_20_20 = new P.Offset(20, 20);
    C.Offset_40_40 = new P.Offset(40, 40);
    C.Offset_Oho = new P.Offset(-0.3333333333333333, 0);
    C.Offset_chs = new P.Offset(0, 0.25);
    C.OperatingSystem_0 = new H.OperatingSystem("OperatingSystem.iOs");
    C.OperatingSystem_1 = new H.OperatingSystem("OperatingSystem.android");
    C.OperatingSystem_2 = new H.OperatingSystem("OperatingSystem.linux");
    C.OperatingSystem_3 = new H.OperatingSystem("OperatingSystem.windows");
    C.OperatingSystem_4 = new H.OperatingSystem("OperatingSystem.macOs");
    C.OperatingSystem_5 = new H.OperatingSystem("OperatingSystem.unknown");
    C.C_JSONMethodCodec0 = new U.JSONMethodCodec0();
    C.OptionalMethodChannel_cWd = new A.OptionalMethodChannel("flutter/platform", C.C_JSONMethodCodec0);
    C.OptionalMethodChannel_fgL = new A.OptionalMethodChannel("flutter/restoration", C.C_StandardMethodCodec0);
    C.OptionalMethodChannel_meQ = new A.OptionalMethodChannel("flutter/mousecursor", C.C_StandardMethodCodec0);
    C.OptionalMethodChannel_urv = new A.OptionalMethodChannel("flutter/navigation", C.C_JSONMethodCodec0);
    C.OrdinalSortKey_0_null = new A.OrdinalSortKey(0, null);
    C.OutlinedButtonThemeData_null = new U.OutlinedButtonThemeData(null);
    C.Overflow_1 = new K.Overflow("Overflow.clip");
    C.PaintingStyle_0 = new P.PaintingStyle(0, "PaintingStyle.fill");
    C.PaintingStyle_1 = new P.PaintingStyle(1, "PaintingStyle.stroke");
    C.ParagraphConstraints_60 = new P.ParagraphConstraints(60);
    C.PathFillType_0 = new P.PathFillType(0, "PathFillType.nonZero");
    C.PathFillType_1 = new P.PathFillType(1, "PathFillType.evenOdd");
    C.PersistedSurfaceState_0 = new H.PersistedSurfaceState("PersistedSurfaceState.created");
    C.PersistedSurfaceState_1 = new H.PersistedSurfaceState("PersistedSurfaceState.active");
    C.PersistedSurfaceState_2 = new H.PersistedSurfaceState("PersistedSurfaceState.pendingRetention");
    C.PersistedSurfaceState_3 = new H.PersistedSurfaceState("PersistedSurfaceState.pendingUpdate");
    C.PersistedSurfaceState_4 = new H.PersistedSurfaceState("PersistedSurfaceState.released");
    C.PlaceholderAlignment_0 = new P.PlaceholderAlignment("PlaceholderAlignment.baseline");
    C.PlaceholderAlignment_1 = new P.PlaceholderAlignment("PlaceholderAlignment.aboveBaseline");
    C.PlaceholderAlignment_2 = new P.PlaceholderAlignment("PlaceholderAlignment.belowBaseline");
    C.PlaceholderAlignment_3 = new P.PlaceholderAlignment("PlaceholderAlignment.top");
    C.PlaceholderAlignment_4 = new P.PlaceholderAlignment("PlaceholderAlignment.bottom");
    C.PlaceholderAlignment_5 = new P.PlaceholderAlignment("PlaceholderAlignment.middle");
    C.Size_0_0 = new P.Size(0, 0);
    C.PlaceholderDimensions_Size_0_0_null = new U.PlaceholderDimensions(C.Size_0_0, null);
    C.PointerChange_0 = new P.PointerChange("PointerChange.cancel");
    C.PointerChange_1 = new P.PointerChange("PointerChange.add");
    C.PointerChange_2 = new P.PointerChange("PointerChange.remove");
    C.PointerChange_3 = new P.PointerChange("PointerChange.hover");
    C.PointerChange_4 = new P.PointerChange("PointerChange.down");
    C.PointerChange_5 = new P.PointerChange("PointerChange.move");
    C.PointerChange_6 = new P.PointerChange("PointerChange.up");
    C.PointerDeviceKind_0 = new P.PointerDeviceKind("PointerDeviceKind.touch");
    C.PointerDeviceKind_1 = new P.PointerDeviceKind("PointerDeviceKind.mouse");
    C.PointerDeviceKind_2 = new P.PointerDeviceKind("PointerDeviceKind.stylus");
    C.PointerDeviceKind_3 = new P.PointerDeviceKind("PointerDeviceKind.invertedStylus");
    C.PointerDeviceKind_4 = new P.PointerDeviceKind("PointerDeviceKind.unknown");
    C.PointerSignalKind_0 = new P.PointerSignalKind("PointerSignalKind.none");
    C.PointerSignalKind_1 = new P.PointerSignalKind("PointerSignalKind.scroll");
    C.PointerSignalKind_2 = new P.PointerSignalKind("PointerSignalKind.unknown");
    C.PopupMenuThemeData_XJe = new R.PopupMenuThemeData(null, null, null, null, null);
    C.Priority_100000 = new V.Priority(100000);
    C.RRect_GZS = new P.RRect(20, 20, 60, 60, 10, 10, 10, 10, 10, 10, 10, 10, true);
    C.RadioThemeData_gDe = new T.RadioThemeData(null, null, null, null, null, null);
    C.Rect_0_0_0_0 = new P.Rect(0, 0, 0, 0);
    C.Rect_10_10_320_240 = new P.Rect(10, 10, 320, 240);
    C.Rect_aha = new P.Rect(-1000000000, -1000000000, 1000000000, 1000000000);
    C.RenderComparison_0 = new G.RenderComparison(0, "RenderComparison.identical");
    C.RenderComparison_1 = new G.RenderComparison(1, "RenderComparison.metadata");
    C.RenderComparison_2 = new G.RenderComparison(2, "RenderComparison.paint");
    C.RenderComparison_3 = new G.RenderComparison(3, "RenderComparison.layout");
    C.Role_0 = new H.Role("Role.incrementable");
    C.Role_1 = new H.Role("Role.scrollable");
    C.Role_2 = new H.Role("Role.labelAndValue");
    C.Role_3 = new H.Role("Role.tappable");
    C.Role_4 = new H.Role("Role.textField");
    C.Role_5 = new H.Role("Role.checkable");
    C.Role_6 = new H.Role("Role.image");
    C.Role_7 = new H.Role("Role.liveRegion");
    C.RoundedRectangleBorder_a51 = new X.RoundedRectangleBorder(C.BorderRadius_tLn, C.BorderSide_m7u);
    C.Radius_2_2 = new P.Radius(2, 2);
    C.BorderRadius_tLn0 = new K.BorderRadius(C.Radius_2_2, C.Radius_2_2, C.Radius_2_2, C.Radius_2_2);
    C.RoundedRectangleBorder_a510 = new X.RoundedRectangleBorder(C.BorderRadius_tLn0, C.BorderSide_m7u);
    C.Radius_4_4 = new P.Radius(4, 4);
    C.BorderRadius_tLn1 = new K.BorderRadius(C.Radius_4_4, C.Radius_4_4, C.Radius_4_4, C.Radius_4_4);
    C.RoundedRectangleBorder_a511 = new X.RoundedRectangleBorder(C.BorderRadius_tLn1, C.BorderSide_m7u);
    C.RoutePopDisposition_0 = new K.RoutePopDisposition("RoutePopDisposition.pop");
    C.RoutePopDisposition_1 = new K.RoutePopDisposition("RoutePopDisposition.doNotPop");
    C.RoutePopDisposition_2 = new K.RoutePopDisposition("RoutePopDisposition.bubble");
    C.RouteSettings_null_null = new K.RouteSettings(null, null);
    C.SchedulerPhase_0 = new N.SchedulerPhase(0, "SchedulerPhase.idle");
    C.SchedulerPhase_1 = new N.SchedulerPhase(1, "SchedulerPhase.transientCallbacks");
    C.SchedulerPhase_2 = new N.SchedulerPhase(2, "SchedulerPhase.midFrameMicrotasks");
    C.SchedulerPhase_3 = new N.SchedulerPhase(3, "SchedulerPhase.persistentCallbacks");
    C.SchedulerPhase_4 = new N.SchedulerPhase(4, "SchedulerPhase.postFrameCallbacks");
    C.ScriptCategory_0 = new U.ScriptCategory("ScriptCategory.englishLike");
    C.ScriptCategory_1 = new U.ScriptCategory("ScriptCategory.dense");
    C.ScriptCategory_2 = new U.ScriptCategory("ScriptCategory.tall");
    C.ScrollIncrementType_0 = new F.ScrollIncrementType("ScrollIncrementType.line");
    C.ScrollIntent_R43 = new F.ScrollIntent(C.AxisDirection_2, C.ScrollIncrementType_0);
    C.ScrollIntent_Uzc = new F.ScrollIntent(C.AxisDirection_0, C.ScrollIncrementType_0);
    C.ScrollIntent_Uzc0 = new F.ScrollIntent(C.AxisDirection_0, C.ScrollIncrementType_1);
    C.ScrollIntent_o8I = new F.ScrollIntent(C.AxisDirection_1, C.ScrollIncrementType_0);
    C.ScrollIntent_vpn = new F.ScrollIntent(C.AxisDirection_3, C.ScrollIncrementType_0);
    C.ScrollPositionAlignmentPolicy_0 = new A.ScrollPositionAlignmentPolicy("ScrollPositionAlignmentPolicy.explicit");
    C.ScrollPositionAlignmentPolicy_1 = new A.ScrollPositionAlignmentPolicy("ScrollPositionAlignmentPolicy.keepVisibleAtEnd");
    C.ScrollPositionAlignmentPolicy_2 = new A.ScrollPositionAlignmentPolicy("ScrollPositionAlignmentPolicy.keepVisibleAtStart");
    C.ScrollbarThemeData_I7P = new X.ScrollbarThemeData(null, null, null, null, null, null, null, null, null, null, null);
    C.SelectionChangedCause_4 = new N.SelectionChangedCause();
    C.SemanticsAction_1 = new P.SemanticsAction(1);
    C.SemanticsAction_1024 = new P.SemanticsAction(1024);
    C.SemanticsAction_1048576 = new P.SemanticsAction(1048576);
    C.SemanticsAction_128 = new P.SemanticsAction(128);
    C.SemanticsAction_16 = new P.SemanticsAction(16);
    C.SemanticsAction_16384 = new P.SemanticsAction(16384);
    C.SemanticsAction_2 = new P.SemanticsAction(2);
    C.SemanticsAction_2048 = new P.SemanticsAction(2048);
    C.SemanticsAction_2097152 = new P.SemanticsAction(2097152);
    C.SemanticsAction_256 = new P.SemanticsAction(256);
    C.SemanticsAction_262144 = new P.SemanticsAction(262144);
    C.SemanticsAction_32 = new P.SemanticsAction(32);
    C.SemanticsAction_32768 = new P.SemanticsAction(32768);
    C.SemanticsAction_4 = new P.SemanticsAction(4);
    C.SemanticsAction_4096 = new P.SemanticsAction(4096);
    C.SemanticsAction_512 = new P.SemanticsAction(512);
    C.SemanticsAction_524288 = new P.SemanticsAction(524288);
    C.SemanticsAction_64 = new P.SemanticsAction(64);
    C.SemanticsAction_65536 = new P.SemanticsAction(65536);
    C.SemanticsAction_8 = new P.SemanticsAction(8);
    C.SemanticsAction_8192 = new P.SemanticsAction(8192);
    C.SemanticsFlag_1 = new P.SemanticsFlag(1);
    C.SemanticsFlag_1024 = new P.SemanticsFlag(1024);
    C.SemanticsFlag_1048576 = new P.SemanticsFlag(1048576);
    C.SemanticsFlag_128 = new P.SemanticsFlag(128);
    C.SemanticsFlag_131072 = new P.SemanticsFlag(131072);
    C.SemanticsFlag_16 = new P.SemanticsFlag(16);
    C.SemanticsFlag_16384 = new P.SemanticsFlag(16384);
    C.SemanticsFlag_16777216 = new P.SemanticsFlag(16777216);
    C.SemanticsFlag_2 = new P.SemanticsFlag(2);
    C.SemanticsFlag_2048 = new P.SemanticsFlag(2048);
    C.SemanticsFlag_2097152 = new P.SemanticsFlag(2097152);
    C.SemanticsFlag_256 = new P.SemanticsFlag(256);
    C.SemanticsFlag_32 = new P.SemanticsFlag(32);
    C.SemanticsFlag_32768 = new P.SemanticsFlag(32768);
    C.SemanticsFlag_4 = new P.SemanticsFlag(4);
    C.SemanticsFlag_4096 = new P.SemanticsFlag(4096);
    C.SemanticsFlag_4194304 = new P.SemanticsFlag(4194304);
    C.SemanticsFlag_512 = new P.SemanticsFlag(512);
    C.SemanticsFlag_524288 = new P.SemanticsFlag(524288);
    C.SemanticsFlag_64 = new P.SemanticsFlag(64);
    C.SemanticsFlag_65536 = new P.SemanticsFlag(65536);
    C.SemanticsFlag_8 = new P.SemanticsFlag(8);
    C.SemanticsFlag_8192 = new P.SemanticsFlag(8192);
    C.SemanticsFlag_8388608 = new P.SemanticsFlag(8388608);
    C.List_2No = H.setRuntimeTypeInfo(makeConstList(["click", "touchstart", "touchend", "pointerdown", "pointermove", "pointerup"]), type$.JSArray_String);
    C.Map_2NPLv = new H.ConstantStringMap(6, {click: null, touchstart: null, touchend: null, pointerdown: null, pointermove: null, pointerup: null}, C.List_2No, type$.ConstantStringMap_String_Null);
    C.Set_2No4 = new P._UnmodifiableSet(C.Map_2NPLv, type$._UnmodifiableSet_String);
    C.List_Yab = H.setRuntimeTypeInfo(makeConstList(["click", "keyup", "keydown", "mouseup", "mousedown", "pointerdown", "pointerup"]), type$.JSArray_String);
    C.Map_Yae5Z = new H.ConstantStringMap(7, {click: null, keyup: null, keydown: null, mouseup: null, mousedown: null, pointerdown: null, pointerup: null}, C.List_Yab, type$.ConstantStringMap_String_Null);
    C.Set_Yabt3 = new P._UnmodifiableSet(C.Map_Yae5Z, type$._UnmodifiableSet_String);
    C.Map_m5b7J = new H.GeneralConstantMap([C.OperatingSystem_4, null, C.OperatingSystem_2, null, C.OperatingSystem_3, null], H.findType("GeneralConstantMap<OperatingSystem,Null>"));
    C.Set_m536 = new P._UnmodifiableSet(C.Map_m5b7J, H.findType("_UnmodifiableSet<OperatingSystem>"));
    C.List_wIv = H.setRuntimeTypeInfo(makeConstList(["serif", "sans-serif", "monospace", "cursive", "fantasy", "system-ui", "math", "emoji", "fangsong"]), type$.JSArray_String);
    C.Map_wImu2 = new H.ConstantStringMap(9, {serif: null, "sans-serif": null, monospace: null, cursive: null, fantasy: null, "system-ui": null, math: null, emoji: null, fangsong: null}, C.List_wIv, type$.ConstantStringMap_String_Null);
    C.Set_wIvsi = new P._UnmodifiableSet(C.Map_wImu2, type$._UnmodifiableSet_String);
    C.Size_100000_100000 = new P.Size(100000, 100000);
    C.SizedBox_0_0_null_null = new T.SizedBox(0, 0, null, null);
    C.SliderThemeData_Q5Z = new Q.SliderThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.SnackBarClosedReason_3 = new N.SnackBarClosedReason("SnackBarClosedReason.hide");
    C.SnackBarClosedReason_5 = new N.SnackBarClosedReason("SnackBarClosedReason.timeout");
    C.SnackBarThemeData_gc6 = new K.SnackBarThemeData(null, null, null, null, null, null, null);
    C.StackFit_0 = new K.StackFit("StackFit.loose");
    C.StackFit_1 = new K.StackFit("StackFit.expand");
    C.StackFit_2 = new K.StackFit("StackFit.passthrough");
    C.StackFrame_8sg = new R.StackFrame("...", -1, "", "", "", -1, -1, "", "...");
    C.StackFrame_SOW = new R.StackFrame("<asynchronous suspension>", -1, "", "", "", -1, -1, "", "asynchronous suspension");
    C.StrokeCap_0 = new P.StrokeCap(0, "StrokeCap.butt");
    C.StrokeCap_1 = new P.StrokeCap(1, "StrokeCap.round");
    C.StrokeCap_2 = new P.StrokeCap(2, "StrokeCap.square");
    C.StrokeJoin_0 = new P.StrokeJoin(0, "StrokeJoin.miter");
    C.StrokeJoin_1 = new P.StrokeJoin(1, "StrokeJoin.round");
    C.StrokeJoin_2 = new P.StrokeJoin(2, "StrokeJoin.bevel");
    C.SwitchThemeData_v9F = new R.SwitchThemeData(null, null, null, null, null, null);
    C.Symbol_call = new H.Symbol("call");
    C.SystemSoundType_0 = new V.SystemSoundType("SystemSoundType.click");
    C.SystemSoundType_1 = new V.SystemSoundType("SystemSoundType.alert");
    C.TabBarTheme_Srx = new U.TabBarTheme(null, null, null, null, null, null, null);
    C.TapSemanticEvent_tap = new E.TapSemanticEvent("tap");
    C.TextBaseline_0 = new P.TextBaseline(0, "TextBaseline.alphabetic");
    C.TextBaseline_1 = new P.TextBaseline(1, "TextBaseline.ideographic");
    C.TextButtonThemeData_null = new T.TextButtonThemeData(null);
    C.TextCapitalization_3 = new H.TextCapitalization("TextCapitalization.none");
    C.TextCapitalizationConfig_TextCapitalization_3 = new H.TextCapitalizationConfig(C.TextCapitalization_3);
    C.TextCapitalization_0 = new H.TextCapitalization("TextCapitalization.words");
    C.TextCapitalization_1 = new H.TextCapitalization("TextCapitalization.sentences");
    C.TextCapitalization_2 = new H.TextCapitalization("TextCapitalization.characters");
    C.TextDecorationStyle_0 = new P.TextDecorationStyle(0, "TextDecorationStyle.solid");
    C.TextDecorationStyle_1 = new P.TextDecorationStyle(1, "TextDecorationStyle.double");
    C.TextDecorationStyle_2 = new P.TextDecorationStyle(2, "TextDecorationStyle.dotted");
    C.TextDecorationStyle_3 = new P.TextDecorationStyle(3, "TextDecorationStyle.dashed");
    C.TextDecorationStyle_4 = new P.TextDecorationStyle(4, "TextDecorationStyle.wavy");
    C.TextDecoration_0 = new P.TextDecoration(0);
    C.TextOverflow_0 = new Q.TextOverflow("TextOverflow.clip");
    C.TextOverflow_1 = new Q.TextOverflow("TextOverflow.fade");
    C.TextOverflow_2 = new Q.TextOverflow("TextOverflow.ellipsis");
    C.TextOverflow_3 = new Q.TextOverflow("TextOverflow.visible");
    C.TextPosition_0_TextAffinity_1 = new P.TextPosition(0, C.TextAffinity_1);
    C.TextSelectionThemeData_null_null_null = new R.TextSelectionThemeData(null, null, null);
    C.Color_3506372608 = new P.Color(3506372608);
    C.TextDecoration_1 = new P.TextDecoration(1);
    C.Color_4294967040 = new P.Color(4294967040);
    C.TextStyle_jrF = new A.TextStyle(true, C.Color_3506372608, null, "monospace", null, null, 48, C.FontWeight_8, null, null, null, null, null, null, null, null, null, C.TextDecoration_1, C.Color_4294967040, C.TextDecorationStyle_1, null, "fallback style; consider putting your text in a Material", null, null);
    C.TextStyle_ouk = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity headline1", null, null);
    C.TextStyle_ouk0 = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity headline2", null, null);
    C.TextStyle_ouk1 = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity headline3", null, null);
    C.TextStyle_ouk2 = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity headline4", null, null);
    C.TextStyle_ouk3 = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity headline5", null, null);
    C.TextStyle_ouk4 = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity headline6", null, null);
    C.TextStyle_4eF = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity subtitle1", null, null);
    C.TextStyle_4eF0 = new A.TextStyle(true, C.Color_4278190080, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity subtitle2", null, null);
    C.TextStyle_EQZ = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity bodyText1", null, null);
    C.TextStyle_EQZ0 = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity bodyText2", null, null);
    C.TextStyle_0 = new A.TextStyle(true, C.Color_2315255808, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity caption", null, null);
    C.TextStyle_oxB = new A.TextStyle(true, C.Color_3707764736, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity button", null, null);
    C.TextStyle_Z7N = new A.TextStyle(true, C.Color_4278190080, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedwoodCity overline", null, null);
    C.TextTheme_0vk = new R.TextTheme(C.TextStyle_ouk, C.TextStyle_ouk0, C.TextStyle_ouk1, C.TextStyle_ouk2, C.TextStyle_ouk3, C.TextStyle_ouk4, C.TextStyle_4eF, C.TextStyle_4eF0, C.TextStyle_EQZ, C.TextStyle_EQZ0, C.TextStyle_0, C.TextStyle_oxB, C.TextStyle_Z7N);
    C.List_Exl = H.setRuntimeTypeInfo(makeConstList(["Ubuntu", "Cantarell", "DejaVu Sans", "Liberation Sans", "Arial"]), type$.JSArray_String);
    C.TextStyle_yvr = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline1", null, null);
    C.TextStyle_yvr0 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline2", null, null);
    C.TextStyle_yvr1 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline3", null, null);
    C.TextStyle_yvr2 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline4", null, null);
    C.TextStyle_IsU = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline5", null, null);
    C.TextStyle_IsU0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki headline6", null, null);
    C.TextStyle_yLM = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki subtitle1", null, null);
    C.TextStyle_yLM0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki subtitle2", null, null);
    C.TextStyle_SnA = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki bodyText1", null, null);
    C.TextStyle_SnA0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki bodyText2", null, null);
    C.TextStyle_PcA = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki caption", null, null);
    C.TextStyle_i78 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki button", null, null);
    C.TextStyle_um3 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteHelsinki overline", null, null);
    C.TextTheme_69H = new R.TextTheme(C.TextStyle_yvr, C.TextStyle_yvr0, C.TextStyle_yvr1, C.TextStyle_yvr2, C.TextStyle_IsU, C.TextStyle_IsU0, C.TextStyle_yLM, C.TextStyle_yLM0, C.TextStyle_SnA, C.TextStyle_SnA0, C.TextStyle_PcA, C.TextStyle_i78, C.TextStyle_um3);
    C.TextStyle_M0o = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline1", null, null);
    C.TextStyle_M0o0 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline2", null, null);
    C.TextStyle_M0o1 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline3", null, null);
    C.TextStyle_M0o2 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline4", null, null);
    C.TextStyle_M0o3 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline5", null, null);
    C.TextStyle_M0o4 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView headline6", null, null);
    C.TextStyle_V2J = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView subtitle1", null, null);
    C.TextStyle_V2J0 = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView subtitle2", null, null);
    C.TextStyle_3yH = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView bodyText1", null, null);
    C.TextStyle_3yH0 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView bodyText2", null, null);
    C.TextStyle_K55 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView caption", null, null);
    C.TextStyle_U2f = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView button", null, null);
    C.TextStyle_Avr = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackMountainView overline", null, null);
    C.TextTheme_6Hm = new R.TextTheme(C.TextStyle_M0o, C.TextStyle_M0o0, C.TextStyle_M0o1, C.TextStyle_M0o2, C.TextStyle_M0o3, C.TextStyle_M0o4, C.TextStyle_V2J, C.TextStyle_V2J0, C.TextStyle_3yH, C.TextStyle_3yH0, C.TextStyle_K55, C.TextStyle_U2f, C.TextStyle_Avr);
    C.TextStyle_mKQ = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline1", null, null);
    C.TextStyle_mKQ0 = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline2", null, null);
    C.TextStyle_mKQ1 = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline3", null, null);
    C.TextStyle_mKQ2 = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline4", null, null);
    C.TextStyle_mKQ3 = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline5", null, null);
    C.TextStyle_mKQ4 = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond headline6", null, null);
    C.TextStyle_4CA = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond subtitle1", null, null);
    C.TextStyle_4CA0 = new A.TextStyle(true, C.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond subtitle2", null, null);
    C.TextStyle_WrR = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond bodyText1", null, null);
    C.TextStyle_WrR0 = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond bodyText2", null, null);
    C.TextStyle_ZUk = new A.TextStyle(true, C.Color_2315255808, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond caption", null, null);
    C.TextStyle_wzg = new A.TextStyle(true, C.Color_3707764736, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond button", null, null);
    C.TextStyle_8TW = new A.TextStyle(true, C.Color_4278190080, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackRedmond overline", null, null);
    C.TextTheme_6hH = new R.TextTheme(C.TextStyle_mKQ, C.TextStyle_mKQ0, C.TextStyle_mKQ1, C.TextStyle_mKQ2, C.TextStyle_mKQ3, C.TextStyle_mKQ4, C.TextStyle_4CA, C.TextStyle_4CA0, C.TextStyle_WrR, C.TextStyle_WrR0, C.TextStyle_ZUk, C.TextStyle_wzg, C.TextStyle_8TW);
    C.TextStyle_5IZ = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline1", null, null);
    C.TextStyle_5IZ0 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline2", null, null);
    C.TextStyle_5IZ1 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline3", null, null);
    C.TextStyle_5IZ2 = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline4", null, null);
    C.TextStyle_vhw = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline5", null, null);
    C.TextStyle_vhw0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView headline6", null, null);
    C.TextStyle_6dJ = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView subtitle1", null, null);
    C.TextStyle_6dJ0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView subtitle2", null, null);
    C.TextStyle_4SO = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView bodyText1", null, null);
    C.TextStyle_4SO0 = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView bodyText2", null, null);
    C.TextStyle_wEs = new A.TextStyle(true, C.Color_3019898879, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView caption", null, null);
    C.TextStyle_e8d = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView button", null, null);
    C.TextStyle_oOX = new A.TextStyle(true, C.Color_4294967295, null, "Roboto", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteMountainView overline", null, null);
    C.TextTheme_A8Z = new R.TextTheme(C.TextStyle_5IZ, C.TextStyle_5IZ0, C.TextStyle_5IZ1, C.TextStyle_5IZ2, C.TextStyle_vhw, C.TextStyle_vhw0, C.TextStyle_6dJ, C.TextStyle_6dJ0, C.TextStyle_4SO, C.TextStyle_4SO0, C.TextStyle_wEs, C.TextStyle_e8d, C.TextStyle_oOX);
    C.TextStyle_dkm = new A.TextStyle(false, null, null, null, null, null, 112, C.FontWeight_0, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense display4 2014", null, null);
    C.TextStyle_dkm0 = new A.TextStyle(false, null, null, null, null, null, 56, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense display3 2014", null, null);
    C.TextStyle_dkm1 = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense display2 2014", null, null);
    C.TextStyle_dkm2 = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense display1 2014", null, null);
    C.TextStyle_kmg = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense headline 2014", null, null);
    C.TextStyle_2Gv = new A.TextStyle(false, null, null, null, null, null, 21, C.FontWeight_4, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense title 2014", null, null);
    C.TextStyle_1uv = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense subhead 2014", null, null);
    C.TextStyle_3S3 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense subtitle 2014", null, null);
    C.TextStyle_oyU = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense body2 2014", null, null);
    C.TextStyle_oyU0 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense body1 2014", null, null);
    C.TextStyle_4e8 = new A.TextStyle(false, null, null, null, null, null, 13, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense caption 2014", null, null);
    C.TextStyle_o3E = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense button 2014", null, null);
    C.TextStyle_2jN = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_3, null, null, null, C.TextBaseline_1, null, null, null, null, null, null, null, null, null, "dense overline 2014", null, null);
    C.TextTheme_BCG = new R.TextTheme(C.TextStyle_dkm, C.TextStyle_dkm0, C.TextStyle_dkm1, C.TextStyle_dkm2, C.TextStyle_kmg, C.TextStyle_2Gv, C.TextStyle_1uv, C.TextStyle_3S3, C.TextStyle_oyU, C.TextStyle_oyU0, C.TextStyle_4e8, C.TextStyle_o3E, C.TextStyle_2jN);
    C.TextStyle_g78 = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline1", null, null);
    C.TextStyle_sGW = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline2", null, null);
    C.TextStyle_XZj = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline3", null, null);
    C.TextStyle_00 = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline4", null, null);
    C.TextStyle_tae = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline5", null, null);
    C.TextStyle_Q1S = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino headline6", null, null);
    C.TextStyle_yrt = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino subtitle1", null, null);
    C.TextStyle_Phi = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino subtitle2", null, null);
    C.TextStyle_Xdg = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino bodyText1", null, null);
    C.TextStyle_8QI = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino bodyText2", null, null);
    C.TextStyle_ivD = new A.TextStyle(true, C.Color_3019898879, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino caption", null, null);
    C.TextStyle_Q92 = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino button", null, null);
    C.TextStyle_Gvh = new A.TextStyle(true, C.Color_4294967295, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteCupertino overline", null, null);
    C.TextTheme_Uhl = new R.TextTheme(C.TextStyle_g78, C.TextStyle_sGW, C.TextStyle_XZj, C.TextStyle_00, C.TextStyle_tae, C.TextStyle_Q1S, C.TextStyle_yrt, C.TextStyle_Phi, C.TextStyle_Xdg, C.TextStyle_8QI, C.TextStyle_ivD, C.TextStyle_Q92, C.TextStyle_Gvh);
    C.TextStyle_gmZ = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline1", null, null);
    C.TextStyle_MAi = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline2", null, null);
    C.TextStyle_zH6 = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline3", null, null);
    C.TextStyle_mN4 = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline4", null, null);
    C.TextStyle_GVt = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline5", null, null);
    C.TextStyle_O1W = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Display", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino headline6", null, null);
    C.TextStyle_6XC = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino subtitle1", null, null);
    C.TextStyle_cRy = new A.TextStyle(true, C.Color_4278190080, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino subtitle2", null, null);
    C.TextStyle_QIl = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino bodyText1", null, null);
    C.TextStyle_bFE = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino bodyText2", null, null);
    C.TextStyle_IVQ = new A.TextStyle(true, C.Color_2315255808, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino caption", null, null);
    C.TextStyle_p6t = new A.TextStyle(true, C.Color_3707764736, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino button", null, null);
    C.TextStyle_8Ef = new A.TextStyle(true, C.Color_4278190080, null, ".SF UI Text", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackCupertino overline", null, null);
    C.TextTheme_WPD = new R.TextTheme(C.TextStyle_gmZ, C.TextStyle_MAi, C.TextStyle_zH6, C.TextStyle_mN4, C.TextStyle_GVt, C.TextStyle_O1W, C.TextStyle_6XC, C.TextStyle_cRy, C.TextStyle_QIl, C.TextStyle_bFE, C.TextStyle_IVQ, C.TextStyle_p6t, C.TextStyle_8Ef);
    C.TextStyle_UJh = new A.TextStyle(false, null, null, null, null, null, 112, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall display4 2014", null, null);
    C.TextStyle_UJh0 = new A.TextStyle(false, null, null, null, null, null, 56, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall display3 2014", null, null);
    C.TextStyle_UJh1 = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall display2 2014", null, null);
    C.TextStyle_UJh2 = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall display1 2014", null, null);
    C.TextStyle_Cny = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall headline 2014", null, null);
    C.TextStyle_Vmp = new A.TextStyle(false, null, null, null, null, null, 21, C.FontWeight_6, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall title 2014", null, null);
    C.TextStyle_qTR = new A.TextStyle(false, null, null, null, null, null, 17, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall subhead 2014", null, null);
    C.TextStyle_evT = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_4, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall subtitle 2014", null, null);
    C.TextStyle_BIA = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_6, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall body2 2014", null, null);
    C.TextStyle_BIA0 = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall body1 2014", null, null);
    C.TextStyle_ecN = new A.TextStyle(false, null, null, null, null, null, 13, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall caption 2014", null, null);
    C.TextStyle_UbG = new A.TextStyle(false, null, null, null, null, null, 15, C.FontWeight_6, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall button 2014", null, null);
    C.TextStyle_Ae0 = new A.TextStyle(false, null, null, null, null, null, 11, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "tall overline 2014", null, null);
    C.TextTheme_aB5 = new R.TextTheme(C.TextStyle_UJh, C.TextStyle_UJh0, C.TextStyle_UJh1, C.TextStyle_UJh2, C.TextStyle_Cny, C.TextStyle_Vmp, C.TextStyle_qTR, C.TextStyle_evT, C.TextStyle_BIA, C.TextStyle_BIA0, C.TextStyle_ecN, C.TextStyle_UbG, C.TextStyle_Ae0);
    C.TextStyle_oWp = new A.TextStyle(false, null, null, null, null, null, 112, C.FontWeight_0, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike display4 2014", null, null);
    C.TextStyle_oWp0 = new A.TextStyle(false, null, null, null, null, null, 56, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike display3 2014", null, null);
    C.TextStyle_oWp1 = new A.TextStyle(false, null, null, null, null, null, 45, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike display2 2014", null, null);
    C.TextStyle_oWp2 = new A.TextStyle(false, null, null, null, null, null, 34, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike display1 2014", null, null);
    C.TextStyle_nGa = new A.TextStyle(false, null, null, null, null, null, 24, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike headline 2014", null, null);
    C.TextStyle_AO3 = new A.TextStyle(false, null, null, null, null, null, 20, C.FontWeight_4, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike title 2014", null, null);
    C.TextStyle_tcJ = new A.TextStyle(false, null, null, null, null, null, 16, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike subhead 2014", null, null);
    C.TextStyle_8eb = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, 0.1, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike subtitle 2014", null, null);
    C.TextStyle_EGu = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike body2 2014", null, null);
    C.TextStyle_EGu0 = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike body1 2014", null, null);
    C.TextStyle_E8w = new A.TextStyle(false, null, null, null, null, null, 12, C.FontWeight_3, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike caption 2014", null, null);
    C.TextStyle_MG8 = new A.TextStyle(false, null, null, null, null, null, 14, C.FontWeight_4, null, null, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike button 2014", null, null);
    C.TextStyle_Trs = new A.TextStyle(false, null, null, null, null, null, 10, C.FontWeight_3, null, 1.5, null, C.TextBaseline_0, null, null, null, null, null, null, null, null, null, "englishLike overline 2014", null, null);
    C.TextTheme_chs = new R.TextTheme(C.TextStyle_oWp, C.TextStyle_oWp0, C.TextStyle_oWp1, C.TextStyle_oWp2, C.TextStyle_nGa, C.TextStyle_AO3, C.TextStyle_tcJ, C.TextStyle_8eb, C.TextStyle_EGu, C.TextStyle_EGu0, C.TextStyle_E8w, C.TextStyle_MG8, C.TextStyle_Trs);
    C.TextStyle_c4R = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity headline1", null, null);
    C.TextStyle_c4R0 = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity headline2", null, null);
    C.TextStyle_c4R1 = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity headline3", null, null);
    C.TextStyle_c4R2 = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity headline4", null, null);
    C.TextStyle_GVy = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity headline5", null, null);
    C.TextStyle_GVy0 = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity headline6", null, null);
    C.TextStyle_nuW = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity subtitle1", null, null);
    C.TextStyle_nuW0 = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity subtitle2", null, null);
    C.TextStyle_Qqi = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity bodyText1", null, null);
    C.TextStyle_Qqi0 = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity bodyText2", null, null);
    C.TextStyle_WFc = new A.TextStyle(true, C.Color_3019898879, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity caption", null, null);
    C.TextStyle_2bx = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity button", null, null);
    C.TextStyle_gc6 = new A.TextStyle(true, C.Color_4294967295, null, ".AppleSystemUIFont", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedwoodCity overline", null, null);
    C.TextTheme_iz0 = new R.TextTheme(C.TextStyle_c4R, C.TextStyle_c4R0, C.TextStyle_c4R1, C.TextStyle_c4R2, C.TextStyle_GVy, C.TextStyle_GVy0, C.TextStyle_nuW, C.TextStyle_nuW0, C.TextStyle_Qqi, C.TextStyle_Qqi0, C.TextStyle_WFc, C.TextStyle_2bx, C.TextStyle_gc6);
    C.TextStyle_avx = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline1", null, null);
    C.TextStyle_avx0 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline2", null, null);
    C.TextStyle_avx1 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline3", null, null);
    C.TextStyle_avx2 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline4", null, null);
    C.TextStyle_avx3 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline5", null, null);
    C.TextStyle_avx4 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki headline6", null, null);
    C.TextStyle_rw6 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki subtitle1", null, null);
    C.TextStyle_rw60 = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki subtitle2", null, null);
    C.TextStyle_6Nz = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki bodyText1", null, null);
    C.TextStyle_6Nz0 = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki bodyText2", null, null);
    C.TextStyle_QW6 = new A.TextStyle(true, C.Color_2315255808, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki caption", null, null);
    C.TextStyle_wcA = new A.TextStyle(true, C.Color_3707764736, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki button", null, null);
    C.TextStyle_XHn = new A.TextStyle(true, C.Color_4278190080, null, "Roboto", C.List_Exl, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "blackHelsinki overline", null, null);
    C.TextTheme_kdB = new R.TextTheme(C.TextStyle_avx, C.TextStyle_avx0, C.TextStyle_avx1, C.TextStyle_avx2, C.TextStyle_avx3, C.TextStyle_avx4, C.TextStyle_rw6, C.TextStyle_rw60, C.TextStyle_6Nz, C.TextStyle_6Nz0, C.TextStyle_QW6, C.TextStyle_wcA, C.TextStyle_XHn);
    C.TextStyle_exN = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline1", null, null);
    C.TextStyle_exN0 = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline2", null, null);
    C.TextStyle_exN1 = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline3", null, null);
    C.TextStyle_exN2 = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline4", null, null);
    C.TextStyle_u5x = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline5", null, null);
    C.TextStyle_u5x0 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond headline6", null, null);
    C.TextStyle_eRz = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond subtitle1", null, null);
    C.TextStyle_eRz0 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond subtitle2", null, null);
    C.TextStyle_KFH = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond bodyText1", null, null);
    C.TextStyle_KFH0 = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond bodyText2", null, null);
    C.TextStyle_01 = new A.TextStyle(true, C.Color_3019898879, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond caption", null, null);
    C.TextStyle_lkh = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond button", null, null);
    C.TextStyle_MQy = new A.TextStyle(true, C.Color_4294967295, null, "Segoe UI", null, null, null, null, null, null, null, null, null, null, null, null, null, C.TextDecoration_0, null, null, null, "whiteRedmond overline", null, null);
    C.TextTheme_nfu = new R.TextTheme(C.TextStyle_exN, C.TextStyle_exN0, C.TextStyle_exN1, C.TextStyle_exN2, C.TextStyle_u5x, C.TextStyle_u5x0, C.TextStyle_eRz, C.TextStyle_eRz0, C.TextStyle_KFH, C.TextStyle_KFH0, C.TextStyle_01, C.TextStyle_lkh, C.TextStyle_MQy);
    C.TextWidthBasis_0 = new U.TextWidthBasis("TextWidthBasis.parent");
    C.TextWidthBasis_1 = new U.TextWidthBasis("TextWidthBasis.longestLine");
    C.ThemeMode_0 = new S.ThemeMode("ThemeMode.system");
    C.TickerCanceled_null = new M.TickerCanceled(null);
    C.TileMode_0 = new P.TileMode(0, "TileMode.clamp");
    C.TileMode_1 = new P.TileMode(1, "TileMode.repeated");
    C.TileMode_2 = new P.TileMode(2, "TileMode.mirror");
    C.TileMode_3 = new P.TileMode(3, "TileMode.decal");
    C.TimePickerThemeData_10O = new A.TimePickerThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.ToggleButtonsThemeData_UsI = new S.ToggleButtonsThemeData(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    C.TooltipThemeData_kSE = new T.TooltipThemeData(null, null, null, null, null, null, null, null);
    C.TransformKind_0 = new H.TransformKind("TransformKind.identity");
    C.TransformKind_1 = new H.TransformKind("TransformKind.transform2d");
    C.TransformKind_2 = new H.TransformKind("TransformKind.complex");
    C.TraversalDirection_0 = new U.TraversalDirection("TraversalDirection.up");
    C.TraversalDirection_1 = new U.TraversalDirection("TraversalDirection.right");
    C.TraversalDirection_2 = new U.TraversalDirection("TraversalDirection.down");
    C.TraversalDirection_3 = new U.TraversalDirection("TraversalDirection.left");
    C.Type_0 = H.typeLiteral("ExpandSelectionLeftByLineTextIntent");
    C.Type_2Iq = H.typeLiteral("MoveSelectionLeftByLineTextIntent");
    C.Type_2Iq0 = H.typeLiteral("MoveSelectionLeftByWordTextIntent");
    C.Type_8LH = H.typeLiteral("ExtendSelectionDownTextIntent");
    C.Type_8aB = H.typeLiteral("ExpandSelectionRightByLineTextIntent");
    C.Type_9Ii0 = H.typeLiteral("ExtendSelectionRightByLineTextIntent");
    C.Type_9Ii = H.typeLiteral("ExtendSelectionRightByWordTextIntent");
    C.Type_ActivateIntent_OT9 = H.typeLiteral("ActivateIntent");
    C.Type_ButtonActivateIntent_6Ij = H.typeLiteral("ButtonActivateIntent");
    C.Type_ByteBuffer_RkP = H.typeLiteral("ByteBuffer");
    C.Type_ByteData_zNC = H.typeLiteral("ByteData");
    C.Type_Bzp = H.typeLiteral("MoveSelectionRightByLineTextIntent");
    C.Type_Bzp0 = H.typeLiteral("MoveSelectionRightByWordTextIntent");
    C.Type_Color_MG2 = H.typeLiteral("Color");
    C.Type_DirectionalFocusIntent_evN = H.typeLiteral("DirectionalFocusIntent");
    C.Type_DismissIntent_Fb0 = H.typeLiteral("DismissIntent");
    C.Type_DoNothingIntent_IQR = H.typeLiteral("DoNothingIntent");
    C.Type_DoubleTapGestureRecognizer_oyU = H.typeLiteral("DoubleTapGestureRecognizer");
    C.Type_ExtendSelectionUpTextIntent_Bju = H.typeLiteral("ExtendSelectionUpTextIntent");
    C.Type_Float32List_LB7 = H.typeLiteral("Float32List");
    C.Type_Float64List_LB7 = H.typeLiteral("Float64List");
    C.Type_IYE = H.typeLiteral("MoveSelectionToStartTextIntent");
    C.Type_Int16List_uXf = H.typeLiteral("Int16List");
    C.Type_Int32List_O50 = H.typeLiteral("Int32List");
    C.Type_Int8List_ekJ = H.typeLiteral("Int8List");
    C.Type_JSObject_8k0 = H.typeLiteral("JSObject");
    C.Type_KeE = H.typeLiteral("ExtendSelectionLeftTextIntent");
    C.Type_LabeledGlobalKey_6TW = H.typeLiteral("LabeledGlobalKey<State<StatefulWidget>>");
    C.Type_LongPressGestureRecognizer_46y = H.typeLiteral("LongPressGestureRecognizer");
    C.Type_MaterialLocalizations_flR = H.typeLiteral("MaterialLocalizations");
    C.Type_MoveSelectionDownTextIntent_yqF = H.typeLiteral("MoveSelectionDownTextIntent");
    C.Type_MoveSelectionLeftTextIntent_uf2 = H.typeLiteral("MoveSelectionLeftTextIntent");
    C.Type_MoveSelectionRightTextIntent_kUZ = H.typeLiteral("MoveSelectionRightTextIntent");
    C.Type_MoveSelectionToEndTextIntent_c4I = H.typeLiteral("MoveSelectionToEndTextIntent");
    C.Type_MoveSelectionUpTextIntent_kSJ = H.typeLiteral("MoveSelectionUpTextIntent");
    C.Type_NT8 = H.typeLiteral("ExtendSelectionLeftByWordAndStopAtReversalTextIntent");
    C.Type_NextFocusIntent_6xB = H.typeLiteral("NextFocusIntent");
    C.Type_Null_Yyn = H.typeLiteral("Null");
    C.Type_PanGestureRecognizer_bbH = H.typeLiteral("PanGestureRecognizer");
    C.Type_PreviousFocusIntent_wsa = H.typeLiteral("PreviousFocusIntent");
    C.Type_PrioritizedIntents_fLu = H.typeLiteral("PrioritizedIntents");
    C.Type_RequestFocusIntent_OPB = H.typeLiteral("RequestFocusIntent");
    C.Type_ScrollIntent_mpH = H.typeLiteral("ScrollIntent");
    C.Type_ShapeBorderClipper_QWG = H.typeLiteral("ShapeBorderClipper");
    C.Type_Shortcuts_6TW = H.typeLiteral("Shortcuts");
    C.Type_String_k8F = H.typeLiteral("String");
    C.Type_TapGestureRecognizer_62h = H.typeLiteral("TapGestureRecognizer");
    C.Type_Uint16List_2bx = H.typeLiteral("Uint16List");
    C.Type_Uint32List_2bx = H.typeLiteral("Uint32List");
    C.Type_Uint8ClampedList_Jik = H.typeLiteral("Uint8ClampedList");
    C.Type_Uint8List_WLA = H.typeLiteral("Uint8List");
    C.Type_Vq1 = H.typeLiteral("HorizontalDragGestureRecognizer");
    C.Type_WidgetsLocalizations_43h = H.typeLiteral("WidgetsLocalizations");
    C.Type__AnyTapGestureRecognizer_5RQ = H.typeLiteral("_AnyTapGestureRecognizer");
    C.Type__ModalScopeState_Yap = H.typeLiteral("_ModalScopeState<@>");
    C.Type_bool_lhE = H.typeLiteral("bool");
    C.Type_double_K1J = H.typeLiteral("double");
    C.Type_gO9 = H.typeLiteral("ExtendSelectionLeftByLineTextIntent");
    C.Type_gO90 = H.typeLiteral("ExtendSelectionLeftByWordTextIntent");
    C.Type_int_tHn = H.typeLiteral("int");
    C.Type_mLh = H.typeLiteral("VerticalDragGestureRecognizer");
    C.Type_muk = H.typeLiteral("DoNothingAndStopPropagationTextIntent");
    C.Type_num_cv7 = H.typeLiteral("num");
    C.Type_oyU = H.typeLiteral("ExpandSelectionToStartTextIntent");
    C.Type_s8I = H.typeLiteral("DoNothingAndStopPropagationIntent");
    C.Type_uFQ = H.typeLiteral("ExtendSelectionRightTextIntent");
    C.Type_unm = H.typeLiteral("ExtendSelectionRightByWordAndStopAtReversalTextIntent");
    C.Type_weg = H.typeLiteral("ExpandSelectionToEndTextIntent");
    C.UnfocusDisposition_0 = new O.UnfocusDisposition("UnfocusDisposition.scope");
    C.UnfocusDisposition_1 = new O.UnfocusDisposition("UnfocusDisposition.previouslyFocusedChild");
    C.Utf8Decoder_false = new P.Utf8Decoder(false);
    C.Velocity_Offset_0_0 = new R.Velocity(C.Offset_0_0);
    C.VisualDensity_0_0 = new X.VisualDensity(0, 0);
    C.VisualDensity_m2_m2 = new X.VisualDensity(-2, -2);
    C.WindowPadding_0_0_0_0 = new H.WindowPadding(0, 0, 0, 0);
    C._AnimationDirection_0 = new G._AnimationDirection("_AnimationDirection.forward");
    C._AnimationDirection_1 = new G._AnimationDirection("_AnimationDirection.reverse");
    C._CheckableKind_0 = new H._CheckableKind("_CheckableKind.checkbox");
    C._CheckableKind_1 = new H._CheckableKind("_CheckableKind.radio");
    C._CheckableKind_2 = new H._CheckableKind("_CheckableKind.toggle");
    C._ComparisonResult_0 = new H._ComparisonResult("_ComparisonResult.inside");
    C._ComparisonResult_1 = new H._ComparisonResult("_ComparisonResult.higher");
    C._ComparisonResult_2 = new H._ComparisonResult("_ComparisonResult.lower");
    C._CupertinoEdgeShadowDecoration_null = new D._CupertinoEdgeShadowDecoration(null);
    C.Color_939524096 = new P.Color(939524096);
    C.Color_301989888 = new P.Color(301989888);
    C.Color_67108864 = new P.Color(67108864);
    C.List_S2N = H.setRuntimeTypeInfo(makeConstList([C.Color_939524096, C.Color_301989888, C.Color_67108864, C.Color_0]), type$.JSArray_Color);
    C._CupertinoEdgeShadowDecoration_yjC = new D._CupertinoEdgeShadowDecoration(C.List_S2N);
    C._DragState_0 = new O._DragState("_DragState.ready");
    C._DragState_1 = new O._DragState("_DragState.possible");
    C._DragState_2 = new O._DragState("_DragState.accepted");
    C._ElementLifecycle_0 = new N._ElementLifecycle("_ElementLifecycle.initial");
    C._ElementLifecycle_1 = new N._ElementLifecycle("_ElementLifecycle.active");
    C._ElementLifecycle_2 = new N._ElementLifecycle("_ElementLifecycle.inactive");
    C._ElementLifecycle_3 = new N._ElementLifecycle("_ElementLifecycle.defunct");
    C._HighlightType_0 = new R._HighlightType("_HighlightType.pressed");
    C._HighlightType_1 = new R._HighlightType("_HighlightType.hover");
    C._HighlightType_2 = new R._HighlightType("_HighlightType.focus");
    C._IterationMarker_null_2 = new P._IterationMarker(null, 2);
    C._MixedEdgeInsets_QWq = new V._MixedEdgeInsets(1 / 0, 1 / 0, 1 / 0, 1 / 0, 1 / 0, 1 / 0);
    C._ModifierSidePair_ModifierKey_0_KeyboardSide_0 = new B._ModifierSidePair(C.ModifierKey_0, C.KeyboardSide_0);
    C.KeyboardSide_1 = new B.KeyboardSide("KeyboardSide.left");
    C._ModifierSidePair_ModifierKey_0_KeyboardSide_1 = new B._ModifierSidePair(C.ModifierKey_0, C.KeyboardSide_1);
    C.KeyboardSide_2 = new B.KeyboardSide("KeyboardSide.right");
    C._ModifierSidePair_ModifierKey_0_KeyboardSide_2 = new B._ModifierSidePair(C.ModifierKey_0, C.KeyboardSide_2);
    C._ModifierSidePair_ModifierKey_0_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_0, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_1_KeyboardSide_0 = new B._ModifierSidePair(C.ModifierKey_1, C.KeyboardSide_0);
    C._ModifierSidePair_ModifierKey_1_KeyboardSide_1 = new B._ModifierSidePair(C.ModifierKey_1, C.KeyboardSide_1);
    C._ModifierSidePair_ModifierKey_1_KeyboardSide_2 = new B._ModifierSidePair(C.ModifierKey_1, C.KeyboardSide_2);
    C._ModifierSidePair_ModifierKey_1_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_1, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_2_KeyboardSide_0 = new B._ModifierSidePair(C.ModifierKey_2, C.KeyboardSide_0);
    C._ModifierSidePair_ModifierKey_2_KeyboardSide_1 = new B._ModifierSidePair(C.ModifierKey_2, C.KeyboardSide_1);
    C._ModifierSidePair_ModifierKey_2_KeyboardSide_2 = new B._ModifierSidePair(C.ModifierKey_2, C.KeyboardSide_2);
    C._ModifierSidePair_ModifierKey_2_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_2, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_3_KeyboardSide_0 = new B._ModifierSidePair(C.ModifierKey_3, C.KeyboardSide_0);
    C._ModifierSidePair_ModifierKey_3_KeyboardSide_1 = new B._ModifierSidePair(C.ModifierKey_3, C.KeyboardSide_1);
    C._ModifierSidePair_ModifierKey_3_KeyboardSide_2 = new B._ModifierSidePair(C.ModifierKey_3, C.KeyboardSide_2);
    C._ModifierSidePair_ModifierKey_3_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_3, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_4_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_4, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_5_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_5, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_6_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_6, C.KeyboardSide_3);
    C._ModifierSidePair_ModifierKey_7_KeyboardSide_3 = new B._ModifierSidePair(C.ModifierKey_7, C.KeyboardSide_3);
    C._NullWidget_null = new L._NullWidget0(null);
    C._ParagraphCommandType_0 = new H._ParagraphCommandType("_ParagraphCommandType.addText");
    C._ParagraphCommandType_1 = new H._ParagraphCommandType("_ParagraphCommandType.pop");
    C._ParagraphCommandType_2 = new H._ParagraphCommandType("_ParagraphCommandType.pushStyle");
    C._ParagraphCommandType_3 = new H._ParagraphCommandType("_ParagraphCommandType.addPlaceholder");
    C._ParagraphCommand_rx2 = new H._ParagraphCommand(C._ParagraphCommandType_1, null, null, null);
    C._RouteLifecycle_0 = new K._RouteLifecycle(0, "_RouteLifecycle.staging");
    C._RouteLifecycle_1 = new K._RouteLifecycle(1, "_RouteLifecycle.add");
    C._RouteLifecycle_10 = new K._RouteLifecycle(10, "_RouteLifecycle.popping");
    C._RouteLifecycle_11 = new K._RouteLifecycle(11, "_RouteLifecycle.removing");
    C._RouteLifecycle_12 = new K._RouteLifecycle(12, "_RouteLifecycle.dispose");
    C._RouteLifecycle_13 = new K._RouteLifecycle(13, "_RouteLifecycle.disposed");
    C._RouteLifecycle_2 = new K._RouteLifecycle(2, "_RouteLifecycle.adding");
    C._RouteLifecycle_3 = new K._RouteLifecycle(3, "_RouteLifecycle.push");
    C._RouteLifecycle_4 = new K._RouteLifecycle(4, "_RouteLifecycle.pushReplace");
    C._RouteLifecycle_5 = new K._RouteLifecycle(5, "_RouteLifecycle.pushing");
    C._RouteLifecycle_6 = new K._RouteLifecycle(6, "_RouteLifecycle.replace");
    C._RouteLifecycle_7 = new K._RouteLifecycle(7, "_RouteLifecycle.idle");
    C._RouteLifecycle_8 = new K._RouteLifecycle(8, "_RouteLifecycle.pop");
    C._RouteLifecycle_9 = new K._RouteLifecycle(9, "_RouteLifecycle.remove");
    C._StateLifecycle_0 = new N._StateLifecycle("_StateLifecycle.created");
    C._TrainHoppingMode_0 = new S._TrainHoppingMode("_TrainHoppingMode.minimize");
    C._TrainHoppingMode_1 = new S._TrainHoppingMode("_TrainHoppingMode.maximize");
    C._WordWrapParseMode_0 = new Y._WordWrapParseMode("_WordWrapParseMode.inSpace");
    C._WordWrapParseMode_1 = new Y._WordWrapParseMode("_WordWrapParseMode.inWord");
    C._WordWrapParseMode_2 = new Y._WordWrapParseMode("_WordWrapParseMode.atBreak");
  })();
  (function staticFields() {
    $._engineInitialized = false;
    $._hotRestartListeners = H.setRuntimeTypeInfo([], type$.JSArray_of_void_Function);
    $.___browserEngine = null;
    $.___operatingSystem = null;
    $._cachedWebGLVersion = null;
    $.__canvasKit = null;
    $._skiaFontCollection = null;
    $.skiaSceneHost = null;
    $.SkiaObjects_resurrectableObjects = H.setRuntimeTypeInfo([], H.findType("JSArray<ManagedSkiaObject<Object>>"));
    $.SkiaObjects_cachesToResize = H.setRuntimeTypeInfo([], H.findType("JSArray<SkiaObjectCache>"));
    $.SkiaObjects__addedCleanupCallback = false;
    $.Surface__didWarnAboutWebGlInitializationFailure = false;
    $.DomRenderer__ellipseFeatureDetected = null;
    $._frameReferences = H.setRuntimeTypeInfo([], type$.JSArray_FrameReference_dynamic);
    $._recycledCanvases = H.setRuntimeTypeInfo([], H.findType("JSArray<BitmapCanvas>"));
    $._paintQueue = H.setRuntimeTypeInfo([], type$.JSArray__PaintRequest);
    $._glRenderer = null;
    $._WebGlRenderer__baseVertexShader = null;
    $._GlContext____programCache = null;
    $.SurfaceSceneBuilder__webOnlyDidWarnAboutPerformanceOverlay = false;
    $.SurfaceSceneBuilder__lastFrameScene = null;
    $._retainedSurfaces = H.setRuntimeTypeInfo([], type$.JSArray_PersistedSurface);
    $.Keyboard__instance = null;
    $.KeyboardBinding__instance = null;
    $.MouseCursor__instance = null;
    $.scheduleFrameCallback = null;
    $.PointerBinding__instance = null;
    $._BaseAdapter__listeners = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic_Function_Event);
    $._BaseAdapter__nativeListeners = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic_Function_Event);
    $._WheelEventListenerMixin__defaultScrollLineHeight = null;
    $._PointerState__pointerCount = 0;
    $._frameTimings = H.setRuntimeTypeInfo([], type$.JSArray_FrameTiming);
    $._vsyncStartMicros = -1;
    $._buildStartMicros = -1;
    $._buildFinishMicros = -1;
    $._rasterStartMicros = -1;
    $._rasterFinishMicros = -1;
    $.AccessibilityAnnouncements__instance = null;
    $.EngineSemanticsOwner__instance = null;
    $.SemanticsTextEditingStrategy__instance = null;
    $.Spanometer__rulers = P.LinkedHashMap_LinkedHashMap$_empty(H.findType("TextHeightStyle"), H.findType("TextHeightRuler"));
    $.TextMeasurementService_rulerManager = null;
    $.DomTextMeasurementService__instance = null;
    $.CanvasTextMeasurementService__instance = null;
    $._lastStart = -1;
    $._lastEnd = -1;
    $._lastText = "";
    $._lastCssFont = "";
    $._lastWidth = -1;
    $._clipIdCounter = 0;
    $._fontChangeScheduled = false;
    $.WebExperiments_instance = null;
    $._isUrlStrategySet = false;
    $._customUrlStrategy = null;
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.Primitives_timerFrequency = 0;
    $.Primitives_timerTicks = H._js_helper_Primitives_dateNow$closure();
    $.Closure_functionCounter = 0;
    $.BoundClosure_selfFieldNameCache = null;
    $.BoundClosure_receiverFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = C.C__RootZone;
    $._toStringVisiting = H.setRuntimeTypeInfo([], type$.JSArray_Object);
    $.Expando__keyCount = 0;
    $._extensions = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("Future<ServiceExtensionResponse>(String,Map<String,String>)"));
    $.Timeline__stack = H.setRuntimeTypeInfo([], H.findType("JSArray<_SyncBlock?>"));
    $.Element__parseDocument = null;
    $.Element__parseRange = null;
    $.Element__defaultValidator = null;
    $.Element__defaultSanitizer = null;
    $._Html5NodeValidator__attributeValidators = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Function);
    $._assetManager = null;
    $._fontCollection = null;
    $.FlutterErrorDetails_propertiesTransformers = H.setRuntimeTypeInfo([], H.findType("JSArray<Iterable<DiagnosticsNode>(Iterable<DiagnosticsNode>)>"));
    $.FlutterError_onError = U.assertions_FlutterError__defaultErrorHandler$closure();
    $.FlutterError_presentError = U.assertions_FlutterError_dumpErrorToConsole$closure();
    $.FlutterError__errorCount = 0;
    $.FlutterError__stackFilters = H.setRuntimeTypeInfo([], H.findType("JSArray<StackFilter>"));
    $.LicenseRegistry__collectors = null;
    $._debugPrintedCharacters = 0;
    $._debugPrintCompleter = null;
    $._debugPrintScheduled = false;
    $.GestureBinding__instance = null;
    $.PaintingBinding__instance = null;
    $.MatrixUtils____minMax = null;
    $.RendererBinding__instance = null;
    $._timeDilation = 1;
    $.SchedulerBinding__instance = null;
    $.SemanticsBinding__instance = null;
    $.CustomSemanticsAction__nextId = 0;
    $.CustomSemanticsAction__actions = P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.CustomSemanticsAction);
    $.CustomSemanticsAction__ids = P.LinkedHashMap_LinkedHashMap$_empty(type$.CustomSemanticsAction, type$.int);
    $.SemanticsNode__lastIdentifier = 0;
    $.ServicesBinding__instance = null;
    $._DefaultBinaryMessenger__handlers = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("Future<ByteData?>?(ByteData?)"));
    $._DefaultBinaryMessenger__mockHandlers = P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("Future<ByteData?>?(ByteData?)"));
    $.LogicalKeyboardKey__synonyms = function() {
      var t1 = type$.LogicalKeyboardKey;
      return P.LinkedHashMap_LinkedHashMap$_literal([C.LogicalKeyboardKey_4295426273, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426277, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426275, C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_4295426279, C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_4295426274, C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_4295426278, C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_4295426272, C.LogicalKeyboardKey_2203318681824, C.LogicalKeyboardKey_4295426276, C.LogicalKeyboardKey_2203318681824], t1, t1);
    }();
    $.RawKeyboard__modifierKeyMap = function() {
      var t1 = type$.PhysicalKeyboardKey;
      return P.LinkedHashMap_LinkedHashMap$_literal([C._ModifierSidePair_ModifierKey_2_KeyboardSide_1, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458978], t1), C._ModifierSidePair_ModifierKey_2_KeyboardSide_2, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458982], t1), C._ModifierSidePair_ModifierKey_2_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458978, C.PhysicalKeyboardKey_458982], t1), C._ModifierSidePair_ModifierKey_2_KeyboardSide_0, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458978], t1), C._ModifierSidePair_ModifierKey_1_KeyboardSide_1, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458977], t1), C._ModifierSidePair_ModifierKey_1_KeyboardSide_2, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458981], t1), C._ModifierSidePair_ModifierKey_1_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458977, C.PhysicalKeyboardKey_458981], t1), C._ModifierSidePair_ModifierKey_1_KeyboardSide_0, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458977], t1), C._ModifierSidePair_ModifierKey_0_KeyboardSide_1, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458976], t1), C._ModifierSidePair_ModifierKey_0_KeyboardSide_2, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458980], t1), C._ModifierSidePair_ModifierKey_0_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458976, C.PhysicalKeyboardKey_458980], t1), C._ModifierSidePair_ModifierKey_0_KeyboardSide_0, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458976], t1), C._ModifierSidePair_ModifierKey_3_KeyboardSide_1, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458979], t1), C._ModifierSidePair_ModifierKey_3_KeyboardSide_2, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458983], t1), C._ModifierSidePair_ModifierKey_3_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458979, C.PhysicalKeyboardKey_458983], t1), C._ModifierSidePair_ModifierKey_3_KeyboardSide_0, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458979], t1), C._ModifierSidePair_ModifierKey_4_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458809], t1), C._ModifierSidePair_ModifierKey_5_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458835], t1), C._ModifierSidePair_ModifierKey_6_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_458823], t1), C._ModifierSidePair_ModifierKey_7_KeyboardSide_3, P.LinkedHashSet_LinkedHashSet$_literal([C.PhysicalKeyboardKey_18], t1)], H.findType("_ModifierSidePair"), H.findType("Set<PhysicalKeyboardKey>"));
    }();
    $.RawKeyboard__allModifiersExceptFn = P.LinkedHashMap_LinkedHashMap$_literal([C.PhysicalKeyboardKey_458978, C.LogicalKeyboardKey_4295426274, C.PhysicalKeyboardKey_458982, C.LogicalKeyboardKey_4295426278, C.PhysicalKeyboardKey_458977, C.LogicalKeyboardKey_4295426273, C.PhysicalKeyboardKey_458981, C.LogicalKeyboardKey_4295426277, C.PhysicalKeyboardKey_458976, C.LogicalKeyboardKey_4295426272, C.PhysicalKeyboardKey_458980, C.LogicalKeyboardKey_4295426276, C.PhysicalKeyboardKey_458979, C.LogicalKeyboardKey_4295426275, C.PhysicalKeyboardKey_458983, C.LogicalKeyboardKey_4295426279, C.PhysicalKeyboardKey_458809, C.LogicalKeyboardKey_4295426105, C.PhysicalKeyboardKey_458835, C.LogicalKeyboardKey_4295426131, C.PhysicalKeyboardKey_458823, C.LogicalKeyboardKey_4295426119], type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey);
    $.WidgetsApp_showPerformanceOverlayOverride = false;
    $.WidgetsBinding__instance = null;
    $.debugProfileBuildsEnabled = false;
    $.Element__nextHashCode = 1;
    $.KeySet__tempHashStore3 = H.setRuntimeTypeInfo([0, 0, 0], type$.JSArray_int);
    $.KeySet__tempHashStore4 = H.setRuntimeTypeInfo([0, 0, 0, 0], type$.JSArray_int);
  })();
  (function lazyInitializers() {
    var _lazy = hunkHelpers.lazy,
      _lazyFinal = hunkHelpers.lazyFinal;
    _lazy($, "_CanvasPool__runBuffer", "$get$_CanvasPool__runBuffer", function() {
      return H.NativeFloat32List_NativeFloat32List(8);
    });
    _lazyFinal($, "_clipOpIntersect", "$get$_clipOpIntersect", function() {
      return J.get$Intersect$x(J.get$ClipOp$x(H.canvasKit()));
    });
    _lazyFinal($, "_skFontWeights", "$get$_skFontWeights", function() {
      return H.setRuntimeTypeInfo([J.get$Thin$x(J.get$FontWeight$x(H.canvasKit())), J.get$ExtraLight$x(J.get$FontWeight$x(H.canvasKit())), J.get$Light$x(J.get$FontWeight$x(H.canvasKit())), J.get$Normal$x(J.get$FontWeight$x(H.canvasKit())), J.get$Medium$x(J.get$FontWeight$x(H.canvasKit())), J.get$SemiBold$x(J.get$FontWeight$x(H.canvasKit())), J.get$Bold$x(J.get$FontWeight$x(H.canvasKit())), J.get$ExtraBold$x(J.get$FontWeight$x(H.canvasKit())), J.get$ExtraBlack$x(J.get$FontWeight$x(H.canvasKit()))], H.findType("JSArray<SkFontWeight>"));
    });
    _lazyFinal($, "_skTextDirections", "$get$_skTextDirections", function() {
      return H.setRuntimeTypeInfo([J.get$RTL$x(J.get$TextDirection$x(H.canvasKit())), J.get$LTR$x(J.get$TextDirection$x(H.canvasKit()))], H.findType("JSArray<SkTextDirection>"));
    });
    _lazyFinal($, "_skTextAligns", "$get$_skTextAligns", function() {
      return H.setRuntimeTypeInfo([J.get$Left$x(J.get$TextAlign$x(H.canvasKit())), J.get$Right$x(J.get$TextAlign$x(H.canvasKit())), J.get$Center$x(J.get$TextAlign$x(H.canvasKit())), J.get$Justify$x(J.get$TextAlign$x(H.canvasKit())), J.get$Start$x(J.get$TextAlign$x(H.canvasKit())), J.get$End$x(J.get$TextAlign$x(H.canvasKit()))], H.findType("JSArray<SkTextAlign>"));
    });
    _lazyFinal($, "_skRectHeightStyles", "$get$_skRectHeightStyles", function() {
      return H.setRuntimeTypeInfo([J.get$Tight$x(J.get$RectHeightStyle$x(H.canvasKit())), J.get$Max$x(J.get$RectHeightStyle$x(H.canvasKit()))], H.findType("JSArray<SkRectHeightStyle>"));
    });
    _lazyFinal($, "_skRectWidthStyles", "$get$_skRectWidthStyles", function() {
      return H.setRuntimeTypeInfo([J.get$Tight$x(J.get$RectWidthStyle$x(H.canvasKit())), J.get$Max$x(J.get$RectWidthStyle$x(H.canvasKit()))], H.findType("JSArray<SkRectWidthStyle>"));
    });
    _lazyFinal($, "_skClipOps", "$get$_skClipOps", function() {
      return H.setRuntimeTypeInfo([J.get$Difference$x(J.get$ClipOp$x(H.canvasKit())), J.get$Intersect$x(J.get$ClipOp$x(H.canvasKit()))], H.findType("JSArray<SkClipOp>"));
    });
    _lazyFinal($, "_skFillTypes", "$get$_skFillTypes", function() {
      return H.setRuntimeTypeInfo([J.get$Winding$x(J.get$FillType$x(H.canvasKit())), J.get$EvenOdd$x(J.get$FillType$x(H.canvasKit()))], H.findType("JSArray<SkFillType>"));
    });
    _lazyFinal($, "_skStrokeCaps", "$get$_skStrokeCaps", function() {
      return H.setRuntimeTypeInfo([J.get$Butt$x(J.get$StrokeCap$x(H.canvasKit())), J.get$Round$x(J.get$StrokeCap$x(H.canvasKit())), J.get$Square$x(J.get$StrokeCap$x(H.canvasKit()))], H.findType("JSArray<SkStrokeCap>"));
    });
    _lazyFinal($, "_skPaintStyles", "$get$_skPaintStyles", function() {
      return H.setRuntimeTypeInfo([J.get$Fill$x(J.get$PaintStyle$x(H.canvasKit())), J.get$Stroke$x(J.get$PaintStyle$x(H.canvasKit()))], H.findType("JSArray<SkPaintStyle>"));
    });
    _lazyFinal($, "_skBlendModes", "$get$_skBlendModes", function() {
      return H.setRuntimeTypeInfo([J.get$Clear$x(J.get$BlendMode$x(H.canvasKit())), J.get$Src$x(J.get$BlendMode$x(H.canvasKit())), J.get$Dst$x(J.get$BlendMode$x(H.canvasKit())), J.get$SrcOver$x(J.get$BlendMode$x(H.canvasKit())), J.get$DstOver$x(J.get$BlendMode$x(H.canvasKit())), J.get$SrcIn$x(J.get$BlendMode$x(H.canvasKit())), J.get$DstIn$x(J.get$BlendMode$x(H.canvasKit())), J.get$SrcOut$x(J.get$BlendMode$x(H.canvasKit())), J.get$DstOut$x(J.get$BlendMode$x(H.canvasKit())), J.get$SrcATop$x(J.get$BlendMode$x(H.canvasKit())), J.get$DstATop$x(J.get$BlendMode$x(H.canvasKit())), J.get$Xor$x(J.get$BlendMode$x(H.canvasKit())), J.get$Plus$x(J.get$BlendMode$x(H.canvasKit())), J.get$Modulate$x(J.get$BlendMode$x(H.canvasKit())), J.get$Screen$x(J.get$BlendMode$x(H.canvasKit())), J.get$Overlay$x(J.get$BlendMode$x(H.canvasKit())), J.get$Darken$x(J.get$BlendMode$x(H.canvasKit())), J.get$Lighten$x(J.get$BlendMode$x(H.canvasKit())), J.get$ColorDodge$x(J.get$BlendMode$x(H.canvasKit())), J.get$ColorBurn$x(J.get$BlendMode$x(H.canvasKit())), J.get$HardLight$x(J.get$BlendMode$x(H.canvasKit())), J.get$SoftLight$x(J.get$BlendMode$x(H.canvasKit())), J.get$Difference$x(J.get$BlendMode$x(H.canvasKit())), J.get$Exclusion$x(J.get$BlendMode$x(H.canvasKit())), J.get$Multiply$x(J.get$BlendMode$x(H.canvasKit())), J.get$Hue$x(J.get$BlendMode$x(H.canvasKit())), J.get$Saturation$x(J.get$BlendMode$x(H.canvasKit())), J.get$Color$x(J.get$BlendMode$x(H.canvasKit())), J.get$Luminosity$x(J.get$BlendMode$x(H.canvasKit()))], H.findType("JSArray<SkBlendMode>"));
    });
    _lazyFinal($, "_skStrokeJoins", "$get$_skStrokeJoins", function() {
      return H.setRuntimeTypeInfo([J.get$Miter$x(J.get$StrokeJoin$x(H.canvasKit())), J.get$Round$x(J.get$StrokeJoin$x(H.canvasKit())), J.get$Bevel$x(J.get$StrokeJoin$x(H.canvasKit()))], H.findType("JSArray<SkStrokeJoin>"));
    });
    _lazyFinal($, "_skFilterQualitys", "$get$_skFilterQualitys", function() {
      return H.setRuntimeTypeInfo([J.get$None$x(J.get$FilterQuality$x(H.canvasKit())), J.get$Low$x(J.get$FilterQuality$x(H.canvasKit())), J.get$Medium$x(J.get$FilterQuality$x(H.canvasKit())), J.get$High$x(J.get$FilterQuality$x(H.canvasKit()))], H.findType("JSArray<SkFilterQuality>"));
    });
    _lazyFinal($, "_skTileModes", "$get$_skTileModes", function() {
      return H.setRuntimeTypeInfo([J.get$Clamp$x(J.get$TileMode$x(H.canvasKit())), J.get$Repeat$x(J.get$TileMode$x(H.canvasKit())), J.get$Mirror$x(J.get$TileMode$x(H.canvasKit())), J.get$Decal$x(J.get$TileMode$x(H.canvasKit()))], H.findType("JSArray<SkTileMode>"));
    });
    _lazyFinal($, "_kDefaultSkColorStops", "$get$_kDefaultSkColorStops", function() {
      var t1 = H.NativeFloat32List_NativeFloat32List(2);
      t1[0] = 0;
      t1[1] = 1;
      return t1;
    });
    _lazyFinal($, "_skTextDecorationStyles", "$get$_skTextDecorationStyles", function() {
      return H.setRuntimeTypeInfo([J.get$Solid$x(J.get$DecorationStyle$x(H.canvasKit())), J.get$Double$x(J.get$DecorationStyle$x(H.canvasKit())), J.get$Dotted$x(J.get$DecorationStyle$x(H.canvasKit())), J.get$Dashed$x(J.get$DecorationStyle$x(H.canvasKit())), J.get$Wavy$x(J.get$DecorationStyle$x(H.canvasKit()))], H.findType("JSArray<SkTextDecorationStyle>"));
    });
    _lazyFinal($, "_skTextBaselines", "$get$_skTextBaselines", function() {
      return H.setRuntimeTypeInfo([J.get$Alphabetic$x(J.get$TextBaseline$x(H.canvasKit())), J.get$Ideographic$x(J.get$TextBaseline$x(H.canvasKit()))], H.findType("JSArray<SkTextBaseline>"));
    });
    _lazyFinal($, "Collector__productionInstance", "$get$Collector__productionInstance", function() {
      return H.ProductionCollector$();
    });
    _lazy($, "Collector__instance", "$get$Collector__instance", function() {
      return $.$get$Collector__productionInstance();
    });
    _lazy($, "browserSupportsFinalizationRegistry", "$get$browserSupportsFinalizationRegistry", function() {
      return self.window.FinalizationRegistry != null;
    });
    _lazyFinal($, "OverlayCache_instance", "$get$OverlayCache_instance", function() {
      return new H.OverlayCache(5, H.setRuntimeTypeInfo([], H.findType("JSArray<Surface>")));
    });
    _lazy($, "FontFallbackData__instance", "$get$FontFallbackData__instance", function() {
      var t1 = type$.int;
      return new H.FontFallbackData(P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashSet_LinkedHashSet$_empty(t1), H.FontFallbackData_createNotoFontTree(), H.setRuntimeTypeInfo([], type$.JSArray__RegisteredFont), H.setRuntimeTypeInfo(["Roboto"], type$.JSArray_String), P.LinkedHashMap_LinkedHashMap$_empty(type$.String, t1));
    });
    _lazy($, "_notoSansSC", "$get$_notoSansSC", function() {
      return H.NotoFont$("Noto Sans SC", H.setRuntimeTypeInfo([H.CodeunitRange$(12288, 12591), H.CodeunitRange$(12800, 13311), H.CodeunitRange$(19968, 40959), H.CodeunitRange$(65072, 65135), H.CodeunitRange$(65280, 65519)], type$.JSArray_CodeunitRange));
    });
    _lazy($, "_notoSansTC", "$get$_notoSansTC", function() {
      return H.NotoFont$("Noto Sans TC", H.setRuntimeTypeInfo([H.CodeunitRange$(12288, 12351), H.CodeunitRange$(12549, 12585), H.CodeunitRange$(19968, 40959)], type$.JSArray_CodeunitRange));
    });
    _lazy($, "_notoSansHK", "$get$_notoSansHK", function() {
      return H.NotoFont$("Noto Sans HK", H.setRuntimeTypeInfo([H.CodeunitRange$(12288, 12351), H.CodeunitRange$(12549, 12585), H.CodeunitRange$(19968, 40959)], type$.JSArray_CodeunitRange));
    });
    _lazy($, "_notoSansJP", "$get$_notoSansJP", function() {
      return H.NotoFont$("Noto Sans JP", H.setRuntimeTypeInfo([H.CodeunitRange$(12288, 12543), H.CodeunitRange$(19968, 40959), H.CodeunitRange$(65280, 65519)], type$.JSArray_CodeunitRange));
    });
    _lazy($, "_cjkFonts", "$get$_cjkFonts", function() {
      return H.setRuntimeTypeInfo([$.$get$_notoSansSC(), $.$get$_notoSansTC(), $.$get$_notoSansHK(), $.$get$_notoSansJP()], type$.JSArray_NotoFont);
    });
    _lazy($, "_notoFonts", "$get$_notoFonts", function() {
      var _8204 = 8204, _2404 = 2404, _2405 = 2405, _8205 = 8205, _8377 = 8377, _9676 = 9676,
        t1 = type$.JSArray_CodeunitRange;
      return H.setRuntimeTypeInfo([$.$get$_notoSansSC(), $.$get$_notoSansTC(), $.$get$_notoSansHK(), $.$get$_notoSansJP(), H.NotoFont$("Noto Naskh Arabic UI", H.setRuntimeTypeInfo([H.CodeunitRange$(1536, 1791), H.CodeunitRange$(_8204, 8206), H.CodeunitRange$(8208, 8209), H.CodeunitRange$(8271, 8271), H.CodeunitRange$(11841, 11841), H.CodeunitRange$(64336, 65023), H.CodeunitRange$(65132, 65276)], t1)), H.NotoFont$("Noto Sans Armenian", H.setRuntimeTypeInfo([H.CodeunitRange$(1328, 1424), H.CodeunitRange$(64275, 64279)], t1)), H.NotoFont$("Noto Sans Bengali UI", H.setRuntimeTypeInfo([H.CodeunitRange$(_2404, _2405), H.CodeunitRange$(2433, 2555), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_8377, _8377), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans Myanmar UI", H.setRuntimeTypeInfo([H.CodeunitRange$(4096, 4255), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans Egyptian Hieroglyphs", H.setRuntimeTypeInfo([H.CodeunitRange$(77824, 78894)], t1)), H.NotoFont$("Noto Sans Ethiopic", H.setRuntimeTypeInfo([H.CodeunitRange$(4608, 5017), H.CodeunitRange$(11648, 11742), H.CodeunitRange$(43777, 43822)], t1)), H.NotoFont$("Noto Sans Georgian", H.setRuntimeTypeInfo([H.CodeunitRange$(1417, 1417), H.CodeunitRange$(4256, 4351), H.CodeunitRange$(11520, 11567)], t1)), H.NotoFont$("Noto Sans Gujarati UI", H.setRuntimeTypeInfo([H.CodeunitRange$(_2404, _2405), H.CodeunitRange$(2688, 2815), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_8377, _8377), H.CodeunitRange$(_9676, _9676), H.CodeunitRange$(43056, 43065)], t1)), H.NotoFont$("Noto Sans Gurmukhi UI", H.setRuntimeTypeInfo([H.CodeunitRange$(_2404, _2405), H.CodeunitRange$(2561, 2677), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_8377, _8377), H.CodeunitRange$(_9676, _9676), H.CodeunitRange$(9772, 9772), H.CodeunitRange$(43056, 43065)], t1)), H.NotoFont$("Noto Sans Hebrew", H.setRuntimeTypeInfo([H.CodeunitRange$(1424, 1535), H.CodeunitRange$(8362, 8362), H.CodeunitRange$(_9676, _9676), H.CodeunitRange$(64285, 64335)], t1)), H.NotoFont$("Noto Sans Devanagari UI", H.setRuntimeTypeInfo([H.CodeunitRange$(2304, 2431), H.CodeunitRange$(7376, 7414), H.CodeunitRange$(7416, 7417), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(8360, 8360), H.CodeunitRange$(_8377, _8377), H.CodeunitRange$(_9676, _9676), H.CodeunitRange$(43056, 43065), H.CodeunitRange$(43232, 43259)], t1)), H.NotoFont$("Noto Sans Kannada UI", H.setRuntimeTypeInfo([H.CodeunitRange$(_2404, _2405), H.CodeunitRange$(3202, 3314), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_8377, _8377), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans Khmer UI", H.setRuntimeTypeInfo([H.CodeunitRange$(6016, 6143), H.CodeunitRange$(_8204, _8204), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans KR", H.setRuntimeTypeInfo([H.CodeunitRange$(12593, 12686), H.CodeunitRange$(12800, 12828), H.CodeunitRange$(12896, 12923), H.CodeunitRange$(44032, 55215)], t1)), H.NotoFont$("Noto Sans Lao UI", H.setRuntimeTypeInfo([H.CodeunitRange$(3713, 3807), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans Malayalam UI", H.setRuntimeTypeInfo([H.CodeunitRange$(775, 775), H.CodeunitRange$(803, 803), H.CodeunitRange$(_2404, _2405), H.CodeunitRange$(3330, 3455), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_8377, _8377), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans Sinhala", H.setRuntimeTypeInfo([H.CodeunitRange$(_2404, _2405), H.CodeunitRange$(3458, 3572), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans Tamil UI", H.setRuntimeTypeInfo([H.CodeunitRange$(_2404, _2405), H.CodeunitRange$(2946, 3066), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_8377, _8377), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans Telugu UI", H.setRuntimeTypeInfo([H.CodeunitRange$(2385, 2386), H.CodeunitRange$(_2404, _2405), H.CodeunitRange$(3072, 3199), H.CodeunitRange$(7386, 7386), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans Thai UI", H.setRuntimeTypeInfo([H.CodeunitRange$(3585, 3675), H.CodeunitRange$(_8204, _8205), H.CodeunitRange$(_9676, _9676)], t1)), H.NotoFont$("Noto Sans", H.setRuntimeTypeInfo([H.CodeunitRange$(0, 255), H.CodeunitRange$(305, 305), H.CodeunitRange$(338, 339), H.CodeunitRange$(699, 700), H.CodeunitRange$(710, 710), H.CodeunitRange$(730, 730), H.CodeunitRange$(732, 732), H.CodeunitRange$(8192, 8303), H.CodeunitRange$(8308, 8308), H.CodeunitRange$(8364, 8364), H.CodeunitRange$(8482, 8482), H.CodeunitRange$(8593, 8593), H.CodeunitRange$(8595, 8595), H.CodeunitRange$(8722, 8722), H.CodeunitRange$(8725, 8725), H.CodeunitRange$(65279, 65279), H.CodeunitRange$(65533, 65533), H.CodeunitRange$(1024, 1119), H.CodeunitRange$(1168, 1169), H.CodeunitRange$(1200, 1201), H.CodeunitRange$(8470, 8470), H.CodeunitRange$(1120, 1327), H.CodeunitRange$(7296, 7304), H.CodeunitRange$(8372, 8372), H.CodeunitRange$(11744, 11775), H.CodeunitRange$(42560, 42655), H.CodeunitRange$(65070, 65071), H.CodeunitRange$(880, 1023), H.CodeunitRange$(7936, 8191), H.CodeunitRange$(256, 591), H.CodeunitRange$(601, 601), H.CodeunitRange$(7680, 7935), H.CodeunitRange$(8224, 8224), H.CodeunitRange$(8352, 8363), H.CodeunitRange$(8365, 8399), H.CodeunitRange$(8467, 8467), H.CodeunitRange$(11360, 11391), H.CodeunitRange$(42784, 43007), H.CodeunitRange$(258, 259), H.CodeunitRange$(272, 273), H.CodeunitRange$(296, 297), H.CodeunitRange$(360, 361), H.CodeunitRange$(416, 417), H.CodeunitRange$(431, 432), H.CodeunitRange$(7840, 7929), H.CodeunitRange$(8363, 8363)], t1))], type$.JSArray_NotoFont);
    });
    _lazy($, "notoDownloadQueue", "$get$notoDownloadQueue", function() {
      var t1 = type$._ResolvedNotoSubset;
      return new H.FallbackFontDownloadQueue(new H.NotoDownloader(), P.LinkedHashSet_LinkedHashSet$_empty(t1), P.LinkedHashMap_LinkedHashMap$_empty(type$.String, t1));
    });
    _lazyFinal($, "canvasKitJavaScriptBindingsUrl", "$get$canvasKitJavaScriptBindingsUrl", function() {
      return "https://unpkg.com/canvaskit-wasm@0.25.1/bin/profiling/canvaskit.js";
    });
    _lazyFinal($, "SkiaObjects_expensiveCache", "$get$SkiaObjects_expensiveCache", function() {
      return new H.SkiaObjectCache(1024, new P.DoubleLinkedQueue(H.findType("DoubleLinkedQueue<SkiaObject<Object>>")), P.LinkedHashMap_LinkedHashMap$_empty(H.findType("SkiaObject<Object>"), H.findType("DoubleLinkedQueueEntry<SkiaObject<Object>>")));
    });
    _lazyFinal($, "CkParagraphBuilder__defaultTextForeground", "$get$CkParagraphBuilder__defaultTextForeground", function() {
      return new self.window.flutterCanvasKit.Paint();
    });
    _lazyFinal($, "CkParagraphBuilder__defaultTextBackground", "$get$CkParagraphBuilder__defaultTextBackground", function() {
      var t1 = new self.window.flutterCanvasKit.Paint();
      J.setColorInt$1$x(t1, 0);
      return t1;
    });
    _lazyFinal($, "domRenderer", "$get$domRenderer", function() {
      return H.DomRenderer$();
    });
    _lazyFinal($, "_PaintBounds__tempRectData", "$get$_PaintBounds__tempRectData", function() {
      return H.NativeFloat32List_NativeFloat32List(4);
    });
    _lazyFinal($, "_WebGlRenderer__vertexIndicesForRect", "$get$_WebGlRenderer__vertexIndicesForRect", function() {
      return H.NativeUint16List_NativeUint16List$fromList(H.setRuntimeTypeInfo([0, 1, 2, 2, 3, 0], type$.JSArray_int));
    });
    _lazyFinal($, "_kLogicalKeyToModifierGetter", "$get$_kLogicalKeyToModifierGetter", function() {
      return P.LinkedHashMap_LinkedHashMap$_literal([12884902146, new H._kLogicalKeyToModifierGetter_closure(), 17179869442, new H._kLogicalKeyToModifierGetter_closure0(), 12884902149, new H._kLogicalKeyToModifierGetter_closure1(), 17179869445, new H._kLogicalKeyToModifierGetter_closure2(), 12884902157, new H._kLogicalKeyToModifierGetter_closure3(), 17179869453, new H._kLogicalKeyToModifierGetter_closure4(), 12884902153, new H._kLogicalKeyToModifierGetter_closure5(), 17179869449, new H._kLogicalKeyToModifierGetter_closure6()], type$.int, H.findType("bool(FlutterHtmlKeyboardEvent)"));
    });
    _lazyFinal($, "EnginePlatformDispatcher__instance", "$get$EnginePlatformDispatcher__instance", function() {
      var t1 = type$.Object;
      t1 = new H.EnginePlatformDispatcher(P.PlatformConfiguration$(C.C_AccessibilityFeatures, false, "/", H.EnginePlatformDispatcher_parseBrowserLanguages(), C.Brightness_1, false, 1), P.LinkedHashMap_LinkedHashMap$_empty(t1, H.findType("FlutterWindow")), P.LinkedHashMap_LinkedHashMap$_empty(t1, H.findType("ViewConfiguration")), W.window().matchMedia("(prefers-color-scheme: dark)"));
      t1._addBrightnessMediaQueryListener$0();
      return t1;
    });
    _lazy($, "_frameTimingsLastSubmitTime", "$get$_frameTimingsLastSubmitTime", function() {
      return H._nowMicros();
    });
    _lazyFinal($, "accessibilityAnnouncements", "$get$accessibilityAnnouncements", function() {
      var t1 = $.AccessibilityAnnouncements__instance;
      return t1 == null ? $.AccessibilityAnnouncements__instance = H.AccessibilityAnnouncements$_() : t1;
    });
    _lazyFinal($, "_roleFactories", "$get$_roleFactories", function() {
      return P.LinkedHashMap_LinkedHashMap$_literal([C.Role_0, new H._roleFactories_closure(), C.Role_1, new H._roleFactories_closure0(), C.Role_2, new H._roleFactories_closure1(), C.Role_3, new H._roleFactories_closure2(), C.Role_4, new H._roleFactories_closure3(), C.Role_5, new H._roleFactories_closure4(), C.Role_6, new H._roleFactories_closure5(), C.Role_7, new H._roleFactories_closure6()], type$.Role, H.findType("RoleManager(SemanticsObject)"));
    });
    _lazyFinal($, "FontManager_notPunctuation", "$get$FontManager_notPunctuation", function() {
      return P.RegExp_RegExp("[a-z0-9\\s]+", false);
    });
    _lazyFinal($, "FontManager_startWithDigit", "$get$FontManager_startWithDigit", function() {
      return P.RegExp_RegExp("\\b\\d", true);
    });
    _lazyFinal($, "supportsFontLoadingApi", "$get$supportsFontLoadingApi", function() {
      return P.hasProperty(W.window(), "FontFace");
    });
    _lazyFinal($, "supportsFontsClearApi", "$get$supportsFontsClearApi", function() {
      if (P.hasProperty(W.document(), "fonts")) {
        var t1 = W.document().fonts;
        t1.toString;
        t1 = P.hasProperty(t1, "clear");
      } else
        t1 = false;
      return t1;
    });
    _lazy($, "Spanometer__rulerHost", "$get$Spanometer__rulerHost", function() {
      return H.RulerHost$();
    });
    _lazy($, "lineLookup", "$get$lineLookup", function() {
      var t1 = H.findType("LineCharProperty");
      return new H.UnicodePropertyLookup(H._unpackProperties("00000008A0009!B000a!C000b000cD000d!E000e000vA000w!F000x!G000y!H000z!I0010!J0011!K0012!I0013!H0014!L0015!M0016!I0017!J0018!N0019!O001a!N001b!P001c001lQ001m001nN001o001qI001r!G001s002iI002j!L002k!J002l!M002m003eI003f!L003g!B003h!R003i!I003j003oA003p!D003q004fA004g!S004h!L004i!K004j004lJ004m004qI004r!H004s!I004t!B004u004vI004w!K004x!J004y004zI0050!T00510056I0057!H0058005aI005b!L005c00jrI00js!T00jt00jvI00jw!T00jx00keI00kf!T00kg00lbI00lc00niA00nj!S00nk00nvA00nw00o2S00o300ofA00og00otI00ou!N00ov00w2I00w300w9A00wa013cI013d!N013e!B013h013iI013j!J013l014tA014u!B014v!A014w!I014x014yA014z!I01500151A0152!G0153!A015c0162U0167016aU016b016wI016x016zK01700171N01720173I0174017eA017f!G017g!A017i017jG017k018qI018r019bA019c019lQ019m!K019n019oQ019p019rI019s!A019t01cjI01ck!G01cl!I01cm01csA01ct01cuI01cv01d0A01d101d2I01d301d4A01d5!I01d601d9A01da01dbI01dc01dlQ01dm01e8I01e9!A01ea01f3I01f401fuA01fx01idI01ie01ioA01ip!I01j401jdQ01je01kaI01kb01kjA01kk01knI01ko!N01kp!G01kq!I01kt!A01ku01kvJ01kw01lhI01li01llA01lm!I01ln01lvA01lw!I01lx01lzA01m0!I01m101m5A01m801ncI01nd01nfA01ni01qfI01qr01r5A01r6!I01r701s3A01s401tlI01tm01toA01tp!I01tq01u7A01u8!I01u901ufA01ug01upI01uq01urA01us01utB01uu01v3Q01v401vkI01vl01vnA01vp01x5I01x8!A01x9!I01xa01xgA01xj01xkA01xn01xpA01xq!I01xz!A01y401y9I01ya01ybA01ye01ynQ01yo01ypI01yq01yrK01ys01ywI01yx!K01yy!I01yz!J01z001z1I01z2!A01z501z7A01z9020pI020s!A020u020yA02130214A02170219A021d!A021l021qI021y0227Q02280229A022a022cI022d!A022e!I022p022rA022t0249I024c!A024d!I024e024lA024n024pA024r024tA024w025dI025e025fA025i025rQ025s!I025t!J0261!I02620267A0269026bA026d027tI027w!A027x!I027y0284A02870288A028b028dA028l028nA028s028xI028y028zA0292029bQ029c029jI029u!A029v02bdI02bi02bmA02bq02bsA02bu02bxA02c0!I02c7!A02cm02cvQ02cw02d4I02d5!J02d6!I02dc02dgA02dh02f1I02f202f8A02fa02fcA02fe02fhA02fp02fqA02fs02g1I02g202g3A02g602gfQ02gn!T02go02gwI02gx02gzA02h0!T02h102ihI02ik!A02il!I02im02isA02iu02iwA02iy02j1A02j902jaA02ji02jlI02jm02jnA02jq02jzQ02k102k2I02kg02kjA02kk02m2I02m302m4A02m5!I02m602mcA02me02mgA02mi02mlA02mm02muI02mv!A02mw02n5I02n602n7A02na02njQ02nk02nsI02nt!K02nu02nzI02o102o3A02o502pyI02q2!A02q702qcA02qe!A02qg02qnA02qu02r3Q02r602r7A02r802t6I02tb!J02tc02trI02ts02u1Q02u202u3B02v502x9I02xc02xlQ02xo02yoI02yp02ysT02yt!I02yu02yvT02yw!S02yx02yyT02yz!B02z0!S02z102z5G02z6!S02z7!I02z8!G02z902zbI02zc02zdA02ze02zjI02zk02ztQ02zu0303I0304!B0305!A0306!I0307!A0308!I0309!A030a!L030b!R030c!L030d!R030e030fA030g031oI031t0326A0327!B0328032cA032d!B032e032fA032g032kI032l032vA032x033wA033y033zB03400345I0346!A0347034fI034g034hT034i!B034j!T034k034oI034p034qS035s037jI037k037tQ037u037vB037w039rI039s03a1Q03a203cvI03cw03fjV03fk03hjW03hk03jzX03k003tmI03tp03trA03ts!I03tt!B03tu03y5I03y8!B03y904fzI04g0!B04g104gqI04gr!L04gs!R04gw04iyI04iz04j1B04j204k1I04k204k4A04kg04kxI04ky04l0A04l104l2B04lc04ltI04lu04lvA04m804moI04mq04mrA04n404pfI04pg04phB04pi!Y04pj!I04pk!B04pl!I04pm!B04pn!J04po04ppI04ps04q1Q04q804qpI04qq04qrG04qs04qtB04qu!T04qv!I04qw04qxG04qy!I04qz04r1A04r2!S04r404rdQ04rk04ucI04ud04ueA04uf04vcI04vd!A04ve04ymI04yo04yzA04z404zfA04zk!I04zo04zpG04zq04zzQ0500053dI053k053tQ053u055iI055j055nA055q058cI058f!A058g058pQ058w0595Q059c059pI059s05a8A05c005c4A05c505dfI05dg05dwA05dx05e3I05e805ehQ05ei05ejB05ek!I05el05eoB05ep05eyI05ez05f7A05f805fgI05fk05fmA05fn05ggI05gh05gtA05gu05gvI05gw05h5Q05h605idI05ie05irA05j005k3I05k405knA05kr05kvB05kw05l5Q05l905lbI05lc05llQ05lm05mlI05mm05mnB05mo05onI05ow05oyA05oz!I05p005pkA05pl05poI05pp!A05pq05pvI05pw!A05px05pyI05pz05q1A05q205vjI05vk05x5A05x705xbA05xc06bgI06bh!T06bi!I06bk06bqB06br!S06bs06buB06bv!Z06bw!A06bx!a06by06bzA06c0!B06c1!S06c206c3B06c4!b06c506c7I06c806c9H06ca!L06cb06cdH06ce!L06cf!H06cg06cjI06ck06cmc06cn!B06co06cpD06cq06cuA06cv!S06cw06d3K06d4!I06d506d6H06d7!I06d806d9Y06da06dfI06dg!N06dh!L06di!R06dj06dlY06dm06dxI06dy!B06dz!I06e006e3B06e4!I06e506e7B06e8!d06e906ecI06ee06enA06eo06f0I06f1!L06f2!R06f306fgI06fh!L06fi!R06fk06fwI06g006g6J06g7!K06g806glJ06gm!K06gn06gqJ06gr!K06gs06gtJ06gu!K06gv06hbJ06hc06i8A06io06iqI06ir!K06is06iwI06ix!K06iy06j9I06ja!J06jb06q9I06qa06qbJ06qc06weI06wf!c06wg06x3I06x4!L06x5!R06x6!L06x7!R06x806xlI06xm06xne06xo06y0I06y1!L06y2!R06y3073jI073k073ne073o07i7I07i807ibe07ic07irI07is07ite07iu07ivI07iw!e07ix!I07iy07j0e07j1!f07j207j3e07j407jsI07jt07jve07jw07l3I07l4!e07l507lqI07lr!e07ls07ngI07nh07nse07nt07nwI07nx!e07ny!I07nz07o1e07o2!I07o307o4e07o507o7I07o807o9e07oa07obI07oc!e07od07oeI07of07ohe07oi07opI07oq!e07or07owI07ox07p1e07p2!I07p307p4e07p5!f07p6!e07p707p8I07p907pge07ph07pjI07pk07ple07pm07ppf07pq07ruI07rv07s0H07s1!I07s207s3G07s4!e07s507s7I07s8!L07s9!R07sa!L07sb!R07sc!L07sd!R07se!L07sf!R07sg!L07sh!R07si!L07sj!R07sk!L07sl!R07sm07usI07ut!L07uu!R07uv07vpI07vq!L07vr!R07vs!L07vt!R07vu!L07vv!R07vw!L07vx!R07vy!L07vz!R07w00876I0877!L0878!R0879!L087a!R087b!L087c!R087d!L087e!R087f!L087g!R087h!L087i!R087j!L087k!R087l!L087m!R087n!L087o!R087p!L087q!R087r!L087s!R087t089jI089k!L089l!R089m!L089n!R089o08ajI08ak!L08al!R08am08viI08vj08vlA08vm08vnI08vt!G08vu08vwB08vx!I08vy!G08vz!B08w008z3I08z4!B08zj!A08zk0926I09280933A0934093hH093i093pB093q!I093r!B093s!L093t!B093u093vI093w093xH093y093zI09400941H0942!L0943!R0944!L0945!R0946!L0947!R0948!L0949!R094a094dB094e!G094f!I094g094hB094i!I094j094kB094l094pI094q094rb094s094uB094v!I094w094xB094y!L094z0956B0957!I0958!B0959!I095a095bB095c095eI096o097de097f099ve09a809g5e09gw09h7e09hc!B09hd09heR09hf09hge09hh!Y09hi09hje09hk!L09hl!R09hm!L09hn!R09ho!L09hp!R09hq!L09hr!R09hs!L09ht!R09hu09hve09hw!L09hx!R09hy!L09hz!R09i0!L09i1!R09i2!L09i3!R09i4!Y09i5!L09i609i7R09i809ihe09ii09inA09io09ise09it!A09iu09iye09iz09j0Y09j109j3e09j5!Y09j6!e09j7!Y09j8!e09j9!Y09ja!e09jb!Y09jc!e09jd!Y09je09k2e09k3!Y09k409kye09kz!Y09l0!e09l1!Y09l2!e09l3!Y09l409l9e09la!Y09lb09lge09lh09liY09ll09lmA09ln09lqY09lr!e09ls09ltY09lu!e09lv!Y09lw!e09lx!Y09ly!e09lz!Y09m0!e09m1!Y09m209mqe09mr!Y09ms09nme09nn!Y09no!e09np!Y09nq!e09nr!Y09ns09nxe09ny!Y09nz09o4e09o509o6Y09o709oae09ob09oeY09of!e09ol09pre09pt09see09sg09ure09v409vjY09vk09wee09wg09xje09xk09xrI09xs0fcve0fcw0fenI0feo0vmce0vmd!Y0vme0wi4e0wi80wjqe0wk00wl9I0wla0wlbB0wlc0wssI0wst!B0wsu!G0wsv!B0wsw0wtbI0wtc0wtlQ0wtm0wviI0wvj0wvmA0wvn!I0wvo0wvxA0wvy0wwtI0wwu0wwvA0www0wz3I0wz40wz5A0wz6!I0wz70wzbB0wzk0x6pI0x6q!A0x6r0x6tI0x6u!A0x6v0x6yI0x6z!A0x700x7mI0x7n0x7rA0x7s0x7vI0x7w!A0x800x87I0x88!K0x890x9vI0x9w0x9xT0x9y0x9zG0xa80xa9A0xaa0xbnI0xbo0xc5A0xce0xcfB0xcg0xcpQ0xcw0xddA0xde0xdnI0xdo!T0xdp0xdqI0xdr!A0xds0xe1Q0xe20xetI0xeu0xf1A0xf20xf3B0xf40xfqI0xfr0xg3A0xgf!I0xgg0xh8V0xhc0xhfA0xhg0xiqI0xir0xj4A0xj50xjaI0xjb0xjdB0xje0xjjI0xjk0xjtQ0xjy0xkfI0xkg0xkpQ0xkq0xm0I0xm10xmeA0xmo0xmqI0xmr!A0xms0xmzI0xn00xn1A0xn40xndQ0xng!I0xnh0xnjB0xnk0xreI0xrf0xrjA0xrk0xrlB0xrm0xroI0xrp0xrqA0xs10xyaI0xyb0xyiA0xyj!B0xyk0xylA0xyo0xyxQ0xz4!g0xz50xzvh0xzw!g0xzx0y0nh0y0o!g0y0p0y1fh0y1g!g0y1h0y27h0y28!g0y290y2zh0y30!g0y310y3rh0y3s!g0y3t0y4jh0y4k!g0y4l0y5bh0y5c!g0y5d0y63h0y64!g0y650y6vh0y6w!g0y6x0y7nh0y7o!g0y7p0y8fh0y8g!g0y8h0y97h0y98!g0y990y9zh0ya0!g0ya10yarh0yas!g0yat0ybjh0ybk!g0ybl0ycbh0ycc!g0ycd0yd3h0yd4!g0yd50ydvh0ydw!g0ydx0yenh0yeo!g0yep0yffh0yfg!g0yfh0yg7h0yg8!g0yg90ygzh0yh0!g0yh10yhrh0yhs!g0yht0yijh0yik!g0yil0yjbh0yjc!g0yjd0yk3h0yk4!g0yk50ykvh0ykw!g0ykx0ylnh0ylo!g0ylp0ymfh0ymg!g0ymh0yn7h0yn8!g0yn90ynzh0yo0!g0yo10yorh0yos!g0yot0ypjh0ypk!g0ypl0yqbh0yqc!g0yqd0yr3h0yr4!g0yr50yrvh0yrw!g0yrx0ysnh0yso!g0ysp0ytfh0ytg!g0yth0yu7h0yu8!g0yu90yuzh0yv0!g0yv10yvrh0yvs!g0yvt0ywjh0ywk!g0ywl0yxbh0yxc!g0yxd0yy3h0yy4!g0yy50yyvh0yyw!g0yyx0yznh0yzo!g0yzp0z0fh0z0g!g0z0h0z17h0z18!g0z190z1zh0z20!g0z210z2rh0z2s!g0z2t0z3jh0z3k!g0z3l0z4bh0z4c!g0z4d0z53h0z54!g0z550z5vh0z5w!g0z5x0z6nh0z6o!g0z6p0z7fh0z7g!g0z7h0z87h0z88!g0z890z8zh0z90!g0z910z9rh0z9s!g0z9t0zajh0zak!g0zal0zbbh0zbc!g0zbd0zc3h0zc4!g0zc50zcvh0zcw!g0zcx0zdnh0zdo!g0zdp0zefh0zeg!g0zeh0zf7h0zf8!g0zf90zfzh0zg0!g0zg10zgrh0zgs!g0zgt0zhjh0zhk!g0zhl0zibh0zic!g0zid0zj3h0zj4!g0zj50zjvh0zjw!g0zjx0zknh0zko!g0zkp0zlfh0zlg!g0zlh0zm7h0zm8!g0zm90zmzh0zn0!g0zn10znrh0zns!g0znt0zojh0zok!g0zol0zpbh0zpc!g0zpd0zq3h0zq4!g0zq50zqvh0zqw!g0zqx0zrnh0zro!g0zrp0zsfh0zsg!g0zsh0zt7h0zt8!g0zt90ztzh0zu0!g0zu10zurh0zus!g0zut0zvjh0zvk!g0zvl0zwbh0zwc!g0zwd0zx3h0zx4!g0zx50zxvh0zxw!g0zxx0zynh0zyo!g0zyp0zzfh0zzg!g0zzh1007h1008!g1009100zh1010!g1011101rh101s!g101t102jh102k!g102l103bh103c!g103d1043h1044!g1045104vh104w!g104x105nh105o!g105p106fh106g!g106h1077h1078!g1079107zh1080!g1081108rh108s!g108t109jh109k!g109l10abh10ac!g10ad10b3h10b4!g10b510bvh10bw!g10bx10cnh10co!g10cp10dfh10dg!g10dh10e7h10e8!g10e910ezh10f0!g10f110frh10fs!g10ft10gjh10gk!g10gl10hbh10hc!g10hd10i3h10i4!g10i510ivh10iw!g10ix10jnh10jo!g10jp10kfh10kg!g10kh10l7h10l8!g10l910lzh10m0!g10m110mrh10ms!g10mt10njh10nk!g10nl10obh10oc!g10od10p3h10p4!g10p510pvh10pw!g10px10qnh10qo!g10qp10rfh10rg!g10rh10s7h10s8!g10s910szh10t0!g10t110trh10ts!g10tt10ujh10uk!g10ul10vbh10vc!g10vd10w3h10w4!g10w510wvh10ww!g10wx10xnh10xo!g10xp10yfh10yg!g10yh10z7h10z8!g10z910zzh1100!g1101110rh110s!g110t111jh111k!g111l112bh112c!g112d1133h1134!g1135113vh113w!g113x114nh114o!g114p115fh115g!g115h1167h1168!g1169116zh1170!g1171117rh117s!g117t118jh118k!g118l119bh119c!g119d11a3h11a4!g11a511avh11aw!g11ax11bnh11bo!g11bp11cfh11cg!g11ch11d7h11d8!g11d911dzh11e0!g11e111erh11es!g11et11fjh11fk!g11fl11gbh11gc!g11gd11h3h11h4!g11h511hvh11hw!g11hx11inh11io!g11ip11jfh11jg!g11jh11k7h11k8!g11k911kzh11l0!g11l111lrh11ls!g11lt11mjh11mk!g11ml11nbh11nc!g11nd11o3h11o4!g11o511ovh11ow!g11ox11pnh11po!g11pp11qfh11qg!g11qh11r7h11r8!g11r911rzh11s0!g11s111srh11ss!g11st11tjh11tk!g11tl11ubh11uc!g11ud11v3h11v4!g11v511vvh11vw!g11vx11wnh11wo!g11wp11xfh11xg!g11xh11y7h11y8!g11y911yzh11z0!g11z111zrh11zs!g11zt120jh120k!g120l121bh121c!g121d1223h1224!g1225122vh122w!g122x123nh123o!g123p124fh124g!g124h1257h1258!g1259125zh1260!g1261126rh126s!g126t127jh127k!g127l128bh128c!g128d1293h1294!g1295129vh129w!g129x12anh12ao!g12ap12bfh12bg!g12bh12c7h12c8!g12c912czh12d0!g12d112drh12ds!g12dt12ejh12ek!g12el12fbh12fc!g12fd12g3h12g4!g12g512gvh12gw!g12gx12hnh12ho!g12hp12ifh12ig!g12ih12j7h12j8!g12j912jzh12k0!g12k112krh12ks!g12kt12ljh12lk!g12ll12mbh12mc!g12md12n3h12n4!g12n512nvh12nw!g12nx12onh12oo!g12op12pfh12pg!g12ph12q7h12q8!g12q912qzh12r0!g12r112rrh12rs!g12rt12sjh12sk!g12sl12tbh12tc!g12td12u3h12u4!g12u512uvh12uw!g12ux12vnh12vo!g12vp12wfh12wg!g12wh12x7h12x8!g12x912xzh12y0!g12y112yrh12ys!g12yt12zjh12zk!g12zl130bh130c!g130d1313h1314!g1315131vh131w!g131x132nh132o!g132p133fh133g!g133h1347h1348!g1349134zh1350!g1351135rh135s!g135t136jh136k!g136l137bh137c!g137d1383h1384!g1385138vh138w!g138x139nh139o!g139p13afh13ag!g13ah13b7h13b8!g13b913bzh13c0!g13c113crh13cs!g13ct13djh13dk!g13dl13ebh13ec!g13ed13f3h13f4!g13f513fvh13fw!g13fx13gnh13go!g13gp13hfh13hg!g13hh13i7h13i8!g13i913izh13j0!g13j113jrh13js!g13jt13kjh13kk!g13kl13lbh13lc!g13ld13m3h13m4!g13m513mvh13mw!g13mx13nnh13no!g13np13ofh13og!g13oh13p7h13p8!g13p913pzh13q0!g13q113qrh13qs!g13qt13rjh13rk!g13rl13sbh13sc!g13sd13t3h13t4!g13t513tvh13tw!g13tx13unh13uo!g13up13vfh13vg!g13vh13w7h13w8!g13w913wzh13x0!g13x113xrh13xs!g13xt13yjh13yk!g13yl13zbh13zc!g13zd1403h1404!g1405140vh140w!g140x141nh141o!g141p142fh142g!g142h1437h1438!g1439143zh1440!g1441144rh144s!g144t145jh145k!g145l146bh146c!g146d1473h1474!g1475147vh147w!g147x148nh148o!g148p149fh149g!g149h14a7h14a8!g14a914azh14b0!g14b114brh14bs!g14bt14cjh14ck!g14cl14dbh14dc!g14dd14e3h14e4!g14e514evh14ew!g14ex14fnh14fo!g14fp14gfh14gg!g14gh14h7h14h8!g14h914hzh14i0!g14i114irh14is!g14it14jjh14jk!g14jl14kbh14kc!g14kd14l3h14l4!g14l514lvh14lw!g14lx14mnh14mo!g14mp14nfh14ng!g14nh14o7h14o8!g14o914ozh14p0!g14p114prh14ps!g14pt14qjh14qk!g14ql14rbh14rc!g14rd14s3h14s4!g14s514svh14sw!g14sx14tnh14to!g14tp14ufh14ug!g14uh14v7h14v8!g14v914vzh14w0!g14w114wrh14ws!g14wt14xjh14xk!g14xl14ybh14yc!g14yd14z3h14z4!g14z514zvh14zw!g14zx150nh150o!g150p151fh151g!g151h1527h1528!g1529152zh1530!g1531153rh153s!g153t154jh154k!g154l155bh155c!g155d1563h1564!g1565156vh156w!g156x157nh157o!g157p158fh158g!g158h1597h1598!g1599159zh15a0!g15a115arh15as!g15at15bjh15bk!g15bl15cbh15cc!g15cd15d3h15d4!g15d515dvh15dw!g15dx15enh15eo!g15ep15ffh15fg!g15fh15g7h15g8!g15g915gzh15h0!g15h115hrh15hs!g15ht15ijh15ik!g15il15jbh15jc!g15jd15k3h15k4!g15k515kvh15kw!g15kx15lnh15lo!g15lp15mfh15mg!g15mh15n7h15n8!g15n915nzh15o0!g15o115orh15os!g15ot15pjh15pk!g15pl15qbh15qc!g15qd15r3h15r4!g15r515rvh15rw!g15rx15snh15so!g15sp15tfh15tg!g15th15u7h15u8!g15u915uzh15v0!g15v115vrh15vs!g15vt15wjh15wk!g15wl15xbh15xc!g15xd15y3h15y4!g15y515yvh15yw!g15yx15znh15zo!g15zp160fh160g!g160h1617h1618!g1619161zh1620!g1621162rh162s!g162t163jh163k!g163l164bh164c!g164d1653h1654!g1655165vh165w!g165x166nh166o!g166p167fh167g!g167h1687h1688!g1689168zh1690!g1691169rh169s!g169t16ajh16ak!g16al16bbh16bc!g16bd16c3h16c4!g16c516cvh16cw!g16cx16dnh16do!g16dp16efh16eg!g16eh16f7h16f8!g16f916fzh16g0!g16g116grh16gs!g16gt16hjh16hk!g16hl16ibh16ic!g16id16j3h16j4!g16j516jvh16jw!g16jx16knh16ko!g16kp16lfh16ls16meW16mj16nvX16o01d6nI1d6o1dkve1dkw1dljI1dlp!U1dlq!A1dlr1dm0U1dm1!I1dm21dmeU1dmg1dmkU1dmm!U1dmo1dmpU1dmr1dmsU1dmu1dn3U1dn41e0tI1e0u!R1e0v!L1e1c1e63I1e64!K1e65!I1e681e6nA1e6o!N1e6p1e6qR1e6r1e6sN1e6t1e6uG1e6v!L1e6w!R1e6x!c1e741e7jA1e7k1e7oe1e7p!L1e7q!R1e7r!L1e7s!R1e7t!L1e7u!R1e7v!L1e7w!R1e7x!L1e7y!R1e7z!L1e80!R1e81!L1e82!R1e83!L1e84!R1e851e86e1e87!L1e88!R1e891e8fe1e8g!R1e8h!e1e8i!R1e8k1e8lY1e8m1e8nG1e8o!e1e8p!L1e8q!R1e8r!L1e8s!R1e8t!L1e8u!R1e8v1e92e1e94!e1e95!J1e96!K1e97!e1e9c1ed8I1edb!d1edd!G1ede1edfe1edg!J1edh!K1edi1edje1edk!L1edl!R1edm1edne1edo!R1edp!e1edq!R1edr1ee1e1ee21ee3Y1ee41ee6e1ee7!G1ee81eeye1eez!L1ef0!e1ef1!R1ef21efue1efv!L1efw!e1efx!R1efy!e1efz!L1eg01eg1R1eg2!L1eg31eg4R1eg5!Y1eg6!e1eg71eggY1egh1ehpe1ehq1ehrY1ehs1eime1eiq1eive1eiy1ej3e1ej61ejbe1eje1ejge1ejk!K1ejl!J1ejm1ejoe1ejp1ejqJ1ejs1ejyI1ek91ekbA1ekc!i1ekd1ereI1erk1ermB1err1eykI1eyl!A1f281f4gI1f4w!A1f4x1f91I1f921f96A1f9c1fa5I1fa7!B1fa81fbjI1fbk!B1fbl1fh9I1fhc1fhlQ1fhs1g7pI1g7r!B1g7s1gd7I1gdb!B1gdc1gjkI1gjl1gjnA1gjp1gjqA1gjw1gjzA1gk01gl1I1gl41gl6A1glb!A1glc1glkI1gls1glzB1gm01gpwI1gpx1gpyA1gq31gq7I1gq81gqdB1gqe!c1gqo1gs5I1gs91gsfB1gsg1h5vI1h5w1h5zA1h681h6hQ1heo1hgpI1hgr1hgsA1hgt!B1hgw1hl1I1hl21hlcA1hld1hpyI1hq81hqaA1hqb1hrrI1hrs1hs6A1hs71hs8B1hs91ht1I1ht21htbQ1htr1htuA1htv1hv3I1hv41hveA1hvf1hvhI1hvi1hvlB1hvx1hwoI1hww1hx5Q1hxc1hxeA1hxf1hyeI1hyf1hysA1hyu1hz3Q1hz41hz7B1hz8!I1hz91hzaA1hzb1i0iI1i0j!A1i0k!I1i0l!T1i0m!I1i0w1i0yA1i0z1i2aI1i2b1i2oA1i2p1i2sI1i2t1i2uB1i2v!I1i2w!B1i2x1i30A1i31!I1i321i33A1i341i3dQ1i3e!I1i3f!T1i3g!I1i3h1i3jB1i3l1i5nI1i5o1i5zA1i601i61B1i62!I1i631i64B1i65!I1i66!A1i801i94I1i95!B1i9c1iamI1ian1iayA1ib41ibdQ1ibk1ibnA1ibp1id5I1id71id8A1id9!I1ida1idgA1idj1idkA1idn1idpA1ids!I1idz!A1ie51ie9I1iea1iebA1iee1iekA1ieo1iesA1iio1ik4I1ik51ikmA1ikn1ikqI1ikr1ikuB1ikv!I1ikw1il5Q1il61il7B1il9!I1ila!A1ilb1injI1ink1io3A1io41io7I1iog1iopQ1itc1iumI1iun1iutA1iuw1iv4A1iv5!T1iv61iv7B1iv81iv9G1iva1ivcI1ivd1ivrB1ivs1ivvI1ivw1ivxA1iww1iy7I1iy81iyoA1iyp1iyqB1iyr1iysI1iz41izdQ1izk1izwT1j0g1j1mI1j1n1j1zA1j20!I1j281j2hQ1j401j57I1j5c1j5lQ1j5m1j5nI1j5o1j5qB1j5r1jcbI1jcc1jcqA1jcr1jhbI1jhc1jhlQ1jhm1jjjI1jjk1jjpA1jjr1jjsA1jjv1jjyA1jjz!I1jk0!A1jk1!I1jk21jk3A1jk41jk6B1jkg1jkpQ1jmo1jo0I1jo11jo7A1joa1jogA1joh!I1joi!T1joj!I1jok!A1jpc!I1jpd1jpmA1jpn1jqqI1jqr1jqxA1jqy!I1jqz1jr2A1jr3!T1jr4!I1jr51jr8B1jr9!T1jra!I1jrb!A1jrk!I1jrl1jrvA1jrw1jt5I1jt61jtlA1jtm1jtoB1jtp!I1jtq1jtsT1jtt1jtuB1juo1k4uI1k4v1k52A1k541k5bA1k5c!I1k5d1k5hB1k5s1k61Q1k621k6kI1k6o!T1k6p!G1k6q1k7jI1k7m1k87A1k891k8mA1kao1kc0I1kc11kc6A1kca!A1kcc1kcdA1kcf1kclA1kcm!I1kcn!A1kcw1kd5Q1kdc1kehI1kei1kemA1keo1kepA1ker1kevA1kew!I1kf41kfdQ1ko01koiI1koj1komA1kon1kv0I1kv11kv4K1kv51kvlI1kvz!B1kw01lriI1lrk1lroB1ls01oifI1oig1oiiL1oij1oilR1oim1ojlI1ojm!R1ojn1ojpI1ojq!L1ojr!R1ojs!L1ojt!R1oju1oqgI1oqh!L1oqi1oqjR1oqk1oviI1ovk1ovqS1ovr!L1ovs!R1s001sctI1scu!L1scv!R1scw1zkuI1zkw1zl5Q1zla1zlbB1zo01zotI1zow1zp0A1zp1!B1zpc1zqnI1zqo1zquA1zqv1zqxB1zqy1zr7I1zr8!B1zr9!I1zrk1zrtQ1zrv20euI20ev20ewB20ex20juI20jz!A20k0!I20k120ljA20lr20luA20lv20m7I20o020o3Y20o4!S20og20ohA20ow25fbe25fk260ve260w26dxI26f426fce2dc02djye2dlc2dleY2dlw2dlzY2dm82dx7e2fpc2ftoI2ftp2ftqA2ftr!B2fts2ftvA2jnk2jxgI2jxh2jxlA2jxm2jxoI2jxp2jyaA2jyb2jycI2jyd2jyjA2jyk2jzdI2jze2jzhA2jzi2k3lI2k3m2k3oA2k3p2l6zI2l722l8fQ2l8g2lmnI2lmo2lo6A2lo72loaI2lob2lpoA2lpp2lpwI2lpx!A2lpy2lqbI2lqc!A2lqd2lqeI2lqf2lqiB2lqj!I2lqz2lr3A2lr52lrjA2mtc2mtiA2mtk2mu0A2mu32mu9A2mub2mucA2mue2muiA2n0g2n1oI2n1s2n1yA2n1z2n25I2n282n2hQ2n2m2ne3I2ne42ne7A2ne82nehQ2nen!J2oe82ojzI2ok02ok6A2olc2on7I2on82oneA2onf!I2onk2ontQ2ony2onzL2p9t2pbfI2pbg!K2pbh2pbjI2pbk!K2pbl2prlI2pz42q67e2q682q6kI2q6l2q6ne2q6o2q98I2q992q9be2q9c2qb0I2qb12qcle2qcm2qdbj2qdc2qo4e2qo5!f2qo62qore2qos2qotI2qou2qpge2qph2qpiI2qpj2qpne2qpo!I2qpp2qpte2qpu2qpwf2qpx2qpye2qpz!f2qq02qq1e2qq22qq4f2qq52qree2qrf2qrjk2qrk2qtde2qte2qtff2qtg2qthe2qti2qtsf2qtt2qude2que2quwf2qux2quze2qv0!f2qv12qv4e2qv52qv7f2qv8!e2qv92qvbf2qvc2qvie2qvj!f2qvk!e2qvl!f2qvm2qvze2qw0!I2qw1!e2qw2!I2qw3!e2qw4!I2qw52qw9e2qwa!f2qwb2qwee2qwf!I2qwg!e2qwh2qwiI2qwj2qyne2qyo2qyuI2qyv2qzae2qzb2qzoI2qzp2r01e2r022r0pI2r0q2r1ve2r1w2r1xf2r1y2r21e2r22!f2r232r2ne2r2o!f2r2p2r2se2r2t2r2uf2r2v2r4je2r4k2r4rI2r4s2r5fe2r5g2r5lI2r5m2r7oe2r7p2r7rf2r7s2r7ue2r7v2r7zf2r802r91I2r922r94H2r952r97Y2r982r9bI2r9c2raae2rab!f2rac2rare2ras2rauf2rav2rb3e2rb4!f2rb52rbfe2rbg!f2rbh2rcve2rcw2rg3I2rg42rgfe2rgg2risI2rit2rjze2rk02rkbI2rkc2rkfe2rkg2rlzI2rm02rm7e2rm82rmhI2rmi2rmne2rmo2rnrI2rns2rnze2ro02rotI2rou2rr3e2rr42rrfI2rrg!f2rrh2rrie2rrj!f2rrk2rrre2rrs2rrzf2rs02rs5e2rs6!f2rs72rsfe2rsg2rspf2rsq2rsre2rss2rsuf2rsv2ruee2ruf!f2rug2rw4e2rw52rw6f2rw7!e2rw82rw9f2rwa!e2rwb!f2rwc2rwse2rwt2rwvf2rww!e2rwx2rx9f2rxa2ry7e2ry82s0jI2s0k2s5be2s5c2sayI2sc02sc9Q2scg2t4te2t4w47p9e47pc5m9pejny9!Ajnz4jo1rAjo5cjobzAl2ionvnhI", 937, C.List_zPV, t1), C.LineCharProperty_8, P.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1), H.findType("UnicodePropertyLookup<LineCharProperty>"));
    });
    _lazyFinal($, "DomParagraphBuilder__paragraphBuilderPop", "$get$DomParagraphBuilder__paragraphBuilderPop", function() {
      return new P.Object();
    });
    _lazyFinal($, "BrowserAutofillHints__singletonInstance", "$get$BrowserAutofillHints__singletonInstance", function() {
      var t1 = type$.String;
      return new H.BrowserAutofillHints(P.LinkedHashMap_LinkedHashMap$_literal(["birthday", "bday", "birthdayDay", "bday-day", "birthdayMonth", "bday-month", "birthdayYear", "bday-year", "countryCode", "country", "countryName", "country-name", "creditCardExpirationDate", "cc-exp", "creditCardExpirationMonth", "cc-exp-month", "creditCardExpirationYear", "cc-exp-year", "creditCardFamilyName", "cc-family-name", "creditCardGivenName", "cc-given-name", "creditCardMiddleName", "cc-additional-name", "creditCardName", "cc-name", "creditCardNumber", "cc-number", "creditCardSecurityCode", "cc-csc", "creditCardType", "cc-type", "email", "email", "familyName", "family-name", "fullStreetAddress", "street-address", "gender", "sex", "givenName", "given-name", "impp", "impp", "jobTitle", "organization-title", "language", "language", "middleName", "middleName", "name", "name", "namePrefix", "honorific-prefix", "nameSuffix", "honorific-suffix", "newPassword", "new-password", "nickname", "nickname", "oneTimeCode", "one-time-code", "organizationName", "organization", "password", "current-password", "photo", "photo", "postalCode", "postal-code", "streetAddressLevel1", "address-level1", "streetAddressLevel2", "address-level2", "streetAddressLevel3", "address-level3", "streetAddressLevel4", "address-level4", "streetAddressLine1", "address-line1", "streetAddressLine2", "address-line2", "streetAddressLine3", "address-line3", "telephoneNumber", "tel", "telephoneNumberAreaCode", "tel-area-code", "telephoneNumberCountryCode", "tel-country-code", "telephoneNumberExtension", "tel-extension", "telephoneNumberLocal", "tel-local", "telephoneNumberLocalPrefix", "tel-local-prefix", "telephoneNumberLocalSuffix", "tel-local-suffix", "telephoneNumberNational", "tel-national", "transactionAmount", "transaction-amount", "transactionCurrency", "transaction-currency", "url", "url", "username", "username"], t1, t1));
    });
    _lazyFinal($, "textEditing", "$get$textEditing", function() {
      var t1 = new H.HybridTextEditing();
      t1.__HybridTextEditing_channel = new H.TextEditingChannel(t1);
      return t1;
    });
    _lazyFinal($, "formsOnTheDom", "$get$formsOnTheDom", function() {
      return H.JsLinkedHashMap_JsLinkedHashMap$es6(type$.String, H.findType("FormElement"));
    });
    _lazyFinal($, "_tempRectData", "$get$_tempRectData", function() {
      return H.NativeFloat32List_NativeFloat32List(4);
    });
    _lazyFinal($, "_tempPointData", "$get$_tempPointData", function() {
      return H.NativeFloat32List_NativeFloat32List(16);
    });
    _lazyFinal($, "_tempPointMatrix", "$get$_tempPointMatrix", function() {
      return H.Matrix4$fromFloat32List($.$get$_tempPointData());
    });
    _lazyFinal($, "_fallbackFontFamily", "$get$_fallbackFontFamily", function() {
      return H.isMacOrIOS() ? "-apple-system, BlinkMacSystemFont" : "Arial";
    });
    _lazyFinal($, "_fontChangeMessage", "$get$_fontChangeMessage", function() {
      return new H.JSONMessageCodec().encodeMessage$1(P.LinkedHashMap_LinkedHashMap$_literal(["type", "fontsChange"], type$.String, type$.dynamic));
    });
    _lazy($, "printWarning", "$get$printWarning", function() {
      W.window();
      return C.C_Console.get$warn();
    });
    _lazyFinal($, "window0", "$get$window", function() {
      return H.EngineSingletonFlutterWindow$(0, $.$get$EnginePlatformDispatcher__instance());
    });
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartClosure");
    });
    _lazyFinal($, "nullFuture", "$get$nullFuture", function() {
      return C.C__RootZone.run$1(new H.nullFuture_closure());
    });
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
    });
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = "$arguments$";
        try {
          null.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
    });
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = "$arguments$";
        try {
          (void 0).$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
    });
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          null.$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
    });
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          (void 0).$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", function() {
      return P._AsyncRun__initializeScheduleImmediate();
    });
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", function() {
      return H.findType("_Future<Null>")._as($.$get$nullFuture());
    });
    _lazyFinal($, "Utf8Decoder__decoder", "$get$Utf8Decoder__decoder", function() {
      return new P.Utf8Decoder__decoder_closure().call$0();
    });
    _lazyFinal($, "Utf8Decoder__decoderNonfatal", "$get$Utf8Decoder__decoderNonfatal", function() {
      return new P.Utf8Decoder__decoderNonfatal_closure().call$0();
    });
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", function() {
      return H.NativeInt8List__create1(H._ensureNativeList(H.setRuntimeTypeInfo([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int)));
    });
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", function() {
      return P.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", true);
    });
    _lazy($, "_hasErrorStackProperty", "$get$_hasErrorStackProperty", function() {
      return new Error().stack != void 0;
    });
    _lazyFinal($, "Stopwatch__frequency", "$get$Stopwatch__frequency", function() {
      H.Primitives_initTicker();
      return $.Primitives_timerFrequency;
    });
    _lazyFinal($, "_scannerTables", "$get$_scannerTables", function() {
      return P._createTables();
    });
    _lazyFinal($, "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", function() {
      return {};
    });
    _lazyFinal($, "_Html5NodeValidator__allowedElements", "$get$_Html5NodeValidator__allowedElements", function() {
      return P.LinkedHashSet_LinkedHashSet$from(["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"], type$.String);
    });
    _lazyFinal($, "Device_isOpera", "$get$Device_isOpera", function() {
      return C.JSString_methods.contains$2(P.Device_userAgent(), "Opera", 0);
    });
    _lazyFinal($, "Device_isIE", "$get$Device_isIE", function() {
      return !$.$get$Device_isOpera() && C.JSString_methods.contains$2(P.Device_userAgent(), "Trident/", 0);
    });
    _lazyFinal($, "Device_isFirefox", "$get$Device_isFirefox", function() {
      return C.JSString_methods.contains$2(P.Device_userAgent(), "Firefox", 0);
    });
    _lazyFinal($, "Device_isWebKit", "$get$Device_isWebKit", function() {
      return !$.$get$Device_isOpera() && C.JSString_methods.contains$2(P.Device_userAgent(), "WebKit", 0);
    });
    _lazyFinal($, "Device_cssPrefix", "$get$Device_cssPrefix", function() {
      return "-" + $.$get$Device_propertyPrefix() + "-";
    });
    _lazyFinal($, "Device_propertyPrefix", "$get$Device_propertyPrefix", function() {
      if ($.$get$Device_isFirefox())
        var t1 = "moz";
      else if ($.$get$Device_isIE())
        t1 = "ms";
      else
        t1 = $.$get$Device_isOpera() ? "o" : "webkit";
      return t1;
    });
    _lazyFinal($, "_context", "$get$_context", function() {
      return P._castToJsObject(P._wrapToDart(self));
    });
    _lazyFinal($, "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartObject");
    });
    _lazyFinal($, "_dartProxyCtor", "$get$_dartProxyCtor", function() {
      return function DartObject(o) {
        this.o = o;
      };
    });
    _lazyFinal($, "Endian_host", "$get$Endian_host", function() {
      return H.NativeByteData_NativeByteData$view(H.NativeUint16List_NativeUint16List$fromList(H.setRuntimeTypeInfo([1], type$.JSArray_int)).buffer, 0, null).getInt8(0) === 1 ? C.C_Endian : C.C_Endian0;
    });
    _lazyFinal($, "channelBuffers", "$get$channelBuffers", function() {
      return new P.ChannelBuffers(P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("_Channel")));
    });
    _lazyFinal($, "platformViewRegistry", "$get$platformViewRegistry", function() {
      return new P.PlatformViewRegistry(P.LinkedHashMap_LinkedHashMap$_empty(type$.String, H.findType("Element0(int)")), P.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.Element));
    });
    _lazyFinal($, "_kRightMiddleTween", "$get$_kRightMiddleTween", function() {
      return R.Tween$(C.Offset_1_0, C.Offset_0_0, type$.Offset);
    });
    _lazyFinal($, "_kMiddleLeftTween", "$get$_kMiddleLeftTween", function() {
      return R.Tween$(C.Offset_0_0, C.Offset_Oho, type$.Offset);
    });
    _lazy($, "_CupertinoEdgeShadowDecoration_kTween", "$get$_CupertinoEdgeShadowDecoration_kTween", function() {
      return new G.DecorationTween(C._CupertinoEdgeShadowDecoration_null, C._CupertinoEdgeShadowDecoration_yjC);
    });
    _lazyFinal($, "_testPlatform", "$get$_testPlatform", function() {
      return new U._testPlatform_closure().call$0();
    });
    _lazyFinal($, "_browserPlatform", "$get$_browserPlatform", function() {
      return new U._browserPlatform_closure().call$0();
    });
    _lazyFinal($, "sparseTextConfiguration", "$get$sparseTextConfiguration", function() {
      return Y.TextTreeConfiguration$(true, "", ":", "", "", "", "", "", true, false, "\n", true, "\u2502", "", "\u2514\u2500", "\u251c\u2500", " ", " ", "\u2502 ", "  ", "", true, "");
    });
    _lazyFinal($, "dashedTextConfiguration", "$get$dashedTextConfiguration", function() {
      return Y.TextTreeConfiguration$(true, "", ":", "", "", "", "", "", true, false, "\n", true, "\u254e", "", "\u2514\u254c", "\u254e\u254c", " ", " ", "\u2502 ", "  ", "", true, "");
    });
    _lazyFinal($, "denseTextConfiguration", "$get$denseTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", false, false, "\n", false, "\u2502", "", "\u2514", "\u251c", "", "", "\u2502", " ", ", ", true, "");
    });
    _lazyFinal($, "transitionTextConfiguration", "$get$transitionTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, ":", " \u2550\u2550\u2550", "", "", "", "  ", " \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550", false, true, "\n", true, "\u2502", "", "\u2558\u2550\u2566\u2550\u2550 ", "\u255e\u2550\u2566\u2550\u2550 ", " \u2551 ", "", "", "", "", true, "");
    });
    _lazyFinal($, "errorTextConfiguration", "$get$errorTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, "", ":", "", "\u2550\u2550\u2561 ", "", "", " \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550", false, false, "\n", true, "\u2502", "\u2550\u2550\u2550\u2550\u2550", "\u2558\u2550\u2566", "\u255e\u2550\u2566", " \u2551 ", "", "", "", "", true, " \u255e\u2550\u2550");
    });
    _lazyFinal($, "whitespaceTextConfiguration", "$get$whitespaceTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, " ", "", "", "", " ", "  ", "", "", "", true, "");
    });
    _lazyFinal($, "flatTextConfiguration", "$get$flatTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, "", "", "", "", "", "", "", "", "", true, "");
    });
    _lazyFinal($, "singleLineTextConfiguration", "$get$singleLineTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", true, false, "", false, "", "", "", "", "", "", "  ", "  ", ", ", false, "");
    });
    _lazyFinal($, "errorPropertyTextConfiguration", "$get$errorPropertyTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", true, true, "\n", false, "", "", "", "", "", "", "  ", "  ", ", ", false, "");
    });
    _lazyFinal($, "shallowTextConfiguration", "$get$shallowTextConfiguration", function() {
      return Y.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, " ", "", "", "", " ", "  ", "", "", "", false, "");
    });
    _lazyFinal($, "_debugPrintBuffer", "$get$_debugPrintBuffer", function() {
      return P.ListQueue$(null, type$.String);
    });
    _lazyFinal($, "_debugPrintStopwatch", "$get$_debugPrintStopwatch", function() {
      return P.Stopwatch$();
    });
    _lazyFinal($, "StackFrame__webNonDebugFramePattern", "$get$StackFrame__webNonDebugFramePattern", function() {
      return P.RegExp_RegExp("^\\s*at ([^\\s]+).*$", true);
    });
    _lazyFinal($, "kMaterialEdges", "$get$kMaterialEdges", function() {
      return P.LinkedHashMap_LinkedHashMap$_literal([C.MaterialType_0, null, C.MaterialType_1, K.BorderRadius$circular(2), C.MaterialType_2, null, C.MaterialType_3, K.BorderRadius$circular(2), C.MaterialType_4, null], H.findType("MaterialType"), H.findType("BorderRadius?"));
    });
    _lazyFinal($, "_FadeUpwardsPageTransition__bottomUpTween", "$get$_FadeUpwardsPageTransition__bottomUpTween", function() {
      return R.Tween$(C.Offset_chs, C.Offset_0_0, type$.Offset);
    });
    _lazyFinal($, "_FadeUpwardsPageTransition__fastOutSlowInTween", "$get$_FadeUpwardsPageTransition__fastOutSlowInTween", function() {
      return R.CurveTween$(C.Cubic_ifx);
    });
    _lazyFinal($, "_FadeUpwardsPageTransition__easeInTween", "$get$_FadeUpwardsPageTransition__easeInTween", function() {
      return R.CurveTween$(C.Cubic_JUR0);
    });
    _lazyFinal($, "Theme__kFallbackTheme", "$get$Theme__kFallbackTheme", function() {
      return X.ThemeData_ThemeData$fallback();
    });
    _lazyFinal($, "ThemeData__localizedThemeDataCache", "$get$ThemeData__localizedThemeDataCache", function() {
      return new X._FifoCache(P.LinkedHashMap_LinkedHashMap$_empty(H.findType("_IdentityThemeDataCacheKey"), type$.ThemeData), 5, H.findType("_FifoCache<_IdentityThemeDataCacheKey,ThemeData>"));
    });
    _lazy($, "RenderErrorBox_backgroundColor", "$get$RenderErrorBox_backgroundColor", function() {
      return C.Color_4039164096;
    });
    _lazy($, "RenderErrorBox_textStyle", "$get$RenderErrorBox_textStyle", function() {
      var _null = null;
      return P.TextStyle_TextStyle(_null, C.Color_4281348144, _null, _null, _null, _null, "sans-serif", _null, _null, 18, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    });
    _lazy($, "RenderErrorBox_paragraphStyle", "$get$RenderErrorBox_paragraphStyle", function() {
      var _null = null;
      return P.ParagraphStyle_ParagraphStyle(_null, _null, _null, _null, _null, _null, _null, _null, _null, C.TextAlign_0, C.TextDirection_1, _null);
    });
    _lazyFinal($, "_SemanticsGeometry__temporaryTransformHolder", "$get$_SemanticsGeometry__temporaryTransformHolder", function() {
      return E.Matrix4$zero();
    });
    _lazyFinal($, "SemanticsNode__kEmptyConfig", "$get$SemanticsNode__kEmptyConfig", function() {
      return A.SemanticsConfiguration$();
    });
    _lazyFinal($, "SemanticsNode__kEmptyChildList", "$get$SemanticsNode__kEmptyChildList", function() {
      return H.NativeInt32List_NativeInt32List(0);
    });
    _lazyFinal($, "SemanticsNode__kEmptyCustomSemanticsActionsList", "$get$SemanticsNode__kEmptyCustomSemanticsActionsList", function() {
      return H.NativeInt32List_NativeInt32List(0);
    });
    _lazyFinal($, "SemanticsNode__kIdentityTransform", "$get$SemanticsNode__kIdentityTransform", function() {
      return E.Matrix4_Matrix4$identity()._m4storage;
    });
    _lazyFinal($, "rootBundle", "$get$rootBundle", function() {
      var t1 = type$.String;
      return new Q.PlatformAssetBundle(P.LinkedHashMap_LinkedHashMap$_empty(t1, H.findType("Future<String>")), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Future_dynamic));
    });
    _lazy($, "_methodChannelHandlers", "$get$_methodChannelHandlers", function() {
      if (typeof WeakMap == "function")
        var t1 = new WeakMap();
      else {
        t1 = $.Expando__keyCount;
        $.Expando__keyCount = t1 + 1;
        t1 = "expando$key$" + t1;
      }
      return new P.Expando(t1, H.findType("Expando<Object>"));
    });
    _lazyFinal($, "RawKeyboard_instance", "$get$RawKeyboard_instance", function() {
      var t1 = type$.PhysicalKeyboardKey;
      t1 = new B.RawKeyboard(H.setRuntimeTypeInfo([], H.findType("JSArray<~(RawKeyEvent)>")), P.LinkedHashMap_LinkedHashMap$_empty(t1, type$.LogicalKeyboardKey), P.LinkedHashSet_LinkedHashSet$_empty(t1));
      C.BasicMessageChannel_Cfi.setMessageHandler$1(t1.get$_handleKeyEvent());
      return t1;
    });
    _lazyFinal($, "RawKeyboard__allModifiers", "$get$RawKeyboard__allModifiers", function() {
      var t2, t3,
        t1 = P.LinkedHashMap_LinkedHashMap$_empty(type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey);
      t1.$indexSet(0, C.PhysicalKeyboardKey_18, C.LogicalKeyboardKey_4294967314);
      for (t2 = $.RawKeyboard__allModifiersExceptFn.get$entries($.RawKeyboard__allModifiersExceptFn), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t1.$indexSet(0, t3.key, t3.value);
      }
      return t1;
    });
    _lazyFinal($, "WidgetsApp__defaultWebShortcuts", "$get$WidgetsApp__defaultWebShortcuts", function() {
      var _null = null;
      return P.LinkedHashMap_LinkedHashMap$_literal([X.LogicalKeySet$(C.LogicalKeyboardKey_32, _null, _null), C.C_PrioritizedIntents, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426088, _null, _null), C.C_ButtonActivateIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426089, _null, _null), C.C_DismissIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426091, _null, _null), C.C_NextFocusIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426091, _null), C.C_PreviousFocusIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426130, _null, _null), C.ScrollIntent_Uzc, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426129, _null, _null), C.ScrollIntent_R43, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426128, _null, _null), C.ScrollIntent_vpn, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426127, _null, _null), C.ScrollIntent_o8I, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426123, _null, _null), C.ScrollIntent_Uzc0, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426126, _null, _null), C.ScrollIntent_R430], H.findType("LogicalKeySet"), type$.Intent);
    });
    _lazy($, "WidgetsApp_defaultActions", "$get$WidgetsApp_defaultActions", function() {
      var t1 = H.findType("~(Action<Intent>)");
      return P.LinkedHashMap_LinkedHashMap$_literal([C.Type_DoNothingIntent_IQR, U.DoNothingAction$(true), C.Type_s8I, U.DoNothingAction$(false), C.Type_RequestFocusIntent_OPB, new U.RequestFocusAction(R.ObserverList$(t1)), C.Type_NextFocusIntent_6xB, new U.NextFocusAction(R.ObserverList$(t1)), C.Type_PreviousFocusIntent_wsa, new U.PreviousFocusAction(R.ObserverList$(t1)), C.Type_DirectionalFocusIntent_evN, new U.DirectionalFocusAction(R.ObserverList$(t1)), C.Type_ScrollIntent_mpH, new F.ScrollAction(R.ObserverList$(t1)), C.Type_PrioritizedIntents_fLu, new U.PrioritizedAction(R.ObserverList$(t1))], type$.Type, type$.Action_Intent);
    });
    _lazyFinal($, "DefaultTextEditingActions__shortcutsActions", "$get$DefaultTextEditingActions__shortcutsActions", function() {
      var t1 = H.findType("~(Action<Intent>)");
      return P.LinkedHashMap_LinkedHashMap$_literal([C.Type_muk, new E._DoNothingAndStopPropagationTextAction(R.ObserverList$(t1)), C.Type_8LH, new E._ExtendSelectionDownTextAction(R.ObserverList$(t1)), C.Type_gO9, new E._ExtendSelectionLeftByLineTextAction(R.ObserverList$(t1)), C.Type_gO90, new E._ExtendSelectionLeftByWordTextAction(R.ObserverList$(t1)), C.Type_NT8, new E._ExtendSelectionLeftByWordAndStopAtReversalTextAction(R.ObserverList$(t1)), C.Type_KeE, new E._ExtendSelectionLeftTextAction(R.ObserverList$(t1)), C.Type_unm, new E._ExtendSelectionRightByWordAndStopAtReversalTextAction(R.ObserverList$(t1)), C.Type_9Ii, new E._ExtendSelectionRightByWordTextAction(R.ObserverList$(t1)), C.Type_9Ii0, new E._ExtendSelectionRightByLineTextAction(R.ObserverList$(t1)), C.Type_uFQ, new E._ExtendSelectionRightTextAction(R.ObserverList$(t1)), C.Type_ExtendSelectionUpTextIntent_Bju, new E._ExtendSelectionUpTextAction(R.ObserverList$(t1)), C.Type_0, new E._ExpandSelectionLeftByLineTextAction(R.ObserverList$(t1)), C.Type_8aB, new E._ExpandSelectionRightByLineTextAction(R.ObserverList$(t1)), C.Type_weg, new E._ExpandSelectionToEndTextAction(R.ObserverList$(t1)), C.Type_oyU, new E._ExpandSelectionToStartTextAction(R.ObserverList$(t1)), C.Type_MoveSelectionDownTextIntent_yqF, new E._MoveSelectionDownTextAction(R.ObserverList$(t1)), C.Type_2Iq, new E._MoveSelectionLeftByLineTextAction(R.ObserverList$(t1)), C.Type_2Iq0, new E._MoveSelectionLeftByWordTextAction(R.ObserverList$(t1)), C.Type_MoveSelectionLeftTextIntent_uf2, new E._MoveSelectionLeftTextAction(R.ObserverList$(t1)), C.Type_Bzp, new E._MoveSelectionRightByLineTextAction(R.ObserverList$(t1)), C.Type_Bzp0, new E._MoveSelectionRightByWordTextAction(R.ObserverList$(t1)), C.Type_MoveSelectionRightTextIntent_kUZ, new E._MoveSelectionRightTextAction(R.ObserverList$(t1)), C.Type_MoveSelectionToEndTextIntent_c4I, new E._MoveSelectionToEndTextAction(R.ObserverList$(t1)), C.Type_IYE, new E._MoveSelectionToStartTextAction(R.ObserverList$(t1)), C.Type_MoveSelectionUpTextIntent_kSJ, new E._MoveSelectionUpTextAction(R.ObserverList$(t1))], type$.Type, type$.Action_Intent);
    });
    _lazyFinal($, "DefaultTextEditingShortcuts__webShortcuts", "$get$DefaultTextEditingShortcuts__webShortcuts", function() {
      var _null = null;
      return P.LinkedHashMap_LinkedHashMap$_literal([X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_4295426129, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_4295426128, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_4295426127, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_4295426130, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426129), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426128), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426127), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681826, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426130), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426129, _null, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426128, _null, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426127, _null, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426130, _null, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681824, C.LogicalKeyboardKey_4295426128, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681824, C.LogicalKeyboardKey_4295426127, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681824, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426128), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681824, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426127), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426125, _null, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_4295426122, _null, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_4295426129, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_4295426128, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_4295426127, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_4295426130, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426129), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426128), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426127), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681827, C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426130), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426129, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426128, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426127, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426130, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426125, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_2203318681825, C.LogicalKeyboardKey_4295426122, _null), C.C_DoNothingAndStopPropagationTextIntent, X.LogicalKeySet$(C.LogicalKeyboardKey_32, _null, _null), C.C_DoNothingAndStopPropagationTextIntent], H.findType("LogicalKeySet"), type$.Intent);
    });
    _lazy($, "_NullElement_instance", "$get$_NullElement_instance", function() {
      var t1 = ($.Element__nextHashCode + 1) % 16777215;
      $.Element__nextHashCode = t1;
      return new N._NullElement(t1, new N._NullWidget(null), C._ElementLifecycle_0, P.HashSet_HashSet(type$.Element_2));
    });
    _lazyFinal($, "_HeroFlight__reverseTween", "$get$_HeroFlight__reverseTween", function() {
      return R.Tween$(1, 0, type$.double);
    });
    _lazy($, "_RouteEntry_notAnnounced", "$get$_RouteEntry_notAnnounced", function() {
      var t1 = B.ValueNotifier$(null),
        t2 = P.Completer_Completer(type$.void);
      return new K._NotAnnounced(C.RouteSettings_null_null, t1, t2);
    });
    _lazy($, "WidgetInspectorService__instance", "$get$WidgetInspectorService__instance", function() {
      var _null = null,
        t1 = type$.String;
      return new N._WidgetInspectorService(P.List_List$filled(20, _null, false, type$.nullable_String), 0, new N.InspectorSelection(H.setRuntimeTypeInfo([], type$.JSArray_RenderObject)), _null, P.LinkedHashMap_LinkedHashMap$_empty(t1, H.findType("Set<_InspectorReferenceData>")), P.LinkedHashMap_LinkedHashMap$_empty(t1, H.findType("_InspectorReferenceData")), P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(type$.Object, t1), 0, _null, false, false, _null, _null, 0, _null, _null, N._ElementLocationStatsTracker$(), N._ElementLocationStatsTracker$());
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({AnimationEffectReadOnly: J.Interceptor, AnimationEffectTiming: J.Interceptor, AnimationEffectTimingReadOnly: J.Interceptor, AnimationTimeline: J.Interceptor, AnimationWorkletGlobalScope: J.Interceptor, AuthenticatorAssertionResponse: J.Interceptor, AuthenticatorAttestationResponse: J.Interceptor, AuthenticatorResponse: J.Interceptor, BackgroundFetchFetch: J.Interceptor, BackgroundFetchManager: J.Interceptor, BackgroundFetchSettledFetch: J.Interceptor, BarProp: J.Interceptor, BarcodeDetector: J.Interceptor, BluetoothRemoteGATTDescriptor: J.Interceptor, BudgetState: J.Interceptor, CacheStorage: J.Interceptor, CanvasGradient: J.Interceptor, CanvasPattern: J.Interceptor, Client: J.Interceptor, Clients: J.Interceptor, CookieStore: J.Interceptor, Coordinates: J.Interceptor, CredentialsContainer: J.Interceptor, Crypto: J.Interceptor, CryptoKey: J.Interceptor, CSS: J.Interceptor, CSSVariableReferenceValue: J.Interceptor, CustomElementRegistry: J.Interceptor, DataTransfer: J.Interceptor, DataTransferItem: J.Interceptor, DeprecatedStorageInfo: J.Interceptor, DeprecatedStorageQuota: J.Interceptor, DeprecationReport: J.Interceptor, DetectedBarcode: J.Interceptor, DetectedFace: J.Interceptor, DetectedText: J.Interceptor, DeviceAcceleration: J.Interceptor, DeviceRotationRate: J.Interceptor, DirectoryReader: J.Interceptor, DocumentOrShadowRoot: J.Interceptor, DocumentTimeline: J.Interceptor, DOMImplementation: J.Interceptor, Iterator: J.Interceptor, DOMMatrix: J.Interceptor, DOMMatrixReadOnly: J.Interceptor, DOMParser: J.Interceptor, DOMPoint: J.Interceptor, DOMPointReadOnly: J.Interceptor, DOMQuad: J.Interceptor, DOMStringMap: J.Interceptor, External: J.Interceptor, FaceDetector: J.Interceptor, FontFaceSource: J.Interceptor, FormData: J.Interceptor, GamepadButton: J.Interceptor, GamepadPose: J.Interceptor, Geolocation: J.Interceptor, Position: J.Interceptor, Headers: J.Interceptor, HTMLHyperlinkElementUtils: J.Interceptor, IdleDeadline: J.Interceptor, ImageBitmap: J.Interceptor, ImageBitmapRenderingContext: J.Interceptor, ImageCapture: J.Interceptor, InputDeviceCapabilities: J.Interceptor, IntersectionObserver: J.Interceptor, IntersectionObserverEntry: J.Interceptor, InterventionReport: J.Interceptor, KeyframeEffect: J.Interceptor, KeyframeEffectReadOnly: J.Interceptor, MediaCapabilities: J.Interceptor, MediaCapabilitiesInfo: J.Interceptor, MediaDeviceInfo: J.Interceptor, MediaError: J.Interceptor, MediaKeyStatusMap: J.Interceptor, MediaKeySystemAccess: J.Interceptor, MediaKeys: J.Interceptor, MediaKeysPolicy: J.Interceptor, MediaMetadata: J.Interceptor, MediaSession: J.Interceptor, MediaSettingsRange: J.Interceptor, MemoryInfo: J.Interceptor, MessageChannel: J.Interceptor, Metadata: J.Interceptor, MutationObserver: J.Interceptor, WebKitMutationObserver: J.Interceptor, MutationRecord: J.Interceptor, NavigationPreloadManager: J.Interceptor, Navigator: J.Interceptor, NavigatorAutomationInformation: J.Interceptor, NavigatorConcurrentHardware: J.Interceptor, NavigatorCookies: J.Interceptor, NodeFilter: J.Interceptor, NodeIterator: J.Interceptor, NonDocumentTypeChildNode: J.Interceptor, NonElementParentNode: J.Interceptor, NoncedElement: J.Interceptor, OffscreenCanvasRenderingContext2D: J.Interceptor, PaintRenderingContext2D: J.Interceptor, PaintSize: J.Interceptor, PaintWorkletGlobalScope: J.Interceptor, Path2D: J.Interceptor, PaymentAddress: J.Interceptor, PaymentInstruments: J.Interceptor, PaymentManager: J.Interceptor, PaymentResponse: J.Interceptor, PerformanceNavigation: J.Interceptor, PerformanceObserver: J.Interceptor, PerformanceObserverEntryList: J.Interceptor, PerformanceTiming: J.Interceptor, Permissions: J.Interceptor, PhotoCapabilities: J.Interceptor, PositionError: J.Interceptor, Presentation: J.Interceptor, PresentationReceiver: J.Interceptor, PushManager: J.Interceptor, PushSubscription: J.Interceptor, PushSubscriptionOptions: J.Interceptor, Range: J.Interceptor, RelatedApplication: J.Interceptor, ReportBody: J.Interceptor, ReportingObserver: J.Interceptor, ResizeObserver: J.Interceptor, ResizeObserverEntry: J.Interceptor, RTCCertificate: J.Interceptor, RTCIceCandidate: J.Interceptor, mozRTCIceCandidate: J.Interceptor, RTCLegacyStatsReport: J.Interceptor, RTCRtpContributingSource: J.Interceptor, RTCRtpReceiver: J.Interceptor, RTCRtpSender: J.Interceptor, RTCSessionDescription: J.Interceptor, mozRTCSessionDescription: J.Interceptor, RTCStatsResponse: J.Interceptor, Screen: J.Interceptor, ScrollState: J.Interceptor, ScrollTimeline: J.Interceptor, Selection: J.Interceptor, SharedArrayBuffer: J.Interceptor, SpeechRecognitionAlternative: J.Interceptor, StaticRange: J.Interceptor, StorageManager: J.Interceptor, StyleMedia: J.Interceptor, StylePropertyMap: J.Interceptor, StylePropertyMapReadonly: J.Interceptor, SyncManager: J.Interceptor, TextDetector: J.Interceptor, TextMetrics: J.Interceptor, TrackDefault: J.Interceptor, TreeWalker: J.Interceptor, TrustedHTML: J.Interceptor, TrustedScriptURL: J.Interceptor, TrustedURL: J.Interceptor, UnderlyingSourceBase: J.Interceptor, URLSearchParams: J.Interceptor, VRCoordinateSystem: J.Interceptor, VRDisplayCapabilities: J.Interceptor, VREyeParameters: J.Interceptor, VRFrameData: J.Interceptor, VRFrameOfReference: J.Interceptor, VRPose: J.Interceptor, VRStageBounds: J.Interceptor, VRStageBoundsPoint: J.Interceptor, VRStageParameters: J.Interceptor, ValidityState: J.Interceptor, VideoPlaybackQuality: J.Interceptor, VideoTrack: J.Interceptor, WindowClient: J.Interceptor, WorkletAnimation: J.Interceptor, WorkletGlobalScope: J.Interceptor, XPathEvaluator: J.Interceptor, XPathExpression: J.Interceptor, XPathNSResolver: J.Interceptor, XPathResult: J.Interceptor, XMLSerializer: J.Interceptor, XSLTProcessor: J.Interceptor, Bluetooth: J.Interceptor, BluetoothCharacteristicProperties: J.Interceptor, BluetoothRemoteGATTServer: J.Interceptor, BluetoothRemoteGATTService: J.Interceptor, BluetoothUUID: J.Interceptor, BudgetService: J.Interceptor, Cache: J.Interceptor, DOMFileSystemSync: J.Interceptor, DirectoryEntrySync: J.Interceptor, DirectoryReaderSync: J.Interceptor, EntrySync: J.Interceptor, FileEntrySync: J.Interceptor, FileReaderSync: J.Interceptor, FileWriterSync: J.Interceptor, HTMLAllCollection: J.Interceptor, Mojo: J.Interceptor, MojoHandle: J.Interceptor, MojoWatcher: J.Interceptor, NFC: J.Interceptor, PagePopupController: J.Interceptor, Report: J.Interceptor, SubtleCrypto: J.Interceptor, USBAlternateInterface: J.Interceptor, USBConfiguration: J.Interceptor, USBDevice: J.Interceptor, USBEndpoint: J.Interceptor, USBInTransferResult: J.Interceptor, USBInterface: J.Interceptor, USBIsochronousInTransferPacket: J.Interceptor, USBIsochronousInTransferResult: J.Interceptor, USBIsochronousOutTransferPacket: J.Interceptor, USBIsochronousOutTransferResult: J.Interceptor, USBOutTransferResult: J.Interceptor, WorkerLocation: J.Interceptor, WorkerNavigator: J.Interceptor, Worklet: J.Interceptor, IDBCursor: J.Interceptor, IDBCursorWithValue: J.Interceptor, IDBFactory: J.Interceptor, IDBObservation: J.Interceptor, IDBObserver: J.Interceptor, IDBObserverChanges: J.Interceptor, SVGAngle: J.Interceptor, SVGAnimatedAngle: J.Interceptor, SVGAnimatedBoolean: J.Interceptor, SVGAnimatedEnumeration: J.Interceptor, SVGAnimatedInteger: J.Interceptor, SVGAnimatedLength: J.Interceptor, SVGAnimatedLengthList: J.Interceptor, SVGAnimatedNumber: J.Interceptor, SVGAnimatedNumberList: J.Interceptor, SVGAnimatedPreserveAspectRatio: J.Interceptor, SVGAnimatedRect: J.Interceptor, SVGAnimatedString: J.Interceptor, SVGAnimatedTransformList: J.Interceptor, SVGMatrix: J.Interceptor, SVGPoint: J.Interceptor, SVGPreserveAspectRatio: J.Interceptor, SVGUnitTypes: J.Interceptor, AudioListener: J.Interceptor, AudioParam: J.Interceptor, AudioTrack: J.Interceptor, AudioWorkletGlobalScope: J.Interceptor, AudioWorkletProcessor: J.Interceptor, PeriodicWave: J.Interceptor, ANGLEInstancedArrays: J.Interceptor, ANGLE_instanced_arrays: J.Interceptor, WebGLBuffer: J.Interceptor, WebGLCanvas: J.Interceptor, WebGLColorBufferFloat: J.Interceptor, WebGLCompressedTextureASTC: J.Interceptor, WebGLCompressedTextureATC: J.Interceptor, WEBGL_compressed_texture_atc: J.Interceptor, WebGLCompressedTextureETC1: J.Interceptor, WEBGL_compressed_texture_etc1: J.Interceptor, WebGLCompressedTextureETC: J.Interceptor, WebGLCompressedTexturePVRTC: J.Interceptor, WEBGL_compressed_texture_pvrtc: J.Interceptor, WebGLCompressedTextureS3TC: J.Interceptor, WEBGL_compressed_texture_s3tc: J.Interceptor, WebGLCompressedTextureS3TCsRGB: J.Interceptor, WebGLDebugRendererInfo: J.Interceptor, WEBGL_debug_renderer_info: J.Interceptor, WebGLDebugShaders: J.Interceptor, WEBGL_debug_shaders: J.Interceptor, WebGLDepthTexture: J.Interceptor, WEBGL_depth_texture: J.Interceptor, WebGLDrawBuffers: J.Interceptor, WEBGL_draw_buffers: J.Interceptor, EXTsRGB: J.Interceptor, EXT_sRGB: J.Interceptor, EXTBlendMinMax: J.Interceptor, EXT_blend_minmax: J.Interceptor, EXTColorBufferFloat: J.Interceptor, EXTColorBufferHalfFloat: J.Interceptor, EXTDisjointTimerQuery: J.Interceptor, EXTDisjointTimerQueryWebGL2: J.Interceptor, EXTFragDepth: J.Interceptor, EXT_frag_depth: J.Interceptor, EXTShaderTextureLOD: J.Interceptor, EXT_shader_texture_lod: J.Interceptor, EXTTextureFilterAnisotropic: J.Interceptor, EXT_texture_filter_anisotropic: J.Interceptor, WebGLFramebuffer: J.Interceptor, WebGLGetBufferSubDataAsync: J.Interceptor, WebGLLoseContext: J.Interceptor, WebGLExtensionLoseContext: J.Interceptor, WEBGL_lose_context: J.Interceptor, OESElementIndexUint: J.Interceptor, OES_element_index_uint: J.Interceptor, OESStandardDerivatives: J.Interceptor, OES_standard_derivatives: J.Interceptor, OESTextureFloat: J.Interceptor, OES_texture_float: J.Interceptor, OESTextureFloatLinear: J.Interceptor, OES_texture_float_linear: J.Interceptor, OESTextureHalfFloat: J.Interceptor, OES_texture_half_float: J.Interceptor, OESTextureHalfFloatLinear: J.Interceptor, OES_texture_half_float_linear: J.Interceptor, OESVertexArrayObject: J.Interceptor, OES_vertex_array_object: J.Interceptor, WebGLProgram: J.Interceptor, WebGLQuery: J.Interceptor, WebGLRenderbuffer: J.Interceptor, WebGLRenderingContext: J.Interceptor, WebGL2RenderingContext: J.Interceptor, WebGLSampler: J.Interceptor, WebGLShader: J.Interceptor, WebGLShaderPrecisionFormat: J.Interceptor, WebGLSync: J.Interceptor, WebGLTexture: J.Interceptor, WebGLTimerQueryEXT: J.Interceptor, WebGLTransformFeedback: J.Interceptor, WebGLUniformLocation: J.Interceptor, WebGLVertexArrayObject: J.Interceptor, WebGLVertexArrayObjectOES: J.Interceptor, WebGL: J.Interceptor, WebGL2RenderingContextBase: J.Interceptor, Database: J.Interceptor, SQLError: J.Interceptor, SQLResultSet: J.Interceptor, SQLTransaction: J.Interceptor, ArrayBuffer: H.NativeByteBuffer, ArrayBufferView: H.NativeTypedData, DataView: H.NativeByteData, Float32Array: H.NativeFloat32List, Float64Array: H.NativeFloat64List, Int16Array: H.NativeInt16List, Int32Array: H.NativeInt32List, Int8Array: H.NativeInt8List, Uint16Array: H.NativeUint16List, Uint32Array: H.NativeUint32List, Uint8ClampedArray: H.NativeUint8ClampedList, CanvasPixelArray: H.NativeUint8ClampedList, Uint8Array: H.NativeUint8List, HTMLBRElement: W.HtmlElement, HTMLContentElement: W.HtmlElement, HTMLDListElement: W.HtmlElement, HTMLDataElement: W.HtmlElement, HTMLDataListElement: W.HtmlElement, HTMLDetailsElement: W.HtmlElement, HTMLDialogElement: W.HtmlElement, HTMLHRElement: W.HtmlElement, HTMLHeadElement: W.HtmlElement, HTMLHeadingElement: W.HtmlElement, HTMLHtmlElement: W.HtmlElement, HTMLLIElement: W.HtmlElement, HTMLLegendElement: W.HtmlElement, HTMLLinkElement: W.HtmlElement, HTMLMenuElement: W.HtmlElement, HTMLMeterElement: W.HtmlElement, HTMLModElement: W.HtmlElement, HTMLOListElement: W.HtmlElement, HTMLOptGroupElement: W.HtmlElement, HTMLOptionElement: W.HtmlElement, HTMLPictureElement: W.HtmlElement, HTMLPreElement: W.HtmlElement, HTMLProgressElement: W.HtmlElement, HTMLQuoteElement: W.HtmlElement, HTMLShadowElement: W.HtmlElement, HTMLSourceElement: W.HtmlElement, HTMLTableCaptionElement: W.HtmlElement, HTMLTableCellElement: W.HtmlElement, HTMLTableDataCellElement: W.HtmlElement, HTMLTableHeaderCellElement: W.HtmlElement, HTMLTableColElement: W.HtmlElement, HTMLTimeElement: W.HtmlElement, HTMLTitleElement: W.HtmlElement, HTMLTrackElement: W.HtmlElement, HTMLUListElement: W.HtmlElement, HTMLUnknownElement: W.HtmlElement, HTMLDirectoryElement: W.HtmlElement, HTMLFontElement: W.HtmlElement, HTMLFrameElement: W.HtmlElement, HTMLFrameSetElement: W.HtmlElement, HTMLMarqueeElement: W.HtmlElement, HTMLElement: W.HtmlElement, AccessibleNodeList: W.AccessibleNodeList, HTMLAnchorElement: W.AnchorElement, HTMLAreaElement: W.AreaElement, HTMLBaseElement: W.BaseElement, Blob: W.Blob, Body: W.Body, Request: W.Body, Response: W.Body, HTMLBodyElement: W.BodyElement, BroadcastChannel: W.BroadcastChannel, HTMLButtonElement: W.ButtonElement, HTMLCanvasElement: W.CanvasElement, CanvasRenderingContext2D: W.CanvasRenderingContext2D, CDATASection: W.CharacterData, CharacterData: W.CharacterData, Comment: W.CharacterData, ProcessingInstruction: W.CharacterData, Text: W.CharacterData, PublicKeyCredential: W.Credential, Credential: W.Credential, CredentialUserData: W.CredentialUserData, CSSKeyframesRule: W.CssKeyframesRule, MozCSSKeyframesRule: W.CssKeyframesRule, WebKitCSSKeyframesRule: W.CssKeyframesRule, CSSPerspective: W.CssPerspective, CSSCharsetRule: W.CssRule, CSSConditionRule: W.CssRule, CSSFontFaceRule: W.CssRule, CSSGroupingRule: W.CssRule, CSSImportRule: W.CssRule, CSSKeyframeRule: W.CssRule, MozCSSKeyframeRule: W.CssRule, WebKitCSSKeyframeRule: W.CssRule, CSSMediaRule: W.CssRule, CSSNamespaceRule: W.CssRule, CSSPageRule: W.CssRule, CSSStyleRule: W.CssRule, CSSSupportsRule: W.CssRule, CSSViewportRule: W.CssRule, CSSRule: W.CssRule, CSSStyleDeclaration: W.CssStyleDeclaration, MSStyleCSSProperties: W.CssStyleDeclaration, CSS2Properties: W.CssStyleDeclaration, CSSStyleSheet: W.CssStyleSheet, CSSImageValue: W.CssStyleValue, CSSKeywordValue: W.CssStyleValue, CSSNumericValue: W.CssStyleValue, CSSPositionValue: W.CssStyleValue, CSSResourceValue: W.CssStyleValue, CSSUnitValue: W.CssStyleValue, CSSURLImageValue: W.CssStyleValue, CSSStyleValue: W.CssStyleValue, CSSMatrixComponent: W.CssTransformComponent, CSSRotation: W.CssTransformComponent, CSSScale: W.CssTransformComponent, CSSSkew: W.CssTransformComponent, CSSTranslation: W.CssTransformComponent, CSSTransformComponent: W.CssTransformComponent, CSSTransformValue: W.CssTransformValue, CSSUnparsedValue: W.CssUnparsedValue, DataTransferItemList: W.DataTransferItemList, HTMLDivElement: W.DivElement, Document: W.Document, HTMLDocument: W.Document, XMLDocument: W.Document, DOMError: W.DomError, DOMException: W.DomException, ClientRectList: W.DomRectList, DOMRectList: W.DomRectList, DOMRectReadOnly: W.DomRectReadOnly, DOMStringList: W.DomStringList, DOMTokenList: W.DomTokenList, Element: W.Element0, HTMLEmbedElement: W.EmbedElement, DirectoryEntry: W.Entry, Entry: W.Entry, FileEntry: W.Entry, AbortPaymentEvent: W.Event, AnimationEvent: W.Event, AnimationPlaybackEvent: W.Event, ApplicationCacheErrorEvent: W.Event, BackgroundFetchClickEvent: W.Event, BackgroundFetchEvent: W.Event, BackgroundFetchFailEvent: W.Event, BackgroundFetchedEvent: W.Event, BeforeInstallPromptEvent: W.Event, BeforeUnloadEvent: W.Event, BlobEvent: W.Event, CanMakePaymentEvent: W.Event, ClipboardEvent: W.Event, CloseEvent: W.Event, CustomEvent: W.Event, DeviceMotionEvent: W.Event, DeviceOrientationEvent: W.Event, ErrorEvent: W.Event, ExtendableEvent: W.Event, ExtendableMessageEvent: W.Event, FetchEvent: W.Event, FontFaceSetLoadEvent: W.Event, ForeignFetchEvent: W.Event, GamepadEvent: W.Event, HashChangeEvent: W.Event, InstallEvent: W.Event, MediaEncryptedEvent: W.Event, MediaKeyMessageEvent: W.Event, MediaStreamEvent: W.Event, MediaStreamTrackEvent: W.Event, MessageEvent: W.Event, MIDIConnectionEvent: W.Event, MIDIMessageEvent: W.Event, MutationEvent: W.Event, NotificationEvent: W.Event, PageTransitionEvent: W.Event, PaymentRequestEvent: W.Event, PaymentRequestUpdateEvent: W.Event, PopStateEvent: W.Event, PresentationConnectionAvailableEvent: W.Event, PresentationConnectionCloseEvent: W.Event, PromiseRejectionEvent: W.Event, PushEvent: W.Event, RTCDataChannelEvent: W.Event, RTCDTMFToneChangeEvent: W.Event, RTCPeerConnectionIceEvent: W.Event, RTCTrackEvent: W.Event, SecurityPolicyViolationEvent: W.Event, SensorErrorEvent: W.Event, SpeechRecognitionError: W.Event, SpeechRecognitionEvent: W.Event, StorageEvent: W.Event, SyncEvent: W.Event, TrackEvent: W.Event, TransitionEvent: W.Event, WebKitTransitionEvent: W.Event, VRDeviceEvent: W.Event, VRDisplayEvent: W.Event, VRSessionEvent: W.Event, MojoInterfaceRequestEvent: W.Event, USBConnectionEvent: W.Event, AudioProcessingEvent: W.Event, OfflineAudioCompletionEvent: W.Event, WebGLContextEvent: W.Event, Event: W.Event, InputEvent: W.Event, SubmitEvent: W.Event, AbsoluteOrientationSensor: W.EventTarget, Accelerometer: W.EventTarget, AccessibleNode: W.EventTarget, AmbientLightSensor: W.EventTarget, Animation: W.EventTarget, ApplicationCache: W.EventTarget, DOMApplicationCache: W.EventTarget, OfflineResourceList: W.EventTarget, BackgroundFetchRegistration: W.EventTarget, BatteryManager: W.EventTarget, CanvasCaptureMediaStreamTrack: W.EventTarget, EventSource: W.EventTarget, FileReader: W.EventTarget, FontFaceSet: W.EventTarget, Gyroscope: W.EventTarget, LinearAccelerationSensor: W.EventTarget, Magnetometer: W.EventTarget, MediaDevices: W.EventTarget, MediaRecorder: W.EventTarget, MediaSource: W.EventTarget, MediaStream: W.EventTarget, MediaStreamTrack: W.EventTarget, MIDIAccess: W.EventTarget, NetworkInformation: W.EventTarget, Notification: W.EventTarget, OrientationSensor: W.EventTarget, PaymentRequest: W.EventTarget, Performance: W.EventTarget, PermissionStatus: W.EventTarget, PresentationAvailability: W.EventTarget, PresentationConnection: W.EventTarget, PresentationConnectionList: W.EventTarget, PresentationRequest: W.EventTarget, RelativeOrientationSensor: W.EventTarget, RemotePlayback: W.EventTarget, RTCDataChannel: W.EventTarget, DataChannel: W.EventTarget, RTCDTMFSender: W.EventTarget, RTCPeerConnection: W.EventTarget, webkitRTCPeerConnection: W.EventTarget, mozRTCPeerConnection: W.EventTarget, Sensor: W.EventTarget, ServiceWorker: W.EventTarget, ServiceWorkerContainer: W.EventTarget, ServiceWorkerRegistration: W.EventTarget, SharedWorker: W.EventTarget, SpeechRecognition: W.EventTarget, SpeechSynthesis: W.EventTarget, VR: W.EventTarget, VRDevice: W.EventTarget, VRDisplay: W.EventTarget, VRSession: W.EventTarget, VisualViewport: W.EventTarget, WebSocket: W.EventTarget, Worker: W.EventTarget, WorkerPerformance: W.EventTarget, BluetoothDevice: W.EventTarget, BluetoothRemoteGATTCharacteristic: W.EventTarget, Clipboard: W.EventTarget, MojoInterfaceInterceptor: W.EventTarget, USB: W.EventTarget, IDBOpenDBRequest: W.EventTarget, IDBVersionChangeRequest: W.EventTarget, IDBRequest: W.EventTarget, IDBTransaction: W.EventTarget, AnalyserNode: W.EventTarget, RealtimeAnalyserNode: W.EventTarget, AudioBufferSourceNode: W.EventTarget, AudioDestinationNode: W.EventTarget, AudioNode: W.EventTarget, AudioScheduledSourceNode: W.EventTarget, AudioWorkletNode: W.EventTarget, BiquadFilterNode: W.EventTarget, ChannelMergerNode: W.EventTarget, AudioChannelMerger: W.EventTarget, ChannelSplitterNode: W.EventTarget, AudioChannelSplitter: W.EventTarget, ConstantSourceNode: W.EventTarget, ConvolverNode: W.EventTarget, DelayNode: W.EventTarget, DynamicsCompressorNode: W.EventTarget, GainNode: W.EventTarget, AudioGainNode: W.EventTarget, IIRFilterNode: W.EventTarget, MediaElementAudioSourceNode: W.EventTarget, MediaStreamAudioDestinationNode: W.EventTarget, MediaStreamAudioSourceNode: W.EventTarget, OscillatorNode: W.EventTarget, Oscillator: W.EventTarget, PannerNode: W.EventTarget, AudioPannerNode: W.EventTarget, webkitAudioPannerNode: W.EventTarget, ScriptProcessorNode: W.EventTarget, JavaScriptAudioNode: W.EventTarget, StereoPannerNode: W.EventTarget, WaveShaperNode: W.EventTarget, EventTarget: W.EventTarget, FederatedCredential: W.FederatedCredential, HTMLFieldSetElement: W.FieldSetElement, File: W.File, FileList: W.FileList, DOMFileSystem: W.FileSystem, FileWriter: W.FileWriter, FontFace: W.FontFace, HTMLFormElement: W.FormElement, Gamepad: W.Gamepad, History: W.History, HTMLCollection: W.HtmlCollection, HTMLFormControlsCollection: W.HtmlCollection, HTMLOptionsCollection: W.HtmlCollection, XMLHttpRequest: W.HttpRequest, XMLHttpRequestUpload: W.HttpRequestEventTarget, XMLHttpRequestEventTarget: W.HttpRequestEventTarget, HTMLIFrameElement: W.IFrameElement, ImageData: W.ImageData, HTMLImageElement: W.ImageElement, HTMLInputElement: W.InputElement, KeyboardEvent: W.KeyboardEvent, HTMLLabelElement: W.LabelElement, Location: W.Location, HTMLMapElement: W.MapElement, HTMLAudioElement: W.MediaElement, HTMLMediaElement: W.MediaElement, MediaKeySession: W.MediaKeySession, MediaList: W.MediaList, MediaQueryList: W.MediaQueryList, MediaQueryListEvent: W.MediaQueryListEvent, MessagePort: W.MessagePort, HTMLMetaElement: W.MetaElement, MIDIInputMap: W.MidiInputMap, MIDIOutputMap: W.MidiOutputMap, MIDIInput: W.MidiPort, MIDIOutput: W.MidiPort, MIDIPort: W.MidiPort, MimeType: W.MimeType, MimeTypeArray: W.MimeTypeArray, MouseEvent: W.MouseEvent, DragEvent: W.MouseEvent, NavigatorUserMediaError: W.NavigatorUserMediaError, DocumentFragment: W.Node, ShadowRoot: W.Node, DocumentType: W.Node, Node: W.Node, NodeList: W.NodeList, RadioNodeList: W.NodeList, HTMLObjectElement: W.ObjectElement, OffscreenCanvas: W.OffscreenCanvas, HTMLOutputElement: W.OutputElement, OverconstrainedError: W.OverconstrainedError, HTMLParagraphElement: W.ParagraphElement, HTMLParamElement: W.ParamElement, PasswordCredential: W.PasswordCredential, PerformanceEntry: W.PerformanceEntry, PerformanceLongTaskTiming: W.PerformanceEntry, PerformanceMark: W.PerformanceEntry, PerformanceMeasure: W.PerformanceEntry, PerformanceNavigationTiming: W.PerformanceEntry, PerformancePaintTiming: W.PerformanceEntry, PerformanceResourceTiming: W.PerformanceEntry, TaskAttributionTiming: W.PerformanceEntry, PerformanceServerTiming: W.PerformanceServerTiming, Plugin: W.Plugin, PluginArray: W.PluginArray, PointerEvent: W.PointerEvent, ProgressEvent: W.ProgressEvent, ResourceProgressEvent: W.ProgressEvent, PushMessageData: W.PushMessageData, RTCStatsReport: W.RtcStatsReport, ScreenOrientation: W.ScreenOrientation, HTMLScriptElement: W.ScriptElement, HTMLSelectElement: W.SelectElement, SharedWorkerGlobalScope: W.SharedWorkerGlobalScope, HTMLSlotElement: W.SlotElement, SourceBuffer: W.SourceBuffer, SourceBufferList: W.SourceBufferList, HTMLSpanElement: W.SpanElement, SpeechGrammar: W.SpeechGrammar, SpeechGrammarList: W.SpeechGrammarList, SpeechRecognitionResult: W.SpeechRecognitionResult, SpeechSynthesisEvent: W.SpeechSynthesisEvent, SpeechSynthesisUtterance: W.SpeechSynthesisUtterance, SpeechSynthesisVoice: W.SpeechSynthesisVoice, Storage: W.Storage, HTMLStyleElement: W.StyleElement, StyleSheet: W.StyleSheet, HTMLTableElement: W.TableElement, HTMLTableRowElement: W.TableRowElement, HTMLTableSectionElement: W.TableSectionElement, HTMLTemplateElement: W.TemplateElement, HTMLTextAreaElement: W.TextAreaElement, TextTrack: W.TextTrack, TextTrackCue: W.TextTrackCue, TextTrackCueList: W.TextTrackCueList, TextTrackList: W.TextTrackList, TimeRanges: W.TimeRanges, Touch: W.Touch, TouchEvent: W.TouchEvent, TouchList: W.TouchList, TrackDefaultList: W.TrackDefaultList, CompositionEvent: W.UIEvent, FocusEvent: W.UIEvent, TextEvent: W.UIEvent, UIEvent: W.UIEvent, URL: W.Url, HTMLVideoElement: W.VideoElement, VideoTrackList: W.VideoTrackList, VTTCue: W.VttCue, VTTRegion: W.VttRegion, WheelEvent: W.WheelEvent, Window: W.Window, DOMWindow: W.Window, DedicatedWorkerGlobalScope: W.WorkerGlobalScope, ServiceWorkerGlobalScope: W.WorkerGlobalScope, WorkerGlobalScope: W.WorkerGlobalScope, Attr: W._Attr, CSSRuleList: W._CssRuleList, ClientRect: W._DomRect, DOMRect: W._DomRect, GamepadList: W._GamepadList, NamedNodeMap: W._NamedNodeMap, MozNamedAttrMap: W._NamedNodeMap, SpeechRecognitionResultList: W._SpeechRecognitionResultList, StyleSheetList: W._StyleSheetList, IDBDatabase: P.Database, IDBIndex: P.Index, IDBKeyRange: P.KeyRange, IDBObjectStore: P.ObjectStore, IDBVersionChangeEvent: P.VersionChangeEvent, SVGLength: P.Length, SVGLengthList: P.LengthList, SVGNumber: P.Number, SVGNumberList: P.NumberList, SVGPointList: P.PointList, SVGRect: P.Rect0, SVGScriptElement: P.ScriptElement0, SVGStringList: P.StringList, SVGAElement: P.SvgElement, SVGAnimateElement: P.SvgElement, SVGAnimateMotionElement: P.SvgElement, SVGAnimateTransformElement: P.SvgElement, SVGAnimationElement: P.SvgElement, SVGCircleElement: P.SvgElement, SVGClipPathElement: P.SvgElement, SVGDefsElement: P.SvgElement, SVGDescElement: P.SvgElement, SVGDiscardElement: P.SvgElement, SVGEllipseElement: P.SvgElement, SVGFEBlendElement: P.SvgElement, SVGFEColorMatrixElement: P.SvgElement, SVGFEComponentTransferElement: P.SvgElement, SVGFECompositeElement: P.SvgElement, SVGFEConvolveMatrixElement: P.SvgElement, SVGFEDiffuseLightingElement: P.SvgElement, SVGFEDisplacementMapElement: P.SvgElement, SVGFEDistantLightElement: P.SvgElement, SVGFEFloodElement: P.SvgElement, SVGFEFuncAElement: P.SvgElement, SVGFEFuncBElement: P.SvgElement, SVGFEFuncGElement: P.SvgElement, SVGFEFuncRElement: P.SvgElement, SVGFEGaussianBlurElement: P.SvgElement, SVGFEImageElement: P.SvgElement, SVGFEMergeElement: P.SvgElement, SVGFEMergeNodeElement: P.SvgElement, SVGFEMorphologyElement: P.SvgElement, SVGFEOffsetElement: P.SvgElement, SVGFEPointLightElement: P.SvgElement, SVGFESpecularLightingElement: P.SvgElement, SVGFESpotLightElement: P.SvgElement, SVGFETileElement: P.SvgElement, SVGFETurbulenceElement: P.SvgElement, SVGFilterElement: P.SvgElement, SVGForeignObjectElement: P.SvgElement, SVGGElement: P.SvgElement, SVGGeometryElement: P.SvgElement, SVGGraphicsElement: P.SvgElement, SVGImageElement: P.SvgElement, SVGLineElement: P.SvgElement, SVGLinearGradientElement: P.SvgElement, SVGMarkerElement: P.SvgElement, SVGMaskElement: P.SvgElement, SVGMetadataElement: P.SvgElement, SVGPathElement: P.SvgElement, SVGPatternElement: P.SvgElement, SVGPolygonElement: P.SvgElement, SVGPolylineElement: P.SvgElement, SVGRadialGradientElement: P.SvgElement, SVGRectElement: P.SvgElement, SVGSetElement: P.SvgElement, SVGStopElement: P.SvgElement, SVGStyleElement: P.SvgElement, SVGSVGElement: P.SvgElement, SVGSwitchElement: P.SvgElement, SVGSymbolElement: P.SvgElement, SVGTSpanElement: P.SvgElement, SVGTextContentElement: P.SvgElement, SVGTextElement: P.SvgElement, SVGTextPathElement: P.SvgElement, SVGTextPositioningElement: P.SvgElement, SVGTitleElement: P.SvgElement, SVGUseElement: P.SvgElement, SVGViewElement: P.SvgElement, SVGGradientElement: P.SvgElement, SVGComponentTransferFunctionElement: P.SvgElement, SVGFEDropShadowElement: P.SvgElement, SVGMPathElement: P.SvgElement, SVGElement: P.SvgElement, SVGTransform: P.Transform, SVGTransformList: P.TransformList, AudioBuffer: P.AudioBuffer, AudioParamMap: P.AudioParamMap, AudioTrackList: P.AudioTrackList, AudioContext: P.BaseAudioContext, webkitAudioContext: P.BaseAudioContext, BaseAudioContext: P.BaseAudioContext, OfflineAudioContext: P.OfflineAudioContext, WebGLActiveInfo: P.ActiveInfo, SQLResultSetRowList: P.SqlResultSetRowList});
    hunkHelpers.setOrUpdateLeafTags({AnimationEffectReadOnly: true, AnimationEffectTiming: true, AnimationEffectTimingReadOnly: true, AnimationTimeline: true, AnimationWorkletGlobalScope: true, AuthenticatorAssertionResponse: true, AuthenticatorAttestationResponse: true, AuthenticatorResponse: true, BackgroundFetchFetch: true, BackgroundFetchManager: true, BackgroundFetchSettledFetch: true, BarProp: true, BarcodeDetector: true, BluetoothRemoteGATTDescriptor: true, BudgetState: true, CacheStorage: true, CanvasGradient: true, CanvasPattern: true, Client: true, Clients: true, CookieStore: true, Coordinates: true, CredentialsContainer: true, Crypto: true, CryptoKey: true, CSS: true, CSSVariableReferenceValue: true, CustomElementRegistry: true, DataTransfer: true, DataTransferItem: true, DeprecatedStorageInfo: true, DeprecatedStorageQuota: true, DeprecationReport: true, DetectedBarcode: true, DetectedFace: true, DetectedText: true, DeviceAcceleration: true, DeviceRotationRate: true, DirectoryReader: true, DocumentOrShadowRoot: true, DocumentTimeline: true, DOMImplementation: true, Iterator: true, DOMMatrix: true, DOMMatrixReadOnly: true, DOMParser: true, DOMPoint: true, DOMPointReadOnly: true, DOMQuad: true, DOMStringMap: true, External: true, FaceDetector: true, FontFaceSource: true, FormData: true, GamepadButton: true, GamepadPose: true, Geolocation: true, Position: true, Headers: true, HTMLHyperlinkElementUtils: true, IdleDeadline: true, ImageBitmap: true, ImageBitmapRenderingContext: true, ImageCapture: true, InputDeviceCapabilities: true, IntersectionObserver: true, IntersectionObserverEntry: true, InterventionReport: true, KeyframeEffect: true, KeyframeEffectReadOnly: true, MediaCapabilities: true, MediaCapabilitiesInfo: true, MediaDeviceInfo: true, MediaError: true, MediaKeyStatusMap: true, MediaKeySystemAccess: true, MediaKeys: true, MediaKeysPolicy: true, MediaMetadata: true, MediaSession: true, MediaSettingsRange: true, MemoryInfo: true, MessageChannel: true, Metadata: true, MutationObserver: true, WebKitMutationObserver: true, MutationRecord: true, NavigationPreloadManager: true, Navigator: true, NavigatorAutomationInformation: true, NavigatorConcurrentHardware: true, NavigatorCookies: true, NodeFilter: true, NodeIterator: true, NonDocumentTypeChildNode: true, NonElementParentNode: true, NoncedElement: true, OffscreenCanvasRenderingContext2D: true, PaintRenderingContext2D: true, PaintSize: true, PaintWorkletGlobalScope: true, Path2D: true, PaymentAddress: true, PaymentInstruments: true, PaymentManager: true, PaymentResponse: true, PerformanceNavigation: true, PerformanceObserver: true, PerformanceObserverEntryList: true, PerformanceTiming: true, Permissions: true, PhotoCapabilities: true, PositionError: true, Presentation: true, PresentationReceiver: true, PushManager: true, PushSubscription: true, PushSubscriptionOptions: true, Range: true, RelatedApplication: true, ReportBody: true, ReportingObserver: true, ResizeObserver: true, ResizeObserverEntry: true, RTCCertificate: true, RTCIceCandidate: true, mozRTCIceCandidate: true, RTCLegacyStatsReport: true, RTCRtpContributingSource: true, RTCRtpReceiver: true, RTCRtpSender: true, RTCSessionDescription: true, mozRTCSessionDescription: true, RTCStatsResponse: true, Screen: true, ScrollState: true, ScrollTimeline: true, Selection: true, SharedArrayBuffer: true, SpeechRecognitionAlternative: true, StaticRange: true, StorageManager: true, StyleMedia: true, StylePropertyMap: true, StylePropertyMapReadonly: true, SyncManager: true, TextDetector: true, TextMetrics: true, TrackDefault: true, TreeWalker: true, TrustedHTML: true, TrustedScriptURL: true, TrustedURL: true, UnderlyingSourceBase: true, URLSearchParams: true, VRCoordinateSystem: true, VRDisplayCapabilities: true, VREyeParameters: true, VRFrameData: true, VRFrameOfReference: true, VRPose: true, VRStageBounds: true, VRStageBoundsPoint: true, VRStageParameters: true, ValidityState: true, VideoPlaybackQuality: true, VideoTrack: true, WindowClient: true, WorkletAnimation: true, WorkletGlobalScope: true, XPathEvaluator: true, XPathExpression: true, XPathNSResolver: true, XPathResult: true, XMLSerializer: true, XSLTProcessor: true, Bluetooth: true, BluetoothCharacteristicProperties: true, BluetoothRemoteGATTServer: true, BluetoothRemoteGATTService: true, BluetoothUUID: true, BudgetService: true, Cache: true, DOMFileSystemSync: true, DirectoryEntrySync: true, DirectoryReaderSync: true, EntrySync: true, FileEntrySync: true, FileReaderSync: true, FileWriterSync: true, HTMLAllCollection: true, Mojo: true, MojoHandle: true, MojoWatcher: true, NFC: true, PagePopupController: true, Report: true, SubtleCrypto: true, USBAlternateInterface: true, USBConfiguration: true, USBDevice: true, USBEndpoint: true, USBInTransferResult: true, USBInterface: true, USBIsochronousInTransferPacket: true, USBIsochronousInTransferResult: true, USBIsochronousOutTransferPacket: true, USBIsochronousOutTransferResult: true, USBOutTransferResult: true, WorkerLocation: true, WorkerNavigator: true, Worklet: true, IDBCursor: true, IDBCursorWithValue: true, IDBFactory: true, IDBObservation: true, IDBObserver: true, IDBObserverChanges: true, SVGAngle: true, SVGAnimatedAngle: true, SVGAnimatedBoolean: true, SVGAnimatedEnumeration: true, SVGAnimatedInteger: true, SVGAnimatedLength: true, SVGAnimatedLengthList: true, SVGAnimatedNumber: true, SVGAnimatedNumberList: true, SVGAnimatedPreserveAspectRatio: true, SVGAnimatedRect: true, SVGAnimatedString: true, SVGAnimatedTransformList: true, SVGMatrix: true, SVGPoint: true, SVGPreserveAspectRatio: true, SVGUnitTypes: true, AudioListener: true, AudioParam: true, AudioTrack: true, AudioWorkletGlobalScope: true, AudioWorkletProcessor: true, PeriodicWave: true, ANGLEInstancedArrays: true, ANGLE_instanced_arrays: true, WebGLBuffer: true, WebGLCanvas: true, WebGLColorBufferFloat: true, WebGLCompressedTextureASTC: true, WebGLCompressedTextureATC: true, WEBGL_compressed_texture_atc: true, WebGLCompressedTextureETC1: true, WEBGL_compressed_texture_etc1: true, WebGLCompressedTextureETC: true, WebGLCompressedTexturePVRTC: true, WEBGL_compressed_texture_pvrtc: true, WebGLCompressedTextureS3TC: true, WEBGL_compressed_texture_s3tc: true, WebGLCompressedTextureS3TCsRGB: true, WebGLDebugRendererInfo: true, WEBGL_debug_renderer_info: true, WebGLDebugShaders: true, WEBGL_debug_shaders: true, WebGLDepthTexture: true, WEBGL_depth_texture: true, WebGLDrawBuffers: true, WEBGL_draw_buffers: true, EXTsRGB: true, EXT_sRGB: true, EXTBlendMinMax: true, EXT_blend_minmax: true, EXTColorBufferFloat: true, EXTColorBufferHalfFloat: true, EXTDisjointTimerQuery: true, EXTDisjointTimerQueryWebGL2: true, EXTFragDepth: true, EXT_frag_depth: true, EXTShaderTextureLOD: true, EXT_shader_texture_lod: true, EXTTextureFilterAnisotropic: true, EXT_texture_filter_anisotropic: true, WebGLFramebuffer: true, WebGLGetBufferSubDataAsync: true, WebGLLoseContext: true, WebGLExtensionLoseContext: true, WEBGL_lose_context: true, OESElementIndexUint: true, OES_element_index_uint: true, OESStandardDerivatives: true, OES_standard_derivatives: true, OESTextureFloat: true, OES_texture_float: true, OESTextureFloatLinear: true, OES_texture_float_linear: true, OESTextureHalfFloat: true, OES_texture_half_float: true, OESTextureHalfFloatLinear: true, OES_texture_half_float_linear: true, OESVertexArrayObject: true, OES_vertex_array_object: true, WebGLProgram: true, WebGLQuery: true, WebGLRenderbuffer: true, WebGLRenderingContext: true, WebGL2RenderingContext: true, WebGLSampler: true, WebGLShader: true, WebGLShaderPrecisionFormat: true, WebGLSync: true, WebGLTexture: true, WebGLTimerQueryEXT: true, WebGLTransformFeedback: true, WebGLUniformLocation: true, WebGLVertexArrayObject: true, WebGLVertexArrayObjectOES: true, WebGL: true, WebGL2RenderingContextBase: true, Database: true, SQLError: true, SQLResultSet: true, SQLTransaction: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLBRElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLLIElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMenuElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLShadowElement: true, HTMLSourceElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, AccessibleNodeList: true, HTMLAnchorElement: true, HTMLAreaElement: true, HTMLBaseElement: true, Blob: false, Body: true, Request: true, Response: true, HTMLBodyElement: true, BroadcastChannel: true, HTMLButtonElement: true, HTMLCanvasElement: true, CanvasRenderingContext2D: true, CDATASection: true, CharacterData: true, Comment: true, ProcessingInstruction: true, Text: true, PublicKeyCredential: true, Credential: false, CredentialUserData: true, CSSKeyframesRule: true, MozCSSKeyframesRule: true, WebKitCSSKeyframesRule: true, CSSPerspective: true, CSSCharsetRule: true, CSSConditionRule: true, CSSFontFaceRule: true, CSSGroupingRule: true, CSSImportRule: true, CSSKeyframeRule: true, MozCSSKeyframeRule: true, WebKitCSSKeyframeRule: true, CSSMediaRule: true, CSSNamespaceRule: true, CSSPageRule: true, CSSStyleRule: true, CSSSupportsRule: true, CSSViewportRule: true, CSSRule: false, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, CSSStyleSheet: true, CSSImageValue: true, CSSKeywordValue: true, CSSNumericValue: true, CSSPositionValue: true, CSSResourceValue: true, CSSUnitValue: true, CSSURLImageValue: true, CSSStyleValue: false, CSSMatrixComponent: true, CSSRotation: true, CSSScale: true, CSSSkew: true, CSSTranslation: true, CSSTransformComponent: false, CSSTransformValue: true, CSSUnparsedValue: true, DataTransferItemList: true, HTMLDivElement: true, Document: true, HTMLDocument: true, XMLDocument: true, DOMError: true, DOMException: true, ClientRectList: true, DOMRectList: true, DOMRectReadOnly: false, DOMStringList: true, DOMTokenList: true, Element: false, HTMLEmbedElement: true, DirectoryEntry: true, Entry: true, FileEntry: true, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MessageEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, StorageEvent: true, SyncEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, MojoInterfaceRequestEvent: true, USBConnectionEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, AbsoluteOrientationSensor: true, Accelerometer: true, AccessibleNode: true, AmbientLightSensor: true, Animation: true, ApplicationCache: true, DOMApplicationCache: true, OfflineResourceList: true, BackgroundFetchRegistration: true, BatteryManager: true, CanvasCaptureMediaStreamTrack: true, EventSource: true, FileReader: true, FontFaceSet: true, Gyroscope: true, LinearAccelerationSensor: true, Magnetometer: true, MediaDevices: true, MediaRecorder: true, MediaSource: true, MediaStream: true, MediaStreamTrack: true, MIDIAccess: true, NetworkInformation: true, Notification: true, OrientationSensor: true, PaymentRequest: true, Performance: true, PermissionStatus: true, PresentationAvailability: true, PresentationConnection: true, PresentationConnectionList: true, PresentationRequest: true, RelativeOrientationSensor: true, RemotePlayback: true, RTCDataChannel: true, DataChannel: true, RTCDTMFSender: true, RTCPeerConnection: true, webkitRTCPeerConnection: true, mozRTCPeerConnection: true, Sensor: true, ServiceWorker: true, ServiceWorkerContainer: true, ServiceWorkerRegistration: true, SharedWorker: true, SpeechRecognition: true, SpeechSynthesis: true, VR: true, VRDevice: true, VRDisplay: true, VRSession: true, VisualViewport: true, WebSocket: true, Worker: true, WorkerPerformance: true, BluetoothDevice: true, BluetoothRemoteGATTCharacteristic: true, Clipboard: true, MojoInterfaceInterceptor: true, USB: true, IDBOpenDBRequest: true, IDBVersionChangeRequest: true, IDBRequest: true, IDBTransaction: true, AnalyserNode: true, RealtimeAnalyserNode: true, AudioBufferSourceNode: true, AudioDestinationNode: true, AudioNode: true, AudioScheduledSourceNode: true, AudioWorkletNode: true, BiquadFilterNode: true, ChannelMergerNode: true, AudioChannelMerger: true, ChannelSplitterNode: true, AudioChannelSplitter: true, ConstantSourceNode: true, ConvolverNode: true, DelayNode: true, DynamicsCompressorNode: true, GainNode: true, AudioGainNode: true, IIRFilterNode: true, MediaElementAudioSourceNode: true, MediaStreamAudioDestinationNode: true, MediaStreamAudioSourceNode: true, OscillatorNode: true, Oscillator: true, PannerNode: true, AudioPannerNode: true, webkitAudioPannerNode: true, ScriptProcessorNode: true, JavaScriptAudioNode: true, StereoPannerNode: true, WaveShaperNode: true, EventTarget: false, FederatedCredential: true, HTMLFieldSetElement: true, File: true, FileList: true, DOMFileSystem: true, FileWriter: true, FontFace: true, HTMLFormElement: true, Gamepad: true, History: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, XMLHttpRequest: true, XMLHttpRequestUpload: true, XMLHttpRequestEventTarget: false, HTMLIFrameElement: true, ImageData: true, HTMLImageElement: true, HTMLInputElement: true, KeyboardEvent: true, HTMLLabelElement: true, Location: true, HTMLMapElement: true, HTMLAudioElement: true, HTMLMediaElement: false, MediaKeySession: true, MediaList: true, MediaQueryList: true, MediaQueryListEvent: true, MessagePort: true, HTMLMetaElement: true, MIDIInputMap: true, MIDIOutputMap: true, MIDIInput: true, MIDIOutput: true, MIDIPort: true, MimeType: true, MimeTypeArray: true, MouseEvent: false, DragEvent: false, NavigatorUserMediaError: true, DocumentFragment: true, ShadowRoot: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, HTMLObjectElement: true, OffscreenCanvas: true, HTMLOutputElement: true, OverconstrainedError: true, HTMLParagraphElement: true, HTMLParamElement: true, PasswordCredential: true, PerformanceEntry: true, PerformanceLongTaskTiming: true, PerformanceMark: true, PerformanceMeasure: true, PerformanceNavigationTiming: true, PerformancePaintTiming: true, PerformanceResourceTiming: true, TaskAttributionTiming: true, PerformanceServerTiming: true, Plugin: true, PluginArray: true, PointerEvent: true, ProgressEvent: true, ResourceProgressEvent: true, PushMessageData: true, RTCStatsReport: true, ScreenOrientation: true, HTMLScriptElement: true, HTMLSelectElement: true, SharedWorkerGlobalScope: true, HTMLSlotElement: true, SourceBuffer: true, SourceBufferList: true, HTMLSpanElement: true, SpeechGrammar: true, SpeechGrammarList: true, SpeechRecognitionResult: true, SpeechSynthesisEvent: true, SpeechSynthesisUtterance: true, SpeechSynthesisVoice: true, Storage: true, HTMLStyleElement: true, StyleSheet: false, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTextAreaElement: true, TextTrack: true, TextTrackCue: false, TextTrackCueList: true, TextTrackList: true, TimeRanges: true, Touch: true, TouchEvent: true, TouchList: true, TrackDefaultList: true, CompositionEvent: true, FocusEvent: true, TextEvent: true, UIEvent: false, URL: true, HTMLVideoElement: true, VideoTrackList: true, VTTCue: true, VTTRegion: true, WheelEvent: true, Window: true, DOMWindow: true, DedicatedWorkerGlobalScope: true, ServiceWorkerGlobalScope: true, WorkerGlobalScope: false, Attr: true, CSSRuleList: true, ClientRect: true, DOMRect: true, GamepadList: true, NamedNodeMap: true, MozNamedAttrMap: true, SpeechRecognitionResultList: true, StyleSheetList: true, IDBDatabase: true, IDBIndex: true, IDBKeyRange: true, IDBObjectStore: true, IDBVersionChangeEvent: true, SVGLength: true, SVGLengthList: true, SVGNumber: true, SVGNumberList: true, SVGPointList: true, SVGRect: true, SVGScriptElement: true, SVGStringList: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, SVGElement: false, SVGTransform: true, SVGTransformList: true, AudioBuffer: true, AudioParamMap: true, AudioTrackList: true, AudioContext: true, webkitAudioContext: true, BaseAudioContext: false, OfflineAudioContext: true, WebGLActiveInfo: true, SQLResultSetRowList: true});
    H.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
    W._SourceBufferList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    W._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
    W._TextTrackList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    W._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
  })();
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$0 = function() {
    return this();
  };
  Function.prototype.call$5 = function(a, b, c, d, e) {
    return this(a, b, c, d, e);
  };
  Function.prototype.call$2$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$5 = function(a, b, c, d, e) {
    return this(a, b, c, d, e);
  };
  Function.prototype.call$2$0 = function() {
    return this();
  };
  Function.prototype.call$9 = function(a, b, c, d, e, f, g, h, i) {
    return this(a, b, c, d, e, f, g, h, i);
  };
  Function.prototype.call$7 = function(a, b, c, d, e, f, g) {
    return this(a, b, c, d, e, f, g);
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = F.main;
    if (typeof dartMainRunner === "function")
      dartMainRunner(callMain, []);
    else
      callMain([]);
  });
})();

//# sourceMappingURL=main.dart.js.map
